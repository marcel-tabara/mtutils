{
  "service_name": "autoscaling-plans",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/autoscaling-plans/index.html",
  "service_commands": [
    {
      "command_name": "create-scaling-plan",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/autoscaling-plans/create-scaling-plan.html",
      "command_description": "Description\n\nCreates a scaling plan.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-scaling-plan\n--scaling-plan-name <value>\n--application-source <value>\n--scaling-instructions <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--scaling-plan-name <value>",
        "--application-source <value>",
        "--scaling-instructions <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--scaling-plan-name (string)\n\nThe name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.\n\n--application-source (structure)\n\nA CloudFormation stack or set of tags. You can create one scaling plan per application source.\n\nFor more information, see ApplicationSource in the AWS Auto Scaling API Reference .\n\nCloudFormationStackARN -> (string)\n\nThe Amazon Resource Name (ARN) of a AWS CloudFormation stack.\n\nTagFilters -> (list)\n\nA set of tags (up to 50).\n\n(structure)\n\nRepresents a tag.\n\nKey -> (string)\n\nThe tag key.\n\nValues -> (list)\n\nThe tag values (0 to 20).\n\n(string)\n\nJSON Syntax:\n\n{\n  \"CloudFormationStackARN\": \"string\",\n  \"TagFilters\": [\n    {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...]\n    }\n    ...\n  ]\n}\n\n\n--scaling-instructions (list)\n\nThe scaling instructions.\n\nFor more information, see ScalingInstruction in the AWS Auto Scaling API Reference .\n\n(structure)\n\nDescribes a scaling instruction for a scalable resource in a scaling plan. Each scaling instruction applies to one resource.\n\nAWS Auto Scaling creates target tracking scaling policies based on the scaling instructions. Target tracking scaling policies adjust the capacity of your scalable resource as required to maintain resource utilization at the target value that you specified.\n\nAWS Auto Scaling also configures predictive scaling for your Amazon EC2 Auto Scaling groups using a subset of parameters, including the load metric, the scaling metric, the target value for the scaling metric, the predictive scaling mode (forecast and scale or forecast only), and the desired behavior when the forecast capacity exceeds the maximum capacity of the resource. With predictive scaling, AWS Auto Scaling generates forecasts with traffic predictions for the two days ahead and schedules scaling actions that proactively add and remove resource capacity to match the forecast.\n\nWarning\n\nWe recommend waiting a minimum of 24 hours after creating an Auto Scaling group to configure predictive scaling. At minimum, there must be 24 hours of historical data to generate a forecast. For more information, see Best Practices for AWS Auto Scaling in the AWS Auto Scaling User Guide .\n\nServiceNamespace -> (string)\n\nThe namespace of the AWS service.\n\nResourceId -> (string)\n\nThe ID of the resource. This string consists of the resource type and unique identifier.\n\nAuto Scaling group - The resource type is autoScalingGroup and the unique identifier is the name of the Auto Scaling group. Example: autoScalingGroup/my-asg .\n\nECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/default/sample-webapp .\n\nSpot Fleet request - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE .\n\nDynamoDB table - The resource type is table and the unique identifier is the resource ID. Example: table/my-table .\n\nDynamoDB global secondary index - The resource type is index and the unique identifier is the resource ID. Example: table/my-table/index/my-table-index .\n\nAurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster .\n\nScalableDimension -> (string)\n\nThe scalable dimension associated with the resource.\n\nautoscaling:autoScalingGroup:DesiredCapacity - The desired capacity of an Auto Scaling group.\n\necs:service:DesiredCount - The desired task count of an ECS service.\n\nec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet request.\n\ndynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.\n\ndynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.\n\ndynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.\n\ndynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.\n\nrds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.\n\nMinCapacity -> (integer)\n\nThe minimum capacity of the resource.\n\nMaxCapacity -> (integer)\n\nThe maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for PredictiveScalingMaxCapacityBehavior .\n\nTargetTrackingConfigurations -> (list)\n\nThe target tracking configurations (up to 10). Each of these structures must specify a unique scaling metric and a target value for the metric.\n\n(structure)\n\nDescribes a target tracking configuration to use with AWS Auto Scaling. Used with ScalingInstruction and ScalingPolicy .\n\nPredefinedScalingMetricSpecification -> (structure)\n\nA predefined metric. You can specify either a predefined metric or a customized metric.\n\nPredefinedScalingMetricType -> (string)\n\nThe metric type. The ALBRequestCountPerTarget metric type applies only to Auto Scaling groups, Spot Fleet requests, and ECS services.\n\nResourceLabel -> (string)\n\nIdentifies the resource associated with the metric type. You can’t specify a resource label unless the metric type is ALBRequestCountPerTarget and there is a target group for an Application Load Balancer attached to the Auto Scaling group, Spot Fleet request, or ECS service.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format is app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>, where:\n\napp/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n\ntargetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nThis is an example: app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.\n\nTo find the ARN for an Application Load Balancer, use the DescribeLoadBalancers API operation. To find the ARN for the target group, use the DescribeTargetGroups API operation.\n\nCustomizedScalingMetricSpecification -> (structure)\n\nA customized metric. You can specify either a predefined metric or a customized metric.\n\nMetricName -> (string)\n\nThe name of the metric.\n\nNamespace -> (string)\n\nThe namespace of the metric.\n\nDimensions -> (list)\n\nThe dimensions of the metric.\n\nConditional: If you published your metric with dimensions, you must specify the same dimensions in your customized scaling metric specification.\n\n(structure)\n\nRepresents a dimension for a customized metric.\n\nName -> (string)\n\nThe name of the dimension.\n\nValue -> (string)\n\nThe value of the dimension.\n\nStatistic -> (string)\n\nThe statistic of the metric.\n\nUnit -> (string)\n\nThe unit of the metric.\n\nTargetValue -> (double)\n\nThe target value for the metric. Although this property accepts numbers of type Double, it won’t accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360.\n\nDisableScaleIn -> (boolean)\n\nIndicates whether scale in by the target tracking scaling policy is disabled. If the value is true , scale in is disabled and the target tracking scaling policy doesn’t remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable resource.\n\nThe default value is false .\n\nScaleOutCooldown -> (integer)\n\nThe amount of time, in seconds, to wait for a previous scale-out activity to take effect. This property is not used if the scalable resource is an Auto Scaling group.\n\nWith the scale-out cooldown period , the intention is to continuously (but not excessively) scale out. After Auto Scaling successfully scales out using a target tracking scaling policy, it starts to calculate the cooldown time. The scaling policy won’t increase the desired capacity again unless either a larger scale out is triggered or the cooldown period ends.\n\nScaleInCooldown -> (integer)\n\nThe amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start. This property is not used if the scalable resource is an Auto Scaling group.\n\nWith the scale-in cooldown period , the intention is to scale in conservatively to protect your application’s availability, so scale-in activities are blocked until the cooldown period has expired. However, if another alarm triggers a scale-out activity during the scale-in cooldown period, Auto Scaling scales out the target immediately. In this case, the scale-in cooldown period stops and doesn’t complete.\n\nEstimatedInstanceWarmup -> (integer)\n\nThe estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. This value is used only if the resource is an Auto Scaling group.\n\nPredefinedLoadMetricSpecification -> (structure)\n\nThe predefined load metric to use for predictive scaling. This parameter or a CustomizedLoadMetricSpecification is required when configuring predictive scaling, and cannot be used otherwise.\n\nPredefinedLoadMetricType -> (string)\n\nThe metric type.\n\nResourceLabel -> (string)\n\nIdentifies the resource associated with the metric type. You can’t specify a resource label unless the metric type is ALBTargetGroupRequestCount and there is a target group for an Application Load Balancer attached to the Auto Scaling group.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format is app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>, where:\n\napp/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n\ntargetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nThis is an example: app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.\n\nTo find the ARN for an Application Load Balancer, use the DescribeLoadBalancers API operation. To find the ARN for the target group, use the DescribeTargetGroups API operation.\n\nCustomizedLoadMetricSpecification -> (structure)\n\nThe customized load metric to use for predictive scaling. This parameter or a PredefinedLoadMetricSpecification is required when configuring predictive scaling, and cannot be used otherwise.\n\nMetricName -> (string)\n\nThe name of the metric.\n\nNamespace -> (string)\n\nThe namespace of the metric.\n\nDimensions -> (list)\n\nThe dimensions of the metric.\n\nConditional: If you published your metric with dimensions, you must specify the same dimensions in your customized load metric specification.\n\n(structure)\n\nRepresents a dimension for a customized metric.\n\nName -> (string)\n\nThe name of the dimension.\n\nValue -> (string)\n\nThe value of the dimension.\n\nStatistic -> (string)\n\nThe statistic of the metric. The only valid value is Sum .\n\nUnit -> (string)\n\nThe unit of the metric.\n\nScheduledActionBufferTime -> (integer)\n\nThe amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out. For example, if the forecast says to add capacity at 10:00 AM, and the buffer time is 5 minutes, then the run time of the corresponding scheduled scaling action will be 9:55 AM. The intention is to give resources time to be provisioned. For example, it can take a few minutes to launch an EC2 instance. The actual amount of time required depends on several factors, such as the size of the instance and whether there are startup scripts to complete.\n\nThe value must be less than the forecast interval duration of 3600 seconds (60 minutes). The default is 300 seconds.\n\nOnly valid when configuring predictive scaling.\n\nPredictiveScalingMaxCapacityBehavior -> (string)\n\nDefines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource. The default value is SetForecastCapacityToMaxCapacity .\n\nThe following are possible values:\n\nSetForecastCapacityToMaxCapacity - AWS Auto Scaling cannot scale resource capacity higher than the maximum capacity. The maximum capacity is enforced as a hard limit.\n\nSetMaxCapacityToForecastCapacity - AWS Auto Scaling may scale resource capacity higher than the maximum capacity to equal but not exceed forecast capacity.\n\nSetMaxCapacityAboveForecastCapacity - AWS Auto Scaling may scale resource capacity higher than the maximum capacity by a specified buffer value. The intention is to give the target tracking scaling policy extra capacity if unexpected traffic occurs.\n\nOnly valid when configuring predictive scaling.\n\nPredictiveScalingMaxCapacityBuffer -> (integer)\n\nThe size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.\n\nOnly valid when configuring predictive scaling. Required if the PredictiveScalingMaxCapacityBehavior is set to SetMaxCapacityAboveForecastCapacity , and cannot be used otherwise.\n\nThe range is 1-100.\n\nPredictiveScalingMode -> (string)\n\nThe predictive scaling mode. The default value is ForecastAndScale . Otherwise, AWS Auto Scaling forecasts capacity but does not create any scheduled scaling actions based on the capacity forecast.\n\nScalingPolicyUpdateBehavior -> (string)\n\nControls whether a resource’s externally created scaling policies are kept or replaced.\n\nThe default value is KeepExternalPolicies . If the parameter is set to ReplaceExternalPolicies , any scaling policies that are external to AWS Auto Scaling are deleted and new target tracking scaling policies created.\n\nOnly valid when configuring dynamic scaling.\n\nCondition: The number of existing policies to be replaced must be less than or equal to 50. If there are more than 50 policies to be replaced, AWS Auto Scaling keeps all existing policies and does not create new ones.\n\nDisableDynamicScaling -> (boolean)\n\nControls whether dynamic scaling by AWS Auto Scaling is disabled. When dynamic scaling is enabled, AWS Auto Scaling creates target tracking scaling policies based on the specified target tracking configurations.\n\nThe default is enabled (false ).\n\nJSON Syntax:\n\n[\n  {\n    \"ServiceNamespace\": \"autoscaling\"|\"ecs\"|\"ec2\"|\"rds\"|\"dynamodb\",\n    \"ResourceId\": \"string\",\n    \"ScalableDimension\": \"autoscaling:autoScalingGroup:DesiredCapacity\"|\"ecs:service:DesiredCount\"|\"ec2:spot-fleet-request:TargetCapacity\"|\"rds:cluster:ReadReplicaCount\"|\"dynamodb:table:ReadCapacityUnits\"|\"dynamodb:table:WriteCapacityUnits\"|\"dynamodb:index:ReadCapacityUnits\"|\"dynamodb:index:WriteCapacityUnits\",\n    \"MinCapacity\": integer,\n    \"MaxCapacity\": integer,\n    \"TargetTrackingConfigurations\": [\n      {\n        \"PredefinedScalingMetricSpecification\": {\n          \"PredefinedScalingMetricType\": \"ASGAverageCPUUtilization\"|\"ASGAverageNetworkIn\"|\"ASGAverageNetworkOut\"|\"DynamoDBReadCapacityUtilization\"|\"DynamoDBWriteCapacityUtilization\"|\"ECSServiceAverageCPUUtilization\"|\"ECSServiceAverageMemoryUtilization\"|\"ALBRequestCountPerTarget\"|\"RDSReaderAverageCPUUtilization\"|\"RDSReaderAverageDatabaseConnections\"|\"EC2SpotFleetRequestAverageCPUUtilization\"|\"EC2SpotFleetRequestAverageNetworkIn\"|\"EC2SpotFleetRequestAverageNetworkOut\",\n          \"ResourceLabel\": \"string\"\n        },\n        \"CustomizedScalingMetricSpecification\": {\n          \"MetricName\": \"string\",\n          \"Namespace\": \"string\",\n          \"Dimensions\": [\n            {\n              \"Name\": \"string\",\n              \"Value\": \"string\"\n            }\n            ...\n          ],\n          \"Statistic\": \"Average\"|\"Minimum\"|\"Maximum\"|\"SampleCount\"|\"Sum\",\n          \"Unit\": \"string\"\n        },\n        \"TargetValue\": double,\n        \"DisableScaleIn\": true|false,\n        \"ScaleOutCooldown\": integer,\n        \"ScaleInCooldown\": integer,\n        \"EstimatedInstanceWarmup\": integer\n      }\n      ...\n    ],\n    \"PredefinedLoadMetricSpecification\": {\n      \"PredefinedLoadMetricType\": \"ASGTotalCPUUtilization\"|\"ASGTotalNetworkIn\"|\"ASGTotalNetworkOut\"|\"ALBTargetGroupRequestCount\",\n      \"ResourceLabel\": \"string\"\n    },\n    \"CustomizedLoadMetricSpecification\": {\n      \"MetricName\": \"string\",\n      \"Namespace\": \"string\",\n      \"Dimensions\": [\n        {\n          \"Name\": \"string\",\n          \"Value\": \"string\"\n        }\n        ...\n      ],\n      \"Statistic\": \"Average\"|\"Minimum\"|\"Maximum\"|\"SampleCount\"|\"Sum\",\n      \"Unit\": \"string\"\n    },\n    \"ScheduledActionBufferTime\": integer,\n    \"PredictiveScalingMaxCapacityBehavior\": \"SetForecastCapacityToMaxCapacity\"|\"SetMaxCapacityToForecastCapacity\"|\"SetMaxCapacityAboveForecastCapacity\",\n    \"PredictiveScalingMaxCapacityBuffer\": integer,\n    \"PredictiveScalingMode\": \"ForecastAndScale\"|\"ForecastOnly\",\n    \"ScalingPolicyUpdateBehavior\": \"KeepExternalPolicies\"|\"ReplaceExternalPolicies\",\n    \"DisableDynamicScaling\": true|false\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nScalingPlanVersion -> (long)\n\nThe version number of the scaling plan. This value is always 1 . Currently, you cannot have multiple scaling plan versions.",
      "command_examples": "Examples\n\nTo create a scaling plan\n\nThe following create-scaling-plan example creates a scaling plan named my-scaling-plan using an already-created JSON file (named config.json). The structure of the scaling plan includes a scaling instruction for an Auto Scaling group named my-asg. It specifies the TagFilters property as the application source and enables predictive scaling and dynamic scaling.\n\naws autoscaling-plans create-scaling-plan \\\n    --scaling-plan-name my-scaling-plan \\\n    --cli-input-json file://~/config.json\n\n\nContents of config.json file:\n\n{\n    \"ApplicationSource\": {\n        \"TagFilters\": [\n            {\n                \"Key\": \"purpose\",\n                \"Values\": [\n                    \"my-application\"\n                ]\n            }\n        ]\n    },\n    \"ScalingInstructions\": [\n        {\n            \"ServiceNamespace\": \"autoscaling\",\n            \"ResourceId\": \"autoScalingGroup/my-asg\",\n            \"ScalableDimension\": \"autoscaling:autoScalingGroup:DesiredCapacity\",\n            \"ScheduledActionBufferTime\": 300,\n            \"PredictiveScalingMaxCapacityBehavior\": \"SetForecastCapacityToMaxCapacity\",\n            \"PredictiveScalingMode\": \"ForecastAndScale\",\n            \"PredefinedLoadMetricSpecification\": {\n                \"PredefinedLoadMetricType\": \"ASGTotalCPUUtilization\"\n            },\n            \"ScalingPolicyUpdateBehavior\": \"ReplaceExternalPolicies\",\n            \"MinCapacity\": 1,\n            \"MaxCapacity\": 4,\n            \"TargetTrackingConfigurations\": [\n                {\n                    \"PredefinedScalingMetricSpecification\": {\n                        \"PredefinedScalingMetricType\": \"ASGAverageCPUUtilization\"\n                    },\n                    \"TargetValue\": 50\n                }\n            ]\n        }\n    ]\n}\n\n\nOutput:\n\n{\n\"ScalingPlanVersion\": 1\n}\n\n\nFor more information, see the AWS Auto Scaling User Guide."
    },
    {
      "command_name": "delete-scaling-plan",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/autoscaling-plans/delete-scaling-plan.html",
      "command_description": "Description\n\nDeletes the specified scaling plan.\n\nDeleting a scaling plan deletes the underlying ScalingInstruction for all of the scalable resources that are covered by the plan.\n\nIf the plan has launched resources or has scaling activities in progress, you must delete those resources separately.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-scaling-plan\n--scaling-plan-name <value>\n--scaling-plan-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--scaling-plan-name <value>",
        "--scaling-plan-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--scaling-plan-name (string)\n\nThe name of the scaling plan.\n\n--scaling-plan-version (long)\n\nThe version number of the scaling plan. Currently, the only valid value is 1 .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a scaling plan\n\nThe following delete-scaling-plan example deletes the specified scaling plan.\n\naws autoscaling-plans delete-scaling-plan \\\n    --scaling-plan-name my-scaling-plan \\\n    --scaling-plan-version 1\n\n\nThis command produces no output.\n\nFor more information, see the AWS Auto Scaling User Guide."
    },
    {
      "command_name": "describe-scaling-plan-resources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/autoscaling-plans/describe-scaling-plan-resources.html",
      "command_description": "Description\n\nDescribes the scalable resources in the specified scaling plan.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-scaling-plan-resources is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ScalingPlanResources",
      "command_synopsis": "Synopsis\n  describe-scaling-plan-resources\n--scaling-plan-name <value>\n--scaling-plan-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--scaling-plan-name <value>",
        "--scaling-plan-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--scaling-plan-name (string)\n\nThe name of the scaling plan.\n\n--scaling-plan-version (long)\n\nThe version number of the scaling plan. Currently, the only valid value is 1 .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nScalingPlanResources -> (list)\n\nInformation about the scalable resources.\n\n(structure)\n\nRepresents a scalable resource.\n\nScalingPlanName -> (string)\n\nThe name of the scaling plan.\n\nScalingPlanVersion -> (long)\n\nThe version number of the scaling plan.\n\nServiceNamespace -> (string)\n\nThe namespace of the AWS service.\n\nResourceId -> (string)\n\nThe ID of the resource. This string consists of the resource type and unique identifier.\n\nAuto Scaling group - The resource type is autoScalingGroup and the unique identifier is the name of the Auto Scaling group. Example: autoScalingGroup/my-asg .\n\nECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/default/sample-webapp .\n\nSpot Fleet request - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE .\n\nDynamoDB table - The resource type is table and the unique identifier is the resource ID. Example: table/my-table .\n\nDynamoDB global secondary index - The resource type is index and the unique identifier is the resource ID. Example: table/my-table/index/my-table-index .\n\nAurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster .\n\nScalableDimension -> (string)\n\nThe scalable dimension for the resource.\n\nautoscaling:autoScalingGroup:DesiredCapacity - The desired capacity of an Auto Scaling group.\n\necs:service:DesiredCount - The desired task count of an ECS service.\n\nec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet request.\n\ndynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.\n\ndynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.\n\ndynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.\n\ndynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.\n\nrds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.\n\nScalingPolicies -> (list)\n\nThe scaling policies.\n\n(structure)\n\nRepresents a scaling policy.\n\nPolicyName -> (string)\n\nThe name of the scaling policy.\n\nPolicyType -> (string)\n\nThe type of scaling policy.\n\nTargetTrackingConfiguration -> (structure)\n\nThe target tracking scaling policy. Includes support for predefined or customized metrics.\n\nPredefinedScalingMetricSpecification -> (structure)\n\nA predefined metric. You can specify either a predefined metric or a customized metric.\n\nPredefinedScalingMetricType -> (string)\n\nThe metric type. The ALBRequestCountPerTarget metric type applies only to Auto Scaling groups, Spot Fleet requests, and ECS services.\n\nResourceLabel -> (string)\n\nIdentifies the resource associated with the metric type. You can’t specify a resource label unless the metric type is ALBRequestCountPerTarget and there is a target group for an Application Load Balancer attached to the Auto Scaling group, Spot Fleet request, or ECS service.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format is app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>, where:\n\napp/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n\ntargetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nThis is an example: app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.\n\nTo find the ARN for an Application Load Balancer, use the DescribeLoadBalancers API operation. To find the ARN for the target group, use the DescribeTargetGroups API operation.\n\nCustomizedScalingMetricSpecification -> (structure)\n\nA customized metric. You can specify either a predefined metric or a customized metric.\n\nMetricName -> (string)\n\nThe name of the metric.\n\nNamespace -> (string)\n\nThe namespace of the metric.\n\nDimensions -> (list)\n\nThe dimensions of the metric.\n\nConditional: If you published your metric with dimensions, you must specify the same dimensions in your customized scaling metric specification.\n\n(structure)\n\nRepresents a dimension for a customized metric.\n\nName -> (string)\n\nThe name of the dimension.\n\nValue -> (string)\n\nThe value of the dimension.\n\nStatistic -> (string)\n\nThe statistic of the metric.\n\nUnit -> (string)\n\nThe unit of the metric.\n\nTargetValue -> (double)\n\nThe target value for the metric. Although this property accepts numbers of type Double, it won’t accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360.\n\nDisableScaleIn -> (boolean)\n\nIndicates whether scale in by the target tracking scaling policy is disabled. If the value is true , scale in is disabled and the target tracking scaling policy doesn’t remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable resource.\n\nThe default value is false .\n\nScaleOutCooldown -> (integer)\n\nThe amount of time, in seconds, to wait for a previous scale-out activity to take effect. This property is not used if the scalable resource is an Auto Scaling group.\n\nWith the scale-out cooldown period , the intention is to continuously (but not excessively) scale out. After Auto Scaling successfully scales out using a target tracking scaling policy, it starts to calculate the cooldown time. The scaling policy won’t increase the desired capacity again unless either a larger scale out is triggered or the cooldown period ends.\n\nScaleInCooldown -> (integer)\n\nThe amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start. This property is not used if the scalable resource is an Auto Scaling group.\n\nWith the scale-in cooldown period , the intention is to scale in conservatively to protect your application’s availability, so scale-in activities are blocked until the cooldown period has expired. However, if another alarm triggers a scale-out activity during the scale-in cooldown period, Auto Scaling scales out the target immediately. In this case, the scale-in cooldown period stops and doesn’t complete.\n\nEstimatedInstanceWarmup -> (integer)\n\nThe estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. This value is used only if the resource is an Auto Scaling group.\n\nScalingStatusCode -> (string)\n\nThe scaling status of the resource.\n\nActive - The scaling configuration is active.\n\nInactive - The scaling configuration is not active because the scaling plan is being created or the scaling configuration could not be applied. Check the status message for more information.\n\nPartiallyActive - The scaling configuration is partially active because the scaling plan is being created or deleted or the scaling configuration could not be fully applied. Check the status message for more information.\n\nScalingStatusMessage -> (string)\n\nA simple message about the current scaling status of the resource.\n\nNextToken -> (string)\n\nThe token required to get the next set of results. This value is null if there are no more results to return.",
      "command_examples": "Examples\n\nTo describe the scalable resources for a scaling plan\n\nThe following describe-scaling-plan-resources example displays details about the single scalable resource (an Auto Scaling group) that is associated with the specified scaling plan.\n\naws autoscaling-plans describe-scaling-plan-resources \\\n    --scaling-plan-name my-scaling-plan \\\n    --scaling-plan-version 1\n\n\nOutput:\n\n{\n    \"ScalingPlanResources\": [\n        {\n            \"ScalableDimension\": \"autoscaling:autoScalingGroup:DesiredCapacity\",\n            \"ScalingPlanVersion\": 1,\n            \"ResourceId\": \"autoScalingGroup/my-asg\",\n            \"ScalingStatusCode\": \"Active\",\n            \"ScalingStatusMessage\": \"Target tracking scaling policies have been applied to the resource.\",\n            \"ScalingPolicies\": [\n                {\n                    \"PolicyName\": \"AutoScaling-my-asg-b1ab65ae-4be3-4634-bd64-c7471662b251\",\n                    \"PolicyType\": \"TargetTrackingScaling\",\n                    \"TargetTrackingConfiguration\": {\n                        \"PredefinedScalingMetricSpecification\": {\n                            \"PredefinedScalingMetricType\": \"ALBRequestCountPerTarget\",\n                            \"ResourceLabel\": \"app/my-alb/f37c06a68c1748aa/targetgroup/my-target-group/6d4ea56ca2d6a18d\"\n                        },\n                        \"TargetValue\": 40.0\n                    }\n                }\n            ],\n            \"ServiceNamespace\": \"autoscaling\",\n            \"ScalingPlanName\": \"my-scaling-plan\"\n        }\n    ]\n}\n\n\nFor more information, see What Is AWS Auto Scaling? in the AWS Auto Scaling User Guide."
    },
    {
      "command_name": "describe-scaling-plans",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/autoscaling-plans/describe-scaling-plans.html",
      "command_description": "Description\n\nDescribes one or more of your scaling plans.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-scaling-plans is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ScalingPlans",
      "command_synopsis": "Synopsis\n  describe-scaling-plans\n[--scaling-plan-names <value>]\n[--scaling-plan-version <value>]\n[--application-sources <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--scaling-plan-names <value>]",
        "[--scaling-plan-version <value>]",
        "[--application-sources <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--scaling-plan-names (list)\n\nThe names of the scaling plans (up to 10). If you specify application sources, you cannot specify scaling plan names.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--scaling-plan-version (long)\n\nThe version number of the scaling plan. Currently, the only valid value is 1 .\n\nNote\n\nIf you specify a scaling plan version, you must also specify a scaling plan name.\n\n--application-sources (list)\n\nThe sources for the applications (up to 10). If you specify scaling plan names, you cannot specify application sources.\n\n(structure)\n\nRepresents an application source.\n\nCloudFormationStackARN -> (string)\n\nThe Amazon Resource Name (ARN) of a AWS CloudFormation stack.\n\nTagFilters -> (list)\n\nA set of tags (up to 50).\n\n(structure)\n\nRepresents a tag.\n\nKey -> (string)\n\nThe tag key.\n\nValues -> (list)\n\nThe tag values (0 to 20).\n\n(string)\n\nJSON Syntax:\n\n[\n  {\n    \"CloudFormationStackARN\": \"string\",\n    \"TagFilters\": [\n      {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...]\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nScalingPlans -> (list)\n\nInformation about the scaling plans.\n\n(structure)\n\nRepresents a scaling plan.\n\nScalingPlanName -> (string)\n\nThe name of the scaling plan.\n\nScalingPlanVersion -> (long)\n\nThe version number of the scaling plan.\n\nApplicationSource -> (structure)\n\nA CloudFormation stack or a set of tags. You can create one scaling plan per application source.\n\nCloudFormationStackARN -> (string)\n\nThe Amazon Resource Name (ARN) of a AWS CloudFormation stack.\n\nTagFilters -> (list)\n\nA set of tags (up to 50).\n\n(structure)\n\nRepresents a tag.\n\nKey -> (string)\n\nThe tag key.\n\nValues -> (list)\n\nThe tag values (0 to 20).\n\n(string)\n\nScalingInstructions -> (list)\n\nThe scaling instructions.\n\n(structure)\n\nDescribes a scaling instruction for a scalable resource in a scaling plan. Each scaling instruction applies to one resource.\n\nAWS Auto Scaling creates target tracking scaling policies based on the scaling instructions. Target tracking scaling policies adjust the capacity of your scalable resource as required to maintain resource utilization at the target value that you specified.\n\nAWS Auto Scaling also configures predictive scaling for your Amazon EC2 Auto Scaling groups using a subset of parameters, including the load metric, the scaling metric, the target value for the scaling metric, the predictive scaling mode (forecast and scale or forecast only), and the desired behavior when the forecast capacity exceeds the maximum capacity of the resource. With predictive scaling, AWS Auto Scaling generates forecasts with traffic predictions for the two days ahead and schedules scaling actions that proactively add and remove resource capacity to match the forecast.\n\nWarning\n\nWe recommend waiting a minimum of 24 hours after creating an Auto Scaling group to configure predictive scaling. At minimum, there must be 24 hours of historical data to generate a forecast. For more information, see Best Practices for AWS Auto Scaling in the AWS Auto Scaling User Guide .\n\nServiceNamespace -> (string)\n\nThe namespace of the AWS service.\n\nResourceId -> (string)\n\nThe ID of the resource. This string consists of the resource type and unique identifier.\n\nAuto Scaling group - The resource type is autoScalingGroup and the unique identifier is the name of the Auto Scaling group. Example: autoScalingGroup/my-asg .\n\nECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/default/sample-webapp .\n\nSpot Fleet request - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE .\n\nDynamoDB table - The resource type is table and the unique identifier is the resource ID. Example: table/my-table .\n\nDynamoDB global secondary index - The resource type is index and the unique identifier is the resource ID. Example: table/my-table/index/my-table-index .\n\nAurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster .\n\nScalableDimension -> (string)\n\nThe scalable dimension associated with the resource.\n\nautoscaling:autoScalingGroup:DesiredCapacity - The desired capacity of an Auto Scaling group.\n\necs:service:DesiredCount - The desired task count of an ECS service.\n\nec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet request.\n\ndynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.\n\ndynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.\n\ndynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.\n\ndynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.\n\nrds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.\n\nMinCapacity -> (integer)\n\nThe minimum capacity of the resource.\n\nMaxCapacity -> (integer)\n\nThe maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for PredictiveScalingMaxCapacityBehavior .\n\nTargetTrackingConfigurations -> (list)\n\nThe target tracking configurations (up to 10). Each of these structures must specify a unique scaling metric and a target value for the metric.\n\n(structure)\n\nDescribes a target tracking configuration to use with AWS Auto Scaling. Used with ScalingInstruction and ScalingPolicy .\n\nPredefinedScalingMetricSpecification -> (structure)\n\nA predefined metric. You can specify either a predefined metric or a customized metric.\n\nPredefinedScalingMetricType -> (string)\n\nThe metric type. The ALBRequestCountPerTarget metric type applies only to Auto Scaling groups, Spot Fleet requests, and ECS services.\n\nResourceLabel -> (string)\n\nIdentifies the resource associated with the metric type. You can’t specify a resource label unless the metric type is ALBRequestCountPerTarget and there is a target group for an Application Load Balancer attached to the Auto Scaling group, Spot Fleet request, or ECS service.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format is app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>, where:\n\napp/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n\ntargetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nThis is an example: app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.\n\nTo find the ARN for an Application Load Balancer, use the DescribeLoadBalancers API operation. To find the ARN for the target group, use the DescribeTargetGroups API operation.\n\nCustomizedScalingMetricSpecification -> (structure)\n\nA customized metric. You can specify either a predefined metric or a customized metric.\n\nMetricName -> (string)\n\nThe name of the metric.\n\nNamespace -> (string)\n\nThe namespace of the metric.\n\nDimensions -> (list)\n\nThe dimensions of the metric.\n\nConditional: If you published your metric with dimensions, you must specify the same dimensions in your customized scaling metric specification.\n\n(structure)\n\nRepresents a dimension for a customized metric.\n\nName -> (string)\n\nThe name of the dimension.\n\nValue -> (string)\n\nThe value of the dimension.\n\nStatistic -> (string)\n\nThe statistic of the metric.\n\nUnit -> (string)\n\nThe unit of the metric.\n\nTargetValue -> (double)\n\nThe target value for the metric. Although this property accepts numbers of type Double, it won’t accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360.\n\nDisableScaleIn -> (boolean)\n\nIndicates whether scale in by the target tracking scaling policy is disabled. If the value is true , scale in is disabled and the target tracking scaling policy doesn’t remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable resource.\n\nThe default value is false .\n\nScaleOutCooldown -> (integer)\n\nThe amount of time, in seconds, to wait for a previous scale-out activity to take effect. This property is not used if the scalable resource is an Auto Scaling group.\n\nWith the scale-out cooldown period , the intention is to continuously (but not excessively) scale out. After Auto Scaling successfully scales out using a target tracking scaling policy, it starts to calculate the cooldown time. The scaling policy won’t increase the desired capacity again unless either a larger scale out is triggered or the cooldown period ends.\n\nScaleInCooldown -> (integer)\n\nThe amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start. This property is not used if the scalable resource is an Auto Scaling group.\n\nWith the scale-in cooldown period , the intention is to scale in conservatively to protect your application’s availability, so scale-in activities are blocked until the cooldown period has expired. However, if another alarm triggers a scale-out activity during the scale-in cooldown period, Auto Scaling scales out the target immediately. In this case, the scale-in cooldown period stops and doesn’t complete.\n\nEstimatedInstanceWarmup -> (integer)\n\nThe estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. This value is used only if the resource is an Auto Scaling group.\n\nPredefinedLoadMetricSpecification -> (structure)\n\nThe predefined load metric to use for predictive scaling. This parameter or a CustomizedLoadMetricSpecification is required when configuring predictive scaling, and cannot be used otherwise.\n\nPredefinedLoadMetricType -> (string)\n\nThe metric type.\n\nResourceLabel -> (string)\n\nIdentifies the resource associated with the metric type. You can’t specify a resource label unless the metric type is ALBTargetGroupRequestCount and there is a target group for an Application Load Balancer attached to the Auto Scaling group.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format is app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>, where:\n\napp/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n\ntargetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nThis is an example: app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.\n\nTo find the ARN for an Application Load Balancer, use the DescribeLoadBalancers API operation. To find the ARN for the target group, use the DescribeTargetGroups API operation.\n\nCustomizedLoadMetricSpecification -> (structure)\n\nThe customized load metric to use for predictive scaling. This parameter or a PredefinedLoadMetricSpecification is required when configuring predictive scaling, and cannot be used otherwise.\n\nMetricName -> (string)\n\nThe name of the metric.\n\nNamespace -> (string)\n\nThe namespace of the metric.\n\nDimensions -> (list)\n\nThe dimensions of the metric.\n\nConditional: If you published your metric with dimensions, you must specify the same dimensions in your customized load metric specification.\n\n(structure)\n\nRepresents a dimension for a customized metric.\n\nName -> (string)\n\nThe name of the dimension.\n\nValue -> (string)\n\nThe value of the dimension.\n\nStatistic -> (string)\n\nThe statistic of the metric. The only valid value is Sum .\n\nUnit -> (string)\n\nThe unit of the metric.\n\nScheduledActionBufferTime -> (integer)\n\nThe amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out. For example, if the forecast says to add capacity at 10:00 AM, and the buffer time is 5 minutes, then the run time of the corresponding scheduled scaling action will be 9:55 AM. The intention is to give resources time to be provisioned. For example, it can take a few minutes to launch an EC2 instance. The actual amount of time required depends on several factors, such as the size of the instance and whether there are startup scripts to complete.\n\nThe value must be less than the forecast interval duration of 3600 seconds (60 minutes). The default is 300 seconds.\n\nOnly valid when configuring predictive scaling.\n\nPredictiveScalingMaxCapacityBehavior -> (string)\n\nDefines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource. The default value is SetForecastCapacityToMaxCapacity .\n\nThe following are possible values:\n\nSetForecastCapacityToMaxCapacity - AWS Auto Scaling cannot scale resource capacity higher than the maximum capacity. The maximum capacity is enforced as a hard limit.\n\nSetMaxCapacityToForecastCapacity - AWS Auto Scaling may scale resource capacity higher than the maximum capacity to equal but not exceed forecast capacity.\n\nSetMaxCapacityAboveForecastCapacity - AWS Auto Scaling may scale resource capacity higher than the maximum capacity by a specified buffer value. The intention is to give the target tracking scaling policy extra capacity if unexpected traffic occurs.\n\nOnly valid when configuring predictive scaling.\n\nPredictiveScalingMaxCapacityBuffer -> (integer)\n\nThe size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.\n\nOnly valid when configuring predictive scaling. Required if the PredictiveScalingMaxCapacityBehavior is set to SetMaxCapacityAboveForecastCapacity , and cannot be used otherwise.\n\nThe range is 1-100.\n\nPredictiveScalingMode -> (string)\n\nThe predictive scaling mode. The default value is ForecastAndScale . Otherwise, AWS Auto Scaling forecasts capacity but does not create any scheduled scaling actions based on the capacity forecast.\n\nScalingPolicyUpdateBehavior -> (string)\n\nControls whether a resource’s externally created scaling policies are kept or replaced.\n\nThe default value is KeepExternalPolicies . If the parameter is set to ReplaceExternalPolicies , any scaling policies that are external to AWS Auto Scaling are deleted and new target tracking scaling policies created.\n\nOnly valid when configuring dynamic scaling.\n\nCondition: The number of existing policies to be replaced must be less than or equal to 50. If there are more than 50 policies to be replaced, AWS Auto Scaling keeps all existing policies and does not create new ones.\n\nDisableDynamicScaling -> (boolean)\n\nControls whether dynamic scaling by AWS Auto Scaling is disabled. When dynamic scaling is enabled, AWS Auto Scaling creates target tracking scaling policies based on the specified target tracking configurations.\n\nThe default is enabled (false ).\n\nStatusCode -> (string)\n\nThe status of the scaling plan.\n\nActive - The scaling plan is active.\n\nActiveWithProblems - The scaling plan is active, but the scaling configuration for one or more resources could not be applied.\n\nCreationInProgress - The scaling plan is being created.\n\nCreationFailed - The scaling plan could not be created.\n\nDeletionInProgress - The scaling plan is being deleted.\n\nDeletionFailed - The scaling plan could not be deleted.\n\nUpdateInProgress - The scaling plan is being updated.\n\nUpdateFailed - The scaling plan could not be updated.\n\nStatusMessage -> (string)\n\nA simple message about the current status of the scaling plan.\n\nStatusStartTime -> (timestamp)\n\nThe Unix time stamp when the scaling plan entered the current status.\n\nCreationTime -> (timestamp)\n\nThe Unix time stamp when the scaling plan was created.\n\nNextToken -> (string)\n\nThe token required to get the next set of results. This value is null if there are no more results to return.",
      "command_examples": "Examples\n\nTo describe a scaling plan\n\nThe following describe-scaling-plans example displays the details of the specified scaling plan.\n\naws autoscaling-plans describe-scaling-plans \\\n    --scaling-plan-names scaling-plan-with-asg-and-ddb\n\n\nOutput:\n\n{\n    \"ScalingPlans\": [\n        {\n            \"LastMutatingRequestTime\": 1565388443.963,\n            \"ScalingPlanVersion\": 1,\n            \"CreationTime\": 1565388443.963,\n            \"ScalingInstructions\": [\n                {\n                    \"ScalingPolicyUpdateBehavior\": \"ReplaceExternalPolicies\",\n                    \"ScalableDimension\": \"autoscaling:autoScalingGroup:DesiredCapacity\",\n                    \"TargetTrackingConfigurations\": [\n                        {\n                            \"PredefinedScalingMetricSpecification\": {\n                                \"PredefinedScalingMetricType\": \"ASGAverageCPUUtilization\"\n                            },\n                            \"TargetValue\": 50.0,\n                            \"EstimatedInstanceWarmup\": 300,\n                            \"DisableScaleIn\": false\n                        }\n                    ],\n                    \"ResourceId\": \"autoScalingGroup/my-asg\",\n                    \"DisableDynamicScaling\": false,\n                    \"MinCapacity\": 1,\n                    \"ServiceNamespace\": \"autoscaling\",\n                    \"MaxCapacity\": 10\n                },\n                {\n                    \"ScalingPolicyUpdateBehavior\": \"ReplaceExternalPolicies\",\n                    \"ScalableDimension\": \"dynamodb:table:ReadCapacityUnits\",\n                    \"TargetTrackingConfigurations\": [\n                        {\n                            \"PredefinedScalingMetricSpecification\": {\n                                \"PredefinedScalingMetricType\": \"DynamoDBReadCapacityUtilization\"\n                            },\n                            \"TargetValue\": 50.0,\n                            \"ScaleInCooldown\": 60,\n                            \"DisableScaleIn\": false,\n                            \"ScaleOutCooldown\": 60\n                        }\n                    ],\n                    \"ResourceId\": \"table/my-table\",\n                    \"DisableDynamicScaling\": false,\n                    \"MinCapacity\": 5,\n                    \"ServiceNamespace\": \"dynamodb\",\n                    \"MaxCapacity\": 10000\n                },\n                {\n                    \"ScalingPolicyUpdateBehavior\": \"ReplaceExternalPolicies\",\n                    \"ScalableDimension\": \"dynamodb:table:WriteCapacityUnits\",\n                    \"TargetTrackingConfigurations\": [\n                        {\n                            \"PredefinedScalingMetricSpecification\": {\n                                \"PredefinedScalingMetricType\": \"DynamoDBWriteCapacityUtilization\"\n                            },\n                            \"TargetValue\": 50.0,\n                            \"ScaleInCooldown\": 60,\n                            \"DisableScaleIn\": false,\n                            \"ScaleOutCooldown\": 60\n                        }\n                    ],\n                    \"ResourceId\": \"table/my-table\",\n                    \"DisableDynamicScaling\": false,\n                    \"MinCapacity\": 5,\n                    \"ServiceNamespace\": \"dynamodb\",\n                    \"MaxCapacity\": 10000\n                }\n            ],\n            \"ApplicationSource\": {\n                \"TagFilters\": [\n                    {\n                        \"Values\": [\n                            \"my-application-id\"\n                        ],\n                        \"Key\": \"application\"\n                    }\n                ]\n            },\n            \"StatusStartTime\": 1565388455.836,\n            \"ScalingPlanName\": \"scaling-plan-with-asg-and-ddb\",\n            \"StatusMessage\": \"Scaling plan has been created and applied to all resources.\",\n            \"StatusCode\": \"Active\"\n        }\n    ]\n}\n\n\nFor more information, see What Is AWS Auto Scaling? in the AWS Auto Scaling User Guide."
    },
    {
      "command_name": "get-scaling-plan-resource-forecast-data",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/autoscaling-plans/get-scaling-plan-resource-forecast-data.html",
      "command_description": "Description\n\nRetrieves the forecast data for a scalable resource.\n\nCapacity forecasts are represented as predicted values, or data points, that are calculated using historical data points from a specified CloudWatch load metric. Data points are available for up to 56 days.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-scaling-plan-resource-forecast-data\n--scaling-plan-name <value>\n--scaling-plan-version <value>\n--service-namespace <value>\n--resource-id <value>\n--scalable-dimension <value>\n--forecast-data-type <value>\n--start-time <value>\n--end-time <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--scaling-plan-name <value>",
        "--scaling-plan-version <value>",
        "--service-namespace <value>",
        "--resource-id <value>",
        "--scalable-dimension <value>",
        "--forecast-data-type <value>",
        "--start-time <value>",
        "--end-time <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--scaling-plan-name (string)\n\nThe name of the scaling plan.\n\n--scaling-plan-version (long)\n\nThe version number of the scaling plan. Currently, the only valid value is 1 .\n\n--service-namespace (string)\n\nThe namespace of the AWS service. The only valid value is autoscaling .\n\nPossible values:\n\nautoscaling\n\necs\n\nec2\n\nrds\n\ndynamodb\n\n--resource-id (string)\n\nThe ID of the resource. This string consists of a prefix (autoScalingGroup ) followed by the name of a specified Auto Scaling group (my-asg ). Example: autoScalingGroup/my-asg .\n\n--scalable-dimension (string)\n\nThe scalable dimension for the resource. The only valid value is autoscaling:autoScalingGroup:DesiredCapacity .\n\nPossible values:\n\nautoscaling:autoScalingGroup:DesiredCapacity\n\necs:service:DesiredCount\n\nec2:spot-fleet-request:TargetCapacity\n\nrds:cluster:ReadReplicaCount\n\ndynamodb:table:ReadCapacityUnits\n\ndynamodb:table:WriteCapacityUnits\n\ndynamodb:index:ReadCapacityUnits\n\ndynamodb:index:WriteCapacityUnits\n\n--forecast-data-type (string)\n\nThe type of forecast data to get.\n\nLoadForecast : The load metric forecast.\n\nCapacityForecast : The capacity forecast.\n\nScheduledActionMinCapacity : The minimum capacity for each scheduled scaling action. This data is calculated as the larger of two values: the capacity forecast or the minimum capacity in the scaling instruction.\n\nScheduledActionMaxCapacity : The maximum capacity for each scheduled scaling action. The calculation used is determined by the predictive scaling maximum capacity behavior setting in the scaling instruction.\n\nPossible values:\n\nCapacityForecast\n\nLoadForecast\n\nScheduledActionMinCapacity\n\nScheduledActionMaxCapacity\n\n--start-time (timestamp)\n\nThe inclusive start time of the time range for the forecast data to get. The date and time can be at most 56 days before the current date and time.\n\n--end-time (timestamp)\n\nThe exclusive end time of the time range for the forecast data to get. The maximum time duration between the start and end time is seven days.\n\nAlthough this parameter can accept a date and time that is more than two days in the future, the availability of forecast data has limits. AWS Auto Scaling only issues forecasts for periods of two days in advance.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatapoints -> (list)\n\nThe data points to return.\n\n(structure)\n\nRepresents a single value in the forecast data used for predictive scaling.\n\nTimestamp -> (timestamp)\n\nThe time stamp for the data point in UTC format.\n\nValue -> (double)\n\nThe value of the data point.",
      "command_examples": "Examples\n\nTo retrieve load forecast data\n\nThis example retrieves load forecast data for a scalable resource (an Auto Scaling group) that is associated with the specified scaling plan.\n\naws autoscaling-plans get-scaling-plan-resource-forecast-data \\\n    --scaling-plan-name my-scaling-plan \\\n    --scaling-plan-version 1 \\\n    --service-namespace \"autoscaling\" \\\n    --resource-id autoScalingGroup/my-asg \\\n    --scalable-dimension \"autoscaling:autoScalingGroup:DesiredCapacity\" \\\n    --forecast-data-type \"LoadForecast\" \\\n    --start-time \"2019-08-30T00:00:00Z\" \\\n    --end-time \"2019-09-06T00:00:00Z\"\n\n\nOutput:\n\n{\n    \"Datapoints\": [...]\n}\n\n\nFor more information, see What Is AWS Auto Scaling in the AWS Auto Scaling User Guide."
    },
    {
      "command_name": "update-scaling-plan",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/autoscaling-plans/update-scaling-plan.html",
      "command_description": "Description\n\nUpdates the specified scaling plan.\n\nYou cannot update a scaling plan if it is in the process of being created, updated, or deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-scaling-plan\n--scaling-plan-name <value>\n--scaling-plan-version <value>\n[--application-source <value>]\n[--scaling-instructions <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--scaling-plan-name <value>",
        "--scaling-plan-version <value>",
        "[--application-source <value>]",
        "[--scaling-instructions <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--scaling-plan-name (string)\n\nThe name of the scaling plan.\n\n--scaling-plan-version (long)\n\nThe version number of the scaling plan. The only valid value is 1 . Currently, you cannot have multiple scaling plan versions.\n\n--application-source (structure)\n\nA CloudFormation stack or set of tags.\n\nFor more information, see ApplicationSource in the AWS Auto Scaling API Reference .\n\nCloudFormationStackARN -> (string)\n\nThe Amazon Resource Name (ARN) of a AWS CloudFormation stack.\n\nTagFilters -> (list)\n\nA set of tags (up to 50).\n\n(structure)\n\nRepresents a tag.\n\nKey -> (string)\n\nThe tag key.\n\nValues -> (list)\n\nThe tag values (0 to 20).\n\n(string)\n\nJSON Syntax:\n\n{\n  \"CloudFormationStackARN\": \"string\",\n  \"TagFilters\": [\n    {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...]\n    }\n    ...\n  ]\n}\n\n\n--scaling-instructions (list)\n\nThe scaling instructions.\n\nFor more information, see ScalingInstruction in the AWS Auto Scaling API Reference .\n\n(structure)\n\nDescribes a scaling instruction for a scalable resource in a scaling plan. Each scaling instruction applies to one resource.\n\nAWS Auto Scaling creates target tracking scaling policies based on the scaling instructions. Target tracking scaling policies adjust the capacity of your scalable resource as required to maintain resource utilization at the target value that you specified.\n\nAWS Auto Scaling also configures predictive scaling for your Amazon EC2 Auto Scaling groups using a subset of parameters, including the load metric, the scaling metric, the target value for the scaling metric, the predictive scaling mode (forecast and scale or forecast only), and the desired behavior when the forecast capacity exceeds the maximum capacity of the resource. With predictive scaling, AWS Auto Scaling generates forecasts with traffic predictions for the two days ahead and schedules scaling actions that proactively add and remove resource capacity to match the forecast.\n\nWarning\n\nWe recommend waiting a minimum of 24 hours after creating an Auto Scaling group to configure predictive scaling. At minimum, there must be 24 hours of historical data to generate a forecast. For more information, see Best Practices for AWS Auto Scaling in the AWS Auto Scaling User Guide .\n\nServiceNamespace -> (string)\n\nThe namespace of the AWS service.\n\nResourceId -> (string)\n\nThe ID of the resource. This string consists of the resource type and unique identifier.\n\nAuto Scaling group - The resource type is autoScalingGroup and the unique identifier is the name of the Auto Scaling group. Example: autoScalingGroup/my-asg .\n\nECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/default/sample-webapp .\n\nSpot Fleet request - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE .\n\nDynamoDB table - The resource type is table and the unique identifier is the resource ID. Example: table/my-table .\n\nDynamoDB global secondary index - The resource type is index and the unique identifier is the resource ID. Example: table/my-table/index/my-table-index .\n\nAurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster .\n\nScalableDimension -> (string)\n\nThe scalable dimension associated with the resource.\n\nautoscaling:autoScalingGroup:DesiredCapacity - The desired capacity of an Auto Scaling group.\n\necs:service:DesiredCount - The desired task count of an ECS service.\n\nec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet request.\n\ndynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.\n\ndynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.\n\ndynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.\n\ndynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.\n\nrds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.\n\nMinCapacity -> (integer)\n\nThe minimum capacity of the resource.\n\nMaxCapacity -> (integer)\n\nThe maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for PredictiveScalingMaxCapacityBehavior .\n\nTargetTrackingConfigurations -> (list)\n\nThe target tracking configurations (up to 10). Each of these structures must specify a unique scaling metric and a target value for the metric.\n\n(structure)\n\nDescribes a target tracking configuration to use with AWS Auto Scaling. Used with ScalingInstruction and ScalingPolicy .\n\nPredefinedScalingMetricSpecification -> (structure)\n\nA predefined metric. You can specify either a predefined metric or a customized metric.\n\nPredefinedScalingMetricType -> (string)\n\nThe metric type. The ALBRequestCountPerTarget metric type applies only to Auto Scaling groups, Spot Fleet requests, and ECS services.\n\nResourceLabel -> (string)\n\nIdentifies the resource associated with the metric type. You can’t specify a resource label unless the metric type is ALBRequestCountPerTarget and there is a target group for an Application Load Balancer attached to the Auto Scaling group, Spot Fleet request, or ECS service.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format is app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>, where:\n\napp/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n\ntargetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nThis is an example: app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.\n\nTo find the ARN for an Application Load Balancer, use the DescribeLoadBalancers API operation. To find the ARN for the target group, use the DescribeTargetGroups API operation.\n\nCustomizedScalingMetricSpecification -> (structure)\n\nA customized metric. You can specify either a predefined metric or a customized metric.\n\nMetricName -> (string)\n\nThe name of the metric.\n\nNamespace -> (string)\n\nThe namespace of the metric.\n\nDimensions -> (list)\n\nThe dimensions of the metric.\n\nConditional: If you published your metric with dimensions, you must specify the same dimensions in your customized scaling metric specification.\n\n(structure)\n\nRepresents a dimension for a customized metric.\n\nName -> (string)\n\nThe name of the dimension.\n\nValue -> (string)\n\nThe value of the dimension.\n\nStatistic -> (string)\n\nThe statistic of the metric.\n\nUnit -> (string)\n\nThe unit of the metric.\n\nTargetValue -> (double)\n\nThe target value for the metric. Although this property accepts numbers of type Double, it won’t accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360.\n\nDisableScaleIn -> (boolean)\n\nIndicates whether scale in by the target tracking scaling policy is disabled. If the value is true , scale in is disabled and the target tracking scaling policy doesn’t remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable resource.\n\nThe default value is false .\n\nScaleOutCooldown -> (integer)\n\nThe amount of time, in seconds, to wait for a previous scale-out activity to take effect. This property is not used if the scalable resource is an Auto Scaling group.\n\nWith the scale-out cooldown period , the intention is to continuously (but not excessively) scale out. After Auto Scaling successfully scales out using a target tracking scaling policy, it starts to calculate the cooldown time. The scaling policy won’t increase the desired capacity again unless either a larger scale out is triggered or the cooldown period ends.\n\nScaleInCooldown -> (integer)\n\nThe amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start. This property is not used if the scalable resource is an Auto Scaling group.\n\nWith the scale-in cooldown period , the intention is to scale in conservatively to protect your application’s availability, so scale-in activities are blocked until the cooldown period has expired. However, if another alarm triggers a scale-out activity during the scale-in cooldown period, Auto Scaling scales out the target immediately. In this case, the scale-in cooldown period stops and doesn’t complete.\n\nEstimatedInstanceWarmup -> (integer)\n\nThe estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. This value is used only if the resource is an Auto Scaling group.\n\nPredefinedLoadMetricSpecification -> (structure)\n\nThe predefined load metric to use for predictive scaling. This parameter or a CustomizedLoadMetricSpecification is required when configuring predictive scaling, and cannot be used otherwise.\n\nPredefinedLoadMetricType -> (string)\n\nThe metric type.\n\nResourceLabel -> (string)\n\nIdentifies the resource associated with the metric type. You can’t specify a resource label unless the metric type is ALBTargetGroupRequestCount and there is a target group for an Application Load Balancer attached to the Auto Scaling group.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format is app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>, where:\n\napp/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n\ntargetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nThis is an example: app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.\n\nTo find the ARN for an Application Load Balancer, use the DescribeLoadBalancers API operation. To find the ARN for the target group, use the DescribeTargetGroups API operation.\n\nCustomizedLoadMetricSpecification -> (structure)\n\nThe customized load metric to use for predictive scaling. This parameter or a PredefinedLoadMetricSpecification is required when configuring predictive scaling, and cannot be used otherwise.\n\nMetricName -> (string)\n\nThe name of the metric.\n\nNamespace -> (string)\n\nThe namespace of the metric.\n\nDimensions -> (list)\n\nThe dimensions of the metric.\n\nConditional: If you published your metric with dimensions, you must specify the same dimensions in your customized load metric specification.\n\n(structure)\n\nRepresents a dimension for a customized metric.\n\nName -> (string)\n\nThe name of the dimension.\n\nValue -> (string)\n\nThe value of the dimension.\n\nStatistic -> (string)\n\nThe statistic of the metric. The only valid value is Sum .\n\nUnit -> (string)\n\nThe unit of the metric.\n\nScheduledActionBufferTime -> (integer)\n\nThe amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out. For example, if the forecast says to add capacity at 10:00 AM, and the buffer time is 5 minutes, then the run time of the corresponding scheduled scaling action will be 9:55 AM. The intention is to give resources time to be provisioned. For example, it can take a few minutes to launch an EC2 instance. The actual amount of time required depends on several factors, such as the size of the instance and whether there are startup scripts to complete.\n\nThe value must be less than the forecast interval duration of 3600 seconds (60 minutes). The default is 300 seconds.\n\nOnly valid when configuring predictive scaling.\n\nPredictiveScalingMaxCapacityBehavior -> (string)\n\nDefines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource. The default value is SetForecastCapacityToMaxCapacity .\n\nThe following are possible values:\n\nSetForecastCapacityToMaxCapacity - AWS Auto Scaling cannot scale resource capacity higher than the maximum capacity. The maximum capacity is enforced as a hard limit.\n\nSetMaxCapacityToForecastCapacity - AWS Auto Scaling may scale resource capacity higher than the maximum capacity to equal but not exceed forecast capacity.\n\nSetMaxCapacityAboveForecastCapacity - AWS Auto Scaling may scale resource capacity higher than the maximum capacity by a specified buffer value. The intention is to give the target tracking scaling policy extra capacity if unexpected traffic occurs.\n\nOnly valid when configuring predictive scaling.\n\nPredictiveScalingMaxCapacityBuffer -> (integer)\n\nThe size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.\n\nOnly valid when configuring predictive scaling. Required if the PredictiveScalingMaxCapacityBehavior is set to SetMaxCapacityAboveForecastCapacity , and cannot be used otherwise.\n\nThe range is 1-100.\n\nPredictiveScalingMode -> (string)\n\nThe predictive scaling mode. The default value is ForecastAndScale . Otherwise, AWS Auto Scaling forecasts capacity but does not create any scheduled scaling actions based on the capacity forecast.\n\nScalingPolicyUpdateBehavior -> (string)\n\nControls whether a resource’s externally created scaling policies are kept or replaced.\n\nThe default value is KeepExternalPolicies . If the parameter is set to ReplaceExternalPolicies , any scaling policies that are external to AWS Auto Scaling are deleted and new target tracking scaling policies created.\n\nOnly valid when configuring dynamic scaling.\n\nCondition: The number of existing policies to be replaced must be less than or equal to 50. If there are more than 50 policies to be replaced, AWS Auto Scaling keeps all existing policies and does not create new ones.\n\nDisableDynamicScaling -> (boolean)\n\nControls whether dynamic scaling by AWS Auto Scaling is disabled. When dynamic scaling is enabled, AWS Auto Scaling creates target tracking scaling policies based on the specified target tracking configurations.\n\nThe default is enabled (false ).\n\nJSON Syntax:\n\n[\n  {\n    \"ServiceNamespace\": \"autoscaling\"|\"ecs\"|\"ec2\"|\"rds\"|\"dynamodb\",\n    \"ResourceId\": \"string\",\n    \"ScalableDimension\": \"autoscaling:autoScalingGroup:DesiredCapacity\"|\"ecs:service:DesiredCount\"|\"ec2:spot-fleet-request:TargetCapacity\"|\"rds:cluster:ReadReplicaCount\"|\"dynamodb:table:ReadCapacityUnits\"|\"dynamodb:table:WriteCapacityUnits\"|\"dynamodb:index:ReadCapacityUnits\"|\"dynamodb:index:WriteCapacityUnits\",\n    \"MinCapacity\": integer,\n    \"MaxCapacity\": integer,\n    \"TargetTrackingConfigurations\": [\n      {\n        \"PredefinedScalingMetricSpecification\": {\n          \"PredefinedScalingMetricType\": \"ASGAverageCPUUtilization\"|\"ASGAverageNetworkIn\"|\"ASGAverageNetworkOut\"|\"DynamoDBReadCapacityUtilization\"|\"DynamoDBWriteCapacityUtilization\"|\"ECSServiceAverageCPUUtilization\"|\"ECSServiceAverageMemoryUtilization\"|\"ALBRequestCountPerTarget\"|\"RDSReaderAverageCPUUtilization\"|\"RDSReaderAverageDatabaseConnections\"|\"EC2SpotFleetRequestAverageCPUUtilization\"|\"EC2SpotFleetRequestAverageNetworkIn\"|\"EC2SpotFleetRequestAverageNetworkOut\",\n          \"ResourceLabel\": \"string\"\n        },\n        \"CustomizedScalingMetricSpecification\": {\n          \"MetricName\": \"string\",\n          \"Namespace\": \"string\",\n          \"Dimensions\": [\n            {\n              \"Name\": \"string\",\n              \"Value\": \"string\"\n            }\n            ...\n          ],\n          \"Statistic\": \"Average\"|\"Minimum\"|\"Maximum\"|\"SampleCount\"|\"Sum\",\n          \"Unit\": \"string\"\n        },\n        \"TargetValue\": double,\n        \"DisableScaleIn\": true|false,\n        \"ScaleOutCooldown\": integer,\n        \"ScaleInCooldown\": integer,\n        \"EstimatedInstanceWarmup\": integer\n      }\n      ...\n    ],\n    \"PredefinedLoadMetricSpecification\": {\n      \"PredefinedLoadMetricType\": \"ASGTotalCPUUtilization\"|\"ASGTotalNetworkIn\"|\"ASGTotalNetworkOut\"|\"ALBTargetGroupRequestCount\",\n      \"ResourceLabel\": \"string\"\n    },\n    \"CustomizedLoadMetricSpecification\": {\n      \"MetricName\": \"string\",\n      \"Namespace\": \"string\",\n      \"Dimensions\": [\n        {\n          \"Name\": \"string\",\n          \"Value\": \"string\"\n        }\n        ...\n      ],\n      \"Statistic\": \"Average\"|\"Minimum\"|\"Maximum\"|\"SampleCount\"|\"Sum\",\n      \"Unit\": \"string\"\n    },\n    \"ScheduledActionBufferTime\": integer,\n    \"PredictiveScalingMaxCapacityBehavior\": \"SetForecastCapacityToMaxCapacity\"|\"SetMaxCapacityToForecastCapacity\"|\"SetMaxCapacityAboveForecastCapacity\",\n    \"PredictiveScalingMaxCapacityBuffer\": integer,\n    \"PredictiveScalingMode\": \"ForecastAndScale\"|\"ForecastOnly\",\n    \"ScalingPolicyUpdateBehavior\": \"KeepExternalPolicies\"|\"ReplaceExternalPolicies\",\n    \"DisableDynamicScaling\": true|false\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a scaling plan\n\nThe following update-scaling-plan example modifies the scaling metric for an Auto Scaling group in the specified scaling plan.\n\naws autoscaling-plans update-scaling-plan \\\n    --scaling-plan-name my-scaling-plan \\\n    --scaling-plan-version 1 \\\n    --scaling-instructions '{\"ScalableDimension\":\"autoscaling:autoScalingGroup:DesiredCapacity\",\"ResourceId\":\"autoScalingGroup/my-asg\",\"ServiceNamespace\":\"autoscaling\",\"TargetTrackingConfigurations\":[{\"PredefinedScalingMetricSpecification\": {\"PredefinedScalingMetricType\":\"ALBRequestCountPerTarget\",\"ResourceLabel\":\"app/my-alb/f37c06a68c1748aa/targetgroup/my-target-group/6d4ea56ca2d6a18d\"},\"TargetValue\":40.0}],\"MinCapacity\": 1,\"MaxCapacity\": 10}'\n\n\nThis command produces no output.\n\nFor more information, see What Is AWS Auto Scaling? in the AWS Auto Scaling User Guide."
    }
  ],
  "service_description": "Description\n\nUse AWS Auto Scaling to create scaling plans for your applications to automatically scale your scalable AWS resources.\n\nAPI Summary\n\nYou can use the AWS Auto Scaling service API to accomplish the following tasks:\n\nCreate and manage scaling plans\n\nDefine target tracking scaling policies to dynamically scale your resources based on utilization\n\nScale Amazon EC2 Auto Scaling groups using predictive scaling and dynamic scaling to scale your Amazon EC2 capacity faster\n\nSet minimum and maximum capacity limits\n\nRetrieve information on existing scaling plans\n\nAccess current forecast data and historical forecast data for up to 56 days previous\n\nTo learn more about AWS Auto Scaling, including information about granting IAM users required permissions for AWS Auto Scaling actions, see the AWS Auto Scaling User Guide ."
}