{
  "service_name": "kinesisanalytics",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/index.html",
  "service_commands": [
    {
      "command_name": "add-application-cloud-watch-logging-option",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/add-application-cloud-watch-logging-option.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nAdds a CloudWatch log stream to monitor application configuration errors. For more information about using CloudWatch log streams with Amazon Kinesis Analytics applications, see Working with Amazon CloudWatch Logs .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-application-cloud-watch-logging-option\n--application-name <value>\n--current-application-version-id <value>\n--cloud-watch-logging-option <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-application-version-id <value>",
        "--cloud-watch-logging-option <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe Kinesis Analytics application name.\n\n--current-application-version-id (long)\n\nThe version ID of the Kinesis Analytics application.\n\n--cloud-watch-logging-option (structure)\n\nProvides the CloudWatch log stream Amazon Resource Name (ARN) and the IAM role ARN. Note: To write application messages to CloudWatch, the IAM role that is used must have the PutLogEvents policy action enabled.\n\nLogStreamARN -> (string)\n\nARN of the CloudWatch log to receive application messages.\n\nRoleARN -> (string)\n\nIAM ARN of the role to use to send application messages. Note: To write application messages to CloudWatch, the IAM role that is used must have the PutLogEvents policy action enabled.\n\nShorthand Syntax:\n\nLogStreamARN=string,RoleARN=string\n\n\nJSON Syntax:\n\n{\n  \"LogStreamARN\": \"string\",\n  \"RoleARN\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "add-application-input",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/add-application-input.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nAdds a streaming source to your Amazon Kinesis application. For conceptual information, see Configuring Application Input .\n\nYou can add a streaming source either when you create an application or you can use this operation to add a streaming source after you create an application. For more information, see CreateApplication .\n\nAny configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the DescribeApplication operation to find the current application version.\n\nThis operation requires permissions to perform the kinesisanalytics:AddApplicationInput action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-application-input\n--application-name <value>\n--current-application-version-id <value>\n--input <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-application-version-id <value>",
        "--input <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of your existing Amazon Kinesis Analytics application to which you want to add the streaming source.\n\n--current-application-version-id (long)\n\nCurrent version of your Amazon Kinesis Analytics application. You can use the DescribeApplication operation to find the current application version.\n\n--input (structure)\n\nThe Input to add.\n\nNamePrefix -> (string)\n\nName prefix to use when creating an in-application stream. Suppose that you specify a prefix “MyInApplicationStream.” Amazon Kinesis Analytics then creates one or more (as per the InputParallelism count you specified) in-application streams with names “MyInApplicationStream_001,” “MyInApplicationStream_002,” and so on.\n\nInputProcessingConfiguration -> (structure)\n\nThe InputProcessingConfiguration for the input. An input processor transforms records as they are received from the stream, before the application’s SQL code executes. Currently, the only input processing configuration available is InputLambdaProcessor .\n\nInputLambdaProcessor -> (structure)\n\nThe InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.\n\nResourceARN -> (string)\n\nThe ARN of the AWS Lambda function that operates on records in the stream.\n\nNote\n\nTo specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see Example ARNs: AWS Lambda\n\nRoleARN -> (string)\n\nThe ARN of the IAM role that is used to access the AWS Lambda function.\n\nKinesisStreamsInput -> (structure)\n\nIf the streaming source is an Amazon Kinesis stream, identifies the stream’s Amazon Resource Name (ARN) and an IAM role that enables Amazon Kinesis Analytics to access the stream on your behalf.\n\nNote: Either KinesisStreamsInput or KinesisFirehoseInput is required.\n\nResourceARN -> (string)\n\nARN of the input Amazon Kinesis stream to read.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf. You need to grant the necessary permissions to this role.\n\nKinesisFirehoseInput -> (structure)\n\nIf the streaming source is an Amazon Kinesis Firehose delivery stream, identifies the delivery stream’s ARN and an IAM role that enables Amazon Kinesis Analytics to access the stream on your behalf.\n\nNote: Either KinesisStreamsInput or KinesisFirehoseInput is required.\n\nResourceARN -> (string)\n\nARN of the input delivery stream.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf. You need to make sure that the role has the necessary permissions to access the stream.\n\nInputParallelism -> (structure)\n\nDescribes the number of in-application streams to create.\n\nData from your source is routed to these in-application input streams.\n\n(see Configuring Application Input .\n\nCount -> (integer)\n\nNumber of in-application streams to create. For more information, see Limits .\n\nInputSchema -> (structure)\n\nDescribes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.\n\nAlso used to describe the format of the reference data source.\n\nRecordFormat -> (structure)\n\nSpecifies the format of the records on the streaming source.\n\nRecordFormatType -> (string)\n\nThe type of record format.\n\nMappingParameters -> (structure)\n\nWhen configuring application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.\n\nJSONMappingParameters -> (structure)\n\nProvides additional mapping information when JSON is the record format on the streaming source.\n\nRecordRowPath -> (string)\n\nPath to the top-level parent that contains the records.\n\nCSVMappingParameters -> (structure)\n\nProvides additional mapping information when the record format uses delimiters (for example, CSV).\n\nRecordRowDelimiter -> (string)\n\nRow delimiter. For example, in a CSV format, ‘n’ is the typical row delimiter.\n\nRecordColumnDelimiter -> (string)\n\nColumn delimiter. For example, in a CSV format, a comma (“,”) is the typical column delimiter.\n\nRecordEncoding -> (string)\n\nSpecifies the encoding of the records in the streaming source. For example, UTF-8.\n\nRecordColumns -> (list)\n\nA list of RecordColumn objects.\n\n(structure)\n\nDescribes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.\n\nAlso used to describe the format of the reference data source.\n\nName -> (string)\n\nName of the column created in the in-application input stream or reference table.\n\nMapping -> (string)\n\nReference to the data element in the streaming input or the reference data source. This element is required if the RecordFormatType is JSON .\n\nSqlType -> (string)\n\nType of column created in the in-application input stream or reference table.\n\nJSON Syntax:\n\n{\n  \"NamePrefix\": \"string\",\n  \"InputProcessingConfiguration\": {\n    \"InputLambdaProcessor\": {\n      \"ResourceARN\": \"string\",\n      \"RoleARN\": \"string\"\n    }\n  },\n  \"KinesisStreamsInput\": {\n    \"ResourceARN\": \"string\",\n    \"RoleARN\": \"string\"\n  },\n  \"KinesisFirehoseInput\": {\n    \"ResourceARN\": \"string\",\n    \"RoleARN\": \"string\"\n  },\n  \"InputParallelism\": {\n    \"Count\": integer\n  },\n  \"InputSchema\": {\n    \"RecordFormat\": {\n      \"RecordFormatType\": \"JSON\"|\"CSV\",\n      \"MappingParameters\": {\n        \"JSONMappingParameters\": {\n          \"RecordRowPath\": \"string\"\n        },\n        \"CSVMappingParameters\": {\n          \"RecordRowDelimiter\": \"string\",\n          \"RecordColumnDelimiter\": \"string\"\n        }\n      }\n    },\n    \"RecordEncoding\": \"string\",\n    \"RecordColumns\": [\n      {\n        \"Name\": \"string\",\n        \"Mapping\": \"string\",\n        \"SqlType\": \"string\"\n      }\n      ...\n    ]\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "add-application-input-processing-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/add-application-input-processing-configuration.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nAdds an InputProcessingConfiguration to an application. An input processor preprocesses records on the input stream before the application’s SQL code executes. Currently, the only input processor available is AWS Lambda .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-application-input-processing-configuration\n--application-name <value>\n--current-application-version-id <value>\n--input-id <value>\n--input-processing-configuration <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-application-version-id <value>",
        "--input-id <value>",
        "--input-processing-configuration <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of the application to which you want to add the input processing configuration.\n\n--current-application-version-id (long)\n\nVersion of the application to which you want to add the input processing configuration. You can use the DescribeApplication operation to get the current application version. If the version specified is not the current version, the ConcurrentModificationException is returned.\n\n--input-id (string)\n\nThe ID of the input configuration to add the input processing configuration to. You can get a list of the input IDs for an application using the DescribeApplication operation.\n\n--input-processing-configuration (structure)\n\nThe InputProcessingConfiguration to add to the application.\n\nInputLambdaProcessor -> (structure)\n\nThe InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.\n\nResourceARN -> (string)\n\nThe ARN of the AWS Lambda function that operates on records in the stream.\n\nNote\n\nTo specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see Example ARNs: AWS Lambda\n\nRoleARN -> (string)\n\nThe ARN of the IAM role that is used to access the AWS Lambda function.\n\nShorthand Syntax:\n\nInputLambdaProcessor={ResourceARN=string,RoleARN=string}\n\n\nJSON Syntax:\n\n{\n  \"InputLambdaProcessor\": {\n    \"ResourceARN\": \"string\",\n    \"RoleARN\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "add-application-output",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/add-application-output.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nAdds an external destination to your Amazon Kinesis Analytics application.\n\nIf you want Amazon Kinesis Analytics to deliver data from an in-application stream within your application to an external destination (such as an Amazon Kinesis stream, an Amazon Kinesis Firehose delivery stream, or an AWS Lambda function), you add the relevant configuration to your application using this operation. You can configure one or more outputs for your application. Each output configuration maps an in-application stream and an external destination.\n\nYou can use one of the output configurations to deliver data from your in-application error stream to an external destination so that you can analyze the errors. For more information, see Understanding Application Output (Destination) .\n\nAny configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the DescribeApplication operation to find the current application version.\n\nFor the limits on the number of application inputs and outputs you can configure, see Limits .\n\nThis operation requires permissions to perform the kinesisanalytics:AddApplicationOutput action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-application-output\n--application-name <value>\n--current-application-version-id <value>\n--application-output <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-application-version-id <value>",
        "--application-output <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of the application to which you want to add the output configuration.\n\n--current-application-version-id (long)\n\nVersion of the application to which you want to add the output configuration. You can use the DescribeApplication operation to get the current application version. If the version specified is not the current version, the ConcurrentModificationException is returned.\n\n--application-output (structure)\n\nAn array of objects, each describing one output configuration. In the output configuration, you specify the name of an in-application stream, a destination (that is, an Amazon Kinesis stream, an Amazon Kinesis Firehose delivery stream, or an AWS Lambda function), and record the formation to use when writing to the destination.\n\nName -> (string)\n\nName of the in-application stream.\n\nKinesisStreamsOutput -> (structure)\n\nIdentifies an Amazon Kinesis stream as the destination.\n\nResourceARN -> (string)\n\nARN of the destination Amazon Kinesis stream to write to.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to write to the destination stream on your behalf. You need to grant the necessary permissions to this role.\n\nKinesisFirehoseOutput -> (structure)\n\nIdentifies an Amazon Kinesis Firehose delivery stream as the destination.\n\nResourceARN -> (string)\n\nARN of the destination Amazon Kinesis Firehose delivery stream to write to.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to write to the destination stream on your behalf. You need to grant the necessary permissions to this role.\n\nLambdaOutput -> (structure)\n\nIdentifies an AWS Lambda function as the destination.\n\nResourceARN -> (string)\n\nAmazon Resource Name (ARN) of the destination Lambda function to write to.\n\nNote\n\nTo specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see Example ARNs: AWS Lambda\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to write to the destination function on your behalf. You need to grant the necessary permissions to this role.\n\nDestinationSchema -> (structure)\n\nDescribes the data format when records are written to the destination. For more information, see Configuring Application Output .\n\nRecordFormatType -> (string)\n\nSpecifies the format of the records on the output stream.\n\nShorthand Syntax:\n\nName=string,KinesisStreamsOutput={ResourceARN=string,RoleARN=string},KinesisFirehoseOutput={ResourceARN=string,RoleARN=string},LambdaOutput={ResourceARN=string,RoleARN=string},DestinationSchema={RecordFormatType=string}\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"KinesisStreamsOutput\": {\n    \"ResourceARN\": \"string\",\n    \"RoleARN\": \"string\"\n  },\n  \"KinesisFirehoseOutput\": {\n    \"ResourceARN\": \"string\",\n    \"RoleARN\": \"string\"\n  },\n  \"LambdaOutput\": {\n    \"ResourceARN\": \"string\",\n    \"RoleARN\": \"string\"\n  },\n  \"DestinationSchema\": {\n    \"RecordFormatType\": \"JSON\"|\"CSV\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "add-application-reference-data-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/add-application-reference-data-source.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nAdds a reference data source to an existing application.\n\nAmazon Kinesis Analytics reads reference data (that is, an Amazon S3 object) and creates an in-application table within your application. In the request, you provide the source (S3 bucket name and object key name), name of the in-application table to create, and the necessary mapping information that describes how data in Amazon S3 object maps to columns in the resulting in-application table.\n\nFor conceptual information, see Configuring Application Input . For the limits on data sources you can add to your application, see Limits .\n\nThis operation requires permissions to perform the kinesisanalytics:AddApplicationOutput action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-application-reference-data-source\n--application-name <value>\n--current-application-version-id <value>\n--reference-data-source <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-application-version-id <value>",
        "--reference-data-source <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of an existing application.\n\n--current-application-version-id (long)\n\nVersion of the application for which you are adding the reference data source. You can use the DescribeApplication operation to get the current application version. If the version specified is not the current version, the ConcurrentModificationException is returned.\n\n--reference-data-source (structure)\n\nThe reference data source can be an object in your Amazon S3 bucket. Amazon Kinesis Analytics reads the object and copies the data into the in-application table that is created. You provide an S3 bucket, object key name, and the resulting in-application table that is created. You must also provide an IAM role with the necessary permissions that Amazon Kinesis Analytics can assume to read the object from your S3 bucket on your behalf.\n\nTableName -> (string)\n\nName of the in-application table to create.\n\nS3ReferenceDataSource -> (structure)\n\nIdentifies the S3 bucket and object that contains the reference data. Also identifies the IAM role Amazon Kinesis Analytics can assume to read this object on your behalf. An Amazon Kinesis Analytics application loads reference data only once. If the data changes, you call the UpdateApplication operation to trigger reloading of data into your application.\n\nBucketARN -> (string)\n\nAmazon Resource Name (ARN) of the S3 bucket.\n\nFileKey -> (string)\n\nObject key name containing reference data.\n\nReferenceRoleARN -> (string)\n\nARN of the IAM role that the service can assume to read data on your behalf. This role must have permission for the s3:GetObject action on the object and trust policy that allows Amazon Kinesis Analytics service principal to assume this role.\n\nReferenceSchema -> (structure)\n\nDescribes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.\n\nRecordFormat -> (structure)\n\nSpecifies the format of the records on the streaming source.\n\nRecordFormatType -> (string)\n\nThe type of record format.\n\nMappingParameters -> (structure)\n\nWhen configuring application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.\n\nJSONMappingParameters -> (structure)\n\nProvides additional mapping information when JSON is the record format on the streaming source.\n\nRecordRowPath -> (string)\n\nPath to the top-level parent that contains the records.\n\nCSVMappingParameters -> (structure)\n\nProvides additional mapping information when the record format uses delimiters (for example, CSV).\n\nRecordRowDelimiter -> (string)\n\nRow delimiter. For example, in a CSV format, ‘n’ is the typical row delimiter.\n\nRecordColumnDelimiter -> (string)\n\nColumn delimiter. For example, in a CSV format, a comma (“,”) is the typical column delimiter.\n\nRecordEncoding -> (string)\n\nSpecifies the encoding of the records in the streaming source. For example, UTF-8.\n\nRecordColumns -> (list)\n\nA list of RecordColumn objects.\n\n(structure)\n\nDescribes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.\n\nAlso used to describe the format of the reference data source.\n\nName -> (string)\n\nName of the column created in the in-application input stream or reference table.\n\nMapping -> (string)\n\nReference to the data element in the streaming input or the reference data source. This element is required if the RecordFormatType is JSON .\n\nSqlType -> (string)\n\nType of column created in the in-application input stream or reference table.\n\nJSON Syntax:\n\n{\n  \"TableName\": \"string\",\n  \"S3ReferenceDataSource\": {\n    \"BucketARN\": \"string\",\n    \"FileKey\": \"string\",\n    \"ReferenceRoleARN\": \"string\"\n  },\n  \"ReferenceSchema\": {\n    \"RecordFormat\": {\n      \"RecordFormatType\": \"JSON\"|\"CSV\",\n      \"MappingParameters\": {\n        \"JSONMappingParameters\": {\n          \"RecordRowPath\": \"string\"\n        },\n        \"CSVMappingParameters\": {\n          \"RecordRowDelimiter\": \"string\",\n          \"RecordColumnDelimiter\": \"string\"\n        }\n      }\n    },\n    \"RecordEncoding\": \"string\",\n    \"RecordColumns\": [\n      {\n        \"Name\": \"string\",\n        \"Mapping\": \"string\",\n        \"SqlType\": \"string\"\n      }\n      ...\n    ]\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/create-application.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nCreates an Amazon Kinesis Analytics application. You can configure each application with one streaming source as input, application code to process the input, and up to three destinations where you want Amazon Kinesis Analytics to write the output data from your application. For an overview, see How it Works .\n\nIn the input configuration, you map the streaming source to an in-application stream, which you can think of as a constantly updating table. In the mapping, you must provide a schema for the in-application stream and map each data column in the in-application stream to a data element in the streaming source.\n\nYour application code is one or more SQL statements that read input data, transform it, and generate output. Your application code can create one or more SQL artifacts like SQL streams or pumps.\n\nIn the output configuration, you can configure the application to write data from in-application streams created in your applications to up to three destinations.\n\nTo read data from your source stream or write data to destination streams, Amazon Kinesis Analytics needs your permissions. You grant these permissions by creating IAM roles. This operation requires permissions to perform the kinesisanalytics:CreateApplication action.\n\nFor introductory exercises to create an Amazon Kinesis Analytics application, see Getting Started .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-application\n--application-name <value>\n[--application-description <value>]\n[--inputs <value>]\n[--outputs <value>]\n[--cloud-watch-logging-options <value>]\n[--application-code <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--application-description <value>]",
        "[--inputs <value>]",
        "[--outputs <value>]",
        "[--cloud-watch-logging-options <value>]",
        "[--application-code <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of your Amazon Kinesis Analytics application (for example, sample-app ).\n\n--application-description (string)\n\nSummary description of the application.\n\n--inputs (list)\n\nUse this parameter to configure the application input.\n\nYou can configure your application to receive input from a single streaming source. In this configuration, you map this streaming source to an in-application stream that is created. Your application code can then query the in-application stream like a table (you can think of it as a constantly updating table).\n\nFor the streaming source, you provide its Amazon Resource Name (ARN) and format of data on the stream (for example, JSON, CSV, etc.). You also must provide an IAM role that Amazon Kinesis Analytics can assume to read this stream on your behalf.\n\nTo create the in-application stream, you need to specify a schema to transform your data into a schematized version used in SQL. In the schema, you provide the necessary mapping of the data elements in the streaming source to record columns in the in-app stream.\n\n(structure)\n\nWhen you configure the application input, you specify the streaming source, the in-application stream name that is created, and the mapping between the two. For more information, see Configuring Application Input .\n\nNamePrefix -> (string)\n\nName prefix to use when creating an in-application stream. Suppose that you specify a prefix “MyInApplicationStream.” Amazon Kinesis Analytics then creates one or more (as per the InputParallelism count you specified) in-application streams with names “MyInApplicationStream_001,” “MyInApplicationStream_002,” and so on.\n\nInputProcessingConfiguration -> (structure)\n\nThe InputProcessingConfiguration for the input. An input processor transforms records as they are received from the stream, before the application’s SQL code executes. Currently, the only input processing configuration available is InputLambdaProcessor .\n\nInputLambdaProcessor -> (structure)\n\nThe InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.\n\nResourceARN -> (string)\n\nThe ARN of the AWS Lambda function that operates on records in the stream.\n\nNote\n\nTo specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see Example ARNs: AWS Lambda\n\nRoleARN -> (string)\n\nThe ARN of the IAM role that is used to access the AWS Lambda function.\n\nKinesisStreamsInput -> (structure)\n\nIf the streaming source is an Amazon Kinesis stream, identifies the stream’s Amazon Resource Name (ARN) and an IAM role that enables Amazon Kinesis Analytics to access the stream on your behalf.\n\nNote: Either KinesisStreamsInput or KinesisFirehoseInput is required.\n\nResourceARN -> (string)\n\nARN of the input Amazon Kinesis stream to read.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf. You need to grant the necessary permissions to this role.\n\nKinesisFirehoseInput -> (structure)\n\nIf the streaming source is an Amazon Kinesis Firehose delivery stream, identifies the delivery stream’s ARN and an IAM role that enables Amazon Kinesis Analytics to access the stream on your behalf.\n\nNote: Either KinesisStreamsInput or KinesisFirehoseInput is required.\n\nResourceARN -> (string)\n\nARN of the input delivery stream.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf. You need to make sure that the role has the necessary permissions to access the stream.\n\nInputParallelism -> (structure)\n\nDescribes the number of in-application streams to create.\n\nData from your source is routed to these in-application input streams.\n\n(see Configuring Application Input .\n\nCount -> (integer)\n\nNumber of in-application streams to create. For more information, see Limits .\n\nInputSchema -> (structure)\n\nDescribes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.\n\nAlso used to describe the format of the reference data source.\n\nRecordFormat -> (structure)\n\nSpecifies the format of the records on the streaming source.\n\nRecordFormatType -> (string)\n\nThe type of record format.\n\nMappingParameters -> (structure)\n\nWhen configuring application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.\n\nJSONMappingParameters -> (structure)\n\nProvides additional mapping information when JSON is the record format on the streaming source.\n\nRecordRowPath -> (string)\n\nPath to the top-level parent that contains the records.\n\nCSVMappingParameters -> (structure)\n\nProvides additional mapping information when the record format uses delimiters (for example, CSV).\n\nRecordRowDelimiter -> (string)\n\nRow delimiter. For example, in a CSV format, ‘n’ is the typical row delimiter.\n\nRecordColumnDelimiter -> (string)\n\nColumn delimiter. For example, in a CSV format, a comma (“,”) is the typical column delimiter.\n\nRecordEncoding -> (string)\n\nSpecifies the encoding of the records in the streaming source. For example, UTF-8.\n\nRecordColumns -> (list)\n\nA list of RecordColumn objects.\n\n(structure)\n\nDescribes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.\n\nAlso used to describe the format of the reference data source.\n\nName -> (string)\n\nName of the column created in the in-application input stream or reference table.\n\nMapping -> (string)\n\nReference to the data element in the streaming input or the reference data source. This element is required if the RecordFormatType is JSON .\n\nSqlType -> (string)\n\nType of column created in the in-application input stream or reference table.\n\nJSON Syntax:\n\n[\n  {\n    \"NamePrefix\": \"string\",\n    \"InputProcessingConfiguration\": {\n      \"InputLambdaProcessor\": {\n        \"ResourceARN\": \"string\",\n        \"RoleARN\": \"string\"\n      }\n    },\n    \"KinesisStreamsInput\": {\n      \"ResourceARN\": \"string\",\n      \"RoleARN\": \"string\"\n    },\n    \"KinesisFirehoseInput\": {\n      \"ResourceARN\": \"string\",\n      \"RoleARN\": \"string\"\n    },\n    \"InputParallelism\": {\n      \"Count\": integer\n    },\n    \"InputSchema\": {\n      \"RecordFormat\": {\n        \"RecordFormatType\": \"JSON\"|\"CSV\",\n        \"MappingParameters\": {\n          \"JSONMappingParameters\": {\n            \"RecordRowPath\": \"string\"\n          },\n          \"CSVMappingParameters\": {\n            \"RecordRowDelimiter\": \"string\",\n            \"RecordColumnDelimiter\": \"string\"\n          }\n        }\n      },\n      \"RecordEncoding\": \"string\",\n      \"RecordColumns\": [\n        {\n          \"Name\": \"string\",\n          \"Mapping\": \"string\",\n          \"SqlType\": \"string\"\n        }\n        ...\n      ]\n    }\n  }\n  ...\n]\n\n\n--outputs (list)\n\nYou can configure application output to write data from any of the in-application streams to up to three destinations.\n\nThese destinations can be Amazon Kinesis streams, Amazon Kinesis Firehose delivery streams, AWS Lambda destinations, or any combination of the three.\n\nIn the configuration, you specify the in-application stream name, the destination stream or Lambda function Amazon Resource Name (ARN), and the format to use when writing data. You must also provide an IAM role that Amazon Kinesis Analytics can assume to write to the destination stream or Lambda function on your behalf.\n\nIn the output configuration, you also provide the output stream or Lambda function ARN. For stream destinations, you provide the format of data in the stream (for example, JSON, CSV). You also must provide an IAM role that Amazon Kinesis Analytics can assume to write to the stream or Lambda function on your behalf.\n\n(structure)\n\nDescribes application output configuration in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be an Amazon Kinesis stream or an Amazon Kinesis Firehose delivery stream.\n\nFor limits on how many destinations an application can write and other limitations, see Limits .\n\nName -> (string)\n\nName of the in-application stream.\n\nKinesisStreamsOutput -> (structure)\n\nIdentifies an Amazon Kinesis stream as the destination.\n\nResourceARN -> (string)\n\nARN of the destination Amazon Kinesis stream to write to.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to write to the destination stream on your behalf. You need to grant the necessary permissions to this role.\n\nKinesisFirehoseOutput -> (structure)\n\nIdentifies an Amazon Kinesis Firehose delivery stream as the destination.\n\nResourceARN -> (string)\n\nARN of the destination Amazon Kinesis Firehose delivery stream to write to.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to write to the destination stream on your behalf. You need to grant the necessary permissions to this role.\n\nLambdaOutput -> (structure)\n\nIdentifies an AWS Lambda function as the destination.\n\nResourceARN -> (string)\n\nAmazon Resource Name (ARN) of the destination Lambda function to write to.\n\nNote\n\nTo specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see Example ARNs: AWS Lambda\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to write to the destination function on your behalf. You need to grant the necessary permissions to this role.\n\nDestinationSchema -> (structure)\n\nDescribes the data format when records are written to the destination. For more information, see Configuring Application Output .\n\nRecordFormatType -> (string)\n\nSpecifies the format of the records on the output stream.\n\nShorthand Syntax:\n\nName=string,KinesisStreamsOutput={ResourceARN=string,RoleARN=string},KinesisFirehoseOutput={ResourceARN=string,RoleARN=string},LambdaOutput={ResourceARN=string,RoleARN=string},DestinationSchema={RecordFormatType=string} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"KinesisStreamsOutput\": {\n      \"ResourceARN\": \"string\",\n      \"RoleARN\": \"string\"\n    },\n    \"KinesisFirehoseOutput\": {\n      \"ResourceARN\": \"string\",\n      \"RoleARN\": \"string\"\n    },\n    \"LambdaOutput\": {\n      \"ResourceARN\": \"string\",\n      \"RoleARN\": \"string\"\n    },\n    \"DestinationSchema\": {\n      \"RecordFormatType\": \"JSON\"|\"CSV\"\n    }\n  }\n  ...\n]\n\n\n--cloud-watch-logging-options (list)\n\nUse this parameter to configure a CloudWatch log stream to monitor application configuration errors. For more information, see Working with Amazon CloudWatch Logs .\n\n(structure)\n\nProvides a description of CloudWatch logging options, including the log stream Amazon Resource Name (ARN) and the role ARN.\n\nLogStreamARN -> (string)\n\nARN of the CloudWatch log to receive application messages.\n\nRoleARN -> (string)\n\nIAM ARN of the role to use to send application messages. Note: To write application messages to CloudWatch, the IAM role that is used must have the PutLogEvents policy action enabled.\n\nShorthand Syntax:\n\nLogStreamARN=string,RoleARN=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"LogStreamARN\": \"string\",\n    \"RoleARN\": \"string\"\n  }\n  ...\n]\n\n\n--application-code (string)\n\nOne or more SQL statements that read input data, transform it, and generate output. For example, you can write a SQL statement that reads data from one in-application stream, generates a running average of the number of advertisement clicks by vendor, and insert resulting rows in another in-application stream using pumps. For more information about the typical pattern, see Application Code .\n\nYou can provide such series of SQL statements, where output of one statement can be used as the input for the next statement. You store intermediate results by creating in-application streams and pumps.\n\nNote that the application code must create the streams with names specified in the Outputs . For example, if your Outputs defines output streams named ExampleOutputStream1 and ExampleOutputStream2 , then your application code must create these streams.\n\n--tags (list)\n\nA list of one or more tags to assign to the application. A tag is a key-value pair that identifies an application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see Using Tagging .\n\n(structure)\n\nA key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see Using Tagging .\n\nKey -> (string)\n\nThe key of the key-value tag.\n\nValue -> (string)\n\nThe value of the key-value tag. The value is optional.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationSummary -> (structure)\n\nIn response to your CreateApplication request, Amazon Kinesis Analytics returns a response with a summary of the application it created, including the application Amazon Resource Name (ARN), name, and status.\n\nApplicationName -> (string)\n\nName of the application.\n\nApplicationARN -> (string)\n\nARN of the application.\n\nApplicationStatus -> (string)\n\nStatus of the application."
    },
    {
      "command_name": "delete-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/delete-application.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nDeletes the specified application. Amazon Kinesis Analytics halts application execution and deletes the application, including any application artifacts (such as in-application streams, reference table, and application code).\n\nThis operation requires permissions to perform the kinesisanalytics:DeleteApplication action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-application\n--application-name <value>\n--create-timestamp <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--create-timestamp <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of the Amazon Kinesis Analytics application to delete.\n\n--create-timestamp (timestamp)\n\nYou can use the DescribeApplication operation to get this value.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-application-cloud-watch-logging-option",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/delete-application-cloud-watch-logging-option.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nDeletes a CloudWatch log stream from an application. For more information about using CloudWatch log streams with Amazon Kinesis Analytics applications, see Working with Amazon CloudWatch Logs .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-application-cloud-watch-logging-option\n--application-name <value>\n--current-application-version-id <value>\n--cloud-watch-logging-option-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-application-version-id <value>",
        "--cloud-watch-logging-option-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe Kinesis Analytics application name.\n\n--current-application-version-id (long)\n\nThe version ID of the Kinesis Analytics application.\n\n--cloud-watch-logging-option-id (string)\n\nThe CloudWatchLoggingOptionId of the CloudWatch logging option to delete. You can get the CloudWatchLoggingOptionId by using the DescribeApplication operation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-application-input-processing-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/delete-application-input-processing-configuration.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nDeletes an InputProcessingConfiguration from an input.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-application-input-processing-configuration\n--application-name <value>\n--current-application-version-id <value>\n--input-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-application-version-id <value>",
        "--input-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe Kinesis Analytics application name.\n\n--current-application-version-id (long)\n\nThe version ID of the Kinesis Analytics application.\n\n--input-id (string)\n\nThe ID of the input configuration from which to delete the input processing configuration. You can get a list of the input IDs for an application by using the DescribeApplication operation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-application-output",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/delete-application-output.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nDeletes output destination configuration from your application configuration. Amazon Kinesis Analytics will no longer write data from the corresponding in-application stream to the external output destination.\n\nThis operation requires permissions to perform the kinesisanalytics:DeleteApplicationOutput action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-application-output\n--application-name <value>\n--current-application-version-id <value>\n--output-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-application-version-id <value>",
        "--output-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nAmazon Kinesis Analytics application name.\n\n--current-application-version-id (long)\n\nAmazon Kinesis Analytics application version. You can use the DescribeApplication operation to get the current application version. If the version specified is not the current version, the ConcurrentModificationException is returned.\n\n--output-id (string)\n\nThe ID of the configuration to delete. Each output configuration that is added to the application, either when the application is created or later using the AddApplicationOutput operation, has a unique ID. You need to provide the ID to uniquely identify the output configuration that you want to delete from the application configuration. You can use the DescribeApplication operation to get the specific OutputId .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-application-reference-data-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/delete-application-reference-data-source.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nDeletes a reference data source configuration from the specified application configuration.\n\nIf the application is running, Amazon Kinesis Analytics immediately removes the in-application table that you created using the AddApplicationReferenceDataSource operation.\n\nThis operation requires permissions to perform the kinesisanalytics.DeleteApplicationReferenceDataSource action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-application-reference-data-source\n--application-name <value>\n--current-application-version-id <value>\n--reference-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-application-version-id <value>",
        "--reference-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of an existing application.\n\n--current-application-version-id (long)\n\nVersion of the application. You can use the DescribeApplication operation to get the current application version. If the version specified is not the current version, the ConcurrentModificationException is returned.\n\n--reference-id (string)\n\nID of the reference data source. When you add a reference data source to your application using the AddApplicationReferenceDataSource , Amazon Kinesis Analytics assigns an ID. You can use the DescribeApplication operation to get the reference ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/describe-application.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nReturns information about a specific Amazon Kinesis Analytics application.\n\nIf you want to retrieve a list of all applications in your account, use the ListApplications operation.\n\nThis operation requires permissions to perform the kinesisanalytics:DescribeApplication action. You can use DescribeApplication to get the current application versionId, which you need to call other operations such as Update .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-application\n--application-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of the application.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationDetail -> (structure)\n\nProvides a description of the application, such as the application Amazon Resource Name (ARN), status, latest version, and input and output configuration details.\n\nApplicationName -> (string)\n\nName of the application.\n\nApplicationDescription -> (string)\n\nDescription of the application.\n\nApplicationARN -> (string)\n\nARN of the application.\n\nApplicationStatus -> (string)\n\nStatus of the application.\n\nCreateTimestamp -> (timestamp)\n\nTime stamp when the application version was created.\n\nLastUpdateTimestamp -> (timestamp)\n\nTime stamp when the application was last updated.\n\nInputDescriptions -> (list)\n\nDescribes the application input configuration. For more information, see Configuring Application Input .\n\n(structure)\n\nDescribes the application input configuration. For more information, see Configuring Application Input .\n\nInputId -> (string)\n\nInput ID associated with the application input. This is the ID that Amazon Kinesis Analytics assigns to each input configuration you add to your application.\n\nNamePrefix -> (string)\n\nIn-application name prefix.\n\nInAppStreamNames -> (list)\n\nReturns the in-application stream names that are mapped to the stream source.\n\n(string)\n\nInputProcessingConfigurationDescription -> (structure)\n\nThe description of the preprocessor that executes on records in this input before the application’s code is run.\n\nInputLambdaProcessorDescription -> (structure)\n\nProvides configuration information about the associated InputLambdaProcessorDescription .\n\nResourceARN -> (string)\n\nThe ARN of the AWS Lambda function that is used to preprocess the records in the stream.\n\nRoleARN -> (string)\n\nThe ARN of the IAM role that is used to access the AWS Lambda function.\n\nKinesisStreamsInputDescription -> (structure)\n\nIf an Amazon Kinesis stream is configured as streaming source, provides Amazon Kinesis stream’s Amazon Resource Name (ARN) and an IAM role that enables Amazon Kinesis Analytics to access the stream on your behalf.\n\nResourceARN -> (string)\n\nAmazon Resource Name (ARN) of the Amazon Kinesis stream.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream.\n\nKinesisFirehoseInputDescription -> (structure)\n\nIf an Amazon Kinesis Firehose delivery stream is configured as a streaming source, provides the delivery stream’s ARN and an IAM role that enables Amazon Kinesis Analytics to access the stream on your behalf.\n\nResourceARN -> (string)\n\nAmazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery stream.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics assumes to access the stream.\n\nInputSchema -> (structure)\n\nDescribes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.\n\nRecordFormat -> (structure)\n\nSpecifies the format of the records on the streaming source.\n\nRecordFormatType -> (string)\n\nThe type of record format.\n\nMappingParameters -> (structure)\n\nWhen configuring application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.\n\nJSONMappingParameters -> (structure)\n\nProvides additional mapping information when JSON is the record format on the streaming source.\n\nRecordRowPath -> (string)\n\nPath to the top-level parent that contains the records.\n\nCSVMappingParameters -> (structure)\n\nProvides additional mapping information when the record format uses delimiters (for example, CSV).\n\nRecordRowDelimiter -> (string)\n\nRow delimiter. For example, in a CSV format, ‘n’ is the typical row delimiter.\n\nRecordColumnDelimiter -> (string)\n\nColumn delimiter. For example, in a CSV format, a comma (“,”) is the typical column delimiter.\n\nRecordEncoding -> (string)\n\nSpecifies the encoding of the records in the streaming source. For example, UTF-8.\n\nRecordColumns -> (list)\n\nA list of RecordColumn objects.\n\n(structure)\n\nDescribes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.\n\nAlso used to describe the format of the reference data source.\n\nName -> (string)\n\nName of the column created in the in-application input stream or reference table.\n\nMapping -> (string)\n\nReference to the data element in the streaming input or the reference data source. This element is required if the RecordFormatType is JSON .\n\nSqlType -> (string)\n\nType of column created in the in-application input stream or reference table.\n\nInputParallelism -> (structure)\n\nDescribes the configured parallelism (number of in-application streams mapped to the streaming source).\n\nCount -> (integer)\n\nNumber of in-application streams to create. For more information, see Limits .\n\nInputStartingPositionConfiguration -> (structure)\n\nPoint at which the application is configured to read from the input stream.\n\nInputStartingPosition -> (string)\n\nThe starting position on the stream.\n\nNOW - Start reading just after the most recent record in the stream, start at the request time stamp that the customer issued.\n\nTRIM_HORIZON - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Firehose delivery stream.\n\nLAST_STOPPED_POINT - Resume reading from where the application last stopped reading.\n\nOutputDescriptions -> (list)\n\nDescribes the application output configuration. For more information, see Configuring Application Output .\n\n(structure)\n\nDescribes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be an Amazon Kinesis stream or an Amazon Kinesis Firehose delivery stream.\n\nOutputId -> (string)\n\nA unique identifier for the output configuration.\n\nName -> (string)\n\nName of the in-application stream configured as output.\n\nKinesisStreamsOutputDescription -> (structure)\n\nDescribes Amazon Kinesis stream configured as the destination where output is written.\n\nResourceARN -> (string)\n\nAmazon Resource Name (ARN) of the Amazon Kinesis stream.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream.\n\nKinesisFirehoseOutputDescription -> (structure)\n\nDescribes the Amazon Kinesis Firehose delivery stream configured as the destination where output is written.\n\nResourceARN -> (string)\n\nAmazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery stream.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream.\n\nLambdaOutputDescription -> (structure)\n\nDescribes the AWS Lambda function configured as the destination where output is written.\n\nResourceARN -> (string)\n\nAmazon Resource Name (ARN) of the destination Lambda function.\n\nRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to write to the destination function.\n\nDestinationSchema -> (structure)\n\nData format used for writing data to the destination.\n\nRecordFormatType -> (string)\n\nSpecifies the format of the records on the output stream.\n\nReferenceDataSourceDescriptions -> (list)\n\nDescribes reference data sources configured for the application. For more information, see Configuring Application Input .\n\n(structure)\n\nDescribes the reference data source configured for an application.\n\nReferenceId -> (string)\n\nID of the reference data source. This is the ID that Amazon Kinesis Analytics assigns when you add the reference data source to your application using the AddApplicationReferenceDataSource operation.\n\nTableName -> (string)\n\nThe in-application table name created by the specific reference data source configuration.\n\nS3ReferenceDataSourceDescription -> (structure)\n\nProvides the S3 bucket name, the object key name that contains the reference data. It also provides the Amazon Resource Name (ARN) of the IAM role that Amazon Kinesis Analytics can assume to read the Amazon S3 object and populate the in-application reference table.\n\nBucketARN -> (string)\n\nAmazon Resource Name (ARN) of the S3 bucket.\n\nFileKey -> (string)\n\nAmazon S3 object key name.\n\nReferenceRoleARN -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to read the Amazon S3 object on your behalf to populate the in-application reference table.\n\nReferenceSchema -> (structure)\n\nDescribes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.\n\nRecordFormat -> (structure)\n\nSpecifies the format of the records on the streaming source.\n\nRecordFormatType -> (string)\n\nThe type of record format.\n\nMappingParameters -> (structure)\n\nWhen configuring application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.\n\nJSONMappingParameters -> (structure)\n\nProvides additional mapping information when JSON is the record format on the streaming source.\n\nRecordRowPath -> (string)\n\nPath to the top-level parent that contains the records.\n\nCSVMappingParameters -> (structure)\n\nProvides additional mapping information when the record format uses delimiters (for example, CSV).\n\nRecordRowDelimiter -> (string)\n\nRow delimiter. For example, in a CSV format, ‘n’ is the typical row delimiter.\n\nRecordColumnDelimiter -> (string)\n\nColumn delimiter. For example, in a CSV format, a comma (“,”) is the typical column delimiter.\n\nRecordEncoding -> (string)\n\nSpecifies the encoding of the records in the streaming source. For example, UTF-8.\n\nRecordColumns -> (list)\n\nA list of RecordColumn objects.\n\n(structure)\n\nDescribes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.\n\nAlso used to describe the format of the reference data source.\n\nName -> (string)\n\nName of the column created in the in-application input stream or reference table.\n\nMapping -> (string)\n\nReference to the data element in the streaming input or the reference data source. This element is required if the RecordFormatType is JSON .\n\nSqlType -> (string)\n\nType of column created in the in-application input stream or reference table.\n\nCloudWatchLoggingOptionDescriptions -> (list)\n\nDescribes the CloudWatch log streams that are configured to receive application messages. For more information about using CloudWatch log streams with Amazon Kinesis Analytics applications, see Working with Amazon CloudWatch Logs .\n\n(structure)\n\nDescription of the CloudWatch logging option.\n\nCloudWatchLoggingOptionId -> (string)\n\nID of the CloudWatch logging option description.\n\nLogStreamARN -> (string)\n\nARN of the CloudWatch log to receive application messages.\n\nRoleARN -> (string)\n\nIAM ARN of the role to use to send application messages. Note: To write application messages to CloudWatch, the IAM role used must have the PutLogEvents policy action enabled.\n\nApplicationCode -> (string)\n\nReturns the application code that you provided to perform data analysis on any of the in-application streams in your application.\n\nApplicationVersionId -> (long)\n\nProvides the current application version."
    },
    {
      "command_name": "discover-input-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/discover-input-schema.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nInfers a schema by evaluating sample records on the specified streaming source (Amazon Kinesis stream or Amazon Kinesis Firehose delivery stream) or S3 object. In the response, the operation returns the inferred schema and also the sample records that the operation used to infer the schema.\n\nYou can use the inferred schema when configuring a streaming source for your application. For conceptual information, see Configuring Application Input . Note that when you create an application using the Amazon Kinesis Analytics console, the console uses this operation to infer a schema and show it in the console user interface.\n\nThis operation requires permissions to perform the kinesisanalytics:DiscoverInputSchema action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  discover-input-schema\n[--resource-arn <value>]\n[--role-arn <value>]\n[--input-starting-position-configuration <value>]\n[--s3-configuration <value>]\n[--input-processing-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--resource-arn <value>]",
        "[--role-arn <value>]",
        "[--input-starting-position-configuration <value>]",
        "[--s3-configuration <value>]",
        "[--input-processing-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nAmazon Resource Name (ARN) of the streaming source.\n\n--role-arn (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf.\n\n--input-starting-position-configuration (structure)\n\nPoint at which you want Amazon Kinesis Analytics to start reading records from the specified streaming source discovery purposes.\n\nInputStartingPosition -> (string)\n\nThe starting position on the stream.\n\nNOW - Start reading just after the most recent record in the stream, start at the request time stamp that the customer issued.\n\nTRIM_HORIZON - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Firehose delivery stream.\n\nLAST_STOPPED_POINT - Resume reading from where the application last stopped reading.\n\nShorthand Syntax:\n\nInputStartingPosition=string\n\n\nJSON Syntax:\n\n{\n  \"InputStartingPosition\": \"NOW\"|\"TRIM_HORIZON\"|\"LAST_STOPPED_POINT\"\n}\n\n\n--s3-configuration (structure)\n\nSpecify this parameter to discover a schema from data in an Amazon S3 object.\n\nRoleARN -> (string)\n\nIAM ARN of the role used to access the data.\n\nBucketARN -> (string)\n\nARN of the S3 bucket that contains the data.\n\nFileKey -> (string)\n\nThe name of the object that contains the data.\n\nShorthand Syntax:\n\nRoleARN=string,BucketARN=string,FileKey=string\n\n\nJSON Syntax:\n\n{\n  \"RoleARN\": \"string\",\n  \"BucketARN\": \"string\",\n  \"FileKey\": \"string\"\n}\n\n\n--input-processing-configuration (structure)\n\nThe InputProcessingConfiguration to use to preprocess the records before discovering the schema of the records.\n\nInputLambdaProcessor -> (structure)\n\nThe InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.\n\nResourceARN -> (string)\n\nThe ARN of the AWS Lambda function that operates on records in the stream.\n\nNote\n\nTo specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see Example ARNs: AWS Lambda\n\nRoleARN -> (string)\n\nThe ARN of the IAM role that is used to access the AWS Lambda function.\n\nShorthand Syntax:\n\nInputLambdaProcessor={ResourceARN=string,RoleARN=string}\n\n\nJSON Syntax:\n\n{\n  \"InputLambdaProcessor\": {\n    \"ResourceARN\": \"string\",\n    \"RoleARN\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInputSchema -> (structure)\n\nSchema inferred from the streaming source. It identifies the format of the data in the streaming source and how each data element maps to corresponding columns in the in-application stream that you can create.\n\nRecordFormat -> (structure)\n\nSpecifies the format of the records on the streaming source.\n\nRecordFormatType -> (string)\n\nThe type of record format.\n\nMappingParameters -> (structure)\n\nWhen configuring application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.\n\nJSONMappingParameters -> (structure)\n\nProvides additional mapping information when JSON is the record format on the streaming source.\n\nRecordRowPath -> (string)\n\nPath to the top-level parent that contains the records.\n\nCSVMappingParameters -> (structure)\n\nProvides additional mapping information when the record format uses delimiters (for example, CSV).\n\nRecordRowDelimiter -> (string)\n\nRow delimiter. For example, in a CSV format, ‘n’ is the typical row delimiter.\n\nRecordColumnDelimiter -> (string)\n\nColumn delimiter. For example, in a CSV format, a comma (“,”) is the typical column delimiter.\n\nRecordEncoding -> (string)\n\nSpecifies the encoding of the records in the streaming source. For example, UTF-8.\n\nRecordColumns -> (list)\n\nA list of RecordColumn objects.\n\n(structure)\n\nDescribes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.\n\nAlso used to describe the format of the reference data source.\n\nName -> (string)\n\nName of the column created in the in-application input stream or reference table.\n\nMapping -> (string)\n\nReference to the data element in the streaming input or the reference data source. This element is required if the RecordFormatType is JSON .\n\nSqlType -> (string)\n\nType of column created in the in-application input stream or reference table.\n\nParsedInputRecords -> (list)\n\nAn array of elements, where each element corresponds to a row in a stream record (a stream record can have more than one row).\n\n(list)\n\n(string)\n\nProcessedInputRecords -> (list)\n\nStream data that was modified by the processor specified in the InputProcessingConfiguration parameter.\n\n(string)\n\nRawInputRecords -> (list)\n\nRaw stream data that was sampled to infer the schema.\n\n(string)"
    },
    {
      "command_name": "list-applications",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/list-applications.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nReturns a list of Amazon Kinesis Analytics applications in your account. For each application, the response includes the application name, Amazon Resource Name (ARN), and status. If the response returns the HasMoreApplications value as true, you can send another request by adding the ExclusiveStartApplicationName in the request body, and set the value of this to the last application name from the previous response.\n\nIf you want detailed information about a specific application, use DescribeApplication .\n\nThis operation requires permissions to perform the kinesisanalytics:ListApplications action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-applications\n[--limit <value>]\n[--exclusive-start-application-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--limit <value>]",
        "[--exclusive-start-application-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--limit (integer)\n\nMaximum number of applications to list.\n\n--exclusive-start-application-name (string)\n\nName of the application to start the list with. When using pagination to retrieve the list, you don’t need to specify this parameter in the first request. However, in subsequent requests, you add the last application name from the previous response to get the next page of applications.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationSummaries -> (list)\n\nList of ApplicationSummary objects.\n\n(structure)\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nProvides application summary information, including the application Amazon Resource Name (ARN), name, and status.\n\nApplicationName -> (string)\n\nName of the application.\n\nApplicationARN -> (string)\n\nARN of the application.\n\nApplicationStatus -> (string)\n\nStatus of the application.\n\nHasMoreApplications -> (boolean)\n\nReturns true if there are more applications to retrieve."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/list-tags-for-resource.html",
      "command_description": "Description\n\nRetrieves the list of key-value tags assigned to the application. For more information, see Using Tagging .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the application for which to retrieve tags.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe key-value tags assigned to the application.\n\n(structure)\n\nA key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see Using Tagging .\n\nKey -> (string)\n\nThe key of the key-value tag.\n\nValue -> (string)\n\nThe value of the key-value tag. The value is optional."
    },
    {
      "command_name": "start-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/start-application.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nStarts the specified Amazon Kinesis Analytics application. After creating an application, you must exclusively call this operation to start your application.\n\nAfter the application starts, it begins consuming the input data, processes it, and writes the output to the configured destination.\n\nThe application status must be READY for you to start an application. You can get the application status in the console or using the DescribeApplication operation.\n\nAfter you start the application, you can stop the application from processing the input by calling the StopApplication operation.\n\nThis operation requires permissions to perform the kinesisanalytics:StartApplication action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-application\n--application-name <value>\n--input-configurations <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--input-configurations <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of the application.\n\n--input-configurations (list)\n\nIdentifies the specific input, by ID, that the application starts consuming. Amazon Kinesis Analytics starts reading the streaming source associated with the input. You can also specify where in the streaming source you want Amazon Kinesis Analytics to start reading.\n\n(structure)\n\nWhen you start your application, you provide this configuration, which identifies the input source and the point in the input source at which you want the application to start processing records.\n\nId -> (string)\n\nInput source ID. You can get this ID by calling the DescribeApplication operation.\n\nInputStartingPositionConfiguration -> (structure)\n\nPoint at which you want the application to start processing records from the streaming source.\n\nInputStartingPosition -> (string)\n\nThe starting position on the stream.\n\nNOW - Start reading just after the most recent record in the stream, start at the request time stamp that the customer issued.\n\nTRIM_HORIZON - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Firehose delivery stream.\n\nLAST_STOPPED_POINT - Resume reading from where the application last stopped reading.\n\nShorthand Syntax:\n\nId=string,InputStartingPositionConfiguration={InputStartingPosition=string} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Id\": \"string\",\n    \"InputStartingPositionConfiguration\": {\n      \"InputStartingPosition\": \"NOW\"|\"TRIM_HORIZON\"|\"LAST_STOPPED_POINT\"\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "stop-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/stop-application.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nStops the application from processing input data. You can stop an application only if it is in the running state. You can use the DescribeApplication operation to find the application state. After the application is stopped, Amazon Kinesis Analytics stops reading data from the input, the application stops processing data, and there is no output written to the destination.\n\nThis operation requires permissions to perform the kinesisanalytics:StopApplication action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-application\n--application-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of the running application to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/tag-resource.html",
      "command_description": "Description\n\nAdds one or more key-value tags to a Kinesis Analytics application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see Using Tagging .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the application to assign the tags.\n\n--tags (list)\n\nThe key-value tags to assign to the application.\n\n(structure)\n\nA key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see Using Tagging .\n\nKey -> (string)\n\nThe key of the key-value tag.\n\nValue -> (string)\n\nThe value of the key-value tag. The value is optional.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/untag-resource.html",
      "command_description": "Description\n\nRemoves one or more tags from a Kinesis Analytics application. For more information, see Using Tagging .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the Kinesis Analytics application from which to remove the tags.\n\n--tag-keys (list)\n\nA list of keys of tags to remove from the specified application.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesisanalytics/update-application.html",
      "command_description": "Description\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nUpdates an existing Amazon Kinesis Analytics application. Using this API, you can update application code, input configuration, and output configuration.\n\nNote that Amazon Kinesis Analytics updates the CurrentApplicationVersionId each time you update your application.\n\nThis operation requires permission for the kinesisanalytics:UpdateApplication action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-application\n--application-name <value>\n--current-application-version-id <value>\n--application-update <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-application-version-id <value>",
        "--application-update <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nName of the Amazon Kinesis Analytics application to update.\n\n--current-application-version-id (long)\n\nThe current application version ID. You can use the DescribeApplication operation to get this value.\n\n--application-update (structure)\n\nDescribes application updates.\n\nInputUpdates -> (list)\n\nDescribes application input configuration updates.\n\n(structure)\n\nDescribes updates to a specific input configuration (identified by the InputId of an application).\n\nInputId -> (string)\n\nInput ID of the application input to be updated.\n\nNamePrefixUpdate -> (string)\n\nName prefix for in-application streams that Amazon Kinesis Analytics creates for the specific streaming source.\n\nInputProcessingConfigurationUpdate -> (structure)\n\nDescribes updates for an input processing configuration.\n\nInputLambdaProcessorUpdate -> (structure)\n\nProvides update information for an InputLambdaProcessor .\n\nResourceARNUpdate -> (string)\n\nThe Amazon Resource Name (ARN) of the new AWS Lambda function that is used to preprocess the records in the stream.\n\nNote\n\nTo specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see Example ARNs: AWS Lambda\n\nRoleARNUpdate -> (string)\n\nThe ARN of the new IAM role that is used to access the AWS Lambda function.\n\nKinesisStreamsInputUpdate -> (structure)\n\nIf an Amazon Kinesis stream is the streaming source to be updated, provides an updated stream Amazon Resource Name (ARN) and IAM role ARN.\n\nResourceARNUpdate -> (string)\n\nAmazon Resource Name (ARN) of the input Amazon Kinesis stream to read.\n\nRoleARNUpdate -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf. You need to grant the necessary permissions to this role.\n\nKinesisFirehoseInputUpdate -> (structure)\n\nIf an Amazon Kinesis Firehose delivery stream is the streaming source to be updated, provides an updated stream ARN and IAM role ARN.\n\nResourceARNUpdate -> (string)\n\nAmazon Resource Name (ARN) of the input Amazon Kinesis Firehose delivery stream to read.\n\nRoleARNUpdate -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf. You need to grant the necessary permissions to this role.\n\nInputSchemaUpdate -> (structure)\n\nDescribes the data format on the streaming source, and how record elements on the streaming source map to columns of the in-application stream that is created.\n\nRecordFormatUpdate -> (structure)\n\nSpecifies the format of the records on the streaming source.\n\nRecordFormatType -> (string)\n\nThe type of record format.\n\nMappingParameters -> (structure)\n\nWhen configuring application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.\n\nJSONMappingParameters -> (structure)\n\nProvides additional mapping information when JSON is the record format on the streaming source.\n\nRecordRowPath -> (string)\n\nPath to the top-level parent that contains the records.\n\nCSVMappingParameters -> (structure)\n\nProvides additional mapping information when the record format uses delimiters (for example, CSV).\n\nRecordRowDelimiter -> (string)\n\nRow delimiter. For example, in a CSV format, ‘n’ is the typical row delimiter.\n\nRecordColumnDelimiter -> (string)\n\nColumn delimiter. For example, in a CSV format, a comma (“,”) is the typical column delimiter.\n\nRecordEncodingUpdate -> (string)\n\nSpecifies the encoding of the records in the streaming source. For example, UTF-8.\n\nRecordColumnUpdates -> (list)\n\nA list of RecordColumn objects. Each object describes the mapping of the streaming source element to the corresponding column in the in-application stream.\n\n(structure)\n\nDescribes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.\n\nAlso used to describe the format of the reference data source.\n\nName -> (string)\n\nName of the column created in the in-application input stream or reference table.\n\nMapping -> (string)\n\nReference to the data element in the streaming input or the reference data source. This element is required if the RecordFormatType is JSON .\n\nSqlType -> (string)\n\nType of column created in the in-application input stream or reference table.\n\nInputParallelismUpdate -> (structure)\n\nDescribes the parallelism updates (the number in-application streams Amazon Kinesis Analytics creates for the specific streaming source).\n\nCountUpdate -> (integer)\n\nNumber of in-application streams to create for the specified streaming source.\n\nApplicationCodeUpdate -> (string)\n\nDescribes application code updates.\n\nOutputUpdates -> (list)\n\nDescribes application output configuration updates.\n\n(structure)\n\nDescribes updates to the output configuration identified by the OutputId .\n\nOutputId -> (string)\n\nIdentifies the specific output configuration that you want to update.\n\nNameUpdate -> (string)\n\nIf you want to specify a different in-application stream for this output configuration, use this field to specify the new in-application stream name.\n\nKinesisStreamsOutputUpdate -> (structure)\n\nDescribes an Amazon Kinesis stream as the destination for the output.\n\nResourceARNUpdate -> (string)\n\nAmazon Resource Name (ARN) of the Amazon Kinesis stream where you want to write the output.\n\nRoleARNUpdate -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf. You need to grant the necessary permissions to this role.\n\nKinesisFirehoseOutputUpdate -> (structure)\n\nDescribes an Amazon Kinesis Firehose delivery stream as the destination for the output.\n\nResourceARNUpdate -> (string)\n\nAmazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery stream to write to.\n\nRoleARNUpdate -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf. You need to grant the necessary permissions to this role.\n\nLambdaOutputUpdate -> (structure)\n\nDescribes an AWS Lambda function as the destination for the output.\n\nResourceARNUpdate -> (string)\n\nAmazon Resource Name (ARN) of the destination Lambda function.\n\nNote\n\nTo specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see Example ARNs: AWS Lambda\n\nRoleARNUpdate -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to write to the destination function on your behalf. You need to grant the necessary permissions to this role.\n\nDestinationSchemaUpdate -> (structure)\n\nDescribes the data format when records are written to the destination. For more information, see Configuring Application Output .\n\nRecordFormatType -> (string)\n\nSpecifies the format of the records on the output stream.\n\nReferenceDataSourceUpdates -> (list)\n\nDescribes application reference data source updates.\n\n(structure)\n\nWhen you update a reference data source configuration for an application, this object provides all the updated values (such as the source bucket name and object key name), the in-application table name that is created, and updated mapping information that maps the data in the Amazon S3 object to the in-application reference table that is created.\n\nReferenceId -> (string)\n\nID of the reference data source being updated. You can use the DescribeApplication operation to get this value.\n\nTableNameUpdate -> (string)\n\nIn-application table name that is created by this update.\n\nS3ReferenceDataSourceUpdate -> (structure)\n\nDescribes the S3 bucket name, object key name, and IAM role that Amazon Kinesis Analytics can assume to read the Amazon S3 object on your behalf and populate the in-application reference table.\n\nBucketARNUpdate -> (string)\n\nAmazon Resource Name (ARN) of the S3 bucket.\n\nFileKeyUpdate -> (string)\n\nObject key name.\n\nReferenceRoleARNUpdate -> (string)\n\nARN of the IAM role that Amazon Kinesis Analytics can assume to read the Amazon S3 object and populate the in-application.\n\nReferenceSchemaUpdate -> (structure)\n\nDescribes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.\n\nRecordFormat -> (structure)\n\nSpecifies the format of the records on the streaming source.\n\nRecordFormatType -> (string)\n\nThe type of record format.\n\nMappingParameters -> (structure)\n\nWhen configuring application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.\n\nJSONMappingParameters -> (structure)\n\nProvides additional mapping information when JSON is the record format on the streaming source.\n\nRecordRowPath -> (string)\n\nPath to the top-level parent that contains the records.\n\nCSVMappingParameters -> (structure)\n\nProvides additional mapping information when the record format uses delimiters (for example, CSV).\n\nRecordRowDelimiter -> (string)\n\nRow delimiter. For example, in a CSV format, ‘n’ is the typical row delimiter.\n\nRecordColumnDelimiter -> (string)\n\nColumn delimiter. For example, in a CSV format, a comma (“,”) is the typical column delimiter.\n\nRecordEncoding -> (string)\n\nSpecifies the encoding of the records in the streaming source. For example, UTF-8.\n\nRecordColumns -> (list)\n\nA list of RecordColumn objects.\n\n(structure)\n\nDescribes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.\n\nAlso used to describe the format of the reference data source.\n\nName -> (string)\n\nName of the column created in the in-application input stream or reference table.\n\nMapping -> (string)\n\nReference to the data element in the streaming input or the reference data source. This element is required if the RecordFormatType is JSON .\n\nSqlType -> (string)\n\nType of column created in the in-application input stream or reference table.\n\nCloudWatchLoggingOptionUpdates -> (list)\n\nDescribes application CloudWatch logging option updates.\n\n(structure)\n\nDescribes CloudWatch logging option updates.\n\nCloudWatchLoggingOptionId -> (string)\n\nID of the CloudWatch logging option to update\n\nLogStreamARNUpdate -> (string)\n\nARN of the CloudWatch log to receive application messages.\n\nRoleARNUpdate -> (string)\n\nIAM ARN of the role to use to send application messages. Note: To write application messages to CloudWatch, the IAM role used must have the PutLogEvents policy action enabled.\n\nJSON Syntax:\n\n{\n  \"InputUpdates\": [\n    {\n      \"InputId\": \"string\",\n      \"NamePrefixUpdate\": \"string\",\n      \"InputProcessingConfigurationUpdate\": {\n        \"InputLambdaProcessorUpdate\": {\n          \"ResourceARNUpdate\": \"string\",\n          \"RoleARNUpdate\": \"string\"\n        }\n      },\n      \"KinesisStreamsInputUpdate\": {\n        \"ResourceARNUpdate\": \"string\",\n        \"RoleARNUpdate\": \"string\"\n      },\n      \"KinesisFirehoseInputUpdate\": {\n        \"ResourceARNUpdate\": \"string\",\n        \"RoleARNUpdate\": \"string\"\n      },\n      \"InputSchemaUpdate\": {\n        \"RecordFormatUpdate\": {\n          \"RecordFormatType\": \"JSON\"|\"CSV\",\n          \"MappingParameters\": {\n            \"JSONMappingParameters\": {\n              \"RecordRowPath\": \"string\"\n            },\n            \"CSVMappingParameters\": {\n              \"RecordRowDelimiter\": \"string\",\n              \"RecordColumnDelimiter\": \"string\"\n            }\n          }\n        },\n        \"RecordEncodingUpdate\": \"string\",\n        \"RecordColumnUpdates\": [\n          {\n            \"Name\": \"string\",\n            \"Mapping\": \"string\",\n            \"SqlType\": \"string\"\n          }\n          ...\n        ]\n      },\n      \"InputParallelismUpdate\": {\n        \"CountUpdate\": integer\n      }\n    }\n    ...\n  ],\n  \"ApplicationCodeUpdate\": \"string\",\n  \"OutputUpdates\": [\n    {\n      \"OutputId\": \"string\",\n      \"NameUpdate\": \"string\",\n      \"KinesisStreamsOutputUpdate\": {\n        \"ResourceARNUpdate\": \"string\",\n        \"RoleARNUpdate\": \"string\"\n      },\n      \"KinesisFirehoseOutputUpdate\": {\n        \"ResourceARNUpdate\": \"string\",\n        \"RoleARNUpdate\": \"string\"\n      },\n      \"LambdaOutputUpdate\": {\n        \"ResourceARNUpdate\": \"string\",\n        \"RoleARNUpdate\": \"string\"\n      },\n      \"DestinationSchemaUpdate\": {\n        \"RecordFormatType\": \"JSON\"|\"CSV\"\n      }\n    }\n    ...\n  ],\n  \"ReferenceDataSourceUpdates\": [\n    {\n      \"ReferenceId\": \"string\",\n      \"TableNameUpdate\": \"string\",\n      \"S3ReferenceDataSourceUpdate\": {\n        \"BucketARNUpdate\": \"string\",\n        \"FileKeyUpdate\": \"string\",\n        \"ReferenceRoleARNUpdate\": \"string\"\n      },\n      \"ReferenceSchemaUpdate\": {\n        \"RecordFormat\": {\n          \"RecordFormatType\": \"JSON\"|\"CSV\",\n          \"MappingParameters\": {\n            \"JSONMappingParameters\": {\n              \"RecordRowPath\": \"string\"\n            },\n            \"CSVMappingParameters\": {\n              \"RecordRowDelimiter\": \"string\",\n              \"RecordColumnDelimiter\": \"string\"\n            }\n          }\n        },\n        \"RecordEncoding\": \"string\",\n        \"RecordColumns\": [\n          {\n            \"Name\": \"string\",\n            \"Mapping\": \"string\",\n            \"SqlType\": \"string\"\n          }\n          ...\n        ]\n      }\n    }\n    ...\n  ],\n  \"CloudWatchLoggingOptionUpdates\": [\n    {\n      \"CloudWatchLoggingOptionId\": \"string\",\n      \"LogStreamARNUpdate\": \"string\",\n      \"RoleARNUpdate\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    }
  ],
  "service_description": "Description\n\nOverview\n\nNote\n\nThis documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see Amazon Kinesis Data Analytics API V2 Documentation .\n\nThis is the Amazon Kinesis Analytics v1 API Reference . The Amazon Kinesis Analytics Developer Guide provides additional information."
}