{
  "service_name": "devicefarm",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/index.html",
  "service_commands": [
    {
      "command_name": "create-device-pool",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/create-device-pool.html",
      "command_description": "Description\n\nCreates a device pool.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-device-pool\n--project-arn <value>\n--name <value>\n[--description <value>]\n--rules <value>\n[--max-devices <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "--name <value>",
        "[--description <value>]",
        "--rules <value>",
        "[--max-devices <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe ARN of the project for the device pool.\n\n--name (string)\n\nThe device pool’s name.\n\n--description (string)\n\nThe device pool’s description.\n\n--rules (list)\n\nThe device pool’s rules.\n\n(structure)\n\nRepresents a condition for a device pool.\n\nattribute -> (string)\n\nThe rule’s stringified attribute. For example, specify the value as \"\\\"abc\\\"\" .\n\nThe supported operators for each attribute are provided in the following list.\n\nAPPIUM_VERSION\n\nThe Appium version for the test.\n\nSupported operators: CONTAINS\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example .\n\nSupported operators: EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nMODEL\n\nThe device model, such as Apple iPad Air 2 or Google Pixel.\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\noperator -> (string)\n\nSpecifies how Device Farm compares the rule’s attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.\n\nvalue -> (string)\n\nThe rule’s value.\n\nShorthand Syntax:\n\nattribute=string,operator=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"attribute\": \"ARN\"|\"PLATFORM\"|\"FORM_FACTOR\"|\"MANUFACTURER\"|\"REMOTE_ACCESS_ENABLED\"|\"REMOTE_DEBUG_ENABLED\"|\"APPIUM_VERSION\"|\"INSTANCE_ARN\"|\"INSTANCE_LABELS\"|\"FLEET_TYPE\"|\"OS_VERSION\"|\"MODEL\"|\"AVAILABILITY\",\n    \"operator\": \"EQUALS\"|\"LESS_THAN\"|\"LESS_THAN_OR_EQUALS\"|\"GREATER_THAN\"|\"GREATER_THAN_OR_EQUALS\"|\"IN\"|\"NOT_IN\"|\"CONTAINS\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--max-devices (integer)\n\nThe number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and meet the criteria that you assign for the rules parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.\n\nBy specifying the maximum number of devices, you can control the costs that you incur by running tests.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndevicePool -> (structure)\n\nThe newly created device pool.\n\narn -> (string)\n\nThe device pool’s ARN.\n\nname -> (string)\n\nThe device pool’s name.\n\ndescription -> (string)\n\nThe device pool’s description.\n\ntype -> (string)\n\nThe device pool’s type.\n\nAllowed values include:\n\nCURATED: A device pool that is created and managed by AWS Device Farm.\n\nPRIVATE: A device pool that is created and managed by the device pool developer.\n\nrules -> (list)\n\nInformation about the device pool’s rules.\n\n(structure)\n\nRepresents a condition for a device pool.\n\nattribute -> (string)\n\nThe rule’s stringified attribute. For example, specify the value as \"\\\"abc\\\"\" .\n\nThe supported operators for each attribute are provided in the following list.\n\nAPPIUM_VERSION\n\nThe Appium version for the test.\n\nSupported operators: CONTAINS\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example .\n\nSupported operators: EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nMODEL\n\nThe device model, such as Apple iPad Air 2 or Google Pixel.\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\noperator -> (string)\n\nSpecifies how Device Farm compares the rule’s attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.\n\nvalue -> (string)\n\nThe rule’s value.\n\nmaxDevices -> (integer)\n\nThe number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and meet the criteria that you assign for the rules parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.\n\nBy specifying the maximum number of devices, you can control the costs that you incur by running tests.",
      "command_examples": "Examples\n\nTo create a device pool\n\nThe following command creates an Android device pool for a project:\n\naws devicefarm create-device-pool --name pool1 --rules file://device-pool-rules.json --project-arn \"arn:aws:devicefarm:us-west-2:123456789012:project:070fc3ca-7ec1-4741-9c1f-d3e044efc506\"\n\n\nYou can get the project ARN from the output of create-project or list-projects. The file device-pool-rules.json is a JSON document in the current folder that specifies the device platform:\n\n[\n    {\n        \"attribute\": \"PLATFORM\",\n        \"operator\": \"EQUALS\",\n        \"value\": \"\\\"ANDROID\\\"\"\n    }\n]\n\n\nOutput:\n\n{\n    \"devicePool\": {\n        \"rules\": [\n            {\n                \"operator\": \"EQUALS\",\n                \"attribute\": \"PLATFORM\",\n                \"value\": \"\\\"ANDROID\\\"\"\n            }\n        ],\n        \"type\": \"PRIVATE\",\n        \"name\": \"pool1\",\n        \"arn\": \"arn:aws:devicefarm:us-west-2:123456789012:devicepool:070fc3ca-7ec1-4741-9c1f-d3e044efc506/2aa8d2a9-5e73-47ca-b929-659cb34b7dcd\"\n    }\n}\n"
    },
    {
      "command_name": "create-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/create-instance-profile.html",
      "command_description": "Description\n\nCreates a profile that can be applied to one or more private fleet device instances.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-instance-profile\n--name <value>\n[--description <value>]\n[--package-cleanup | --no-package-cleanup]\n[--exclude-app-packages-from-cleanup <value>]\n[--reboot-after-use | --no-reboot-after-use]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--package-cleanup | --no-package-cleanup]",
        "[--exclude-app-packages-from-cleanup <value>]",
        "[--reboot-after-use | --no-reboot-after-use]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of your instance profile.\n\n--description (string)\n\nThe description of your instance profile.\n\n--package-cleanup | --no-package-cleanup (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\n--exclude-app-packages-from-cleanup (list)\n\nAn array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--reboot-after-use | --no-reboot-after-use (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninstanceProfile -> (structure)\n\nAn object that contains information about your instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile."
    },
    {
      "command_name": "create-network-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/create-network-profile.html",
      "command_description": "Description\n\nCreates a network profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-network-profile\n--project-arn <value>\n--name <value>\n[--description <value>]\n[--type <value>]\n[--uplink-bandwidth-bits <value>]\n[--downlink-bandwidth-bits <value>]\n[--uplink-delay-ms <value>]\n[--downlink-delay-ms <value>]\n[--uplink-jitter-ms <value>]\n[--downlink-jitter-ms <value>]\n[--uplink-loss-percent <value>]\n[--downlink-loss-percent <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "--name <value>",
        "[--description <value>]",
        "[--type <value>]",
        "[--uplink-bandwidth-bits <value>]",
        "[--downlink-bandwidth-bits <value>]",
        "[--uplink-delay-ms <value>]",
        "[--downlink-delay-ms <value>]",
        "[--uplink-jitter-ms <value>]",
        "[--downlink-jitter-ms <value>]",
        "[--uplink-loss-percent <value>]",
        "[--downlink-loss-percent <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe Amazon Resource Name (ARN) of the project for which you want to create a network profile.\n\n--name (string)\n\nThe name for the new network profile.\n\n--description (string)\n\nThe description of the network profile.\n\n--type (string)\n\nThe type of network profile to create. Valid values are listed here.\n\nPossible values:\n\nCURATED\n\nPRIVATE\n\n--uplink-bandwidth-bits (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\n--downlink-bandwidth-bits (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\n--uplink-delay-ms (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\n--downlink-delay-ms (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\n--uplink-jitter-ms (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\n--downlink-jitter-ms (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\n--uplink-loss-percent (integer)\n\nProportion of transmitted packets that fail to arrive from 0 to 100 percent.\n\n--downlink-loss-percent (integer)\n\nProportion of received packets that fail to arrive from 0 to 100 percent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnetworkProfile -> (structure)\n\nThe network profile that is returned by the create network profile request.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the network profile.\n\nname -> (string)\n\nThe name of the network profile.\n\ndescription -> (string)\n\nThe description of the network profile.\n\ntype -> (string)\n\nThe type of network profile. Valid values are listed here.\n\nuplinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\ndownlinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\nuplinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\ndownlinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\nuplinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\ndownlinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\nuplinkLossPercent -> (integer)\n\nProportion of transmitted packets that fail to arrive from 0 to 100 percent.\n\ndownlinkLossPercent -> (integer)\n\nProportion of received packets that fail to arrive from 0 to 100 percent."
    },
    {
      "command_name": "create-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/create-project.html",
      "command_description": "Description\n\nCreates a project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-project\n--name <value>\n[--default-job-timeout-minutes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--default-job-timeout-minutes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe project’s name.\n\n--default-job-timeout-minutes (integer)\n\nSets the execution timeout value (in minutes) for a project. All test runs in this project use the specified execution timeout value unless overridden when scheduling a run.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nproject -> (structure)\n\nThe newly created project.\n\narn -> (string)\n\nThe project’s ARN.\n\nname -> (string)\n\nThe project’s name.\n\ndefaultJobTimeoutMinutes -> (integer)\n\nThe default number of minutes (at the project level) a test run executes before it times out. The default value is 150 minutes.\n\ncreated -> (timestamp)\n\nWhen the project was created.",
      "command_examples": "Examples\n\nTo create a project\n\nThe following command creates a new project named my-project:\n\naws devicefarm create-project --name my-project\n\n\nOutput:\n\n{\n    \"project\": {\n        \"name\": \"myproject\",\n        \"arn\": \"arn:aws:devicefarm:us-west-2:123456789012:project:070fc3ca-7ec1-4741-9c1f-d3e044efc506\",\n        \"created\": 1503612890.057\n    }\n}\n"
    },
    {
      "command_name": "create-remote-access-session",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/create-remote-access-session.html",
      "command_description": "Description\n\nSpecifies and starts a remote access session.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-remote-access-session\n--project-arn <value>\n--device-arn <value>\n[--instance-arn <value>]\n[--ssh-public-key <value>]\n[--remote-debug-enabled | --no-remote-debug-enabled]\n[--remote-record-enabled | --no-remote-record-enabled]\n[--remote-record-app-arn <value>]\n[--name <value>]\n[--client-id <value>]\n[--configuration <value>]\n[--interaction-mode <value>]\n[--skip-app-resign | --no-skip-app-resign]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "--device-arn <value>",
        "[--instance-arn <value>]",
        "[--ssh-public-key <value>]",
        "[--remote-debug-enabled | --no-remote-debug-enabled]",
        "[--remote-record-enabled | --no-remote-record-enabled]",
        "[--remote-record-app-arn <value>]",
        "[--name <value>]",
        "[--client-id <value>]",
        "[--configuration <value>]",
        "[--interaction-mode <value>]",
        "[--skip-app-resign | --no-skip-app-resign]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe Amazon Resource Name (ARN) of the project for which you want to create a remote access session.\n\n--device-arn (string)\n\nThe ARN of the device for which you want to create a remote access session.\n\n--instance-arn (string)\n\nThe Amazon Resource Name (ARN) of the device instance for which you want to create a remote access session.\n\n--ssh-public-key (string)\n\nIgnored. The public key of the ssh key pair you want to use for connecting to remote devices in your remote debugging session. This key is required only if remoteDebugEnabled is set to true .\n\nRemote debugging is no longer supported .\n\n--remote-debug-enabled | --no-remote-debug-enabled (boolean)\n\nSet to true if you want to access devices remotely for debugging in your remote access session.\n\nRemote debugging is no longer supported .\n\n--remote-record-enabled | --no-remote-record-enabled (boolean)\n\nSet to true to enable remote recording for the remote access session.\n\n--remote-record-app-arn (string)\n\nThe Amazon Resource Name (ARN) for the app to be recorded in the remote access session.\n\n--name (string)\n\nThe name of the remote access session to create.\n\n--client-id (string)\n\nUnique identifier for the client. If you want access to multiple devices on the same client, you should pass the same clientId value in each call to CreateRemoteAccessSession . This identifier is required only if remoteDebugEnabled is set to true .\n\nRemote debugging is no longer supported .\n\n--configuration (structure)\n\nThe configuration information for the remote access session request.\n\nbillingMethod -> (string)\n\nThe billing method for the remote access session.\n\nvpceConfigurationArns -> (list)\n\nAn array of ARNs included in the VPC endpoint configuration.\n\n(string)\n\nShorthand Syntax:\n\nbillingMethod=string,vpceConfigurationArns=string,string\n\n\nJSON Syntax:\n\n{\n  \"billingMethod\": \"METERED\"|\"UNMETERED\",\n  \"vpceConfigurationArns\": [\"string\", ...]\n}\n\n\n--interaction-mode (string)\n\nThe interaction mode of the remote access session. Valid values are:\n\nINTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You cannot run XCUITest framework-based tests in this mode.\n\nNO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This mode has the fastest test execution speed. You can run XCUITest framework-based tests in this mode.\n\nVIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest framework-based tests and watch the screen in this mode.\n\nPossible values:\n\nINTERACTIVE\n\nNO_VIDEO\n\nVIDEO_ONLY\n\n--skip-app-resign | --no-skip-app-resign (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information on how Device Farm modifies your uploads during tests, see Do you modify my app?\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nremoteAccessSession -> (structure)\n\nA container that describes the remote access session when the request to create a remote access session is sent.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the remote access session.\n\nname -> (string)\n\nThe name of the remote access session.\n\ncreated -> (timestamp)\n\nThe date and time the remote access session was created.\n\nstatus -> (string)\n\nThe status of the remote access session. Can be any of the following:\n\nPENDING.\n\nPENDING_CONCURRENCY.\n\nPENDING_DEVICE.\n\nPROCESSING.\n\nSCHEDULING.\n\nPREPARING.\n\nRUNNING.\n\nCOMPLETED.\n\nSTOPPING.\n\nresult -> (string)\n\nThe result of the remote access session. Can be any of the following:\n\nPENDING.\n\nPASSED.\n\nWARNED.\n\nFAILED.\n\nSKIPPED.\n\nERRORED.\n\nSTOPPED.\n\nmessage -> (string)\n\nA message about the remote access session.\n\nstarted -> (timestamp)\n\nThe date and time the remote access session was started.\n\nstopped -> (timestamp)\n\nThe date and time the remote access session was stopped.\n\ndevice -> (structure)\n\nThe device (phone or tablet) used in the remote access session.\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\ninstanceArn -> (string)\n\nThe ARN of the instance.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nremoteRecordEnabled -> (boolean)\n\nThis flag is set to true if remote recording is enabled for the remote access session.\n\nremoteRecordAppArn -> (string)\n\nThe ARN for the app to be recorded in the remote access session.\n\nhostAddress -> (string)\n\nIP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nclientId -> (string)\n\nUnique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nbillingMethod -> (string)\n\nThe billing method of the remote access session. Possible values include METERED or UNMETERED . For more information about metered devices, see AWS Device Farm terminology .\n\ndeviceMinutes -> (structure)\n\nThe number of minutes a device is used in a remote access session (including setup and teardown minutes).\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nendpoint -> (string)\n\nThe endpoint for the remote access sesssion.\n\ndeviceUdid -> (string)\n\nUnique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\ninteractionMode -> (string)\n\nThe interaction mode of the remote access session. Valid values are:\n\nINTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You cannot run XCUITest framework-based tests in this mode.\n\nNO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This mode has the fastest test execution speed. You can run XCUITest framework-based tests in this mode.\n\nVIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest framework-based tests and watch the screen in this mode.\n\nskipAppResign -> (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information about how Device Farm re-signs your apps, see Do you modify my app? in the AWS Device Farm FAQs ."
    },
    {
      "command_name": "create-test-grid-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/create-test-grid-project.html",
      "command_description": "Description\n\nCreates a Selenium testing project. Projects are used to track TestGridSession instances.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-test-grid-project\n--name <value>\n[--description <value>]\n[--vpc-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--vpc-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nHuman-readable name of the Selenium testing project.\n\n--description (string)\n\nHuman-readable description of the project.\n\n--vpc-config (structure)\n\nThe VPC security groups and subnets that are attached to a project.\n\nsecurityGroupIds -> (list)\n\nA list of VPC security group IDs in your Amazon VPC.\n\n(string)\n\nsubnetIds -> (list)\n\nA list of VPC subnet IDs in your Amazon VPC.\n\n(string)\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nShorthand Syntax:\n\nsecurityGroupIds=string,string,subnetIds=string,string,vpcId=string\n\n\nJSON Syntax:\n\n{\n  \"securityGroupIds\": [\"string\", ...],\n  \"subnetIds\": [\"string\", ...],\n  \"vpcId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntestGridProject -> (structure)\n\nARN of the Selenium testing project that was created.\n\narn -> (string)\n\nThe ARN for the project.\n\nname -> (string)\n\nA human-readable name for the project.\n\ndescription -> (string)\n\nA human-readable description for the project.\n\nvpcConfig -> (structure)\n\nThe VPC security groups and subnets that are attached to a project.\n\nsecurityGroupIds -> (list)\n\nA list of VPC security group IDs in your Amazon VPC.\n\n(string)\n\nsubnetIds -> (list)\n\nA list of VPC subnet IDs in your Amazon VPC.\n\n(string)\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\ncreated -> (timestamp)\n\nWhen the project was created."
    },
    {
      "command_name": "create-test-grid-url",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/create-test-grid-url.html",
      "command_description": "Description\n\nCreates a signed, short-term URL that can be passed to a Selenium RemoteWebDriver constructor.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-test-grid-url\n--project-arn <value>\n--expires-in-seconds <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "--expires-in-seconds <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nARN (from CreateTestGridProject or ListTestGridProjects ) to associate with the short-term URL.\n\n--expires-in-seconds (integer)\n\nLifetime, in seconds, of the URL.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nurl -> (string)\n\nA signed URL, expiring in CreateTestGridUrlRequest$expiresInSeconds seconds, to be passed to a RemoteWebDriver .\n\nexpires -> (timestamp)\n\nThe number of seconds the URL from CreateTestGridUrlResult$url stays active."
    },
    {
      "command_name": "create-upload",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/create-upload.html",
      "command_description": "Description\n\nUploads an app or test scripts.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-upload\n--project-arn <value>\n--name <value>\n--type <value>\n[--content-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "--name <value>",
        "--type <value>",
        "[--content-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe ARN of the project for the upload.\n\n--name (string)\n\nThe upload’s file name. The name should not contain any forward slashes (/ ). If you are uploading an iOS app, the file name must end with the .ipa extension. If you are uploading an Android app, the file name must end with the .apk extension. For all others, the file name must end with the .zip file extension.\n\n--type (string)\n\nThe upload’s upload type.\n\nMust be one of the following values:\n\nANDROID_APP\n\nIOS_APP\n\nWEB_APP\n\nEXTERNAL_DATA\n\nAPPIUM_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_PYTHON_TEST_PACKAGE\n\nAPPIUM_NODE_TEST_PACKAGE\n\nAPPIUM_RUBY_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_WEB_PYTHON_TEST_PACKAGE\n\nAPPIUM_WEB_NODE_TEST_PACKAGE\n\nAPPIUM_WEB_RUBY_TEST_PACKAGE\n\nCALABASH_TEST_PACKAGE\n\nINSTRUMENTATION_TEST_PACKAGE\n\nUIAUTOMATION_TEST_PACKAGE\n\nUIAUTOMATOR_TEST_PACKAGE\n\nXCTEST_TEST_PACKAGE\n\nXCTEST_UI_TEST_PACKAGE\n\nAPPIUM_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_PYTHON_TEST_SPEC\n\nAPPIUM_NODE_TEST_SPEC\n\nAPPIUM_RUBY_TEST_SPEC\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_WEB_PYTHON_TEST_SPEC\n\nAPPIUM_WEB_NODE_TEST_SPEC\n\nAPPIUM_WEB_RUBY_TEST_SPEC\n\nINSTRUMENTATION_TEST_SPEC\n\nXCTEST_UI_TEST_SPEC\n\nIf you call CreateUpload with WEB_APP specified, AWS Device Farm throws an ArgumentException error.\n\nPossible values:\n\nANDROID_APP\n\nIOS_APP\n\nWEB_APP\n\nEXTERNAL_DATA\n\nAPPIUM_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_PYTHON_TEST_PACKAGE\n\nAPPIUM_NODE_TEST_PACKAGE\n\nAPPIUM_RUBY_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_WEB_PYTHON_TEST_PACKAGE\n\nAPPIUM_WEB_NODE_TEST_PACKAGE\n\nAPPIUM_WEB_RUBY_TEST_PACKAGE\n\nCALABASH_TEST_PACKAGE\n\nINSTRUMENTATION_TEST_PACKAGE\n\nUIAUTOMATION_TEST_PACKAGE\n\nUIAUTOMATOR_TEST_PACKAGE\n\nXCTEST_TEST_PACKAGE\n\nXCTEST_UI_TEST_PACKAGE\n\nAPPIUM_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_PYTHON_TEST_SPEC\n\nAPPIUM_NODE_TEST_SPEC\n\nAPPIUM_RUBY_TEST_SPEC\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_WEB_PYTHON_TEST_SPEC\n\nAPPIUM_WEB_NODE_TEST_SPEC\n\nAPPIUM_WEB_RUBY_TEST_SPEC\n\nINSTRUMENTATION_TEST_SPEC\n\nXCTEST_UI_TEST_SPEC\n\n--content-type (string)\n\nThe upload’s content type (for example, application/octet-stream ).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nupload -> (structure)\n\nThe newly created upload.\n\narn -> (string)\n\nThe upload’s ARN.\n\nname -> (string)\n\nThe upload’s file name.\n\ncreated -> (timestamp)\n\nWhen the upload was created.\n\ntype -> (string)\n\nThe upload’s type.\n\nMust be one of the following values:\n\nANDROID_APP\n\nIOS_APP\n\nWEB_APP\n\nEXTERNAL_DATA\n\nAPPIUM_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_PYTHON_TEST_PACKAGE\n\nAPPIUM_NODE_TEST_PACKAGE\n\nAPPIUM_RUBY_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_WEB_PYTHON_TEST_PACKAGE\n\nAPPIUM_WEB_NODE_TEST_PACKAGE\n\nAPPIUM_WEB_RUBY_TEST_PACKAGE\n\nCALABASH_TEST_PACKAGE\n\nINSTRUMENTATION_TEST_PACKAGE\n\nUIAUTOMATION_TEST_PACKAGE\n\nUIAUTOMATOR_TEST_PACKAGE\n\nXCTEST_TEST_PACKAGE\n\nXCTEST_UI_TEST_PACKAGE\n\nAPPIUM_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_PYTHON_TEST_SPEC\n\nAPPIUM_NODE_TEST_SPEC\n\nAPPIUM_RUBY_TEST_SPEC\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_WEB_PYTHON_TEST_SPEC\n\nAPPIUM_WEB_NODE_TEST_SPEC\n\nAPPIUM_WEB_RUBY_TEST_SPEC\n\nINSTRUMENTATION_TEST_SPEC\n\nXCTEST_UI_TEST_SPEC\n\nstatus -> (string)\n\nThe upload’s status.\n\nMust be one of the following values:\n\nFAILED\n\nINITIALIZED\n\nPROCESSING\n\nSUCCEEDED\n\nurl -> (string)\n\nThe presigned Amazon S3 URL that was used to store a file using a PUT request.\n\nmetadata -> (string)\n\nThe upload’s metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.\n\ncontentType -> (string)\n\nThe upload’s content type (for example, application/octet-stream ).\n\nmessage -> (string)\n\nA message about the upload’s result.\n\ncategory -> (string)\n\nThe upload’s category. Allowed values include:\n\nCURATED: An upload managed by AWS Device Farm.\n\nPRIVATE: An upload managed by the AWS Device Farm customer.",
      "command_examples": "Examples\n\nTo create an upload\n\nThe following command creates an upload for an Android app:\n\naws devicefarm create-upload --project-arn \"arn:aws:devicefarm:us-west-2:123456789012:project:070fc3ca-7ec1-4741-9c1f-d3e044efc506\" --name app.apk --type ANDROID_APP\n\n\nYou can get the project ARN from the output of create-project or list-projects.\n\nOutput:\n\n{\n    \"upload\": {\n        \"status\": \"INITIALIZED\",\n        \"name\": \"app.apk\",\n        \"created\": 1503614408.769,\n        \"url\": \"https://prod-us-west-2-uploads.s3-us-west-2.amazonaws.com/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789012%3Aproject%3A070fc3ca-c7e1-4471-91cf-d3e4efc50604/uploads/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789012%3Aupload%3A070fc3ca-7ec1-4741-9c1f-d3e044efc506/dd72723a-ae9e-4087-09e6-f4cea3599514/app.apk?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20170824T224008Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Credential=AKIAEXAMPLEPBUMBC3GA%2F20170824%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Signature=05050370c38894ef5bd09f5d009f36fc8f96fa4bb04e1bba9aca71b8dbe49a0f\",\n        \"type\": \"ANDROID_APP\",\n        \"arn\": \"arn:aws:devicefarm:us-west-2:123456789012:upload:070fc3ca-7ec1-4741-9c1f-d3e044efc506/dd72723a-ae9e-4087-09e6-f4cea3599514\"\n    }\n}\n\n\nUse the signed URL in the output to upload a file to Device Farm:\n\ncurl -T app.apk \"https://prod-us-west-2-uploads.s3-us-west-2.amazonaws.com/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789012%3Aproject%3A070fc3ca-c7e1-4471-91cf-d3e4efc50604/uploads/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789012%3Aupload%3A070fc3ca-7ec1-4741-9c1f-d3e044efc506/dd72723a-ae9e-4087-09e6-f4cea3599514/app.apk?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20170824T224008Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Credential=AKIAEXAMPLEPBUMBC3GA%2F20170824%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Signature=05050370c38894ef5bd09f5d009f36fc8f96fa4bb04e1bba9aca71b8dbe49a0f\"\n"
    },
    {
      "command_name": "create-vpce-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/create-vpce-configuration.html",
      "command_description": "Description\n\nCreates a configuration record in Device Farm for your Amazon Virtual Private Cloud (VPC) endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-vpce-configuration\n--vpce-configuration-name <value>\n--vpce-service-name <value>\n--service-dns-name <value>\n[--vpce-configuration-description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--vpce-configuration-name <value>",
        "--vpce-service-name <value>",
        "--service-dns-name <value>",
        "[--vpce-configuration-description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--vpce-configuration-name (string)\n\nThe friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.\n\n--vpce-service-name (string)\n\nThe name of the VPC endpoint service running in your AWS account that you want Device Farm to test.\n\n--service-dns-name (string)\n\nThe DNS name of the service running in your VPC that you want Device Farm to test.\n\n--vpce-configuration-description (string)\n\nAn optional description that provides details about your VPC endpoint configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvpceConfiguration -> (structure)\n\nAn object that contains information about your VPC endpoint configuration.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the VPC endpoint configuration.\n\nvpceConfigurationName -> (string)\n\nThe friendly name you give to your VPC endpoint configuration to manage your configurations more easily.\n\nvpceServiceName -> (string)\n\nThe name of the VPC endpoint service running in your AWS account that you want Device Farm to test.\n\nserviceDnsName -> (string)\n\nThe DNS name that maps to the private IP address of the service you want to access.\n\nvpceConfigurationDescription -> (string)\n\nAn optional description that provides details about your VPC endpoint configuration."
    },
    {
      "command_name": "delete-device-pool",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/delete-device-pool.html",
      "command_description": "Description\n\nDeletes a device pool given the pool ARN. Does not allow deletion of curated pools owned by the system.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-device-pool\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nRepresents the Amazon Resource Name (ARN) of the Device Farm device pool to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/delete-instance-profile.html",
      "command_description": "Description\n\nDeletes a profile that can be applied to one or more private device instances.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-instance-profile\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the instance profile you are requesting to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-network-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/delete-network-profile.html",
      "command_description": "Description\n\nDeletes a network profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-network-profile\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the network profile to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/delete-project.html",
      "command_description": "Description\n\nDeletes an AWS Device Farm project, given the project ARN.\n\nDeleting this resource does not stop an in-progress run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-project\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nRepresents the Amazon Resource Name (ARN) of the Device Farm project to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-remote-access-session",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/delete-remote-access-session.html",
      "command_description": "Description\n\nDeletes a completed remote access session and its results.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-remote-access-session\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the session for which you want to delete remote access.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/delete-run.html",
      "command_description": "Description\n\nDeletes the run, given the run ARN.\n\nDeleting this resource does not stop an in-progress run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-run\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) for the run to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-test-grid-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/delete-test-grid-project.html",
      "command_description": "Description\n\nDeletes a Selenium testing project and all content generated under it.\n\nWarning\n\nYou cannot undo this operation.\n\nNote\n\nYou cannot delete a project if it has active sessions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-test-grid-project\n--project-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe ARN of the project to delete, from CreateTestGridProject or ListTestGridProjects .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-upload",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/delete-upload.html",
      "command_description": "Description\n\nDeletes an upload given the upload ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-upload\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nRepresents the Amazon Resource Name (ARN) of the Device Farm upload to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-vpce-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/delete-vpce-configuration.html",
      "command_description": "Description\n\nDeletes a configuration for your Amazon Virtual Private Cloud (VPC) endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-vpce-configuration\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the VPC endpoint configuration you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "get-account-settings",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-account-settings.html",
      "command_description": "Description\n\nReturns the number of unmetered iOS or unmetered Android devices that have been purchased by the account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-account-settings\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\naccountSettings -> (structure)\n\nThe account settings.\n\nawsAccountNumber -> (string)\n\nThe AWS account number specified in the AccountSettings container.\n\nunmeteredDevices -> (map)\n\nReturns the unmetered devices you have purchased or want to purchase.\n\nkey -> (string)\n\nvalue -> (integer)\n\nunmeteredRemoteAccessDevices -> (map)\n\nReturns the unmetered remote access devices you have purchased or want to purchase.\n\nkey -> (string)\n\nvalue -> (integer)\n\nmaxJobTimeoutMinutes -> (integer)\n\nThe maximum number of minutes a test run executes before it times out.\n\ntrialMinutes -> (structure)\n\nInformation about an AWS account’s usage of free trial device minutes.\n\ntotal -> (double)\n\nThe total number of free trial minutes that the account started with.\n\nremaining -> (double)\n\nThe number of free trial minutes remaining in the account.\n\nmaxSlots -> (map)\n\nThe maximum number of device slots that the AWS account can purchase. Each maximum is expressed as an offering-id:number pair, where the offering-id represents one of the IDs returned by the ListOfferings command.\n\nkey -> (string)\n\nvalue -> (integer)\n\ndefaultJobTimeoutMinutes -> (integer)\n\nThe default number of minutes (at the account level) a test run executes before it times out. The default value is 150 minutes.\n\nskipAppResign -> (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information about how Device Farm re-signs your apps, see Do you modify my app? in the AWS Device Farm FAQs ."
    },
    {
      "command_name": "get-device",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-device.html",
      "command_description": "Description\n\nGets information about a unique device type.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-device\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe device type’s ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndevice -> (structure)\n\nAn object that contains information about the requested device.\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods."
    },
    {
      "command_name": "get-device-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-device-instance.html",
      "command_description": "Description\n\nReturns information about a device instance that belongs to a private device fleet.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-device-instance\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the instance you’re requesting information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeviceInstance -> (structure)\n\nAn object that contains information about your device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile."
    },
    {
      "command_name": "get-device-pool",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-device-pool.html",
      "command_description": "Description\n\nGets information about a device pool.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-device-pool\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe device pool’s ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndevicePool -> (structure)\n\nAn object that contains information about the requested device pool.\n\narn -> (string)\n\nThe device pool’s ARN.\n\nname -> (string)\n\nThe device pool’s name.\n\ndescription -> (string)\n\nThe device pool’s description.\n\ntype -> (string)\n\nThe device pool’s type.\n\nAllowed values include:\n\nCURATED: A device pool that is created and managed by AWS Device Farm.\n\nPRIVATE: A device pool that is created and managed by the device pool developer.\n\nrules -> (list)\n\nInformation about the device pool’s rules.\n\n(structure)\n\nRepresents a condition for a device pool.\n\nattribute -> (string)\n\nThe rule’s stringified attribute. For example, specify the value as \"\\\"abc\\\"\" .\n\nThe supported operators for each attribute are provided in the following list.\n\nAPPIUM_VERSION\n\nThe Appium version for the test.\n\nSupported operators: CONTAINS\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example .\n\nSupported operators: EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nMODEL\n\nThe device model, such as Apple iPad Air 2 or Google Pixel.\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\noperator -> (string)\n\nSpecifies how Device Farm compares the rule’s attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.\n\nvalue -> (string)\n\nThe rule’s value.\n\nmaxDevices -> (integer)\n\nThe number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and meet the criteria that you assign for the rules parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.\n\nBy specifying the maximum number of devices, you can control the costs that you incur by running tests."
    },
    {
      "command_name": "get-device-pool-compatibility",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-device-pool-compatibility.html",
      "command_description": "Description\n\nGets information about compatibility with a device pool.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-device-pool-compatibility\n--device-pool-arn <value>\n[--app-arn <value>]\n[--test-type <value>]\n[--test <value>]\n[--configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-pool-arn <value>",
        "[--app-arn <value>]",
        "[--test-type <value>]",
        "[--test <value>]",
        "[--configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-pool-arn (string)\n\nThe device pool’s ARN.\n\n--app-arn (string)\n\nThe ARN of the app that is associated with the specified device pool.\n\n--test-type (string)\n\nThe test type for the specified device pool.\n\nAllowed values include the following:\n\nBUILTIN_FUZZ.\n\nBUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT.\n\nAPPIUM_JAVA_TESTNG.\n\nAPPIUM_PYTHON.\n\nAPPIUM_NODE.\n\nAPPIUM_RUBY.\n\nAPPIUM_WEB_JAVA_JUNIT.\n\nAPPIUM_WEB_JAVA_TESTNG.\n\nAPPIUM_WEB_PYTHON.\n\nAPPIUM_WEB_NODE.\n\nAPPIUM_WEB_RUBY.\n\nCALABASH.\n\nINSTRUMENTATION.\n\nUIAUTOMATION.\n\nUIAUTOMATOR.\n\nXCTEST.\n\nXCTEST_UI.\n\nPossible values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER\n\nWEB_PERFORMANCE_PROFILE\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\nREMOTE_ACCESS_RECORD\n\nREMOTE_ACCESS_REPLAY\n\n--test (structure)\n\nInformation about the uploaded test to be run against the device pool.\n\ntype -> (string)\n\nThe test’s type.\n\nMust be one of the following values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\ntestPackageArn -> (string)\n\nThe ARN of the uploaded test to be run.\n\ntestSpecArn -> (string)\n\nThe ARN of the YAML-formatted test specification.\n\nfilter -> (string)\n\nThe test’s filter.\n\nparameters -> (map)\n\nThe test’s parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.\n\nFor all tests:\n\napp_performance_monitoring : Performance monitoring is enabled by default. Set this parameter to false to disable it.\n\nFor Calabash tests:\n\nprofile: A cucumber profile (for example, my_profile_name ).\n\ntags: You can limit execution to features or scenarios that have (or don’t have) certain tags (for example, @smoke or @smoke,~@wip).\n\nFor Appium tests (all types):\n\nappium_version: The Appium version. Currently supported values are 1.6.5 (and later), latest, and default.\n\nlatest runs the latest Appium version supported by Device Farm (1.9.1).\n\nFor default, Device Farm selects a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier and 1.7.2 for iOS 10 and later.\n\nThis behavior is subject to change.\n\nFor fuzz tests (Android only):\n\nevent_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.\n\nthrottle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.\n\nseed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.\n\nFor Explorer tests:\n\nusername: A user name to use if the Explorer encounters a login form. If not supplied, no user name is inserted.\n\npassword: A password to use if the Explorer encounters a login form. If not supplied, no password is inserted.\n\nFor Instrumentation:\n\nfilter: A test filter string. Examples:\n\nRunning a single test case: com.android.abc.Test1\n\nRunning a single test: com.android.abc.Test1#smoke\n\nRunning multiple tests: com.android.abc.Test1,com.android.abc.Test2\n\nFor XCTest and XCTestUI:\n\nfilter: A test filter string. Examples:\n\nRunning a single test class: LoginTests\n\nRunning a multiple test classes: LoginTests,SmokeTests\n\nRunning a single test: LoginTests/testValid\n\nRunning multiple tests: LoginTests/testValid,LoginTests/testInvalid\n\nFor UIAutomator:\n\nfilter: A test filter string. Examples:\n\nRunning a single test case: com.android.abc.Test1\n\nRunning a single test: com.android.abc.Test1#smoke\n\nRunning multiple tests: com.android.abc.Test1,com.android.abc.Test2\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\ntype=string,testPackageArn=string,testSpecArn=string,filter=string,parameters={KeyName1=string,KeyName2=string}\n\n\nJSON Syntax:\n\n{\n  \"type\": \"BUILTIN_FUZZ\"|\"BUILTIN_EXPLORER\"|\"WEB_PERFORMANCE_PROFILE\"|\"APPIUM_JAVA_JUNIT\"|\"APPIUM_JAVA_TESTNG\"|\"APPIUM_PYTHON\"|\"APPIUM_NODE\"|\"APPIUM_RUBY\"|\"APPIUM_WEB_JAVA_JUNIT\"|\"APPIUM_WEB_JAVA_TESTNG\"|\"APPIUM_WEB_PYTHON\"|\"APPIUM_WEB_NODE\"|\"APPIUM_WEB_RUBY\"|\"CALABASH\"|\"INSTRUMENTATION\"|\"UIAUTOMATION\"|\"UIAUTOMATOR\"|\"XCTEST\"|\"XCTEST_UI\"|\"REMOTE_ACCESS_RECORD\"|\"REMOTE_ACCESS_REPLAY\",\n  \"testPackageArn\": \"string\",\n  \"testSpecArn\": \"string\",\n  \"filter\": \"string\",\n  \"parameters\": {\"string\": \"string\"\n    ...}\n}\n\n\n--configuration (structure)\n\nAn object that contains information about the settings for a run.\n\nextraDataPackageArn -> (string)\n\nThe ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm extracts to external data for Android or the app’s sandbox for iOS.\n\nnetworkProfileArn -> (string)\n\nReserved for internal use.\n\nlocale -> (string)\n\nInformation about the locale that is used for the run.\n\nlocation -> (structure)\n\nInformation about the location that is used for the run.\n\nlatitude -> (double)\n\nThe latitude.\n\nlongitude -> (double)\n\nThe longitude.\n\nvpceConfigurationArns -> (list)\n\nAn array of ARNs for your VPC endpoint configurations.\n\n(string)\n\ncustomerArtifactPaths -> (structure)\n\nInput CustomerArtifactPaths object for the scheduled run configuration.\n\niosPaths -> (list)\n\nComma-separated list of paths on the iOS device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nandroidPaths -> (list)\n\nComma-separated list of paths on the Android device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\ndeviceHostPaths -> (list)\n\nComma-separated list of paths in the test execution environment where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nradios -> (structure)\n\nInformation about the radio states for the run.\n\nwifi -> (boolean)\n\nTrue if Wi-Fi is enabled at the beginning of the test. Otherwise, false.\n\nbluetooth -> (boolean)\n\nTrue if Bluetooth is enabled at the beginning of the test. Otherwise, false.\n\nnfc -> (boolean)\n\nTrue if NFC is enabled at the beginning of the test. Otherwise, false.\n\ngps -> (boolean)\n\nTrue if GPS is enabled at the beginning of the test. Otherwise, false.\n\nauxiliaryApps -> (list)\n\nA list of upload ARNs for app packages to be installed with your app.\n\n(string)\n\nbillingMethod -> (string)\n\nSpecifies the billing method for a test run: metered or unmetered . If the parameter is not specified, the default value is metered .\n\nNote\n\nIf you have purchased unmetered device slots, you must set this parameter to unmetered to make use of them. Otherwise, your run counts against your metered time.\n\nShorthand Syntax:\n\nextraDataPackageArn=string,networkProfileArn=string,locale=string,location={latitude=double,longitude=double},vpceConfigurationArns=string,string,customerArtifactPaths={iosPaths=[string,string],androidPaths=[string,string],deviceHostPaths=[string,string]},radios={wifi=boolean,bluetooth=boolean,nfc=boolean,gps=boolean},auxiliaryApps=string,string,billingMethod=string\n\n\nJSON Syntax:\n\n{\n  \"extraDataPackageArn\": \"string\",\n  \"networkProfileArn\": \"string\",\n  \"locale\": \"string\",\n  \"location\": {\n    \"latitude\": double,\n    \"longitude\": double\n  },\n  \"vpceConfigurationArns\": [\"string\", ...],\n  \"customerArtifactPaths\": {\n    \"iosPaths\": [\"string\", ...],\n    \"androidPaths\": [\"string\", ...],\n    \"deviceHostPaths\": [\"string\", ...]\n  },\n  \"radios\": {\n    \"wifi\": true|false,\n    \"bluetooth\": true|false,\n    \"nfc\": true|false,\n    \"gps\": true|false\n  },\n  \"auxiliaryApps\": [\"string\", ...],\n  \"billingMethod\": \"METERED\"|\"UNMETERED\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncompatibleDevices -> (list)\n\nInformation about compatible devices.\n\n(structure)\n\nRepresents a device pool compatibility result.\n\ndevice -> (structure)\n\nThe device (phone or tablet) to return information about.\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\ncompatible -> (boolean)\n\nWhether the result was compatible with the device pool.\n\nincompatibilityMessages -> (list)\n\nInformation about the compatibility.\n\n(structure)\n\nRepresents information about incompatibility.\n\nmessage -> (string)\n\nA message about the incompatibility.\n\ntype -> (string)\n\nThe type of incompatibility.\n\nAllowed values include:\n\nARN\n\nFORM_FACTOR (for example, phone or tablet)\n\nMANUFACTURER\n\nPLATFORM (for example, Android or iOS)\n\nREMOTE_ACCESS_ENABLED\n\nAPPIUM_VERSION\n\nincompatibleDevices -> (list)\n\nInformation about incompatible devices.\n\n(structure)\n\nRepresents a device pool compatibility result.\n\ndevice -> (structure)\n\nThe device (phone or tablet) to return information about.\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\ncompatible -> (boolean)\n\nWhether the result was compatible with the device pool.\n\nincompatibilityMessages -> (list)\n\nInformation about the compatibility.\n\n(structure)\n\nRepresents information about incompatibility.\n\nmessage -> (string)\n\nA message about the incompatibility.\n\ntype -> (string)\n\nThe type of incompatibility.\n\nAllowed values include:\n\nARN\n\nFORM_FACTOR (for example, phone or tablet)\n\nMANUFACTURER\n\nPLATFORM (for example, Android or iOS)\n\nREMOTE_ACCESS_ENABLED\n\nAPPIUM_VERSION"
    },
    {
      "command_name": "get-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-instance-profile.html",
      "command_description": "Description\n\nReturns information about the specified instance profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-instance-profile\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of an instance profile.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninstanceProfile -> (structure)\n\nAn object that contains information about an instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile."
    },
    {
      "command_name": "get-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-job.html",
      "command_description": "Description\n\nGets information about a job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-job\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe job’s ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\njob -> (structure)\n\nAn object that contains information about the requested job.\n\narn -> (string)\n\nThe job’s ARN.\n\nname -> (string)\n\nThe job’s name.\n\ntype -> (string)\n\nThe job’s type.\n\nAllowed values include the following:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\ncreated -> (timestamp)\n\nWhen the job was created.\n\nstatus -> (string)\n\nThe job’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe job’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe job’s start time.\n\nstopped -> (timestamp)\n\nThe job’s stop time.\n\ncounters -> (structure)\n\nThe job’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the job’s result.\n\ndevice -> (structure)\n\nThe device (phone or tablet).\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\ninstanceArn -> (string)\n\nThe ARN of the instance.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the job.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nvideoEndpoint -> (string)\n\nThe endpoint for streaming device video.\n\nvideoCapture -> (boolean)\n\nThis value is set to true if video capture is enabled. Otherwise, it is set to false."
    },
    {
      "command_name": "get-network-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-network-profile.html",
      "command_description": "Description\n\nReturns information about a network profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-network-profile\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the network profile to return information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnetworkProfile -> (structure)\n\nThe network profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the network profile.\n\nname -> (string)\n\nThe name of the network profile.\n\ndescription -> (string)\n\nThe description of the network profile.\n\ntype -> (string)\n\nThe type of network profile. Valid values are listed here.\n\nuplinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\ndownlinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\nuplinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\ndownlinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\nuplinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\ndownlinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\nuplinkLossPercent -> (integer)\n\nProportion of transmitted packets that fail to arrive from 0 to 100 percent.\n\ndownlinkLossPercent -> (integer)\n\nProportion of received packets that fail to arrive from 0 to 100 percent."
    },
    {
      "command_name": "get-offering-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-offering-status.html",
      "command_description": "Description\n\nGets the current status and future status of all offerings purchased by an AWS account. The response indicates how many offerings are currently available and the offerings that will be available in the next period. The API returns a NotEligible error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact aws-devicefarm-support@amazon.com .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-offering-status is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: current, nextPeriod",
      "command_synopsis": "Synopsis\n  get-offering-status\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncurrent -> (map)\n\nWhen specified, gets the offering status for the current period.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe status of the offering.\n\ntype -> (string)\n\nThe type specified for the offering status.\n\noffering -> (structure)\n\nRepresents the metadata of an offering status.\n\nid -> (string)\n\nThe ID that corresponds to a device offering.\n\ndescription -> (string)\n\nA string that describes the offering.\n\ntype -> (string)\n\nThe type of offering (for example, RECURRING ) for a device.\n\nplatform -> (string)\n\nThe platform of the device (for example, ANDROID or IOS ).\n\nrecurringCharges -> (list)\n\nSpecifies whether there are recurring charges for the offering.\n\n(structure)\n\nSpecifies whether charges for devices are recurring.\n\ncost -> (structure)\n\nThe cost of the recurring charge.\n\namount -> (double)\n\nThe numerical amount of an offering or transaction.\n\ncurrencyCode -> (string)\n\nThe currency code of a monetary amount. For example, USD means U.S. dollars.\n\nfrequency -> (string)\n\nThe frequency in which charges recur.\n\nquantity -> (integer)\n\nThe number of available devices in the offering.\n\neffectiveOn -> (timestamp)\n\nThe date on which the offering is effective.\n\nnextPeriod -> (map)\n\nWhen specified, gets the offering status for the next period.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe status of the offering.\n\ntype -> (string)\n\nThe type specified for the offering status.\n\noffering -> (structure)\n\nRepresents the metadata of an offering status.\n\nid -> (string)\n\nThe ID that corresponds to a device offering.\n\ndescription -> (string)\n\nA string that describes the offering.\n\ntype -> (string)\n\nThe type of offering (for example, RECURRING ) for a device.\n\nplatform -> (string)\n\nThe platform of the device (for example, ANDROID or IOS ).\n\nrecurringCharges -> (list)\n\nSpecifies whether there are recurring charges for the offering.\n\n(structure)\n\nSpecifies whether charges for devices are recurring.\n\ncost -> (structure)\n\nThe cost of the recurring charge.\n\namount -> (double)\n\nThe numerical amount of an offering or transaction.\n\ncurrencyCode -> (string)\n\nThe currency code of a monetary amount. For example, USD means U.S. dollars.\n\nfrequency -> (string)\n\nThe frequency in which charges recur.\n\nquantity -> (integer)\n\nThe number of available devices in the offering.\n\neffectiveOn -> (timestamp)\n\nThe date on which the offering is effective.\n\nnextToken -> (string)\n\nAn identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
    },
    {
      "command_name": "get-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-project.html",
      "command_description": "Description\n\nGets information about a project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-project\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe project’s ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nproject -> (structure)\n\nThe project to get information about.\n\narn -> (string)\n\nThe project’s ARN.\n\nname -> (string)\n\nThe project’s name.\n\ndefaultJobTimeoutMinutes -> (integer)\n\nThe default number of minutes (at the project level) a test run executes before it times out. The default value is 150 minutes.\n\ncreated -> (timestamp)\n\nWhen the project was created."
    },
    {
      "command_name": "get-remote-access-session",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-remote-access-session.html",
      "command_description": "Description\n\nReturns a link to a currently running remote access session.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-remote-access-session\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the remote access session about which you want to get session information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nremoteAccessSession -> (structure)\n\nA container that lists detailed information about the remote access session.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the remote access session.\n\nname -> (string)\n\nThe name of the remote access session.\n\ncreated -> (timestamp)\n\nThe date and time the remote access session was created.\n\nstatus -> (string)\n\nThe status of the remote access session. Can be any of the following:\n\nPENDING.\n\nPENDING_CONCURRENCY.\n\nPENDING_DEVICE.\n\nPROCESSING.\n\nSCHEDULING.\n\nPREPARING.\n\nRUNNING.\n\nCOMPLETED.\n\nSTOPPING.\n\nresult -> (string)\n\nThe result of the remote access session. Can be any of the following:\n\nPENDING.\n\nPASSED.\n\nWARNED.\n\nFAILED.\n\nSKIPPED.\n\nERRORED.\n\nSTOPPED.\n\nmessage -> (string)\n\nA message about the remote access session.\n\nstarted -> (timestamp)\n\nThe date and time the remote access session was started.\n\nstopped -> (timestamp)\n\nThe date and time the remote access session was stopped.\n\ndevice -> (structure)\n\nThe device (phone or tablet) used in the remote access session.\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\ninstanceArn -> (string)\n\nThe ARN of the instance.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nremoteRecordEnabled -> (boolean)\n\nThis flag is set to true if remote recording is enabled for the remote access session.\n\nremoteRecordAppArn -> (string)\n\nThe ARN for the app to be recorded in the remote access session.\n\nhostAddress -> (string)\n\nIP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nclientId -> (string)\n\nUnique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nbillingMethod -> (string)\n\nThe billing method of the remote access session. Possible values include METERED or UNMETERED . For more information about metered devices, see AWS Device Farm terminology .\n\ndeviceMinutes -> (structure)\n\nThe number of minutes a device is used in a remote access session (including setup and teardown minutes).\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nendpoint -> (string)\n\nThe endpoint for the remote access sesssion.\n\ndeviceUdid -> (string)\n\nUnique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\ninteractionMode -> (string)\n\nThe interaction mode of the remote access session. Valid values are:\n\nINTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You cannot run XCUITest framework-based tests in this mode.\n\nNO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This mode has the fastest test execution speed. You can run XCUITest framework-based tests in this mode.\n\nVIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest framework-based tests and watch the screen in this mode.\n\nskipAppResign -> (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information about how Device Farm re-signs your apps, see Do you modify my app? in the AWS Device Farm FAQs ."
    },
    {
      "command_name": "get-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-run.html",
      "command_description": "Description\n\nGets information about a run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-run\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe run’s ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrun -> (structure)\n\nThe run to get results from.\n\narn -> (string)\n\nThe run’s ARN.\n\nname -> (string)\n\nThe run’s name.\n\ntype -> (string)\n\nThe run’s type.\n\nMust be one of the following values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER\n\nNote\n\nFor Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\nplatform -> (string)\n\nThe run’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\ncreated -> (timestamp)\n\nWhen the run was created.\n\nstatus -> (string)\n\nThe run’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe run’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe run’s start time.\n\nstopped -> (timestamp)\n\nThe run’s stop time.\n\ncounters -> (structure)\n\nThe run’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the run’s result.\n\ntotalJobs -> (integer)\n\nThe total number of jobs for the run.\n\ncompletedJobs -> (integer)\n\nThe total number of completed jobs.\n\nbillingMethod -> (string)\n\nSpecifies the billing method for a test run: metered or unmetered . If the parameter is not specified, the default value is metered .\n\nNote\n\nIf you have unmetered device slots, you must set this to unmetered to use them. Otherwise, the run is counted toward metered device minutes.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the test run.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nnetworkProfile -> (structure)\n\nThe network profile being used for a test run.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the network profile.\n\nname -> (string)\n\nThe name of the network profile.\n\ndescription -> (string)\n\nThe description of the network profile.\n\ntype -> (string)\n\nThe type of network profile. Valid values are listed here.\n\nuplinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\ndownlinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\nuplinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\ndownlinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\nuplinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\ndownlinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\nuplinkLossPercent -> (integer)\n\nProportion of transmitted packets that fail to arrive from 0 to 100 percent.\n\ndownlinkLossPercent -> (integer)\n\nProportion of received packets that fail to arrive from 0 to 100 percent.\n\nparsingResultUrl -> (string)\n\nRead-only URL for an object in an S3 bucket where you can get the parsing results of the test package. If the test package doesn’t parse, the reason why it doesn’t parse appears in the file that this URL points to.\n\nresultCode -> (string)\n\nSupporting field for the result field. Set only if result is SKIPPED . PARSING_FAILED if the result is skipped because of test package parsing failure.\n\nseed -> (integer)\n\nFor fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.\n\nappUpload -> (string)\n\nAn app to upload or that has been uploaded.\n\neventCount -> (integer)\n\nFor fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.\n\njobTimeoutMinutes -> (integer)\n\nThe number of minutes the job executes before it times out.\n\ndevicePoolArn -> (string)\n\nThe ARN of the device pool for the run.\n\nlocale -> (string)\n\nInformation about the locale that is used for the run.\n\nradios -> (structure)\n\nInformation about the radio states for the run.\n\nwifi -> (boolean)\n\nTrue if Wi-Fi is enabled at the beginning of the test. Otherwise, false.\n\nbluetooth -> (boolean)\n\nTrue if Bluetooth is enabled at the beginning of the test. Otherwise, false.\n\nnfc -> (boolean)\n\nTrue if NFC is enabled at the beginning of the test. Otherwise, false.\n\ngps -> (boolean)\n\nTrue if GPS is enabled at the beginning of the test. Otherwise, false.\n\nlocation -> (structure)\n\nInformation about the location that is used for the run.\n\nlatitude -> (double)\n\nThe latitude.\n\nlongitude -> (double)\n\nThe longitude.\n\ncustomerArtifactPaths -> (structure)\n\nOutput CustomerArtifactPaths object for the test run.\n\niosPaths -> (list)\n\nComma-separated list of paths on the iOS device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nandroidPaths -> (list)\n\nComma-separated list of paths on the Android device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\ndeviceHostPaths -> (list)\n\nComma-separated list of paths in the test execution environment where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nwebUrl -> (string)\n\nThe Device Farm console URL for the recording of the run.\n\nskipAppResign -> (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information about how Device Farm re-signs your apps, see Do you modify my app? in the AWS Device Farm FAQs .\n\ntestSpecArn -> (string)\n\nThe ARN of the YAML-formatted test specification for the run.\n\ndeviceSelectionResult -> (structure)\n\nThe results of a device filter used to select the devices for a test run.\n\nfilters -> (list)\n\nThe filters in a device selection result.\n\n(structure)\n\nRepresents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the deviceSelectionConfiguration parameter to ScheduleRun . For an example of the JSON request syntax, see ScheduleRun .\n\nIt is also passed in as the filters parameter to ListDevices . For an example of the JSON request syntax, see ListDevices .\n\nattribute -> (string)\n\nThe aspect of a device such as platform or model used as the selection criteria in a device filter.\n\nThe supported operators for each attribute are provided in the following list.\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example ).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nMODEL\n\nThe device model (for example, iPad 5th Gen).\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\noperator -> (string)\n\nSpecifies how Device Farm compares the filter’s attribute to the value. See the attribute descriptions.\n\nvalues -> (list)\n\nAn array of one or more filter values used in a device filter.\n\nOperator Values\n\nThe IN and NOT_IN operators can take a values array that has more than one element.\n\nThe other operators require an array with a single element.\n\nAttribute Values\n\nThe PLATFORM attribute can be set to ANDROID or IOS.\n\nThe AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nThe FORM_FACTOR attribute can be set to PHONE or TABLET.\n\nThe FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.\n\n(string)\n\nmatchedDevicesCount -> (integer)\n\nThe number of devices that matched the device filter selection criteria.\n\nmaxDevices -> (integer)\n\nThe maximum number of devices to be selected by a device filter and included in a test run."
    },
    {
      "command_name": "get-suite",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-suite.html",
      "command_description": "Description\n\nGets information about a suite.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-suite\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe suite’s ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsuite -> (structure)\n\nA collection of one or more tests.\n\narn -> (string)\n\nThe suite’s ARN.\n\nname -> (string)\n\nThe suite’s name.\n\ntype -> (string)\n\nThe suite’s type.\n\nMust be one of the following values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER\n\nNote\n\nOnly available for Android; an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\ncreated -> (timestamp)\n\nWhen the suite was created.\n\nstatus -> (string)\n\nThe suite’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe suite’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe suite’s start time.\n\nstopped -> (timestamp)\n\nThe suite’s stop time.\n\ncounters -> (structure)\n\nThe suite’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the suite’s result.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the test suite.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests."
    },
    {
      "command_name": "get-test",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-test.html",
      "command_description": "Description\n\nGets information about a test.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-test\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe test’s ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntest -> (structure)\n\nA test condition that is evaluated.\n\narn -> (string)\n\nThe test’s ARN.\n\nname -> (string)\n\nThe test’s name.\n\ntype -> (string)\n\nThe test’s type.\n\nMust be one of the following values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER\n\nNote\n\nFor Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\ncreated -> (timestamp)\n\nWhen the test was created.\n\nstatus -> (string)\n\nThe test’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe test’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe test’s start time.\n\nstopped -> (timestamp)\n\nThe test’s stop time.\n\ncounters -> (structure)\n\nThe test’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the test’s result.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the test.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests."
    },
    {
      "command_name": "get-test-grid-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-test-grid-project.html",
      "command_description": "Description\n\nRetrieves information about a Selenium testing project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-test-grid-project\n--project-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe ARN of the Selenium testing project, from either CreateTestGridProject or ListTestGridProjects .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntestGridProject -> (structure)\n\nA TestGridProject .\n\narn -> (string)\n\nThe ARN for the project.\n\nname -> (string)\n\nA human-readable name for the project.\n\ndescription -> (string)\n\nA human-readable description for the project.\n\nvpcConfig -> (structure)\n\nThe VPC security groups and subnets that are attached to a project.\n\nsecurityGroupIds -> (list)\n\nA list of VPC security group IDs in your Amazon VPC.\n\n(string)\n\nsubnetIds -> (list)\n\nA list of VPC subnet IDs in your Amazon VPC.\n\n(string)\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\ncreated -> (timestamp)\n\nWhen the project was created."
    },
    {
      "command_name": "get-test-grid-session",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-test-grid-session.html",
      "command_description": "Description\n\nA session is an instance of a browser created through a RemoteWebDriver with the URL from CreateTestGridUrlResult$url . You can use the following to look up sessions:\n\nThe session ARN ( GetTestGridSessionRequest$sessionArn ).\n\nThe project ARN and a session ID ( GetTestGridSessionRequest$projectArn and GetTestGridSessionRequest$sessionId ).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-test-grid-session\n[--project-arn <value>]\n[--session-id <value>]\n[--session-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--project-arn <value>]",
        "[--session-id <value>]",
        "[--session-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe ARN for the project that this session belongs to. See CreateTestGridProject and ListTestGridProjects .\n\n--session-id (string)\n\nAn ID associated with this session.\n\n--session-arn (string)\n\nAn ARN that uniquely identifies a TestGridSession .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntestGridSession -> (structure)\n\nThe TestGridSession that was requested.\n\narn -> (string)\n\nThe ARN of the session.\n\nstatus -> (string)\n\nThe state of the session.\n\ncreated -> (timestamp)\n\nThe time that the session was started.\n\nended -> (timestamp)\n\nThe time the session ended.\n\nbillingMinutes -> (double)\n\nThe number of billed minutes that were used for this session.\n\nseleniumProperties -> (string)\n\nA JSON object of options and parameters passed to the Selenium WebDriver."
    },
    {
      "command_name": "get-upload",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-upload.html",
      "command_description": "Description\n\nGets information about an upload.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-upload\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe upload’s ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nupload -> (structure)\n\nAn app or a set of one or more tests to upload or that have been uploaded.\n\narn -> (string)\n\nThe upload’s ARN.\n\nname -> (string)\n\nThe upload’s file name.\n\ncreated -> (timestamp)\n\nWhen the upload was created.\n\ntype -> (string)\n\nThe upload’s type.\n\nMust be one of the following values:\n\nANDROID_APP\n\nIOS_APP\n\nWEB_APP\n\nEXTERNAL_DATA\n\nAPPIUM_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_PYTHON_TEST_PACKAGE\n\nAPPIUM_NODE_TEST_PACKAGE\n\nAPPIUM_RUBY_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_WEB_PYTHON_TEST_PACKAGE\n\nAPPIUM_WEB_NODE_TEST_PACKAGE\n\nAPPIUM_WEB_RUBY_TEST_PACKAGE\n\nCALABASH_TEST_PACKAGE\n\nINSTRUMENTATION_TEST_PACKAGE\n\nUIAUTOMATION_TEST_PACKAGE\n\nUIAUTOMATOR_TEST_PACKAGE\n\nXCTEST_TEST_PACKAGE\n\nXCTEST_UI_TEST_PACKAGE\n\nAPPIUM_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_PYTHON_TEST_SPEC\n\nAPPIUM_NODE_TEST_SPEC\n\nAPPIUM_RUBY_TEST_SPEC\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_WEB_PYTHON_TEST_SPEC\n\nAPPIUM_WEB_NODE_TEST_SPEC\n\nAPPIUM_WEB_RUBY_TEST_SPEC\n\nINSTRUMENTATION_TEST_SPEC\n\nXCTEST_UI_TEST_SPEC\n\nstatus -> (string)\n\nThe upload’s status.\n\nMust be one of the following values:\n\nFAILED\n\nINITIALIZED\n\nPROCESSING\n\nSUCCEEDED\n\nurl -> (string)\n\nThe presigned Amazon S3 URL that was used to store a file using a PUT request.\n\nmetadata -> (string)\n\nThe upload’s metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.\n\ncontentType -> (string)\n\nThe upload’s content type (for example, application/octet-stream ).\n\nmessage -> (string)\n\nA message about the upload’s result.\n\ncategory -> (string)\n\nThe upload’s category. Allowed values include:\n\nCURATED: An upload managed by AWS Device Farm.\n\nPRIVATE: An upload managed by the AWS Device Farm customer.",
      "command_examples": "Examples\n\nTo view an upload\n\nThe following command retrieves information about an upload:\n\naws devicefarm get-upload --arn \"arn:aws:devicefarm:us-west-2:123456789012:upload:070fc3ca-7ec1-4741-9c1f-d3e044efc506/dd72723a-ae9e-4087-09e6-f4cea3599514\"\n\n\nYou can get the upload ARN from the output of create-upload.\n\nOutput:\n\n{\n    \"upload\": {\n        \"status\": \"SUCCEEDED\",\n        \"name\": \"app.apk\",\n        \"created\": 1505262773.186,\n        \"type\": \"ANDROID_APP\",\n        \"arn\": \"arn:aws:devicefarm:us-west-2:123456789012:upload:070fc3ca-7ec1-4741-9c1f-d3e044efc506/dd72723a-ae9e-4087-09e6-f4cea3599514\",\n        \"metadata\": \"{\\\"device_admin\\\":false,\\\"activity_name\\\":\\\"ccom.example.client.LauncherActivity\\\",\\\"version_name\\\":\\\"1.0.2.94\\\",\\\"screens\\\":[\\\"small\\\",\\\"normal\\\",\\\"large\\\",\\\"xlarge\\\"],\\\"error_type\\\":null,\\\"sdk_version\\\":\\\"16\\\",\\\"package_name\\\":\\\"com.example.client\\\",\\\"version_code\\\":\\\"20994\\\",\\\"native_code\\\":[\\\"armeabi-v7a\\\"],\\\"target_sdk_version\\\":\\\"25\\\"}\"\n    }\n}\n"
    },
    {
      "command_name": "get-vpce-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/get-vpce-configuration.html",
      "command_description": "Description\n\nReturns information about the configuration settings for your Amazon Virtual Private Cloud (VPC) endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-vpce-configuration\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the VPC endpoint configuration you want to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvpceConfiguration -> (structure)\n\nAn object that contains information about your VPC endpoint configuration.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the VPC endpoint configuration.\n\nvpceConfigurationName -> (string)\n\nThe friendly name you give to your VPC endpoint configuration to manage your configurations more easily.\n\nvpceServiceName -> (string)\n\nThe name of the VPC endpoint service running in your AWS account that you want Device Farm to test.\n\nserviceDnsName -> (string)\n\nThe DNS name that maps to the private IP address of the service you want to access.\n\nvpceConfigurationDescription -> (string)\n\nAn optional description that provides details about your VPC endpoint configuration."
    },
    {
      "command_name": "install-to-remote-access-session",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/install-to-remote-access-session.html",
      "command_description": "Description\n\nInstalls an application to the device in a remote access session. For Android applications, the file must be in .apk format. For iOS applications, the file must be in .ipa format.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  install-to-remote-access-session\n--remote-access-session-arn <value>\n--app-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--remote-access-session-arn <value>",
        "--app-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--remote-access-session-arn (string)\n\nThe Amazon Resource Name (ARN) of the remote access session about which you are requesting information.\n\n--app-arn (string)\n\nThe ARN of the app about which you are requesting information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nappUpload -> (structure)\n\nAn app to upload or that has been uploaded.\n\narn -> (string)\n\nThe upload’s ARN.\n\nname -> (string)\n\nThe upload’s file name.\n\ncreated -> (timestamp)\n\nWhen the upload was created.\n\ntype -> (string)\n\nThe upload’s type.\n\nMust be one of the following values:\n\nANDROID_APP\n\nIOS_APP\n\nWEB_APP\n\nEXTERNAL_DATA\n\nAPPIUM_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_PYTHON_TEST_PACKAGE\n\nAPPIUM_NODE_TEST_PACKAGE\n\nAPPIUM_RUBY_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_WEB_PYTHON_TEST_PACKAGE\n\nAPPIUM_WEB_NODE_TEST_PACKAGE\n\nAPPIUM_WEB_RUBY_TEST_PACKAGE\n\nCALABASH_TEST_PACKAGE\n\nINSTRUMENTATION_TEST_PACKAGE\n\nUIAUTOMATION_TEST_PACKAGE\n\nUIAUTOMATOR_TEST_PACKAGE\n\nXCTEST_TEST_PACKAGE\n\nXCTEST_UI_TEST_PACKAGE\n\nAPPIUM_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_PYTHON_TEST_SPEC\n\nAPPIUM_NODE_TEST_SPEC\n\nAPPIUM_RUBY_TEST_SPEC\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_WEB_PYTHON_TEST_SPEC\n\nAPPIUM_WEB_NODE_TEST_SPEC\n\nAPPIUM_WEB_RUBY_TEST_SPEC\n\nINSTRUMENTATION_TEST_SPEC\n\nXCTEST_UI_TEST_SPEC\n\nstatus -> (string)\n\nThe upload’s status.\n\nMust be one of the following values:\n\nFAILED\n\nINITIALIZED\n\nPROCESSING\n\nSUCCEEDED\n\nurl -> (string)\n\nThe presigned Amazon S3 URL that was used to store a file using a PUT request.\n\nmetadata -> (string)\n\nThe upload’s metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.\n\ncontentType -> (string)\n\nThe upload’s content type (for example, application/octet-stream ).\n\nmessage -> (string)\n\nA message about the upload’s result.\n\ncategory -> (string)\n\nThe upload’s category. Allowed values include:\n\nCURATED: An upload managed by AWS Device Farm.\n\nPRIVATE: An upload managed by the AWS Device Farm customer."
    },
    {
      "command_name": "list-artifacts",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-artifacts.html",
      "command_description": "Description\n\nGets information about artifacts.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-artifacts is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: artifacts",
      "command_synopsis": "Synopsis\n  list-artifacts\n--arn <value>\n--type <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "--type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe run, job, suite, or test ARN.\n\n--type (string)\n\nThe artifacts’ type.\n\nAllowed values include:\n\nFILE\n\nLOG\n\nSCREENSHOT\n\nPossible values:\n\nSCREENSHOT\n\nFILE\n\nLOG\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nartifacts -> (list)\n\nInformation about the artifacts.\n\n(structure)\n\nRepresents the output of a test. Examples of artifacts include logs and screenshots.\n\narn -> (string)\n\nThe artifact’s ARN.\n\nname -> (string)\n\nThe artifact’s name.\n\ntype -> (string)\n\nThe artifact’s type.\n\nAllowed values include the following:\n\nUNKNOWN\n\nSCREENSHOT\n\nDEVICE_LOG\n\nMESSAGE_LOG\n\nVIDEO_LOG\n\nRESULT_LOG\n\nSERVICE_LOG\n\nWEBKIT_LOG\n\nINSTRUMENTATION_OUTPUT\n\nEXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an Android fuzz test.\n\nCALABASH_JSON_OUTPUT\n\nCALABASH_PRETTY_OUTPUT\n\nCALABASH_STANDARD_OUTPUT\n\nCALABASH_JAVA_XML_OUTPUT\n\nAUTOMATION_OUTPUT\n\nAPPIUM_SERVER_OUTPUT\n\nAPPIUM_JAVA_OUTPUT\n\nAPPIUM_JAVA_XML_OUTPUT\n\nAPPIUM_PYTHON_OUTPUT\n\nAPPIUM_PYTHON_XML_OUTPUT\n\nEXPLORER_EVENT_LOG\n\nEXPLORER_SUMMARY_LOG\n\nAPPLICATION_CRASH_REPORT\n\nXCTEST_LOG\n\nVIDEO\n\nCUSTOMER_ARTIFACT\n\nCUSTOMER_ARTIFACT_LOG\n\nTESTSPEC_OUTPUT\n\nextension -> (string)\n\nThe artifact’s file extension.\n\nurl -> (string)\n\nThe presigned Amazon S3 URL that can be used with a GET request to download the artifact’s file.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-device-instances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-device-instances.html",
      "command_description": "Description\n\nReturns information about the private device instances associated with one or more AWS accounts.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-device-instances is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: deviceInstances",
      "command_synopsis": "Synopsis\n  list-device-instances\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeviceInstances -> (list)\n\nAn object that contains information about your device instances.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\nnextToken -> (string)\n\nAn identifier that can be used in the next call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-device-pools",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-device-pools.html",
      "command_description": "Description\n\nGets information about device pools.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-device-pools is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: devicePools",
      "command_synopsis": "Synopsis\n  list-device-pools\n--arn <value>\n[--type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe project ARN.\n\n--type (string)\n\nThe device pools’ type.\n\nAllowed values include:\n\nCURATED: A device pool that is created and managed by AWS Device Farm.\n\nPRIVATE: A device pool that is created and managed by the device pool developer.\n\nPossible values:\n\nCURATED\n\nPRIVATE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndevicePools -> (list)\n\nInformation about the device pools.\n\n(structure)\n\nRepresents a collection of device types.\n\narn -> (string)\n\nThe device pool’s ARN.\n\nname -> (string)\n\nThe device pool’s name.\n\ndescription -> (string)\n\nThe device pool’s description.\n\ntype -> (string)\n\nThe device pool’s type.\n\nAllowed values include:\n\nCURATED: A device pool that is created and managed by AWS Device Farm.\n\nPRIVATE: A device pool that is created and managed by the device pool developer.\n\nrules -> (list)\n\nInformation about the device pool’s rules.\n\n(structure)\n\nRepresents a condition for a device pool.\n\nattribute -> (string)\n\nThe rule’s stringified attribute. For example, specify the value as \"\\\"abc\\\"\" .\n\nThe supported operators for each attribute are provided in the following list.\n\nAPPIUM_VERSION\n\nThe Appium version for the test.\n\nSupported operators: CONTAINS\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example .\n\nSupported operators: EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nMODEL\n\nThe device model, such as Apple iPad Air 2 or Google Pixel.\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\noperator -> (string)\n\nSpecifies how Device Farm compares the rule’s attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.\n\nvalue -> (string)\n\nThe rule’s value.\n\nmaxDevices -> (integer)\n\nThe number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and meet the criteria that you assign for the rules parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.\n\nBy specifying the maximum number of devices, you can control the costs that you incur by running tests.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-devices",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-devices.html",
      "command_description": "Description\n\nGets information about unique device types.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-devices is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: devices",
      "command_synopsis": "Synopsis\n  list-devices\n[--arn <value>]\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--arn <value>]",
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the project.\n\n--filters (list)\n\nUsed to select a set of devices. A filter is made up of an attribute, an operator, and one or more values.\n\nAttribute: The aspect of a device such as platform or model used as the selection criteria in a device filter. Allowed values include:\n\nARN: The Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example ).\n\nPLATFORM: The device platform. Valid values are ANDROID or IOS.\n\nOS_VERSION: The operating system version (for example, 10.3.2).\n\nMODEL: The device model (for example, iPad 5th Gen).\n\nAVAILABILITY: The current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nFORM_FACTOR: The device form factor. Valid values are PHONE or TABLET.\n\nMANUFACTURER: The device manufacturer (for example, Apple).\n\nREMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nREMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE. Because remote debugging is no longer supported , this attribute is ignored.\n\nINSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.\n\nINSTANCE_LABELS: The label of the device instance.\n\nFLEET_TYPE: The fleet type. Valid values are PUBLIC or PRIVATE.\n\nOperator: The filter operator.\n\nThe EQUALS operator is available for every attribute except INSTANCE_LABELS.\n\nThe CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.\n\nThe IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.\n\nThe LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.\n\nValues: An array of one or more filter values.\n\nThe IN and NOT_IN operators take a values array that has one or more elements.\n\nThe other operators require an array with a single element.\n\nIn a request, the AVAILABILITY attribute takes the following values: AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\n(structure)\n\nRepresents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the deviceSelectionConfiguration parameter to ScheduleRun . For an example of the JSON request syntax, see ScheduleRun .\n\nIt is also passed in as the filters parameter to ListDevices . For an example of the JSON request syntax, see ListDevices .\n\nattribute -> (string)\n\nThe aspect of a device such as platform or model used as the selection criteria in a device filter.\n\nThe supported operators for each attribute are provided in the following list.\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example ).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nMODEL\n\nThe device model (for example, iPad 5th Gen).\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\noperator -> (string)\n\nSpecifies how Device Farm compares the filter’s attribute to the value. See the attribute descriptions.\n\nvalues -> (list)\n\nAn array of one or more filter values used in a device filter.\n\nOperator Values\n\nThe IN and NOT_IN operators can take a values array that has more than one element.\n\nThe other operators require an array with a single element.\n\nAttribute Values\n\nThe PLATFORM attribute can be set to ANDROID or IOS.\n\nThe AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nThe FORM_FACTOR attribute can be set to PHONE or TABLET.\n\nThe FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.\n\n(string)\n\nShorthand Syntax:\n\nattribute=string,operator=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"attribute\": \"ARN\"|\"PLATFORM\"|\"OS_VERSION\"|\"MODEL\"|\"AVAILABILITY\"|\"FORM_FACTOR\"|\"MANUFACTURER\"|\"REMOTE_ACCESS_ENABLED\"|\"REMOTE_DEBUG_ENABLED\"|\"INSTANCE_ARN\"|\"INSTANCE_LABELS\"|\"FLEET_TYPE\",\n    \"operator\": \"EQUALS\"|\"LESS_THAN\"|\"LESS_THAN_OR_EQUALS\"|\"GREATER_THAN\"|\"GREATER_THAN_OR_EQUALS\"|\"IN\"|\"NOT_IN\"|\"CONTAINS\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndevices -> (list)\n\nInformation about the devices.\n\n(structure)\n\nRepresents a device type that an app is tested against.\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-instance-profiles",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-instance-profiles.html",
      "command_description": "Description\n\nReturns information about all the instance profiles in an AWS account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-instance-profiles is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: instanceProfiles",
      "command_synopsis": "Synopsis\n  list-instance-profiles\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninstanceProfiles -> (list)\n\nAn object that contains information about your instance profiles.\n\n(structure)\n\nRepresents the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\nnextToken -> (string)\n\nAn identifier that can be used in the next call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-jobs.html",
      "command_description": "Description\n\nGets information about jobs for a given test run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: jobs",
      "command_synopsis": "Synopsis\n  list-jobs\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe run’s Amazon Resource Name (ARN).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\njobs -> (list)\n\nInformation about the jobs.\n\n(structure)\n\nRepresents a device.\n\narn -> (string)\n\nThe job’s ARN.\n\nname -> (string)\n\nThe job’s name.\n\ntype -> (string)\n\nThe job’s type.\n\nAllowed values include the following:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\ncreated -> (timestamp)\n\nWhen the job was created.\n\nstatus -> (string)\n\nThe job’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe job’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe job’s start time.\n\nstopped -> (timestamp)\n\nThe job’s stop time.\n\ncounters -> (structure)\n\nThe job’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the job’s result.\n\ndevice -> (structure)\n\nThe device (phone or tablet).\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\ninstanceArn -> (string)\n\nThe ARN of the instance.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the job.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nvideoEndpoint -> (string)\n\nThe endpoint for streaming device video.\n\nvideoCapture -> (boolean)\n\nThis value is set to true if video capture is enabled. Otherwise, it is set to false.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-network-profiles",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-network-profiles.html",
      "command_description": "Description\n\nReturns the list of available network profiles.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-network-profiles is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: networkProfiles",
      "command_synopsis": "Synopsis\n  list-network-profiles\n--arn <value>\n[--type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the project for which you want to list network profiles.\n\n--type (string)\n\nThe type of network profile to return information about. Valid values are listed here.\n\nPossible values:\n\nCURATED\n\nPRIVATE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnetworkProfiles -> (list)\n\nA list of the available network profiles.\n\n(structure)\n\nAn array of settings that describes characteristics of a network profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the network profile.\n\nname -> (string)\n\nThe name of the network profile.\n\ndescription -> (string)\n\nThe description of the network profile.\n\ntype -> (string)\n\nThe type of network profile. Valid values are listed here.\n\nuplinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\ndownlinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\nuplinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\ndownlinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\nuplinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\ndownlinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\nuplinkLossPercent -> (integer)\n\nProportion of transmitted packets that fail to arrive from 0 to 100 percent.\n\ndownlinkLossPercent -> (integer)\n\nProportion of received packets that fail to arrive from 0 to 100 percent.\n\nnextToken -> (string)\n\nAn identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
    },
    {
      "command_name": "list-offering-promotions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-offering-promotions.html",
      "command_description": "Description\n\nReturns a list of offering promotions. Each offering promotion record contains the ID and description of the promotion. The API returns a NotEligible error if the caller is not permitted to invoke the operation. Contact aws-devicefarm-support@amazon.com if you must be able to invoke this operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-offering-promotions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: offeringPromotions",
      "command_synopsis": "Synopsis\n  list-offering-promotions\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nofferingPromotions -> (list)\n\nInformation about the offering promotions.\n\n(structure)\n\nRepresents information about an offering promotion.\n\nid -> (string)\n\nThe ID of the offering promotion.\n\ndescription -> (string)\n\nA string that describes the offering promotion.\n\nnextToken -> (string)\n\nAn identifier to be used in the next call to this operation, to return the next set of items in the list."
    },
    {
      "command_name": "list-offering-transactions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-offering-transactions.html",
      "command_description": "Description\n\nReturns a list of all historical purchases, renewals, and system renewal transactions for an AWS account. The list is paginated and ordered by a descending timestamp (most recent transactions are first). The API returns a NotEligible error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact aws-devicefarm-support@amazon.com .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-offering-transactions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: offeringTransactions",
      "command_synopsis": "Synopsis\n  list-offering-transactions\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nofferingTransactions -> (list)\n\nThe audit log of subscriptions you have purchased and modified through AWS Device Farm.\n\n(structure)\n\nRepresents the metadata of an offering transaction.\n\nofferingStatus -> (structure)\n\nThe status of an offering transaction.\n\ntype -> (string)\n\nThe type specified for the offering status.\n\noffering -> (structure)\n\nRepresents the metadata of an offering status.\n\nid -> (string)\n\nThe ID that corresponds to a device offering.\n\ndescription -> (string)\n\nA string that describes the offering.\n\ntype -> (string)\n\nThe type of offering (for example, RECURRING ) for a device.\n\nplatform -> (string)\n\nThe platform of the device (for example, ANDROID or IOS ).\n\nrecurringCharges -> (list)\n\nSpecifies whether there are recurring charges for the offering.\n\n(structure)\n\nSpecifies whether charges for devices are recurring.\n\ncost -> (structure)\n\nThe cost of the recurring charge.\n\namount -> (double)\n\nThe numerical amount of an offering or transaction.\n\ncurrencyCode -> (string)\n\nThe currency code of a monetary amount. For example, USD means U.S. dollars.\n\nfrequency -> (string)\n\nThe frequency in which charges recur.\n\nquantity -> (integer)\n\nThe number of available devices in the offering.\n\neffectiveOn -> (timestamp)\n\nThe date on which the offering is effective.\n\ntransactionId -> (string)\n\nThe transaction ID of the offering transaction.\n\nofferingPromotionId -> (string)\n\nThe ID that corresponds to a device offering promotion.\n\ncreatedOn -> (timestamp)\n\nThe date on which an offering transaction was created.\n\ncost -> (structure)\n\nThe cost of an offering transaction.\n\namount -> (double)\n\nThe numerical amount of an offering or transaction.\n\ncurrencyCode -> (string)\n\nThe currency code of a monetary amount. For example, USD means U.S. dollars.\n\nnextToken -> (string)\n\nAn identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
    },
    {
      "command_name": "list-offerings",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-offerings.html",
      "command_description": "Description\n\nReturns a list of products or offerings that the user can manage through the API. Each offering record indicates the recurring price per unit and the frequency for that offering. The API returns a NotEligible error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact aws-devicefarm-support@amazon.com .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-offerings is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: offerings",
      "command_synopsis": "Synopsis\n  list-offerings\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nofferings -> (list)\n\nA value that represents the list offering results.\n\n(structure)\n\nRepresents the metadata of a device offering.\n\nid -> (string)\n\nThe ID that corresponds to a device offering.\n\ndescription -> (string)\n\nA string that describes the offering.\n\ntype -> (string)\n\nThe type of offering (for example, RECURRING ) for a device.\n\nplatform -> (string)\n\nThe platform of the device (for example, ANDROID or IOS ).\n\nrecurringCharges -> (list)\n\nSpecifies whether there are recurring charges for the offering.\n\n(structure)\n\nSpecifies whether charges for devices are recurring.\n\ncost -> (structure)\n\nThe cost of the recurring charge.\n\namount -> (double)\n\nThe numerical amount of an offering or transaction.\n\ncurrencyCode -> (string)\n\nThe currency code of a monetary amount. For example, USD means U.S. dollars.\n\nfrequency -> (string)\n\nThe frequency in which charges recur.\n\nnextToken -> (string)\n\nAn identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
    },
    {
      "command_name": "list-projects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-projects.html",
      "command_description": "Description\n\nGets information about projects.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-projects is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: projects",
      "command_synopsis": "Synopsis\n  list-projects\n[--arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nOptional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm returns a list of all projects for the AWS account. You can also specify a project ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nprojects -> (list)\n\nInformation about the projects.\n\n(structure)\n\nRepresents an operating-system neutral workspace for running and managing tests.\n\narn -> (string)\n\nThe project’s ARN.\n\nname -> (string)\n\nThe project’s name.\n\ndefaultJobTimeoutMinutes -> (integer)\n\nThe default number of minutes (at the project level) a test run executes before it times out. The default value is 150 minutes.\n\ncreated -> (timestamp)\n\nWhen the project was created.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.",
      "command_examples": "Examples\n\nTo list projects\n\nThe following retrieves a list of projects:\n\naws devicefarm list-projects\n\n\nOutput:\n\n{\n    \"projects\": [\n        {\n            \"name\": \"myproject\",\n            \"arn\": \"arn:aws:devicefarm:us-west-2:123456789012:project:070fc3ca-7ec1-4741-9c1f-d3e044efc506\",\n            \"created\": 1503612890.057\n        },\n        {\n            \"name\": \"otherproject\",\n            \"arn\": \"arn:aws:devicefarm:us-west-2:123456789012:project:a5f5b752-8098-49d1-86bf-5f7682c1c77e\",\n            \"created\": 1505257519.337\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-remote-access-sessions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-remote-access-sessions.html",
      "command_description": "Description\n\nReturns a list of all currently running remote access sessions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-remote-access-sessions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: remoteAccessSessions",
      "command_synopsis": "Synopsis\n  list-remote-access-sessions\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the project about which you are requesting information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nremoteAccessSessions -> (list)\n\nA container that represents the metadata from the service about each remote access session you are requesting.\n\n(structure)\n\nRepresents information about the remote access session.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the remote access session.\n\nname -> (string)\n\nThe name of the remote access session.\n\ncreated -> (timestamp)\n\nThe date and time the remote access session was created.\n\nstatus -> (string)\n\nThe status of the remote access session. Can be any of the following:\n\nPENDING.\n\nPENDING_CONCURRENCY.\n\nPENDING_DEVICE.\n\nPROCESSING.\n\nSCHEDULING.\n\nPREPARING.\n\nRUNNING.\n\nCOMPLETED.\n\nSTOPPING.\n\nresult -> (string)\n\nThe result of the remote access session. Can be any of the following:\n\nPENDING.\n\nPASSED.\n\nWARNED.\n\nFAILED.\n\nSKIPPED.\n\nERRORED.\n\nSTOPPED.\n\nmessage -> (string)\n\nA message about the remote access session.\n\nstarted -> (timestamp)\n\nThe date and time the remote access session was started.\n\nstopped -> (timestamp)\n\nThe date and time the remote access session was stopped.\n\ndevice -> (structure)\n\nThe device (phone or tablet) used in the remote access session.\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\ninstanceArn -> (string)\n\nThe ARN of the instance.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nremoteRecordEnabled -> (boolean)\n\nThis flag is set to true if remote recording is enabled for the remote access session.\n\nremoteRecordAppArn -> (string)\n\nThe ARN for the app to be recorded in the remote access session.\n\nhostAddress -> (string)\n\nIP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nclientId -> (string)\n\nUnique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nbillingMethod -> (string)\n\nThe billing method of the remote access session. Possible values include METERED or UNMETERED . For more information about metered devices, see AWS Device Farm terminology .\n\ndeviceMinutes -> (structure)\n\nThe number of minutes a device is used in a remote access session (including setup and teardown minutes).\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nendpoint -> (string)\n\nThe endpoint for the remote access sesssion.\n\ndeviceUdid -> (string)\n\nUnique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\ninteractionMode -> (string)\n\nThe interaction mode of the remote access session. Valid values are:\n\nINTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You cannot run XCUITest framework-based tests in this mode.\n\nNO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This mode has the fastest test execution speed. You can run XCUITest framework-based tests in this mode.\n\nVIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest framework-based tests and watch the screen in this mode.\n\nskipAppResign -> (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information about how Device Farm re-signs your apps, see Do you modify my app? in the AWS Device Farm FAQs .\n\nnextToken -> (string)\n\nAn identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
    },
    {
      "command_name": "list-runs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-runs.html",
      "command_description": "Description\n\nGets information about runs, given an AWS Device Farm project ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-runs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: runs",
      "command_synopsis": "Synopsis\n  list-runs\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the project for which you want to list runs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nruns -> (list)\n\nInformation about the runs.\n\n(structure)\n\nRepresents a test run on a set of devices with a given app package, test parameters, and so on.\n\narn -> (string)\n\nThe run’s ARN.\n\nname -> (string)\n\nThe run’s name.\n\ntype -> (string)\n\nThe run’s type.\n\nMust be one of the following values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER\n\nNote\n\nFor Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\nplatform -> (string)\n\nThe run’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\ncreated -> (timestamp)\n\nWhen the run was created.\n\nstatus -> (string)\n\nThe run’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe run’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe run’s start time.\n\nstopped -> (timestamp)\n\nThe run’s stop time.\n\ncounters -> (structure)\n\nThe run’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the run’s result.\n\ntotalJobs -> (integer)\n\nThe total number of jobs for the run.\n\ncompletedJobs -> (integer)\n\nThe total number of completed jobs.\n\nbillingMethod -> (string)\n\nSpecifies the billing method for a test run: metered or unmetered . If the parameter is not specified, the default value is metered .\n\nNote\n\nIf you have unmetered device slots, you must set this to unmetered to use them. Otherwise, the run is counted toward metered device minutes.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the test run.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nnetworkProfile -> (structure)\n\nThe network profile being used for a test run.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the network profile.\n\nname -> (string)\n\nThe name of the network profile.\n\ndescription -> (string)\n\nThe description of the network profile.\n\ntype -> (string)\n\nThe type of network profile. Valid values are listed here.\n\nuplinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\ndownlinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\nuplinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\ndownlinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\nuplinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\ndownlinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\nuplinkLossPercent -> (integer)\n\nProportion of transmitted packets that fail to arrive from 0 to 100 percent.\n\ndownlinkLossPercent -> (integer)\n\nProportion of received packets that fail to arrive from 0 to 100 percent.\n\nparsingResultUrl -> (string)\n\nRead-only URL for an object in an S3 bucket where you can get the parsing results of the test package. If the test package doesn’t parse, the reason why it doesn’t parse appears in the file that this URL points to.\n\nresultCode -> (string)\n\nSupporting field for the result field. Set only if result is SKIPPED . PARSING_FAILED if the result is skipped because of test package parsing failure.\n\nseed -> (integer)\n\nFor fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.\n\nappUpload -> (string)\n\nAn app to upload or that has been uploaded.\n\neventCount -> (integer)\n\nFor fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.\n\njobTimeoutMinutes -> (integer)\n\nThe number of minutes the job executes before it times out.\n\ndevicePoolArn -> (string)\n\nThe ARN of the device pool for the run.\n\nlocale -> (string)\n\nInformation about the locale that is used for the run.\n\nradios -> (structure)\n\nInformation about the radio states for the run.\n\nwifi -> (boolean)\n\nTrue if Wi-Fi is enabled at the beginning of the test. Otherwise, false.\n\nbluetooth -> (boolean)\n\nTrue if Bluetooth is enabled at the beginning of the test. Otherwise, false.\n\nnfc -> (boolean)\n\nTrue if NFC is enabled at the beginning of the test. Otherwise, false.\n\ngps -> (boolean)\n\nTrue if GPS is enabled at the beginning of the test. Otherwise, false.\n\nlocation -> (structure)\n\nInformation about the location that is used for the run.\n\nlatitude -> (double)\n\nThe latitude.\n\nlongitude -> (double)\n\nThe longitude.\n\ncustomerArtifactPaths -> (structure)\n\nOutput CustomerArtifactPaths object for the test run.\n\niosPaths -> (list)\n\nComma-separated list of paths on the iOS device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nandroidPaths -> (list)\n\nComma-separated list of paths on the Android device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\ndeviceHostPaths -> (list)\n\nComma-separated list of paths in the test execution environment where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nwebUrl -> (string)\n\nThe Device Farm console URL for the recording of the run.\n\nskipAppResign -> (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information about how Device Farm re-signs your apps, see Do you modify my app? in the AWS Device Farm FAQs .\n\ntestSpecArn -> (string)\n\nThe ARN of the YAML-formatted test specification for the run.\n\ndeviceSelectionResult -> (structure)\n\nThe results of a device filter used to select the devices for a test run.\n\nfilters -> (list)\n\nThe filters in a device selection result.\n\n(structure)\n\nRepresents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the deviceSelectionConfiguration parameter to ScheduleRun . For an example of the JSON request syntax, see ScheduleRun .\n\nIt is also passed in as the filters parameter to ListDevices . For an example of the JSON request syntax, see ListDevices .\n\nattribute -> (string)\n\nThe aspect of a device such as platform or model used as the selection criteria in a device filter.\n\nThe supported operators for each attribute are provided in the following list.\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example ).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nMODEL\n\nThe device model (for example, iPad 5th Gen).\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\noperator -> (string)\n\nSpecifies how Device Farm compares the filter’s attribute to the value. See the attribute descriptions.\n\nvalues -> (list)\n\nAn array of one or more filter values used in a device filter.\n\nOperator Values\n\nThe IN and NOT_IN operators can take a values array that has more than one element.\n\nThe other operators require an array with a single element.\n\nAttribute Values\n\nThe PLATFORM attribute can be set to ANDROID or IOS.\n\nThe AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nThe FORM_FACTOR attribute can be set to PHONE or TABLET.\n\nThe FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.\n\n(string)\n\nmatchedDevicesCount -> (integer)\n\nThe number of devices that matched the device filter selection criteria.\n\nmaxDevices -> (integer)\n\nThe maximum number of devices to be selected by a device filter and included in a test run.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-samples",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-samples.html",
      "command_description": "Description\n\nGets information about samples, given an AWS Device Farm job ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-samples is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: samples",
      "command_synopsis": "Synopsis\n  list-samples\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the job used to list samples.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsamples -> (list)\n\nInformation about the samples.\n\n(structure)\n\nRepresents a sample of performance data.\n\narn -> (string)\n\nThe sample’s ARN.\n\ntype -> (string)\n\nThe sample’s type.\n\nMust be one of the following values:\n\nCPU: A CPU sample type. This is expressed as the app processing CPU time (including child processes) as reported by process, as a percentage.\n\nMEMORY: A memory usage sample type. This is expressed as the total proportional set size of an app process, in kilobytes.\n\nNATIVE_AVG_DRAWTIME\n\nNATIVE_FPS\n\nNATIVE_FRAMES\n\nNATIVE_MAX_DRAWTIME\n\nNATIVE_MIN_DRAWTIME\n\nOPENGL_AVG_DRAWTIME\n\nOPENGL_FPS\n\nOPENGL_FRAMES\n\nOPENGL_MAX_DRAWTIME\n\nOPENGL_MIN_DRAWTIME\n\nRX\n\nRX_RATE: The total number of bytes per second (TCP and UDP) that are sent, by app process.\n\nTHREADS: A threads sample type. This is expressed as the total number of threads per app process.\n\nTX\n\nTX_RATE: The total number of bytes per second (TCP and UDP) that are received, by app process.\n\nurl -> (string)\n\nThe presigned Amazon S3 URL that can be used with a GET request to download the sample’s file.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-suites",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-suites.html",
      "command_description": "Description\n\nGets information about test suites for a given job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-suites is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: suites",
      "command_synopsis": "Synopsis\n  list-suites\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe job’s Amazon Resource Name (ARN).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsuites -> (list)\n\nInformation about the suites.\n\n(structure)\n\nRepresents a collection of one or more tests.\n\narn -> (string)\n\nThe suite’s ARN.\n\nname -> (string)\n\nThe suite’s name.\n\ntype -> (string)\n\nThe suite’s type.\n\nMust be one of the following values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER\n\nNote\n\nOnly available for Android; an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\ncreated -> (timestamp)\n\nWhen the suite was created.\n\nstatus -> (string)\n\nThe suite’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe suite’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe suite’s start time.\n\nstopped -> (timestamp)\n\nThe suite’s stop time.\n\ncounters -> (structure)\n\nThe suite’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the suite’s result.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the test suite.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-tags-for-resource.html",
      "command_description": "Description\n\nList the tags for an AWS Device Farm resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource or resources for which to list tags. You can associate tags with the following Device Farm resources: PROJECT , RUN , NETWORK_PROFILE , INSTANCE_PROFILE , DEVICE_INSTANCE , SESSION , DEVICE_POOL , DEVICE , and VPCE_CONFIGURATION .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters.\n\n(structure)\n\nThe metadata that you apply to a resource to help you categorize and organize it. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor in a tag category (key)."
    },
    {
      "command_name": "list-test-grid-projects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-test-grid-projects.html",
      "command_description": "Description\n\nGets a list of all Selenium testing projects in your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-test-grid-projects\n[--max-result <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-result <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-result (integer)\n\nReturn no more than this number of results.\n\n--next-token (string)\n\nFrom a response, used to continue a paginated listing.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntestGridProjects -> (list)\n\nThe list of TestGridProjects, based on a ListTestGridProjectsRequest .\n\n(structure)\n\nA Selenium testing project. Projects are used to collect and collate sessions.\n\narn -> (string)\n\nThe ARN for the project.\n\nname -> (string)\n\nA human-readable name for the project.\n\ndescription -> (string)\n\nA human-readable description for the project.\n\nvpcConfig -> (structure)\n\nThe VPC security groups and subnets that are attached to a project.\n\nsecurityGroupIds -> (list)\n\nA list of VPC security group IDs in your Amazon VPC.\n\n(string)\n\nsubnetIds -> (list)\n\nA list of VPC subnet IDs in your Amazon VPC.\n\n(string)\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\ncreated -> (timestamp)\n\nWhen the project was created.\n\nnextToken -> (string)\n\nUsed for pagination. Pass into ListTestGridProjects to get more results in a paginated request."
    },
    {
      "command_name": "list-test-grid-session-actions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-test-grid-session-actions.html",
      "command_description": "Description\n\nReturns a list of the actions taken in a TestGridSession .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-test-grid-session-actions\n--session-arn <value>\n[--max-result <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--session-arn <value>",
        "[--max-result <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--session-arn (string)\n\nThe ARN of the session to retrieve.\n\n--max-result (integer)\n\nThe maximum number of sessions to return per response.\n\n--next-token (string)\n\nPagination token.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nactions -> (list)\n\nThe action taken by the session.\n\n(structure)\n\nAn action taken by a TestGridSession browser instance.\n\naction -> (string)\n\nThe action taken by the session.\n\nstarted -> (timestamp)\n\nThe time that the session invoked the action.\n\nduration -> (long)\n\nThe time, in milliseconds, that the action took to complete in the browser.\n\nstatusCode -> (string)\n\nHTTP status code returned to the browser when the action was taken.\n\nrequestMethod -> (string)\n\nHTTP method that the browser used to make the request.\n\nnextToken -> (string)\n\nPagination token."
    },
    {
      "command_name": "list-test-grid-session-artifacts",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-test-grid-session-artifacts.html",
      "command_description": "Description\n\nRetrieves a list of artifacts created during the session.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-test-grid-session-artifacts\n--session-arn <value>\n[--type <value>]\n[--max-result <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--session-arn <value>",
        "[--type <value>]",
        "[--max-result <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--session-arn (string)\n\nThe ARN of a TestGridSession .\n\n--type (string)\n\nLimit results to a specified type of artifact.\n\nPossible values:\n\nVIDEO\n\nLOG\n\n--max-result (integer)\n\nThe maximum number of results to be returned by a request.\n\n--next-token (string)\n\nPagination token.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nartifacts -> (list)\n\nA list of test grid session artifacts for a TestGridSession .\n\n(structure)\n\nArtifacts are video and other files that are produced in the process of running a browser in an automated context.\n\nNote\n\nVideo elements might be broken up into multiple artifacts as they grow in size during creation.\n\nfilename -> (string)\n\nThe file name of the artifact.\n\ntype -> (string)\n\nThe kind of artifact.\n\nurl -> (string)\n\nA semi-stable URL to the content of the object.\n\nnextToken -> (string)\n\nPagination token."
    },
    {
      "command_name": "list-test-grid-sessions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-test-grid-sessions.html",
      "command_description": "Description\n\nRetrieves a list of sessions for a TestGridProject .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-test-grid-sessions\n--project-arn <value>\n[--status <value>]\n[--creation-time-after <value>]\n[--creation-time-before <value>]\n[--end-time-after <value>]\n[--end-time-before <value>]\n[--max-result <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "[--status <value>]",
        "[--creation-time-after <value>]",
        "[--creation-time-before <value>]",
        "[--end-time-after <value>]",
        "[--end-time-before <value>]",
        "[--max-result <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nARN of a TestGridProject .\n\n--status (string)\n\nReturn only sessions in this state.\n\nPossible values:\n\nACTIVE\n\nCLOSED\n\nERRORED\n\n--creation-time-after (timestamp)\n\nReturn only sessions created after this time.\n\n--creation-time-before (timestamp)\n\nReturn only sessions created before this time.\n\n--end-time-after (timestamp)\n\nReturn only sessions that ended after this time.\n\n--end-time-before (timestamp)\n\nReturn only sessions that ended before this time.\n\n--max-result (integer)\n\nReturn only this many results at a time.\n\n--next-token (string)\n\nPagination token.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntestGridSessions -> (list)\n\nThe sessions that match the criteria in a ListTestGridSessionsRequest .\n\n(structure)\n\nA TestGridSession is a single instance of a browser launched from the URL provided by a call to CreateTestGridUrl .\n\narn -> (string)\n\nThe ARN of the session.\n\nstatus -> (string)\n\nThe state of the session.\n\ncreated -> (timestamp)\n\nThe time that the session was started.\n\nended -> (timestamp)\n\nThe time the session ended.\n\nbillingMinutes -> (double)\n\nThe number of billed minutes that were used for this session.\n\nseleniumProperties -> (string)\n\nA JSON object of options and parameters passed to the Selenium WebDriver.\n\nnextToken -> (string)\n\nPagination token."
    },
    {
      "command_name": "list-tests",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-tests.html",
      "command_description": "Description\n\nGets information about tests in a given test suite.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-tests is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: tests",
      "command_synopsis": "Synopsis\n  list-tests\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe test suite’s Amazon Resource Name (ARN).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntests -> (list)\n\nInformation about the tests.\n\n(structure)\n\nRepresents a condition that is evaluated.\n\narn -> (string)\n\nThe test’s ARN.\n\nname -> (string)\n\nThe test’s name.\n\ntype -> (string)\n\nThe test’s type.\n\nMust be one of the following values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER\n\nNote\n\nFor Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\ncreated -> (timestamp)\n\nWhen the test was created.\n\nstatus -> (string)\n\nThe test’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe test’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe test’s start time.\n\nstopped -> (timestamp)\n\nThe test’s stop time.\n\ncounters -> (structure)\n\nThe test’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the test’s result.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the test.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-unique-problems",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-unique-problems.html",
      "command_description": "Description\n\nGets information about unique problems, such as exceptions or crashes.\n\nUnique problems are defined as a single instance of an error across a run, job, or suite. For example, if a call in your application consistently raises an exception (OutOfBoundsException in MyActivity.java:386 ), ListUniqueProblems returns a single entry instead of many individual entries for that exception.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-unique-problems is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: uniqueProblems",
      "command_synopsis": "Synopsis\n  list-unique-problems\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe unique problems’ ARNs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nuniqueProblems -> (map)\n\nInformation about the unique problems.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nkey -> (string)\n\nvalue -> (list)\n\n(structure)\n\nA collection of one or more problems, grouped by their result.\n\nmessage -> (string)\n\nA message about the unique problems’ result.\n\nproblems -> (list)\n\nInformation about the problems.\n\n(structure)\n\nRepresents a specific warning or failure.\n\nrun -> (structure)\n\nInformation about the associated run.\n\narn -> (string)\n\nThe problem detail’s ARN.\n\nname -> (string)\n\nThe problem detail’s name.\n\njob -> (structure)\n\nInformation about the associated job.\n\narn -> (string)\n\nThe problem detail’s ARN.\n\nname -> (string)\n\nThe problem detail’s name.\n\nsuite -> (structure)\n\nInformation about the associated suite.\n\narn -> (string)\n\nThe problem detail’s ARN.\n\nname -> (string)\n\nThe problem detail’s name.\n\ntest -> (structure)\n\nInformation about the associated test.\n\narn -> (string)\n\nThe problem detail’s ARN.\n\nname -> (string)\n\nThe problem detail’s name.\n\ndevice -> (structure)\n\nInformation about the associated device.\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\nresult -> (string)\n\nThe problem’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nmessage -> (string)\n\nA message about the problem’s result.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-uploads",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-uploads.html",
      "command_description": "Description\n\nGets information about uploads, given an AWS Device Farm project ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-uploads is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: uploads",
      "command_synopsis": "Synopsis\n  list-uploads\n--arn <value>\n[--type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the project for which you want to list uploads.\n\n--type (string)\n\nThe type of upload.\n\nMust be one of the following values:\n\nANDROID_APP\n\nIOS_APP\n\nWEB_APP\n\nEXTERNAL_DATA\n\nAPPIUM_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_PYTHON_TEST_PACKAGE\n\nAPPIUM_NODE_TEST_PACKAGE\n\nAPPIUM_RUBY_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_WEB_PYTHON_TEST_PACKAGE\n\nAPPIUM_WEB_NODE_TEST_PACKAGE\n\nAPPIUM_WEB_RUBY_TEST_PACKAGE\n\nCALABASH_TEST_PACKAGE\n\nINSTRUMENTATION_TEST_PACKAGE\n\nUIAUTOMATION_TEST_PACKAGE\n\nUIAUTOMATOR_TEST_PACKAGE\n\nXCTEST_TEST_PACKAGE\n\nXCTEST_UI_TEST_PACKAGE\n\nAPPIUM_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_PYTHON_TEST_SPEC\n\nAPPIUM_NODE_TEST_SPEC\n\nAPPIUM_RUBY_TEST_SPEC\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_WEB_PYTHON_TEST_SPEC\n\nAPPIUM_WEB_NODE_TEST_SPEC\n\nAPPIUM_WEB_RUBY_TEST_SPEC\n\nINSTRUMENTATION_TEST_SPEC\n\nXCTEST_UI_TEST_SPEC\n\nPossible values:\n\nANDROID_APP\n\nIOS_APP\n\nWEB_APP\n\nEXTERNAL_DATA\n\nAPPIUM_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_PYTHON_TEST_PACKAGE\n\nAPPIUM_NODE_TEST_PACKAGE\n\nAPPIUM_RUBY_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_WEB_PYTHON_TEST_PACKAGE\n\nAPPIUM_WEB_NODE_TEST_PACKAGE\n\nAPPIUM_WEB_RUBY_TEST_PACKAGE\n\nCALABASH_TEST_PACKAGE\n\nINSTRUMENTATION_TEST_PACKAGE\n\nUIAUTOMATION_TEST_PACKAGE\n\nUIAUTOMATOR_TEST_PACKAGE\n\nXCTEST_TEST_PACKAGE\n\nXCTEST_UI_TEST_PACKAGE\n\nAPPIUM_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_PYTHON_TEST_SPEC\n\nAPPIUM_NODE_TEST_SPEC\n\nAPPIUM_RUBY_TEST_SPEC\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_WEB_PYTHON_TEST_SPEC\n\nAPPIUM_WEB_NODE_TEST_SPEC\n\nAPPIUM_WEB_RUBY_TEST_SPEC\n\nINSTRUMENTATION_TEST_SPEC\n\nXCTEST_UI_TEST_SPEC\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nuploads -> (list)\n\nInformation about the uploads.\n\n(structure)\n\nAn app or a set of one or more tests to upload or that have been uploaded.\n\narn -> (string)\n\nThe upload’s ARN.\n\nname -> (string)\n\nThe upload’s file name.\n\ncreated -> (timestamp)\n\nWhen the upload was created.\n\ntype -> (string)\n\nThe upload’s type.\n\nMust be one of the following values:\n\nANDROID_APP\n\nIOS_APP\n\nWEB_APP\n\nEXTERNAL_DATA\n\nAPPIUM_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_PYTHON_TEST_PACKAGE\n\nAPPIUM_NODE_TEST_PACKAGE\n\nAPPIUM_RUBY_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_WEB_PYTHON_TEST_PACKAGE\n\nAPPIUM_WEB_NODE_TEST_PACKAGE\n\nAPPIUM_WEB_RUBY_TEST_PACKAGE\n\nCALABASH_TEST_PACKAGE\n\nINSTRUMENTATION_TEST_PACKAGE\n\nUIAUTOMATION_TEST_PACKAGE\n\nUIAUTOMATOR_TEST_PACKAGE\n\nXCTEST_TEST_PACKAGE\n\nXCTEST_UI_TEST_PACKAGE\n\nAPPIUM_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_PYTHON_TEST_SPEC\n\nAPPIUM_NODE_TEST_SPEC\n\nAPPIUM_RUBY_TEST_SPEC\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_WEB_PYTHON_TEST_SPEC\n\nAPPIUM_WEB_NODE_TEST_SPEC\n\nAPPIUM_WEB_RUBY_TEST_SPEC\n\nINSTRUMENTATION_TEST_SPEC\n\nXCTEST_UI_TEST_SPEC\n\nstatus -> (string)\n\nThe upload’s status.\n\nMust be one of the following values:\n\nFAILED\n\nINITIALIZED\n\nPROCESSING\n\nSUCCEEDED\n\nurl -> (string)\n\nThe presigned Amazon S3 URL that was used to store a file using a PUT request.\n\nmetadata -> (string)\n\nThe upload’s metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.\n\ncontentType -> (string)\n\nThe upload’s content type (for example, application/octet-stream ).\n\nmessage -> (string)\n\nA message about the upload’s result.\n\ncategory -> (string)\n\nThe upload’s category. Allowed values include:\n\nCURATED: An upload managed by AWS Device Farm.\n\nPRIVATE: An upload managed by the AWS Device Farm customer.\n\nnextToken -> (string)\n\nIf the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-vpce-configurations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/list-vpce-configurations.html",
      "command_description": "Description\n\nReturns information about all Amazon Virtual Private Cloud (VPC) endpoint configurations in the AWS account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-vpce-configurations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: vpceConfigurations",
      "command_synopsis": "Synopsis\n  list-vpce-configurations\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvpceConfigurations -> (list)\n\nAn array of VPCEConfiguration objects that contain information about your VPC endpoint configuration.\n\n(structure)\n\nRepresents an Amazon Virtual Private Cloud (VPC) endpoint configuration.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the VPC endpoint configuration.\n\nvpceConfigurationName -> (string)\n\nThe friendly name you give to your VPC endpoint configuration to manage your configurations more easily.\n\nvpceServiceName -> (string)\n\nThe name of the VPC endpoint service running in your AWS account that you want Device Farm to test.\n\nserviceDnsName -> (string)\n\nThe DNS name that maps to the private IP address of the service you want to access.\n\nvpceConfigurationDescription -> (string)\n\nAn optional description that provides details about your VPC endpoint configuration.\n\nnextToken -> (string)\n\nAn identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
    },
    {
      "command_name": "purchase-offering",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/purchase-offering.html",
      "command_description": "Description\n\nImmediately purchases offerings for an AWS account. Offerings renew with the latest total purchased quantity for an offering, unless the renewal was overridden. The API returns a NotEligible error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact aws-devicefarm-support@amazon.com .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  purchase-offering\n--offering-id <value>\n--quantity <value>\n[--offering-promotion-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--offering-id <value>",
        "--quantity <value>",
        "[--offering-promotion-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--offering-id (string)\n\nThe ID of the offering.\n\n--quantity (integer)\n\nThe number of device slots to purchase in an offering request.\n\n--offering-promotion-id (string)\n\nThe ID of the offering promotion to be applied to the purchase.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nofferingTransaction -> (structure)\n\nRepresents the offering transaction for the purchase result.\n\nofferingStatus -> (structure)\n\nThe status of an offering transaction.\n\ntype -> (string)\n\nThe type specified for the offering status.\n\noffering -> (structure)\n\nRepresents the metadata of an offering status.\n\nid -> (string)\n\nThe ID that corresponds to a device offering.\n\ndescription -> (string)\n\nA string that describes the offering.\n\ntype -> (string)\n\nThe type of offering (for example, RECURRING ) for a device.\n\nplatform -> (string)\n\nThe platform of the device (for example, ANDROID or IOS ).\n\nrecurringCharges -> (list)\n\nSpecifies whether there are recurring charges for the offering.\n\n(structure)\n\nSpecifies whether charges for devices are recurring.\n\ncost -> (structure)\n\nThe cost of the recurring charge.\n\namount -> (double)\n\nThe numerical amount of an offering or transaction.\n\ncurrencyCode -> (string)\n\nThe currency code of a monetary amount. For example, USD means U.S. dollars.\n\nfrequency -> (string)\n\nThe frequency in which charges recur.\n\nquantity -> (integer)\n\nThe number of available devices in the offering.\n\neffectiveOn -> (timestamp)\n\nThe date on which the offering is effective.\n\ntransactionId -> (string)\n\nThe transaction ID of the offering transaction.\n\nofferingPromotionId -> (string)\n\nThe ID that corresponds to a device offering promotion.\n\ncreatedOn -> (timestamp)\n\nThe date on which an offering transaction was created.\n\ncost -> (structure)\n\nThe cost of an offering transaction.\n\namount -> (double)\n\nThe numerical amount of an offering or transaction.\n\ncurrencyCode -> (string)\n\nThe currency code of a monetary amount. For example, USD means U.S. dollars."
    },
    {
      "command_name": "renew-offering",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/renew-offering.html",
      "command_description": "Description\n\nExplicitly sets the quantity of devices to renew for an offering, starting from the effectiveDate of the next period. The API returns a NotEligible error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact aws-devicefarm-support@amazon.com .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  renew-offering\n--offering-id <value>\n--quantity <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--offering-id <value>",
        "--quantity <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--offering-id (string)\n\nThe ID of a request to renew an offering.\n\n--quantity (integer)\n\nThe quantity requested in an offering renewal.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nofferingTransaction -> (structure)\n\nRepresents the status of the offering transaction for the renewal.\n\nofferingStatus -> (structure)\n\nThe status of an offering transaction.\n\ntype -> (string)\n\nThe type specified for the offering status.\n\noffering -> (structure)\n\nRepresents the metadata of an offering status.\n\nid -> (string)\n\nThe ID that corresponds to a device offering.\n\ndescription -> (string)\n\nA string that describes the offering.\n\ntype -> (string)\n\nThe type of offering (for example, RECURRING ) for a device.\n\nplatform -> (string)\n\nThe platform of the device (for example, ANDROID or IOS ).\n\nrecurringCharges -> (list)\n\nSpecifies whether there are recurring charges for the offering.\n\n(structure)\n\nSpecifies whether charges for devices are recurring.\n\ncost -> (structure)\n\nThe cost of the recurring charge.\n\namount -> (double)\n\nThe numerical amount of an offering or transaction.\n\ncurrencyCode -> (string)\n\nThe currency code of a monetary amount. For example, USD means U.S. dollars.\n\nfrequency -> (string)\n\nThe frequency in which charges recur.\n\nquantity -> (integer)\n\nThe number of available devices in the offering.\n\neffectiveOn -> (timestamp)\n\nThe date on which the offering is effective.\n\ntransactionId -> (string)\n\nThe transaction ID of the offering transaction.\n\nofferingPromotionId -> (string)\n\nThe ID that corresponds to a device offering promotion.\n\ncreatedOn -> (timestamp)\n\nThe date on which an offering transaction was created.\n\ncost -> (structure)\n\nThe cost of an offering transaction.\n\namount -> (double)\n\nThe numerical amount of an offering or transaction.\n\ncurrencyCode -> (string)\n\nThe currency code of a monetary amount. For example, USD means U.S. dollars."
    },
    {
      "command_name": "schedule-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/schedule-run.html",
      "command_description": "Description\n\nSchedules a run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  schedule-run\n--project-arn <value>\n[--app-arn <value>]\n[--device-pool-arn <value>]\n[--device-selection-configuration <value>]\n[--name <value>]\n--test <value>\n[--configuration <value>]\n[--execution-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "[--app-arn <value>]",
        "[--device-pool-arn <value>]",
        "[--device-selection-configuration <value>]",
        "[--name <value>]",
        "--test <value>",
        "[--configuration <value>]",
        "[--execution-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe ARN of the project for the run to be scheduled.\n\n--app-arn (string)\n\nThe ARN of an application package to run tests against, created with CreateUpload . See ListUploads .\n\n--device-pool-arn (string)\n\nThe ARN of the device pool for the run to be scheduled.\n\n--device-selection-configuration (structure)\n\nThe filter criteria used to dynamically select a set of devices for a test run and the maximum number of devices to be included in the run.\n\nEither ** devicePoolArn ** or ** deviceSelectionConfiguration ** is required in a request.\n\nfilters -> (list)\n\nUsed to dynamically select a set of devices for a test run. A filter is made up of an attribute, an operator, and one or more values.\n\nAttribute The aspect of a device such as platform or model used as the selection criteria in a device filter. Allowed values include:\n\nARN: The Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example ).\n\nPLATFORM: The device platform. Valid values are ANDROID or IOS.\n\nOS_VERSION: The operating system version (for example, 10.3.2).\n\nMODEL: The device model (for example, iPad 5th Gen).\n\nAVAILABILITY: The current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nFORM_FACTOR: The device form factor. Valid values are PHONE or TABLET.\n\nMANUFACTURER: The device manufacturer (for example, Apple).\n\nREMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nREMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE. Because remote debugging is no longer supported , this filter is ignored.\n\nINSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.\n\nINSTANCE_LABELS: The label of the device instance.\n\nFLEET_TYPE: The fleet type. Valid values are PUBLIC or PRIVATE.\n\nOperator The filter operator.\n\nThe EQUALS operator is available for every attribute except INSTANCE_LABELS.\n\nThe CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.\n\nThe IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.\n\nThe LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.\n\nValues An array of one or more filter values. Operator Values\n\nThe IN and NOT_IN operators can take a values array that has more than one element.\n\nThe other operators require an array with a single element.\n\nAttribute Values\n\nThe PLATFORM attribute can be set to ANDROID or IOS.\n\nThe AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nThe FORM_FACTOR attribute can be set to PHONE or TABLET.\n\nThe FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.\n\n(structure)\n\nRepresents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the deviceSelectionConfiguration parameter to ScheduleRun . For an example of the JSON request syntax, see ScheduleRun .\n\nIt is also passed in as the filters parameter to ListDevices . For an example of the JSON request syntax, see ListDevices .\n\nattribute -> (string)\n\nThe aspect of a device such as platform or model used as the selection criteria in a device filter.\n\nThe supported operators for each attribute are provided in the following list.\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example ).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nMODEL\n\nThe device model (for example, iPad 5th Gen).\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\noperator -> (string)\n\nSpecifies how Device Farm compares the filter’s attribute to the value. See the attribute descriptions.\n\nvalues -> (list)\n\nAn array of one or more filter values used in a device filter.\n\nOperator Values\n\nThe IN and NOT_IN operators can take a values array that has more than one element.\n\nThe other operators require an array with a single element.\n\nAttribute Values\n\nThe PLATFORM attribute can be set to ANDROID or IOS.\n\nThe AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nThe FORM_FACTOR attribute can be set to PHONE or TABLET.\n\nThe FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.\n\n(string)\n\nmaxDevices -> (integer)\n\nThe maximum number of devices to be included in a test run.\n\nJSON Syntax:\n\n{\n  \"filters\": [\n    {\n      \"attribute\": \"ARN\"|\"PLATFORM\"|\"OS_VERSION\"|\"MODEL\"|\"AVAILABILITY\"|\"FORM_FACTOR\"|\"MANUFACTURER\"|\"REMOTE_ACCESS_ENABLED\"|\"REMOTE_DEBUG_ENABLED\"|\"INSTANCE_ARN\"|\"INSTANCE_LABELS\"|\"FLEET_TYPE\",\n      \"operator\": \"EQUALS\"|\"LESS_THAN\"|\"LESS_THAN_OR_EQUALS\"|\"GREATER_THAN\"|\"GREATER_THAN_OR_EQUALS\"|\"IN\"|\"NOT_IN\"|\"CONTAINS\",\n      \"values\": [\"string\", ...]\n    }\n    ...\n  ],\n  \"maxDevices\": integer\n}\n\n\n--name (string)\n\nThe name for the run to be scheduled.\n\n--test (structure)\n\nInformation about the test for the run to be scheduled.\n\ntype -> (string)\n\nThe test’s type.\n\nMust be one of the following values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\ntestPackageArn -> (string)\n\nThe ARN of the uploaded test to be run.\n\ntestSpecArn -> (string)\n\nThe ARN of the YAML-formatted test specification.\n\nfilter -> (string)\n\nThe test’s filter.\n\nparameters -> (map)\n\nThe test’s parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.\n\nFor all tests:\n\napp_performance_monitoring : Performance monitoring is enabled by default. Set this parameter to false to disable it.\n\nFor Calabash tests:\n\nprofile: A cucumber profile (for example, my_profile_name ).\n\ntags: You can limit execution to features or scenarios that have (or don’t have) certain tags (for example, @smoke or @smoke,~@wip).\n\nFor Appium tests (all types):\n\nappium_version: The Appium version. Currently supported values are 1.6.5 (and later), latest, and default.\n\nlatest runs the latest Appium version supported by Device Farm (1.9.1).\n\nFor default, Device Farm selects a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier and 1.7.2 for iOS 10 and later.\n\nThis behavior is subject to change.\n\nFor fuzz tests (Android only):\n\nevent_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.\n\nthrottle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.\n\nseed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.\n\nFor Explorer tests:\n\nusername: A user name to use if the Explorer encounters a login form. If not supplied, no user name is inserted.\n\npassword: A password to use if the Explorer encounters a login form. If not supplied, no password is inserted.\n\nFor Instrumentation:\n\nfilter: A test filter string. Examples:\n\nRunning a single test case: com.android.abc.Test1\n\nRunning a single test: com.android.abc.Test1#smoke\n\nRunning multiple tests: com.android.abc.Test1,com.android.abc.Test2\n\nFor XCTest and XCTestUI:\n\nfilter: A test filter string. Examples:\n\nRunning a single test class: LoginTests\n\nRunning a multiple test classes: LoginTests,SmokeTests\n\nRunning a single test: LoginTests/testValid\n\nRunning multiple tests: LoginTests/testValid,LoginTests/testInvalid\n\nFor UIAutomator:\n\nfilter: A test filter string. Examples:\n\nRunning a single test case: com.android.abc.Test1\n\nRunning a single test: com.android.abc.Test1#smoke\n\nRunning multiple tests: com.android.abc.Test1,com.android.abc.Test2\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\ntype=string,testPackageArn=string,testSpecArn=string,filter=string,parameters={KeyName1=string,KeyName2=string}\n\n\nJSON Syntax:\n\n{\n  \"type\": \"BUILTIN_FUZZ\"|\"BUILTIN_EXPLORER\"|\"WEB_PERFORMANCE_PROFILE\"|\"APPIUM_JAVA_JUNIT\"|\"APPIUM_JAVA_TESTNG\"|\"APPIUM_PYTHON\"|\"APPIUM_NODE\"|\"APPIUM_RUBY\"|\"APPIUM_WEB_JAVA_JUNIT\"|\"APPIUM_WEB_JAVA_TESTNG\"|\"APPIUM_WEB_PYTHON\"|\"APPIUM_WEB_NODE\"|\"APPIUM_WEB_RUBY\"|\"CALABASH\"|\"INSTRUMENTATION\"|\"UIAUTOMATION\"|\"UIAUTOMATOR\"|\"XCTEST\"|\"XCTEST_UI\"|\"REMOTE_ACCESS_RECORD\"|\"REMOTE_ACCESS_REPLAY\",\n  \"testPackageArn\": \"string\",\n  \"testSpecArn\": \"string\",\n  \"filter\": \"string\",\n  \"parameters\": {\"string\": \"string\"\n    ...}\n}\n\n\n--configuration (structure)\n\nInformation about the settings for the run to be scheduled.\n\nextraDataPackageArn -> (string)\n\nThe ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm extracts to external data for Android or the app’s sandbox for iOS.\n\nnetworkProfileArn -> (string)\n\nReserved for internal use.\n\nlocale -> (string)\n\nInformation about the locale that is used for the run.\n\nlocation -> (structure)\n\nInformation about the location that is used for the run.\n\nlatitude -> (double)\n\nThe latitude.\n\nlongitude -> (double)\n\nThe longitude.\n\nvpceConfigurationArns -> (list)\n\nAn array of ARNs for your VPC endpoint configurations.\n\n(string)\n\ncustomerArtifactPaths -> (structure)\n\nInput CustomerArtifactPaths object for the scheduled run configuration.\n\niosPaths -> (list)\n\nComma-separated list of paths on the iOS device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nandroidPaths -> (list)\n\nComma-separated list of paths on the Android device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\ndeviceHostPaths -> (list)\n\nComma-separated list of paths in the test execution environment where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nradios -> (structure)\n\nInformation about the radio states for the run.\n\nwifi -> (boolean)\n\nTrue if Wi-Fi is enabled at the beginning of the test. Otherwise, false.\n\nbluetooth -> (boolean)\n\nTrue if Bluetooth is enabled at the beginning of the test. Otherwise, false.\n\nnfc -> (boolean)\n\nTrue if NFC is enabled at the beginning of the test. Otherwise, false.\n\ngps -> (boolean)\n\nTrue if GPS is enabled at the beginning of the test. Otherwise, false.\n\nauxiliaryApps -> (list)\n\nA list of upload ARNs for app packages to be installed with your app.\n\n(string)\n\nbillingMethod -> (string)\n\nSpecifies the billing method for a test run: metered or unmetered . If the parameter is not specified, the default value is metered .\n\nNote\n\nIf you have purchased unmetered device slots, you must set this parameter to unmetered to make use of them. Otherwise, your run counts against your metered time.\n\nShorthand Syntax:\n\nextraDataPackageArn=string,networkProfileArn=string,locale=string,location={latitude=double,longitude=double},vpceConfigurationArns=string,string,customerArtifactPaths={iosPaths=[string,string],androidPaths=[string,string],deviceHostPaths=[string,string]},radios={wifi=boolean,bluetooth=boolean,nfc=boolean,gps=boolean},auxiliaryApps=string,string,billingMethod=string\n\n\nJSON Syntax:\n\n{\n  \"extraDataPackageArn\": \"string\",\n  \"networkProfileArn\": \"string\",\n  \"locale\": \"string\",\n  \"location\": {\n    \"latitude\": double,\n    \"longitude\": double\n  },\n  \"vpceConfigurationArns\": [\"string\", ...],\n  \"customerArtifactPaths\": {\n    \"iosPaths\": [\"string\", ...],\n    \"androidPaths\": [\"string\", ...],\n    \"deviceHostPaths\": [\"string\", ...]\n  },\n  \"radios\": {\n    \"wifi\": true|false,\n    \"bluetooth\": true|false,\n    \"nfc\": true|false,\n    \"gps\": true|false\n  },\n  \"auxiliaryApps\": [\"string\", ...],\n  \"billingMethod\": \"METERED\"|\"UNMETERED\"\n}\n\n\n--execution-configuration (structure)\n\nSpecifies configuration information about a test run, such as the execution timeout (in minutes).\n\njobTimeoutMinutes -> (integer)\n\nThe number of minutes a test run executes before it times out.\n\naccountsCleanup -> (boolean)\n\nTrue if account cleanup is enabled at the beginning of the test. Otherwise, false.\n\nappPackagesCleanup -> (boolean)\n\nTrue if app package cleanup is enabled at the beginning of the test. Otherwise, false.\n\nvideoCapture -> (boolean)\n\nSet to true to enable video capture. Otherwise, set to false. The default is true.\n\nskipAppResign -> (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information about how Device Farm re-signs your apps, see Do you modify my app? in the AWS Device Farm FAQs .\n\nShorthand Syntax:\n\njobTimeoutMinutes=integer,accountsCleanup=boolean,appPackagesCleanup=boolean,videoCapture=boolean,skipAppResign=boolean\n\n\nJSON Syntax:\n\n{\n  \"jobTimeoutMinutes\": integer,\n  \"accountsCleanup\": true|false,\n  \"appPackagesCleanup\": true|false,\n  \"videoCapture\": true|false,\n  \"skipAppResign\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrun -> (structure)\n\nInformation about the scheduled run.\n\narn -> (string)\n\nThe run’s ARN.\n\nname -> (string)\n\nThe run’s name.\n\ntype -> (string)\n\nThe run’s type.\n\nMust be one of the following values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER\n\nNote\n\nFor Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\nplatform -> (string)\n\nThe run’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\ncreated -> (timestamp)\n\nWhen the run was created.\n\nstatus -> (string)\n\nThe run’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe run’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe run’s start time.\n\nstopped -> (timestamp)\n\nThe run’s stop time.\n\ncounters -> (structure)\n\nThe run’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the run’s result.\n\ntotalJobs -> (integer)\n\nThe total number of jobs for the run.\n\ncompletedJobs -> (integer)\n\nThe total number of completed jobs.\n\nbillingMethod -> (string)\n\nSpecifies the billing method for a test run: metered or unmetered . If the parameter is not specified, the default value is metered .\n\nNote\n\nIf you have unmetered device slots, you must set this to unmetered to use them. Otherwise, the run is counted toward metered device minutes.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the test run.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nnetworkProfile -> (structure)\n\nThe network profile being used for a test run.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the network profile.\n\nname -> (string)\n\nThe name of the network profile.\n\ndescription -> (string)\n\nThe description of the network profile.\n\ntype -> (string)\n\nThe type of network profile. Valid values are listed here.\n\nuplinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\ndownlinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\nuplinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\ndownlinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\nuplinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\ndownlinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\nuplinkLossPercent -> (integer)\n\nProportion of transmitted packets that fail to arrive from 0 to 100 percent.\n\ndownlinkLossPercent -> (integer)\n\nProportion of received packets that fail to arrive from 0 to 100 percent.\n\nparsingResultUrl -> (string)\n\nRead-only URL for an object in an S3 bucket where you can get the parsing results of the test package. If the test package doesn’t parse, the reason why it doesn’t parse appears in the file that this URL points to.\n\nresultCode -> (string)\n\nSupporting field for the result field. Set only if result is SKIPPED . PARSING_FAILED if the result is skipped because of test package parsing failure.\n\nseed -> (integer)\n\nFor fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.\n\nappUpload -> (string)\n\nAn app to upload or that has been uploaded.\n\neventCount -> (integer)\n\nFor fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.\n\njobTimeoutMinutes -> (integer)\n\nThe number of minutes the job executes before it times out.\n\ndevicePoolArn -> (string)\n\nThe ARN of the device pool for the run.\n\nlocale -> (string)\n\nInformation about the locale that is used for the run.\n\nradios -> (structure)\n\nInformation about the radio states for the run.\n\nwifi -> (boolean)\n\nTrue if Wi-Fi is enabled at the beginning of the test. Otherwise, false.\n\nbluetooth -> (boolean)\n\nTrue if Bluetooth is enabled at the beginning of the test. Otherwise, false.\n\nnfc -> (boolean)\n\nTrue if NFC is enabled at the beginning of the test. Otherwise, false.\n\ngps -> (boolean)\n\nTrue if GPS is enabled at the beginning of the test. Otherwise, false.\n\nlocation -> (structure)\n\nInformation about the location that is used for the run.\n\nlatitude -> (double)\n\nThe latitude.\n\nlongitude -> (double)\n\nThe longitude.\n\ncustomerArtifactPaths -> (structure)\n\nOutput CustomerArtifactPaths object for the test run.\n\niosPaths -> (list)\n\nComma-separated list of paths on the iOS device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nandroidPaths -> (list)\n\nComma-separated list of paths on the Android device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\ndeviceHostPaths -> (list)\n\nComma-separated list of paths in the test execution environment where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nwebUrl -> (string)\n\nThe Device Farm console URL for the recording of the run.\n\nskipAppResign -> (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information about how Device Farm re-signs your apps, see Do you modify my app? in the AWS Device Farm FAQs .\n\ntestSpecArn -> (string)\n\nThe ARN of the YAML-formatted test specification for the run.\n\ndeviceSelectionResult -> (structure)\n\nThe results of a device filter used to select the devices for a test run.\n\nfilters -> (list)\n\nThe filters in a device selection result.\n\n(structure)\n\nRepresents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the deviceSelectionConfiguration parameter to ScheduleRun . For an example of the JSON request syntax, see ScheduleRun .\n\nIt is also passed in as the filters parameter to ListDevices . For an example of the JSON request syntax, see ListDevices .\n\nattribute -> (string)\n\nThe aspect of a device such as platform or model used as the selection criteria in a device filter.\n\nThe supported operators for each attribute are provided in the following list.\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example ).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nMODEL\n\nThe device model (for example, iPad 5th Gen).\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\noperator -> (string)\n\nSpecifies how Device Farm compares the filter’s attribute to the value. See the attribute descriptions.\n\nvalues -> (list)\n\nAn array of one or more filter values used in a device filter.\n\nOperator Values\n\nThe IN and NOT_IN operators can take a values array that has more than one element.\n\nThe other operators require an array with a single element.\n\nAttribute Values\n\nThe PLATFORM attribute can be set to ANDROID or IOS.\n\nThe AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nThe FORM_FACTOR attribute can be set to PHONE or TABLET.\n\nThe FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.\n\n(string)\n\nmatchedDevicesCount -> (integer)\n\nThe number of devices that matched the device filter selection criteria.\n\nmaxDevices -> (integer)\n\nThe maximum number of devices to be selected by a device filter and included in a test run."
    },
    {
      "command_name": "stop-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/stop-job.html",
      "command_description": "Description\n\nInitiates a stop request for the current job. AWS Device Farm immediately stops the job on the device where tests have not started. You are not billed for this device. On the device where tests have started, setup suite and teardown suite tests run to completion on the device. You are billed for setup, teardown, and any tests that were in progress or already completed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-job\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nRepresents the Amazon Resource Name (ARN) of the Device Farm job to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\njob -> (structure)\n\nThe job that was stopped.\n\narn -> (string)\n\nThe job’s ARN.\n\nname -> (string)\n\nThe job’s name.\n\ntype -> (string)\n\nThe job’s type.\n\nAllowed values include the following:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\ncreated -> (timestamp)\n\nWhen the job was created.\n\nstatus -> (string)\n\nThe job’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe job’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe job’s start time.\n\nstopped -> (timestamp)\n\nThe job’s stop time.\n\ncounters -> (structure)\n\nThe job’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the job’s result.\n\ndevice -> (structure)\n\nThe device (phone or tablet).\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\ninstanceArn -> (string)\n\nThe ARN of the instance.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the job.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nvideoEndpoint -> (string)\n\nThe endpoint for streaming device video.\n\nvideoCapture -> (boolean)\n\nThis value is set to true if video capture is enabled. Otherwise, it is set to false."
    },
    {
      "command_name": "stop-remote-access-session",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/stop-remote-access-session.html",
      "command_description": "Description\n\nEnds a specified remote access session.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-remote-access-session\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the remote access session to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nremoteAccessSession -> (structure)\n\nA container that represents the metadata from the service about the remote access session you are stopping.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the remote access session.\n\nname -> (string)\n\nThe name of the remote access session.\n\ncreated -> (timestamp)\n\nThe date and time the remote access session was created.\n\nstatus -> (string)\n\nThe status of the remote access session. Can be any of the following:\n\nPENDING.\n\nPENDING_CONCURRENCY.\n\nPENDING_DEVICE.\n\nPROCESSING.\n\nSCHEDULING.\n\nPREPARING.\n\nRUNNING.\n\nCOMPLETED.\n\nSTOPPING.\n\nresult -> (string)\n\nThe result of the remote access session. Can be any of the following:\n\nPENDING.\n\nPASSED.\n\nWARNED.\n\nFAILED.\n\nSKIPPED.\n\nERRORED.\n\nSTOPPED.\n\nmessage -> (string)\n\nA message about the remote access session.\n\nstarted -> (timestamp)\n\nThe date and time the remote access session was started.\n\nstopped -> (timestamp)\n\nThe date and time the remote access session was stopped.\n\ndevice -> (structure)\n\nThe device (phone or tablet) used in the remote access session.\n\narn -> (string)\n\nThe device’s ARN.\n\nname -> (string)\n\nThe device’s display name.\n\nmanufacturer -> (string)\n\nThe device’s manufacturer name.\n\nmodel -> (string)\n\nThe device’s model name.\n\nmodelId -> (string)\n\nThe device’s model ID.\n\nformFactor -> (string)\n\nThe device’s form factor.\n\nAllowed values include:\n\nPHONE\n\nTABLET\n\nplatform -> (string)\n\nThe device’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\nos -> (string)\n\nThe device’s operating system type.\n\ncpu -> (structure)\n\nInformation about the device’s CPU.\n\nfrequency -> (string)\n\nThe CPU’s frequency.\n\narchitecture -> (string)\n\nThe CPU’s architecture (for example, x86 or ARM).\n\nclock -> (double)\n\nThe clock speed of the device’s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.\n\nresolution -> (structure)\n\nThe resolution of the device.\n\nwidth -> (integer)\n\nThe screen resolution’s width, expressed in pixels.\n\nheight -> (integer)\n\nThe screen resolution’s height, expressed in pixels.\n\nheapSize -> (long)\n\nThe device’s heap size, expressed in bytes.\n\nmemory -> (long)\n\nThe device’s total memory size, expressed in bytes.\n\nimage -> (string)\n\nThe device’s image name.\n\ncarrier -> (string)\n\nThe device’s carrier.\n\nradio -> (string)\n\nThe device’s radio.\n\nremoteAccessEnabled -> (boolean)\n\nSpecifies whether remote access has been enabled for the specified device.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the device.\n\nRemote debugging is no longer supported .\n\nfleetType -> (string)\n\nThe type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.\n\nfleetName -> (string)\n\nThe name of the fleet to which this device belongs.\n\ninstances -> (list)\n\nThe instances that belong to this device.\n\n(structure)\n\nRepresents the device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile.\n\navailability -> (string)\n\nIndicates how likely a device is available for a test run. Currently available in the ListDevices and GetDevice API methods.\n\ninstanceArn -> (string)\n\nThe ARN of the instance.\n\nremoteDebugEnabled -> (boolean)\n\nThis flag is set to true if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nremoteRecordEnabled -> (boolean)\n\nThis flag is set to true if remote recording is enabled for the remote access session.\n\nremoteRecordAppArn -> (string)\n\nThe ARN for the app to be recorded in the remote access session.\n\nhostAddress -> (string)\n\nIP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nclientId -> (string)\n\nUnique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\nbillingMethod -> (string)\n\nThe billing method of the remote access session. Possible values include METERED or UNMETERED . For more information about metered devices, see AWS Device Farm terminology .\n\ndeviceMinutes -> (structure)\n\nThe number of minutes a device is used in a remote access session (including setup and teardown minutes).\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nendpoint -> (string)\n\nThe endpoint for the remote access sesssion.\n\ndeviceUdid -> (string)\n\nUnique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.\n\nRemote debugging is no longer supported .\n\ninteractionMode -> (string)\n\nThe interaction mode of the remote access session. Valid values are:\n\nINTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You cannot run XCUITest framework-based tests in this mode.\n\nNO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This mode has the fastest test execution speed. You can run XCUITest framework-based tests in this mode.\n\nVIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest framework-based tests and watch the screen in this mode.\n\nskipAppResign -> (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information about how Device Farm re-signs your apps, see Do you modify my app? in the AWS Device Farm FAQs ."
    },
    {
      "command_name": "stop-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/stop-run.html",
      "command_description": "Description\n\nInitiates a stop request for the current test run. AWS Device Farm immediately stops the run on devices where tests have not started. You are not billed for these devices. On devices where tests have started executing, setup suite and teardown suite tests run to completion on those devices. You are billed for setup, teardown, and any tests that were in progress or already completed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-run\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nRepresents the Amazon Resource Name (ARN) of the Device Farm run to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrun -> (structure)\n\nThe run that was stopped.\n\narn -> (string)\n\nThe run’s ARN.\n\nname -> (string)\n\nThe run’s name.\n\ntype -> (string)\n\nThe run’s type.\n\nMust be one of the following values:\n\nBUILTIN_FUZZ\n\nBUILTIN_EXPLORER\n\nNote\n\nFor Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.\n\nAPPIUM_JAVA_JUNIT\n\nAPPIUM_JAVA_TESTNG\n\nAPPIUM_PYTHON\n\nAPPIUM_NODE\n\nAPPIUM_RUBY\n\nAPPIUM_WEB_JAVA_JUNIT\n\nAPPIUM_WEB_JAVA_TESTNG\n\nAPPIUM_WEB_PYTHON\n\nAPPIUM_WEB_NODE\n\nAPPIUM_WEB_RUBY\n\nCALABASH\n\nINSTRUMENTATION\n\nUIAUTOMATION\n\nUIAUTOMATOR\n\nXCTEST\n\nXCTEST_UI\n\nplatform -> (string)\n\nThe run’s platform.\n\nAllowed values include:\n\nANDROID\n\nIOS\n\ncreated -> (timestamp)\n\nWhen the run was created.\n\nstatus -> (string)\n\nThe run’s status.\n\nAllowed values include:\n\nPENDING\n\nPENDING_CONCURRENCY\n\nPENDING_DEVICE\n\nPROCESSING\n\nSCHEDULING\n\nPREPARING\n\nRUNNING\n\nCOMPLETED\n\nSTOPPING\n\nresult -> (string)\n\nThe run’s result.\n\nAllowed values include:\n\nPENDING\n\nPASSED\n\nWARNED\n\nFAILED\n\nSKIPPED\n\nERRORED\n\nSTOPPED\n\nstarted -> (timestamp)\n\nThe run’s start time.\n\nstopped -> (timestamp)\n\nThe run’s stop time.\n\ncounters -> (structure)\n\nThe run’s result counters.\n\ntotal -> (integer)\n\nThe total number of entities.\n\npassed -> (integer)\n\nThe number of passed entities.\n\nfailed -> (integer)\n\nThe number of failed entities.\n\nwarned -> (integer)\n\nThe number of warned entities.\n\nerrored -> (integer)\n\nThe number of errored entities.\n\nstopped -> (integer)\n\nThe number of stopped entities.\n\nskipped -> (integer)\n\nThe number of skipped entities.\n\nmessage -> (string)\n\nA message about the run’s result.\n\ntotalJobs -> (integer)\n\nThe total number of jobs for the run.\n\ncompletedJobs -> (integer)\n\nThe total number of completed jobs.\n\nbillingMethod -> (string)\n\nSpecifies the billing method for a test run: metered or unmetered . If the parameter is not specified, the default value is metered .\n\nNote\n\nIf you have unmetered device slots, you must set this to unmetered to use them. Otherwise, the run is counted toward metered device minutes.\n\ndeviceMinutes -> (structure)\n\nRepresents the total (metered or unmetered) minutes used by the test run.\n\ntotal -> (double)\n\nWhen specified, represents the total minutes used by the resource to run tests.\n\nmetered -> (double)\n\nWhen specified, represents only the sum of metered minutes used by the resource to run tests.\n\nunmetered -> (double)\n\nWhen specified, represents only the sum of unmetered minutes used by the resource to run tests.\n\nnetworkProfile -> (structure)\n\nThe network profile being used for a test run.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the network profile.\n\nname -> (string)\n\nThe name of the network profile.\n\ndescription -> (string)\n\nThe description of the network profile.\n\ntype -> (string)\n\nThe type of network profile. Valid values are listed here.\n\nuplinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\ndownlinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\nuplinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\ndownlinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\nuplinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\ndownlinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\nuplinkLossPercent -> (integer)\n\nProportion of transmitted packets that fail to arrive from 0 to 100 percent.\n\ndownlinkLossPercent -> (integer)\n\nProportion of received packets that fail to arrive from 0 to 100 percent.\n\nparsingResultUrl -> (string)\n\nRead-only URL for an object in an S3 bucket where you can get the parsing results of the test package. If the test package doesn’t parse, the reason why it doesn’t parse appears in the file that this URL points to.\n\nresultCode -> (string)\n\nSupporting field for the result field. Set only if result is SKIPPED . PARSING_FAILED if the result is skipped because of test package parsing failure.\n\nseed -> (integer)\n\nFor fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.\n\nappUpload -> (string)\n\nAn app to upload or that has been uploaded.\n\neventCount -> (integer)\n\nFor fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.\n\njobTimeoutMinutes -> (integer)\n\nThe number of minutes the job executes before it times out.\n\ndevicePoolArn -> (string)\n\nThe ARN of the device pool for the run.\n\nlocale -> (string)\n\nInformation about the locale that is used for the run.\n\nradios -> (structure)\n\nInformation about the radio states for the run.\n\nwifi -> (boolean)\n\nTrue if Wi-Fi is enabled at the beginning of the test. Otherwise, false.\n\nbluetooth -> (boolean)\n\nTrue if Bluetooth is enabled at the beginning of the test. Otherwise, false.\n\nnfc -> (boolean)\n\nTrue if NFC is enabled at the beginning of the test. Otherwise, false.\n\ngps -> (boolean)\n\nTrue if GPS is enabled at the beginning of the test. Otherwise, false.\n\nlocation -> (structure)\n\nInformation about the location that is used for the run.\n\nlatitude -> (double)\n\nThe latitude.\n\nlongitude -> (double)\n\nThe longitude.\n\ncustomerArtifactPaths -> (structure)\n\nOutput CustomerArtifactPaths object for the test run.\n\niosPaths -> (list)\n\nComma-separated list of paths on the iOS device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nandroidPaths -> (list)\n\nComma-separated list of paths on the Android device where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\ndeviceHostPaths -> (list)\n\nComma-separated list of paths in the test execution environment where the artifacts generated by the customer’s tests are pulled from.\n\n(string)\n\nwebUrl -> (string)\n\nThe Device Farm console URL for the recording of the run.\n\nskipAppResign -> (boolean)\n\nWhen set to true , for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.\n\nFor more information about how Device Farm re-signs your apps, see Do you modify my app? in the AWS Device Farm FAQs .\n\ntestSpecArn -> (string)\n\nThe ARN of the YAML-formatted test specification for the run.\n\ndeviceSelectionResult -> (structure)\n\nThe results of a device filter used to select the devices for a test run.\n\nfilters -> (list)\n\nThe filters in a device selection result.\n\n(structure)\n\nRepresents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the deviceSelectionConfiguration parameter to ScheduleRun . For an example of the JSON request syntax, see ScheduleRun .\n\nIt is also passed in as the filters parameter to ListDevices . For an example of the JSON request syntax, see ListDevices .\n\nattribute -> (string)\n\nThe aspect of a device such as platform or model used as the selection criteria in a device filter.\n\nThe supported operators for each attribute are provided in the following list.\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example ).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nMODEL\n\nThe device model (for example, iPad 5th Gen).\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\noperator -> (string)\n\nSpecifies how Device Farm compares the filter’s attribute to the value. See the attribute descriptions.\n\nvalues -> (list)\n\nAn array of one or more filter values used in a device filter.\n\nOperator Values\n\nThe IN and NOT_IN operators can take a values array that has more than one element.\n\nThe other operators require an array with a single element.\n\nAttribute Values\n\nThe PLATFORM attribute can be set to ANDROID or IOS.\n\nThe AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nThe FORM_FACTOR attribute can be set to PHONE or TABLET.\n\nThe FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.\n\n(string)\n\nmatchedDevicesCount -> (integer)\n\nThe number of devices that matched the device filter selection criteria.\n\nmaxDevices -> (integer)\n\nThe maximum number of devices to be selected by a device filter and included in a test run."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/tag-resource.html",
      "command_description": "Description\n\nAssociates the specified tags to a resource with the specified resourceArn . If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are also deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource or resources to which to add tags. You can associate tags with the following Device Farm resources: PROJECT , RUN , NETWORK_PROFILE , INSTANCE_PROFILE , DEVICE_INSTANCE , SESSION , DEVICE_POOL , DEVICE , and VPCE_CONFIGURATION .\n\n--tags (list)\n\nThe tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters.\n\n(structure)\n\nThe metadata that you apply to a resource to help you categorize and organize it. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor in a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/untag-resource.html",
      "command_description": "Description\n\nDeletes the specified tags from a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource or resources from which to delete tags. You can associate tags with the following Device Farm resources: PROJECT , RUN , NETWORK_PROFILE , INSTANCE_PROFILE , DEVICE_INSTANCE , SESSION , DEVICE_POOL , DEVICE , and VPCE_CONFIGURATION .\n\n--tag-keys (list)\n\nThe keys of the tags to be removed.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-device-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/update-device-instance.html",
      "command_description": "Description\n\nUpdates information about a private device instance.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-device-instance\n--arn <value>\n[--profile-arn <value>]\n[--labels <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--profile-arn <value>]",
        "[--labels <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\n--profile-arn (string)\n\nThe ARN of the profile that you want to associate with the device instance.\n\n--labels (list)\n\nAn array of strings that you want to associate with the device instance.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeviceInstance -> (structure)\n\nAn object that contains information about your device instance.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the device instance.\n\ndeviceArn -> (string)\n\nThe ARN of the device.\n\nlabels -> (list)\n\nAn array of strings that describe the device instance.\n\n(string)\n\nstatus -> (string)\n\nThe status of the device instance. Valid values are listed here.\n\nudid -> (string)\n\nUnique device identifier for the device instance.\n\ninstanceProfile -> (structure)\n\nA object that contains information about the instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile."
    },
    {
      "command_name": "update-device-pool",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/update-device-pool.html",
      "command_description": "Description\n\nModifies the name, description, and rules in a device pool given the attributes and the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as a whole (or not at all).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-device-pool\n--arn <value>\n[--name <value>]\n[--description <value>]\n[--rules <value>]\n[--max-devices <value>]\n[--clear-max-devices | --no-clear-max-devices]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--name <value>]",
        "[--description <value>]",
        "[--rules <value>]",
        "[--max-devices <value>]",
        "[--clear-max-devices | --no-clear-max-devices]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the Device Farm device pool to update.\n\n--name (string)\n\nA string that represents the name of the device pool to update.\n\n--description (string)\n\nA description of the device pool to update.\n\n--rules (list)\n\nRepresents the rules to modify for the device pool. Updating rules is optional. If you update rules for your request, the update replaces the existing rules.\n\n(structure)\n\nRepresents a condition for a device pool.\n\nattribute -> (string)\n\nThe rule’s stringified attribute. For example, specify the value as \"\\\"abc\\\"\" .\n\nThe supported operators for each attribute are provided in the following list.\n\nAPPIUM_VERSION\n\nThe Appium version for the test.\n\nSupported operators: CONTAINS\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example .\n\nSupported operators: EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nMODEL\n\nThe device model, such as Apple iPad Air 2 or Google Pixel.\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\noperator -> (string)\n\nSpecifies how Device Farm compares the rule’s attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.\n\nvalue -> (string)\n\nThe rule’s value.\n\nShorthand Syntax:\n\nattribute=string,operator=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"attribute\": \"ARN\"|\"PLATFORM\"|\"FORM_FACTOR\"|\"MANUFACTURER\"|\"REMOTE_ACCESS_ENABLED\"|\"REMOTE_DEBUG_ENABLED\"|\"APPIUM_VERSION\"|\"INSTANCE_ARN\"|\"INSTANCE_LABELS\"|\"FLEET_TYPE\"|\"OS_VERSION\"|\"MODEL\"|\"AVAILABILITY\",\n    \"operator\": \"EQUALS\"|\"LESS_THAN\"|\"LESS_THAN_OR_EQUALS\"|\"GREATER_THAN\"|\"GREATER_THAN_OR_EQUALS\"|\"IN\"|\"NOT_IN\"|\"CONTAINS\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--max-devices (integer)\n\nThe number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the rules parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.\n\nBy specifying the maximum number of devices, you can control the costs that you incur by running tests.\n\nIf you use this parameter in your request, you cannot use the clearMaxDevices parameter in the same request.\n\n--clear-max-devices | --no-clear-max-devices (boolean)\n\nSets whether the maxDevices parameter applies to your device pool. If you set this parameter to true , the maxDevices parameter does not apply, and Device Farm does not limit the number of devices that it adds to your device pool. In this case, Device Farm adds all available devices that meet the criteria specified in the rules parameter.\n\nIf you use this parameter in your request, you cannot use the maxDevices parameter in the same request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndevicePool -> (structure)\n\nThe device pool you just updated.\n\narn -> (string)\n\nThe device pool’s ARN.\n\nname -> (string)\n\nThe device pool’s name.\n\ndescription -> (string)\n\nThe device pool’s description.\n\ntype -> (string)\n\nThe device pool’s type.\n\nAllowed values include:\n\nCURATED: A device pool that is created and managed by AWS Device Farm.\n\nPRIVATE: A device pool that is created and managed by the device pool developer.\n\nrules -> (list)\n\nInformation about the device pool’s rules.\n\n(structure)\n\nRepresents a condition for a device pool.\n\nattribute -> (string)\n\nThe rule’s stringified attribute. For example, specify the value as \"\\\"abc\\\"\" .\n\nThe supported operators for each attribute are provided in the following list.\n\nAPPIUM_VERSION\n\nThe Appium version for the test.\n\nSupported operators: CONTAINS\n\nARN\n\nThe Amazon Resource Name (ARN) of the device (for example, arn:aws:devicefarm:us-west-2::device:12345Example .\n\nSupported operators: EQUALS , IN , NOT_IN\n\nAVAILABILITY\n\nThe current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.\n\nSupported operators: EQUALS\n\nFLEET_TYPE\n\nThe fleet type. Valid values are PUBLIC or PRIVATE.\n\nSupported operators: EQUALS\n\nFORM_FACTOR\n\nThe device form factor. Valid values are PHONE or TABLET.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nINSTANCE_ARN\n\nThe Amazon Resource Name (ARN) of the device instance.\n\nSupported operators: IN , NOT_IN\n\nINSTANCE_LABELS\n\nThe label of the device instance.\n\nSupported operators: CONTAINS\n\nMANUFACTURER\n\nThe device manufacturer (for example, Apple).\n\nSupported operators: EQUALS , IN , NOT_IN\n\nMODEL\n\nThe device model, such as Apple iPad Air 2 or Google Pixel.\n\nSupported operators: CONTAINS , EQUALS , IN , NOT_IN\n\nOS_VERSION\n\nThe operating system version (for example, 10.3.2).\n\nSupported operators: EQUALS , GREATER_THAN , GREATER_THAN_OR_EQUALS , IN , LESS_THAN , LESS_THAN_OR_EQUALS , NOT_IN\n\nPLATFORM\n\nThe device platform. Valid values are ANDROID or IOS.\n\nSupported operators: EQUALS , IN , NOT_IN\n\nREMOTE_ACCESS_ENABLED\n\nWhether the device is enabled for remote access. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nREMOTE_DEBUG_ENABLED\n\nWhether the device is enabled for remote debugging. Valid values are TRUE or FALSE.\n\nSupported operators: EQUALS\n\nBecause remote debugging is no longer supported , this filter is ignored.\n\noperator -> (string)\n\nSpecifies how Device Farm compares the rule’s attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.\n\nvalue -> (string)\n\nThe rule’s value.\n\nmaxDevices -> (integer)\n\nThe number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and meet the criteria that you assign for the rules parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.\n\nBy specifying the maximum number of devices, you can control the costs that you incur by running tests."
    },
    {
      "command_name": "update-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/update-instance-profile.html",
      "command_description": "Description\n\nUpdates information about an existing private device instance profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-instance-profile\n--arn <value>\n[--name <value>]\n[--description <value>]\n[--package-cleanup | --no-package-cleanup]\n[--exclude-app-packages-from-cleanup <value>]\n[--reboot-after-use | --no-reboot-after-use]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--name <value>]",
        "[--description <value>]",
        "[--package-cleanup | --no-package-cleanup]",
        "[--exclude-app-packages-from-cleanup <value>]",
        "[--reboot-after-use | --no-reboot-after-use]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\n--name (string)\n\nThe updated name for your instance profile.\n\n--description (string)\n\nThe updated description for your instance profile.\n\n--package-cleanup | --no-package-cleanup (boolean)\n\nThe updated choice for whether you want to specify package cleanup. The default value is false for private devices.\n\n--exclude-app-packages-from-cleanup (list)\n\nAn array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run is over.\n\nThe list of packages is only considered if you set packageCleanup to true .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--reboot-after-use | --no-reboot-after-use (boolean)\n\nThe updated choice for whether you want to reboot the device after use. The default value is true .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninstanceProfile -> (structure)\n\nAn object that contains information about your instance profile.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the instance profile.\n\npackageCleanup -> (boolean)\n\nWhen set to true , Device Farm removes app packages after a test run. The default value is false for private devices.\n\nexcludeAppPackagesFromCleanup -> (list)\n\nAn array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.\n\nThe list of packages is considered only if you set packageCleanup to true .\n\n(string)\n\nrebootAfterUse -> (boolean)\n\nWhen set to true , Device Farm reboots the instance after a test run. The default value is true .\n\nname -> (string)\n\nThe name of the instance profile.\n\ndescription -> (string)\n\nThe description of the instance profile."
    },
    {
      "command_name": "update-network-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/update-network-profile.html",
      "command_description": "Description\n\nUpdates the network profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-network-profile\n--arn <value>\n[--name <value>]\n[--description <value>]\n[--type <value>]\n[--uplink-bandwidth-bits <value>]\n[--downlink-bandwidth-bits <value>]\n[--uplink-delay-ms <value>]\n[--downlink-delay-ms <value>]\n[--uplink-jitter-ms <value>]\n[--downlink-jitter-ms <value>]\n[--uplink-loss-percent <value>]\n[--downlink-loss-percent <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--name <value>]",
        "[--description <value>]",
        "[--type <value>]",
        "[--uplink-bandwidth-bits <value>]",
        "[--downlink-bandwidth-bits <value>]",
        "[--uplink-delay-ms <value>]",
        "[--downlink-delay-ms <value>]",
        "[--uplink-jitter-ms <value>]",
        "[--downlink-jitter-ms <value>]",
        "[--uplink-loss-percent <value>]",
        "[--downlink-loss-percent <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the project for which you want to update network profile settings.\n\n--name (string)\n\nThe name of the network profile about which you are returning information.\n\n--description (string)\n\nThe description of the network profile about which you are returning information.\n\n--type (string)\n\nThe type of network profile to return information about. Valid values are listed here.\n\nPossible values:\n\nCURATED\n\nPRIVATE\n\n--uplink-bandwidth-bits (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\n--downlink-bandwidth-bits (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\n--uplink-delay-ms (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\n--downlink-delay-ms (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\n--uplink-jitter-ms (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\n--downlink-jitter-ms (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\n--uplink-loss-percent (integer)\n\nProportion of transmitted packets that fail to arrive from 0 to 100 percent.\n\n--downlink-loss-percent (integer)\n\nProportion of received packets that fail to arrive from 0 to 100 percent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnetworkProfile -> (structure)\n\nA list of the available network profiles.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the network profile.\n\nname -> (string)\n\nThe name of the network profile.\n\ndescription -> (string)\n\nThe description of the network profile.\n\ntype -> (string)\n\nThe type of network profile. Valid values are listed here.\n\nuplinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\ndownlinkBandwidthBits -> (long)\n\nThe data throughput rate in bits per second, as an integer from 0 to 104857600.\n\nuplinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\ndownlinkDelayMs -> (long)\n\nDelay time for all packets to destination in milliseconds as an integer from 0 to 2000.\n\nuplinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\ndownlinkJitterMs -> (long)\n\nTime variation in the delay of received packets in milliseconds as an integer from 0 to 2000.\n\nuplinkLossPercent -> (integer)\n\nProportion of transmitted packets that fail to arrive from 0 to 100 percent.\n\ndownlinkLossPercent -> (integer)\n\nProportion of received packets that fail to arrive from 0 to 100 percent."
    },
    {
      "command_name": "update-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/update-project.html",
      "command_description": "Description\n\nModifies the specified project name, given the project ARN and a new name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-project\n--arn <value>\n[--name <value>]\n[--default-job-timeout-minutes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--name <value>]",
        "[--default-job-timeout-minutes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the project whose name to update.\n\n--name (string)\n\nA string that represents the new name of the project that you are updating.\n\n--default-job-timeout-minutes (integer)\n\nThe number of minutes a test run in the project executes before it times out.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nproject -> (structure)\n\nThe project to update.\n\narn -> (string)\n\nThe project’s ARN.\n\nname -> (string)\n\nThe project’s name.\n\ndefaultJobTimeoutMinutes -> (integer)\n\nThe default number of minutes (at the project level) a test run executes before it times out. The default value is 150 minutes.\n\ncreated -> (timestamp)\n\nWhen the project was created."
    },
    {
      "command_name": "update-test-grid-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/update-test-grid-project.html",
      "command_description": "Description\n\nChange details of a project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-test-grid-project\n--project-arn <value>\n[--name <value>]\n[--description <value>]\n[--vpc-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "[--name <value>]",
        "[--description <value>]",
        "[--vpc-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nARN of the project to update.\n\n--name (string)\n\nHuman-readable name for the project.\n\n--description (string)\n\nHuman-readable description for the project.\n\n--vpc-config (structure)\n\nThe VPC security groups and subnets that are attached to a project.\n\nsecurityGroupIds -> (list)\n\nA list of VPC security group IDs in your Amazon VPC.\n\n(string)\n\nsubnetIds -> (list)\n\nA list of VPC subnet IDs in your Amazon VPC.\n\n(string)\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nShorthand Syntax:\n\nsecurityGroupIds=string,string,subnetIds=string,string,vpcId=string\n\n\nJSON Syntax:\n\n{\n  \"securityGroupIds\": [\"string\", ...],\n  \"subnetIds\": [\"string\", ...],\n  \"vpcId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntestGridProject -> (structure)\n\nThe project, including updated information.\n\narn -> (string)\n\nThe ARN for the project.\n\nname -> (string)\n\nA human-readable name for the project.\n\ndescription -> (string)\n\nA human-readable description for the project.\n\nvpcConfig -> (structure)\n\nThe VPC security groups and subnets that are attached to a project.\n\nsecurityGroupIds -> (list)\n\nA list of VPC security group IDs in your Amazon VPC.\n\n(string)\n\nsubnetIds -> (list)\n\nA list of VPC subnet IDs in your Amazon VPC.\n\n(string)\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\ncreated -> (timestamp)\n\nWhen the project was created."
    },
    {
      "command_name": "update-upload",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/update-upload.html",
      "command_description": "Description\n\nUpdates an uploaded test spec.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-upload\n--arn <value>\n[--name <value>]\n[--content-type <value>]\n[--edit-content | --no-edit-content]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--name <value>]",
        "[--content-type <value>]",
        "[--edit-content | --no-edit-content]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the uploaded test spec.\n\n--name (string)\n\nThe upload’s test spec file name. The name must not contain any forward slashes (/). The test spec file name must end with the .yaml or .yml file extension.\n\n--content-type (string)\n\nThe upload’s content type (for example, application/x-yaml ).\n\n--edit-content | --no-edit-content (boolean)\n\nSet to true if the YAML file has changed and must be updated. Otherwise, set to false.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nupload -> (structure)\n\nA test spec uploaded to Device Farm.\n\narn -> (string)\n\nThe upload’s ARN.\n\nname -> (string)\n\nThe upload’s file name.\n\ncreated -> (timestamp)\n\nWhen the upload was created.\n\ntype -> (string)\n\nThe upload’s type.\n\nMust be one of the following values:\n\nANDROID_APP\n\nIOS_APP\n\nWEB_APP\n\nEXTERNAL_DATA\n\nAPPIUM_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_PYTHON_TEST_PACKAGE\n\nAPPIUM_NODE_TEST_PACKAGE\n\nAPPIUM_RUBY_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE\n\nAPPIUM_WEB_PYTHON_TEST_PACKAGE\n\nAPPIUM_WEB_NODE_TEST_PACKAGE\n\nAPPIUM_WEB_RUBY_TEST_PACKAGE\n\nCALABASH_TEST_PACKAGE\n\nINSTRUMENTATION_TEST_PACKAGE\n\nUIAUTOMATION_TEST_PACKAGE\n\nUIAUTOMATOR_TEST_PACKAGE\n\nXCTEST_TEST_PACKAGE\n\nXCTEST_UI_TEST_PACKAGE\n\nAPPIUM_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_PYTHON_TEST_SPEC\n\nAPPIUM_NODE_TEST_SPEC\n\nAPPIUM_RUBY_TEST_SPEC\n\nAPPIUM_WEB_JAVA_JUNIT_TEST_SPEC\n\nAPPIUM_WEB_JAVA_TESTNG_TEST_SPEC\n\nAPPIUM_WEB_PYTHON_TEST_SPEC\n\nAPPIUM_WEB_NODE_TEST_SPEC\n\nAPPIUM_WEB_RUBY_TEST_SPEC\n\nINSTRUMENTATION_TEST_SPEC\n\nXCTEST_UI_TEST_SPEC\n\nstatus -> (string)\n\nThe upload’s status.\n\nMust be one of the following values:\n\nFAILED\n\nINITIALIZED\n\nPROCESSING\n\nSUCCEEDED\n\nurl -> (string)\n\nThe presigned Amazon S3 URL that was used to store a file using a PUT request.\n\nmetadata -> (string)\n\nThe upload’s metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.\n\ncontentType -> (string)\n\nThe upload’s content type (for example, application/octet-stream ).\n\nmessage -> (string)\n\nA message about the upload’s result.\n\ncategory -> (string)\n\nThe upload’s category. Allowed values include:\n\nCURATED: An upload managed by AWS Device Farm.\n\nPRIVATE: An upload managed by the AWS Device Farm customer."
    },
    {
      "command_name": "update-vpce-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/devicefarm/update-vpce-configuration.html",
      "command_description": "Description\n\nUpdates information about an Amazon Virtual Private Cloud (VPC) endpoint configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-vpce-configuration\n--arn <value>\n[--vpce-configuration-name <value>]\n[--vpce-service-name <value>]\n[--service-dns-name <value>]\n[--vpce-configuration-description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--vpce-configuration-name <value>]",
        "[--vpce-service-name <value>]",
        "[--service-dns-name <value>]",
        "[--vpce-configuration-description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the VPC endpoint configuration you want to update.\n\n--vpce-configuration-name (string)\n\nThe friendly name you give to your VPC endpoint configuration to manage your configurations more easily.\n\n--vpce-service-name (string)\n\nThe name of the VPC endpoint service running in your AWS account that you want Device Farm to test.\n\n--service-dns-name (string)\n\nThe DNS (domain) name used to connect to your private service in your VPC. The DNS name must not already be in use on the internet.\n\n--vpce-configuration-description (string)\n\nAn optional description that provides details about your VPC endpoint configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvpceConfiguration -> (structure)\n\nAn object that contains information about your VPC endpoint configuration.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the VPC endpoint configuration.\n\nvpceConfigurationName -> (string)\n\nThe friendly name you give to your VPC endpoint configuration to manage your configurations more easily.\n\nvpceServiceName -> (string)\n\nThe name of the VPC endpoint service running in your AWS account that you want Device Farm to test.\n\nserviceDnsName -> (string)\n\nThe DNS name that maps to the private IP address of the service you want to access.\n\nvpceConfigurationDescription -> (string)\n\nAn optional description that provides details about your VPC endpoint configuration."
    }
  ],
  "service_description": "Description\n\nWelcome to the AWS Device Farm API documentation, which contains APIs for:\n\nTesting on desktop browsers Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain TestGrid in their names. For more information, see Testing Web Applications on Selenium with Device Farm .\n\nTesting on real mobile devices Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the Device Farm Developer Guide ."
}