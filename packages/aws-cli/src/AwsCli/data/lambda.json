{
  "service_name": "lambda",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/index.html",
  "service_commands": [
    {
      "command_name": "add-layer-version-permission",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/add-layer-version-permission.html",
      "command_description": "Description\n\nAdds permissions to the resource-based policy of a version of an Lambda layer . Use this action to grant layer usage permission to other accounts. You can grant permission to a single account, all accounts in an organization, or all Amazon Web Services accounts.\n\nTo revoke permission, call RemoveLayerVersionPermission with the statement ID that you specified when you added it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-layer-version-permission\n--layer-name <value>\n--version-number <value>\n--statement-id <value>\n--action <value>\n--principal <value>\n[--organization-id <value>]\n[--revision-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-name <value>",
        "--version-number <value>",
        "--statement-id <value>",
        "--action <value>",
        "--principal <value>",
        "[--organization-id <value>]",
        "[--revision-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-name (string)\n\nThe name or Amazon Resource Name (ARN) of the layer.\n\n--version-number (long)\n\nThe version number.\n\n--statement-id (string)\n\nAn identifier that distinguishes the policy from others on the same layer version.\n\n--action (string)\n\nThe API action that grants access to the layer. For example, lambda:GetLayerVersion .\n\n--principal (string)\n\nAn account ID, or * to grant layer usage permission to all accounts in an organization, or all Amazon Web Services accounts (if organizationId is not specified). For the last case, make sure that you really do want all Amazon Web Services accounts to have usage permission to this layer.\n\n--organization-id (string)\n\nWith the principal set to * , grant permission to all accounts in the specified organization.\n\n--revision-id (string)\n\nOnly update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a policy that has changed since you last read it.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatement -> (string)\n\nThe permission statement.\n\nRevisionId -> (string)\n\nA unique identifier for the current revision of the policy.",
      "command_examples": "Examples\n\nTo add permissions to a layer version\n\nThe following add-layer-version-permission example grants permission for the specified account to use version 1 of the layer my-layer.\n\naws lambda add-layer-version-permission \\\n    --layer-name my-layer \\\n    --statement-id xaccount \\\n    --action lambda:GetLayerVersion  \\\n    --principal 123456789012 \\\n    --version-number 1\n\n\nOutput:\n\n{\n    \"RevisionId\": \"35d87451-f796-4a3f-a618-95a3671b0a0c\",\n    \"Statement\":\n    {\n        \"Sid\":\"xaccount\",\n        \"Effect\":\"Allow\",\n        \"Principal\":{\n            \"AWS\":\"arn:aws:iam::210987654321:root\"\n        },\n        \"Action\":\"lambda:GetLayerVersion\",\n        \"Resource\":\"arn:aws:lambda:us-east-2:123456789012:layer:my-layer:1\"\n    }\n}\n\n\nFor more information, see AWS Lambda Layers in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "add-permission",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/add-permission.html",
      "command_description": "Description\n\nGrants an Amazon Web Services service or another account permission to use a function. You can apply the policy at the function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier, the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function. Note: Lambda does not support adding policies to version $LATEST.\n\nTo grant permission to another account, specify the account ID as the Principal . For Amazon Web Services services, the principal is a domain-style identifier defined by the service, like s3.amazonaws.com or sns.amazonaws.com . For Amazon Web Services services, you can also specify the ARN of the associated resource as the SourceArn . If you grant permission to a service principal without specifying the source, other accounts could potentially configure resources in their account to invoke your Lambda function.\n\nThis action adds a statement to a resource-based permissions policy for the function. For more information about function policies, see Lambda Function Policies .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-permission\n--function-name <value>\n--statement-id <value>\n--action <value>\n--principal <value>\n[--source-arn <value>]\n[--source-account <value>]\n[--event-source-token <value>]\n[--qualifier <value>]\n[--revision-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "--statement-id <value>",
        "--action <value>",
        "--principal <value>",
        "[--source-arn <value>]",
        "[--source-account <value>]",
        "[--event-source-token <value>]",
        "[--qualifier <value>]",
        "[--revision-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function, version, or alias.\n\nName formats\n\nFunction name - my-function (name-only), my-function:v1 (with alias).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--statement-id (string)\n\nA statement identifier that differentiates the statement from others in the same policy.\n\n--action (string)\n\nThe action that the principal can use on the function. For example, lambda:InvokeFunction or lambda:GetFunction .\n\n--principal (string)\n\nThe Amazon Web Services service or account that invokes the function. If you specify a service, use SourceArn or SourceAccount to limit who can invoke the function through that service.\n\n--source-arn (string)\n\nFor Amazon Web Services services, the ARN of the Amazon Web Services resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.\n\nNote that Lambda configures the comparison using the StringLike operator.\n\n--source-account (string)\n\nFor Amazon S3, the ID of the account that owns the resource. Use this together with SourceArn to ensure that the resource is owned by the specified account. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.\n\n--event-source-token (string)\n\nFor Alexa Smart Home functions, a token that must be supplied by the invoker.\n\n--qualifier (string)\n\nSpecify a version or alias to add permissions to a published version of the function.\n\n--revision-id (string)\n\nOnly update the policy if the revision ID matches the ID that’s specified. Use this option to avoid modifying a policy that has changed since you last read it.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatement -> (string)\n\nThe permission statement that’s added to the function policy.",
      "command_examples": "Examples\n\nTo add permissions to an existing Lambda function\n\nThe following add-permission example grants the Amazon SNS service permission to invoke a function named my-function.\n\naws lambda add-permission \\\n    --function-name my-function \\\n    --action lambda:InvokeFunction \\\n    --statement-id sns \\\n    --principal sns.amazonaws.com\n\n\nOutput:\n\n{\n    \"Statement\":\n    {\n        \"Sid\":\"sns\",\n        \"Effect\":\"Allow\",\n        \"Principal\":{\n            \"Service\":\"sns.amazonaws.com\"\n        },\n        \"Action\":\"lambda:InvokeFunction\",\n        \"Resource\":\"arn:aws:lambda:us-east-2:123456789012:function:my-function\"\n    }\n}\n\n\nFor more information, see Using Resource-based Policies for AWS Lambda in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "create-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/create-alias.html",
      "command_description": "Description\n\nCreates an alias for a Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a different version.\n\nYou can also map an alias to split invocation requests between two versions. Use the RoutingConfig parameter to specify a second version and the percentage of invocation requests that it receives.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-alias\n--function-name <value>\n--name <value>\n--function-version <value>\n[--description <value>]\n[--routing-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "--name <value>",
        "--function-version <value>",
        "[--description <value>]",
        "[--routing-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--name (string)\n\nThe name of the alias.\n\n--function-version (string)\n\nThe function version that the alias invokes.\n\n--description (string)\n\nA description of the alias.\n\n--routing-config (structure)\n\nThe routing configuration of the alias.\n\nAdditionalVersionWeights -> (map)\n\nThe second version, and the percentage of traffic that’s routed to it.\n\nkey -> (string)\n\nvalue -> (double)\n\nShorthand Syntax:\n\nAdditionalVersionWeights={KeyName1=double,KeyName2=double}\n\n\nJSON Syntax:\n\n{\n  \"AdditionalVersionWeights\": {\"string\": double\n    ...}\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAliasArn -> (string)\n\nThe Amazon Resource Name (ARN) of the alias.\n\nName -> (string)\n\nThe name of the alias.\n\nFunctionVersion -> (string)\n\nThe function version that the alias invokes.\n\nDescription -> (string)\n\nA description of the alias.\n\nRoutingConfig -> (structure)\n\nThe routing configuration of the alias.\n\nAdditionalVersionWeights -> (map)\n\nThe second version, and the percentage of traffic that’s routed to it.\n\nkey -> (string)\n\nvalue -> (double)\n\nRevisionId -> (string)\n\nA unique identifier that changes when you update the alias.",
      "command_examples": "Examples\n\nTo create an alias for a Lambda function\n\nThe following create-alias example creates an alias named LIVE that points to version 1 of the my-function Lambda function.\n\naws lambda create-alias \\\n    --function-name my-function \\\n    --description \"alias for live version of function\" \\\n    --function-version 1 \\\n    --name LIVE\n\n\nOutput:\n\n{\n    \"FunctionVersion\": \"1\",\n    \"Name\": \"LIVE\",\n    \"AliasArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function:LIVE\",\n    \"RevisionId\": \"873282ed-4cd3-4dc8-a069-d0c647e470c6\",\n    \"Description\": \"alias for live version of function\"\n}\n\n\nFor more information, see Configuring AWS Lambda Function Aliases in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "create-code-signing-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/create-code-signing-config.html",
      "command_description": "Description\n\nCreates a code signing configuration. A code signing configuration defines a list of allowed signing profiles and defines the code-signing validation policy (action to be taken if deployment validation checks fail).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-code-signing-config\n[--description <value>]\n--allowed-publishers <value>\n[--code-signing-policies <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--description <value>]",
        "--allowed-publishers <value>",
        "[--code-signing-policies <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--description (string)\n\nDescriptive name for this code signing configuration.\n\n--allowed-publishers (structure)\n\nSigning profiles for this code signing configuration.\n\nSigningProfileVersionArns -> (list)\n\nThe Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.\n\n(string)\n\nShorthand Syntax:\n\nSigningProfileVersionArns=string,string\n\n\nJSON Syntax:\n\n{\n  \"SigningProfileVersionArns\": [\"string\", ...]\n}\n\n\n--code-signing-policies (structure)\n\nThe code signing policies define the actions to take if the validation checks fail.\n\nUntrustedArtifactOnDeployment -> (string)\n\nCode signing configuration policy for deployment validation failure. If you set the policy to Enforce , Lambda blocks the deployment request if signature validation checks fail. If you set the policy to Warn , Lambda allows the deployment and creates a CloudWatch log.\n\nDefault value: Warn\n\nShorthand Syntax:\n\nUntrustedArtifactOnDeployment=string\n\n\nJSON Syntax:\n\n{\n  \"UntrustedArtifactOnDeployment\": \"Warn\"|\"Enforce\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCodeSigningConfig -> (structure)\n\nThe code signing configuration.\n\nCodeSigningConfigId -> (string)\n\nUnique identifer for the Code signing configuration.\n\nCodeSigningConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Code signing configuration.\n\nDescription -> (string)\n\nCode signing configuration description.\n\nAllowedPublishers -> (structure)\n\nList of allowed publishers.\n\nSigningProfileVersionArns -> (list)\n\nThe Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.\n\n(string)\n\nCodeSigningPolicies -> (structure)\n\nThe code signing policy controls the validation failure action for signature mismatch or expiry.\n\nUntrustedArtifactOnDeployment -> (string)\n\nCode signing configuration policy for deployment validation failure. If you set the policy to Enforce , Lambda blocks the deployment request if signature validation checks fail. If you set the policy to Warn , Lambda allows the deployment and creates a CloudWatch log.\n\nDefault value: Warn\n\nLastModified -> (string)\n\nThe date and time that the Code signing configuration was last modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD)."
    },
    {
      "command_name": "create-event-source-mapping",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/create-event-source-mapping.html",
      "command_description": "Description\n\nCreates a mapping between an event source and an Lambda function. Lambda reads items from the event source and triggers the function.\n\nFor details about each event source type, see the following topics.\n\nConfiguring a Dynamo DB stream as an event source\n\nConfiguring a Kinesis stream as an event source\n\nConfiguring an Amazon SQS queue as an event source\n\nConfiguring an MQ broker as an event source\n\nConfiguring MSK as an event source\n\nConfiguring Self-Managed Apache Kafka as an event source\n\nThe following error handling options are only available for stream sources (DynamoDB and Kinesis):\n\nBisectBatchOnFunctionError - If the function returns an error, split the batch in two and retry.\n\nDestinationConfig - Send discarded records to an Amazon SQS queue or Amazon SNS topic.\n\nMaximumRecordAgeInSeconds - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires\n\nMaximumRetryAttempts - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.\n\nParallelizationFactor - Process multiple batches from each shard concurrently.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-event-source-mapping\n[--event-source-arn <value>]\n--function-name <value>\n[--enabled | --no-enabled]\n[--batch-size <value>]\n[--maximum-batching-window-in-seconds <value>]\n[--parallelization-factor <value>]\n[--starting-position <value>]\n[--starting-position-timestamp <value>]\n[--destination-config <value>]\n[--maximum-record-age-in-seconds <value>]\n[--bisect-batch-on-function-error | --no-bisect-batch-on-function-error]\n[--maximum-retry-attempts <value>]\n[--tumbling-window-in-seconds <value>]\n[--topics <value>]\n[--queues <value>]\n[--source-access-configurations <value>]\n[--self-managed-event-source <value>]\n[--function-response-types <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--event-source-arn <value>]",
        "--function-name <value>",
        "[--enabled | --no-enabled]",
        "[--batch-size <value>]",
        "[--maximum-batching-window-in-seconds <value>]",
        "[--parallelization-factor <value>]",
        "[--starting-position <value>]",
        "[--starting-position-timestamp <value>]",
        "[--destination-config <value>]",
        "[--maximum-record-age-in-seconds <value>]",
        "[--bisect-batch-on-function-error | --no-bisect-batch-on-function-error]",
        "[--maximum-retry-attempts <value>]",
        "[--tumbling-window-in-seconds <value>]",
        "[--topics <value>]",
        "[--queues <value>]",
        "[--source-access-configurations <value>]",
        "[--self-managed-event-source <value>]",
        "[--function-response-types <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--event-source-arn (string)\n\nThe Amazon Resource Name (ARN) of the event source.\n\nAmazon Kinesis - The ARN of the data stream or a stream consumer.\n\nAmazon DynamoDB Streams - The ARN of the stream.\n\nAmazon Simple Queue Service - The ARN of the queue.\n\nAmazon Managed Streaming for Apache Kafka - The ARN of the cluster.\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nVersion or Alias ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it’s limited to 64 characters in length.\n\n--enabled | --no-enabled (boolean)\n\nWhen true, the event source mapping is active. When false, Lambda pauses polling and invocation.\n\nDefault: True\n\n--batch-size (integer)\n\nThe maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).\n\nAmazon Kinesis - Default 100. Max 10,000.\n\nAmazon DynamoDB Streams - Default 100. Max 1,000.\n\nAmazon Simple Queue Service - Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.\n\nAmazon Managed Streaming for Apache Kafka - Default 100. Max 10,000.\n\nSelf-Managed Apache Kafka - Default 100. Max 10,000.\n\n--maximum-batching-window-in-seconds (integer)\n\n(Streams and Amazon SQS standard queues) The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.\n\nDefault: 0\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\n--parallelization-factor (integer)\n\n(Streams only) The number of batches to process from each shard concurrently.\n\n--starting-position (string)\n\nThe position in a stream from which to start reading. Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK Streams sources. AT_TIMESTAMP is only supported for Amazon Kinesis streams.\n\nPossible values:\n\nTRIM_HORIZON\n\nLATEST\n\nAT_TIMESTAMP\n\n--starting-position-timestamp (timestamp)\n\nWith StartingPosition set to AT_TIMESTAMP , the time from which to start reading.\n\n--destination-config (structure)\n\n(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nShorthand Syntax:\n\nOnSuccess={Destination=string},OnFailure={Destination=string}\n\n\nJSON Syntax:\n\n{\n  \"OnSuccess\": {\n    \"Destination\": \"string\"\n  },\n  \"OnFailure\": {\n    \"Destination\": \"string\"\n  }\n}\n\n\n--maximum-record-age-in-seconds (integer)\n\n(Streams only) Discard records older than the specified age. The default value is infinite (-1).\n\n--bisect-batch-on-function-error | --no-bisect-batch-on-function-error (boolean)\n\n(Streams only) If the function returns an error, split the batch in two and retry.\n\n--maximum-retry-attempts (integer)\n\n(Streams only) Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records will be retried until the record expires.\n\n--tumbling-window-in-seconds (integer)\n\n(Streams only) The duration in seconds of a processing window. The range is between 1 second up to 900 seconds.\n\n--topics (list)\n\nThe name of the Kafka topic.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--queues (list)\n\n(MQ) The name of the Amazon MQ broker destination queue to consume.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--source-access-configurations (list)\n\nAn array of authentication protocols or VPC components required to secure your event source.\n\n(structure)\n\nTo secure and define access to your event source, you can specify the authentication protocol, VPC components, or virtual host.\n\nType -> (string)\n\nThe type of authentication protocol, VPC components, or virtual host for your event source. For example: \"Type\":\"SASL_SCRAM_512_AUTH\" .\n\nBASIC_AUTH - (Amazon MQ) The Secrets Manager secret that stores your broker credentials.\n\nBASIC_AUTH - (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL/PLAIN authentication of your Apache Kafka brokers.\n\nVPC_SUBNET - The subnets associated with your VPC. Lambda connects to these subnets to fetch data from your self-managed Apache Kafka cluster.\n\nVPC_SECURITY_GROUP - The VPC security group used to manage access to your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_256_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_512_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your self-managed Apache Kafka brokers.\n\nVIRTUAL_HOST - (Amazon MQ) The name of the virtual host in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event source.\n\nURI -> (string)\n\nThe value for your chosen configuration in Type . For example: \"URI\": \"arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName\" .\n\nShorthand Syntax:\n\nType=string,URI=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"BASIC_AUTH\"|\"VPC_SUBNET\"|\"VPC_SECURITY_GROUP\"|\"SASL_SCRAM_512_AUTH\"|\"SASL_SCRAM_256_AUTH\"|\"VIRTUAL_HOST\",\n    \"URI\": \"string\"\n  }\n  ...\n]\n\n\n--self-managed-event-source (structure)\n\nThe Self-Managed Apache Kafka cluster to send records.\n\nEndpoints -> (map)\n\nThe list of bootstrap servers for your Kafka brokers in the following format: \"KAFKA_BOOTSTRAP_SERVERS\": [\"abc.xyz.com:xxxx\",\"abc2.xyz.com:xxxx\"] .\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nShorthand Syntax:\n\nEndpoints={KeyName1=string,string,KeyName2=string,string}\n\n\nJSON Syntax:\n\n{\n  \"Endpoints\": {\"KAFKA_BOOTSTRAP_SERVERS\": [\"string\", ...]\n    ...}\n}\n\n\n--function-response-types (list)\n\n(Streams only) A list of current response type enums applied to the event source mapping.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  ReportBatchItemFailures\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUUID -> (string)\n\nThe identifier of the event source mapping.\n\nStartingPosition -> (string)\n\nThe position in a stream from which to start reading. Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources. AT_TIMESTAMP is supported only for Amazon Kinesis streams.\n\nStartingPositionTimestamp -> (timestamp)\n\nWith StartingPosition set to AT_TIMESTAMP , the time from which to start reading.\n\nBatchSize -> (integer)\n\nThe maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).\n\nDefault value: Varies by service. For Amazon SQS, the default is 10. For all other services, the default is 100.\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\nMaximumBatchingWindowInSeconds -> (integer)\n\n(Streams and Amazon SQS standard queues) The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.\n\nDefault: 0\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\nParallelizationFactor -> (integer)\n\n(Streams only) The number of batches to process concurrently from each shard. The default value is 1.\n\nEventSourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the event source.\n\nFunctionArn -> (string)\n\nThe ARN of the Lambda function.\n\nLastModified -> (timestamp)\n\nThe date that the event source mapping was last updated or that its state changed.\n\nLastProcessingResult -> (string)\n\nThe result of the last Lambda invocation of your function.\n\nState -> (string)\n\nThe state of the event source mapping. It can be one of the following: Creating , Enabling , Enabled , Disabling , Disabled , Updating , or Deleting .\n\nStateTransitionReason -> (string)\n\nIndicates whether a user or Lambda made the last change to the event source mapping.\n\nDestinationConfig -> (structure)\n\n(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nTopics -> (list)\n\nThe name of the Kafka topic.\n\n(string)\n\nQueues -> (list)\n\n(Amazon MQ) The name of the Amazon MQ broker destination queue to consume.\n\n(string)\n\nSourceAccessConfigurations -> (list)\n\nAn array of the authentication protocol, VPC components, or virtual host to secure and define your event source.\n\n(structure)\n\nTo secure and define access to your event source, you can specify the authentication protocol, VPC components, or virtual host.\n\nType -> (string)\n\nThe type of authentication protocol, VPC components, or virtual host for your event source. For example: \"Type\":\"SASL_SCRAM_512_AUTH\" .\n\nBASIC_AUTH - (Amazon MQ) The Secrets Manager secret that stores your broker credentials.\n\nBASIC_AUTH - (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL/PLAIN authentication of your Apache Kafka brokers.\n\nVPC_SUBNET - The subnets associated with your VPC. Lambda connects to these subnets to fetch data from your self-managed Apache Kafka cluster.\n\nVPC_SECURITY_GROUP - The VPC security group used to manage access to your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_256_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_512_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your self-managed Apache Kafka brokers.\n\nVIRTUAL_HOST - (Amazon MQ) The name of the virtual host in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event source.\n\nURI -> (string)\n\nThe value for your chosen configuration in Type . For example: \"URI\": \"arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName\" .\n\nSelfManagedEventSource -> (structure)\n\nThe self-managed Apache Kafka cluster for your event source.\n\nEndpoints -> (map)\n\nThe list of bootstrap servers for your Kafka brokers in the following format: \"KAFKA_BOOTSTRAP_SERVERS\": [\"abc.xyz.com:xxxx\",\"abc2.xyz.com:xxxx\"] .\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nMaximumRecordAgeInSeconds -> (integer)\n\n(Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.\n\nBisectBatchOnFunctionError -> (boolean)\n\n(Streams only) If the function returns an error, split the batch in two and retry. The default value is false.\n\nMaximumRetryAttempts -> (integer)\n\n(Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.\n\nTumblingWindowInSeconds -> (integer)\n\n(Streams only) The duration in seconds of a processing window. The range is 1–900 seconds.\n\nFunctionResponseTypes -> (list)\n\n(Streams only) A list of current response type enums applied to the event source mapping.\n\n(string)",
      "command_examples": "Examples\n\nTo create a mapping between an event source and an AWS Lambda function\n\nThe following create-event-source-mapping example creates a mapping between an SQS queue and the my-function Lambda function.\n\naws lambda create-event-source-mapping \\\n    --function-name my-function \\\n    --batch-size 5 \\\n    --event-source-arn arn:aws:sqs:us-west-2:123456789012:mySQSqueue\n\n\nOutput:\n\n{\n    \"UUID\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n    \"StateTransitionReason\": \"USER_INITIATED\",\n    \"LastModified\": 1569284520.333,\n    \"BatchSize\": 5,\n    \"State\": \"Creating\",\n    \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function\",\n    \"EventSourceArn\": \"arn:aws:sqs:us-west-2:123456789012:mySQSqueue\"\n}\n\n\nFor more information, see AWS Lambda Event Source Mapping in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "create-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/create-function.html",
      "command_description": "Description\n\nCreates a Lambda function. To create a function, you need a deployment package and an execution role . The deployment package is a .zip file archive or container image that contains your function code. The execution role grants the function permission to use Amazon Web Services services, such as Amazon CloudWatch Logs for log streaming and X-Ray for request tracing.\n\nYou set the package type to Image if the deployment package is a container image . For a container image, the code property must include the URI of a container image in the Amazon ECR registry. You do not need to specify the handler and runtime properties.\n\nYou set the package type to Zip if the deployment package is a .zip file archive . For a .zip file archive, the code property specifies the location of the .zip file. You must also specify the handler and runtime properties. The code in the deployment package must be compatible with the target instruction set architecture of the function (x86-64 or arm64 ). If you do not specify the architecture, the default value is x86-64 .\n\nWhen you create a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute or so. During this time, you can’t invoke or modify the function. The State , StateReason , and StateReasonCode fields in the response from GetFunctionConfiguration indicate when the function is ready to invoke. For more information, see Function States .\n\nA function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function’s code and configuration. A published version is a snapshot of your function code and configuration that can’t be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version. Use the Publish parameter to create version 1 of your function from its initial configuration.\n\nThe other parameters let you configure version-specific and function-level settings. You can modify version-specific settings later with UpdateFunctionConfiguration . Function-level settings apply to both the unpublished and published versions of the function, and include tags ( TagResource ) and per-function concurrency limits ( PutFunctionConcurrency ).\n\nYou can use code signing if your deployment package is a .zip file archive. To enable code signing for this function, specify the ARN of a code-signing configuration. When a user attempts to deploy a code package with UpdateFunctionCode , Lambda checks that the code package has a valid signature from a trusted publisher. The code-signing configuration includes set set of signing profiles, which define the trusted publishers for this function.\n\nIf another account or an Amazon Web Services service invokes your function, use AddPermission to grant permission by creating a resource-based IAM policy. You can grant permissions at the function level, on a version, or on an alias.\n\nTo invoke your function directly, use Invoke . To invoke your function in response to events in other Amazon Web Services services, create an event source mapping ( CreateEventSourceMapping ), or configure a function trigger in the other service. For more information, see Invoking Functions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-function\n--function-name <value>\n[--runtime <value>]\n--role <value>\n[--handler <value>]\n[--code <value>]\n[--description <value>]\n[--timeout <value>]\n[--memory-size <value>]\n[--publish | --no-publish]\n[--vpc-config <value>]\n[--package-type <value>]\n[--dead-letter-config <value>]\n[--environment <value>]\n[--kms-key-arn <value>]\n[--tracing-config <value>]\n[--tags <value>]\n[--layers <value>]\n[--file-system-configs <value>]\n[--image-config <value>]\n[--code-signing-config-arn <value>]\n[--architectures <value>]\n[--zip-file <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--runtime <value>]",
        "--role <value>",
        "[--handler <value>]",
        "[--code <value>]",
        "[--description <value>]",
        "[--timeout <value>]",
        "[--memory-size <value>]",
        "[--publish | --no-publish]",
        "[--vpc-config <value>]",
        "[--package-type <value>]",
        "[--dead-letter-config <value>]",
        "[--environment <value>]",
        "[--kms-key-arn <value>]",
        "[--tracing-config <value>]",
        "[--tags <value>]",
        "[--layers <value>]",
        "[--file-system-configs <value>]",
        "[--image-config <value>]",
        "[--code-signing-config-arn <value>]",
        "[--architectures <value>]",
        "[--zip-file <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--runtime (string)\n\nThe identifier of the function’s runtime .\n\nPossible values:\n\nnodejs\n\nnodejs4.3\n\nnodejs6.10\n\nnodejs8.10\n\nnodejs10.x\n\nnodejs12.x\n\nnodejs14.x\n\njava8\n\njava8.al2\n\njava11\n\npython2.7\n\npython3.6\n\npython3.7\n\npython3.8\n\npython3.9\n\ndotnetcore1.0\n\ndotnetcore2.0\n\ndotnetcore2.1\n\ndotnetcore3.1\n\nnodejs4.3-edge\n\ngo1.x\n\nruby2.5\n\nruby2.7\n\nprovided\n\nprovided.al2\n\n--role (string)\n\nThe Amazon Resource Name (ARN) of the function’s execution role.\n\n--handler (string)\n\nThe name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see Programming Model .\n\n--code (structure)\n\nThe code for the function.\n\nS3Bucket -> (string)\n\nAn Amazon S3 bucket in the same Amazon Web Services Region as your function. The bucket can be in a different Amazon Web Services account.\n\nS3Key -> (string)\n\nThe Amazon S3 key of the deployment package.\n\nS3ObjectVersion -> (string)\n\nFor versioned objects, the version of the deployment package object to use.\n\nImageUri -> (string)\n\nURI of a container image in the Amazon ECR registry.\n\nShorthand Syntax:\n\nS3Bucket=string,S3Key=string,S3ObjectVersion=string,ImageUri=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3Key\": \"string\",\n  \"S3ObjectVersion\": \"string\",\n  \"ImageUri\": \"string\"\n}\n\n\n--description (string)\n\nA description of the function.\n\n--timeout (integer)\n\nThe amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For additional information, see Lambda execution environment .\n\n--memory-size (integer)\n\nThe amount of memory available to the function at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.\n\n--publish | --no-publish (boolean)\n\nSet to true to publish the first version of the function during creation.\n\n--vpc-config (structure)\n\nFor network connectivity to Amazon Web Services resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see VPC Settings .\n\nSubnetIds -> (list)\n\nA list of VPC subnet IDs.\n\n(string)\n\nSecurityGroupIds -> (list)\n\nA list of VPC security groups IDs.\n\n(string)\n\nShorthand Syntax:\n\nSubnetIds=string,string,SecurityGroupIds=string,string\n\n\nJSON Syntax:\n\n{\n  \"SubnetIds\": [\"string\", ...],\n  \"SecurityGroupIds\": [\"string\", ...]\n}\n\n\n--package-type (string)\n\nThe type of deployment package. Set to Image for container image and set Zip for ZIP archive.\n\nPossible values:\n\nZip\n\nImage\n\n--dead-letter-config (structure)\n\nA dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see Dead Letter Queues .\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\nShorthand Syntax:\n\nTargetArn=string\n\n\nJSON Syntax:\n\n{\n  \"TargetArn\": \"string\"\n}\n\n\n--environment (structure)\n\nEnvironment variables that are accessible from function code during execution.\n\nVariables -> (map)\n\nEnvironment variable key-value pairs. For more information, see Using Lambda environment variables .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nVariables={KeyName1=string,KeyName2=string}\n\n\nJSON Syntax:\n\n{\n  \"Variables\": {\"string\": \"string\"\n    ...}\n}\n\n\n--kms-key-arn (string)\n\nThe ARN of the Amazon Web Services Key Management Service (KMS) key that’s used to encrypt your function’s environment variables. If it’s not provided, Lambda uses a default service key.\n\n--tracing-config (structure)\n\nSet Mode to Active to sample and trace a subset of incoming requests with X-Ray .\n\nMode -> (string)\n\nThe tracing mode.\n\nShorthand Syntax:\n\nMode=string\n\n\nJSON Syntax:\n\n{\n  \"Mode\": \"Active\"|\"PassThrough\"\n}\n\n\n--tags (map)\n\nA list of tags to apply to the function.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--layers (list)\n\nA list of function layers to add to the function’s execution environment. Specify each layer by its ARN, including the version.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--file-system-configs (list)\n\nConnection settings for an Amazon EFS file system.\n\n(structure)\n\nDetails about the connection between a Lambda function and an Amazon EFS file system .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\nLocalMountPath -> (string)\n\nThe path where the function can access the file system, starting with /mnt/ .\n\nShorthand Syntax:\n\nArn=string,LocalMountPath=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Arn\": \"string\",\n    \"LocalMountPath\": \"string\"\n  }\n  ...\n]\n\n\n--image-config (structure)\n\nContainer image configuration values that override the values in the container image Dockerfile.\n\nEntryPoint -> (list)\n\nSpecifies the entry point to their application, which is typically the location of the runtime executable.\n\n(string)\n\nCommand -> (list)\n\nSpecifies parameters that you want to pass in with ENTRYPOINT.\n\n(string)\n\nWorkingDirectory -> (string)\n\nSpecifies the working directory.\n\nShorthand Syntax:\n\nEntryPoint=string,string,Command=string,string,WorkingDirectory=string\n\n\nJSON Syntax:\n\n{\n  \"EntryPoint\": [\"string\", ...],\n  \"Command\": [\"string\", ...],\n  \"WorkingDirectory\": \"string\"\n}\n\n\n--code-signing-config-arn (string)\n\nTo enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.\n\n--architectures (list)\n\nThe instruction set architecture that the function supports. Enter a string array with one of the valid values. The default value is x86_64 .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  x86_64\n  arm64\n\n\n--zip-file (blob)\n\nThe path to the zip file of the code you are uploading. Specify –zip-file or –code, but not both. Example: fileb://code.zip\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionName -> (string)\n\nThe name of the function.\n\nFunctionArn -> (string)\n\nThe function’s Amazon Resource Name (ARN).\n\nRuntime -> (string)\n\nThe runtime environment for the Lambda function.\n\nRole -> (string)\n\nThe function’s execution role.\n\nHandler -> (string)\n\nThe function that Lambda calls to begin executing your function.\n\nCodeSize -> (long)\n\nThe size of the function’s deployment package, in bytes.\n\nDescription -> (string)\n\nThe function’s description.\n\nTimeout -> (integer)\n\nThe amount of time in seconds that Lambda allows a function to run before stopping it.\n\nMemorySize -> (integer)\n\nThe amount of memory available to the function at runtime.\n\nLastModified -> (string)\n\nThe date and time that the function was last updated, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nCodeSha256 -> (string)\n\nThe SHA256 hash of the function’s deployment package.\n\nVersion -> (string)\n\nThe version of the Lambda function.\n\nVpcConfig -> (structure)\n\nThe function’s networking configuration.\n\nSubnetIds -> (list)\n\nA list of VPC subnet IDs.\n\n(string)\n\nSecurityGroupIds -> (list)\n\nA list of VPC security groups IDs.\n\n(string)\n\nVpcId -> (string)\n\nThe ID of the VPC.\n\nDeadLetterConfig -> (structure)\n\nThe function’s dead letter queue.\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\nEnvironment -> (structure)\n\nThe function’s environment variables .\n\nVariables -> (map)\n\nEnvironment variable key-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nError -> (structure)\n\nError messages for environment variables that couldn’t be applied.\n\nErrorCode -> (string)\n\nThe error code.\n\nMessage -> (string)\n\nThe error message.\n\nKMSKeyArn -> (string)\n\nThe KMS key that’s used to encrypt the function’s environment variables. This key is only returned if you’ve configured a customer managed CMK.\n\nTracingConfig -> (structure)\n\nThe function’s X-Ray tracing configuration.\n\nMode -> (string)\n\nThe tracing mode.\n\nMasterArn -> (string)\n\nFor Lambda@Edge functions, the ARN of the master function.\n\nRevisionId -> (string)\n\nThe latest updated revision of the function or alias.\n\nLayers -> (list)\n\nThe function’s layers .\n\n(structure)\n\nAn Lambda layer .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function layer.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nState -> (string)\n\nThe current state of the function. When the state is Inactive , you can reactivate the function by invoking it.\n\nStateReason -> (string)\n\nThe reason for the function’s current state.\n\nStateReasonCode -> (string)\n\nThe reason code for the function’s current state. When the code is Creating , you can’t invoke or modify the function.\n\nLastUpdateStatus -> (string)\n\nThe status of the last update that was performed on the function. This is first set to Successful after function creation completes.\n\nLastUpdateStatusReason -> (string)\n\nThe reason for the last update that was performed on the function.\n\nLastUpdateStatusReasonCode -> (string)\n\nThe reason code for the last update that was performed on the function.\n\nFileSystemConfigs -> (list)\n\nConnection settings for an Amazon EFS file system .\n\n(structure)\n\nDetails about the connection between a Lambda function and an Amazon EFS file system .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\nLocalMountPath -> (string)\n\nThe path where the function can access the file system, starting with /mnt/ .\n\nPackageType -> (string)\n\nThe type of deployment package. Set to Image for container image and set Zip for .zip file archive.\n\nImageConfigResponse -> (structure)\n\nThe function’s image configuration values.\n\nImageConfig -> (structure)\n\nConfiguration values that override the container image Dockerfile.\n\nEntryPoint -> (list)\n\nSpecifies the entry point to their application, which is typically the location of the runtime executable.\n\n(string)\n\nCommand -> (list)\n\nSpecifies parameters that you want to pass in with ENTRYPOINT.\n\n(string)\n\nWorkingDirectory -> (string)\n\nSpecifies the working directory.\n\nError -> (structure)\n\nError response to GetFunctionConfiguration.\n\nErrorCode -> (string)\n\nError code.\n\nMessage -> (string)\n\nError message.\n\nSigningProfileVersionArn -> (string)\n\nThe ARN of the signing profile version.\n\nSigningJobArn -> (string)\n\nThe ARN of the signing job.\n\nArchitectures -> (list)\n\nThe instruction set architecture that the function supports. Architecture is a string array with one of the valid values. The default architecture value is x86_64 .\n\n(string)",
      "command_examples": "Examples\n\nTo create a Lambda function\n\nThe following create-function example creates a Lambda function named my-function.\n\naws lambda create-function \\\n    --function-name my-function \\\n    --runtime nodejs10.x \\\n    --zip-file fileb://my-function.zip \\\n    --handler my-function.handler \\\n    --role arn:aws:iam::123456789012:role/service-role/MyTestFunction-role-tges6bf4\n\n\nContents of my-function.zip: This file is a deployment package that contains your function code and any dependencies.\n\nOutput:\n\n{\n    \"TracingConfig\": {\n        \"Mode\": \"PassThrough\"\n    },\n    \"CodeSha256\": \"PFn4S+er27qk+UuZSTKEQfNKG/XNn7QJs90mJgq6oH8=\",\n    \"FunctionName\": \"my-function\",\n    \"CodeSize\": 308,\n    \"RevisionId\": \"873282ed-4cd3-4dc8-a069-d0c647e470c6\",\n    \"MemorySize\": 128,\n    \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function\",\n    \"Version\": \"$LATEST\",\n    \"Role\": \"arn:aws:iam::123456789012:role/service-role/MyTestFunction-role-zgur6bf4\",\n    \"Timeout\": 3,\n    \"LastModified\": \"2019-08-14T22:26:11.234+0000\",\n    \"Handler\": \"my-function.handler\",\n    \"Runtime\": \"nodejs10.x\",\n    \"Description\": \"\"\n}\n\n\nFor more information, see AWS Lambda Function Configuration in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "delete-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/delete-alias.html",
      "command_description": "Description\n\nDeletes a Lambda function alias .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-alias\n--function-name <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--name (string)\n\nThe name of the alias.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an alias of a Lambda function\n\nThe following delete-alias example deletes the alias named LIVE from the my-function Lambda function.\n\naws lambda delete-alias \\\n    --function-name my-function \\\n    --name LIVE\n\n\nThis command produces no output.\n\nFor more information, see Configuring AWS Lambda Function Aliases in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "delete-code-signing-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/delete-code-signing-config.html",
      "command_description": "Description\n\nDeletes the code signing configuration. You can delete the code signing configuration only if no function is using it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-code-signing-config\n--code-signing-config-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--code-signing-config-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--code-signing-config-arn (string)\n\nThe The Amazon Resource Name (ARN) of the code signing configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-event-source-mapping",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/delete-event-source-mapping.html",
      "command_description": "Description\n\nDeletes an event source mapping . You can get the identifier of a mapping from the output of ListEventSourceMappings .\n\nWhen you delete an event source mapping, it enters a Deleting state and might not be completely deleted for several seconds.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-event-source-mapping\n--uuid <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--uuid <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--uuid (string)\n\nThe identifier of the event source mapping.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUUID -> (string)\n\nThe identifier of the event source mapping.\n\nStartingPosition -> (string)\n\nThe position in a stream from which to start reading. Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources. AT_TIMESTAMP is supported only for Amazon Kinesis streams.\n\nStartingPositionTimestamp -> (timestamp)\n\nWith StartingPosition set to AT_TIMESTAMP , the time from which to start reading.\n\nBatchSize -> (integer)\n\nThe maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).\n\nDefault value: Varies by service. For Amazon SQS, the default is 10. For all other services, the default is 100.\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\nMaximumBatchingWindowInSeconds -> (integer)\n\n(Streams and Amazon SQS standard queues) The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.\n\nDefault: 0\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\nParallelizationFactor -> (integer)\n\n(Streams only) The number of batches to process concurrently from each shard. The default value is 1.\n\nEventSourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the event source.\n\nFunctionArn -> (string)\n\nThe ARN of the Lambda function.\n\nLastModified -> (timestamp)\n\nThe date that the event source mapping was last updated or that its state changed.\n\nLastProcessingResult -> (string)\n\nThe result of the last Lambda invocation of your function.\n\nState -> (string)\n\nThe state of the event source mapping. It can be one of the following: Creating , Enabling , Enabled , Disabling , Disabled , Updating , or Deleting .\n\nStateTransitionReason -> (string)\n\nIndicates whether a user or Lambda made the last change to the event source mapping.\n\nDestinationConfig -> (structure)\n\n(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nTopics -> (list)\n\nThe name of the Kafka topic.\n\n(string)\n\nQueues -> (list)\n\n(Amazon MQ) The name of the Amazon MQ broker destination queue to consume.\n\n(string)\n\nSourceAccessConfigurations -> (list)\n\nAn array of the authentication protocol, VPC components, or virtual host to secure and define your event source.\n\n(structure)\n\nTo secure and define access to your event source, you can specify the authentication protocol, VPC components, or virtual host.\n\nType -> (string)\n\nThe type of authentication protocol, VPC components, or virtual host for your event source. For example: \"Type\":\"SASL_SCRAM_512_AUTH\" .\n\nBASIC_AUTH - (Amazon MQ) The Secrets Manager secret that stores your broker credentials.\n\nBASIC_AUTH - (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL/PLAIN authentication of your Apache Kafka brokers.\n\nVPC_SUBNET - The subnets associated with your VPC. Lambda connects to these subnets to fetch data from your self-managed Apache Kafka cluster.\n\nVPC_SECURITY_GROUP - The VPC security group used to manage access to your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_256_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_512_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your self-managed Apache Kafka brokers.\n\nVIRTUAL_HOST - (Amazon MQ) The name of the virtual host in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event source.\n\nURI -> (string)\n\nThe value for your chosen configuration in Type . For example: \"URI\": \"arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName\" .\n\nSelfManagedEventSource -> (structure)\n\nThe self-managed Apache Kafka cluster for your event source.\n\nEndpoints -> (map)\n\nThe list of bootstrap servers for your Kafka brokers in the following format: \"KAFKA_BOOTSTRAP_SERVERS\": [\"abc.xyz.com:xxxx\",\"abc2.xyz.com:xxxx\"] .\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nMaximumRecordAgeInSeconds -> (integer)\n\n(Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.\n\nBisectBatchOnFunctionError -> (boolean)\n\n(Streams only) If the function returns an error, split the batch in two and retry. The default value is false.\n\nMaximumRetryAttempts -> (integer)\n\n(Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.\n\nTumblingWindowInSeconds -> (integer)\n\n(Streams only) The duration in seconds of a processing window. The range is 1–900 seconds.\n\nFunctionResponseTypes -> (list)\n\n(Streams only) A list of current response type enums applied to the event source mapping.\n\n(string)",
      "command_examples": "Examples\n\nTo delete the mapping between an event source and an AWS Lambda function\n\nThe following delete-event-source-mapping example deletes the mapping between an SQS queue and the my-function Lambda function.\n\naws lambda delete-event-source-mapping \\\n    --uuid  a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\n\n\nOutput:\n\n{\n    \"UUID\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n    \"StateTransitionReason\": \"USER_INITIATED\",\n    \"LastModified\": 1569285870.271,\n    \"BatchSize\": 5,\n    \"State\": \"Deleting\",\n    \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function\",\n    \"EventSourceArn\": \"arn:aws:sqs:us-west-2:123456789012:mySQSqueue\"\n}\n\n\nFor more information, see AWS Lambda Event Source Mapping in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "delete-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/delete-function.html",
      "command_description": "Description\n\nDeletes a Lambda function. To delete a specific function version, use the Qualifier parameter. Otherwise, all versions and aliases are deleted.\n\nTo delete Lambda event source mappings that invoke a function, use DeleteEventSourceMapping . For Amazon Web Services services and resources that invoke your function directly, delete the trigger in the service where you originally configured it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-function\n--function-name <value>\n[--qualifier <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--qualifier <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function or version.\n\nName formats\n\nFunction name - my-function (name-only), my-function:1 (with version).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nSpecify a version to delete. You can’t delete a version that’s referenced by an alias.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a Lambda function\n\nThe following delete-function example deletes the Lambda function named my-function.\n\naws lambda delete-function \\\n    --function-name my-function\n\n\nThis command produces no output.\n\nFor more information, see AWS Lambda Function Configuration in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "delete-function-code-signing-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/delete-function-code-signing-config.html",
      "command_description": "Description\n\nRemoves the code signing configuration from the function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-function-code-signing-config\n--function-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-function-concurrency",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/delete-function-concurrency.html",
      "command_description": "Description\n\nRemoves a concurrent execution limit from a function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-function-concurrency\n--function-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove the reserved concurrent execution limit from a function\n\nThe following delete-function-concurrency example deletes the reserved concurrent execution limit from the my-function function.\n\naws lambda delete-function-concurrency \\\n    --function-name  my-function\n\n\nThis command produces no output.\n\nFor more information, see Reserving Concurrency for a Lambda Function in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "delete-function-event-invoke-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/delete-function-event-invoke-config.html",
      "command_description": "Description\n\nDeletes the configuration for asynchronous invocation for a function, version, or alias.\n\nTo configure options for asynchronous invocation, use PutFunctionEventInvokeConfig .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-function-event-invoke-config\n--function-name <value>\n[--qualifier <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--qualifier <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function, version, or alias.\n\nName formats\n\nFunction name - my-function (name-only), my-function:v1 (with alias).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nA version number or alias name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an asynchronous invocation configuration\n\nThe following delete-function-event-invoke-config example deletes the asynchronous invocation configuration for the GREEN alias of the specified function.\n\naws lambda delete-function-event-invoke-config --function-name my-function:GREEN\n"
    },
    {
      "command_name": "delete-layer-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/delete-layer-version.html",
      "command_description": "Description\n\nDeletes a version of an Lambda layer . Deleted versions can no longer be viewed or added to functions. To avoid breaking functions, a copy of the version remains in Lambda until no functions refer to it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-layer-version\n--layer-name <value>\n--version-number <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-name <value>",
        "--version-number <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-name (string)\n\nThe name or Amazon Resource Name (ARN) of the layer.\n\n--version-number (long)\n\nThe version number.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a version of a Lambda layer\n\nThe following delete-layer-version example deletes version 2 of the layer named my-layer.\n\naws lambda delete-layer-version \\\n    --layer-name my-layer \\\n    --version-number 2\n\n\nThis command produces no output.\n\nFor more information, see AWS Lambda Layers in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "delete-provisioned-concurrency-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/delete-provisioned-concurrency-config.html",
      "command_description": "Description\n\nDeletes the provisioned concurrency configuration for a function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-provisioned-concurrency-config\n--function-name <value>\n--qualifier <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "--qualifier <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nThe version number or alias name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a provisioned concurrency configuration\n\nThe following delete-provisioned-concurrency-config example deletes the provisioned concurrency configuration for the GREEN alias of the specified function.\n\naws lambda delete-provisioned-concurrency-config \\\n    --function-name my-function \\\n    --qualifier GREEN\n"
    },
    {
      "command_name": "get-account-settings",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-account-settings.html",
      "command_description": "Description\n\nRetrieves details about your account’s limits and usage in an Amazon Web Services Region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-account-settings\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccountLimit -> (structure)\n\nLimits that are related to concurrency and code storage.\n\nTotalCodeSize -> (long)\n\nThe amount of storage space that you can use for all deployment packages and layer archives.\n\nCodeSizeUnzipped -> (long)\n\nThe maximum size of a function’s deployment package and layers when they’re extracted.\n\nCodeSizeZipped -> (long)\n\nThe maximum size of a deployment package when it’s uploaded directly to Lambda. Use Amazon S3 for larger files.\n\nConcurrentExecutions -> (integer)\n\nThe maximum number of simultaneous function executions.\n\nUnreservedConcurrentExecutions -> (integer)\n\nThe maximum number of simultaneous function executions, minus the capacity that’s reserved for individual functions with PutFunctionConcurrency .\n\nAccountUsage -> (structure)\n\nThe number of functions and amount of storage in use.\n\nTotalCodeSize -> (long)\n\nThe amount of storage space, in bytes, that’s being used by deployment packages and layer archives.\n\nFunctionCount -> (long)\n\nThe number of Lambda functions.",
      "command_examples": "Examples\n\nTo retrieve details about your account in an AWS Region\n\nThe following get-account-settings example displays the Lambda limits and usage information for your account.\n\naws lambda get-account-settings\n\n\nOutput:\n\n{\n    \"AccountLimit\": {\n       \"CodeSizeUnzipped\": 262144000,\n       \"UnreservedConcurrentExecutions\": 1000,\n       \"ConcurrentExecutions\": 1000,\n       \"CodeSizeZipped\": 52428800,\n       \"TotalCodeSize\": 80530636800\n    },\n    \"AccountUsage\": {\n       \"FunctionCount\": 4,\n       \"TotalCodeSize\": 9426\n    }\n}\n\n\nFor more information, see AWS Lambda Limits in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "get-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-alias.html",
      "command_description": "Description\n\nReturns details about a Lambda function alias .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-alias\n--function-name <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--name (string)\n\nThe name of the alias.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAliasArn -> (string)\n\nThe Amazon Resource Name (ARN) of the alias.\n\nName -> (string)\n\nThe name of the alias.\n\nFunctionVersion -> (string)\n\nThe function version that the alias invokes.\n\nDescription -> (string)\n\nA description of the alias.\n\nRoutingConfig -> (structure)\n\nThe routing configuration of the alias.\n\nAdditionalVersionWeights -> (map)\n\nThe second version, and the percentage of traffic that’s routed to it.\n\nkey -> (string)\n\nvalue -> (double)\n\nRevisionId -> (string)\n\nA unique identifier that changes when you update the alias.",
      "command_examples": "Examples\n\nTo retrieve details about a function alias\n\nThe following get-alias example displays details for the alias named LIVE on the my-function Lambda function.\n\naws lambda get-alias \\\n    --function-name my-function \\\n    --name LIVE\n\n\nOutput:\n\n{\n    \"FunctionVersion\": \"3\",\n    \"Name\": \"LIVE\",\n    \"AliasArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function:LIVE\",\n    \"RevisionId\": \"594f41fb-b85f-4c20-95c7-6ca5f2a92c93\",\n    \"Description\": \"alias for live version of function\"\n}\n\n\nFor more information, see Configuring AWS Lambda Function Aliases in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "get-code-signing-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-code-signing-config.html",
      "command_description": "Description\n\nReturns information about the specified code signing configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-code-signing-config\n--code-signing-config-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--code-signing-config-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--code-signing-config-arn (string)\n\nThe The Amazon Resource Name (ARN) of the code signing configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCodeSigningConfig -> (structure)\n\nThe code signing configuration\n\nCodeSigningConfigId -> (string)\n\nUnique identifer for the Code signing configuration.\n\nCodeSigningConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Code signing configuration.\n\nDescription -> (string)\n\nCode signing configuration description.\n\nAllowedPublishers -> (structure)\n\nList of allowed publishers.\n\nSigningProfileVersionArns -> (list)\n\nThe Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.\n\n(string)\n\nCodeSigningPolicies -> (structure)\n\nThe code signing policy controls the validation failure action for signature mismatch or expiry.\n\nUntrustedArtifactOnDeployment -> (string)\n\nCode signing configuration policy for deployment validation failure. If you set the policy to Enforce , Lambda blocks the deployment request if signature validation checks fail. If you set the policy to Warn , Lambda allows the deployment and creates a CloudWatch log.\n\nDefault value: Warn\n\nLastModified -> (string)\n\nThe date and time that the Code signing configuration was last modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD)."
    },
    {
      "command_name": "get-event-source-mapping",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-event-source-mapping.html",
      "command_description": "Description\n\nReturns details about an event source mapping. You can get the identifier of a mapping from the output of ListEventSourceMappings .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-event-source-mapping\n--uuid <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--uuid <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--uuid (string)\n\nThe identifier of the event source mapping.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUUID -> (string)\n\nThe identifier of the event source mapping.\n\nStartingPosition -> (string)\n\nThe position in a stream from which to start reading. Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources. AT_TIMESTAMP is supported only for Amazon Kinesis streams.\n\nStartingPositionTimestamp -> (timestamp)\n\nWith StartingPosition set to AT_TIMESTAMP , the time from which to start reading.\n\nBatchSize -> (integer)\n\nThe maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).\n\nDefault value: Varies by service. For Amazon SQS, the default is 10. For all other services, the default is 100.\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\nMaximumBatchingWindowInSeconds -> (integer)\n\n(Streams and Amazon SQS standard queues) The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.\n\nDefault: 0\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\nParallelizationFactor -> (integer)\n\n(Streams only) The number of batches to process concurrently from each shard. The default value is 1.\n\nEventSourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the event source.\n\nFunctionArn -> (string)\n\nThe ARN of the Lambda function.\n\nLastModified -> (timestamp)\n\nThe date that the event source mapping was last updated or that its state changed.\n\nLastProcessingResult -> (string)\n\nThe result of the last Lambda invocation of your function.\n\nState -> (string)\n\nThe state of the event source mapping. It can be one of the following: Creating , Enabling , Enabled , Disabling , Disabled , Updating , or Deleting .\n\nStateTransitionReason -> (string)\n\nIndicates whether a user or Lambda made the last change to the event source mapping.\n\nDestinationConfig -> (structure)\n\n(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nTopics -> (list)\n\nThe name of the Kafka topic.\n\n(string)\n\nQueues -> (list)\n\n(Amazon MQ) The name of the Amazon MQ broker destination queue to consume.\n\n(string)\n\nSourceAccessConfigurations -> (list)\n\nAn array of the authentication protocol, VPC components, or virtual host to secure and define your event source.\n\n(structure)\n\nTo secure and define access to your event source, you can specify the authentication protocol, VPC components, or virtual host.\n\nType -> (string)\n\nThe type of authentication protocol, VPC components, or virtual host for your event source. For example: \"Type\":\"SASL_SCRAM_512_AUTH\" .\n\nBASIC_AUTH - (Amazon MQ) The Secrets Manager secret that stores your broker credentials.\n\nBASIC_AUTH - (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL/PLAIN authentication of your Apache Kafka brokers.\n\nVPC_SUBNET - The subnets associated with your VPC. Lambda connects to these subnets to fetch data from your self-managed Apache Kafka cluster.\n\nVPC_SECURITY_GROUP - The VPC security group used to manage access to your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_256_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_512_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your self-managed Apache Kafka brokers.\n\nVIRTUAL_HOST - (Amazon MQ) The name of the virtual host in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event source.\n\nURI -> (string)\n\nThe value for your chosen configuration in Type . For example: \"URI\": \"arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName\" .\n\nSelfManagedEventSource -> (structure)\n\nThe self-managed Apache Kafka cluster for your event source.\n\nEndpoints -> (map)\n\nThe list of bootstrap servers for your Kafka brokers in the following format: \"KAFKA_BOOTSTRAP_SERVERS\": [\"abc.xyz.com:xxxx\",\"abc2.xyz.com:xxxx\"] .\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nMaximumRecordAgeInSeconds -> (integer)\n\n(Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.\n\nBisectBatchOnFunctionError -> (boolean)\n\n(Streams only) If the function returns an error, split the batch in two and retry. The default value is false.\n\nMaximumRetryAttempts -> (integer)\n\n(Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.\n\nTumblingWindowInSeconds -> (integer)\n\n(Streams only) The duration in seconds of a processing window. The range is 1–900 seconds.\n\nFunctionResponseTypes -> (list)\n\n(Streams only) A list of current response type enums applied to the event source mapping.\n\n(string)",
      "command_examples": "Examples\n\nTo retrieve details about an event source mapping\n\nThe following get-event-source-mapping example displays the details for the mapping between an SQS queue and the my-function Lambda function.\n\naws lambda get-event-source-mapping \\\n    --uuid \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\"\n\n\nOutput:\n\n{\n    \"UUID\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n    \"StateTransitionReason\": \"USER_INITIATED\",\n    \"LastModified\": 1569284520.333,\n    \"BatchSize\": 5,\n    \"State\": \"Enabled\",\n    \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function\",\n    \"EventSourceArn\": \"arn:aws:sqs:us-west-2:123456789012:mySQSqueue\"\n}\n\n\nFor more information, see AWS Lambda Event Source Mapping in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "get-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-function.html",
      "command_description": "Description\n\nReturns information about the function or function version, with a link to download the deployment package that’s valid for 10 minutes. If you specify a function version, only details that are specific to that version are returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-function\n--function-name <value>\n[--qualifier <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--qualifier <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function, version, or alias.\n\nName formats\n\nFunction name - my-function (name-only), my-function:v1 (with alias).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nSpecify a version or alias to get details about a published version of the function.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConfiguration -> (structure)\n\nThe configuration of the function or version.\n\nFunctionName -> (string)\n\nThe name of the function.\n\nFunctionArn -> (string)\n\nThe function’s Amazon Resource Name (ARN).\n\nRuntime -> (string)\n\nThe runtime environment for the Lambda function.\n\nRole -> (string)\n\nThe function’s execution role.\n\nHandler -> (string)\n\nThe function that Lambda calls to begin executing your function.\n\nCodeSize -> (long)\n\nThe size of the function’s deployment package, in bytes.\n\nDescription -> (string)\n\nThe function’s description.\n\nTimeout -> (integer)\n\nThe amount of time in seconds that Lambda allows a function to run before stopping it.\n\nMemorySize -> (integer)\n\nThe amount of memory available to the function at runtime.\n\nLastModified -> (string)\n\nThe date and time that the function was last updated, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nCodeSha256 -> (string)\n\nThe SHA256 hash of the function’s deployment package.\n\nVersion -> (string)\n\nThe version of the Lambda function.\n\nVpcConfig -> (structure)\n\nThe function’s networking configuration.\n\nSubnetIds -> (list)\n\nA list of VPC subnet IDs.\n\n(string)\n\nSecurityGroupIds -> (list)\n\nA list of VPC security groups IDs.\n\n(string)\n\nVpcId -> (string)\n\nThe ID of the VPC.\n\nDeadLetterConfig -> (structure)\n\nThe function’s dead letter queue.\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\nEnvironment -> (structure)\n\nThe function’s environment variables .\n\nVariables -> (map)\n\nEnvironment variable key-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nError -> (structure)\n\nError messages for environment variables that couldn’t be applied.\n\nErrorCode -> (string)\n\nThe error code.\n\nMessage -> (string)\n\nThe error message.\n\nKMSKeyArn -> (string)\n\nThe KMS key that’s used to encrypt the function’s environment variables. This key is only returned if you’ve configured a customer managed CMK.\n\nTracingConfig -> (structure)\n\nThe function’s X-Ray tracing configuration.\n\nMode -> (string)\n\nThe tracing mode.\n\nMasterArn -> (string)\n\nFor Lambda@Edge functions, the ARN of the master function.\n\nRevisionId -> (string)\n\nThe latest updated revision of the function or alias.\n\nLayers -> (list)\n\nThe function’s layers .\n\n(structure)\n\nAn Lambda layer .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function layer.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nState -> (string)\n\nThe current state of the function. When the state is Inactive , you can reactivate the function by invoking it.\n\nStateReason -> (string)\n\nThe reason for the function’s current state.\n\nStateReasonCode -> (string)\n\nThe reason code for the function’s current state. When the code is Creating , you can’t invoke or modify the function.\n\nLastUpdateStatus -> (string)\n\nThe status of the last update that was performed on the function. This is first set to Successful after function creation completes.\n\nLastUpdateStatusReason -> (string)\n\nThe reason for the last update that was performed on the function.\n\nLastUpdateStatusReasonCode -> (string)\n\nThe reason code for the last update that was performed on the function.\n\nFileSystemConfigs -> (list)\n\nConnection settings for an Amazon EFS file system .\n\n(structure)\n\nDetails about the connection between a Lambda function and an Amazon EFS file system .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\nLocalMountPath -> (string)\n\nThe path where the function can access the file system, starting with /mnt/ .\n\nPackageType -> (string)\n\nThe type of deployment package. Set to Image for container image and set Zip for .zip file archive.\n\nImageConfigResponse -> (structure)\n\nThe function’s image configuration values.\n\nImageConfig -> (structure)\n\nConfiguration values that override the container image Dockerfile.\n\nEntryPoint -> (list)\n\nSpecifies the entry point to their application, which is typically the location of the runtime executable.\n\n(string)\n\nCommand -> (list)\n\nSpecifies parameters that you want to pass in with ENTRYPOINT.\n\n(string)\n\nWorkingDirectory -> (string)\n\nSpecifies the working directory.\n\nError -> (structure)\n\nError response to GetFunctionConfiguration.\n\nErrorCode -> (string)\n\nError code.\n\nMessage -> (string)\n\nError message.\n\nSigningProfileVersionArn -> (string)\n\nThe ARN of the signing profile version.\n\nSigningJobArn -> (string)\n\nThe ARN of the signing job.\n\nArchitectures -> (list)\n\nThe instruction set architecture that the function supports. Architecture is a string array with one of the valid values. The default architecture value is x86_64 .\n\n(string)\n\nCode -> (structure)\n\nThe deployment package of the function or version.\n\nRepositoryType -> (string)\n\nThe service that’s hosting the file.\n\nLocation -> (string)\n\nA presigned URL that you can use to download the deployment package.\n\nImageUri -> (string)\n\nURI of a container image in the Amazon ECR registry.\n\nResolvedImageUri -> (string)\n\nThe resolved URI for the image.\n\nTags -> (map)\n\nThe function’s tags .\n\nkey -> (string)\n\nvalue -> (string)\n\nConcurrency -> (structure)\n\nThe function’s reserved concurrency .\n\nReservedConcurrentExecutions -> (integer)\n\nThe number of concurrent executions that are reserved for this function. For more information, see Managing Concurrency .",
      "command_examples": "Examples\n\nTo retrieve information about a function\n\nThe following get-function example displays information about the my-function function.\n\naws lambda get-function \\\n    --function-name  my-function\n\n\nOutput:\n\n{\n    \"Concurrency\": {\n        \"ReservedConcurrentExecutions\": 100\n    },\n    \"Code\": {\n        \"RepositoryType\": \"S3\",\n        \"Location\": \"https://awslambda-us-west-2-tasks.s3.us-west-2.amazonaws.com/snapshots/123456789012/my-function...\"\n    },\n    \"Configuration\": {\n        \"TracingConfig\": {\n            \"Mode\": \"PassThrough\"\n        },\n        \"Version\": \"$LATEST\",\n        \"CodeSha256\": \"5tT2qgzYUHoqwR616pZ2dpkn/0J1FrzJmlKidWaaCgk=\",\n        \"FunctionName\": \"my-function\",\n        \"VpcConfig\": {\n            \"SubnetIds\": [],\n            \"VpcId\": \"\",\n            \"SecurityGroupIds\": []\n        },\n        \"MemorySize\": 128,\n        \"RevisionId\": \"28f0fb31-5c5c-43d3-8955-03e76c5c1075\",\n        \"CodeSize\": 304,\n        \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function\",\n        \"Handler\": \"index.handler\",\n        \"Role\": \"arn:aws:iam::123456789012:role/service-role/helloWorldPython-role-uy3l9qyq\",\n        \"Timeout\": 3,\n        \"LastModified\": \"2019-09-24T18:20:35.054+0000\",\n        \"Runtime\": \"nodejs10.x\",\n        \"Description\": \"\"\n    }\n}\n\n\nFor more information, see AWS Lambda Function Configuration in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "get-function-code-signing-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-function-code-signing-config.html",
      "command_description": "Description\n\nReturns the code signing configuration for the specified function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-function-code-signing-config\n--function-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCodeSigningConfigArn -> (string)\n\nThe The Amazon Resource Name (ARN) of the code signing configuration.\n\nFunctionName -> (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length."
    },
    {
      "command_name": "get-function-concurrency",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-function-concurrency.html",
      "command_description": "Description\n\nReturns details about the reserved concurrency configuration for a function. To set a concurrency limit for a function, use PutFunctionConcurrency .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-function-concurrency\n--function-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReservedConcurrentExecutions -> (integer)\n\nThe number of simultaneous executions that are reserved for the function.",
      "command_examples": "Examples\n\nTo view the reserved concurrency setting for a function\n\nThe following get-function-concurrency example retrieves the reserved concurrency setting for the specified function.\n\naws lambda get-function-concurrency \\\n    --function-name my-function\n\n\nOutput:\n\n{\n    \"ReservedConcurrentExecutions\": 250\n}\n"
    },
    {
      "command_name": "get-function-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-function-configuration.html",
      "command_description": "Description\n\nReturns the version-specific settings of a Lambda function or version. The output includes only options that can vary between versions of a function. To modify these settings, use UpdateFunctionConfiguration .\n\nTo get all of a function’s details, including function-level settings, use GetFunction .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-function-configuration\n--function-name <value>\n[--qualifier <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--qualifier <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function, version, or alias.\n\nName formats\n\nFunction name - my-function (name-only), my-function:v1 (with alias).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nSpecify a version or alias to get details about a published version of the function.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionName -> (string)\n\nThe name of the function.\n\nFunctionArn -> (string)\n\nThe function’s Amazon Resource Name (ARN).\n\nRuntime -> (string)\n\nThe runtime environment for the Lambda function.\n\nRole -> (string)\n\nThe function’s execution role.\n\nHandler -> (string)\n\nThe function that Lambda calls to begin executing your function.\n\nCodeSize -> (long)\n\nThe size of the function’s deployment package, in bytes.\n\nDescription -> (string)\n\nThe function’s description.\n\nTimeout -> (integer)\n\nThe amount of time in seconds that Lambda allows a function to run before stopping it.\n\nMemorySize -> (integer)\n\nThe amount of memory available to the function at runtime.\n\nLastModified -> (string)\n\nThe date and time that the function was last updated, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nCodeSha256 -> (string)\n\nThe SHA256 hash of the function’s deployment package.\n\nVersion -> (string)\n\nThe version of the Lambda function.\n\nVpcConfig -> (structure)\n\nThe function’s networking configuration.\n\nSubnetIds -> (list)\n\nA list of VPC subnet IDs.\n\n(string)\n\nSecurityGroupIds -> (list)\n\nA list of VPC security groups IDs.\n\n(string)\n\nVpcId -> (string)\n\nThe ID of the VPC.\n\nDeadLetterConfig -> (structure)\n\nThe function’s dead letter queue.\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\nEnvironment -> (structure)\n\nThe function’s environment variables .\n\nVariables -> (map)\n\nEnvironment variable key-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nError -> (structure)\n\nError messages for environment variables that couldn’t be applied.\n\nErrorCode -> (string)\n\nThe error code.\n\nMessage -> (string)\n\nThe error message.\n\nKMSKeyArn -> (string)\n\nThe KMS key that’s used to encrypt the function’s environment variables. This key is only returned if you’ve configured a customer managed CMK.\n\nTracingConfig -> (structure)\n\nThe function’s X-Ray tracing configuration.\n\nMode -> (string)\n\nThe tracing mode.\n\nMasterArn -> (string)\n\nFor Lambda@Edge functions, the ARN of the master function.\n\nRevisionId -> (string)\n\nThe latest updated revision of the function or alias.\n\nLayers -> (list)\n\nThe function’s layers .\n\n(structure)\n\nAn Lambda layer .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function layer.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nState -> (string)\n\nThe current state of the function. When the state is Inactive , you can reactivate the function by invoking it.\n\nStateReason -> (string)\n\nThe reason for the function’s current state.\n\nStateReasonCode -> (string)\n\nThe reason code for the function’s current state. When the code is Creating , you can’t invoke or modify the function.\n\nLastUpdateStatus -> (string)\n\nThe status of the last update that was performed on the function. This is first set to Successful after function creation completes.\n\nLastUpdateStatusReason -> (string)\n\nThe reason for the last update that was performed on the function.\n\nLastUpdateStatusReasonCode -> (string)\n\nThe reason code for the last update that was performed on the function.\n\nFileSystemConfigs -> (list)\n\nConnection settings for an Amazon EFS file system .\n\n(structure)\n\nDetails about the connection between a Lambda function and an Amazon EFS file system .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\nLocalMountPath -> (string)\n\nThe path where the function can access the file system, starting with /mnt/ .\n\nPackageType -> (string)\n\nThe type of deployment package. Set to Image for container image and set Zip for .zip file archive.\n\nImageConfigResponse -> (structure)\n\nThe function’s image configuration values.\n\nImageConfig -> (structure)\n\nConfiguration values that override the container image Dockerfile.\n\nEntryPoint -> (list)\n\nSpecifies the entry point to their application, which is typically the location of the runtime executable.\n\n(string)\n\nCommand -> (list)\n\nSpecifies parameters that you want to pass in with ENTRYPOINT.\n\n(string)\n\nWorkingDirectory -> (string)\n\nSpecifies the working directory.\n\nError -> (structure)\n\nError response to GetFunctionConfiguration.\n\nErrorCode -> (string)\n\nError code.\n\nMessage -> (string)\n\nError message.\n\nSigningProfileVersionArn -> (string)\n\nThe ARN of the signing profile version.\n\nSigningJobArn -> (string)\n\nThe ARN of the signing job.\n\nArchitectures -> (list)\n\nThe instruction set architecture that the function supports. Architecture is a string array with one of the valid values. The default architecture value is x86_64 .\n\n(string)",
      "command_examples": "Examples\n\nTo retrieve the version-specific settings of a Lambda function\n\nThe following get-function-configuration example displays the settings for version 2 of the my-function function.\n\naws lambda get-function-configuration \\\n    --function-name  my-function:2\n\n\nOutput:\n\n{\n    \"FunctionName\": \"my-function\",\n    \"LastModified\": \"2019-09-26T20:28:40.438+0000\",\n    \"RevisionId\": \"e52502d4-9320-4688-9cd6-152a6ab7490d\",\n    \"MemorySize\": 256,\n    \"Version\": \"2\",\n    \"Role\": \"arn:aws:iam::123456789012:role/service-role/my-function-role-uy3l9qyq\",\n    \"Timeout\": 3,\n    \"Runtime\": \"nodejs10.x\",\n    \"TracingConfig\": {\n        \"Mode\": \"PassThrough\"\n    },\n    \"CodeSha256\": \"5tT2qgzYUHaqwR716pZ2dpkn/0J1FrzJmlKidWoaCgk=\",\n    \"Description\": \"\",\n    \"VpcConfig\": {\n        \"SubnetIds\": [],\n        \"VpcId\": \"\",\n        \"SecurityGroupIds\": []\n    },\n    \"CodeSize\": 304,\n    \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function:2\",\n    \"Handler\": \"index.handler\"\n}\n\n\nFor more information, see AWS Lambda Function Configuration in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "get-function-event-invoke-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-function-event-invoke-config.html",
      "command_description": "Description\n\nRetrieves the configuration for asynchronous invocation for a function, version, or alias.\n\nTo configure options for asynchronous invocation, use PutFunctionEventInvokeConfig .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-function-event-invoke-config\n--function-name <value>\n[--qualifier <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--qualifier <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function, version, or alias.\n\nName formats\n\nFunction name - my-function (name-only), my-function:v1 (with alias).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nA version number or alias name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLastModified -> (timestamp)\n\nThe date and time that the configuration was last updated.\n\nFunctionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nMaximumRetryAttempts -> (integer)\n\nThe maximum number of times to retry when the function returns an error.\n\nMaximumEventAgeInSeconds -> (integer)\n\nThe maximum age of a request that Lambda sends to a function for processing.\n\nDestinationConfig -> (structure)\n\nA destination for events after they have been sent to a function for processing.\n\nDestinations\n\nFunction - The Amazon Resource Name (ARN) of a Lambda function.\n\nQueue - The ARN of an SQS queue.\n\nTopic - The ARN of an SNS topic.\n\nEvent Bus - The ARN of an Amazon EventBridge event bus.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.",
      "command_examples": "Examples\n\nTo view an asynchronous invocation configuration\n\nThe following get-function-event-invoke-config example retrieves the asynchronous invocation configuration for the BLUE alias of the specified function.\n\naws lambda get-function-event-invoke-config \\\n    --function-name my-function:BLUE\n\n\nOutput:\n\n{\n    \"LastModified\": 1577824396.653,\n    \"FunctionArn\": \"arn:aws:lambda:us-east-2:123456789012:function:my-function:BLUE\",\n    \"MaximumRetryAttempts\": 0,\n    \"MaximumEventAgeInSeconds\": 3600,\n    \"DestinationConfig\": {\n        \"OnSuccess\": {},\n        \"OnFailure\": {\n            \"Destination\": \"arn:aws:sqs:us-east-2:123456789012:failed-invocations\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-layer-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-layer-version.html",
      "command_description": "Description\n\nReturns information about a version of an Lambda layer , with a link to download the layer archive that’s valid for 10 minutes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-layer-version\n--layer-name <value>\n--version-number <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-name <value>",
        "--version-number <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-name (string)\n\nThe name or Amazon Resource Name (ARN) of the layer.\n\n--version-number (long)\n\nThe version number.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nContent -> (structure)\n\nDetails about the layer version.\n\nLocation -> (string)\n\nA link to the layer archive in Amazon S3 that is valid for 10 minutes.\n\nCodeSha256 -> (string)\n\nThe SHA-256 hash of the layer archive.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nLayerArn -> (string)\n\nThe ARN of the layer.\n\nLayerVersionArn -> (string)\n\nThe ARN of the layer version.\n\nDescription -> (string)\n\nThe description of the version.\n\nCreatedDate -> (string)\n\nThe date that the layer version was created, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nVersion -> (long)\n\nThe version number.\n\nCompatibleRuntimes -> (list)\n\nThe layer’s compatible runtimes.\n\n(string)\n\nLicenseInfo -> (string)\n\nThe layer’s software license.\n\nCompatibleArchitectures -> (list)\n\nA list of compatible instruction set architectures .\n\n(string)",
      "command_examples": "Examples\n\nTo retrieve information about a Lambda layer version\n\nThe following get-layer-version example displays information for version 1 of the layer named my-layer.\n\naws lambda get-layer-version \\\n    --layer-name my-layer \\\n    --version-number 1\n\n\nOutput:\n\n{\n    \"Content\": {\n        \"Location\": \"https://awslambda-us-east-2-layers.s3.us-east-2.amazonaws.com/snapshots/123456789012/my-layer-4aaa2fbb-ff77-4b0a-ad92-5b78a716a96a?versionId=27iWyA73cCAYqyH...\",\n        \"CodeSha256\": \"tv9jJO+rPbXUUXuRKi7CwHzKtLDkDRJLB3cC3Z/ouXo=\",\n        \"CodeSize\": 169\n    },\n    \"LayerArn\": \"arn:aws:lambda:us-east-2:123456789012:layer:my-layer\",\n    \"LayerVersionArn\": \"arn:aws:lambda:us-east-2:123456789012:layer:my-layer:1\",\n    \"Description\": \"My Python layer\",\n    \"CreatedDate\": \"2018-11-14T23:03:52.894+0000\",\n    \"Version\": 1,\n    \"LicenseInfo\": \"MIT\",\n    \"CompatibleRuntimes\": [\n        \"python3.6\",\n        \"python3.7\"\n    ]\n}\n\n\nFor more information, see AWS Lambda Layers in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "get-layer-version-by-arn",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-layer-version-by-arn.html",
      "command_description": "Description\n\nReturns information about a version of an Lambda layer , with a link to download the layer archive that’s valid for 10 minutes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-layer-version-by-arn\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the layer version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nContent -> (structure)\n\nDetails about the layer version.\n\nLocation -> (string)\n\nA link to the layer archive in Amazon S3 that is valid for 10 minutes.\n\nCodeSha256 -> (string)\n\nThe SHA-256 hash of the layer archive.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nLayerArn -> (string)\n\nThe ARN of the layer.\n\nLayerVersionArn -> (string)\n\nThe ARN of the layer version.\n\nDescription -> (string)\n\nThe description of the version.\n\nCreatedDate -> (string)\n\nThe date that the layer version was created, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nVersion -> (long)\n\nThe version number.\n\nCompatibleRuntimes -> (list)\n\nThe layer’s compatible runtimes.\n\n(string)\n\nLicenseInfo -> (string)\n\nThe layer’s software license.\n\nCompatibleArchitectures -> (list)\n\nA list of compatible instruction set architectures .\n\n(string)",
      "command_examples": "Examples\n\nTo retrieve information about a Lambda layer version\n\nThe following get-layer-version-by-arn example displays information about the layer version with the specified Amazon Resource Name (ARN).\n\naws lambda get-layer-version-by-arn \\\n    --arn \"arn:aws:lambda:us-west-2:123456789012:layer:AWSLambda-Python37-SciPy1x:2\"\n\n\nOutput:\n\n{\n    \"LayerVersionArn\": \"arn:aws:lambda:us-west-2:123456789012:layer:AWSLambda-Python37-SciPy1x:2\",\n    \"Description\": \"AWS Lambda SciPy layer for Python 3.7 (scipy-1.1.0, numpy-1.15.4) https://github.com/scipy/scipy/releases/tag/v1.1.0 https://github.com/numpy/numpy/releases/tag/v1.15.4\",\n    \"CreatedDate\": \"2018-11-12T10:09:38.398+0000\",\n    \"LayerArn\": \"arn:aws:lambda:us-west-2:123456789012:layer:AWSLambda-Python37-SciPy1x\",\n    \"Content\": {\n        \"CodeSize\": 41784542,\n        \"CodeSha256\": \"GGmv8ocUw4cly0T8HL0Vx/f5V4RmSCGNjDIslY4VskM=\",\n        \"Location\": \"https://awslambda-us-west-2-layers.s3.us-west-2.amazonaws.com/snapshots/123456789012/...\"\n    },\n    \"Version\": 2,\n    \"CompatibleRuntimes\": [\n        \"python3.7\"\n    ],\n    \"LicenseInfo\": \"SciPy: https://github.com/scipy/scipy/blob/master/LICENSE.txt, NumPy: https://github.com/numpy/numpy/blob/master/LICENSE.txt\"\n}\n\n\nFor more information, see AWS Lambda Layers in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "get-layer-version-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-layer-version-policy.html",
      "command_description": "Description\n\nReturns the permission policy for a version of an Lambda layer . For more information, see AddLayerVersionPermission .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-layer-version-policy\n--layer-name <value>\n--version-number <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-name <value>",
        "--version-number <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-name (string)\n\nThe name or Amazon Resource Name (ARN) of the layer.\n\n--version-number (long)\n\nThe version number.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicy -> (string)\n\nThe policy document.\n\nRevisionId -> (string)\n\nA unique identifier for the current revision of the policy.",
      "command_examples": "Examples\n\nTo retrieve the permissions policy for a Lambda layer version\n\nThe following get-layer-version-policy example displays policy information about version 1 for the layer named my-layer.\n\naws lambda get-layer-version-policy \\\n    --layer-name my-layer \\\n    --version-number 1\n\n\nOutput:\n\n{\n    \"Policy\": {\n        \"Version\":\"2012-10-17\",\n        \"Id\":\"default\",\n        \"Statement\":\n        [\n            {\n                \"Sid\":\"xaccount\",\n                \"Effect\":\"Allow\",\n                \"Principal\": {\"AWS\":\"arn:aws:iam::123456789012:root\"},\n                \"Action\":\"lambda:GetLayerVersion\",\n                \"Resource\":\"arn:aws:lambda:us-west-2:123456789012:layer:my-layer:1\"\n            }\n        ]\n    },\n    \"RevisionId\": \"c68f21d2-cbf0-4026-90f6-1375ee465cd0\"\n}\n\n\nFor more information, see AWS Lambda Layers in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "get-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-policy.html",
      "command_description": "Description\n\nReturns the resource-based IAM policy for a function, version, or alias.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-policy\n--function-name <value>\n[--qualifier <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--qualifier <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function, version, or alias.\n\nName formats\n\nFunction name - my-function (name-only), my-function:v1 (with alias).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nSpecify a version or alias to get the policy for that resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicy -> (string)\n\nThe resource-based policy.\n\nRevisionId -> (string)\n\nA unique identifier for the current revision of the policy.",
      "command_examples": "Examples\n\nTo retrieve the resource-based IAM policy for a function, version, or alias\n\nThe following get-policy example displays policy information about the my-function Lambda function.\n\naws lambda get-policy \\\n    --function-name my-function\n\n\nOutput:\n\n{\n    \"Policy\": {\n        \"Version\":\"2012-10-17\",\n        \"Id\":\"default\",\n        \"Statement\":\n        [\n            {\n                \"Sid\":\"iot-events\",\n                \"Effect\":\"Allow\",\n                \"Principal\": {\"Service\":\"iotevents.amazonaws.com\"},\n                \"Action\":\"lambda:InvokeFunction\",\n                \"Resource\":\"arn:aws:lambda:us-west-2:123456789012:function:my-function\"\n            }\n        ]\n    },\n    \"RevisionId\": \"93017fc9-59cb-41dc-901b-4845ce4bf668\"\n}\n\n\nFor more information, see Using Resource-based Policies for AWS Lambda in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "get-provisioned-concurrency-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-provisioned-concurrency-config.html",
      "command_description": "Description\n\nRetrieves the provisioned concurrency configuration for a function’s alias or version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-provisioned-concurrency-config\n--function-name <value>\n--qualifier <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "--qualifier <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nThe version number or alias name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRequestedProvisionedConcurrentExecutions -> (integer)\n\nThe amount of provisioned concurrency requested.\n\nAvailableProvisionedConcurrentExecutions -> (integer)\n\nThe amount of provisioned concurrency available.\n\nAllocatedProvisionedConcurrentExecutions -> (integer)\n\nThe amount of provisioned concurrency allocated.\n\nStatus -> (string)\n\nThe status of the allocation process.\n\nStatusReason -> (string)\n\nFor failed allocations, the reason that provisioned concurrency could not be allocated.\n\nLastModified -> (string)\n\nThe date and time that a user last updated the configuration, in ISO 8601 format .",
      "command_examples": "Examples\n\nTo view a provisioned concurrency configuration\n\nThe following get-provisioned-concurrency-config example displays details for the provisioned concurrency configuration for the BLUE alias of the specified function.\n\naws lambda get-provisioned-concurrency-config \\\n    --function-name my-function \\\n    --qualifier BLUE\n\n\nOutput:\n\n{\n    \"RequestedProvisionedConcurrentExecutions\": 100,\n    \"AvailableProvisionedConcurrentExecutions\": 100,\n    \"AllocatedProvisionedConcurrentExecutions\": 100,\n    \"Status\": \"READY\",\n    \"LastModified\": \"2019-12-31T20:28:49+0000\"\n}\n"
    },
    {
      "command_name": "invoke",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/invoke.html",
      "command_description": "Description\n\nInvokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set InvocationType to Event .\n\nFor synchronous invocation , details about the function response, including errors, are included in the response body and headers. For either invocation type, you can find more information in the execution log and trace .\n\nWhen an error occurs, your function may be invoked multiple times. Retry behavior varies by error type, client, event source, and invocation type. For example, if you invoke a function asynchronously and it returns an error, Lambda executes the function up to two more times. For more information, see Retry Behavior .\n\nFor asynchronous invocation , Lambda adds events to a queue before sending them to your function. If your function does not have enough capacity to keep up with the queue, events may be lost. Occasionally, your function may receive the same event multiple times, even if no error occurs. To retain events that were not processed, configure your function with a dead-letter queue .\n\nThe status code in the API response doesn’t reflect function errors. Error codes are reserved for errors that prevent your function from executing, such as permissions errors, limit errors , or issues with your function’s code and configuration. For example, Lambda returns TooManyRequestsException if executing the function would cause you to exceed a concurrency limit at either the account level (ConcurrentInvocationLimitExceeded ) or function level (ReservedFunctionConcurrentInvocationLimitExceeded ).\n\nFor functions with a long timeout, your client might be disconnected during synchronous invocation while it waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long connections with timeout or keep-alive settings.\n\nThis operation requires permission for the lambda:InvokeFunction action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  invoke\n--function-name <value>\n[--invocation-type <value>]\n[--log-type <value>]\n[--client-context <value>]\n[--payload <value>]\n[--qualifier <value>]\n<outfile>\n",
      "command_options": [
        "--function-name <value>",
        "[--invocation-type <value>]",
        "[--log-type <value>]",
        "[--client-context <value>]",
        "[--payload <value>]",
        "[--qualifier <value>]",
        "<outfile>"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function, version, or alias.\n\nName formats\n\nFunction name - my-function (name-only), my-function:v1 (with alias).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--invocation-type (string)\n\nChoose from the following options.\n\nRequestResponse (default) - Invoke the function synchronously. Keep the connection open until the function returns a response or times out. The API response includes the function response and additional data.\n\nEvent - Invoke the function asynchronously. Send events that fail multiple times to the function’s dead-letter queue (if it’s configured). The API response only includes a status code.\n\nDryRun - Validate parameter values and verify that the user or role has permission to invoke the function.\n\nPossible values:\n\nEvent\n\nRequestResponse\n\nDryRun\n\n--log-type (string)\n\nSet to Tail to include the execution log in the response. Applies to synchronously invoked functions only.\n\nPossible values:\n\nNone\n\nTail\n\n--client-context (string)\n\nUp to 3583 bytes of base64-encoded data about the invoking client to pass to the function in the context object.\n\n--payload (blob)\n\nThe JSON that you want to provide to your Lambda function as input.\n\n--qualifier (string)\n\nSpecify a version or alias to invoke a published version of the function.\n\noutfile (string) Filename where the content will be saved\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatusCode -> (integer)\n\nThe HTTP status code is in the 200 range for a successful request. For the RequestResponse invocation type, this status code is 200. For the Event invocation type, this status code is 202. For the DryRun invocation type, the status code is 204.\n\nFunctionError -> (string)\n\nIf present, indicates that an error occurred during function execution. Details about the error are included in the response payload.\n\nLogResult -> (string)\n\nThe last 4 KB of the execution log, which is base64 encoded.\n\nPayload -> (blob)\n\nThe response from the function, or an error object.\n\nExecutedVersion -> (string)\n\nThe version of the function that executed. When you invoke a function with an alias, this indicates which version the alias resolved to.",
      "command_examples": "Examples\n\nExample 1: To invoke a Lambda function synchronously\n\nThe following invoke example invokes the my-function function synchronously.\n\naws lambda invoke \\\n    --cli-binary-format raw-in-base64-out \\\n    --function-name my-function \\\n    --payload '{ \"name\": \"Bob\" }' \\\n    response.json\n\n\nOutput:\n\n{\n    \"ExecutedVersion\": \"$LATEST\",\n    \"StatusCode\": 200\n}\n\n\nFor more information, see Synchronous Invocation in the AWS Lambda Developer Guide.\n\nExample 2: To invoke a Lambda function asynchronously\n\nThe following invoke example invokes the my-function function asynchronously.\n\naws lambda invoke \\\n    --cli-binary-format raw-in-base64-out \\\n    --function-name my-function \\\n    --invocation-type Event \\\n    --payload '{ \"name\": \"Bob\" }' \\\n    response.json\n\n\nOutput:\n\n{\n    \"StatusCode\": 202\n}\n\n\nFor more information, see Asynchronous Invocation in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "list-aliases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-aliases.html",
      "command_description": "Description\n\nReturns a list of aliases for a Lambda function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-aliases is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Aliases",
      "command_synopsis": "Synopsis\n  list-aliases\n--function-name <value>\n[--function-version <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--function-version <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--function-version (string)\n\nSpecify a function version to only list aliases that invoke that version.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextMarker -> (string)\n\nThe pagination token that’s included if more results are available.\n\nAliases -> (list)\n\nA list of aliases.\n\n(structure)\n\nProvides configuration information about a Lambda function alias .\n\nAliasArn -> (string)\n\nThe Amazon Resource Name (ARN) of the alias.\n\nName -> (string)\n\nThe name of the alias.\n\nFunctionVersion -> (string)\n\nThe function version that the alias invokes.\n\nDescription -> (string)\n\nA description of the alias.\n\nRoutingConfig -> (structure)\n\nThe routing configuration of the alias.\n\nAdditionalVersionWeights -> (map)\n\nThe second version, and the percentage of traffic that’s routed to it.\n\nkey -> (string)\n\nvalue -> (double)\n\nRevisionId -> (string)\n\nA unique identifier that changes when you update the alias.",
      "command_examples": "Examples\n\nTo retrieve the list of aliases for a Lambda function\n\nThe following list-aliases example displays a list of the aliases for the my-function Lambda function.\n\naws lambda list-aliases \\\n    --function-name my-function\n\n\nOutput:\n\n{\n    \"Aliases\": [\n        {\n            \"AliasArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function:BETA\",\n            \"RevisionId\": \"a410117f-ab16-494e-8035-7e204bb7933b\",\n            \"FunctionVersion\": \"2\",\n            \"Name\": \"BETA\",\n            \"Description\": \"alias for beta version of function\"\n        },\n        {\n            \"AliasArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function:LIVE\",\n            \"RevisionId\": \"21d40116-f8b1-40ba-9360-3ea284da1bb5\",\n            \"FunctionVersion\": \"1\",\n            \"Name\": \"LIVE\",\n            \"Description\": \"alias for live version of function\"\n        }\n    ]\n}\n\n\nFor more information, see Configuring AWS Lambda Function Aliases in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "list-code-signing-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-code-signing-configs.html",
      "command_description": "Description\n\nReturns a list of code signing configurations . A request returns up to 10,000 configurations per call. You can use the MaxItems parameter to return fewer configurations per call.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-code-signing-configs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: CodeSigningConfigs",
      "command_synopsis": "Synopsis\n  list-code-signing-configs\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextMarker -> (string)\n\nThe pagination token that’s included if more results are available.\n\nCodeSigningConfigs -> (list)\n\nThe code signing configurations\n\n(structure)\n\nDetails about a Code signing configuration .\n\nCodeSigningConfigId -> (string)\n\nUnique identifer for the Code signing configuration.\n\nCodeSigningConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Code signing configuration.\n\nDescription -> (string)\n\nCode signing configuration description.\n\nAllowedPublishers -> (structure)\n\nList of allowed publishers.\n\nSigningProfileVersionArns -> (list)\n\nThe Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.\n\n(string)\n\nCodeSigningPolicies -> (structure)\n\nThe code signing policy controls the validation failure action for signature mismatch or expiry.\n\nUntrustedArtifactOnDeployment -> (string)\n\nCode signing configuration policy for deployment validation failure. If you set the policy to Enforce , Lambda blocks the deployment request if signature validation checks fail. If you set the policy to Warn , Lambda allows the deployment and creates a CloudWatch log.\n\nDefault value: Warn\n\nLastModified -> (string)\n\nThe date and time that the Code signing configuration was last modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD)."
    },
    {
      "command_name": "list-event-source-mappings",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-event-source-mappings.html",
      "command_description": "Description\n\nLists event source mappings. Specify an EventSourceArn to only show event source mappings for a single event source.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-event-source-mappings is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: EventSourceMappings",
      "command_synopsis": "Synopsis\n  list-event-source-mappings\n[--event-source-arn <value>]\n[--function-name <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--event-source-arn <value>]",
        "[--function-name <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--event-source-arn (string)\n\nThe Amazon Resource Name (ARN) of the event source.\n\nAmazon Kinesis - The ARN of the data stream or a stream consumer.\n\nAmazon DynamoDB Streams - The ARN of the stream.\n\nAmazon Simple Queue Service - The ARN of the queue.\n\nAmazon Managed Streaming for Apache Kafka - The ARN of the cluster.\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nVersion or Alias ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it’s limited to 64 characters in length.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextMarker -> (string)\n\nA pagination token that’s returned when the response doesn’t contain all event source mappings.\n\nEventSourceMappings -> (list)\n\nA list of event source mappings.\n\n(structure)\n\nA mapping between an Amazon Web Services resource and a Lambda function. For details, see CreateEventSourceMapping .\n\nUUID -> (string)\n\nThe identifier of the event source mapping.\n\nStartingPosition -> (string)\n\nThe position in a stream from which to start reading. Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources. AT_TIMESTAMP is supported only for Amazon Kinesis streams.\n\nStartingPositionTimestamp -> (timestamp)\n\nWith StartingPosition set to AT_TIMESTAMP , the time from which to start reading.\n\nBatchSize -> (integer)\n\nThe maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).\n\nDefault value: Varies by service. For Amazon SQS, the default is 10. For all other services, the default is 100.\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\nMaximumBatchingWindowInSeconds -> (integer)\n\n(Streams and Amazon SQS standard queues) The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.\n\nDefault: 0\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\nParallelizationFactor -> (integer)\n\n(Streams only) The number of batches to process concurrently from each shard. The default value is 1.\n\nEventSourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the event source.\n\nFunctionArn -> (string)\n\nThe ARN of the Lambda function.\n\nLastModified -> (timestamp)\n\nThe date that the event source mapping was last updated or that its state changed.\n\nLastProcessingResult -> (string)\n\nThe result of the last Lambda invocation of your function.\n\nState -> (string)\n\nThe state of the event source mapping. It can be one of the following: Creating , Enabling , Enabled , Disabling , Disabled , Updating , or Deleting .\n\nStateTransitionReason -> (string)\n\nIndicates whether a user or Lambda made the last change to the event source mapping.\n\nDestinationConfig -> (structure)\n\n(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nTopics -> (list)\n\nThe name of the Kafka topic.\n\n(string)\n\nQueues -> (list)\n\n(Amazon MQ) The name of the Amazon MQ broker destination queue to consume.\n\n(string)\n\nSourceAccessConfigurations -> (list)\n\nAn array of the authentication protocol, VPC components, or virtual host to secure and define your event source.\n\n(structure)\n\nTo secure and define access to your event source, you can specify the authentication protocol, VPC components, or virtual host.\n\nType -> (string)\n\nThe type of authentication protocol, VPC components, or virtual host for your event source. For example: \"Type\":\"SASL_SCRAM_512_AUTH\" .\n\nBASIC_AUTH - (Amazon MQ) The Secrets Manager secret that stores your broker credentials.\n\nBASIC_AUTH - (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL/PLAIN authentication of your Apache Kafka brokers.\n\nVPC_SUBNET - The subnets associated with your VPC. Lambda connects to these subnets to fetch data from your self-managed Apache Kafka cluster.\n\nVPC_SECURITY_GROUP - The VPC security group used to manage access to your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_256_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_512_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your self-managed Apache Kafka brokers.\n\nVIRTUAL_HOST - (Amazon MQ) The name of the virtual host in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event source.\n\nURI -> (string)\n\nThe value for your chosen configuration in Type . For example: \"URI\": \"arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName\" .\n\nSelfManagedEventSource -> (structure)\n\nThe self-managed Apache Kafka cluster for your event source.\n\nEndpoints -> (map)\n\nThe list of bootstrap servers for your Kafka brokers in the following format: \"KAFKA_BOOTSTRAP_SERVERS\": [\"abc.xyz.com:xxxx\",\"abc2.xyz.com:xxxx\"] .\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nMaximumRecordAgeInSeconds -> (integer)\n\n(Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.\n\nBisectBatchOnFunctionError -> (boolean)\n\n(Streams only) If the function returns an error, split the batch in two and retry. The default value is false.\n\nMaximumRetryAttempts -> (integer)\n\n(Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.\n\nTumblingWindowInSeconds -> (integer)\n\n(Streams only) The duration in seconds of a processing window. The range is 1–900 seconds.\n\nFunctionResponseTypes -> (list)\n\n(Streams only) A list of current response type enums applied to the event source mapping.\n\n(string)",
      "command_examples": "Examples\n\nTo list the event source mappings for a function\n\nThe following list-event-source-mappings example displays a list of the event source mappings for the my-function Lambda function.\n\naws lambda list-event-source-mappings \\\n    --function-name my-function\n\n\nOutput:\n\n{\n    \"EventSourceMappings\": [\n        {\n            \"UUID\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"StateTransitionReason\": \"USER_INITIATED\",\n            \"LastModified\": 1569284520.333,\n            \"BatchSize\": 5,\n            \"State\": \"Enabled\",\n            \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function\",\n            \"EventSourceArn\": \"arn:aws:sqs:us-west-2:123456789012:mySQSqueue\"\n        }\n    ]\n}\n\n\nFor more information, see AWS Lambda Event Source Mapping in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "list-function-event-invoke-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-function-event-invoke-configs.html",
      "command_description": "Description\n\nRetrieves a list of configurations for asynchronous invocation for a function.\n\nTo configure options for asynchronous invocation, use PutFunctionEventInvokeConfig .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-function-event-invoke-configs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FunctionEventInvokeConfigs",
      "command_synopsis": "Synopsis\n  list-function-event-invoke-configs\n--function-name <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionEventInvokeConfigs -> (list)\n\nA list of configurations.\n\n(structure)\n\nLastModified -> (timestamp)\n\nThe date and time that the configuration was last updated.\n\nFunctionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nMaximumRetryAttempts -> (integer)\n\nThe maximum number of times to retry when the function returns an error.\n\nMaximumEventAgeInSeconds -> (integer)\n\nThe maximum age of a request that Lambda sends to a function for processing.\n\nDestinationConfig -> (structure)\n\nA destination for events after they have been sent to a function for processing.\n\nDestinations\n\nFunction - The Amazon Resource Name (ARN) of a Lambda function.\n\nQueue - The ARN of an SQS queue.\n\nTopic - The ARN of an SNS topic.\n\nEvent Bus - The ARN of an Amazon EventBridge event bus.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nNextMarker -> (string)\n\nThe pagination token that’s included if more results are available.",
      "command_examples": "Examples\n\nTo view a list of asynchronous invocation configurations\n\nThe following list-function-event-invoke-configs example lists the asynchronous invocation configurations for the specified function.\n\naws lambda list-function-event-invoke-configs \\\n    --function-name my-function\n\n\nOutput:\n\n{\n    \"FunctionEventInvokeConfigs\": [\n        {\n            \"LastModified\": 1577824406.719,\n            \"FunctionArn\": \"arn:aws:lambda:us-east-2:123456789012:function:my-function:GREEN\",\n            \"MaximumRetryAttempts\": 2,\n            \"MaximumEventAgeInSeconds\": 1800\n        },\n        {\n            \"LastModified\": 1577824396.653,\n            \"FunctionArn\": \"arn:aws:lambda:us-east-2:123456789012:function:my-function:BLUE\",\n            \"MaximumRetryAttempts\": 0,\n            \"MaximumEventAgeInSeconds\": 3600\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-functions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-functions.html",
      "command_description": "Description\n\nReturns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50 functions per call.\n\nSet FunctionVersion to ALL to include all published versions of each function in addition to the unpublished version.\n\nNote\n\nThe ListFunctions action returns a subset of the FunctionConfiguration fields. To get the additional fields (State, StateReasonCode, StateReason, LastUpdateStatus, LastUpdateStatusReason, LastUpdateStatusReasonCode) for a function or version, use GetFunction .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-functions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Functions",
      "command_synopsis": "Synopsis\n  list-functions\n[--master-region <value>]\n[--function-version <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--master-region <value>]",
        "[--function-version <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--master-region (string)\n\nFor Lambda@Edge functions, the Amazon Web Services Region of the master function. For example, us-east-1 filters the list of functions to only include Lambda@Edge functions replicated from a master function in US East (N. Virginia). If specified, you must set FunctionVersion to ALL .\n\n--function-version (string)\n\nSet to ALL to include entries for all published versions of each function.\n\nPossible values:\n\nALL\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextMarker -> (string)\n\nThe pagination token that’s included if more results are available.\n\nFunctions -> (list)\n\nA list of Lambda functions.\n\n(structure)\n\nDetails about a function’s configuration.\n\nFunctionName -> (string)\n\nThe name of the function.\n\nFunctionArn -> (string)\n\nThe function’s Amazon Resource Name (ARN).\n\nRuntime -> (string)\n\nThe runtime environment for the Lambda function.\n\nRole -> (string)\n\nThe function’s execution role.\n\nHandler -> (string)\n\nThe function that Lambda calls to begin executing your function.\n\nCodeSize -> (long)\n\nThe size of the function’s deployment package, in bytes.\n\nDescription -> (string)\n\nThe function’s description.\n\nTimeout -> (integer)\n\nThe amount of time in seconds that Lambda allows a function to run before stopping it.\n\nMemorySize -> (integer)\n\nThe amount of memory available to the function at runtime.\n\nLastModified -> (string)\n\nThe date and time that the function was last updated, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nCodeSha256 -> (string)\n\nThe SHA256 hash of the function’s deployment package.\n\nVersion -> (string)\n\nThe version of the Lambda function.\n\nVpcConfig -> (structure)\n\nThe function’s networking configuration.\n\nSubnetIds -> (list)\n\nA list of VPC subnet IDs.\n\n(string)\n\nSecurityGroupIds -> (list)\n\nA list of VPC security groups IDs.\n\n(string)\n\nVpcId -> (string)\n\nThe ID of the VPC.\n\nDeadLetterConfig -> (structure)\n\nThe function’s dead letter queue.\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\nEnvironment -> (structure)\n\nThe function’s environment variables .\n\nVariables -> (map)\n\nEnvironment variable key-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nError -> (structure)\n\nError messages for environment variables that couldn’t be applied.\n\nErrorCode -> (string)\n\nThe error code.\n\nMessage -> (string)\n\nThe error message.\n\nKMSKeyArn -> (string)\n\nThe KMS key that’s used to encrypt the function’s environment variables. This key is only returned if you’ve configured a customer managed CMK.\n\nTracingConfig -> (structure)\n\nThe function’s X-Ray tracing configuration.\n\nMode -> (string)\n\nThe tracing mode.\n\nMasterArn -> (string)\n\nFor Lambda@Edge functions, the ARN of the master function.\n\nRevisionId -> (string)\n\nThe latest updated revision of the function or alias.\n\nLayers -> (list)\n\nThe function’s layers .\n\n(structure)\n\nAn Lambda layer .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function layer.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nState -> (string)\n\nThe current state of the function. When the state is Inactive , you can reactivate the function by invoking it.\n\nStateReason -> (string)\n\nThe reason for the function’s current state.\n\nStateReasonCode -> (string)\n\nThe reason code for the function’s current state. When the code is Creating , you can’t invoke or modify the function.\n\nLastUpdateStatus -> (string)\n\nThe status of the last update that was performed on the function. This is first set to Successful after function creation completes.\n\nLastUpdateStatusReason -> (string)\n\nThe reason for the last update that was performed on the function.\n\nLastUpdateStatusReasonCode -> (string)\n\nThe reason code for the last update that was performed on the function.\n\nFileSystemConfigs -> (list)\n\nConnection settings for an Amazon EFS file system .\n\n(structure)\n\nDetails about the connection between a Lambda function and an Amazon EFS file system .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\nLocalMountPath -> (string)\n\nThe path where the function can access the file system, starting with /mnt/ .\n\nPackageType -> (string)\n\nThe type of deployment package. Set to Image for container image and set Zip for .zip file archive.\n\nImageConfigResponse -> (structure)\n\nThe function’s image configuration values.\n\nImageConfig -> (structure)\n\nConfiguration values that override the container image Dockerfile.\n\nEntryPoint -> (list)\n\nSpecifies the entry point to their application, which is typically the location of the runtime executable.\n\n(string)\n\nCommand -> (list)\n\nSpecifies parameters that you want to pass in with ENTRYPOINT.\n\n(string)\n\nWorkingDirectory -> (string)\n\nSpecifies the working directory.\n\nError -> (structure)\n\nError response to GetFunctionConfiguration.\n\nErrorCode -> (string)\n\nError code.\n\nMessage -> (string)\n\nError message.\n\nSigningProfileVersionArn -> (string)\n\nThe ARN of the signing profile version.\n\nSigningJobArn -> (string)\n\nThe ARN of the signing job.\n\nArchitectures -> (list)\n\nThe instruction set architecture that the function supports. Architecture is a string array with one of the valid values. The default architecture value is x86_64 .\n\n(string)",
      "command_examples": "Examples\n\nTo retrieve a list of Lambda functions\n\nThe following list-functions example displays a list of all of the functions for the current user.\n\naws lambda list-functions\n\n\nOutput:\n\n{\n    \"Functions\": [\n        {\n            \"TracingConfig\": {\n                \"Mode\": \"PassThrough\"\n            },\n            \"Version\": \"$LATEST\",\n            \"CodeSha256\": \"dBG9m8SGdmlEjw/JYXlhhvCrAv5TxvXsbL/RMr0fT/I=\",\n            \"FunctionName\": \"helloworld\",\n            \"MemorySize\": 128,\n            \"RevisionId\": \"1718e831-badf-4253-9518-d0644210af7b\",\n            \"CodeSize\": 294,\n            \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:helloworld\",\n            \"Handler\": \"helloworld.handler\",\n            \"Role\": \"arn:aws:iam::123456789012:role/service-role/MyTestFunction-role-zgur6bf4\",\n            \"Timeout\": 3,\n            \"LastModified\": \"2019-09-23T18:32:33.857+0000\",\n            \"Runtime\": \"nodejs10.x\",\n            \"Description\": \"\"\n        },\n        {\n            \"TracingConfig\": {\n                \"Mode\": \"PassThrough\"\n            },\n            \"Version\": \"$LATEST\",\n            \"CodeSha256\": \"sU0cJ2/hOZevwV/lTxCuQqK3gDZP3i8gUoqUUVRmY6E=\",\n            \"FunctionName\": \"my-function\",\n            \"VpcConfig\": {\n                \"SubnetIds\": [],\n                \"VpcId\": \"\",\n                \"SecurityGroupIds\": []\n            },\n            \"MemorySize\": 256,\n            \"RevisionId\": \"93017fc9-59cb-41dc-901b-4845ce4bf668\",\n            \"CodeSize\": 266,\n            \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function\",\n            \"Handler\": \"index.handler\",\n            \"Role\": \"arn:aws:iam::123456789012:role/service-role/helloWorldPython-role-uy3l9qyq\",\n            \"Timeout\": 3,\n            \"LastModified\": \"2019-10-01T16:47:28.490+0000\",\n            \"Runtime\": \"nodejs10.x\",\n            \"Description\": \"\"\n        },\n        {\n            \"Layers\": [\n                {\n                    \"CodeSize\": 41784542,\n                    \"Arn\": \"arn:aws:lambda:us-west-2:420165488524:layer:AWSLambda-Python37-SciPy1x:2\"\n                },\n                {\n                    \"CodeSize\": 4121,\n                    \"Arn\": \"arn:aws:lambda:us-west-2:123456789012:layer:pythonLayer:1\"\n                }\n            ],\n            \"TracingConfig\": {\n                \"Mode\": \"PassThrough\"\n            },\n            \"Version\": \"$LATEST\",\n            \"CodeSha256\": \"ZQukCqxtkqFgyF2cU41Avj99TKQ/hNihPtDtRcc08mI=\",\n            \"FunctionName\": \"my-python-function\",\n            \"VpcConfig\": {\n                \"SubnetIds\": [],\n                \"VpcId\": \"\",\n                \"SecurityGroupIds\": []\n            },\n            \"MemorySize\": 128,\n            \"RevisionId\": \"80b4eabc-acf7-4ea8-919a-e874c213707d\",\n            \"CodeSize\": 299,\n            \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-python-function\",\n            \"Handler\": \"lambda_function.lambda_handler\",\n            \"Role\": \"arn:aws:iam::123456789012:role/service-role/my-python-function-role-z5g7dr6n\",\n            \"Timeout\": 3,\n            \"LastModified\": \"2019-10-01T19:40:41.643+0000\",\n            \"Runtime\": \"python3.7\",\n            \"Description\": \"\"\n        }\n    ]\n}\n\n\nFor more information, see AWS Lambda Function Configuration in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "list-functions-by-code-signing-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-functions-by-code-signing-config.html",
      "command_description": "Description\n\nList the functions that use the specified code signing configuration. You can use this method prior to deleting a code signing configuration, to verify that no functions are using it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-functions-by-code-signing-config is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FunctionArns",
      "command_synopsis": "Synopsis\n  list-functions-by-code-signing-config\n--code-signing-config-arn <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--code-signing-config-arn <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--code-signing-config-arn (string)\n\nThe The Amazon Resource Name (ARN) of the code signing configuration.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextMarker -> (string)\n\nThe pagination token that’s included if more results are available.\n\nFunctionArns -> (list)\n\nThe function ARNs.\n\n(string)"
    },
    {
      "command_name": "list-layer-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-layer-versions.html",
      "command_description": "Description\n\nLists the versions of an Lambda layer . Versions that have been deleted aren’t listed. Specify a runtime identifier to list only versions that indicate that they’re compatible with that runtime. Specify a compatible architecture to include only layer versions that are compatible with that architecture.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-layer-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: LayerVersions",
      "command_synopsis": "Synopsis\n  list-layer-versions\n[--compatible-runtime <value>]\n--layer-name <value>\n[--max-items <value>]\n[--compatible-architecture <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--compatible-runtime <value>]",
        "--layer-name <value>",
        "[--max-items <value>]",
        "[--compatible-architecture <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--compatible-runtime (string)\n\nA runtime identifier. For example, go1.x .\n\nPossible values:\n\nnodejs\n\nnodejs4.3\n\nnodejs6.10\n\nnodejs8.10\n\nnodejs10.x\n\nnodejs12.x\n\nnodejs14.x\n\njava8\n\njava8.al2\n\njava11\n\npython2.7\n\npython3.6\n\npython3.7\n\npython3.8\n\npython3.9\n\ndotnetcore1.0\n\ndotnetcore2.0\n\ndotnetcore2.1\n\ndotnetcore3.1\n\nnodejs4.3-edge\n\ngo1.x\n\nruby2.5\n\nruby2.7\n\nprovided\n\nprovided.al2\n\n--layer-name (string)\n\nThe name or Amazon Resource Name (ARN) of the layer.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--compatible-architecture (string)\n\nThe compatible instruction set architecture .\n\nPossible values:\n\nx86_64\n\narm64\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextMarker -> (string)\n\nA pagination token returned when the response doesn’t contain all versions.\n\nLayerVersions -> (list)\n\nA list of versions.\n\n(structure)\n\nDetails about a version of an Lambda layer .\n\nLayerVersionArn -> (string)\n\nThe ARN of the layer version.\n\nVersion -> (long)\n\nThe version number.\n\nDescription -> (string)\n\nThe description of the version.\n\nCreatedDate -> (string)\n\nThe date that the version was created, in ISO 8601 format. For example, 2018-11-27T15:10:45.123+0000 .\n\nCompatibleRuntimes -> (list)\n\nThe layer’s compatible runtimes.\n\n(string)\n\nLicenseInfo -> (string)\n\nThe layer’s open-source license.\n\nCompatibleArchitectures -> (list)\n\nA list of compatible instruction set architectures .\n\n(string)",
      "command_examples": "Examples\n\nTo list the versions of an AWS Lambda layer\n\nThe following list-layers-versions example displays information about the versions for the layer named my-layer.\n\naws lambda list-layer-versions \\\n    --layer-name my-layer\n\n\nOutput:\n\n{\n    \"Layers\": [\n        {\n\n            \"LayerVersionArn\": \"arn:aws:lambda:us-east-2:123456789012:layer:my-layer:2\",\n            \"Version\": 2,\n            \"Description\": \"My layer\",\n            \"CreatedDate\": \"2018-11-15T00:37:46.592+0000\",\n            \"CompatibleRuntimes\": [\n                \"python3.6\",\n                \"python3.7\"\n            ]\n\n        }\n    ]\n}\n\n\nFor more information, see AWS Lambda Layers in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "list-layers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-layers.html",
      "command_description": "Description\n\nLists Lambda layers and shows information about the latest version of each. Specify a runtime identifier to list only layers that indicate that they’re compatible with that runtime. Specify a compatible architecture to include only layers that are compatible with that instruction set architecture .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-layers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Layers",
      "command_synopsis": "Synopsis\n  list-layers\n[--compatible-runtime <value>]\n[--max-items <value>]\n[--compatible-architecture <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--compatible-runtime <value>]",
        "[--max-items <value>]",
        "[--compatible-architecture <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--compatible-runtime (string)\n\nA runtime identifier. For example, go1.x .\n\nPossible values:\n\nnodejs\n\nnodejs4.3\n\nnodejs6.10\n\nnodejs8.10\n\nnodejs10.x\n\nnodejs12.x\n\nnodejs14.x\n\njava8\n\njava8.al2\n\njava11\n\npython2.7\n\npython3.6\n\npython3.7\n\npython3.8\n\npython3.9\n\ndotnetcore1.0\n\ndotnetcore2.0\n\ndotnetcore2.1\n\ndotnetcore3.1\n\nnodejs4.3-edge\n\ngo1.x\n\nruby2.5\n\nruby2.7\n\nprovided\n\nprovided.al2\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--compatible-architecture (string)\n\nThe compatible instruction set architecture .\n\nPossible values:\n\nx86_64\n\narm64\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextMarker -> (string)\n\nA pagination token returned when the response doesn’t contain all layers.\n\nLayers -> (list)\n\nA list of function layers.\n\n(structure)\n\nDetails about an Lambda layer .\n\nLayerName -> (string)\n\nThe name of the layer.\n\nLayerArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function layer.\n\nLatestMatchingVersion -> (structure)\n\nThe newest version of the layer.\n\nLayerVersionArn -> (string)\n\nThe ARN of the layer version.\n\nVersion -> (long)\n\nThe version number.\n\nDescription -> (string)\n\nThe description of the version.\n\nCreatedDate -> (string)\n\nThe date that the version was created, in ISO 8601 format. For example, 2018-11-27T15:10:45.123+0000 .\n\nCompatibleRuntimes -> (list)\n\nThe layer’s compatible runtimes.\n\n(string)\n\nLicenseInfo -> (string)\n\nThe layer’s open-source license.\n\nCompatibleArchitectures -> (list)\n\nA list of compatible instruction set architectures .\n\n(string)",
      "command_examples": "Examples\n\nTo list the layers that are compatible with your function’s runtime\n\nThe following list-layers example displays information about layers that are compatible with the Python 3.7 runtime.\n\naws lambda list-layers \\\n    --compatible-runtime python3.7\n\n\nOutput:\n\n{\n    \"Layers\": [\n        {\n            \"LayerName\": \"my-layer\",\n            \"LayerArn\": \"arn:aws:lambda:us-east-2:123456789012:layer:my-layer\",\n            \"LatestMatchingVersion\": {\n                \"LayerVersionArn\": \"arn:aws:lambda:us-east-2:123456789012:layer:my-layer:2\",\n                \"Version\": 2,\n                \"Description\": \"My layer\",\n                \"CreatedDate\": \"2018-11-15T00:37:46.592+0000\",\n                \"CompatibleRuntimes\": [\n                    \"python3.6\",\n                    \"python3.7\"\n                ]\n            }\n        }\n    ]\n}\n\n\nFor more information, see AWS Lambda Layers in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "list-provisioned-concurrency-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-provisioned-concurrency-configs.html",
      "command_description": "Description\n\nRetrieves a list of provisioned concurrency configurations for a function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-provisioned-concurrency-configs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ProvisionedConcurrencyConfigs",
      "command_synopsis": "Synopsis\n  list-provisioned-concurrency-configs\n--function-name <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nProvisionedConcurrencyConfigs -> (list)\n\nA list of provisioned concurrency configurations.\n\n(structure)\n\nDetails about the provisioned concurrency configuration for a function alias or version.\n\nFunctionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the alias or version.\n\nRequestedProvisionedConcurrentExecutions -> (integer)\n\nThe amount of provisioned concurrency requested.\n\nAvailableProvisionedConcurrentExecutions -> (integer)\n\nThe amount of provisioned concurrency available.\n\nAllocatedProvisionedConcurrentExecutions -> (integer)\n\nThe amount of provisioned concurrency allocated.\n\nStatus -> (string)\n\nThe status of the allocation process.\n\nStatusReason -> (string)\n\nFor failed allocations, the reason that provisioned concurrency could not be allocated.\n\nLastModified -> (string)\n\nThe date and time that a user last updated the configuration, in ISO 8601 format .\n\nNextMarker -> (string)\n\nThe pagination token that’s included if more results are available.",
      "command_examples": "Examples\n\nTo get a list of provisioned concurrency configurations\n\nThe following list-provisioned-concurrency-configs example lists the provisioned concurrency configurations for the specified function.\n\naws lambda list-provisioned-concurrency-configs \\\n    --function-name my-function\n\n\nOutput:\n\n{\n    \"ProvisionedConcurrencyConfigs\": [\n        {\n            \"FunctionArn\": \"arn:aws:lambda:us-east-2:123456789012:function:my-function:GREEN\",\n            \"RequestedProvisionedConcurrentExecutions\": 100,\n            \"AvailableProvisionedConcurrentExecutions\": 100,\n            \"AllocatedProvisionedConcurrentExecutions\": 100,\n            \"Status\": \"READY\",\n            \"LastModified\": \"2019-12-31T20:29:00+0000\"\n        },\n        {\n            \"FunctionArn\": \"arn:aws:lambda:us-east-2:123456789012:function:my-function:BLUE\",\n            \"RequestedProvisionedConcurrentExecutions\": 100,\n            \"AvailableProvisionedConcurrentExecutions\": 100,\n            \"AllocatedProvisionedConcurrentExecutions\": 100,\n            \"Status\": \"READY\",\n            \"LastModified\": \"2019-12-31T20:28:49+0000\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-tags.html",
      "command_description": "Description\n\nReturns a function’s tags . You can also view tags with GetFunction .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags\n--resource <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource (string)\n\nThe function’s Amazon Resource Name (ARN). Note: Lambda does not support adding tags to aliases or versions.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (map)\n\nThe function’s tags.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo retrieve the list of tags for a Lambda function\n\nThe following list-tags example displays the tags attached to the my-function Lambda function.\n\naws lambda list-tags \\\n    --resource arn:aws:lambda:us-west-2:123456789012:function:my-function\n\n\nOutput:\n\n{\n    \"Tags\": {\n        \"Category\": \"Web Tools\",\n        \"Department\": \"Sales\"\n    }\n}\n\n\nFor more information, see Tagging Lambda Functions in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "list-versions-by-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/list-versions-by-function.html",
      "command_description": "Description\n\nReturns a list of versions , with the version-specific configuration of each. Lambda returns up to 50 versions per call.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-versions-by-function is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Versions",
      "command_synopsis": "Synopsis\n  list-versions-by-function\n--function-name <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextMarker -> (string)\n\nThe pagination token that’s included if more results are available.\n\nVersions -> (list)\n\nA list of Lambda function versions.\n\n(structure)\n\nDetails about a function’s configuration.\n\nFunctionName -> (string)\n\nThe name of the function.\n\nFunctionArn -> (string)\n\nThe function’s Amazon Resource Name (ARN).\n\nRuntime -> (string)\n\nThe runtime environment for the Lambda function.\n\nRole -> (string)\n\nThe function’s execution role.\n\nHandler -> (string)\n\nThe function that Lambda calls to begin executing your function.\n\nCodeSize -> (long)\n\nThe size of the function’s deployment package, in bytes.\n\nDescription -> (string)\n\nThe function’s description.\n\nTimeout -> (integer)\n\nThe amount of time in seconds that Lambda allows a function to run before stopping it.\n\nMemorySize -> (integer)\n\nThe amount of memory available to the function at runtime.\n\nLastModified -> (string)\n\nThe date and time that the function was last updated, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nCodeSha256 -> (string)\n\nThe SHA256 hash of the function’s deployment package.\n\nVersion -> (string)\n\nThe version of the Lambda function.\n\nVpcConfig -> (structure)\n\nThe function’s networking configuration.\n\nSubnetIds -> (list)\n\nA list of VPC subnet IDs.\n\n(string)\n\nSecurityGroupIds -> (list)\n\nA list of VPC security groups IDs.\n\n(string)\n\nVpcId -> (string)\n\nThe ID of the VPC.\n\nDeadLetterConfig -> (structure)\n\nThe function’s dead letter queue.\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\nEnvironment -> (structure)\n\nThe function’s environment variables .\n\nVariables -> (map)\n\nEnvironment variable key-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nError -> (structure)\n\nError messages for environment variables that couldn’t be applied.\n\nErrorCode -> (string)\n\nThe error code.\n\nMessage -> (string)\n\nThe error message.\n\nKMSKeyArn -> (string)\n\nThe KMS key that’s used to encrypt the function’s environment variables. This key is only returned if you’ve configured a customer managed CMK.\n\nTracingConfig -> (structure)\n\nThe function’s X-Ray tracing configuration.\n\nMode -> (string)\n\nThe tracing mode.\n\nMasterArn -> (string)\n\nFor Lambda@Edge functions, the ARN of the master function.\n\nRevisionId -> (string)\n\nThe latest updated revision of the function or alias.\n\nLayers -> (list)\n\nThe function’s layers .\n\n(structure)\n\nAn Lambda layer .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function layer.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nState -> (string)\n\nThe current state of the function. When the state is Inactive , you can reactivate the function by invoking it.\n\nStateReason -> (string)\n\nThe reason for the function’s current state.\n\nStateReasonCode -> (string)\n\nThe reason code for the function’s current state. When the code is Creating , you can’t invoke or modify the function.\n\nLastUpdateStatus -> (string)\n\nThe status of the last update that was performed on the function. This is first set to Successful after function creation completes.\n\nLastUpdateStatusReason -> (string)\n\nThe reason for the last update that was performed on the function.\n\nLastUpdateStatusReasonCode -> (string)\n\nThe reason code for the last update that was performed on the function.\n\nFileSystemConfigs -> (list)\n\nConnection settings for an Amazon EFS file system .\n\n(structure)\n\nDetails about the connection between a Lambda function and an Amazon EFS file system .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\nLocalMountPath -> (string)\n\nThe path where the function can access the file system, starting with /mnt/ .\n\nPackageType -> (string)\n\nThe type of deployment package. Set to Image for container image and set Zip for .zip file archive.\n\nImageConfigResponse -> (structure)\n\nThe function’s image configuration values.\n\nImageConfig -> (structure)\n\nConfiguration values that override the container image Dockerfile.\n\nEntryPoint -> (list)\n\nSpecifies the entry point to their application, which is typically the location of the runtime executable.\n\n(string)\n\nCommand -> (list)\n\nSpecifies parameters that you want to pass in with ENTRYPOINT.\n\n(string)\n\nWorkingDirectory -> (string)\n\nSpecifies the working directory.\n\nError -> (structure)\n\nError response to GetFunctionConfiguration.\n\nErrorCode -> (string)\n\nError code.\n\nMessage -> (string)\n\nError message.\n\nSigningProfileVersionArn -> (string)\n\nThe ARN of the signing profile version.\n\nSigningJobArn -> (string)\n\nThe ARN of the signing job.\n\nArchitectures -> (list)\n\nThe instruction set architecture that the function supports. Architecture is a string array with one of the valid values. The default architecture value is x86_64 .\n\n(string)",
      "command_examples": "Examples\n\nTo retrieve a list of versions of a function\n\nThe following list-versions-by-function example displays the list of versions for the my-function Lambda function.\n\naws lambda list-versions-by-function \\\n    --function-name my-function\n\n\nOutput:\n\n{\n    \"Versions\": [\n        {\n            \"TracingConfig\": {\n                \"Mode\": \"PassThrough\"\n            },\n            \"Version\": \"$LATEST\",\n            \"CodeSha256\": \"sU0cJ2/hOZevwV/lTxCuQqK3gDZP3i8gUoqUUVRmY6E=\",\n            \"FunctionName\": \"my-function\",\n            \"VpcConfig\": {\n                \"SubnetIds\": [],\n                \"VpcId\": \"\",\n                \"SecurityGroupIds\": []\n            },\n            \"MemorySize\": 256,\n            \"RevisionId\": \"93017fc9-59cb-41dc-901b-4845ce4bf668\",\n            \"CodeSize\": 266,\n            \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function:$LATEST\",\n            \"Handler\": \"index.handler\",\n            \"Role\": \"arn:aws:iam::123456789012:role/service-role/helloWorldPython-role-uy3l9qyq\",\n            \"Timeout\": 3,\n            \"LastModified\": \"2019-10-01T16:47:28.490+0000\",\n            \"Runtime\": \"nodejs10.x\",\n            \"Description\": \"\"\n        },\n        {\n            \"TracingConfig\": {\n                \"Mode\": \"PassThrough\"\n            },\n            \"Version\": \"1\",\n            \"CodeSha256\": \"5tT2qgzYUHoqwR616pZ2dpkn/0J1FrzJmlKidWaaCgk=\",\n            \"FunctionName\": \"my-function\",\n            \"VpcConfig\": {\n                \"SubnetIds\": [],\n                \"VpcId\": \"\",\n                \"SecurityGroupIds\": []\n            },\n            \"MemorySize\": 256,\n            \"RevisionId\": \"949c8914-012e-4795-998c-e467121951b1\",\n            \"CodeSize\": 304,\n            \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function:1\",\n            \"Handler\": \"index.handler\",\n            \"Role\": \"arn:aws:iam::123456789012:role/service-role/helloWorldPython-role-uy3l9qyq\",\n            \"Timeout\": 3,\n            \"LastModified\": \"2019-09-26T20:28:40.438+0000\",\n            \"Runtime\": \"nodejs10.x\",\n            \"Description\": \"new version\"\n        },\n        {\n            \"TracingConfig\": {\n                \"Mode\": \"PassThrough\"\n            },\n            \"Version\": \"2\",\n            \"CodeSha256\": \"sU0cJ2/hOZevwV/lTxCuQqK3gDZP3i8gUoqUUVRmY6E=\",\n            \"FunctionName\": \"my-function\",\n            \"VpcConfig\": {\n                \"SubnetIds\": [],\n                \"VpcId\": \"\",\n                \"SecurityGroupIds\": []\n            },\n            \"MemorySize\": 256,\n            \"RevisionId\": \"cd669f21-0f3d-4e1c-9566-948837f2e2ea\",\n            \"CodeSize\": 266,\n            \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function:2\",\n            \"Handler\": \"index.handler\",\n            \"Role\": \"arn:aws:iam::123456789012:role/service-role/helloWorldPython-role-uy3l9qyq\",\n            \"Timeout\": 3,\n            \"LastModified\": \"2019-10-01T16:47:28.490+0000\",\n            \"Runtime\": \"nodejs10.x\",\n            \"Description\": \"newer version\"\n        }\n    ]\n}\n\n\nFor more information, see Configuring AWS Lambda Function Aliases in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "publish-layer-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/publish-layer-version.html",
      "command_description": "Description\n\nCreates an Lambda layer from a ZIP archive. Each time you call PublishLayerVersion with the same layer name, a new version is created.\n\nAdd layers to your function with CreateFunction or UpdateFunctionConfiguration .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  publish-layer-version\n--layer-name <value>\n[--description <value>]\n[--content <value>]\n[--compatible-runtimes <value>]\n[--license-info <value>]\n[--compatible-architectures <value>]\n[--zip-file <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-name <value>",
        "[--description <value>]",
        "[--content <value>]",
        "[--compatible-runtimes <value>]",
        "[--license-info <value>]",
        "[--compatible-architectures <value>]",
        "[--zip-file <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-name (string)\n\nThe name or Amazon Resource Name (ARN) of the layer.\n\n--description (string)\n\nThe description of the version.\n\n--content (structure)\n\nThe function layer archive.\n\nS3Bucket -> (string)\n\nThe Amazon S3 bucket of the layer archive.\n\nS3Key -> (string)\n\nThe Amazon S3 key of the layer archive.\n\nS3ObjectVersion -> (string)\n\nFor versioned objects, the version of the layer archive object to use.\n\nShorthand Syntax:\n\nS3Bucket=string,S3Key=string,S3ObjectVersion=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3Key\": \"string\",\n  \"S3ObjectVersion\": \"string\"\n}\n\n\n--compatible-runtimes (list)\n\nA list of compatible function runtimes . Used for filtering with ListLayers and ListLayerVersions .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  nodejs\n  nodejs4.3\n  nodejs6.10\n  nodejs8.10\n  nodejs10.x\n  nodejs12.x\n  nodejs14.x\n  java8\n  java8.al2\n  java11\n  python2.7\n  python3.6\n  python3.7\n  python3.8\n  python3.9\n  dotnetcore1.0\n  dotnetcore2.0\n  dotnetcore2.1\n  dotnetcore3.1\n  nodejs4.3-edge\n  go1.x\n  ruby2.5\n  ruby2.7\n  provided\n  provided.al2\n\n\n--license-info (string)\n\nThe layer’s software license. It can be any of the following:\n\nAn SPDX license identifier . For example, MIT .\n\nThe URL of a license hosted on the internet. For example, https://opensource.org/licenses/MIT .\n\nThe full text of the license.\n\n--compatible-architectures (list)\n\nA list of compatible instruction set architectures .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  x86_64\n  arm64\n\n\n--zip-file (blob)\n\nThe path to the zip file of the content you are uploading. Specify –zip-file or –content, but not both. Example: fileb://content.zip\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nContent -> (structure)\n\nDetails about the layer version.\n\nLocation -> (string)\n\nA link to the layer archive in Amazon S3 that is valid for 10 minutes.\n\nCodeSha256 -> (string)\n\nThe SHA-256 hash of the layer archive.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nLayerArn -> (string)\n\nThe ARN of the layer.\n\nLayerVersionArn -> (string)\n\nThe ARN of the layer version.\n\nDescription -> (string)\n\nThe description of the version.\n\nCreatedDate -> (string)\n\nThe date that the layer version was created, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nVersion -> (long)\n\nThe version number.\n\nCompatibleRuntimes -> (list)\n\nThe layer’s compatible runtimes.\n\n(string)\n\nLicenseInfo -> (string)\n\nThe layer’s software license.\n\nCompatibleArchitectures -> (list)\n\nA list of compatible instruction set architectures .\n\n(string)",
      "command_examples": "Examples\n\nTo create a Lambda layer version\n\nThe following publish-layer-version example creates a new Python library layer version. The command retrieves the layer content a file named layer.zip in the specified S3 bucket.\n\naws lambda publish-layer-version \\\n    --layer-name my-layer \\\n    --description \"My Python layer\" \\\n    --license-info \"MIT\" \\\n    --content S3Bucket=lambda-layers-us-west-2-123456789012,S3Key=layer.zip \\\n    --compatible-runtimes python3.6 python3.7\n\n\nOutput:\n\n{\n    \"Content\": {\n        \"Location\": \"https://awslambda-us-west-2-layers.s3.us-west-2.amazonaws.com/snapshots/123456789012/my-layer-4aaa2fbb-ff77-4b0a-ad92-5b78a716a96a?versionId=27iWyA73cCAYqyH...\",\n        \"CodeSha256\": \"tv9jJO+rPbXUUXuRKi7CwHzKtLDkDRJLB3cC3Z/ouXo=\",\n        \"CodeSize\": 169\n    },\n    \"LayerArn\": \"arn:aws:lambda:us-west-2:123456789012:layer:my-layer\",\n    \"LayerVersionArn\": \"arn:aws:lambda:us-west-2:123456789012:layer:my-layer:1\",\n    \"Description\": \"My Python layer\",\n    \"CreatedDate\": \"2018-11-14T23:03:52.894+0000\",\n    \"Version\": 1,\n    \"LicenseInfo\": \"MIT\",\n    \"CompatibleRuntimes\": [\n        \"python3.6\",\n        \"python3.7\"\n    ]\n}\n\n\nFor more information, see AWS Lambda Layers in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "publish-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/publish-version.html",
      "command_description": "Description\n\nCreates a version from the current code and configuration of a function. Use versions to create a snapshot of your function code and configuration that doesn’t change.\n\nLambda doesn’t publish a version if the function’s configuration and code haven’t changed since the last version. Use UpdateFunctionCode or UpdateFunctionConfiguration to update the function before publishing a version.\n\nClients can invoke versions directly or with an alias. To create an alias, use CreateAlias .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  publish-version\n--function-name <value>\n[--code-sha256 <value>]\n[--description <value>]\n[--revision-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--code-sha256 <value>]",
        "[--description <value>]",
        "[--revision-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--code-sha256 (string)\n\nOnly publish a version if the hash value matches the value that’s specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. You can get the hash for the version that you uploaded from the output of UpdateFunctionCode .\n\n--description (string)\n\nA description for the version to override the description in the function configuration.\n\n--revision-id (string)\n\nOnly update the function if the revision ID matches the ID that’s specified. Use this option to avoid publishing a version if the function configuration has changed since you last updated it.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionName -> (string)\n\nThe name of the function.\n\nFunctionArn -> (string)\n\nThe function’s Amazon Resource Name (ARN).\n\nRuntime -> (string)\n\nThe runtime environment for the Lambda function.\n\nRole -> (string)\n\nThe function’s execution role.\n\nHandler -> (string)\n\nThe function that Lambda calls to begin executing your function.\n\nCodeSize -> (long)\n\nThe size of the function’s deployment package, in bytes.\n\nDescription -> (string)\n\nThe function’s description.\n\nTimeout -> (integer)\n\nThe amount of time in seconds that Lambda allows a function to run before stopping it.\n\nMemorySize -> (integer)\n\nThe amount of memory available to the function at runtime.\n\nLastModified -> (string)\n\nThe date and time that the function was last updated, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nCodeSha256 -> (string)\n\nThe SHA256 hash of the function’s deployment package.\n\nVersion -> (string)\n\nThe version of the Lambda function.\n\nVpcConfig -> (structure)\n\nThe function’s networking configuration.\n\nSubnetIds -> (list)\n\nA list of VPC subnet IDs.\n\n(string)\n\nSecurityGroupIds -> (list)\n\nA list of VPC security groups IDs.\n\n(string)\n\nVpcId -> (string)\n\nThe ID of the VPC.\n\nDeadLetterConfig -> (structure)\n\nThe function’s dead letter queue.\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\nEnvironment -> (structure)\n\nThe function’s environment variables .\n\nVariables -> (map)\n\nEnvironment variable key-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nError -> (structure)\n\nError messages for environment variables that couldn’t be applied.\n\nErrorCode -> (string)\n\nThe error code.\n\nMessage -> (string)\n\nThe error message.\n\nKMSKeyArn -> (string)\n\nThe KMS key that’s used to encrypt the function’s environment variables. This key is only returned if you’ve configured a customer managed CMK.\n\nTracingConfig -> (structure)\n\nThe function’s X-Ray tracing configuration.\n\nMode -> (string)\n\nThe tracing mode.\n\nMasterArn -> (string)\n\nFor Lambda@Edge functions, the ARN of the master function.\n\nRevisionId -> (string)\n\nThe latest updated revision of the function or alias.\n\nLayers -> (list)\n\nThe function’s layers .\n\n(structure)\n\nAn Lambda layer .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function layer.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nState -> (string)\n\nThe current state of the function. When the state is Inactive , you can reactivate the function by invoking it.\n\nStateReason -> (string)\n\nThe reason for the function’s current state.\n\nStateReasonCode -> (string)\n\nThe reason code for the function’s current state. When the code is Creating , you can’t invoke or modify the function.\n\nLastUpdateStatus -> (string)\n\nThe status of the last update that was performed on the function. This is first set to Successful after function creation completes.\n\nLastUpdateStatusReason -> (string)\n\nThe reason for the last update that was performed on the function.\n\nLastUpdateStatusReasonCode -> (string)\n\nThe reason code for the last update that was performed on the function.\n\nFileSystemConfigs -> (list)\n\nConnection settings for an Amazon EFS file system .\n\n(structure)\n\nDetails about the connection between a Lambda function and an Amazon EFS file system .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\nLocalMountPath -> (string)\n\nThe path where the function can access the file system, starting with /mnt/ .\n\nPackageType -> (string)\n\nThe type of deployment package. Set to Image for container image and set Zip for .zip file archive.\n\nImageConfigResponse -> (structure)\n\nThe function’s image configuration values.\n\nImageConfig -> (structure)\n\nConfiguration values that override the container image Dockerfile.\n\nEntryPoint -> (list)\n\nSpecifies the entry point to their application, which is typically the location of the runtime executable.\n\n(string)\n\nCommand -> (list)\n\nSpecifies parameters that you want to pass in with ENTRYPOINT.\n\n(string)\n\nWorkingDirectory -> (string)\n\nSpecifies the working directory.\n\nError -> (structure)\n\nError response to GetFunctionConfiguration.\n\nErrorCode -> (string)\n\nError code.\n\nMessage -> (string)\n\nError message.\n\nSigningProfileVersionArn -> (string)\n\nThe ARN of the signing profile version.\n\nSigningJobArn -> (string)\n\nThe ARN of the signing job.\n\nArchitectures -> (list)\n\nThe instruction set architecture that the function supports. Architecture is a string array with one of the valid values. The default architecture value is x86_64 .\n\n(string)",
      "command_examples": "Examples\n\nTo publish a new version of a function\n\nThe following publish-version example publishes a new version of the my-function Lambda function.\n\naws lambda publish-version \\\n    --function-name my-function\n\n\nOutput:\n\n{\n    \"TracingConfig\": {\n        \"Mode\": \"PassThrough\"\n    },\n    \"CodeSha256\": \"dBG9m8SGdmlEjw/JYXlhhvCrAv5TxvXsbL/RMr0fT/I=\",\n    \"FunctionName\": \"my-function\",\n    \"CodeSize\": 294,\n    \"RevisionId\": \"f31d3d39-cc63-4520-97d4-43cd44c94c20\",\n    \"MemorySize\": 128,\n    \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function:3\",\n    \"Version\": \"2\",\n    \"Role\": \"arn:aws:iam::123456789012:role/service-role/MyTestFunction-role-zgur6bf4\",\n    \"Timeout\": 3,\n    \"LastModified\": \"2019-09-23T18:32:33.857+0000\",\n    \"Handler\": \"my-function.handler\",\n    \"Runtime\": \"nodejs10.x\",\n    \"Description\": \"\"\n}\n\n\nFor more information, see Configuring AWS Lambda Function Aliases in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "put-function-code-signing-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/put-function-code-signing-config.html",
      "command_description": "Description\n\nUpdate the code signing configuration for the function. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-function-code-signing-config\n--code-signing-config-arn <value>\n--function-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--code-signing-config-arn <value>",
        "--function-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--code-signing-config-arn (string)\n\nThe The Amazon Resource Name (ARN) of the code signing configuration.\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCodeSigningConfigArn -> (string)\n\nThe The Amazon Resource Name (ARN) of the code signing configuration.\n\nFunctionName -> (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length."
    },
    {
      "command_name": "put-function-concurrency",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/put-function-concurrency.html",
      "command_description": "Description\n\nSets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level.\n\nConcurrency settings apply to the function as a whole, including all published versions and the unpublished version. Reserving concurrency both ensures that your function has capacity to process the specified number of events simultaneously, and prevents it from scaling beyond that level. Use GetFunction to see the current setting for a function.\n\nUse GetAccountSettings to see your Regional concurrency limit. You can reserve concurrency for as many functions as you like, as long as you leave at least 100 simultaneous executions unreserved for functions that aren’t configured with a per-function limit. For more information, see Managing Concurrency .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-function-concurrency\n--function-name <value>\n--reserved-concurrent-executions <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "--reserved-concurrent-executions <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--reserved-concurrent-executions (integer)\n\nThe number of simultaneous executions to reserve for the function.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReservedConcurrentExecutions -> (integer)\n\nThe number of concurrent executions that are reserved for this function. For more information, see Managing Concurrency .",
      "command_examples": "Examples\n\nTo configure a reserved concurrency limit for a function\n\nThe following put-function-concurrency example configures 100 reserved concurrent executions for the my-function function.\n\naws lambda put-function-concurrency \\\n    --function-name  my-function  \\\n    --reserved-concurrent-executions 100\n\n\nOutput:\n\n{\n    \"ReservedConcurrentExecutions\": 100\n}\n\n\nFor more information, see Reserving Concurrency for a Lambda Function in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "put-function-event-invoke-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/put-function-event-invoke-config.html",
      "command_description": "Description\n\nConfigures options for asynchronous invocation on a function, version, or alias. If a configuration already exists for a function, version, or alias, this operation overwrites it. If you exclude any settings, they are removed. To set one option without affecting existing settings for other options, use UpdateFunctionEventInvokeConfig .\n\nBy default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous invocation queue for too long, Lambda discards it. To retain discarded events, configure a dead-letter queue with UpdateFunctionConfiguration .\n\nTo send an invocation record to a queue, topic, function, or event bus, specify a destination . You can configure separate destinations for successful invocations (on-success) and events that fail all processing attempts (on-failure). You can configure destinations in addition to or instead of a dead-letter queue.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-function-event-invoke-config\n--function-name <value>\n[--qualifier <value>]\n[--maximum-retry-attempts <value>]\n[--maximum-event-age-in-seconds <value>]\n[--destination-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--qualifier <value>]",
        "[--maximum-retry-attempts <value>]",
        "[--maximum-event-age-in-seconds <value>]",
        "[--destination-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function, version, or alias.\n\nName formats\n\nFunction name - my-function (name-only), my-function:v1 (with alias).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nA version number or alias name.\n\n--maximum-retry-attempts (integer)\n\nThe maximum number of times to retry when the function returns an error.\n\n--maximum-event-age-in-seconds (integer)\n\nThe maximum age of a request that Lambda sends to a function for processing.\n\n--destination-config (structure)\n\nA destination for events after they have been sent to a function for processing.\n\nDestinations\n\nFunction - The Amazon Resource Name (ARN) of a Lambda function.\n\nQueue - The ARN of an SQS queue.\n\nTopic - The ARN of an SNS topic.\n\nEvent Bus - The ARN of an Amazon EventBridge event bus.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nShorthand Syntax:\n\nOnSuccess={Destination=string},OnFailure={Destination=string}\n\n\nJSON Syntax:\n\n{\n  \"OnSuccess\": {\n    \"Destination\": \"string\"\n  },\n  \"OnFailure\": {\n    \"Destination\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLastModified -> (timestamp)\n\nThe date and time that the configuration was last updated.\n\nFunctionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nMaximumRetryAttempts -> (integer)\n\nThe maximum number of times to retry when the function returns an error.\n\nMaximumEventAgeInSeconds -> (integer)\n\nThe maximum age of a request that Lambda sends to a function for processing.\n\nDestinationConfig -> (structure)\n\nA destination for events after they have been sent to a function for processing.\n\nDestinations\n\nFunction - The Amazon Resource Name (ARN) of a Lambda function.\n\nQueue - The ARN of an SQS queue.\n\nTopic - The ARN of an SNS topic.\n\nEvent Bus - The ARN of an Amazon EventBridge event bus.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.",
      "command_examples": "Examples\n\nTo configure error handling for asynchronous invocation\n\nThe following put-function-event-invoke-config example sets a maximum event age of one hour and disables retries for the specified function.\n\naws lambda put-function-event-invoke-config \\\n    --function-name my-function \\\n    --maximum-event-age-in-seconds 3600 \\\n    --maximum-retry-attempts 0\n\n\nOutput:\n\n{\n    \"LastModified\": 1573686021.479,\n    \"FunctionArn\": \"arn:aws:lambda:us-east-2:123456789012:function:my-function:$LATEST\",\n    \"MaximumRetryAttempts\": 0,\n    \"MaximumEventAgeInSeconds\": 3600,\n    \"DestinationConfig\": {\n        \"OnSuccess\": {},\n        \"OnFailure\": {}\n    }\n}\n"
    },
    {
      "command_name": "put-provisioned-concurrency-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/put-provisioned-concurrency-config.html",
      "command_description": "Description\n\nAdds a provisioned concurrency configuration to a function’s alias or version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-provisioned-concurrency-config\n--function-name <value>\n--qualifier <value>\n--provisioned-concurrent-executions <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "--qualifier <value>",
        "--provisioned-concurrent-executions <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nThe version number or alias name.\n\n--provisioned-concurrent-executions (integer)\n\nThe amount of provisioned concurrency to allocate for the version or alias.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRequestedProvisionedConcurrentExecutions -> (integer)\n\nThe amount of provisioned concurrency requested.\n\nAvailableProvisionedConcurrentExecutions -> (integer)\n\nThe amount of provisioned concurrency available.\n\nAllocatedProvisionedConcurrentExecutions -> (integer)\n\nThe amount of provisioned concurrency allocated.\n\nStatus -> (string)\n\nThe status of the allocation process.\n\nStatusReason -> (string)\n\nFor failed allocations, the reason that provisioned concurrency could not be allocated.\n\nLastModified -> (string)\n\nThe date and time that a user last updated the configuration, in ISO 8601 format .",
      "command_examples": "Examples\n\nTo allocate provisioned concurrency\n\nThe following put-provisioned-concurrency-config example allocates 100 provisioned concurrency for the BLUE alias of the specified function.\n\naws lambda put-provisioned-concurrency-config \\\n    --function-name my-function \\\n    --qualifier BLUE \\\n    --provisioned-concurrent-executions 100\n\n\nOutput:\n\n{\n    \"Requested ProvisionedConcurrentExecutions\": 100,\n    \"Allocated ProvisionedConcurrentExecutions\": 0,\n    \"Status\": \"IN_PROGRESS\",\n    \"LastModified\": \"2019-11-21T19:32:12+0000\"\n}\n"
    },
    {
      "command_name": "remove-layer-version-permission",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/remove-layer-version-permission.html",
      "command_description": "Description\n\nRemoves a statement from the permissions policy for a version of an Lambda layer . For more information, see AddLayerVersionPermission .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-layer-version-permission\n--layer-name <value>\n--version-number <value>\n--statement-id <value>\n[--revision-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-name <value>",
        "--version-number <value>",
        "--statement-id <value>",
        "[--revision-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-name (string)\n\nThe name or Amazon Resource Name (ARN) of the layer.\n\n--version-number (long)\n\nThe version number.\n\n--statement-id (string)\n\nThe identifier that was specified when the statement was added.\n\n--revision-id (string)\n\nOnly update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a policy that has changed since you last read it.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete layer-version permissions\n\nThe following remove-layer-version-permission example deletes permission for an account to configure a layer version.\n\naws lambda remove-layer-version-permission \\\n    --layer-name my-layer \\\n    --statement-id xaccount \\\n    --version-number 1\n\n\nThis command produces no output.\n\nFor more information, see AWS Lambda Layers in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "remove-permission",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/remove-permission.html",
      "command_description": "Description\n\nRevokes function-use permission from an Amazon Web Services service or another account. You can get the ID of the statement from the output of GetPolicy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-permission\n--function-name <value>\n--statement-id <value>\n[--qualifier <value>]\n[--revision-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "--statement-id <value>",
        "[--qualifier <value>]",
        "[--revision-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function, version, or alias.\n\nName formats\n\nFunction name - my-function (name-only), my-function:v1 (with alias).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--statement-id (string)\n\nStatement ID of the permission to remove.\n\n--qualifier (string)\n\nSpecify a version or alias to remove permissions from a published version of the function.\n\n--revision-id (string)\n\nOnly update the policy if the revision ID matches the ID that’s specified. Use this option to avoid modifying a policy that has changed since you last read it.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove permissions from an existing Lambda function\n\nThe following remove-permission example removes permission to invoke a function named my-function.\n\naws lambda remove-permission \\\n    --function-name my-function \\\n    --statement-id sns\n\n\nThis command produces no output.\n\nFor more information, see Using Resource-based Policies for AWS Lambda in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/tag-resource.html",
      "command_description": "Description\n\nAdds tags to a function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource (string)\n\nThe function’s Amazon Resource Name (ARN).\n\n--tags (map)\n\nA list of tags to apply to the function.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add tags to an existing Lambda function\n\nThe following tag-resource example adds a tag with the key name DEPARTMENT and a value of Department A to the specified Lambda function.\n\naws lambda tag-resource \\\n    --resource arn:aws:lambda:us-west-2:123456789012:function:my-function \\\n    --tags \"DEPARTMENT=Department A\"\n\n\nThis command produces no output.\n\nFor more information, see Tagging Lambda Functions in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/untag-resource.html",
      "command_description": "Description\n\nRemoves tags from a function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource (string)\n\nThe function’s Amazon Resource Name (ARN).\n\n--tag-keys (list)\n\nA list of tag keys to remove from the function.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from an existing Lambda function\n\nThe following untag-resource example removes the tag with the key name DEPARTMENT tag from the my-function Lambda function.\n\naws lambda untag-resource \\\n    --resource arn:aws:lambda:us-west-2:123456789012:function:my-function \\\n    --tag-keys DEPARTMENT\n\n\nThis command produces no output.\n\nFor more information, see Tagging Lambda Functions in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "update-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/update-alias.html",
      "command_description": "Description\n\nUpdates the configuration of a Lambda function alias .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-alias\n--function-name <value>\n--name <value>\n[--function-version <value>]\n[--description <value>]\n[--routing-config <value>]\n[--revision-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "--name <value>",
        "[--function-version <value>]",
        "[--description <value>]",
        "[--routing-config <value>]",
        "[--revision-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--name (string)\n\nThe name of the alias.\n\n--function-version (string)\n\nThe function version that the alias invokes.\n\n--description (string)\n\nA description of the alias.\n\n--routing-config (structure)\n\nThe routing configuration of the alias.\n\nAdditionalVersionWeights -> (map)\n\nThe second version, and the percentage of traffic that’s routed to it.\n\nkey -> (string)\n\nvalue -> (double)\n\nShorthand Syntax:\n\nAdditionalVersionWeights={KeyName1=double,KeyName2=double}\n\n\nJSON Syntax:\n\n{\n  \"AdditionalVersionWeights\": {\"string\": double\n    ...}\n}\n\n\n--revision-id (string)\n\nOnly update the alias if the revision ID matches the ID that’s specified. Use this option to avoid modifying an alias that has changed since you last read it.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAliasArn -> (string)\n\nThe Amazon Resource Name (ARN) of the alias.\n\nName -> (string)\n\nThe name of the alias.\n\nFunctionVersion -> (string)\n\nThe function version that the alias invokes.\n\nDescription -> (string)\n\nA description of the alias.\n\nRoutingConfig -> (structure)\n\nThe routing configuration of the alias.\n\nAdditionalVersionWeights -> (map)\n\nThe second version, and the percentage of traffic that’s routed to it.\n\nkey -> (string)\n\nvalue -> (double)\n\nRevisionId -> (string)\n\nA unique identifier that changes when you update the alias.",
      "command_examples": "Examples\n\nTo update a function alias\n\nThe following update-alias example updates the alias named LIVE to point to version 3 of the my-function Lambda function.\n\naws lambda update-alias \\\n    --function-name my-function \\\n    --function-version 3 \\\n    --name LIVE\n\n\nOutput:\n\n{\n    \"FunctionVersion\": \"3\",\n    \"Name\": \"LIVE\",\n    \"AliasArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function:LIVE\",\n    \"RevisionId\": \"594f41fb-b85f-4c20-95c7-6ca5f2a92c93\",\n    \"Description\": \"alias for live version of function\"\n}\n\n\nFor more information, see Configuring AWS Lambda Function Aliases in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "update-code-signing-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/update-code-signing-config.html",
      "command_description": "Description\n\nUpdate the code signing configuration. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-code-signing-config\n--code-signing-config-arn <value>\n[--description <value>]\n[--allowed-publishers <value>]\n[--code-signing-policies <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--code-signing-config-arn <value>",
        "[--description <value>]",
        "[--allowed-publishers <value>]",
        "[--code-signing-policies <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--code-signing-config-arn (string)\n\nThe The Amazon Resource Name (ARN) of the code signing configuration.\n\n--description (string)\n\nDescriptive name for this code signing configuration.\n\n--allowed-publishers (structure)\n\nSigning profiles for this code signing configuration.\n\nSigningProfileVersionArns -> (list)\n\nThe Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.\n\n(string)\n\nShorthand Syntax:\n\nSigningProfileVersionArns=string,string\n\n\nJSON Syntax:\n\n{\n  \"SigningProfileVersionArns\": [\"string\", ...]\n}\n\n\n--code-signing-policies (structure)\n\nThe code signing policy.\n\nUntrustedArtifactOnDeployment -> (string)\n\nCode signing configuration policy for deployment validation failure. If you set the policy to Enforce , Lambda blocks the deployment request if signature validation checks fail. If you set the policy to Warn , Lambda allows the deployment and creates a CloudWatch log.\n\nDefault value: Warn\n\nShorthand Syntax:\n\nUntrustedArtifactOnDeployment=string\n\n\nJSON Syntax:\n\n{\n  \"UntrustedArtifactOnDeployment\": \"Warn\"|\"Enforce\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCodeSigningConfig -> (structure)\n\nThe code signing configuration\n\nCodeSigningConfigId -> (string)\n\nUnique identifer for the Code signing configuration.\n\nCodeSigningConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Code signing configuration.\n\nDescription -> (string)\n\nCode signing configuration description.\n\nAllowedPublishers -> (structure)\n\nList of allowed publishers.\n\nSigningProfileVersionArns -> (list)\n\nThe Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.\n\n(string)\n\nCodeSigningPolicies -> (structure)\n\nThe code signing policy controls the validation failure action for signature mismatch or expiry.\n\nUntrustedArtifactOnDeployment -> (string)\n\nCode signing configuration policy for deployment validation failure. If you set the policy to Enforce , Lambda blocks the deployment request if signature validation checks fail. If you set the policy to Warn , Lambda allows the deployment and creates a CloudWatch log.\n\nDefault value: Warn\n\nLastModified -> (string)\n\nThe date and time that the Code signing configuration was last modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD)."
    },
    {
      "command_name": "update-event-source-mapping",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/update-event-source-mapping.html",
      "command_description": "Description\n\nUpdates an event source mapping. You can change the function that Lambda invokes, or pause invocation and resume later from the same location.\n\nThe following error handling options are only available for stream sources (DynamoDB and Kinesis):\n\nBisectBatchOnFunctionError - If the function returns an error, split the batch in two and retry.\n\nDestinationConfig - Send discarded records to an Amazon SQS queue or Amazon SNS topic.\n\nMaximumRecordAgeInSeconds - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires\n\nMaximumRetryAttempts - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.\n\nParallelizationFactor - Process multiple batches from each shard concurrently.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-event-source-mapping\n--uuid <value>\n[--function-name <value>]\n[--enabled | --no-enabled]\n[--batch-size <value>]\n[--maximum-batching-window-in-seconds <value>]\n[--destination-config <value>]\n[--maximum-record-age-in-seconds <value>]\n[--bisect-batch-on-function-error | --no-bisect-batch-on-function-error]\n[--maximum-retry-attempts <value>]\n[--parallelization-factor <value>]\n[--source-access-configurations <value>]\n[--tumbling-window-in-seconds <value>]\n[--function-response-types <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--uuid <value>",
        "[--function-name <value>]",
        "[--enabled | --no-enabled]",
        "[--batch-size <value>]",
        "[--maximum-batching-window-in-seconds <value>]",
        "[--destination-config <value>]",
        "[--maximum-record-age-in-seconds <value>]",
        "[--bisect-batch-on-function-error | --no-bisect-batch-on-function-error]",
        "[--maximum-retry-attempts <value>]",
        "[--parallelization-factor <value>]",
        "[--source-access-configurations <value>]",
        "[--tumbling-window-in-seconds <value>]",
        "[--function-response-types <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--uuid (string)\n\nThe identifier of the event source mapping.\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - MyFunction .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction .\n\nVersion or Alias ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD .\n\nPartial ARN - 123456789012:function:MyFunction .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it’s limited to 64 characters in length.\n\n--enabled | --no-enabled (boolean)\n\nWhen true, the event source mapping is active. When false, Lambda pauses polling and invocation.\n\nDefault: True\n\n--batch-size (integer)\n\nThe maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).\n\nAmazon Kinesis - Default 100. Max 10,000.\n\nAmazon DynamoDB Streams - Default 100. Max 1,000.\n\nAmazon Simple Queue Service - Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.\n\nAmazon Managed Streaming for Apache Kafka - Default 100. Max 10,000.\n\nSelf-Managed Apache Kafka - Default 100. Max 10,000.\n\n--maximum-batching-window-in-seconds (integer)\n\n(Streams and Amazon SQS standard queues) The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.\n\nDefault: 0\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\n--destination-config (structure)\n\n(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nShorthand Syntax:\n\nOnSuccess={Destination=string},OnFailure={Destination=string}\n\n\nJSON Syntax:\n\n{\n  \"OnSuccess\": {\n    \"Destination\": \"string\"\n  },\n  \"OnFailure\": {\n    \"Destination\": \"string\"\n  }\n}\n\n\n--maximum-record-age-in-seconds (integer)\n\n(Streams only) Discard records older than the specified age. The default value is infinite (-1).\n\n--bisect-batch-on-function-error | --no-bisect-batch-on-function-error (boolean)\n\n(Streams only) If the function returns an error, split the batch in two and retry.\n\n--maximum-retry-attempts (integer)\n\n(Streams only) Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records will be retried until the record expires.\n\n--parallelization-factor (integer)\n\n(Streams only) The number of batches to process from each shard concurrently.\n\n--source-access-configurations (list)\n\nAn array of authentication protocols or VPC components required to secure your event source.\n\n(structure)\n\nTo secure and define access to your event source, you can specify the authentication protocol, VPC components, or virtual host.\n\nType -> (string)\n\nThe type of authentication protocol, VPC components, or virtual host for your event source. For example: \"Type\":\"SASL_SCRAM_512_AUTH\" .\n\nBASIC_AUTH - (Amazon MQ) The Secrets Manager secret that stores your broker credentials.\n\nBASIC_AUTH - (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL/PLAIN authentication of your Apache Kafka brokers.\n\nVPC_SUBNET - The subnets associated with your VPC. Lambda connects to these subnets to fetch data from your self-managed Apache Kafka cluster.\n\nVPC_SECURITY_GROUP - The VPC security group used to manage access to your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_256_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_512_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your self-managed Apache Kafka brokers.\n\nVIRTUAL_HOST - (Amazon MQ) The name of the virtual host in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event source.\n\nURI -> (string)\n\nThe value for your chosen configuration in Type . For example: \"URI\": \"arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName\" .\n\nShorthand Syntax:\n\nType=string,URI=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"BASIC_AUTH\"|\"VPC_SUBNET\"|\"VPC_SECURITY_GROUP\"|\"SASL_SCRAM_512_AUTH\"|\"SASL_SCRAM_256_AUTH\"|\"VIRTUAL_HOST\",\n    \"URI\": \"string\"\n  }\n  ...\n]\n\n\n--tumbling-window-in-seconds (integer)\n\n(Streams only) The duration in seconds of a processing window. The range is between 1 second up to 900 seconds.\n\n--function-response-types (list)\n\n(Streams only) A list of current response type enums applied to the event source mapping.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  ReportBatchItemFailures\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUUID -> (string)\n\nThe identifier of the event source mapping.\n\nStartingPosition -> (string)\n\nThe position in a stream from which to start reading. Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources. AT_TIMESTAMP is supported only for Amazon Kinesis streams.\n\nStartingPositionTimestamp -> (timestamp)\n\nWith StartingPosition set to AT_TIMESTAMP , the time from which to start reading.\n\nBatchSize -> (integer)\n\nThe maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).\n\nDefault value: Varies by service. For Amazon SQS, the default is 10. For all other services, the default is 100.\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\nMaximumBatchingWindowInSeconds -> (integer)\n\n(Streams and Amazon SQS standard queues) The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.\n\nDefault: 0\n\nRelated setting: When you set BatchSize to a value greater than 10, you must set MaximumBatchingWindowInSeconds to at least 1.\n\nParallelizationFactor -> (integer)\n\n(Streams only) The number of batches to process concurrently from each shard. The default value is 1.\n\nEventSourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the event source.\n\nFunctionArn -> (string)\n\nThe ARN of the Lambda function.\n\nLastModified -> (timestamp)\n\nThe date that the event source mapping was last updated or that its state changed.\n\nLastProcessingResult -> (string)\n\nThe result of the last Lambda invocation of your function.\n\nState -> (string)\n\nThe state of the event source mapping. It can be one of the following: Creating , Enabling , Enabled , Disabling , Disabled , Updating , or Deleting .\n\nStateTransitionReason -> (string)\n\nIndicates whether a user or Lambda made the last change to the event source mapping.\n\nDestinationConfig -> (structure)\n\n(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nTopics -> (list)\n\nThe name of the Kafka topic.\n\n(string)\n\nQueues -> (list)\n\n(Amazon MQ) The name of the Amazon MQ broker destination queue to consume.\n\n(string)\n\nSourceAccessConfigurations -> (list)\n\nAn array of the authentication protocol, VPC components, or virtual host to secure and define your event source.\n\n(structure)\n\nTo secure and define access to your event source, you can specify the authentication protocol, VPC components, or virtual host.\n\nType -> (string)\n\nThe type of authentication protocol, VPC components, or virtual host for your event source. For example: \"Type\":\"SASL_SCRAM_512_AUTH\" .\n\nBASIC_AUTH - (Amazon MQ) The Secrets Manager secret that stores your broker credentials.\n\nBASIC_AUTH - (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL/PLAIN authentication of your Apache Kafka brokers.\n\nVPC_SUBNET - The subnets associated with your VPC. Lambda connects to these subnets to fetch data from your self-managed Apache Kafka cluster.\n\nVPC_SECURITY_GROUP - The VPC security group used to manage access to your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_256_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your self-managed Apache Kafka brokers.\n\nSASL_SCRAM_512_AUTH - The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your self-managed Apache Kafka brokers.\n\nVIRTUAL_HOST - (Amazon MQ) The name of the virtual host in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event source.\n\nURI -> (string)\n\nThe value for your chosen configuration in Type . For example: \"URI\": \"arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName\" .\n\nSelfManagedEventSource -> (structure)\n\nThe self-managed Apache Kafka cluster for your event source.\n\nEndpoints -> (map)\n\nThe list of bootstrap servers for your Kafka brokers in the following format: \"KAFKA_BOOTSTRAP_SERVERS\": [\"abc.xyz.com:xxxx\",\"abc2.xyz.com:xxxx\"] .\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nMaximumRecordAgeInSeconds -> (integer)\n\n(Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.\n\nBisectBatchOnFunctionError -> (boolean)\n\n(Streams only) If the function returns an error, split the batch in two and retry. The default value is false.\n\nMaximumRetryAttempts -> (integer)\n\n(Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.\n\nTumblingWindowInSeconds -> (integer)\n\n(Streams only) The duration in seconds of a processing window. The range is 1–900 seconds.\n\nFunctionResponseTypes -> (list)\n\n(Streams only) A list of current response type enums applied to the event source mapping.\n\n(string)",
      "command_examples": "Examples\n\nTo update the mapping between an event source and an AWS Lambda function\n\nThe following update-event-source-mapping example updates the batch size to 8 in the specified mapping.\n\naws lambda update-event-source-mapping \\\n    --uuid  \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\" \\\n    --batch-size 8\n\n\nOutput:\n\n{\n    \"UUID\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n    \"StateTransitionReason\": \"USER_INITIATED\",\n    \"LastModified\": 1569284520.333,\n    \"BatchSize\": 8,\n    \"State\": \"Updating\",\n    \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function\",\n    \"EventSourceArn\": \"arn:aws:sqs:us-west-2:123456789012:mySQSqueue\"\n}\n\n\nFor more information, see AWS Lambda Event Source Mapping in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "update-function-code",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/update-function-code.html",
      "command_description": "Description\n\nUpdates a Lambda function’s code. If code signing is enabled for the function, the code package must be signed by a trusted publisher. For more information, see Configuring code signing .\n\nThe function’s code is locked when you publish a version. You can’t modify the code of a published version, only the unpublished version.\n\nNote\n\nFor a function defined as a container image, Lambda resolves the image tag to an image digest. In Amazon ECR, if you update the image tag to a new image, Lambda does not automatically update the function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-function-code\n--function-name <value>\n[--zip-file <value>]\n[--s3-bucket <value>]\n[--s3-key <value>]\n[--s3-object-version <value>]\n[--image-uri <value>]\n[--publish | --no-publish]\n[--dry-run | --no-dry-run]\n[--revision-id <value>]\n[--architectures <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--zip-file <value>]",
        "[--s3-bucket <value>]",
        "[--s3-key <value>]",
        "[--s3-object-version <value>]",
        "[--image-uri <value>]",
        "[--publish | --no-publish]",
        "[--dry-run | --no-dry-run]",
        "[--revision-id <value>]",
        "[--architectures <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--zip-file (blob)\n\nThe path to the zip file of the {param_type} you are uploading. Specify –zip-file or –{param_type}, but not both. Example: fileb://{param_type}.zip\n\n--s3-bucket (string)\n\nAn Amazon S3 bucket in the same Amazon Web Services Region as your function. The bucket can be in a different Amazon Web Services account.\n\n--s3-key (string)\n\nThe Amazon S3 key of the deployment package.\n\n--s3-object-version (string)\n\nFor versioned objects, the version of the deployment package object to use.\n\n--image-uri (string)\n\nURI of a container image in the Amazon ECR registry.\n\n--publish | --no-publish (boolean)\n\nSet to true to publish a new version of the function after updating the code. This has the same effect as calling PublishVersion separately.\n\n--dry-run | --no-dry-run (boolean)\n\nSet to true to validate the request parameters and access permissions without modifying the function code.\n\n--revision-id (string)\n\nOnly update the function if the revision ID matches the ID that’s specified. Use this option to avoid modifying a function that has changed since you last read it.\n\n--architectures (list)\n\nThe instruction set architecture that the function supports. Enter a string array with one of the valid values. The default value is x86_64 .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  x86_64\n  arm64\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionName -> (string)\n\nThe name of the function.\n\nFunctionArn -> (string)\n\nThe function’s Amazon Resource Name (ARN).\n\nRuntime -> (string)\n\nThe runtime environment for the Lambda function.\n\nRole -> (string)\n\nThe function’s execution role.\n\nHandler -> (string)\n\nThe function that Lambda calls to begin executing your function.\n\nCodeSize -> (long)\n\nThe size of the function’s deployment package, in bytes.\n\nDescription -> (string)\n\nThe function’s description.\n\nTimeout -> (integer)\n\nThe amount of time in seconds that Lambda allows a function to run before stopping it.\n\nMemorySize -> (integer)\n\nThe amount of memory available to the function at runtime.\n\nLastModified -> (string)\n\nThe date and time that the function was last updated, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nCodeSha256 -> (string)\n\nThe SHA256 hash of the function’s deployment package.\n\nVersion -> (string)\n\nThe version of the Lambda function.\n\nVpcConfig -> (structure)\n\nThe function’s networking configuration.\n\nSubnetIds -> (list)\n\nA list of VPC subnet IDs.\n\n(string)\n\nSecurityGroupIds -> (list)\n\nA list of VPC security groups IDs.\n\n(string)\n\nVpcId -> (string)\n\nThe ID of the VPC.\n\nDeadLetterConfig -> (structure)\n\nThe function’s dead letter queue.\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\nEnvironment -> (structure)\n\nThe function’s environment variables .\n\nVariables -> (map)\n\nEnvironment variable key-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nError -> (structure)\n\nError messages for environment variables that couldn’t be applied.\n\nErrorCode -> (string)\n\nThe error code.\n\nMessage -> (string)\n\nThe error message.\n\nKMSKeyArn -> (string)\n\nThe KMS key that’s used to encrypt the function’s environment variables. This key is only returned if you’ve configured a customer managed CMK.\n\nTracingConfig -> (structure)\n\nThe function’s X-Ray tracing configuration.\n\nMode -> (string)\n\nThe tracing mode.\n\nMasterArn -> (string)\n\nFor Lambda@Edge functions, the ARN of the master function.\n\nRevisionId -> (string)\n\nThe latest updated revision of the function or alias.\n\nLayers -> (list)\n\nThe function’s layers .\n\n(structure)\n\nAn Lambda layer .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function layer.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nState -> (string)\n\nThe current state of the function. When the state is Inactive , you can reactivate the function by invoking it.\n\nStateReason -> (string)\n\nThe reason for the function’s current state.\n\nStateReasonCode -> (string)\n\nThe reason code for the function’s current state. When the code is Creating , you can’t invoke or modify the function.\n\nLastUpdateStatus -> (string)\n\nThe status of the last update that was performed on the function. This is first set to Successful after function creation completes.\n\nLastUpdateStatusReason -> (string)\n\nThe reason for the last update that was performed on the function.\n\nLastUpdateStatusReasonCode -> (string)\n\nThe reason code for the last update that was performed on the function.\n\nFileSystemConfigs -> (list)\n\nConnection settings for an Amazon EFS file system .\n\n(structure)\n\nDetails about the connection between a Lambda function and an Amazon EFS file system .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\nLocalMountPath -> (string)\n\nThe path where the function can access the file system, starting with /mnt/ .\n\nPackageType -> (string)\n\nThe type of deployment package. Set to Image for container image and set Zip for .zip file archive.\n\nImageConfigResponse -> (structure)\n\nThe function’s image configuration values.\n\nImageConfig -> (structure)\n\nConfiguration values that override the container image Dockerfile.\n\nEntryPoint -> (list)\n\nSpecifies the entry point to their application, which is typically the location of the runtime executable.\n\n(string)\n\nCommand -> (list)\n\nSpecifies parameters that you want to pass in with ENTRYPOINT.\n\n(string)\n\nWorkingDirectory -> (string)\n\nSpecifies the working directory.\n\nError -> (structure)\n\nError response to GetFunctionConfiguration.\n\nErrorCode -> (string)\n\nError code.\n\nMessage -> (string)\n\nError message.\n\nSigningProfileVersionArn -> (string)\n\nThe ARN of the signing profile version.\n\nSigningJobArn -> (string)\n\nThe ARN of the signing job.\n\nArchitectures -> (list)\n\nThe instruction set architecture that the function supports. Architecture is a string array with one of the valid values. The default architecture value is x86_64 .\n\n(string)",
      "command_examples": "Examples\n\nTo update the code of a Lambda function\n\nThe following update-function-code example replaces the code of the unpublished ($LATEST) version of the my-function function with the contents of the specified zip file.\n\naws lambda update-function-code \\\n    --function-name  my-function \\\n    --zip-file fileb://my-function.zip\n\n\nOutput:\n\n{\n    \"FunctionName\": \"my-function\",\n    \"LastModified\": \"2019-09-26T20:28:40.438+0000\",\n    \"RevisionId\": \"e52502d4-9320-4688-9cd6-152a6ab7490d\",\n    \"MemorySize\": 256,\n    \"Version\": \"$LATEST\",\n    \"Role\": \"arn:aws:iam::123456789012:role/service-role/my-function-role-uy3l9qyq\",\n    \"Timeout\": 3,\n    \"Runtime\": \"nodejs10.x\",\n    \"TracingConfig\": {\n        \"Mode\": \"PassThrough\"\n    },\n    \"CodeSha256\": \"5tT2qgzYUHaqwR716pZ2dpkn/0J1FrzJmlKidWoaCgk=\",\n    \"Description\": \"\",\n    \"VpcConfig\": {\n        \"SubnetIds\": [],\n        \"VpcId\": \"\",\n        \"SecurityGroupIds\": []\n    },\n    \"CodeSize\": 304,\n    \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function\",\n    \"Handler\": \"index.handler\"\n}\n\n\nFor more information, see AWS Lambda Function Configuration in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "update-function-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/update-function-configuration.html",
      "command_description": "Description\n\nModify the version-specific settings of a Lambda function.\n\nWhen you update a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute. During this time, you can’t modify the function, but you can still invoke it. The LastUpdateStatus , LastUpdateStatusReason , and LastUpdateStatusReasonCode fields in the response from GetFunctionConfiguration indicate when the update is complete and the function is processing events with the new configuration. For more information, see Function States .\n\nThese settings can vary between versions of a function and are locked when you publish a version. You can’t modify the configuration of a published version, only the unpublished version.\n\nTo configure function concurrency, use PutFunctionConcurrency . To grant invoke permissions to an account or Amazon Web Services service, use AddPermission .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-function-configuration\n--function-name <value>\n[--role <value>]\n[--handler <value>]\n[--description <value>]\n[--timeout <value>]\n[--memory-size <value>]\n[--vpc-config <value>]\n[--environment <value>]\n[--runtime <value>]\n[--dead-letter-config <value>]\n[--kms-key-arn <value>]\n[--tracing-config <value>]\n[--revision-id <value>]\n[--layers <value>]\n[--file-system-configs <value>]\n[--image-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--role <value>]",
        "[--handler <value>]",
        "[--description <value>]",
        "[--timeout <value>]",
        "[--memory-size <value>]",
        "[--vpc-config <value>]",
        "[--environment <value>]",
        "[--runtime <value>]",
        "[--dead-letter-config <value>]",
        "[--kms-key-arn <value>]",
        "[--tracing-config <value>]",
        "[--revision-id <value>]",
        "[--layers <value>]",
        "[--file-system-configs <value>]",
        "[--image-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function.\n\nName formats\n\nFunction name - my-function .\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nThe length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--role (string)\n\nThe Amazon Resource Name (ARN) of the function’s execution role.\n\n--handler (string)\n\nThe name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see Programming Model .\n\n--description (string)\n\nA description of the function.\n\n--timeout (integer)\n\nThe amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For additional information, see Lambda execution environment .\n\n--memory-size (integer)\n\nThe amount of memory available to the function at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.\n\n--vpc-config (structure)\n\nFor network connectivity to Amazon Web Services resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see VPC Settings .\n\nSubnetIds -> (list)\n\nA list of VPC subnet IDs.\n\n(string)\n\nSecurityGroupIds -> (list)\n\nA list of VPC security groups IDs.\n\n(string)\n\nShorthand Syntax:\n\nSubnetIds=string,string,SecurityGroupIds=string,string\n\n\nJSON Syntax:\n\n{\n  \"SubnetIds\": [\"string\", ...],\n  \"SecurityGroupIds\": [\"string\", ...]\n}\n\n\n--environment (structure)\n\nEnvironment variables that are accessible from function code during execution.\n\nVariables -> (map)\n\nEnvironment variable key-value pairs. For more information, see Using Lambda environment variables .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nVariables={KeyName1=string,KeyName2=string}\n\n\nJSON Syntax:\n\n{\n  \"Variables\": {\"string\": \"string\"\n    ...}\n}\n\n\n--runtime (string)\n\nThe identifier of the function’s runtime .\n\nPossible values:\n\nnodejs\n\nnodejs4.3\n\nnodejs6.10\n\nnodejs8.10\n\nnodejs10.x\n\nnodejs12.x\n\nnodejs14.x\n\njava8\n\njava8.al2\n\njava11\n\npython2.7\n\npython3.6\n\npython3.7\n\npython3.8\n\npython3.9\n\ndotnetcore1.0\n\ndotnetcore2.0\n\ndotnetcore2.1\n\ndotnetcore3.1\n\nnodejs4.3-edge\n\ngo1.x\n\nruby2.5\n\nruby2.7\n\nprovided\n\nprovided.al2\n\n--dead-letter-config (structure)\n\nA dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see Dead Letter Queues .\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\nShorthand Syntax:\n\nTargetArn=string\n\n\nJSON Syntax:\n\n{\n  \"TargetArn\": \"string\"\n}\n\n\n--kms-key-arn (string)\n\nThe ARN of the Amazon Web Services Key Management Service (KMS) key that’s used to encrypt your function’s environment variables. If it’s not provided, Lambda uses a default service key.\n\n--tracing-config (structure)\n\nSet Mode to Active to sample and trace a subset of incoming requests with X-Ray .\n\nMode -> (string)\n\nThe tracing mode.\n\nShorthand Syntax:\n\nMode=string\n\n\nJSON Syntax:\n\n{\n  \"Mode\": \"Active\"|\"PassThrough\"\n}\n\n\n--revision-id (string)\n\nOnly update the function if the revision ID matches the ID that’s specified. Use this option to avoid modifying a function that has changed since you last read it.\n\n--layers (list)\n\nA list of function layers to add to the function’s execution environment. Specify each layer by its ARN, including the version.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--file-system-configs (list)\n\nConnection settings for an Amazon EFS file system.\n\n(structure)\n\nDetails about the connection between a Lambda function and an Amazon EFS file system .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\nLocalMountPath -> (string)\n\nThe path where the function can access the file system, starting with /mnt/ .\n\nShorthand Syntax:\n\nArn=string,LocalMountPath=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Arn\": \"string\",\n    \"LocalMountPath\": \"string\"\n  }\n  ...\n]\n\n\n--image-config (structure)\n\nContainer image configuration values that override the values in the container image Docker file.\n\nEntryPoint -> (list)\n\nSpecifies the entry point to their application, which is typically the location of the runtime executable.\n\n(string)\n\nCommand -> (list)\n\nSpecifies parameters that you want to pass in with ENTRYPOINT.\n\n(string)\n\nWorkingDirectory -> (string)\n\nSpecifies the working directory.\n\nShorthand Syntax:\n\nEntryPoint=string,string,Command=string,string,WorkingDirectory=string\n\n\nJSON Syntax:\n\n{\n  \"EntryPoint\": [\"string\", ...],\n  \"Command\": [\"string\", ...],\n  \"WorkingDirectory\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionName -> (string)\n\nThe name of the function.\n\nFunctionArn -> (string)\n\nThe function’s Amazon Resource Name (ARN).\n\nRuntime -> (string)\n\nThe runtime environment for the Lambda function.\n\nRole -> (string)\n\nThe function’s execution role.\n\nHandler -> (string)\n\nThe function that Lambda calls to begin executing your function.\n\nCodeSize -> (long)\n\nThe size of the function’s deployment package, in bytes.\n\nDescription -> (string)\n\nThe function’s description.\n\nTimeout -> (integer)\n\nThe amount of time in seconds that Lambda allows a function to run before stopping it.\n\nMemorySize -> (integer)\n\nThe amount of memory available to the function at runtime.\n\nLastModified -> (string)\n\nThe date and time that the function was last updated, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).\n\nCodeSha256 -> (string)\n\nThe SHA256 hash of the function’s deployment package.\n\nVersion -> (string)\n\nThe version of the Lambda function.\n\nVpcConfig -> (structure)\n\nThe function’s networking configuration.\n\nSubnetIds -> (list)\n\nA list of VPC subnet IDs.\n\n(string)\n\nSecurityGroupIds -> (list)\n\nA list of VPC security groups IDs.\n\n(string)\n\nVpcId -> (string)\n\nThe ID of the VPC.\n\nDeadLetterConfig -> (structure)\n\nThe function’s dead letter queue.\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\nEnvironment -> (structure)\n\nThe function’s environment variables .\n\nVariables -> (map)\n\nEnvironment variable key-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nError -> (structure)\n\nError messages for environment variables that couldn’t be applied.\n\nErrorCode -> (string)\n\nThe error code.\n\nMessage -> (string)\n\nThe error message.\n\nKMSKeyArn -> (string)\n\nThe KMS key that’s used to encrypt the function’s environment variables. This key is only returned if you’ve configured a customer managed CMK.\n\nTracingConfig -> (structure)\n\nThe function’s X-Ray tracing configuration.\n\nMode -> (string)\n\nThe tracing mode.\n\nMasterArn -> (string)\n\nFor Lambda@Edge functions, the ARN of the master function.\n\nRevisionId -> (string)\n\nThe latest updated revision of the function or alias.\n\nLayers -> (list)\n\nThe function’s layers .\n\n(structure)\n\nAn Lambda layer .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function layer.\n\nCodeSize -> (long)\n\nThe size of the layer archive in bytes.\n\nSigningProfileVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) for a signing profile version.\n\nSigningJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of a signing job.\n\nState -> (string)\n\nThe current state of the function. When the state is Inactive , you can reactivate the function by invoking it.\n\nStateReason -> (string)\n\nThe reason for the function’s current state.\n\nStateReasonCode -> (string)\n\nThe reason code for the function’s current state. When the code is Creating , you can’t invoke or modify the function.\n\nLastUpdateStatus -> (string)\n\nThe status of the last update that was performed on the function. This is first set to Successful after function creation completes.\n\nLastUpdateStatusReason -> (string)\n\nThe reason for the last update that was performed on the function.\n\nLastUpdateStatusReasonCode -> (string)\n\nThe reason code for the last update that was performed on the function.\n\nFileSystemConfigs -> (list)\n\nConnection settings for an Amazon EFS file system .\n\n(structure)\n\nDetails about the connection between a Lambda function and an Amazon EFS file system .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\nLocalMountPath -> (string)\n\nThe path where the function can access the file system, starting with /mnt/ .\n\nPackageType -> (string)\n\nThe type of deployment package. Set to Image for container image and set Zip for .zip file archive.\n\nImageConfigResponse -> (structure)\n\nThe function’s image configuration values.\n\nImageConfig -> (structure)\n\nConfiguration values that override the container image Dockerfile.\n\nEntryPoint -> (list)\n\nSpecifies the entry point to their application, which is typically the location of the runtime executable.\n\n(string)\n\nCommand -> (list)\n\nSpecifies parameters that you want to pass in with ENTRYPOINT.\n\n(string)\n\nWorkingDirectory -> (string)\n\nSpecifies the working directory.\n\nError -> (structure)\n\nError response to GetFunctionConfiguration.\n\nErrorCode -> (string)\n\nError code.\n\nMessage -> (string)\n\nError message.\n\nSigningProfileVersionArn -> (string)\n\nThe ARN of the signing profile version.\n\nSigningJobArn -> (string)\n\nThe ARN of the signing job.\n\nArchitectures -> (list)\n\nThe instruction set architecture that the function supports. Architecture is a string array with one of the valid values. The default architecture value is x86_64 .\n\n(string)",
      "command_examples": "Examples\n\nTo modify the configuration of a function\n\nThe following update-function-configuration example modifies the memory size to be 256 MB for the unpublished ($LATEST) version of the my-function function.\n\naws lambda update-function-configuration \\\n    --function-name  my-function \\\n    --memory-size 256\n\n\nOutput:\n\n{\n    \"FunctionName\": \"my-function\",\n    \"LastModified\": \"2019-09-26T20:28:40.438+0000\",\n    \"RevisionId\": \"e52502d4-9320-4688-9cd6-152a6ab7490d\",\n    \"MemorySize\": 256,\n    \"Version\": \"$LATEST\",\n    \"Role\": \"arn:aws:iam::123456789012:role/service-role/my-function-role-uy3l9qyq\",\n    \"Timeout\": 3,\n    \"Runtime\": \"nodejs10.x\",\n    \"TracingConfig\": {\n        \"Mode\": \"PassThrough\"\n    },\n    \"CodeSha256\": \"5tT2qgzYUHaqwR716pZ2dpkn/0J1FrzJmlKidWoaCgk=\",\n    \"Description\": \"\",\n    \"VpcConfig\": {\n        \"SubnetIds\": [],\n        \"VpcId\": \"\",\n        \"SecurityGroupIds\": []\n    },\n    \"CodeSize\": 304,\n    \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:my-function\",\n    \"Handler\": \"index.handler\"\n}\n\n\nFor more information, see AWS Lambda Function Configuration in the AWS Lambda Developer Guide."
    },
    {
      "command_name": "update-function-event-invoke-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/update-function-event-invoke-config.html",
      "command_description": "Description\n\nUpdates the configuration for asynchronous invocation for a function, version, or alias.\n\nTo configure options for asynchronous invocation, use PutFunctionEventInvokeConfig .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-function-event-invoke-config\n--function-name <value>\n[--qualifier <value>]\n[--maximum-retry-attempts <value>]\n[--maximum-event-age-in-seconds <value>]\n[--destination-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-name <value>",
        "[--qualifier <value>]",
        "[--maximum-retry-attempts <value>]",
        "[--maximum-event-age-in-seconds <value>]",
        "[--destination-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-name (string)\n\nThe name of the Lambda function, version, or alias.\n\nName formats\n\nFunction name - my-function (name-only), my-function:v1 (with alias).\n\nFunction ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .\n\nPartial ARN - 123456789012:function:my-function .\n\nYou can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.\n\n--qualifier (string)\n\nA version number or alias name.\n\n--maximum-retry-attempts (integer)\n\nThe maximum number of times to retry when the function returns an error.\n\n--maximum-event-age-in-seconds (integer)\n\nThe maximum age of a request that Lambda sends to a function for processing.\n\n--destination-config (structure)\n\nA destination for events after they have been sent to a function for processing.\n\nDestinations\n\nFunction - The Amazon Resource Name (ARN) of a Lambda function.\n\nQueue - The ARN of an SQS queue.\n\nTopic - The ARN of an SNS topic.\n\nEvent Bus - The ARN of an Amazon EventBridge event bus.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nShorthand Syntax:\n\nOnSuccess={Destination=string},OnFailure={Destination=string}\n\n\nJSON Syntax:\n\n{\n  \"OnSuccess\": {\n    \"Destination\": \"string\"\n  },\n  \"OnFailure\": {\n    \"Destination\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLastModified -> (timestamp)\n\nThe date and time that the configuration was last updated.\n\nFunctionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nMaximumRetryAttempts -> (integer)\n\nThe maximum number of times to retry when the function returns an error.\n\nMaximumEventAgeInSeconds -> (integer)\n\nThe maximum age of a request that Lambda sends to a function for processing.\n\nDestinationConfig -> (structure)\n\nA destination for events after they have been sent to a function for processing.\n\nDestinations\n\nFunction - The Amazon Resource Name (ARN) of a Lambda function.\n\nQueue - The ARN of an SQS queue.\n\nTopic - The ARN of an SNS topic.\n\nEvent Bus - The ARN of an Amazon EventBridge event bus.\n\nOnSuccess -> (structure)\n\nThe destination configuration for successful invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.\n\nOnFailure -> (structure)\n\nThe destination configuration for failed invocations.\n\nDestination -> (string)\n\nThe Amazon Resource Name (ARN) of the destination resource.",
      "command_examples": "Examples\n\nTo update an asynchronous invocation configuration\n\nThe following update-function-event-invoke-config example adds an on-failure destination to the existing asynchronous invocation configuration for the specified function.\n\naws lambda update-function-event-invoke-config \\\n    --function-name my-function \\\n    --destination-config '{\"OnFailure\":{\"Destination\": \"arn:aws:sqs:us-east-2:123456789012:destination\"}}'\n\n\nOutput:\n\n{\n    \"LastModified\": 1573687896.493,\n    \"FunctionArn\": \"arn:aws:lambda:us-east-2:123456789012:function:my-function:$LATEST\",\n    \"MaximumRetryAttempts\": 0,\n    \"MaximumEventAgeInSeconds\": 3600,\n    \"DestinationConfig\": {\n        \"OnSuccess\": {},\n        \"OnFailure\": {\n            \"Destination\": \"arn:aws:sqs:us-east-2:123456789012:destination\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    },
    {
      "command_name": "wizard",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/wizard/index.html",
      "command_description": "Description\n\nInteractive command for creating and configuring AWS resources.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\nwizard\n",
      "command_options": [],
      "command_options_description": "Options\n\nNone\n\nSee ‘aws help’ for descriptions of global parameters."
    }
  ],
  "service_description": "Description\n\nOverview\n\nThis is the Lambda API Reference . The Lambda Developer Guide provides additional information. For the service overview, see What is Lambda , and for information about how the service works, see Lambda: How it Works in the Lambda Developer Guide ."
}