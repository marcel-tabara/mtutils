{
  "service_name": "elb",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/index.html",
  "service_commands": [
    {
      "command_name": "add-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/add-tags.html",
      "command_description": "Description\n\nAdds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.\n\nEach tag consists of a key and an optional value. If a tag with the same key is already associated with the load balancer, AddTags updates its value.\n\nFor more information, see Tag Your Classic Load Balancer in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-tags\n--load-balancer-names <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-names <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-names (list)\n\nThe name of the load balancer. You can specify one load balancer only.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (list)\n\nThe tags.\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe key of the tag.\n\nValue -> (string)\n\nThe value of the tag.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a tag to a load balancer\n\nThis example adds tags to the specified load balancer.\n\nCommand:\n\naws elb add-tags --load-balancer-name my-load-balancer --tags \"Key=project,Value=lima\" \"Key=department,Value=digital-media\"\n"
    },
    {
      "command_name": "apply-security-groups-to-load-balancer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/apply-security-groups-to-load-balancer.html",
      "command_description": "Description\n\nAssociates one or more security groups with your load balancer in a virtual private cloud (VPC). The specified security groups override the previously associated security groups.\n\nFor more information, see Security Groups for Load Balancers in a VPC in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  apply-security-groups-to-load-balancer\n--load-balancer-name <value>\n--security-groups <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--security-groups <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--security-groups (list)\n\nThe IDs of the security groups to associate with the load balancer. Note that you cannot specify the name of the security group.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSecurityGroups -> (list)\n\nThe IDs of the security groups associated with the load balancer.\n\n(string)",
      "command_examples": "Examples\n\nTo associate a security group with a load balancer in a VPC\n\nThis example associates a security group with the specified load balancer in a VPC.\n\nCommand:\n\naws elb apply-security-groups-to-load-balancer --load-balancer-name my-load-balancer --security-groups sg-fc448899\n\n\nOutput:\n\n{\n  \"SecurityGroups\": [\n      \"sg-fc448899\"\n  ]\n}\n"
    },
    {
      "command_name": "attach-load-balancer-to-subnets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/attach-load-balancer-to-subnets.html",
      "command_description": "Description\n\nAdds one or more subnets to the set of configured subnets for the specified load balancer.\n\nThe load balancer evenly distributes requests across all registered subnets. For more information, see Add or Remove Subnets for Your Load Balancer in a VPC in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  attach-load-balancer-to-subnets\n--load-balancer-name <value>\n--subnets <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--subnets <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--subnets (list)\n\nThe IDs of the subnets to add. You can add only one subnet per Availability Zone.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSubnets -> (list)\n\nThe IDs of the subnets attached to the load balancer.\n\n(string)",
      "command_examples": "Examples\n\nTo attach subnets to a load balancer\n\nThis example adds the specified subnet to the set of configured subnets for the specified load balancer.\n\nCommand:\n\naws elb attach-load-balancer-to-subnets --load-balancer-name my-load-balancer --subnets subnet-0ecac448\n\n\nOutput:\n\n{\n   \"Subnets\": [\n       \"subnet-15aaab61\",\n       \"subnet-0ecac448\"\n   ]\n}\n"
    },
    {
      "command_name": "configure-health-check",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/configure-health-check.html",
      "command_description": "Description\n\nSpecifies the health check settings to use when evaluating the health state of your EC2 instances.\n\nFor more information, see Configure Health Checks for Your Load Balancer in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  configure-health-check\n--load-balancer-name <value>\n--health-check <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--health-check <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--health-check (structure)\n\nThe configuration information.\n\nTarget -> (string)\n\nThe instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535.\n\nTCP is the default, specified as a TCP: port pair, for example “TCP:5000”. In this case, a health check simply attempts to open a TCP connection to the instance on the specified port. Failure to connect within the configured timeout is considered unhealthy.\n\nSSL is also specified as SSL: port pair, for example, SSL:5000.\n\nFor HTTP/HTTPS, you must include a ping path in the string. HTTP is specified as a HTTP:port;/;PathToPing; grouping, for example “HTTP:80/weather/us/wa/seattle”. In this case, a HTTP GET request is issued to the instance on the given port and path. Any answer other than “200 OK” within the timeout period is considered unhealthy.\n\nThe total length of the HTTP ping target must be 1024 16-bit Unicode characters or less.\n\nInterval -> (integer)\n\nThe approximate interval, in seconds, between health checks of an individual instance.\n\nTimeout -> (integer)\n\nThe amount of time, in seconds, during which no response means a failed health check.\n\nThis value must be less than the Interval value.\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive health check failures required before moving the instance to the Unhealthy state.\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive health checks successes required before moving the instance to the Healthy state.\n\nShorthand Syntax:\n\nTarget=string,Interval=integer,Timeout=integer,UnhealthyThreshold=integer,HealthyThreshold=integer\n\n\nJSON Syntax:\n\n{\n  \"Target\": \"string\",\n  \"Interval\": integer,\n  \"Timeout\": integer,\n  \"UnhealthyThreshold\": integer,\n  \"HealthyThreshold\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHealthCheck -> (structure)\n\nThe updated health check.\n\nTarget -> (string)\n\nThe instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535.\n\nTCP is the default, specified as a TCP: port pair, for example “TCP:5000”. In this case, a health check simply attempts to open a TCP connection to the instance on the specified port. Failure to connect within the configured timeout is considered unhealthy.\n\nSSL is also specified as SSL: port pair, for example, SSL:5000.\n\nFor HTTP/HTTPS, you must include a ping path in the string. HTTP is specified as a HTTP:port;/;PathToPing; grouping, for example “HTTP:80/weather/us/wa/seattle”. In this case, a HTTP GET request is issued to the instance on the given port and path. Any answer other than “200 OK” within the timeout period is considered unhealthy.\n\nThe total length of the HTTP ping target must be 1024 16-bit Unicode characters or less.\n\nInterval -> (integer)\n\nThe approximate interval, in seconds, between health checks of an individual instance.\n\nTimeout -> (integer)\n\nThe amount of time, in seconds, during which no response means a failed health check.\n\nThis value must be less than the Interval value.\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive health check failures required before moving the instance to the Unhealthy state.\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive health checks successes required before moving the instance to the Healthy state.",
      "command_examples": "Examples\n\nTo specify the health check settings for your backend EC2 instances\n\nThis example specifies the health check settings used to evaluate the health of your backend EC2 instances.\n\nCommand:\n\naws elb configure-health-check --load-balancer-name my-load-balancer --health-check Target=HTTP:80/png,Interval=30,UnhealthyThreshold=2,HealthyThreshold=2,Timeout=3\n\n\nOutput:\n\n{\n   \"HealthCheck\": {\n       \"HealthyThreshold\": 2,\n       \"Interval\": 30,\n       \"Target\": \"HTTP:80/png\",\n       \"Timeout\": 3,\n       \"UnhealthyThreshold\": 2\n   }\n}\n"
    },
    {
      "command_name": "create-app-cookie-stickiness-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/create-app-cookie-stickiness-policy.html",
      "command_description": "Description\n\nGenerates a stickiness policy with sticky session lifetimes that follow that of an application-generated cookie. This policy can be associated only with HTTP/HTTPS listeners.\n\nThis policy is similar to the policy created by CreateLBCookieStickinessPolicy , except that the lifetime of the special Elastic Load Balancing cookie, AWSELB , follows the lifetime of the application-generated cookie specified in the policy configuration. The load balancer only inserts a new stickiness cookie when the application response includes a new application cookie.\n\nIf the application cookie is explicitly removed or expires, the session stops being sticky until a new application cookie is issued.\n\nFor more information, see Application-Controlled Session Stickiness in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-app-cookie-stickiness-policy\n--load-balancer-name <value>\n--policy-name <value>\n--cookie-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--policy-name <value>",
        "--cookie-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--policy-name (string)\n\nThe name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.\n\n--cookie-name (string)\n\nThe name of the application cookie used for stickiness.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo generate a stickiness policy for your HTTPS load balancer\n\nThis example generates a stickiness policy that follows the sticky session lifetimes of the application-generated cookie.\n\nCommand:\n\naws elb create-app-cookie-stickiness-policy --load-balancer-name my-load-balancer --policy-name my-app-cookie-policy --cookie-name my-app-cookie\n"
    },
    {
      "command_name": "create-lb-cookie-stickiness-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/create-lb-cookie-stickiness-policy.html",
      "command_description": "Description\n\nGenerates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent) or a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.\n\nWhen a load balancer implements this policy, the load balancer uses a special cookie to track the instance for each request. When the load balancer receives a request, it first checks to see if this cookie is present in the request. If so, the load balancer sends the request to the application server specified in the cookie. If not, the load balancer sends the request to a server that is chosen based on the existing load-balancing algorithm.\n\nA cookie is inserted into the response for binding subsequent requests from the same user to that server. The validity of the cookie is based on the cookie expiration time, which is specified in the policy configuration.\n\nFor more information, see Duration-Based Session Stickiness in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-lb-cookie-stickiness-policy\n--load-balancer-name <value>\n--policy-name <value>\n[--cookie-expiration-period <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--policy-name <value>",
        "[--cookie-expiration-period <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--policy-name (string)\n\nThe name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.\n\n--cookie-expiration-period (long)\n\nThe time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo generate a duration-based stickiness policy for your HTTPS load balancer\n\nThis example generates a stickiness policy with sticky session lifetimes controlled by the specified expiration period.\n\nCommand:\n\naws elb create-lb-cookie-stickiness-policy --load-balancer-name my-load-balancer --policy-name my-duration-cookie-policy --cookie-expiration-period 60\n"
    },
    {
      "command_name": "create-load-balancer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/create-load-balancer.html",
      "command_description": "Description\n\nCreates a Classic Load Balancer.\n\nYou can add listeners, security groups, subnets, and tags when you create your load balancer, or you can add them later using CreateLoadBalancerListeners , ApplySecurityGroupsToLoadBalancer , AttachLoadBalancerToSubnets , and AddTags .\n\nTo describe your current load balancers, see DescribeLoadBalancers . When you are finished with a load balancer, you can delete it using DeleteLoadBalancer .\n\nYou can create up to 20 load balancers per region per account. You can request an increase for the number of load balancers for your account. For more information, see Limits for Your Classic Load Balancer in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-load-balancer\n--load-balancer-name <value>\n--listeners <value>\n[--availability-zones <value>]\n[--subnets <value>]\n[--security-groups <value>]\n[--scheme <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--listeners <value>",
        "[--availability-zones <value>]",
        "[--subnets <value>]",
        "[--security-groups <value>]",
        "[--scheme <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\nThis name must be unique within your set of load balancers for the region, must have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen.\n\n--listeners (list)\n\nThe listeners.\n\nFor more information, see Listeners for Your Classic Load Balancer in the Classic Load Balancers Guide .\n\n(structure)\n\nInformation about a listener.\n\nFor information about the protocols and the ports supported by Elastic Load Balancing, see Listeners for Your Classic Load Balancer in the Classic Load Balancers Guide .\n\nProtocol -> (string)\n\nThe load balancer transport protocol to use for routing: HTTP, HTTPS, TCP, or SSL.\n\nLoadBalancerPort -> (integer)\n\nThe port on which the load balancer is listening. On EC2-VPC, you can specify any port from the range 1-65535. On EC2-Classic, you can specify any port from the following list: 25, 80, 443, 465, 587, 1024-65535.\n\nInstanceProtocol -> (string)\n\nThe protocol to use for routing traffic to instances: HTTP, HTTPS, TCP, or SSL.\n\nIf the front-end protocol is TCP or SSL, the back-end protocol must be TCP or SSL. If the front-end protocol is HTTP or HTTPS, the back-end protocol must be HTTP or HTTPS.\n\nIf there is another listener with the same InstancePort whose InstanceProtocol is secure, (HTTPS or SSL), the listener’s InstanceProtocol must also be secure.\n\nIf there is another listener with the same InstancePort whose InstanceProtocol is HTTP or TCP, the listener’s InstanceProtocol must be HTTP or TCP.\n\nInstancePort -> (integer)\n\nThe port on which the instance is listening.\n\nSSLCertificateId -> (string)\n\nThe Amazon Resource Name (ARN) of the server certificate.\n\nShorthand Syntax:\n\nProtocol=string,LoadBalancerPort=integer,InstanceProtocol=string,InstancePort=integer,SSLCertificateId=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Protocol\": \"string\",\n    \"LoadBalancerPort\": integer,\n    \"InstanceProtocol\": \"string\",\n    \"InstancePort\": integer,\n    \"SSLCertificateId\": \"string\"\n  }\n  ...\n]\n\n\n--availability-zones (list)\n\nOne or more Availability Zones from the same region as the load balancer.\n\nYou must specify at least one Availability Zone.\n\nYou can add more Availability Zones after you create the load balancer using EnableAvailabilityZonesForLoadBalancer .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--subnets (list)\n\nThe IDs of the subnets in your VPC to attach to the load balancer. Specify one subnet per Availability Zone specified in AvailabilityZones .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--security-groups (list)\n\nThe IDs of the security groups to assign to the load balancer.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--scheme (string)\n\nThe type of a load balancer. Valid only for load balancers in a VPC.\n\nBy default, Elastic Load Balancing creates an Internet-facing load balancer with a DNS name that resolves to public IP addresses. For more information about Internet-facing and Internal load balancers, see Load Balancer Scheme in the Elastic Load Balancing User Guide .\n\nSpecify internal to create a load balancer with a DNS name that resolves to private IP addresses.\n\n--tags (list)\n\nA list of tags to assign to the load balancer.\n\nFor more information about tagging your load balancer, see Tag Your Classic Load Balancer in the Classic Load Balancers Guide .\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe key of the tag.\n\nValue -> (string)\n\nThe value of the tag.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDNSName -> (string)\n\nThe DNS name of the load balancer.",
      "command_examples": "Examples\n\nTo create an HTTP load balancer\n\nThis example creates a load balancer with an HTTP listener in a VPC.\n\nCommand:\n\naws elb create-load-balancer --load-balancer-name my-load-balancer --listeners \"Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80\" --subnets subnet-15aaab61 --security-groups sg-a61988c3\n\n\nOutput:\n\n{\n    \"DNSName\": \"my-load-balancer-1234567890.us-west-2.elb.amazonaws.com\"\n}\n\n\nThis example creates a load balancer with an HTTP listener in EC2-Classic.\n\nCommand:\n\naws elb create-load-balancer --load-balancer-name my-load-balancer --listeners \"Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80\" --availability-zones us-west-2a us-west-2b\n\n\nOutput:\n\n{\n    \"DNSName\": \"my-load-balancer-123456789.us-west-2.elb.amazonaws.com\"\n}\n\n\nTo create an HTTPS load balancer\n\nThis example creates a load balancer with an HTTPS listener in a VPC.\n\nCommand:\n\naws elb create-load-balancer --load-balancer-name my-load-balancer --listeners \"Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80\" \"Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80,SSLCertificateId=arn:aws:iam::123456789012:server-certificate/my-server-cert\" --subnets subnet-15aaab61 --security-groups sg-a61988c3\n\n\nOutput:\n\n{\n    \"DNSName\": \"my-load-balancer-1234567890.us-west-2.elb.amazonaws.com\"\n}\n\n\nThis example creates a load balancer with an HTTPS listener in EC2-Classic.\n\nCommand:\n\naws elb create-load-balancer --load-balancer-name my-load-balancer --listeners \"Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80\" \"Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80,SSLCertificateId=arn:aws:iam::123456789012:server-certificate/my-server-cert\" --availability-zones us-west-2a us-west-2b\n\n\nOutput:\n\n{\n    \"DNSName\": \"my-load-balancer-123456789.us-west-2.elb.amazonaws.com\"\n}\n\n\nTo create an internal load balancer\n\nThis example creates an internal load balancer with an HTTP listener in a VPC.\n\nCommand:\n\naws elb create-load-balancer --load-balancer-name my-load-balancer --listeners \"Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80\" --scheme internal --subnets subnet-a85db0df --security-groups sg-a61988c3\n\n\nOutput:\n\n{\n    \"DNSName\": \"internal-my-load-balancer-123456789.us-west-2.elb.amazonaws.com\"\n}\n"
    },
    {
      "command_name": "create-load-balancer-listeners",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/create-load-balancer-listeners.html",
      "command_description": "Description\n\nCreates one or more listeners for the specified load balancer. If a listener with the specified port does not already exist, it is created; otherwise, the properties of the new listener must match the properties of the existing listener.\n\nFor more information, see Listeners for Your Classic Load Balancer in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-load-balancer-listeners\n--load-balancer-name <value>\n--listeners <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--listeners <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--listeners (list)\n\nThe listeners.\n\n(structure)\n\nInformation about a listener.\n\nFor information about the protocols and the ports supported by Elastic Load Balancing, see Listeners for Your Classic Load Balancer in the Classic Load Balancers Guide .\n\nProtocol -> (string)\n\nThe load balancer transport protocol to use for routing: HTTP, HTTPS, TCP, or SSL.\n\nLoadBalancerPort -> (integer)\n\nThe port on which the load balancer is listening. On EC2-VPC, you can specify any port from the range 1-65535. On EC2-Classic, you can specify any port from the following list: 25, 80, 443, 465, 587, 1024-65535.\n\nInstanceProtocol -> (string)\n\nThe protocol to use for routing traffic to instances: HTTP, HTTPS, TCP, or SSL.\n\nIf the front-end protocol is TCP or SSL, the back-end protocol must be TCP or SSL. If the front-end protocol is HTTP or HTTPS, the back-end protocol must be HTTP or HTTPS.\n\nIf there is another listener with the same InstancePort whose InstanceProtocol is secure, (HTTPS or SSL), the listener’s InstanceProtocol must also be secure.\n\nIf there is another listener with the same InstancePort whose InstanceProtocol is HTTP or TCP, the listener’s InstanceProtocol must be HTTP or TCP.\n\nInstancePort -> (integer)\n\nThe port on which the instance is listening.\n\nSSLCertificateId -> (string)\n\nThe Amazon Resource Name (ARN) of the server certificate.\n\nShorthand Syntax:\n\nProtocol=string,LoadBalancerPort=integer,InstanceProtocol=string,InstancePort=integer,SSLCertificateId=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Protocol\": \"string\",\n    \"LoadBalancerPort\": integer,\n    \"InstanceProtocol\": \"string\",\n    \"InstancePort\": integer,\n    \"SSLCertificateId\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo create HTTP listeners for a load balancer\n\nThis example creates a listener for your load balancer at port 80 using the HTTP protocol.\n\nCommand:\n\naws elb create-load-balancer-listeners --load-balancer-name my-load-balancer --listeners \"Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80\"\n\n\nTo create HTTPS listeners for a load balancer\n\nThis example creates a listener for your load balancer at port 443 using the HTTPS protocol.\n\nCommand:\n\naws elb create-load-balancer-listeners --load-balancer-name my-load-balancer --listeners \"Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=80\"\n"
    },
    {
      "command_name": "create-load-balancer-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/create-load-balancer-policy.html",
      "command_description": "Description\n\nCreates a policy with the specified attributes for the specified load balancer.\n\nPolicies are settings that are saved for your load balancer and that can be applied to the listener or the application server, depending on the policy type.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-load-balancer-policy\n--load-balancer-name <value>\n--policy-name <value>\n--policy-type-name <value>\n[--policy-attributes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--policy-name <value>",
        "--policy-type-name <value>",
        "[--policy-attributes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--policy-name (string)\n\nThe name of the load balancer policy to be created. This name must be unique within the set of policies for this load balancer.\n\n--policy-type-name (string)\n\nThe name of the base policy type. To get the list of policy types, use DescribeLoadBalancerPolicyTypes .\n\n--policy-attributes (list)\n\nThe policy attributes.\n\n(structure)\n\nInformation about a policy attribute.\n\nAttributeName -> (string)\n\nThe name of the attribute.\n\nAttributeValue -> (string)\n\nThe value of the attribute.\n\nShorthand Syntax:\n\nAttributeName=string,AttributeValue=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"AttributeName\": \"string\",\n    \"AttributeValue\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo create a policy that enables Proxy Protocol on a load balancer\n\nThis example creates a policy that enables Proxy Protocol on the specified load balancer.\n\nCommand:\n\naws elb create-load-balancer-policy --load-balancer-name my-load-balancer --policy-name my-ProxyProtocol-policy --policy-type-name ProxyProtocolPolicyType --policy-attributes AttributeName=ProxyProtocol,AttributeValue=true\n\n\nTo create an SSL negotiation policy using the recommended security policy\n\nThis example creates an SSL negotiation policy for the specified HTTPS load balancer using the recommended security policy.\n\nCommand:\n\naws elb create-load-balancer-policy --load-balancer-name my-load-balancer --policy-name my-SSLNegotiation-policy --policy-type-name SSLNegotiationPolicyType --policy-attributes AttributeName=Reference-Security-Policy,AttributeValue=ELBSecurityPolicy-2015-03\n\n\nTo create an SSL negotiation policy using a custom security policy\n\nThis example creates an SSL negotiation policy for your HTTPS load balancer using a custom security policy by enabling the protocols and the ciphers.\n\nCommand:\n\naws elb create-load-balancer-policy --load-balancer-name my-load-balancer --policy-name my-SSLNegotiation-policy --policy-type-name SSLNegotiationPolicyType --policy-attributes AttributeName=Protocol-SSLv3,AttributeValue=true AttributeName=Protocol-TLSv1.1,AttributeValue=true AttributeName=DHE-RSA-AES256-SHA256,AttributeValue=true AttributeName=Server-Defined-Cipher-Order,AttributeValue=true\n\n\nTo create a public key policy\n\nThis example creates a public key policy.\n\nCommand:\n\naws elb create-load-balancer-policy --load-balancer-name my-load-balancer --policy-name my-PublicKey-policy --policy-type-name PublicKeyPolicyType --policy-attributes AttributeName=PublicKey,AttributeValue=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwAYUjnfyEyXr1pxjhFWBpMlggUcqoi3kl+dS74kj//c6x7ROtusUaeQCTgIUkayttRDWchuqo1pHC1u+n5xxXnBBe2ejbb2WRsKIQ5rXEeixsjFpFsojpSQKkzhVGI6mJVZBJDVKSHmswnwLBdofLhzvllpovBPTHe+o4haAWvDBALJU0pkSI1FecPHcs2hwxf14zHoXy1e2k36A64nXW43wtfx5qcVSIxtCEOjnYRg7RPvybaGfQ+v6Iaxb/+7J5kEvZhTFQId+bSiJImF1FSUT1W1xwzBZPUbcUkkXDj45vC2s3Z8E+Lk7a3uZhvsQHLZnrfuWjBWGWvZ/MhZYgEXAMPLE\n\n\nTo create a backend server authentication policy\n\nThis example creates a backend server authentication policy that enables authentication on your backend instance using a public key policy.\n\nCommand:\n\naws elb create-load-balancer-policy --load-balancer-name my-load-balancer --policy-name my-authentication-policy --policy-type-name BackendServerAuthenticationPolicyType --policy-attributes AttributeName=PublicKeyPolicyName,AttributeValue=my-PublicKey-policy\n"
    },
    {
      "command_name": "delete-load-balancer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/delete-load-balancer.html",
      "command_description": "Description\n\nDeletes the specified load balancer.\n\nIf you are attempting to recreate a load balancer, you must reconfigure all settings. The DNS name associated with a deleted load balancer are no longer usable. The name and associated DNS record of the deleted load balancer no longer exist and traffic sent to any of its IP addresses is no longer delivered to your instances.\n\nIf the load balancer does not exist or has already been deleted, the call to DeleteLoadBalancer still succeeds.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-load-balancer\n--load-balancer-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a load balancer\n\nThis example deletes the specified load balancer.\n\nCommand:\n\naws elb delete-load-balancer --load-balancer-name my-load-balancer\n"
    },
    {
      "command_name": "delete-load-balancer-listeners",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/delete-load-balancer-listeners.html",
      "command_description": "Description\n\nDeletes the specified listeners from the specified load balancer.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-load-balancer-listeners\n--load-balancer-name <value>\n--load-balancer-ports <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--load-balancer-ports <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--load-balancer-ports (list)\n\nThe client port numbers of the listeners.\n\n(integer)\n\nSyntax:\n\ninteger integer ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a listener from your load balancer\n\nThis example deletes the listener for the specified port from the specified load balancer.\n\nCommand:\n\naws elb delete-load-balancer-listeners --load-balancer-name my-load-balancer --load-balancer-ports 80\n"
    },
    {
      "command_name": "delete-load-balancer-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/delete-load-balancer-policy.html",
      "command_description": "Description\n\nDeletes the specified policy from the specified load balancer. This policy must not be enabled for any listeners.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-load-balancer-policy\n--load-balancer-name <value>\n--policy-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--policy-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--policy-name (string)\n\nThe name of the policy.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a policy from your load balancer\n\nThis example deletes the specified policy from the specified load balancer. The policy must not be enabled on any listener.\n\nCommand:\n\naws elb delete-load-balancer-policy --load-balancer-name my-load-balancer --policy-name my-duration-cookie-policy\n"
    },
    {
      "command_name": "deregister-instances-from-load-balancer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/deregister-instances-from-load-balancer.html",
      "command_description": "Description\n\nDeregisters the specified instances from the specified load balancer. After the instance is deregistered, it no longer receives traffic from the load balancer.\n\nYou can use DescribeLoadBalancers to verify that the instance is deregistered from the load balancer.\n\nFor more information, see Register or De-Register EC2 Instances in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister-instances-from-load-balancer\n--load-balancer-name <value>\n--instances <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--instances <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--instances (list)\n\nThe IDs of the instances.\n\n(structure)\n\nThe ID of an EC2 instance.\n\nInstanceId -> (string)\n\nThe instance ID.\n\nShorthand Syntax:\n\n--instances InstanceId1 InstanceId2 InstanceId3\n\n\nJSON Syntax:\n\n[\n  {\n    \"InstanceId\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstances -> (list)\n\nThe remaining instances registered with the load balancer.\n\n(structure)\n\nThe ID of an EC2 instance.\n\nInstanceId -> (string)\n\nThe instance ID.",
      "command_examples": "Examples\n\nTo deregister instances from a load balancer\n\nThis example deregisters the specified instance from the specified load balancer.\n\nCommand:\n\naws elb deregister-instances-from-load-balancer --load-balancer-name my-load-balancer --instances i-d6f6fae3\n\n\nOutput:\n\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-207d9717\"\n        },\n        {\n            \"InstanceId\": \"i-afefb49b\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "describe-account-limits",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/describe-account-limits.html",
      "command_description": "Description\n\nDescribes the current Elastic Load Balancing resource limits for your AWS account.\n\nFor more information, see Limits for Your Classic Load Balancer in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-account-limits is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Limits",
      "command_synopsis": "Synopsis\n  describe-account-limits\n[--page-size <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--page-size <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLimits -> (list)\n\nInformation about the limits.\n\n(structure)\n\nInformation about an Elastic Load Balancing resource limit for your AWS account.\n\nName -> (string)\n\nThe name of the limit. The possible values are:\n\nclassic-listeners\n\nclassic-load-balancers\n\nclassic-registered-instances\n\nMax -> (string)\n\nThe maximum value of the limit.\n\nNextMarker -> (string)\n\nThe marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
      "command_examples": "Examples\n\nTo describe your Classic Load Balancer limits\n\nThe following describe-account-limits example displays details about the Classic Load Balancer limits for your AWS account.\n\naws elb describe-account-limits\n\n\nOutput:\n\n{\n    \"Limits\": [\n        {\n            \"Name\": \"classic-load-balancers\",\n            \"Max\": \"20\"\n        },\n        {\n            \"Name\": \"classic-listeners\",\n            \"Max\": \"100\"\n        },\n        {\n            \"Name\": \"classic-registered-instances\",\n            \"Max\": \"1000\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "describe-instance-health",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/describe-instance-health.html",
      "command_description": "Description\n\nDescribes the state of the specified instances with respect to the specified load balancer. If no instances are specified, the call describes the state of all instances that are currently registered with the load balancer. If instances are specified, their state is returned even if they are no longer registered with the load balancer. The state of terminated instances is not returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-instance-health\n--load-balancer-name <value>\n[--instances <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "[--instances <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--instances (list)\n\nThe IDs of the instances.\n\n(structure)\n\nThe ID of an EC2 instance.\n\nInstanceId -> (string)\n\nThe instance ID.\n\nShorthand Syntax:\n\n--instances InstanceId1 InstanceId2 InstanceId3\n\n\nJSON Syntax:\n\n[\n  {\n    \"InstanceId\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstanceStates -> (list)\n\nInformation about the health of the instances.\n\n(structure)\n\nInformation about the state of an EC2 instance.\n\nInstanceId -> (string)\n\nThe ID of the instance.\n\nState -> (string)\n\nThe current state of the instance.\n\nValid values: InService | OutOfService | Unknown\n\nReasonCode -> (string)\n\nInformation about the cause of OutOfService instances. Specifically, whether the cause is Elastic Load Balancing or the instance.\n\nValid values: ELB | Instance | N/A\n\nDescription -> (string)\n\nA description of the instance state. This string can contain one or more of the following messages.\n\nN/A\n\nA transient error occurred. Please try again later.\n\nInstance has failed at least the UnhealthyThreshold number of health checks consecutively.\n\nInstance has not passed the configured HealthyThreshold number of health checks consecutively.\n\nInstance registration is still in progress.\n\nInstance is in the EC2 Availability Zone for which LoadBalancer is not configured to route traffic to.\n\nInstance is not currently registered with the LoadBalancer.\n\nInstance deregistration currently in progress.\n\nDisable Availability Zone is currently in progress.\n\nInstance is in pending state.\n\nInstance is in stopped state.\n\nInstance is in terminated state.",
      "command_examples": "Examples\n\nTo describe the health of the instances for a load balancer\n\nThis example describes the health of the instances for the specified load balancer.\n\nCommand:\n\naws elb describe-instance-health --load-balancer-name my-load-balancer\n\n\nOutput:\n\n{\n  \"InstanceStates\": [\n      {\n          \"InstanceId\": \"i-207d9717\",\n          \"ReasonCode\": \"N/A\",\n          \"State\": \"InService\",\n          \"Description\": \"N/A\"\n      },\n      {\n          \"InstanceId\": \"i-afefb49b\",\n          \"ReasonCode\": \"N/A\",\n          \"State\": \"InService\",\n          \"Description\": \"N/A\"\n      }\n  ]\n}\n\n\nTo describe the health of an instance for a load balancer\n\nThis example describes the health of the specified instance for the specified load balancer.\n\nCommand:\n\naws elb describe-instance-health --load-balancer-name my-load-balancer --instances i-7299c809\n\n\nThe following is an example response for an instance that is registering.\n\nOutput:\n\n{\n  \"InstanceStates\": [\n      {\n          \"InstanceId\": \"i-7299c809\",\n          \"ReasonCode\": \"ELB\",\n          \"State\": \"OutOfService\",\n          \"Description\": \"Instance registration is still in progress.\"\n    }\n  ]\n}\n\n\nThe following is an example response for an unhealthy instance.\n\nOutput:\n\n{\n  \"InstanceStates\": [\n      {\n          \"InstanceId\": \"i-7299c809\",\n          \"ReasonCode\": \"Instance\",\n          \"State\": \"OutOfService\",\n          \"Description\": \"Instance has failed at least the UnhealthyThreshold number of health checks consecutively.\"\n      }\n  ]\n}\n"
    },
    {
      "command_name": "describe-load-balancer-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/describe-load-balancer-attributes.html",
      "command_description": "Description\n\nDescribes the attributes for the specified load balancer.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-load-balancer-attributes\n--load-balancer-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLoadBalancerAttributes -> (structure)\n\nInformation about the load balancer attributes.\n\nCrossZoneLoadBalancing -> (structure)\n\nIf enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.\n\nFor more information, see Configure Cross-Zone Load Balancing in the Classic Load Balancers Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether cross-zone load balancing is enabled for the load balancer.\n\nAccessLog -> (structure)\n\nIf enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.\n\nFor more information, see Enable Access Logs in the Classic Load Balancers Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether access logs are enabled for the load balancer.\n\nS3BucketName -> (string)\n\nThe name of the Amazon S3 bucket where the access logs are stored.\n\nEmitInterval -> (integer)\n\nThe interval for publishing the access logs. You can specify an interval of either 5 minutes or 60 minutes.\n\nDefault: 60 minutes\n\nS3BucketPrefix -> (string)\n\nThe logical hierarchy you created for your Amazon S3 bucket, for example my-bucket-prefix/prod . If the prefix is not provided, the log is placed at the root level of the bucket.\n\nConnectionDraining -> (structure)\n\nIf enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.\n\nFor more information, see Configure Connection Draining in the Classic Load Balancers Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether connection draining is enabled for the load balancer.\n\nTimeout -> (integer)\n\nThe maximum time, in seconds, to keep the existing connections open before deregistering the instances.\n\nConnectionSettings -> (structure)\n\nIf enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.\n\nBy default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see Configure Idle Connection Timeout in the Classic Load Balancers Guide .\n\nIdleTimeout -> (integer)\n\nThe time, in seconds, that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer.\n\nAdditionalAttributes -> (list)\n\nAny additional attributes.\n\n(structure)\n\nInformation about additional load balancer attributes.\n\nKey -> (string)\n\nThe name of the attribute.\n\nThe following attribute is supported.\n\nelb.http.desyncmitigationmode - Determines how the load balancer handles requests that might pose a security risk to your application. The possible values are monitor , defensive , and strictest . The default is defensive .\n\nValue -> (string)\n\nThis value of the attribute.",
      "command_examples": "Examples\n\nTo describe the attributes of a load balancer\n\nThis example describes the attributes of the specified load balancer.\n\nCommand:\n\naws elb describe-load-balancer-attributes --load-balancer-name my-load-balancer\n\n\nOutput:\n\n{\n  \"LoadBalancerAttributes\": {\n      \"ConnectionDraining\": {\n          \"Enabled\": false,\n          \"Timeout\": 300\n      },\n      \"CrossZoneLoadBalancing\": {\n          \"Enabled\": true\n      },\n      \"ConnectionSettings\": {\n          \"IdleTimeout\": 30\n      },\n      \"AccessLog\": {\n          \"Enabled\": false\n    }\n  }\n}\n"
    },
    {
      "command_name": "describe-load-balancer-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/describe-load-balancer-policies.html",
      "command_description": "Description\n\nDescribes the specified policies.\n\nIf you specify a load balancer name, the action returns the descriptions of all policies created for the load balancer. If you specify a policy name associated with your load balancer, the action returns the description of that policy. If you don’t specify a load balancer name, the action returns descriptions of the specified sample policies, or descriptions of all sample policies. The names of the sample policies have the ELBSample- prefix.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-load-balancer-policies\n[--load-balancer-name <value>]\n[--policy-names <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--load-balancer-name <value>]",
        "[--policy-names <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--policy-names (list)\n\nThe names of the policies.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyDescriptions -> (list)\n\nInformation about the policies.\n\n(structure)\n\nInformation about a policy.\n\nPolicyName -> (string)\n\nThe name of the policy.\n\nPolicyTypeName -> (string)\n\nThe name of the policy type.\n\nPolicyAttributeDescriptions -> (list)\n\nThe policy attributes.\n\n(structure)\n\nInformation about a policy attribute.\n\nAttributeName -> (string)\n\nThe name of the attribute.\n\nAttributeValue -> (string)\n\nThe value of the attribute.",
      "command_examples": "Examples\n\nTo describe all policies associated with a load balancer\n\nThis example describes all of the policies associated with the specified load balancer.\n\nCommand:\n\naws elb describe-load-balancer-policies --load-balancer-name my-load-balancer\n\n\nOutput:\n\n{\n  \"PolicyDescriptions\": [\n    {\n      \"PolicyAttributeDescriptions\": [\n        {\n          \"AttributeName\": \"ProxyProtocol\",\n          \"AttributeValue\": \"true\"\n        }\n      ],\n      \"PolicyName\": \"my-ProxyProtocol-policy\",\n      \"PolicyTypeName\": \"ProxyProtocolPolicyType\"\n    },\n    {\n        \"PolicyAttributeDescriptions\": [\n            {\n                \"AttributeName\": \"CookieName\",\n                \"AttributeValue\": \"my-app-cookie\"\n            }\n        ],\n        \"PolicyName\": \"my-app-cookie-policy\",\n        \"PolicyTypeName\": \"AppCookieStickinessPolicyType\"\n    },\n    {\n      \"PolicyAttributeDescriptions\": [\n        {\n          \"AttributeName\": \"CookieExpirationPeriod\",\n          \"AttributeValue\": \"60\"\n        }\n      ],\n      \"PolicyName\": \"my-duration-cookie-policy\",\n      \"PolicyTypeName\": \"LBCookieStickinessPolicyType\"\n    },\n    .\n    .\n    .\n  ]\n}\n\n\nTo describe a specific policy associated with a load balancer\n\nThis example describes the specified policy associated with the specified load balancer.\n\nCommand:\n\naws elb describe-load-balancer-policies --load-balancer-name my-load-balancer --policy-name my-authentication-policy\n\n\nOutput:\n\n{\n  \"PolicyDescriptions\": [\n      {\n          \"PolicyAttributeDescriptions\": [\n              {\n                  \"AttributeName\": \"PublicKeyPolicyName\",\n                  \"AttributeValue\": \"my-PublicKey-policy\"\n              }\n          ],\n          \"PolicyName\": \"my-authentication-policy\",\n          \"PolicyTypeName\": \"BackendServerAuthenticationPolicyType\"\n      }\n  ]\n}\n"
    },
    {
      "command_name": "describe-load-balancer-policy-types",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/describe-load-balancer-policy-types.html",
      "command_description": "Description\n\nDescribes the specified load balancer policy types or all load balancer policy types.\n\nThe description of each type indicates how it can be used. For example, some policies can be used only with layer 7 listeners, some policies can be used only with layer 4 listeners, and some policies can be used only with your EC2 instances.\n\nYou can use CreateLoadBalancerPolicy to create a policy configuration for any of these policy types. Then, depending on the policy type, use either SetLoadBalancerPoliciesOfListener or SetLoadBalancerPoliciesForBackendServer to set the policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-load-balancer-policy-types\n[--policy-type-names <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--policy-type-names <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-type-names (list)\n\nThe names of the policy types. If no names are specified, describes all policy types defined by Elastic Load Balancing.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyTypeDescriptions -> (list)\n\nInformation about the policy types.\n\n(structure)\n\nInformation about a policy type.\n\nPolicyTypeName -> (string)\n\nThe name of the policy type.\n\nDescription -> (string)\n\nA description of the policy type.\n\nPolicyAttributeTypeDescriptions -> (list)\n\nThe description of the policy attributes associated with the policies defined by Elastic Load Balancing.\n\n(structure)\n\nInformation about a policy attribute type.\n\nAttributeName -> (string)\n\nThe name of the attribute.\n\nAttributeType -> (string)\n\nThe type of the attribute. For example, Boolean or Integer .\n\nDescription -> (string)\n\nA description of the attribute.\n\nDefaultValue -> (string)\n\nThe default value of the attribute, if applicable.\n\nCardinality -> (string)\n\nThe cardinality of the attribute.\n\nValid values:\n\nONE(1) : Single value required\n\nZERO_OR_ONE(0..1) : Up to one value is allowed\n\nZERO_OR_MORE(0..*) : Optional. Multiple values are allowed\n\nONE_OR_MORE(1..*0) : Required. Multiple values are allowed",
      "command_examples": "Examples\n\nTo describe the load balancer policy types defined by Elastic Load Balancing\n\nThis example describes the load balancer policy types that you can use to create policy configurations for your load balancer.\n\nCommand:\n\naws elb describe-load-balancer-policy-types\n\n\nOutput:\n\n{\n  \"PolicyTypeDescriptions\": [\n      {\n          \"PolicyAttributeTypeDescriptions\": [\n              {\n                  \"Cardinality\": \"ONE\",\n                  \"AttributeName\": \"ProxyProtocol\",\n                  \"AttributeType\": \"Boolean\"\n              }\n          ],\n          \"PolicyTypeName\": \"ProxyProtocolPolicyType\",\n          \"Description\": \"Policy that controls whether to include the IP address and port of the originating request for TCP messages. This policy operates on TCP/SSL listeners only\"\n      },\n      {\n          \"PolicyAttributeTypeDescriptions\": [\n              {\n                  \"Cardinality\": \"ONE\",\n                  \"AttributeName\": \"PublicKey\",\n                  \"AttributeType\": \"String\"\n              }\n          ],\n          \"PolicyTypeName\": \"PublicKeyPolicyType\",\n          \"Description\": \"Policy containing a list of public keys to accept when authenticating the back-end server(s). This policy cannot be applied directly to back-end servers or listeners but must be part of a BackendServerAuthenticationPolicyType.\"\n      },\n      {\n          \"PolicyAttributeTypeDescriptions\": [\n              {\n                  \"Cardinality\": \"ONE\",\n                  \"AttributeName\": \"CookieName\",\n                  \"AttributeType\": \"String\"\n              }\n          ],\n          \"PolicyTypeName\": \"AppCookieStickinessPolicyType\",\n          \"Description\": \"Stickiness policy with session lifetimes controlled by the lifetime of the application-generated cookie. This policy can be associated only with HTTP/HTTPS listeners.\"\n      },\n      {\n          \"PolicyAttributeTypeDescriptions\": [\n              {\n                  \"Cardinality\": \"ZERO_OR_ONE\",\n                  \"AttributeName\": \"CookieExpirationPeriod\",\n                  \"AttributeType\": \"Long\"\n              }\n          ],\n          \"PolicyTypeName\": \"LBCookieStickinessPolicyType\",\n          \"Description\": \"Stickiness policy with session lifetimes controlled by the browser (user-agent) or a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.\"\n      },\n      {\n          \"PolicyAttributeTypeDescriptions\": [\n              .\n              .\n              .\n          ],\n          \"PolicyTypeName\": \"SSLNegotiationPolicyType\",\n          \"Description\": \"Listener policy that defines the ciphers and protocols that will be accepted by the load balancer. This policy can be associated only with HTTPS/SSL listeners.\"\n      },\n      {\n          \"PolicyAttributeTypeDescriptions\": [\n              {\n                  \"Cardinality\": \"ONE_OR_MORE\",\n                  \"AttributeName\": \"PublicKeyPolicyName\",\n                  \"AttributeType\": \"PolicyName\"\n              }\n          ],\n          \"PolicyTypeName\": \"BackendServerAuthenticationPolicyType\",\n          \"Description\": \"Policy that controls authentication to back-end server(s) and contains one or more policies, such as an instance of a PublicKeyPolicyType. This policy can be associated only with back-end servers that are using HTTPS/SSL.\"\n      }\n  ]\n}\n"
    },
    {
      "command_name": "describe-load-balancers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/describe-load-balancers.html",
      "command_description": "Description\n\nDescribes the specified the load balancers. If no load balancers are specified, the call describes all of your load balancers.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-load-balancers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: LoadBalancerDescriptions",
      "command_synopsis": "Synopsis\n  describe-load-balancers\n[--load-balancer-names <value>]\n[--page-size <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--load-balancer-names <value>]",
        "[--page-size <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-names (list)\n\nThe names of the load balancers.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLoadBalancerDescriptions -> (list)\n\nInformation about the load balancers.\n\n(structure)\n\nInformation about a load balancer.\n\nLoadBalancerName -> (string)\n\nThe name of the load balancer.\n\nDNSName -> (string)\n\nThe DNS name of the load balancer.\n\nCanonicalHostedZoneName -> (string)\n\nThe DNS name of the load balancer.\n\nFor more information, see Configure a Custom Domain Name in the Classic Load Balancers Guide .\n\nCanonicalHostedZoneNameID -> (string)\n\nThe ID of the Amazon Route 53 hosted zone for the load balancer.\n\nListenerDescriptions -> (list)\n\nThe listeners for the load balancer.\n\n(structure)\n\nThe policies enabled for a listener.\n\nListener -> (structure)\n\nThe listener.\n\nProtocol -> (string)\n\nThe load balancer transport protocol to use for routing: HTTP, HTTPS, TCP, or SSL.\n\nLoadBalancerPort -> (integer)\n\nThe port on which the load balancer is listening. On EC2-VPC, you can specify any port from the range 1-65535. On EC2-Classic, you can specify any port from the following list: 25, 80, 443, 465, 587, 1024-65535.\n\nInstanceProtocol -> (string)\n\nThe protocol to use for routing traffic to instances: HTTP, HTTPS, TCP, or SSL.\n\nIf the front-end protocol is TCP or SSL, the back-end protocol must be TCP or SSL. If the front-end protocol is HTTP or HTTPS, the back-end protocol must be HTTP or HTTPS.\n\nIf there is another listener with the same InstancePort whose InstanceProtocol is secure, (HTTPS or SSL), the listener’s InstanceProtocol must also be secure.\n\nIf there is another listener with the same InstancePort whose InstanceProtocol is HTTP or TCP, the listener’s InstanceProtocol must be HTTP or TCP.\n\nInstancePort -> (integer)\n\nThe port on which the instance is listening.\n\nSSLCertificateId -> (string)\n\nThe Amazon Resource Name (ARN) of the server certificate.\n\nPolicyNames -> (list)\n\nThe policies. If there are no policies enabled, the list is empty.\n\n(string)\n\nPolicies -> (structure)\n\nThe policies defined for the load balancer.\n\nAppCookieStickinessPolicies -> (list)\n\nThe stickiness policies created using CreateAppCookieStickinessPolicy .\n\n(structure)\n\nInformation about a policy for application-controlled session stickiness.\n\nPolicyName -> (string)\n\nThe mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer.\n\nCookieName -> (string)\n\nThe name of the application cookie used for stickiness.\n\nLBCookieStickinessPolicies -> (list)\n\nThe stickiness policies created using CreateLBCookieStickinessPolicy .\n\n(structure)\n\nInformation about a policy for duration-based session stickiness.\n\nPolicyName -> (string)\n\nThe name of the policy. This name must be unique within the set of policies for this load balancer.\n\nCookieExpirationPeriod -> (long)\n\nThe time period, in seconds, after which the cookie should be considered stale. If this parameter is not specified, the stickiness session lasts for the duration of the browser session.\n\nOtherPolicies -> (list)\n\nThe policies other than the stickiness policies.\n\n(string)\n\nBackendServerDescriptions -> (list)\n\nInformation about your EC2 instances.\n\n(structure)\n\nInformation about the configuration of an EC2 instance.\n\nInstancePort -> (integer)\n\nThe port on which the EC2 instance is listening.\n\nPolicyNames -> (list)\n\nThe names of the policies enabled for the EC2 instance.\n\n(string)\n\nAvailabilityZones -> (list)\n\nThe Availability Zones for the load balancer.\n\n(string)\n\nSubnets -> (list)\n\nThe IDs of the subnets for the load balancer.\n\n(string)\n\nVPCId -> (string)\n\nThe ID of the VPC for the load balancer.\n\nInstances -> (list)\n\nThe IDs of the instances for the load balancer.\n\n(structure)\n\nThe ID of an EC2 instance.\n\nInstanceId -> (string)\n\nThe instance ID.\n\nHealthCheck -> (structure)\n\nInformation about the health checks conducted on the load balancer.\n\nTarget -> (string)\n\nThe instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535.\n\nTCP is the default, specified as a TCP: port pair, for example “TCP:5000”. In this case, a health check simply attempts to open a TCP connection to the instance on the specified port. Failure to connect within the configured timeout is considered unhealthy.\n\nSSL is also specified as SSL: port pair, for example, SSL:5000.\n\nFor HTTP/HTTPS, you must include a ping path in the string. HTTP is specified as a HTTP:port;/;PathToPing; grouping, for example “HTTP:80/weather/us/wa/seattle”. In this case, a HTTP GET request is issued to the instance on the given port and path. Any answer other than “200 OK” within the timeout period is considered unhealthy.\n\nThe total length of the HTTP ping target must be 1024 16-bit Unicode characters or less.\n\nInterval -> (integer)\n\nThe approximate interval, in seconds, between health checks of an individual instance.\n\nTimeout -> (integer)\n\nThe amount of time, in seconds, during which no response means a failed health check.\n\nThis value must be less than the Interval value.\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive health check failures required before moving the instance to the Unhealthy state.\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive health checks successes required before moving the instance to the Healthy state.\n\nSourceSecurityGroup -> (structure)\n\nThe security group for the load balancer, which you can use as part of your inbound rules for your registered instances. To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.\n\nOwnerAlias -> (string)\n\nThe owner of the security group.\n\nGroupName -> (string)\n\nThe name of the security group.\n\nSecurityGroups -> (list)\n\nThe security groups for the load balancer. Valid only for load balancers in a VPC.\n\n(string)\n\nCreatedTime -> (timestamp)\n\nThe date and time the load balancer was created.\n\nScheme -> (string)\n\nThe type of load balancer. Valid only for load balancers in a VPC.\n\nIf Scheme is internet-facing , the load balancer has a public DNS name that resolves to a public IP address.\n\nIf Scheme is internal , the load balancer has a public DNS name that resolves to a private IP address.\n\nNextMarker -> (string)\n\nThe marker to use when requesting the next set of results. If there are no additional results, the string is empty.",
      "command_examples": "Examples\n\nTo describe your load balancers\n\nThis example describes all of your load balancers.\n\nCommand:\n\naws elb describe-load-balancers\n\n\nTo describe one of your load balancers\n\nThis example describes the specified load balancer.\n\nCommand:\n\naws elb describe-load-balancers --load-balancer-name my-load-balancer\n\n\nThe following example response is for an HTTPS load balancer in a VPC.\n\nOutput:\n\n{\n  \"LoadBalancerDescriptions\": [\n    {\n      \"Subnets\": [\n          \"subnet-15aaab61\"\n      ],\n      \"CanonicalHostedZoneNameID\": \"Z3DZXE0EXAMPLE\",\n      \"CanonicalHostedZoneName\": \"my-load-balancer-1234567890.us-west-2.elb.amazonaws.com\",\n      \"ListenerDescriptions\": [\n          {\n              \"Listener\": {\n                  \"InstancePort\": 80,\n                  \"LoadBalancerPort\": 80,\n                  \"Protocol\": \"HTTP\",\n                  \"InstanceProtocol\": \"HTTP\"\n              },\n              \"PolicyNames\": []\n          },\n          {\n              \"Listener\": {\n                  \"InstancePort\": 443,\n                  \"SSLCertificateId\": \"arn:aws:iam::123456789012:server-certificate/my-server-cert\",\n                  \"LoadBalancerPort\": 443,\n                  \"Protocol\": \"HTTPS\",\n                  \"InstanceProtocol\": \"HTTPS\"\n              },\n              \"PolicyNames\": [\n                  \"ELBSecurityPolicy-2015-03\"\n              ]\n          }\n      ],\n      \"HealthCheck\": {\n          \"HealthyThreshold\": 2,\n          \"Interval\": 30,\n          \"Target\": \"HTTP:80/png\",\n          \"Timeout\": 3,\n          \"UnhealthyThreshold\": 2\n      },\n      \"VPCId\": \"vpc-a01106c2\",\n      \"BackendServerDescriptions\": [\n          {\n              \"InstancePort\": 80,\n              \"PolicyNames\": [\n                  \"my-ProxyProtocol-policy\"\n              ]\n          }\n      ],\n      \"Instances\": [\n          {\n              \"InstanceId\": \"i-207d9717\"\n          },\n          {\n              \"InstanceId\": \"i-afefb49b\"\n          }\n      ],\n      \"DNSName\": \"my-load-balancer-1234567890.us-west-2.elb.amazonaws.com\",\n      \"SecurityGroups\": [\n          \"sg-a61988c3\"\n      ],\n      \"Policies\": {\n          \"LBCookieStickinessPolicies\": [\n              {\n                  \"PolicyName\": \"my-duration-cookie-policy\",\n                  \"CookieExpirationPeriod\": 60\n              }\n          ],\n          \"AppCookieStickinessPolicies\": [],\n          \"OtherPolicies\": [\n              \"my-PublicKey-policy\",\n              \"my-authentication-policy\",\n              \"my-SSLNegotiation-policy\",\n              \"my-ProxyProtocol-policy\",\n              \"ELBSecurityPolicy-2015-03\"\n          ]\n      },\n      \"LoadBalancerName\": \"my-load-balancer\",\n      \"CreatedTime\": \"2015-03-19T03:24:02.650Z\",\n      \"AvailabilityZones\": [\n          \"us-west-2a\"\n      ],\n      \"Scheme\": \"internet-facing\",\n      \"SourceSecurityGroup\": {\n          \"OwnerAlias\": \"123456789012\",\n          \"GroupName\": \"my-elb-sg\"\n      }\n    }\n  ]\n}\n"
    },
    {
      "command_name": "describe-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/describe-tags.html",
      "command_description": "Description\n\nDescribes the tags associated with the specified load balancers.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-tags\n--load-balancer-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-names (list)\n\nThe names of the load balancers.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTagDescriptions -> (list)\n\nInformation about the tags.\n\n(structure)\n\nThe tags associated with a load balancer.\n\nLoadBalancerName -> (string)\n\nThe name of the load balancer.\n\nTags -> (list)\n\nThe tags.\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe key of the tag.\n\nValue -> (string)\n\nThe value of the tag.",
      "command_examples": "Examples\n\nTo describe the tags assigned to a load balancer\n\nThis example describes the tags assigned to the specified load balancer.\n\nCommand:\n\naws elb describe-tags --load-balancer-name my-load-balancer\n\n\nOutput:\n\n{\n  \"TagDescriptions\": [\n      {\n          \"Tags\": [\n              {\n                  \"Value\": \"lima\",\n                  \"Key\": \"project\"\n              },\n              {\n                  \"Value\": \"digital-media\",\n                  \"Key\": \"department\"\n              }\n          ],\n          \"LoadBalancerName\": \"my-load-balancer\"\n      }\n  ]\n}\n"
    },
    {
      "command_name": "detach-load-balancer-from-subnets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/detach-load-balancer-from-subnets.html",
      "command_description": "Description\n\nRemoves the specified subnets from the set of configured subnets for the load balancer.\n\nAfter a subnet is removed, all EC2 instances registered with the load balancer in the removed subnet go into the OutOfService state. Then, the load balancer balances the traffic among the remaining routable subnets.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detach-load-balancer-from-subnets\n--load-balancer-name <value>\n--subnets <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--subnets <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--subnets (list)\n\nThe IDs of the subnets.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSubnets -> (list)\n\nThe IDs of the remaining subnets for the load balancer.\n\n(string)",
      "command_examples": "Examples\n\nTo detach load balancers from subnets\n\nThis example detaches the specified load balancer from the specified subnet.\n\nCommand:\n\naws elb detach-load-balancer-from-subnets --load-balancer-name my-load-balancer --subnets subnet-0ecac448\n\n\nOutput:\n\n{\n   \"Subnets\": [\n       \"subnet-15aaab61\"\n   ]\n}\n"
    },
    {
      "command_name": "disable-availability-zones-for-load-balancer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/disable-availability-zones-for-load-balancer.html",
      "command_description": "Description\n\nRemoves the specified Availability Zones from the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC.\n\nFor load balancers in a non-default VPC, use DetachLoadBalancerFromSubnets .\n\nThere must be at least one Availability Zone registered with a load balancer at all times. After an Availability Zone is removed, all instances registered with the load balancer that are in the removed Availability Zone go into the OutOfService state. Then, the load balancer attempts to equally balance the traffic among its remaining Availability Zones.\n\nFor more information, see Add or Remove Availability Zones in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disable-availability-zones-for-load-balancer\n--load-balancer-name <value>\n--availability-zones <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--availability-zones <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--availability-zones (list)\n\nThe Availability Zones.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAvailabilityZones -> (list)\n\nThe remaining Availability Zones for the load balancer.\n\n(string)",
      "command_examples": "Examples\n\nTo disable Availability Zones for a load balancer\n\nThis example removes the specified Availability Zone from the set of Availability Zones for the specified load balancer.\n\nCommand:\n\naws elb disable-availability-zones-for-load-balancer --load-balancer-name my-load-balancer --availability-zones us-west-2a\n\n\nOutput:\n\n{\n    \"AvailabilityZones\": [\n        \"us-west-2b\"\n    ]\n}\n"
    },
    {
      "command_name": "enable-availability-zones-for-load-balancer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/enable-availability-zones-for-load-balancer.html",
      "command_description": "Description\n\nAdds the specified Availability Zones to the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC.\n\nFor load balancers in a non-default VPC, use AttachLoadBalancerToSubnets .\n\nThe load balancer evenly distributes requests across all its registered Availability Zones that contain instances. For more information, see Add or Remove Availability Zones in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  enable-availability-zones-for-load-balancer\n--load-balancer-name <value>\n--availability-zones <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--availability-zones <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--availability-zones (list)\n\nThe Availability Zones. These must be in the same region as the load balancer.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAvailabilityZones -> (list)\n\nThe updated list of Availability Zones for the load balancer.\n\n(string)",
      "command_examples": "Examples\n\nTo enable Availability Zones for a load balancer\n\nThis example adds the specified Availability Zone to the specified load balancer.\n\nCommand:\n\naws elb enable-availability-zones-for-load-balancer --load-balancer-name my-load-balancer --availability-zones us-west-2b\n\n\nOutput:\n\n{\n    \"AvailabilityZones\": [\n        \"us-west-2a\",\n        \"us-west-2b\"\n    ]\n}\n"
    },
    {
      "command_name": "modify-load-balancer-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/modify-load-balancer-attributes.html",
      "command_description": "Description\n\nModifies the attributes of the specified load balancer.\n\nYou can modify the load balancer attributes, such as AccessLogs , ConnectionDraining , and CrossZoneLoadBalancing by either enabling or disabling them. Or, you can modify the load balancer attribute ConnectionSettings by specifying an idle connection timeout value for your load balancer.\n\nFor more information, see the following in the Classic Load Balancers Guide :\n\nCross-Zone Load Balancing\n\nConnection Draining\n\nAccess Logs\n\nIdle Connection Timeout\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  modify-load-balancer-attributes\n--load-balancer-name <value>\n--load-balancer-attributes <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--load-balancer-attributes <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--load-balancer-attributes (structure)\n\nThe attributes for the load balancer.\n\nCrossZoneLoadBalancing -> (structure)\n\nIf enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.\n\nFor more information, see Configure Cross-Zone Load Balancing in the Classic Load Balancers Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether cross-zone load balancing is enabled for the load balancer.\n\nAccessLog -> (structure)\n\nIf enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.\n\nFor more information, see Enable Access Logs in the Classic Load Balancers Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether access logs are enabled for the load balancer.\n\nS3BucketName -> (string)\n\nThe name of the Amazon S3 bucket where the access logs are stored.\n\nEmitInterval -> (integer)\n\nThe interval for publishing the access logs. You can specify an interval of either 5 minutes or 60 minutes.\n\nDefault: 60 minutes\n\nS3BucketPrefix -> (string)\n\nThe logical hierarchy you created for your Amazon S3 bucket, for example my-bucket-prefix/prod . If the prefix is not provided, the log is placed at the root level of the bucket.\n\nConnectionDraining -> (structure)\n\nIf enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.\n\nFor more information, see Configure Connection Draining in the Classic Load Balancers Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether connection draining is enabled for the load balancer.\n\nTimeout -> (integer)\n\nThe maximum time, in seconds, to keep the existing connections open before deregistering the instances.\n\nConnectionSettings -> (structure)\n\nIf enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.\n\nBy default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see Configure Idle Connection Timeout in the Classic Load Balancers Guide .\n\nIdleTimeout -> (integer)\n\nThe time, in seconds, that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer.\n\nAdditionalAttributes -> (list)\n\nAny additional attributes.\n\n(structure)\n\nInformation about additional load balancer attributes.\n\nKey -> (string)\n\nThe name of the attribute.\n\nThe following attribute is supported.\n\nelb.http.desyncmitigationmode - Determines how the load balancer handles requests that might pose a security risk to your application. The possible values are monitor , defensive , and strictest . The default is defensive .\n\nValue -> (string)\n\nThis value of the attribute.\n\nShorthand Syntax:\n\nCrossZoneLoadBalancing={Enabled=boolean},AccessLog={Enabled=boolean,S3BucketName=string,EmitInterval=integer,S3BucketPrefix=string},ConnectionDraining={Enabled=boolean,Timeout=integer},ConnectionSettings={IdleTimeout=integer},AdditionalAttributes=[{Key=string,Value=string},{Key=string,Value=string}]\n\n\nJSON Syntax:\n\n{\n  \"CrossZoneLoadBalancing\": {\n    \"Enabled\": true|false\n  },\n  \"AccessLog\": {\n    \"Enabled\": true|false,\n    \"S3BucketName\": \"string\",\n    \"EmitInterval\": integer,\n    \"S3BucketPrefix\": \"string\"\n  },\n  \"ConnectionDraining\": {\n    \"Enabled\": true|false,\n    \"Timeout\": integer\n  },\n  \"ConnectionSettings\": {\n    \"IdleTimeout\": integer\n  },\n  \"AdditionalAttributes\": [\n    {\n      \"Key\": \"string\",\n      \"Value\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLoadBalancerName -> (string)\n\nThe name of the load balancer.\n\nLoadBalancerAttributes -> (structure)\n\nInformation about the load balancer attributes.\n\nCrossZoneLoadBalancing -> (structure)\n\nIf enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.\n\nFor more information, see Configure Cross-Zone Load Balancing in the Classic Load Balancers Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether cross-zone load balancing is enabled for the load balancer.\n\nAccessLog -> (structure)\n\nIf enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.\n\nFor more information, see Enable Access Logs in the Classic Load Balancers Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether access logs are enabled for the load balancer.\n\nS3BucketName -> (string)\n\nThe name of the Amazon S3 bucket where the access logs are stored.\n\nEmitInterval -> (integer)\n\nThe interval for publishing the access logs. You can specify an interval of either 5 minutes or 60 minutes.\n\nDefault: 60 minutes\n\nS3BucketPrefix -> (string)\n\nThe logical hierarchy you created for your Amazon S3 bucket, for example my-bucket-prefix/prod . If the prefix is not provided, the log is placed at the root level of the bucket.\n\nConnectionDraining -> (structure)\n\nIf enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.\n\nFor more information, see Configure Connection Draining in the Classic Load Balancers Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether connection draining is enabled for the load balancer.\n\nTimeout -> (integer)\n\nThe maximum time, in seconds, to keep the existing connections open before deregistering the instances.\n\nConnectionSettings -> (structure)\n\nIf enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.\n\nBy default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see Configure Idle Connection Timeout in the Classic Load Balancers Guide .\n\nIdleTimeout -> (integer)\n\nThe time, in seconds, that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer.\n\nAdditionalAttributes -> (list)\n\nAny additional attributes.\n\n(structure)\n\nInformation about additional load balancer attributes.\n\nKey -> (string)\n\nThe name of the attribute.\n\nThe following attribute is supported.\n\nelb.http.desyncmitigationmode - Determines how the load balancer handles requests that might pose a security risk to your application. The possible values are monitor , defensive , and strictest . The default is defensive .\n\nValue -> (string)\n\nThis value of the attribute.",
      "command_examples": "Examples\n\nTo modify the attributes of a load balancer\n\nThis example modifies the CrossZoneLoadBalancing attribute of the specified load balancer.\n\nCommand:\n\naws elb modify-load-balancer-attributes --load-balancer-name my-load-balancer --load-balancer-attributes \"{\\\"CrossZoneLoadBalancing\\\":{\\\"Enabled\\\":true}}\"\n\n\nOutput:\n\n{\n    \"LoadBalancerAttributes\": {\n        \"CrossZoneLoadBalancing\": {\n            \"Enabled\": true\n        }\n    },\n    \"LoadBalancerName\": \"my-load-balancer\"\n}\n\n\nThis example modifies the ConnectionDraining attribute of the specified load balancer.\n\nCommand:\n\naws elb modify-load-balancer-attributes --load-balancer-name my-load-balancer --load-balancer-attributes \"{\\\"ConnectionDraining\\\":{\\\"Enabled\\\":true,\\\"Timeout\\\":300}}\"\n\n\nOutput:\n\n{\n    \"LoadBalancerAttributes\": {\n        \"ConnectionDraining\": {\n            \"Enabled\": true,\n            \"Timeout\": 300\n        }\n    },\n    \"LoadBalancerName\": \"my-load-balancer\"\n}\n"
    },
    {
      "command_name": "register-instances-with-load-balancer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/register-instances-with-load-balancer.html",
      "command_description": "Description\n\nAdds the specified instances to the specified load balancer.\n\nThe instance must be a running instance in the same network as the load balancer (EC2-Classic or the same VPC). If you have EC2-Classic instances and a load balancer in a VPC with ClassicLink enabled, you can link the EC2-Classic instances to that VPC and then register the linked EC2-Classic instances with the load balancer in the VPC.\n\nNote that RegisterInstanceWithLoadBalancer completes when the request has been registered. Instance registration takes a little time to complete. To check the state of the registered instances, use DescribeLoadBalancers or DescribeInstanceHealth .\n\nAfter the instance is registered, it starts receiving traffic and requests from the load balancer. Any instance that is not in one of the Availability Zones registered for the load balancer is moved to the OutOfService state. If an Availability Zone is added to the load balancer later, any instances registered with the load balancer move to the InService state.\n\nTo deregister instances from a load balancer, use DeregisterInstancesFromLoadBalancer .\n\nFor more information, see Register or De-Register EC2 Instances in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-instances-with-load-balancer\n--load-balancer-name <value>\n--instances <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--instances <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--instances (list)\n\nThe IDs of the instances.\n\n(structure)\n\nThe ID of an EC2 instance.\n\nInstanceId -> (string)\n\nThe instance ID.\n\nShorthand Syntax:\n\n--instances InstanceId1 InstanceId2 InstanceId3\n\n\nJSON Syntax:\n\n[\n  {\n    \"InstanceId\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstances -> (list)\n\nThe updated list of instances for the load balancer.\n\n(structure)\n\nThe ID of an EC2 instance.\n\nInstanceId -> (string)\n\nThe instance ID.",
      "command_examples": "Examples\n\nTo register instances with a load balancer\n\nThis example registers the specified instance with the specified load balancer.\n\nCommand:\n\naws elb register-instances-with-load-balancer --load-balancer-name my-load-balancer --instances i-d6f6fae3\n\n\nOutput:\n\n{\n   \"Instances\": [\n       {\n           \"InstanceId\": \"i-d6f6fae3\"\n       },\n       {\n           \"InstanceId\": \"i-207d9717\"\n       },\n       {\n           \"InstanceId\": \"i-afefb49b\"\n       }\n   ]\n}\n"
    },
    {
      "command_name": "remove-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/remove-tags.html",
      "command_description": "Description\n\nRemoves one or more tags from the specified load balancer.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-tags\n--load-balancer-names <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-names <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-names (list)\n\nThe name of the load balancer. You can specify a maximum of one load balancer name.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (list)\n\nThe list of tag keys to remove.\n\n(structure)\n\nThe key of a tag.\n\nKey -> (string)\n\nThe name of the key.\n\nShorthand Syntax:\n\n--tags Key1 Key2 Key3\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from a load balancer\n\nThis example removes a tag from the specified load balancer.\n\nCommand:\n\naws elb remove-tags --load-balancer-name my-load-balancer --tags project\n"
    },
    {
      "command_name": "set-load-balancer-listener-ssl-certificate",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/set-load-balancer-listener-ssl-certificate.html",
      "command_description": "Description\n\nSets the certificate that terminates the specified listener’s SSL connections. The specified certificate replaces any prior certificate that was used on the same load balancer and port.\n\nFor more information about updating your SSL certificate, see Replace the SSL Certificate for Your Load Balancer in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-load-balancer-listener-ssl-certificate\n--load-balancer-name <value>\n--load-balancer-port <value>\n--ssl-certificate-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--load-balancer-port <value>",
        "--ssl-certificate-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--load-balancer-port (integer)\n\nThe port that uses the specified SSL certificate.\n\n--ssl-certificate-id (string)\n\nThe Amazon Resource Name (ARN) of the SSL certificate.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the SSL certificate for an HTTPS load balancer\n\nThis example replaces the existing SSL certificate for the specified HTTPS load balancer.\n\nCommand:\n\naws elb set-load-balancer-listener-ssl-certificate --load-balancer-name my-load-balancer --load-balancer-port 443 --ssl-certificate-id arn:aws:iam::123456789012:server-certificate/new-server-cert\n"
    },
    {
      "command_name": "set-load-balancer-policies-for-backend-server",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/set-load-balancer-policies-for-backend-server.html",
      "command_description": "Description\n\nReplaces the set of policies associated with the specified port on which the EC2 instance is listening with a new set of policies. At this time, only the back-end server authentication policy type can be applied to the instance ports; this policy type is composed of multiple public key policies.\n\nEach time you use SetLoadBalancerPoliciesForBackendServer to enable the policies, use the PolicyNames parameter to list the policies that you want to enable.\n\nYou can use DescribeLoadBalancers or DescribeLoadBalancerPolicies to verify that the policy is associated with the EC2 instance.\n\nFor more information about enabling back-end instance authentication, see Configure Back-end Instance Authentication in the Classic Load Balancers Guide . For more information about Proxy Protocol, see Configure Proxy Protocol Support in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-load-balancer-policies-for-backend-server\n--load-balancer-name <value>\n--instance-port <value>\n--policy-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--instance-port <value>",
        "--policy-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--instance-port (integer)\n\nThe port number associated with the EC2 instance.\n\n--policy-names (list)\n\nThe names of the policies. If the list is empty, then all current polices are removed from the EC2 instance.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo replace the policies associated with a port for a backend instance\n\nThis example replaces the policies that are currently associated with the specified port.\n\nCommand:\n\naws elb set-load-balancer-policies-for-backend-server --load-balancer-name my-load-balancer --instance-port 80 --policy-names my-ProxyProtocol-policy\n\n\nTo remove all policies that are currently associated with a port on your backend instance\n\nThis example removes all policies associated with the specified port.\n\nCommand:\n\naws elb set-load-balancer-policies-for-backend-server --load-balancer-name my-load-balancer --instance-port 80 --policy-names []\n\n\nTo confirm that the policies are removed, use the describe-load-balancer-policies command."
    },
    {
      "command_name": "set-load-balancer-policies-of-listener",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/set-load-balancer-policies-of-listener.html",
      "command_description": "Description\n\nReplaces the current set of policies for the specified load balancer port with the specified set of policies.\n\nTo enable back-end server authentication, use SetLoadBalancerPoliciesForBackendServer .\n\nFor more information about setting policies, see Update the SSL Negotiation Configuration , Duration-Based Session Stickiness , and Application-Controlled Session Stickiness in the Classic Load Balancers Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-load-balancer-policies-of-listener\n--load-balancer-name <value>\n--load-balancer-port <value>\n--policy-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--load-balancer-name <value>",
        "--load-balancer-port <value>",
        "--policy-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--load-balancer-name (string)\n\nThe name of the load balancer.\n\n--load-balancer-port (integer)\n\nThe external port of the load balancer.\n\n--policy-names (list)\n\nThe names of the policies. This list must include all policies to be enabled. If you omit a policy that is currently enabled, it is disabled. If the list is empty, all current policies are disabled.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo replace the policies associated with a listener\n\nThis example replaces the policies that are currently associated with the specified listener.\n\nCommand:\n\naws elb set-load-balancer-policies-of-listener --load-balancer-name my-load-balancer --load-balancer-port 443 --policy-names my-SSLNegotiation-policy\n\n\nTo remove all policies associated with your listener\n\nThis example removes all policies that are currently associated with the specified listener.\n\nCommand:\n\naws elb set-load-balancer-policies-of-listener --load-balancer-name my-load-balancer --load-balancer-port 443 --policy-names []\n\n\nTo confirm that the policies are removed from the load balancer, use the describe-load-balancer-policies command."
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/elb/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description\n\nA load balancer can distribute incoming traffic across your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered instances and ensures that it routes traffic only to healthy instances. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer and a protocol and port number for connections from the load balancer to the instances.\n\nElastic Load Balancing supports three types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers. You can select a load balancer based on your application needs. For more information, see the Elastic Load Balancing User Guide .\n\nThis reference covers the 2012-06-01 API, which supports Classic Load Balancers. The 2015-12-01 API supports Application Load Balancers and Network Load Balancers.\n\nTo get started, create a load balancer with one or more listeners using CreateLoadBalancer . Register your instances with the load balancer using RegisterInstancesWithLoadBalancer .\n\nAll Elastic Load Balancing operations are idempotent , which means that they complete at most one time. If you repeat an operation, it succeeds with a 200 OK response code."
}