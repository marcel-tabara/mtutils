{
  "service_name": "mediastore-data",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediastore-data/index.html",
  "service_commands": [
    {
      "command_name": "delete-object",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediastore-data/delete-object.html",
      "command_description": "Description\n\nDeletes an object at the specified path.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-object\n--path <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--path <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path (string)\n\nThe path (including the file name) where the object is stored in the container. Format: <folder name>/<folder name>/<file name>\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an object\n\nThe following delete-object example deletes the specified object.\n\naws mediastore-data delete-object \\\n    --endpoint=https://aaabbbcccdddee.data.mediastore.us-west-2.amazonaws.com \\\n    --path=/folder_name/README.md\n\n\nThis command produces no output.\n\nFor more information, see Deleting an Object in the AWS Elemental MediaStore User Guide."
    },
    {
      "command_name": "describe-object",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediastore-data/describe-object.html",
      "command_description": "Description\n\nGets the headers for an object at the specified path.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-object\n--path <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--path <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path (string)\n\nThe path (including the file name) where the object is stored in the container. Format: <folder name>/<folder name>/<file name>\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nETag -> (string)\n\nThe ETag that represents a unique instance of the object.\n\nContentType -> (string)\n\nThe content type of the object.\n\nContentLength -> (long)\n\nThe length of the object in bytes.\n\nCacheControl -> (string)\n\nAn optional CacheControl header that allows the caller to control the object’s cache behavior. Headers can be passed in as specified in the HTTP at https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9 .\n\nHeaders with a custom user-defined value are also accepted.\n\nLastModified -> (timestamp)\n\nThe date and time that the object was last modified.",
      "command_examples": "Examples\n\nTo view the headers for an object\n\nThe following describe-object example displays the headers for an object at the specified path.\n\naws mediastore-data describe-object \\\n    --endpoint https://aaabbbcccdddee.data.mediastore.us-west-2.amazonaws.com \\\n    --path events/baseball/setup.jpg\n\n\nOutput:\n\n{\n    \"LastModified\": \"Fri, 19 Jul 2019 21:50:31 GMT\",\n    \"ContentType\": \"image/jpeg\",\n    \"ContentLength\": \"3860266\",\n    \"ETag\": \"2aa333bbcc8d8d22d777e999c88d4aa9eeeeee4dd89ff7f555555555555da6d3\"\n}\n\n\nFor more information, see Viewing the Details of an Object in the AWS Elemental MediaStore User Guide."
    },
    {
      "command_name": "get-object",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediastore-data/get-object.html",
      "command_description": "Description\n\nDownloads the object at the specified path. If the object’s upload availability is set to streaming , AWS Elemental MediaStore downloads the object even if it’s still uploading the object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-object\n--path <value>\n[--range <value>]\n<outfile>\n",
      "command_options": [
        "--path <value>",
        "[--range <value>]",
        "<outfile>"
      ],
      "command_options_description": "Options\n\n--path (string)\n\nThe path (including the file name) where the object is stored in the container. Format: <folder name>/<folder name>/<file name>\n\nFor example, to upload the file mlaw.avi to the folder path premium\\canada in the container movies , enter the path premium/canada/mlaw.avi .\n\nDo not include the container name in this path.\n\nIf the path includes any folders that don’t exist yet, the service creates them. For example, suppose you have an existing premium/usa subfolder. If you specify premium/canada , the service creates a canada subfolder in the premium folder. You then have two subfolders, usa and canada , in the premium folder.\n\nThere is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.\n\nFor more information about folders and how they exist in a container, see the AWS Elemental MediaStore User Guide .\n\nThe file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.\n\n--range (string)\n\nThe range bytes of an object to retrieve. For more information about the Range header, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35 . AWS Elemental MediaStore ignores this header for partially uploaded objects that have streaming upload availability.\n\noutfile (string) Filename where the content will be saved\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBody -> (blob)\n\nThe bytes of the object.\n\nCacheControl -> (string)\n\nAn optional CacheControl header that allows the caller to control the object’s cache behavior. Headers can be passed in as specified in the HTTP spec at https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9 .\n\nHeaders with a custom user-defined value are also accepted.\n\nContentRange -> (string)\n\nThe range of bytes to retrieve.\n\nContentLength -> (long)\n\nThe length of the object in bytes.\n\nContentType -> (string)\n\nThe content type of the object.\n\nETag -> (string)\n\nThe ETag that represents a unique instance of the object.\n\nLastModified -> (timestamp)\n\nThe date and time that the object was last modified.\n\nStatusCode -> (integer)\n\nThe HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.",
      "command_examples": "Examples\n\nExample 1: To download an entire object\n\nThe following get-object example downloads the specified object.\n\naws mediastore-data get-object \\\n    --endpoint https://aaabbbcccdddee.data.mediastore.us-west-2.amazonaws.com \\\n    --path events/baseball/setup.jpg setup.jpg\n\n\nOutput:\n\n{\n    \"ContentType\": \"image/jpeg\",\n    \"StatusCode\": 200,\n    \"ETag\": \"2aa333bbcc8d8d22d777e999c88d4aa9eeeeee4dd89ff7f555555555555da6d3\",\n    \"ContentLength\": \"3860266\",\n    \"LastModified\": \"Fri, 19 Jul 2019 21:50:31 GMT\"\n}\n\n\nExample 2: To download part of an object\n\nThe following get-object example downloads the specified part of an object.\n\naws mediastore-data get-object \\\n    --endpoint https://aaabbbcccdddee.data.mediastore.us-west-2.amazonaws.com \\\n    --path events/baseball/setup.jpg setup.jpg \\\n    --range \"bytes=0-100\"\n\n\nOutput:\n\n{\n    \"StatusCode\": 206,\n    \"LastModified\": \"Fri, 19 Jul 2019 21:50:31 GMT\",\n    \"ContentType\": \"image/jpeg\",\n    \"ContentRange\": \"bytes 0-100/3860266\",\n    \"ETag\": \"2aa333bbcc8d8d22d777e999c88d4aa9eeeeee4dd89ff7f555555555555da6d3\",\n    \"ContentLength\": \"101\"\n}\n\n\nFor more information, see Downloading an Object in the AWS Elemental MediaStore User Guide."
    },
    {
      "command_name": "list-items",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediastore-data/list-items.html",
      "command_description": "Description\n\nProvides a list of metadata entries about folders and objects in the specified folder.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-items is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Items",
      "command_synopsis": "Synopsis\n  list-items\n[--path <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--path <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path (string)\n\nThe path in the container from which to retrieve items. Format: <folder name>/<folder name>/<file name>\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nThe metadata entries for the folders and objects at the requested path.\n\n(structure)\n\nA metadata entry for a folder or object.\n\nName -> (string)\n\nThe name of the item.\n\nType -> (string)\n\nThe item type (folder or object).\n\nETag -> (string)\n\nThe ETag that represents a unique instance of the item.\n\nLastModified -> (timestamp)\n\nThe date and time that the item was last modified.\n\nContentType -> (string)\n\nThe content type of the item.\n\nContentLength -> (long)\n\nThe length of the item in bytes.\n\nNextToken -> (string)\n\nThe token that can be used in a request to view the next set of results. For example, you submit a ListItems request that matches 2,000 items with MaxResults set at 500. The service returns the first batch of results (up to 500) and a NextToken value that can be used to fetch the next batch of results.",
      "command_examples": "Examples\n\nExample 1: To view a list of items (objects and folders) stored in a container\n\nThe following list-items example displays a list of items (objects and folders) stored in the specified container.\n\naws mediastore-data list-items \\\n    --endpoint https://aaabbbcccdddee.data.mediastore.us-west-2.amazonaws.com\n\n\nOutput:\n\n{\n    \"Items\": [\n        {\n            \"Type\": \"OBJECT\",\n            \"ContentLength\": 3784,\n            \"Name\": \"setup.jpg\",\n            \"ETag\": \"2aa333bbcc8d8d22d777e999c88d4aa9eeeeee4dd89ff7f555555555555da6d3\",\n            \"ContentType\": \"image/jpeg\",\n            \"LastModified\": 1563571859.379\n        },\n        {\n            \"Type\": \"FOLDER\",\n            \"Name\": \"events\"\n        }\n    ]\n}\n\n\nExample 2: To view a list of items (objects and folders) stored in a folder\n\nThe following list-items example displays a list of items (objects and folders) stored in the specified folder.\n\naws mediastore-data list-items \\\n    --endpoint https://aaabbbcccdddee.data.mediastore.us-west-2.amazonaws.com \\\n    --path events/baseball\n\n\nOutput:\n\n{\n    \"Items\": [\n        {\n            \"ETag\": \"2aa333bbcc8d8d22d777e999c88d4aa9eeeeee4dd89ff7f555555555555da6d3\",\n            \"ContentType\": \"image/jpeg\",\n            \"Type\": \"OBJECT\",\n            \"ContentLength\": 3860266,\n            \"LastModified\": 1563573031.872,\n            \"Name\": \"setup.jpg\"\n        }\n    ]\n}\n\n\nFor more information, see Viewing a List of Objects in the AWS Elemental MediaStore User Guide."
    },
    {
      "command_name": "put-object",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediastore-data/put-object.html",
      "command_description": "Description\n\nUploads an object to the specified path. Object sizes are limited to 25 MB for standard upload availability and 10 MB for streaming upload availability.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-object\n--body <value>\n--path <value>\n[--content-type <value>]\n[--cache-control <value>]\n[--storage-class <value>]\n[--upload-availability <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--body <value>",
        "--path <value>",
        "[--content-type <value>]",
        "[--cache-control <value>]",
        "[--storage-class <value>]",
        "[--upload-availability <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--body (blob)\n\nThe bytes to be stored.\n\n--path (string)\n\nThe path (including the file name) where the object is stored in the container. Format: <folder name>/<folder name>/<file name>\n\nFor example, to upload the file mlaw.avi to the folder path premium\\canada in the container movies , enter the path premium/canada/mlaw.avi .\n\nDo not include the container name in this path.\n\nIf the path includes any folders that don’t exist yet, the service creates them. For example, suppose you have an existing premium/usa subfolder. If you specify premium/canada , the service creates a canada subfolder in the premium folder. You then have two subfolders, usa and canada , in the premium folder.\n\nThere is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.\n\nFor more information about folders and how they exist in a container, see the AWS Elemental MediaStore User Guide .\n\nThe file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.\n\n--content-type (string)\n\nThe content type of the object.\n\n--cache-control (string)\n\nAn optional CacheControl header that allows the caller to control the object’s cache behavior. Headers can be passed in as specified in the HTTP at https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9 .\n\nHeaders with a custom user-defined value are also accepted.\n\n--storage-class (string)\n\nIndicates the storage class of a Put request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.\n\nPossible values:\n\nTEMPORAL\n\n--upload-availability (string)\n\nIndicates the availability of an object while it is still uploading. If the value is set to streaming , the object is available for downloading after some initial buffering but before the object is uploaded completely. If the value is set to standard , the object is available for downloading only when it is uploaded completely. The default value for this header is standard .\n\nTo use this header, you must also set the HTTP Transfer-Encoding header to chunked .\n\nPossible values:\n\nSTANDARD\n\nSTREAMING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nContentSHA256 -> (string)\n\nThe SHA256 digest of the object that is persisted.\n\nETag -> (string)\n\nUnique identifier of the object in the container.\n\nStorageClass -> (string)\n\nThe storage class where the object was persisted. The class should be “Temporal”.",
      "command_examples": "Examples\n\nExample 1: To upload an object to a container\n\nThe following put-object example upload an object to the specified container.\n\naws mediastore-data put-object \\\n    --endpoint https://aaabbbcccdddee.data.mediastore.us-west-2.amazonaws.com \\\n    --body ReadMe.md \\\n    --path ReadMe.md \\\n    --cache-control \"max-age=6, public\" \\\n    --content-type binary/octet-stream\n\n\nOutput:\n\n{\n    \"ContentSHA256\": \"f29bc64a9d3732b4b9035125fdb3285f5b6455778edca72414671e0ca3b2e0de\",\n    \"StorageClass\": \"TEMPORAL\",\n    \"ETag\": \"2aa333bbcc8d8d22d777e999c88d4aa9eeeeee4dd89ff7f555555555555da6d3\"\n}\n\n\nExample 2: To upload an object to a folder within a container\n\nThe following put-object example upload an object to the specified folder within a container.\n\naws mediastore-data put-object \\\n    --endpoint https://aaabbbcccdddee.data.mediastore.us-west-2.amazonaws.com \\\n    --body ReadMe.md \\\n    --path /september-events/ReadMe.md \\\n    --cache-control \"max-age=6, public\" \\\n    --content-type binary/octet-stream\n\n\nOutput:\n\n{\n    \"ETag\": \"2aa333bbcc8d8d22d777e999c88d4aa9eeeeee4dd89ff7f555555555555da6d3\",\n    \"ContentSHA256\": \"f29bc64a9d3732b4b9035125fdb3285f5b6455778edca72414671e0ca3b2e0de\",\n    \"StorageClass\": \"TEMPORAL\"\n}\n\n\nFor more information, see Uploading an Object in the AWS Elemental MediaStore User Guide."
    }
  ],
  "service_description": "Description\n\nAn AWS Elemental MediaStore asset is an object, similar to an object in the Amazon S3 service. Objects are the fundamental entities that are stored in AWS Elemental MediaStore."
}