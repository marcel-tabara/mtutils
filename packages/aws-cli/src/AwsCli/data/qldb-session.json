{
  "service_name": "qldb-session",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/qldb-session/index.html",
  "service_commands": [
    {
      "command_name": "send-command",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/qldb-session/send-command.html",
      "command_description": "Description\n\nSends a command to an Amazon QLDB ledger.\n\nNote\n\nInstead of interacting directly with this API, we recommend using the QLDB driver or the QLDB shell to execute data transactions on a ledger.\n\nIf you are working with an AWS SDK, use the QLDB driver. The driver provides a high-level abstraction layer above this QLDB Session data plane and manages SendCommand API calls for you. For information and a list of supported programming languages, see Getting started with the driver in the Amazon QLDB Developer Guide .\n\nIf you are working with the AWS Command Line Interface (AWS CLI), use the QLDB shell. The shell is a command line interface that uses the QLDB driver to interact with a ledger. For information, see Accessing Amazon QLDB using the QLDB shell .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  send-command\n[--session-token <value>]\n[--start-session <value>]\n[--start-transaction <value>]\n[--end-session <value>]\n[--commit-transaction <value>]\n[--abort-transaction <value>]\n[--execute-statement <value>]\n[--fetch-page <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--session-token <value>]",
        "[--start-session <value>]",
        "[--start-transaction <value>]",
        "[--end-session <value>]",
        "[--commit-transaction <value>]",
        "[--abort-transaction <value>]",
        "[--execute-statement <value>]",
        "[--fetch-page <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--session-token (string)\n\nSpecifies the session token for the current command. A session token is constant throughout the life of the session.\n\nTo obtain a session token, run the StartSession command. This SessionToken is required for every subsequent command that is issued during the current session.\n\n--start-session (structure)\n\nCommand to start a new session. A session token is obtained as part of the response.\n\nLedgerName -> (string)\n\nThe name of the ledger to start a new session against.\n\nShorthand Syntax:\n\nLedgerName=string\n\n\nJSON Syntax:\n\n{\n  \"LedgerName\": \"string\"\n}\n\n\n--start-transaction (structure)\n\nCommand to start a new transaction.\n\nJSON Syntax:\n\n{\n\n}\n\n\n--end-session (structure)\n\nCommand to end the current session.\n\nJSON Syntax:\n\n{\n\n}\n\n\n--commit-transaction (structure)\n\nCommand to commit the specified transaction.\n\nTransactionId -> (string)\n\nSpecifies the transaction ID of the transaction to commit.\n\nCommitDigest -> (blob)\n\nSpecifies the commit digest for the transaction to commit. For every active transaction, the commit digest must be passed. QLDB validates CommitDigest and rejects the commit with an error if the digest computed on the client does not match the digest computed by QLDB.\n\nThe purpose of the CommitDigest parameter is to ensure that QLDB commits a transaction if and only if the server has processed the exact set of statements sent by the client, in the same order that client sent them, and with no duplicates.\n\nShorthand Syntax:\n\nTransactionId=string,CommitDigest=blob\n\n\nJSON Syntax:\n\n{\n  \"TransactionId\": \"string\",\n  \"CommitDigest\": blob\n}\n\n\n--abort-transaction (structure)\n\nCommand to abort the current transaction.\n\nJSON Syntax:\n\n{\n\n}\n\n\n--execute-statement (structure)\n\nCommand to execute a statement in the specified transaction.\n\nTransactionId -> (string)\n\nSpecifies the transaction ID of the request.\n\nStatement -> (string)\n\nSpecifies the statement of the request.\n\nParameters -> (list)\n\nSpecifies the parameters for the parameterized statement in the request.\n\n(structure)\n\nA structure that can contain a value in multiple encoding formats.\n\nIonBinary -> (blob)\n\nAn Amazon Ion binary value contained in a ValueHolder structure.\n\nIonText -> (string)\n\nAn Amazon Ion plaintext value contained in a ValueHolder structure.\n\nShorthand Syntax:\n\nTransactionId=string,Statement=string,Parameters=[{IonBinary=blob,IonText=string},{IonBinary=blob,IonText=string}]\n\n\nJSON Syntax:\n\n{\n  \"TransactionId\": \"string\",\n  \"Statement\": \"string\",\n  \"Parameters\": [\n    {\n      \"IonBinary\": blob,\n      \"IonText\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--fetch-page (structure)\n\nCommand to fetch a page.\n\nTransactionId -> (string)\n\nSpecifies the transaction ID of the page to be fetched.\n\nNextPageToken -> (string)\n\nSpecifies the next page token of the page to be fetched.\n\nShorthand Syntax:\n\nTransactionId=string,NextPageToken=string\n\n\nJSON Syntax:\n\n{\n  \"TransactionId\": \"string\",\n  \"NextPageToken\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStartSession -> (structure)\n\nContains the details of the started session that includes a session token. This SessionToken is required for every subsequent command that is issued during the current session.\n\nSessionToken -> (string)\n\nSession token of the started session. This SessionToken is required for every subsequent command that is issued during the current session.\n\nTimingInformation -> (structure)\n\nContains server-side performance information for the command.\n\nProcessingTimeMilliseconds -> (long)\n\nThe amount of time that QLDB spent on processing the command, measured in milliseconds.\n\nStartTransaction -> (structure)\n\nContains the details of the started transaction.\n\nTransactionId -> (string)\n\nThe transaction ID of the started transaction.\n\nTimingInformation -> (structure)\n\nContains server-side performance information for the command.\n\nProcessingTimeMilliseconds -> (long)\n\nThe amount of time that QLDB spent on processing the command, measured in milliseconds.\n\nEndSession -> (structure)\n\nContains the details of the ended session.\n\nTimingInformation -> (structure)\n\nContains server-side performance information for the command.\n\nProcessingTimeMilliseconds -> (long)\n\nThe amount of time that QLDB spent on processing the command, measured in milliseconds.\n\nCommitTransaction -> (structure)\n\nContains the details of the committed transaction.\n\nTransactionId -> (string)\n\nThe transaction ID of the committed transaction.\n\nCommitDigest -> (blob)\n\nThe commit digest of the committed transaction.\n\nTimingInformation -> (structure)\n\nContains server-side performance information for the command.\n\nProcessingTimeMilliseconds -> (long)\n\nThe amount of time that QLDB spent on processing the command, measured in milliseconds.\n\nConsumedIOs -> (structure)\n\nContains metrics about the number of I/O requests that were consumed.\n\nReadIOs -> (long)\n\nThe number of read I/O requests that the command made.\n\nWriteIOs -> (long)\n\nThe number of write I/O requests that the command made.\n\nAbortTransaction -> (structure)\n\nContains the details of the aborted transaction.\n\nTimingInformation -> (structure)\n\nContains server-side performance information for the command.\n\nProcessingTimeMilliseconds -> (long)\n\nThe amount of time that QLDB spent on processing the command, measured in milliseconds.\n\nExecuteStatement -> (structure)\n\nContains the details of the executed statement.\n\nFirstPage -> (structure)\n\nContains the details of the first fetched page.\n\nValues -> (list)\n\nA structure that contains values in multiple encoding formats.\n\n(structure)\n\nA structure that can contain a value in multiple encoding formats.\n\nIonBinary -> (blob)\n\nAn Amazon Ion binary value contained in a ValueHolder structure.\n\nIonText -> (string)\n\nAn Amazon Ion plaintext value contained in a ValueHolder structure.\n\nNextPageToken -> (string)\n\nThe token of the next page.\n\nTimingInformation -> (structure)\n\nContains server-side performance information for the command.\n\nProcessingTimeMilliseconds -> (long)\n\nThe amount of time that QLDB spent on processing the command, measured in milliseconds.\n\nConsumedIOs -> (structure)\n\nContains metrics about the number of I/O requests that were consumed.\n\nReadIOs -> (long)\n\nThe number of read I/O requests that the command made.\n\nWriteIOs -> (long)\n\nThe number of write I/O requests that the command made.\n\nFetchPage -> (structure)\n\nContains the details of the fetched page.\n\nPage -> (structure)\n\nContains details of the fetched page.\n\nValues -> (list)\n\nA structure that contains values in multiple encoding formats.\n\n(structure)\n\nA structure that can contain a value in multiple encoding formats.\n\nIonBinary -> (blob)\n\nAn Amazon Ion binary value contained in a ValueHolder structure.\n\nIonText -> (string)\n\nAn Amazon Ion plaintext value contained in a ValueHolder structure.\n\nNextPageToken -> (string)\n\nThe token of the next page.\n\nTimingInformation -> (structure)\n\nContains server-side performance information for the command.\n\nProcessingTimeMilliseconds -> (long)\n\nThe amount of time that QLDB spent on processing the command, measured in milliseconds.\n\nConsumedIOs -> (structure)\n\nContains metrics about the number of I/O requests that were consumed.\n\nReadIOs -> (long)\n\nThe number of read I/O requests that the command made.\n\nWriteIOs -> (long)\n\nThe number of write I/O requests that the command made."
    }
  ],
  "service_description": "Description\n\nThe transactional data APIs for Amazon QLDB\n\nNote\n\nInstead of interacting directly with this API, we recommend using the QLDB driver or the QLDB shell to execute data transactions on a ledger.\n\nIf you are working with an AWS SDK, use the QLDB driver. The driver provides a high-level abstraction layer above this QLDB Session data plane and manages SendCommand API calls for you. For information and a list of supported programming languages, see Getting started with the driver in the Amazon QLDB Developer Guide .\n\nIf you are working with the AWS Command Line Interface (AWS CLI), use the QLDB shell. The shell is a command line interface that uses the QLDB driver to interact with a ledger. For information, see Accessing Amazon QLDB using the QLDB shell ."
}