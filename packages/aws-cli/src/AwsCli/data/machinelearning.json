{
  "service_name": "machinelearning",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/index.html",
  "service_commands": [
    {
      "command_name": "add-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/add-tags.html",
      "command_description": "Description\n\nAdds one or more tags to an object, up to a limit of 10. Each tag consists of a key and an optional value. If you add a tag using a key that is already associated with the ML object, AddTags updates the tag’s value.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-tags\n--tags <value>\n--resource-id <value>\n--resource-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--tags <value>",
        "--resource-id <value>",
        "--resource-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--tags (list)\n\nThe key-value pairs to use to create tags. If you specify a key without specifying a value, Amazon ML creates a tag with the specified key and a value of null.\n\n(structure)\n\nA custom key-value pair associated with an ML object, such as an ML model.\n\nKey -> (string)\n\nA unique identifier for the tag. Valid characters include Unicode letters, digits, white space, _, ., /, =, +, -, %, and @.\n\nValue -> (string)\n\nAn optional string, typically used to describe or define the tag. Valid characters include Unicode letters, digits, white space, _, ., /, =, +, -, %, and @.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--resource-id (string)\n\nThe ID of the ML object to tag. For example, exampleModelId .\n\n--resource-type (string)\n\nThe type of the ML object to tag.\n\nPossible values:\n\nBatchPrediction\n\nDataSource\n\nEvaluation\n\nMLModel\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceId -> (string)\n\nThe ID of the ML object that was tagged.\n\nResourceType -> (string)\n\nThe type of the ML object that was tagged."
    },
    {
      "command_name": "create-batch-prediction",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/create-batch-prediction.html",
      "command_description": "Description\n\nGenerates predictions for a group of observations. The observations to process exist in one or more data files referenced by a DataSource . This operation creates a new BatchPrediction , and uses an MLModel and the data files referenced by the DataSource as information sources.\n\nCreateBatchPrediction is an asynchronous operation. In response to CreateBatchPrediction , Amazon Machine Learning (Amazon ML) immediately returns and sets the BatchPrediction status to PENDING . After the BatchPrediction completes, Amazon ML sets the status to COMPLETED .\n\nYou can poll for status updates by using the GetBatchPrediction operation and checking the Status parameter of the result. After the COMPLETED status appears, the results are available in the location specified by the OutputUri parameter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-batch-prediction\n--batch-prediction-id <value>\n[--batch-prediction-name <value>]\n--ml-model-id <value>\n--batch-prediction-data-source-id <value>\n--output-uri <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--batch-prediction-id <value>",
        "[--batch-prediction-name <value>]",
        "--ml-model-id <value>",
        "--batch-prediction-data-source-id <value>",
        "--output-uri <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--batch-prediction-id (string)\n\nA user-supplied ID that uniquely identifies the BatchPrediction .\n\n--batch-prediction-name (string)\n\nA user-supplied name or description of the BatchPrediction . BatchPredictionName can only use the UTF-8 character set.\n\n--ml-model-id (string)\n\nThe ID of the MLModel that will generate predictions for the group of observations.\n\n--batch-prediction-data-source-id (string)\n\nThe ID of the DataSource that points to the group of observations to predict.\n\n--output-uri (string)\n\nThe location of an Amazon Simple Storage Service (Amazon S3) bucket or directory to store the batch prediction results. The following substrings are not allowed in the s3 key portion of the outputURI field: ‘:’, ‘//’, ‘/./’, ‘/../’.\n\nAmazon ML needs permissions to store and retrieve the logs on your behalf. For information about how to set permissions, see the Amazon Machine Learning Developer Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBatchPredictionId -> (string)\n\nA user-supplied ID that uniquely identifies the BatchPrediction . This value is identical to the value of the BatchPredictionId in the request."
    },
    {
      "command_name": "create-data-source-from-rds",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/create-data-source-from-rds.html",
      "command_description": "Description\n\nCreates a DataSource object from an Amazon Relational Database Service (Amazon RDS). A DataSource references data that can be used to perform CreateMLModel , CreateEvaluation , or CreateBatchPrediction operations.\n\nCreateDataSourceFromRDS is an asynchronous operation. In response to CreateDataSourceFromRDS , Amazon Machine Learning (Amazon ML) immediately returns and sets the DataSource status to PENDING . After the DataSource is created and ready for use, Amazon ML sets the Status parameter to COMPLETED . DataSource in the COMPLETED or PENDING state can be used only to perform >CreateMLModel >, CreateEvaluation , or CreateBatchPrediction operations.\n\nIf Amazon ML cannot accept the input source, it sets the Status parameter to FAILED and includes an error message in the Message attribute of the GetDataSource operation response.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-data-source-from-rds\n--data-source-id <value>\n[--data-source-name <value>]\n--rds-data <value>\n--role-arn <value>\n[--compute-statistics | --no-compute-statistics]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--data-source-id <value>",
        "[--data-source-name <value>]",
        "--rds-data <value>",
        "--role-arn <value>",
        "[--compute-statistics | --no-compute-statistics]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--data-source-id (string)\n\nA user-supplied ID that uniquely identifies the DataSource . Typically, an Amazon Resource Number (ARN) becomes the ID for a DataSource .\n\n--data-source-name (string)\n\nA user-supplied name or description of the DataSource .\n\n--rds-data (structure)\n\nThe data specification of an Amazon RDS DataSource :\n\nDatabaseInformation -\n\nDatabaseName - The name of the Amazon RDS database.\n\nInstanceIdentifier - A unique identifier for the Amazon RDS database instance.\n\nDatabaseCredentials - AWS Identity and Access Management (IAM) credentials that are used to connect to the Amazon RDS database.\n\nResourceRole - A role (DataPipelineDefaultResourceRole) assumed by an EC2 instance to carry out the copy task from Amazon RDS to Amazon Simple Storage Service (Amazon S3). For more information, see Role templates for data pipelines.\n\nServiceRole - A role (DataPipelineDefaultRole) assumed by the AWS Data Pipeline service to monitor the progress of the copy task from Amazon RDS to Amazon S3. For more information, see Role templates for data pipelines.\n\nSecurityInfo - The security information to use to access an RDS DB instance. You need to set up appropriate ingress rules for the security entity IDs provided to allow access to the Amazon RDS instance. Specify a [SubnetId , SecurityGroupIds ] pair for a VPC-based RDS DB instance.\n\nSelectSqlQuery - A query that is used to retrieve the observation data for the Datasource .\n\nS3StagingLocation - The Amazon S3 location for staging Amazon RDS data. The data retrieved from Amazon RDS using SelectSqlQuery is stored in this location.\n\nDataSchemaUri - The Amazon S3 location of the DataSchema .\n\nDataSchema - A JSON string representing the schema. This is not required if DataSchemaUri is specified.\n\nDataRearrangement - A JSON string that represents the splitting and rearrangement requirements for the Datasource . Sample - \"{\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"\n\nDatabaseInformation -> (structure)\n\nDescribes the DatabaseName and InstanceIdentifier of an Amazon RDS database.\n\nInstanceIdentifier -> (string)\n\nThe ID of an RDS DB instance.\n\nDatabaseName -> (string)\n\nThe name of a database hosted on an RDS DB instance.\n\nSelectSqlQuery -> (string)\n\nThe query that is used to retrieve the observation data for the DataSource .\n\nDatabaseCredentials -> (structure)\n\nThe AWS Identity and Access Management (IAM) credentials that are used connect to the Amazon RDS database.\n\nUsername -> (string)\n\nThe username to be used by Amazon ML to connect to database on an Amazon RDS instance. The username should have sufficient permissions to execute an RDSSelectSqlQuery query.\n\nPassword -> (string)\n\nThe password to be used by Amazon ML to connect to a database on an RDS DB instance. The password should have sufficient permissions to execute the RDSSelectQuery query.\n\nS3StagingLocation -> (string)\n\nThe Amazon S3 location for staging Amazon RDS data. The data retrieved from Amazon RDS using SelectSqlQuery is stored in this location.\n\nDataRearrangement -> (string)\n\nA JSON string that represents the splitting and rearrangement processing to be applied to a DataSource . If the DataRearrangement parameter is not provided, all of the input data is used to create the Datasource .\n\nThere are multiple parameters that control what data is used to create a datasource:\n\n**percentBegin ** Use percentBegin to indicate the beginning of the range of the data used to create the Datasource. If you do not include percentBegin and percentEnd , Amazon ML includes all of the data when creating the datasource.\n\n**percentEnd ** Use percentEnd to indicate the end of the range of the data used to create the Datasource. If you do not include percentBegin and percentEnd , Amazon ML includes all of the data when creating the datasource.\n\n**complement ** The complement parameter instructs Amazon ML to use the data that is not included in the range of percentBegin to percentEnd to create a datasource. The complement parameter is useful if you need to create complementary datasources for training and evaluation. To create a complementary datasource, use the same values for percentBegin and percentEnd , along with the complement parameter. For example, the following two datasources do not share any data, and can be used to train and evaluate a model. The first datasource has 25 percent of the data, and the second one has 75 percent of the data. Datasource for evaluation: {\"splitting\":{\"percentBegin\":0, \"percentEnd\":25}} Datasource for training: {\"splitting\":{\"percentBegin\":0, \"percentEnd\":25, \"complement\":\"true\"}}\n\n**strategy ** To change how Amazon ML splits the data for a datasource, use the strategy parameter. The default value for the strategy parameter is sequential , meaning that Amazon ML takes all of the data records between the percentBegin and percentEnd parameters for the datasource, in the order that the records appear in the input data. The following two DataRearrangement lines are examples of sequentially ordered training and evaluation datasources: Datasource for evaluation: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"sequential\"}} Datasource for training: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"sequential\", \"complement\":\"true\"}} To randomly split the input data into the proportions indicated by the percentBegin and percentEnd parameters, set the strategy parameter to random and provide a string that is used as the seed value for the random data splitting (for example, you can use the S3 path to your data as the random seed string). If you choose the random split strategy, Amazon ML assigns each row of data a pseudo-random number between 0 and 100, and then selects the rows that have an assigned number between percentBegin and percentEnd . Pseudo-random numbers are assigned using both the input seed string value and the byte offset as a seed, so changing the data results in a different split. Any existing ordering is preserved. The random splitting strategy ensures that variables in the training and evaluation data are distributed similarly. It is useful in the cases where the input data may have an implicit sort order, which would otherwise result in training and evaluation datasources containing non-similar data records. The following two DataRearrangement lines are examples of non-sequentially ordered training and evaluation datasources: Datasource for evaluation: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"random\", \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\"}} Datasource for training: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"random\", \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\", \"complement\":\"true\"}}\n\nDataSchema -> (string)\n\nA JSON string that represents the schema for an Amazon RDS DataSource . The DataSchema defines the structure of the observation data in the data file(s) referenced in the DataSource .\n\nA DataSchema is not required if you specify a DataSchemaUri\n\nDefine your DataSchema as a series of key-value pairs. attributes and excludedVariableNames have an array of key-value pairs for their value. Use the following format to define your DataSchema .\n\n{ “version”: “1.0”,\n\n“recordAnnotationFieldName”: “F1”,\n\n“recordWeightFieldName”: “F2”,\n\n“targetFieldName”: “F3”,\n\n“dataFormat”: “CSV”,\n\n“dataFileContainsHeader”: true,\n\n“attributes”: [\n\n{ “fieldName”: “F1”, “fieldType”: “TEXT” }, { “fieldName”: “F2”, “fieldType”: “NUMERIC” }, { “fieldName”: “F3”, “fieldType”: “CATEGORICAL” }, { “fieldName”: “F4”, “fieldType”: “NUMERIC” }, { “fieldName”: “F5”, “fieldType”: “CATEGORICAL” }, { “fieldName”: “F6”, “fieldType”: “TEXT” }, { “fieldName”: “F7”, “fieldType”: “WEIGHTED_INT_SEQUENCE” }, { “fieldName”: “F8”, “fieldType”: “WEIGHTED_STRING_SEQUENCE” } ],\n\n“excludedVariableNames”: [ “F6” ] }\n\nDataSchemaUri -> (string)\n\nThe Amazon S3 location of the DataSchema .\n\nResourceRole -> (string)\n\nThe role (DataPipelineDefaultResourceRole) assumed by an Amazon Elastic Compute Cloud (Amazon EC2) instance to carry out the copy operation from Amazon RDS to an Amazon S3 task. For more information, see Role templates for data pipelines.\n\nServiceRole -> (string)\n\nThe role (DataPipelineDefaultRole) assumed by AWS Data Pipeline service to monitor the progress of the copy task from Amazon RDS to Amazon S3. For more information, see Role templates for data pipelines.\n\nSubnetId -> (string)\n\nThe subnet ID to be used to access a VPC-based RDS DB instance. This attribute is used by Data Pipeline to carry out the copy task from Amazon RDS to Amazon S3.\n\nSecurityGroupIds -> (list)\n\nThe security group IDs to be used to access a VPC-based RDS DB instance. Ensure that there are appropriate ingress rules set up to allow access to the RDS DB instance. This attribute is used by Data Pipeline to carry out the copy operation from Amazon RDS to an Amazon S3 task.\n\n(string)\n\nShorthand Syntax:\n\nDatabaseInformation={InstanceIdentifier=string,DatabaseName=string},SelectSqlQuery=string,DatabaseCredentials={Username=string,Password=string},S3StagingLocation=string,DataRearrangement=string,DataSchema=string,DataSchemaUri=string,ResourceRole=string,ServiceRole=string,SubnetId=string,SecurityGroupIds=string,string\n\n\nJSON Syntax:\n\n{\n  \"DatabaseInformation\": {\n    \"InstanceIdentifier\": \"string\",\n    \"DatabaseName\": \"string\"\n  },\n  \"SelectSqlQuery\": \"string\",\n  \"DatabaseCredentials\": {\n    \"Username\": \"string\",\n    \"Password\": \"string\"\n  },\n  \"S3StagingLocation\": \"string\",\n  \"DataRearrangement\": \"string\",\n  \"DataSchema\": \"string\",\n  \"DataSchemaUri\": \"string\",\n  \"ResourceRole\": \"string\",\n  \"ServiceRole\": \"string\",\n  \"SubnetId\": \"string\",\n  \"SecurityGroupIds\": [\"string\", ...]\n}\n\n\n--role-arn (string)\n\nThe role that Amazon ML assumes on behalf of the user to create and activate a data pipeline in the user’s account and copy data using the SelectSqlQuery query from Amazon RDS to Amazon S3.\n\n--compute-statistics | --no-compute-statistics (boolean)\n\nThe compute statistics for a DataSource . The statistics are generated from the observation data referenced by a DataSource . Amazon ML uses the statistics internally during MLModel training. This parameter must be set to true if the DataSourceneeds to be used for MLModel training.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDataSourceId -> (string)\n\nA user-supplied ID that uniquely identifies the datasource. This value should be identical to the value of the DataSourceID in the request."
    },
    {
      "command_name": "create-data-source-from-redshift",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/create-data-source-from-redshift.html",
      "command_description": "Description\n\nCreates a DataSource from a database hosted on an Amazon Redshift cluster. A DataSource references data that can be used to perform either CreateMLModel , CreateEvaluation , or CreateBatchPrediction operations.\n\nCreateDataSourceFromRedshift is an asynchronous operation. In response to CreateDataSourceFromRedshift , Amazon Machine Learning (Amazon ML) immediately returns and sets the DataSource status to PENDING . After the DataSource is created and ready for use, Amazon ML sets the Status parameter to COMPLETED . DataSource in COMPLETED or PENDING states can be used to perform only CreateMLModel , CreateEvaluation , or CreateBatchPrediction operations.\n\nIf Amazon ML can’t accept the input source, it sets the Status parameter to FAILED and includes an error message in the Message attribute of the GetDataSource operation response.\n\nThe observations should be contained in the database hosted on an Amazon Redshift cluster and should be specified by a SelectSqlQuery query. Amazon ML executes an Unload command in Amazon Redshift to transfer the result set of the SelectSqlQuery query to S3StagingLocation .\n\nAfter the DataSource has been created, it’s ready for use in evaluations and batch predictions. If you plan to use the DataSource to train an MLModel , the DataSource also requires a recipe. A recipe describes how each input variable will be used in training an MLModel . Will the variable be included or excluded from training? Will the variable be manipulated; for example, will it be combined with another variable or will it be split apart into word combinations? The recipe provides answers to these questions.\n\nYou can’t change an existing datasource, but you can copy and modify the settings from an existing Amazon Redshift datasource to create a new datasource. To do so, call GetDataSource for an existing datasource and copy the values to a CreateDataSource call. Change the settings that you want to change and make sure that all required fields have the appropriate values.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-data-source-from-redshift\n--data-source-id <value>\n[--data-source-name <value>]\n--data-spec <value>\n--role-arn <value>\n[--compute-statistics | --no-compute-statistics]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--data-source-id <value>",
        "[--data-source-name <value>]",
        "--data-spec <value>",
        "--role-arn <value>",
        "[--compute-statistics | --no-compute-statistics]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--data-source-id (string)\n\nA user-supplied ID that uniquely identifies the DataSource .\n\n--data-source-name (string)\n\nA user-supplied name or description of the DataSource .\n\n--data-spec (structure)\n\nThe data specification of an Amazon Redshift DataSource :\n\nDatabaseInformation -\n\nDatabaseName - The name of the Amazon Redshift database.\n\nClusterIdentifier - The unique ID for the Amazon Redshift cluster.\n\nDatabaseCredentials - The AWS Identity and Access Management (IAM) credentials that are used to connect to the Amazon Redshift database.\n\nSelectSqlQuery - The query that is used to retrieve the observation data for the Datasource .\n\nS3StagingLocation - The Amazon Simple Storage Service (Amazon S3) location for staging Amazon Redshift data. The data retrieved from Amazon Redshift using the SelectSqlQuery query is stored in this location.\n\nDataSchemaUri - The Amazon S3 location of the DataSchema .\n\nDataSchema - A JSON string representing the schema. This is not required if DataSchemaUri is specified.\n\nDataRearrangement - A JSON string that represents the splitting and rearrangement requirements for the DataSource . Sample - \"{\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"\n\nDatabaseInformation -> (structure)\n\nDescribes the DatabaseName and ClusterIdentifier for an Amazon Redshift DataSource .\n\nDatabaseName -> (string)\n\nThe name of a database hosted on an Amazon Redshift cluster.\n\nClusterIdentifier -> (string)\n\nThe ID of an Amazon Redshift cluster.\n\nSelectSqlQuery -> (string)\n\nDescribes the SQL Query to execute on an Amazon Redshift database for an Amazon Redshift DataSource .\n\nDatabaseCredentials -> (structure)\n\nDescribes AWS Identity and Access Management (IAM) credentials that are used connect to the Amazon Redshift database.\n\nUsername -> (string)\n\nA username to be used by Amazon Machine Learning (Amazon ML)to connect to a database on an Amazon Redshift cluster. The username should have sufficient permissions to execute the RedshiftSelectSqlQuery query. The username should be valid for an Amazon Redshift USER .\n\nPassword -> (string)\n\nA password to be used by Amazon ML to connect to a database on an Amazon Redshift cluster. The password should have sufficient permissions to execute a RedshiftSelectSqlQuery query. The password should be valid for an Amazon Redshift USER .\n\nS3StagingLocation -> (string)\n\nDescribes an Amazon S3 location to store the result set of the SelectSqlQuery query.\n\nDataRearrangement -> (string)\n\nA JSON string that represents the splitting and rearrangement processing to be applied to a DataSource . If the DataRearrangement parameter is not provided, all of the input data is used to create the Datasource .\n\nThere are multiple parameters that control what data is used to create a datasource:\n\n**percentBegin ** Use percentBegin to indicate the beginning of the range of the data used to create the Datasource. If you do not include percentBegin and percentEnd , Amazon ML includes all of the data when creating the datasource.\n\n**percentEnd ** Use percentEnd to indicate the end of the range of the data used to create the Datasource. If you do not include percentBegin and percentEnd , Amazon ML includes all of the data when creating the datasource.\n\n**complement ** The complement parameter instructs Amazon ML to use the data that is not included in the range of percentBegin to percentEnd to create a datasource. The complement parameter is useful if you need to create complementary datasources for training and evaluation. To create a complementary datasource, use the same values for percentBegin and percentEnd , along with the complement parameter. For example, the following two datasources do not share any data, and can be used to train and evaluate a model. The first datasource has 25 percent of the data, and the second one has 75 percent of the data. Datasource for evaluation: {\"splitting\":{\"percentBegin\":0, \"percentEnd\":25}} Datasource for training: {\"splitting\":{\"percentBegin\":0, \"percentEnd\":25, \"complement\":\"true\"}}\n\n**strategy ** To change how Amazon ML splits the data for a datasource, use the strategy parameter. The default value for the strategy parameter is sequential , meaning that Amazon ML takes all of the data records between the percentBegin and percentEnd parameters for the datasource, in the order that the records appear in the input data. The following two DataRearrangement lines are examples of sequentially ordered training and evaluation datasources: Datasource for evaluation: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"sequential\"}} Datasource for training: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"sequential\", \"complement\":\"true\"}} To randomly split the input data into the proportions indicated by the percentBegin and percentEnd parameters, set the strategy parameter to random and provide a string that is used as the seed value for the random data splitting (for example, you can use the S3 path to your data as the random seed string). If you choose the random split strategy, Amazon ML assigns each row of data a pseudo-random number between 0 and 100, and then selects the rows that have an assigned number between percentBegin and percentEnd . Pseudo-random numbers are assigned using both the input seed string value and the byte offset as a seed, so changing the data results in a different split. Any existing ordering is preserved. The random splitting strategy ensures that variables in the training and evaluation data are distributed similarly. It is useful in the cases where the input data may have an implicit sort order, which would otherwise result in training and evaluation datasources containing non-similar data records. The following two DataRearrangement lines are examples of non-sequentially ordered training and evaluation datasources: Datasource for evaluation: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"random\", \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\"}} Datasource for training: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"random\", \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\", \"complement\":\"true\"}}\n\nDataSchema -> (string)\n\nA JSON string that represents the schema for an Amazon Redshift DataSource . The DataSchema defines the structure of the observation data in the data file(s) referenced in the DataSource .\n\nA DataSchema is not required if you specify a DataSchemaUri .\n\nDefine your DataSchema as a series of key-value pairs. attributes and excludedVariableNames have an array of key-value pairs for their value. Use the following format to define your DataSchema .\n\n{ “version”: “1.0”,\n\n“recordAnnotationFieldName”: “F1”,\n\n“recordWeightFieldName”: “F2”,\n\n“targetFieldName”: “F3”,\n\n“dataFormat”: “CSV”,\n\n“dataFileContainsHeader”: true,\n\n“attributes”: [\n\n{ “fieldName”: “F1”, “fieldType”: “TEXT” }, { “fieldName”: “F2”, “fieldType”: “NUMERIC” }, { “fieldName”: “F3”, “fieldType”: “CATEGORICAL” }, { “fieldName”: “F4”, “fieldType”: “NUMERIC” }, { “fieldName”: “F5”, “fieldType”: “CATEGORICAL” }, { “fieldName”: “F6”, “fieldType”: “TEXT” }, { “fieldName”: “F7”, “fieldType”: “WEIGHTED_INT_SEQUENCE” }, { “fieldName”: “F8”, “fieldType”: “WEIGHTED_STRING_SEQUENCE” } ],\n\n“excludedVariableNames”: [ “F6” ] }\n\nDataSchemaUri -> (string)\n\nDescribes the schema location for an Amazon Redshift DataSource .\n\nShorthand Syntax:\n\nDatabaseInformation={DatabaseName=string,ClusterIdentifier=string},SelectSqlQuery=string,DatabaseCredentials={Username=string,Password=string},S3StagingLocation=string,DataRearrangement=string,DataSchema=string,DataSchemaUri=string\n\n\nJSON Syntax:\n\n{\n  \"DatabaseInformation\": {\n    \"DatabaseName\": \"string\",\n    \"ClusterIdentifier\": \"string\"\n  },\n  \"SelectSqlQuery\": \"string\",\n  \"DatabaseCredentials\": {\n    \"Username\": \"string\",\n    \"Password\": \"string\"\n  },\n  \"S3StagingLocation\": \"string\",\n  \"DataRearrangement\": \"string\",\n  \"DataSchema\": \"string\",\n  \"DataSchemaUri\": \"string\"\n}\n\n\n--role-arn (string)\n\nA fully specified role Amazon Resource Name (ARN). Amazon ML assumes the role on behalf of the user to create the following:\n\nA security group to allow Amazon ML to execute the SelectSqlQuery query on an Amazon Redshift cluster\n\nAn Amazon S3 bucket policy to grant Amazon ML read/write permissions on the S3StagingLocation\n\n--compute-statistics | --no-compute-statistics (boolean)\n\nThe compute statistics for a DataSource . The statistics are generated from the observation data referenced by a DataSource . Amazon ML uses the statistics internally during MLModel training. This parameter must be set to true if the DataSource needs to be used for MLModel training.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDataSourceId -> (string)\n\nA user-supplied ID that uniquely identifies the datasource. This value should be identical to the value of the DataSourceID in the request."
    },
    {
      "command_name": "create-data-source-from-s3",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/create-data-source-from-s3.html",
      "command_description": "Description\n\nCreates a DataSource object. A DataSource references data that can be used to perform CreateMLModel , CreateEvaluation , or CreateBatchPrediction operations.\n\nCreateDataSourceFromS3 is an asynchronous operation. In response to CreateDataSourceFromS3 , Amazon Machine Learning (Amazon ML) immediately returns and sets the DataSource status to PENDING . After the DataSource has been created and is ready for use, Amazon ML sets the Status parameter to COMPLETED . DataSource in the COMPLETED or PENDING state can be used to perform only CreateMLModel , CreateEvaluation or CreateBatchPrediction operations.\n\nIf Amazon ML can’t accept the input source, it sets the Status parameter to FAILED and includes an error message in the Message attribute of the GetDataSource operation response.\n\nThe observation data used in a DataSource should be ready to use; that is, it should have a consistent structure, and missing data values should be kept to a minimum. The observation data must reside in one or more .csv files in an Amazon Simple Storage Service (Amazon S3) location, along with a schema that describes the data items by name and type. The same schema must be used for all of the data files referenced by the DataSource .\n\nAfter the DataSource has been created, it’s ready to use in evaluations and batch predictions. If you plan to use the DataSource to train an MLModel , the DataSource also needs a recipe. A recipe describes how each input variable will be used in training an MLModel . Will the variable be included or excluded from training? Will the variable be manipulated; for example, will it be combined with another variable or will it be split apart into word combinations? The recipe provides answers to these questions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-data-source-from-s3\n--data-source-id <value>\n[--data-source-name <value>]\n--data-spec <value>\n[--compute-statistics | --no-compute-statistics]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--data-source-id <value>",
        "[--data-source-name <value>]",
        "--data-spec <value>",
        "[--compute-statistics | --no-compute-statistics]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--data-source-id (string)\n\nA user-supplied identifier that uniquely identifies the DataSource .\n\n--data-source-name (string)\n\nA user-supplied name or description of the DataSource .\n\n--data-spec (structure)\n\nThe data specification of a DataSource :\n\nDataLocationS3 - The Amazon S3 location of the observation data.\n\nDataSchemaLocationS3 - The Amazon S3 location of the DataSchema .\n\nDataSchema - A JSON string representing the schema. This is not required if DataSchemaUri is specified.\n\nDataRearrangement - A JSON string that represents the splitting and rearrangement requirements for the Datasource . Sample - \"{\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\":60}}\"\n\nDataLocationS3 -> (string)\n\nThe location of the data file(s) used by a DataSource . The URI specifies a data file or an Amazon Simple Storage Service (Amazon S3) directory or bucket containing data files.\n\nDataRearrangement -> (string)\n\nA JSON string that represents the splitting and rearrangement processing to be applied to a DataSource . If the DataRearrangement parameter is not provided, all of the input data is used to create the Datasource .\n\nThere are multiple parameters that control what data is used to create a datasource:\n\n**percentBegin ** Use percentBegin to indicate the beginning of the range of the data used to create the Datasource. If you do not include percentBegin and percentEnd , Amazon ML includes all of the data when creating the datasource.\n\n**percentEnd ** Use percentEnd to indicate the end of the range of the data used to create the Datasource. If you do not include percentBegin and percentEnd , Amazon ML includes all of the data when creating the datasource.\n\n**complement ** The complement parameter instructs Amazon ML to use the data that is not included in the range of percentBegin to percentEnd to create a datasource. The complement parameter is useful if you need to create complementary datasources for training and evaluation. To create a complementary datasource, use the same values for percentBegin and percentEnd , along with the complement parameter. For example, the following two datasources do not share any data, and can be used to train and evaluate a model. The first datasource has 25 percent of the data, and the second one has 75 percent of the data. Datasource for evaluation: {\"splitting\":{\"percentBegin\":0, \"percentEnd\":25}} Datasource for training: {\"splitting\":{\"percentBegin\":0, \"percentEnd\":25, \"complement\":\"true\"}}\n\n**strategy ** To change how Amazon ML splits the data for a datasource, use the strategy parameter. The default value for the strategy parameter is sequential , meaning that Amazon ML takes all of the data records between the percentBegin and percentEnd parameters for the datasource, in the order that the records appear in the input data. The following two DataRearrangement lines are examples of sequentially ordered training and evaluation datasources: Datasource for evaluation: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"sequential\"}} Datasource for training: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"sequential\", \"complement\":\"true\"}} To randomly split the input data into the proportions indicated by the percentBegin and percentEnd parameters, set the strategy parameter to random and provide a string that is used as the seed value for the random data splitting (for example, you can use the S3 path to your data as the random seed string). If you choose the random split strategy, Amazon ML assigns each row of data a pseudo-random number between 0 and 100, and then selects the rows that have an assigned number between percentBegin and percentEnd . Pseudo-random numbers are assigned using both the input seed string value and the byte offset as a seed, so changing the data results in a different split. Any existing ordering is preserved. The random splitting strategy ensures that variables in the training and evaluation data are distributed similarly. It is useful in the cases where the input data may have an implicit sort order, which would otherwise result in training and evaluation datasources containing non-similar data records. The following two DataRearrangement lines are examples of non-sequentially ordered training and evaluation datasources: Datasource for evaluation: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"random\", \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\"}} Datasource for training: {\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"random\", \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\", \"complement\":\"true\"}}\n\nDataSchema -> (string)\n\nA JSON string that represents the schema for an Amazon S3 DataSource . The DataSchema defines the structure of the observation data in the data file(s) referenced in the DataSource .\n\nYou must provide either the DataSchema or the DataSchemaLocationS3 .\n\nDefine your DataSchema as a series of key-value pairs. attributes and excludedVariableNames have an array of key-value pairs for their value. Use the following format to define your DataSchema .\n\n{ “version”: “1.0”,\n\n“recordAnnotationFieldName”: “F1”,\n\n“recordWeightFieldName”: “F2”,\n\n“targetFieldName”: “F3”,\n\n“dataFormat”: “CSV”,\n\n“dataFileContainsHeader”: true,\n\n“attributes”: [\n\n{ “fieldName”: “F1”, “fieldType”: “TEXT” }, { “fieldName”: “F2”, “fieldType”: “NUMERIC” }, { “fieldName”: “F3”, “fieldType”: “CATEGORICAL” }, { “fieldName”: “F4”, “fieldType”: “NUMERIC” }, { “fieldName”: “F5”, “fieldType”: “CATEGORICAL” }, { “fieldName”: “F6”, “fieldType”: “TEXT” }, { “fieldName”: “F7”, “fieldType”: “WEIGHTED_INT_SEQUENCE” }, { “fieldName”: “F8”, “fieldType”: “WEIGHTED_STRING_SEQUENCE” } ],\n\n“excludedVariableNames”: [ “F6” ] }\n\nDataSchemaLocationS3 -> (string)\n\nDescribes the schema location in Amazon S3. You must provide either the DataSchema or the DataSchemaLocationS3 .\n\nShorthand Syntax:\n\nDataLocationS3=string,DataRearrangement=string,DataSchema=string,DataSchemaLocationS3=string\n\n\nJSON Syntax:\n\n{\n  \"DataLocationS3\": \"string\",\n  \"DataRearrangement\": \"string\",\n  \"DataSchema\": \"string\",\n  \"DataSchemaLocationS3\": \"string\"\n}\n\n\n--compute-statistics | --no-compute-statistics (boolean)\n\nThe compute statistics for a DataSource . The statistics are generated from the observation data referenced by a DataSource . Amazon ML uses the statistics internally during MLModel training. This parameter must be set to true if the DataSourceneeds to be used for MLModel training.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDataSourceId -> (string)\n\nA user-supplied ID that uniquely identifies the DataSource . This value should be identical to the value of the DataSourceID in the request."
    },
    {
      "command_name": "create-evaluation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/create-evaluation.html",
      "command_description": "Description\n\nCreates a new Evaluation of an MLModel . An MLModel is evaluated on a set of observations associated to a DataSource . Like a DataSource for an MLModel , the DataSource for an Evaluation contains values for the Target Variable . The Evaluation compares the predicted result for each observation to the actual outcome and provides a summary so that you know how effective the MLModel functions on the test data. Evaluation generates a relevant performance metric, such as BinaryAUC, RegressionRMSE or MulticlassAvgFScore based on the corresponding MLModelType : BINARY , REGRESSION or MULTICLASS .\n\nCreateEvaluation is an asynchronous operation. In response to CreateEvaluation , Amazon Machine Learning (Amazon ML) immediately returns and sets the evaluation status to PENDING . After the Evaluation is created and ready for use, Amazon ML sets the status to COMPLETED .\n\nYou can use the GetEvaluation operation to check progress of the evaluation during the creation operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-evaluation\n--evaluation-id <value>\n[--evaluation-name <value>]\n--ml-model-id <value>\n--evaluation-data-source-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--evaluation-id <value>",
        "[--evaluation-name <value>]",
        "--ml-model-id <value>",
        "--evaluation-data-source-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--evaluation-id (string)\n\nA user-supplied ID that uniquely identifies the Evaluation .\n\n--evaluation-name (string)\n\nA user-supplied name or description of the Evaluation .\n\n--ml-model-id (string)\n\nThe ID of the MLModel to evaluate.\n\nThe schema used in creating the MLModel must match the schema of the DataSource used in the Evaluation .\n\n--evaluation-data-source-id (string)\n\nThe ID of the DataSource for the evaluation. The schema of the DataSource must match the schema used to create the MLModel .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEvaluationId -> (string)\n\nThe user-supplied ID that uniquely identifies the Evaluation . This value should be identical to the value of the EvaluationId in the request."
    },
    {
      "command_name": "create-ml-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/create-ml-model.html",
      "command_description": "Description\n\nCreates a new MLModel using the DataSource and the recipe as information sources.\n\nAn MLModel is nearly immutable. Users can update only the MLModelName and the ScoreThreshold in an MLModel without creating a new MLModel .\n\nCreateMLModel is an asynchronous operation. In response to CreateMLModel , Amazon Machine Learning (Amazon ML) immediately returns and sets the MLModel status to PENDING . After the MLModel has been created and ready is for use, Amazon ML sets the status to COMPLETED .\n\nYou can use the GetMLModel operation to check the progress of the MLModel during the creation operation.\n\nCreateMLModel requires a DataSource with computed statistics, which can be created by setting ComputeStatistics to true in CreateDataSourceFromRDS , CreateDataSourceFromS3 , or CreateDataSourceFromRedshift operations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-ml-model\n--ml-model-id <value>\n[--ml-model-name <value>]\n--ml-model-type <value>\n[--parameters <value>]\n--training-data-source-id <value>\n[--recipe <value>]\n[--recipe-uri <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ml-model-id <value>",
        "[--ml-model-name <value>]",
        "--ml-model-type <value>",
        "[--parameters <value>]",
        "--training-data-source-id <value>",
        "[--recipe <value>]",
        "[--recipe-uri <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ml-model-id (string)\n\nA user-supplied ID that uniquely identifies the MLModel .\n\n--ml-model-name (string)\n\nA user-supplied name or description of the MLModel .\n\n--ml-model-type (string)\n\nThe category of supervised learning that this MLModel will address. Choose from the following types:\n\nChoose REGRESSION if the MLModel will be used to predict a numeric value.\n\nChoose BINARY if the MLModel result has two possible values.\n\nChoose MULTICLASS if the MLModel result has a limited number of values.\n\nFor more information, see the Amazon Machine Learning Developer Guide .\n\nPossible values:\n\nREGRESSION\n\nBINARY\n\nMULTICLASS\n\n--parameters (map)\n\nA list of the training parameters in the MLModel . The list is implemented as a map of key-value pairs.\n\nThe following is the current set of training parameters:\n\nsgd.maxMLModelSizeInBytes - The maximum allowed size of the model. Depending on the input data, the size of the model might affect its performance. The value is an integer that ranges from 100000 to 2147483648 . The default value is 33554432 .\n\nsgd.maxPasses - The number of times that the training process traverses the observations to build the MLModel . The value is an integer that ranges from 1 to 10000 . The default value is 10 .\n\nsgd.shuffleType - Whether Amazon ML shuffles the training data. Shuffling the data improves a model’s ability to find the optimal solution for a variety of data types. The valid values are auto and none . The default value is none . We strongly recommend that you shuffle your data.\n\nsgd.l1RegularizationAmount - The coefficient regularization L1 norm. It controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to zero, resulting in a sparse feature set. If you use this parameter, start by specifying a small value, such as 1.0E-08 . The value is a double that ranges from 0 to MAX_DOUBLE . The default is to not use L1 normalization. This parameter can’t be used when L2 is specified. Use this parameter sparingly.\n\nsgd.l2RegularizationAmount - The coefficient regularization L2 norm. It controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to small, nonzero values. If you use this parameter, start by specifying a small value, such as 1.0E-08 . The value is a double that ranges from 0 to MAX_DOUBLE . The default is to not use L2 normalization. This parameter can’t be used when L1 is specified. Use this parameter sparingly.\n\nkey -> (string)\n\nString type.\n\nvalue -> (string)\n\nString type.\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--training-data-source-id (string)\n\nThe DataSource that points to the training data.\n\n--recipe (string)\n\nThe data recipe for creating the MLModel . You must specify either the recipe or its URI. If you don’t specify a recipe or its URI, Amazon ML creates a default.\n\n--recipe-uri (string)\n\nThe Amazon Simple Storage Service (Amazon S3) location and file name that contains the MLModel recipe. You must specify either the recipe or its URI. If you don’t specify a recipe or its URI, Amazon ML creates a default.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMLModelId -> (string)\n\nA user-supplied ID that uniquely identifies the MLModel . This value should be identical to the value of the MLModelId in the request."
    },
    {
      "command_name": "create-realtime-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/create-realtime-endpoint.html",
      "command_description": "Description\n\nCreates a real-time endpoint for the MLModel . The endpoint contains the URI of the MLModel ; that is, the location to send real-time prediction requests for the specified MLModel .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-realtime-endpoint\n--ml-model-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ml-model-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ml-model-id (string)\n\nThe ID assigned to the MLModel during creation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMLModelId -> (string)\n\nA user-supplied ID that uniquely identifies the MLModel . This value should be identical to the value of the MLModelId in the request.\n\nRealtimeEndpointInfo -> (structure)\n\nThe endpoint information of the MLModel\n\nPeakRequestsPerSecond -> (integer)\n\nThe maximum processing rate for the real-time endpoint for MLModel , measured in incoming requests per second.\n\nCreatedAt -> (timestamp)\n\nThe time that the request to create the real-time endpoint for the MLModel was received. The time is expressed in epoch time.\n\nEndpointUrl -> (string)\n\nThe URI that specifies where to send real-time prediction requests for the MLModel .\n\nNote: The application must wait until the real-time endpoint is ready before using this URI.\n\nEndpointStatus -> (string)\n\nThe current status of the real-time endpoint for the MLModel . This element can have one of the following values:\n\nNONE - Endpoint does not exist or was previously deleted.\n\nREADY - Endpoint is ready to be used for real-time predictions.\n\nUPDATING - Updating/creating the endpoint."
    },
    {
      "command_name": "delete-batch-prediction",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/delete-batch-prediction.html",
      "command_description": "Description\n\nAssigns the DELETED status to a BatchPrediction , rendering it unusable.\n\nAfter using the DeleteBatchPrediction operation, you can use the GetBatchPrediction operation to verify that the status of the BatchPrediction changed to DELETED.\n\nCaution: The result of the DeleteBatchPrediction operation is irreversible.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-batch-prediction\n--batch-prediction-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--batch-prediction-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--batch-prediction-id (string)\n\nA user-supplied ID that uniquely identifies the BatchPrediction .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBatchPredictionId -> (string)\n\nA user-supplied ID that uniquely identifies the BatchPrediction . This value should be identical to the value of the BatchPredictionID in the request."
    },
    {
      "command_name": "delete-data-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/delete-data-source.html",
      "command_description": "Description\n\nAssigns the DELETED status to a DataSource , rendering it unusable.\n\nAfter using the DeleteDataSource operation, you can use the GetDataSource operation to verify that the status of the DataSource changed to DELETED.\n\nCaution: The results of the DeleteDataSource operation are irreversible.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-data-source\n--data-source-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--data-source-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--data-source-id (string)\n\nA user-supplied ID that uniquely identifies the DataSource .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDataSourceId -> (string)\n\nA user-supplied ID that uniquely identifies the DataSource . This value should be identical to the value of the DataSourceID in the request."
    },
    {
      "command_name": "delete-evaluation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/delete-evaluation.html",
      "command_description": "Description\n\nAssigns the DELETED status to an Evaluation , rendering it unusable.\n\nAfter invoking the DeleteEvaluation operation, you can use the GetEvaluation operation to verify that the status of the Evaluation changed to DELETED .\n\nCaution: The results of the DeleteEvaluation operation are irreversible.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-evaluation\n--evaluation-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--evaluation-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--evaluation-id (string)\n\nA user-supplied ID that uniquely identifies the Evaluation to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEvaluationId -> (string)\n\nA user-supplied ID that uniquely identifies the Evaluation . This value should be identical to the value of the EvaluationId in the request."
    },
    {
      "command_name": "delete-ml-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/delete-ml-model.html",
      "command_description": "Description\n\nAssigns the DELETED status to an MLModel , rendering it unusable.\n\nAfter using the DeleteMLModel operation, you can use the GetMLModel operation to verify that the status of the MLModel changed to DELETED.\n\nCaution: The result of the DeleteMLModel operation is irreversible.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-ml-model\n--ml-model-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ml-model-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ml-model-id (string)\n\nA user-supplied ID that uniquely identifies the MLModel .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMLModelId -> (string)\n\nA user-supplied ID that uniquely identifies the MLModel . This value should be identical to the value of the MLModelID in the request."
    },
    {
      "command_name": "delete-realtime-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/delete-realtime-endpoint.html",
      "command_description": "Description\n\nDeletes a real time endpoint of an MLModel .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-realtime-endpoint\n--ml-model-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ml-model-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ml-model-id (string)\n\nThe ID assigned to the MLModel during creation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMLModelId -> (string)\n\nA user-supplied ID that uniquely identifies the MLModel . This value should be identical to the value of the MLModelId in the request.\n\nRealtimeEndpointInfo -> (structure)\n\nThe endpoint information of the MLModel\n\nPeakRequestsPerSecond -> (integer)\n\nThe maximum processing rate for the real-time endpoint for MLModel , measured in incoming requests per second.\n\nCreatedAt -> (timestamp)\n\nThe time that the request to create the real-time endpoint for the MLModel was received. The time is expressed in epoch time.\n\nEndpointUrl -> (string)\n\nThe URI that specifies where to send real-time prediction requests for the MLModel .\n\nNote: The application must wait until the real-time endpoint is ready before using this URI.\n\nEndpointStatus -> (string)\n\nThe current status of the real-time endpoint for the MLModel . This element can have one of the following values:\n\nNONE - Endpoint does not exist or was previously deleted.\n\nREADY - Endpoint is ready to be used for real-time predictions.\n\nUPDATING - Updating/creating the endpoint."
    },
    {
      "command_name": "delete-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/delete-tags.html",
      "command_description": "Description\n\nDeletes the specified tags associated with an ML object. After this operation is complete, you can’t recover deleted tags.\n\nIf you specify a tag that doesn’t exist, Amazon ML ignores it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-tags\n--tag-keys <value>\n--resource-id <value>\n--resource-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--tag-keys <value>",
        "--resource-id <value>",
        "--resource-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--tag-keys (list)\n\nOne or more tags to delete.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--resource-id (string)\n\nThe ID of the tagged ML object. For example, exampleModelId .\n\n--resource-type (string)\n\nThe type of the tagged ML object.\n\nPossible values:\n\nBatchPrediction\n\nDataSource\n\nEvaluation\n\nMLModel\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceId -> (string)\n\nThe ID of the ML object from which tags were deleted.\n\nResourceType -> (string)\n\nThe type of the ML object from which tags were deleted."
    },
    {
      "command_name": "describe-batch-predictions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/describe-batch-predictions.html",
      "command_description": "Description\n\nReturns a list of BatchPrediction operations that match the search criteria in the request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-batch-predictions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Results",
      "command_synopsis": "Synopsis\n  describe-batch-predictions\n[--filter-variable <value>]\n[--eq <value>]\n[--gt <value>]\n[--lt <value>]\n[--ge <value>]\n[--le <value>]\n[--ne <value>]\n[--prefix <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter-variable <value>]",
        "[--eq <value>]",
        "[--gt <value>]",
        "[--lt <value>]",
        "[--ge <value>]",
        "[--le <value>]",
        "[--ne <value>]",
        "[--prefix <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter-variable (string)\n\nUse one of the following variables to filter a list of BatchPrediction :\n\nCreatedAt - Sets the search criteria to the BatchPrediction creation date.\n\nStatus - Sets the search criteria to the BatchPrediction status.\n\nName - Sets the search criteria to the contents of the BatchPrediction **** Name .\n\nIAMUser - Sets the search criteria to the user account that invoked the BatchPrediction creation.\n\nMLModelId - Sets the search criteria to the MLModel used in the BatchPrediction .\n\nDataSourceId - Sets the search criteria to the DataSource used in the BatchPrediction .\n\nDataURI - Sets the search criteria to the data file(s) used in the BatchPrediction . The URL can identify either a file or an Amazon Simple Storage Solution (Amazon S3) bucket or directory.\n\nPossible values:\n\nCreatedAt\n\nLastUpdatedAt\n\nStatus\n\nName\n\nIAMUser\n\nMLModelId\n\nDataSourceId\n\nDataURI\n\n--eq (string)\n\nThe equal to operator. The BatchPrediction results will have FilterVariable values that exactly match the value specified with EQ .\n\n--gt (string)\n\nThe greater than operator. The BatchPrediction results will have FilterVariable values that are greater than the value specified with GT .\n\n--lt (string)\n\nThe less than operator. The BatchPrediction results will have FilterVariable values that are less than the value specified with LT .\n\n--ge (string)\n\nThe greater than or equal to operator. The BatchPrediction results will have FilterVariable values that are greater than or equal to the value specified with GE .\n\n--le (string)\n\nThe less than or equal to operator. The BatchPrediction results will have FilterVariable values that are less than or equal to the value specified with LE .\n\n--ne (string)\n\nThe not equal to operator. The BatchPrediction results will have FilterVariable values not equal to the value specified with NE .\n\n--prefix (string)\n\nA string that is found at the beginning of a variable, such as Name or Id .\n\nFor example, a Batch Prediction operation could have the Name 2014-09-09-HolidayGiftMailer . To search for this BatchPrediction , select Name for the FilterVariable and any of the following strings for the Prefix :\n\n2014-09\n\n2014-09-09\n\n2014-09-09-Holiday\n\n--sort-order (string)\n\nA two-value parameter that determines the sequence of the resulting list of MLModel s.\n\nasc - Arranges the list in ascending order (A-Z, 0-9).\n\ndsc - Arranges the list in descending order (Z-A, 9-0).\n\nResults are sorted by FilterVariable .\n\nPossible values:\n\nasc\n\ndsc\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResults -> (list)\n\nA list of BatchPrediction objects that meet the search criteria.\n\n(structure)\n\nRepresents the output of a GetBatchPrediction operation.\n\nThe content consists of the detailed metadata, the status, and the data file information of a Batch Prediction .\n\nBatchPredictionId -> (string)\n\nThe ID assigned to the BatchPrediction at creation. This value should be identical to the value of the BatchPredictionID in the request.\n\nMLModelId -> (string)\n\nThe ID of the MLModel that generated predictions for the BatchPrediction request.\n\nBatchPredictionDataSourceId -> (string)\n\nThe ID of the DataSource that points to the group of observations to predict.\n\nInputDataLocationS3 -> (string)\n\nThe location of the data file or directory in Amazon Simple Storage Service (Amazon S3).\n\nCreatedByIamUser -> (string)\n\nThe AWS user account that invoked the BatchPrediction . The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.\n\nCreatedAt -> (timestamp)\n\nThe time that the BatchPrediction was created. The time is expressed in epoch time.\n\nLastUpdatedAt -> (timestamp)\n\nThe time of the most recent edit to the BatchPrediction . The time is expressed in epoch time.\n\nName -> (string)\n\nA user-supplied name or description of the BatchPrediction .\n\nStatus -> (string)\n\nThe status of the BatchPrediction . This element can have one of the following values:\n\nPENDING - Amazon Machine Learning (Amazon ML) submitted a request to generate predictions for a batch of observations.\n\nINPROGRESS - The process is underway.\n\nFAILED - The request to perform a batch prediction did not run to completion. It is not usable.\n\nCOMPLETED - The batch prediction process completed successfully.\n\nDELETED - The BatchPrediction is marked as deleted. It is not usable.\n\nOutputUri -> (string)\n\nThe location of an Amazon S3 bucket or directory to receive the operation results. The following substrings are not allowed in the s3 key portion of the outputURI field: ‘:’, ‘//’, ‘/./’, ‘/../’.\n\nMessage -> (string)\n\nA description of the most recent details about processing the batch prediction request.\n\nComputeTime -> (long)\n\nLong integer type that is a 64-bit signed number.\n\nFinishedAt -> (timestamp)\n\nA timestamp represented in epoch time.\n\nStartedAt -> (timestamp)\n\nA timestamp represented in epoch time.\n\nTotalRecordCount -> (long)\n\nLong integer type that is a 64-bit signed number.\n\nInvalidRecordCount -> (long)\n\nLong integer type that is a 64-bit signed number.\n\nNextToken -> (string)\n\nThe ID of the next page in the paginated results that indicates at least one more page follows."
    },
    {
      "command_name": "describe-data-sources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/describe-data-sources.html",
      "command_description": "Description\n\nReturns a list of DataSource that match the search criteria in the request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-data-sources is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Results",
      "command_synopsis": "Synopsis\n  describe-data-sources\n[--filter-variable <value>]\n[--eq <value>]\n[--gt <value>]\n[--lt <value>]\n[--ge <value>]\n[--le <value>]\n[--ne <value>]\n[--prefix <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter-variable <value>]",
        "[--eq <value>]",
        "[--gt <value>]",
        "[--lt <value>]",
        "[--ge <value>]",
        "[--le <value>]",
        "[--ne <value>]",
        "[--prefix <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter-variable (string)\n\nUse one of the following variables to filter a list of DataSource :\n\nCreatedAt - Sets the search criteria to DataSource creation dates.\n\nStatus - Sets the search criteria to DataSource statuses.\n\nName - Sets the search criteria to the contents of DataSource Name .\n\nDataUri - Sets the search criteria to the URI of data files used to create the DataSource . The URI can identify either a file or an Amazon Simple Storage Service (Amazon S3) bucket or directory.\n\nIAMUser - Sets the search criteria to the user account that invoked the DataSource creation.\n\nPossible values:\n\nCreatedAt\n\nLastUpdatedAt\n\nStatus\n\nName\n\nDataLocationS3\n\nIAMUser\n\n--eq (string)\n\nThe equal to operator. The DataSource results will have FilterVariable values that exactly match the value specified with EQ .\n\n--gt (string)\n\nThe greater than operator. The DataSource results will have FilterVariable values that are greater than the value specified with GT .\n\n--lt (string)\n\nThe less than operator. The DataSource results will have FilterVariable values that are less than the value specified with LT .\n\n--ge (string)\n\nThe greater than or equal to operator. The DataSource results will have FilterVariable values that are greater than or equal to the value specified with GE .\n\n--le (string)\n\nThe less than or equal to operator. The DataSource results will have FilterVariable values that are less than or equal to the value specified with LE .\n\n--ne (string)\n\nThe not equal to operator. The DataSource results will have FilterVariable values not equal to the value specified with NE .\n\n--prefix (string)\n\nA string that is found at the beginning of a variable, such as Name or Id .\n\nFor example, a DataSource could have the Name 2014-09-09-HolidayGiftMailer . To search for this DataSource , select Name for the FilterVariable and any of the following strings for the Prefix :\n\n2014-09\n\n2014-09-09\n\n2014-09-09-Holiday\n\n--sort-order (string)\n\nA two-value parameter that determines the sequence of the resulting list of DataSource .\n\nasc - Arranges the list in ascending order (A-Z, 0-9).\n\ndsc - Arranges the list in descending order (Z-A, 9-0).\n\nResults are sorted by FilterVariable .\n\nPossible values:\n\nasc\n\ndsc\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResults -> (list)\n\nA list of DataSource that meet the search criteria.\n\n(structure)\n\nRepresents the output of the GetDataSource operation.\n\nThe content consists of the detailed metadata and data file information and the current status of the DataSource .\n\nDataSourceId -> (string)\n\nThe ID that is assigned to the DataSource during creation.\n\nDataLocationS3 -> (string)\n\nThe location and name of the data in Amazon Simple Storage Service (Amazon S3) that is used by a DataSource .\n\nDataRearrangement -> (string)\n\nA JSON string that represents the splitting and rearrangement requirement used when this DataSource was created.\n\nCreatedByIamUser -> (string)\n\nThe AWS user account from which the DataSource was created. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.\n\nCreatedAt -> (timestamp)\n\nThe time that the DataSource was created. The time is expressed in epoch time.\n\nLastUpdatedAt -> (timestamp)\n\nThe time of the most recent edit to the BatchPrediction . The time is expressed in epoch time.\n\nDataSizeInBytes -> (long)\n\nThe total number of observations contained in the data files that the DataSource references.\n\nNumberOfFiles -> (long)\n\nThe number of data files referenced by the DataSource .\n\nName -> (string)\n\nA user-supplied name or description of the DataSource .\n\nStatus -> (string)\n\nThe current status of the DataSource . This element can have one of the following values:\n\nPENDING - Amazon Machine Learning (Amazon ML) submitted a request to create a DataSource .\n\nINPROGRESS - The creation process is underway.\n\nFAILED - The request to create a DataSource did not run to completion. It is not usable.\n\nCOMPLETED - The creation process completed successfully.\n\nDELETED - The DataSource is marked as deleted. It is not usable.\n\nMessage -> (string)\n\nA description of the most recent details about creating the DataSource .\n\nRedshiftMetadata -> (structure)\n\nDescribes the DataSource details specific to Amazon Redshift.\n\nRedshiftDatabase -> (structure)\n\nDescribes the database details required to connect to an Amazon Redshift database.\n\nDatabaseName -> (string)\n\nThe name of a database hosted on an Amazon Redshift cluster.\n\nClusterIdentifier -> (string)\n\nThe ID of an Amazon Redshift cluster.\n\nDatabaseUserName -> (string)\n\nA username to be used by Amazon Machine Learning (Amazon ML)to connect to a database on an Amazon Redshift cluster. The username should have sufficient permissions to execute the RedshiftSelectSqlQuery query. The username should be valid for an Amazon Redshift USER .\n\nSelectSqlQuery -> (string)\n\nThe SQL query that is specified during CreateDataSourceFromRedshift . Returns only if Verbose is true in GetDataSourceInput.\n\nRDSMetadata -> (structure)\n\nThe datasource details that are specific to Amazon RDS.\n\nDatabase -> (structure)\n\nThe database details required to connect to an Amazon RDS.\n\nInstanceIdentifier -> (string)\n\nThe ID of an RDS DB instance.\n\nDatabaseName -> (string)\n\nThe name of a database hosted on an RDS DB instance.\n\nDatabaseUserName -> (string)\n\nThe username to be used by Amazon ML to connect to database on an Amazon RDS instance. The username should have sufficient permissions to execute an RDSSelectSqlQuery query.\n\nSelectSqlQuery -> (string)\n\nThe SQL query that is supplied during CreateDataSourceFromRDS . Returns only if Verbose is true in GetDataSourceInput .\n\nResourceRole -> (string)\n\nThe role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2 instance to carry out the copy task from Amazon RDS to Amazon S3. For more information, see Role templates for data pipelines.\n\nServiceRole -> (string)\n\nThe role (DataPipelineDefaultRole) assumed by the Data Pipeline service to monitor the progress of the copy task from Amazon RDS to Amazon S3. For more information, see Role templates for data pipelines.\n\nDataPipelineId -> (string)\n\nThe ID of the Data Pipeline instance that is used to carry to copy data from Amazon RDS to Amazon S3. You can use the ID to find details about the instance in the Data Pipeline console.\n\nRoleARN -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS IAM Role , such as the following: arn:aws:iam::account:role/rolename.\n\nComputeStatistics -> (boolean)\n\nThe parameter is true if statistics need to be generated from the observation data.\n\nComputeTime -> (long)\n\nLong integer type that is a 64-bit signed number.\n\nFinishedAt -> (timestamp)\n\nA timestamp represented in epoch time.\n\nStartedAt -> (timestamp)\n\nA timestamp represented in epoch time.\n\nNextToken -> (string)\n\nAn ID of the next page in the paginated results that indicates at least one more page follows."
    },
    {
      "command_name": "describe-evaluations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/describe-evaluations.html",
      "command_description": "Description\n\nReturns a list of DescribeEvaluations that match the search criteria in the request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-evaluations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Results",
      "command_synopsis": "Synopsis\n  describe-evaluations\n[--filter-variable <value>]\n[--eq <value>]\n[--gt <value>]\n[--lt <value>]\n[--ge <value>]\n[--le <value>]\n[--ne <value>]\n[--prefix <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter-variable <value>]",
        "[--eq <value>]",
        "[--gt <value>]",
        "[--lt <value>]",
        "[--ge <value>]",
        "[--le <value>]",
        "[--ne <value>]",
        "[--prefix <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter-variable (string)\n\nUse one of the following variable to filter a list of Evaluation objects:\n\nCreatedAt - Sets the search criteria to the Evaluation creation date.\n\nStatus - Sets the search criteria to the Evaluation status.\n\nName - Sets the search criteria to the contents of Evaluation **** Name .\n\nIAMUser - Sets the search criteria to the user account that invoked an Evaluation .\n\nMLModelId - Sets the search criteria to the MLModel that was evaluated.\n\nDataSourceId - Sets the search criteria to the DataSource used in Evaluation .\n\nDataUri - Sets the search criteria to the data file(s) used in Evaluation . The URL can identify either a file or an Amazon Simple Storage Solution (Amazon S3) bucket or directory.\n\nPossible values:\n\nCreatedAt\n\nLastUpdatedAt\n\nStatus\n\nName\n\nIAMUser\n\nMLModelId\n\nDataSourceId\n\nDataURI\n\n--eq (string)\n\nThe equal to operator. The Evaluation results will have FilterVariable values that exactly match the value specified with EQ .\n\n--gt (string)\n\nThe greater than operator. The Evaluation results will have FilterVariable values that are greater than the value specified with GT .\n\n--lt (string)\n\nThe less than operator. The Evaluation results will have FilterVariable values that are less than the value specified with LT .\n\n--ge (string)\n\nThe greater than or equal to operator. The Evaluation results will have FilterVariable values that are greater than or equal to the value specified with GE .\n\n--le (string)\n\nThe less than or equal to operator. The Evaluation results will have FilterVariable values that are less than or equal to the value specified with LE .\n\n--ne (string)\n\nThe not equal to operator. The Evaluation results will have FilterVariable values not equal to the value specified with NE .\n\n--prefix (string)\n\nA string that is found at the beginning of a variable, such as Name or Id .\n\nFor example, an Evaluation could have the Name 2014-09-09-HolidayGiftMailer . To search for this Evaluation , select Name for the FilterVariable and any of the following strings for the Prefix :\n\n2014-09\n\n2014-09-09\n\n2014-09-09-Holiday\n\n--sort-order (string)\n\nA two-value parameter that determines the sequence of the resulting list of Evaluation .\n\nasc - Arranges the list in ascending order (A-Z, 0-9).\n\ndsc - Arranges the list in descending order (Z-A, 9-0).\n\nResults are sorted by FilterVariable .\n\nPossible values:\n\nasc\n\ndsc\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResults -> (list)\n\nA list of Evaluation that meet the search criteria.\n\n(structure)\n\nRepresents the output of GetEvaluation operation.\n\nThe content consists of the detailed metadata and data file information and the current status of the Evaluation .\n\nEvaluationId -> (string)\n\nThe ID that is assigned to the Evaluation at creation.\n\nMLModelId -> (string)\n\nThe ID of the MLModel that is the focus of the evaluation.\n\nEvaluationDataSourceId -> (string)\n\nThe ID of the DataSource that is used to evaluate the MLModel .\n\nInputDataLocationS3 -> (string)\n\nThe location and name of the data in Amazon Simple Storage Server (Amazon S3) that is used in the evaluation.\n\nCreatedByIamUser -> (string)\n\nThe AWS user account that invoked the evaluation. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.\n\nCreatedAt -> (timestamp)\n\nThe time that the Evaluation was created. The time is expressed in epoch time.\n\nLastUpdatedAt -> (timestamp)\n\nThe time of the most recent edit to the Evaluation . The time is expressed in epoch time.\n\nName -> (string)\n\nA user-supplied name or description of the Evaluation .\n\nStatus -> (string)\n\nThe status of the evaluation. This element can have one of the following values:\n\nPENDING - Amazon Machine Learning (Amazon ML) submitted a request to evaluate an MLModel .\n\nINPROGRESS - The evaluation is underway.\n\nFAILED - The request to evaluate an MLModel did not run to completion. It is not usable.\n\nCOMPLETED - The evaluation process completed successfully.\n\nDELETED - The Evaluation is marked as deleted. It is not usable.\n\nPerformanceMetrics -> (structure)\n\nMeasurements of how well the MLModel performed, using observations referenced by the DataSource . One of the following metrics is returned, based on the type of the MLModel :\n\nBinaryAUC: A binary MLModel uses the Area Under the Curve (AUC) technique to measure performance.\n\nRegressionRMSE: A regression MLModel uses the Root Mean Square Error (RMSE) technique to measure performance. RMSE measures the difference between predicted and actual values for a single variable.\n\nMulticlassAvgFScore: A multiclass MLModel uses the F1 score technique to measure performance.\n\nFor more information about performance metrics, please see the Amazon Machine Learning Developer Guide .\n\nProperties -> (map)\n\nkey -> (string)\n\nvalue -> (string)\n\nMessage -> (string)\n\nA description of the most recent details about evaluating the MLModel .\n\nComputeTime -> (long)\n\nLong integer type that is a 64-bit signed number.\n\nFinishedAt -> (timestamp)\n\nA timestamp represented in epoch time.\n\nStartedAt -> (timestamp)\n\nA timestamp represented in epoch time.\n\nNextToken -> (string)\n\nThe ID of the next page in the paginated results that indicates at least one more page follows."
    },
    {
      "command_name": "describe-ml-models",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/describe-ml-models.html",
      "command_description": "Description\n\nReturns a list of MLModel that match the search criteria in the request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-ml-models is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Results",
      "command_synopsis": "Synopsis\n  describe-ml-models\n[--filter-variable <value>]\n[--eq <value>]\n[--gt <value>]\n[--lt <value>]\n[--ge <value>]\n[--le <value>]\n[--ne <value>]\n[--prefix <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter-variable <value>]",
        "[--eq <value>]",
        "[--gt <value>]",
        "[--lt <value>]",
        "[--ge <value>]",
        "[--le <value>]",
        "[--ne <value>]",
        "[--prefix <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter-variable (string)\n\nUse one of the following variables to filter a list of MLModel :\n\nCreatedAt - Sets the search criteria to MLModel creation date.\n\nStatus - Sets the search criteria to MLModel status.\n\nName - Sets the search criteria to the contents of MLModel **** Name .\n\nIAMUser - Sets the search criteria to the user account that invoked the MLModel creation.\n\nTrainingDataSourceId - Sets the search criteria to the DataSource used to train one or more MLModel .\n\nRealtimeEndpointStatus - Sets the search criteria to the MLModel real-time endpoint status.\n\nMLModelType - Sets the search criteria to MLModel type: binary, regression, or multi-class.\n\nAlgorithm - Sets the search criteria to the algorithm that the MLModel uses.\n\nTrainingDataURI - Sets the search criteria to the data file(s) used in training a MLModel . The URL can identify either a file or an Amazon Simple Storage Service (Amazon S3) bucket or directory.\n\nPossible values:\n\nCreatedAt\n\nLastUpdatedAt\n\nStatus\n\nName\n\nIAMUser\n\nTrainingDataSourceId\n\nRealtimeEndpointStatus\n\nMLModelType\n\nAlgorithm\n\nTrainingDataURI\n\n--eq (string)\n\nThe equal to operator. The MLModel results will have FilterVariable values that exactly match the value specified with EQ .\n\n--gt (string)\n\nThe greater than operator. The MLModel results will have FilterVariable values that are greater than the value specified with GT .\n\n--lt (string)\n\nThe less than operator. The MLModel results will have FilterVariable values that are less than the value specified with LT .\n\n--ge (string)\n\nThe greater than or equal to operator. The MLModel results will have FilterVariable values that are greater than or equal to the value specified with GE .\n\n--le (string)\n\nThe less than or equal to operator. The MLModel results will have FilterVariable values that are less than or equal to the value specified with LE .\n\n--ne (string)\n\nThe not equal to operator. The MLModel results will have FilterVariable values not equal to the value specified with NE .\n\n--prefix (string)\n\nA string that is found at the beginning of a variable, such as Name or Id .\n\nFor example, an MLModel could have the Name 2014-09-09-HolidayGiftMailer . To search for this MLModel , select Name for the FilterVariable and any of the following strings for the Prefix :\n\n2014-09\n\n2014-09-09\n\n2014-09-09-Holiday\n\n--sort-order (string)\n\nA two-value parameter that determines the sequence of the resulting list of MLModel .\n\nasc - Arranges the list in ascending order (A-Z, 0-9).\n\ndsc - Arranges the list in descending order (Z-A, 9-0).\n\nResults are sorted by FilterVariable .\n\nPossible values:\n\nasc\n\ndsc\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResults -> (list)\n\nA list of MLModel that meet the search criteria.\n\n(structure)\n\nRepresents the output of a GetMLModel operation.\n\nThe content consists of the detailed metadata and the current status of the MLModel .\n\nMLModelId -> (string)\n\nThe ID assigned to the MLModel at creation.\n\nTrainingDataSourceId -> (string)\n\nThe ID of the training DataSource . The CreateMLModel operation uses the TrainingDataSourceId .\n\nCreatedByIamUser -> (string)\n\nThe AWS user account from which the MLModel was created. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.\n\nCreatedAt -> (timestamp)\n\nThe time that the MLModel was created. The time is expressed in epoch time.\n\nLastUpdatedAt -> (timestamp)\n\nThe time of the most recent edit to the MLModel . The time is expressed in epoch time.\n\nName -> (string)\n\nA user-supplied name or description of the MLModel .\n\nStatus -> (string)\n\nThe current status of an MLModel . This element can have one of the following values:\n\nPENDING - Amazon Machine Learning (Amazon ML) submitted a request to create an MLModel .\n\nINPROGRESS - The creation process is underway.\n\nFAILED - The request to create an MLModel didn’t run to completion. The model isn’t usable.\n\nCOMPLETED - The creation process completed successfully.\n\nDELETED - The MLModel is marked as deleted. It isn’t usable.\n\nSizeInBytes -> (long)\n\nLong integer type that is a 64-bit signed number.\n\nEndpointInfo -> (structure)\n\nThe current endpoint of the MLModel .\n\nPeakRequestsPerSecond -> (integer)\n\nThe maximum processing rate for the real-time endpoint for MLModel , measured in incoming requests per second.\n\nCreatedAt -> (timestamp)\n\nThe time that the request to create the real-time endpoint for the MLModel was received. The time is expressed in epoch time.\n\nEndpointUrl -> (string)\n\nThe URI that specifies where to send real-time prediction requests for the MLModel .\n\nNote: The application must wait until the real-time endpoint is ready before using this URI.\n\nEndpointStatus -> (string)\n\nThe current status of the real-time endpoint for the MLModel . This element can have one of the following values:\n\nNONE - Endpoint does not exist or was previously deleted.\n\nREADY - Endpoint is ready to be used for real-time predictions.\n\nUPDATING - Updating/creating the endpoint.\n\nTrainingParameters -> (map)\n\nA list of the training parameters in the MLModel . The list is implemented as a map of key-value pairs.\n\nThe following is the current set of training parameters:\n\nsgd.maxMLModelSizeInBytes - The maximum allowed size of the model. Depending on the input data, the size of the model might affect its performance. The value is an integer that ranges from 100000 to 2147483648 . The default value is 33554432 .\n\nsgd.maxPasses - The number of times that the training process traverses the observations to build the MLModel . The value is an integer that ranges from 1 to 10000 . The default value is 10 .\n\nsgd.shuffleType - Whether Amazon ML shuffles the training data. Shuffling the data improves a model’s ability to find the optimal solution for a variety of data types. The valid values are auto and none . The default value is none .\n\nsgd.l1RegularizationAmount - The coefficient regularization L1 norm, which controls overfitting the data by penalizing large coefficients. This parameter tends to drive coefficients to zero, resulting in sparse feature set. If you use this parameter, start by specifying a small value, such as 1.0E-08 . The value is a double that ranges from 0 to MAX_DOUBLE . The default is to not use L1 normalization. This parameter can’t be used when L2 is specified. Use this parameter sparingly.\n\nsgd.l2RegularizationAmount - The coefficient regularization L2 norm, which controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to small, nonzero values. If you use this parameter, start by specifying a small value, such as 1.0E-08 . The value is a double that ranges from 0 to MAX_DOUBLE . The default is to not use L2 normalization. This parameter can’t be used when L1 is specified. Use this parameter sparingly.\n\nkey -> (string)\n\nString type.\n\nvalue -> (string)\n\nString type.\n\nInputDataLocationS3 -> (string)\n\nThe location of the data file or directory in Amazon Simple Storage Service (Amazon S3).\n\nAlgorithm -> (string)\n\nThe algorithm used to train the MLModel . The following algorithm is supported:\n\nSGD – Stochastic gradient descent. The goal of SGD is to minimize the gradient of the loss function.\n\nMLModelType -> (string)\n\nIdentifies the MLModel category. The following are the available types:\n\nREGRESSION - Produces a numeric result. For example, “What price should a house be listed at?”\n\nBINARY - Produces one of two possible results. For example, “Is this a child-friendly web site?”.\n\nMULTICLASS - Produces one of several possible results. For example, “Is this a HIGH-, LOW-, or MEDIUM-risk trade?”.\n\nScoreThreshold -> (float)\n\nScoreThresholdLastUpdatedAt -> (timestamp)\n\nThe time of the most recent edit to the ScoreThreshold . The time is expressed in epoch time.\n\nMessage -> (string)\n\nA description of the most recent details about accessing the MLModel .\n\nComputeTime -> (long)\n\nLong integer type that is a 64-bit signed number.\n\nFinishedAt -> (timestamp)\n\nA timestamp represented in epoch time.\n\nStartedAt -> (timestamp)\n\nA timestamp represented in epoch time.\n\nNextToken -> (string)\n\nThe ID of the next page in the paginated results that indicates at least one more page follows."
    },
    {
      "command_name": "describe-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/describe-tags.html",
      "command_description": "Description\n\nDescribes one or more of the tags for your Amazon ML object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-tags\n--resource-id <value>\n--resource-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id <value>",
        "--resource-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id (string)\n\nThe ID of the ML object. For example, exampleModelId .\n\n--resource-type (string)\n\nThe type of the ML object.\n\nPossible values:\n\nBatchPrediction\n\nDataSource\n\nEvaluation\n\nMLModel\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceId -> (string)\n\nThe ID of the tagged ML object.\n\nResourceType -> (string)\n\nThe type of the tagged ML object.\n\nTags -> (list)\n\nA list of tags associated with the ML object.\n\n(structure)\n\nA custom key-value pair associated with an ML object, such as an ML model.\n\nKey -> (string)\n\nA unique identifier for the tag. Valid characters include Unicode letters, digits, white space, _, ., /, =, +, -, %, and @.\n\nValue -> (string)\n\nAn optional string, typically used to describe or define the tag. Valid characters include Unicode letters, digits, white space, _, ., /, =, +, -, %, and @."
    },
    {
      "command_name": "get-batch-prediction",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/get-batch-prediction.html",
      "command_description": "Description\n\nReturns a BatchPrediction that includes detailed metadata, status, and data file information for a Batch Prediction request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-batch-prediction\n--batch-prediction-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--batch-prediction-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--batch-prediction-id (string)\n\nAn ID assigned to the BatchPrediction at creation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBatchPredictionId -> (string)\n\nAn ID assigned to the BatchPrediction at creation. This value should be identical to the value of the BatchPredictionID in the request.\n\nMLModelId -> (string)\n\nThe ID of the MLModel that generated predictions for the BatchPrediction request.\n\nBatchPredictionDataSourceId -> (string)\n\nThe ID of the DataSource that was used to create the BatchPrediction .\n\nInputDataLocationS3 -> (string)\n\nThe location of the data file or directory in Amazon Simple Storage Service (Amazon S3).\n\nCreatedByIamUser -> (string)\n\nThe AWS user account that invoked the BatchPrediction . The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.\n\nCreatedAt -> (timestamp)\n\nThe time when the BatchPrediction was created. The time is expressed in epoch time.\n\nLastUpdatedAt -> (timestamp)\n\nThe time of the most recent edit to BatchPrediction . The time is expressed in epoch time.\n\nName -> (string)\n\nA user-supplied name or description of the BatchPrediction .\n\nStatus -> (string)\n\nThe status of the BatchPrediction , which can be one of the following values:\n\nPENDING - Amazon Machine Learning (Amazon ML) submitted a request to generate batch predictions.\n\nINPROGRESS - The batch predictions are in progress.\n\nFAILED - The request to perform a batch prediction did not run to completion. It is not usable.\n\nCOMPLETED - The batch prediction process completed successfully.\n\nDELETED - The BatchPrediction is marked as deleted. It is not usable.\n\nOutputUri -> (string)\n\nThe location of an Amazon S3 bucket or directory to receive the operation results.\n\nLogUri -> (string)\n\nA link to the file that contains logs of the CreateBatchPrediction operation.\n\nMessage -> (string)\n\nA description of the most recent details about processing the batch prediction request.\n\nComputeTime -> (long)\n\nThe approximate CPU time in milliseconds that Amazon Machine Learning spent processing the BatchPrediction , normalized and scaled on computation resources. ComputeTime is only available if the BatchPrediction is in the COMPLETED state.\n\nFinishedAt -> (timestamp)\n\nThe epoch time when Amazon Machine Learning marked the BatchPrediction as COMPLETED or FAILED . FinishedAt is only available when the BatchPrediction is in the COMPLETED or FAILED state.\n\nStartedAt -> (timestamp)\n\nThe epoch time when Amazon Machine Learning marked the BatchPrediction as INPROGRESS . StartedAt isn’t available if the BatchPrediction is in the PENDING state.\n\nTotalRecordCount -> (long)\n\nThe number of total records that Amazon Machine Learning saw while processing the BatchPrediction .\n\nInvalidRecordCount -> (long)\n\nThe number of invalid records that Amazon Machine Learning saw while processing the BatchPrediction ."
    },
    {
      "command_name": "get-data-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/get-data-source.html",
      "command_description": "Description\n\nReturns a DataSource that includes metadata and data file information, as well as the current status of the DataSource .\n\nGetDataSource provides results in normal or verbose format. The verbose format adds the schema description and the list of files pointed to by the DataSource to the normal format.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-data-source\n--data-source-id <value>\n[--verbose | --no-verbose]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--data-source-id <value>",
        "[--verbose | --no-verbose]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--data-source-id (string)\n\nThe ID assigned to the DataSource at creation.\n\n--verbose | --no-verbose (boolean)\n\nSpecifies whether the GetDataSource operation should return DataSourceSchema .\n\nIf true, DataSourceSchema is returned.\n\nIf false, DataSourceSchema is not returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDataSourceId -> (string)\n\nThe ID assigned to the DataSource at creation. This value should be identical to the value of the DataSourceId in the request.\n\nDataLocationS3 -> (string)\n\nThe location of the data file or directory in Amazon Simple Storage Service (Amazon S3).\n\nDataRearrangement -> (string)\n\nA JSON string that represents the splitting and rearrangement requirement used when this DataSource was created.\n\nCreatedByIamUser -> (string)\n\nThe AWS user account from which the DataSource was created. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.\n\nCreatedAt -> (timestamp)\n\nThe time that the DataSource was created. The time is expressed in epoch time.\n\nLastUpdatedAt -> (timestamp)\n\nThe time of the most recent edit to the DataSource . The time is expressed in epoch time.\n\nDataSizeInBytes -> (long)\n\nThe total size of observations in the data files.\n\nNumberOfFiles -> (long)\n\nThe number of data files referenced by the DataSource .\n\nName -> (string)\n\nA user-supplied name or description of the DataSource .\n\nStatus -> (string)\n\nThe current status of the DataSource . This element can have one of the following values:\n\nPENDING - Amazon ML submitted a request to create a DataSource .\n\nINPROGRESS - The creation process is underway.\n\nFAILED - The request to create a DataSource did not run to completion. It is not usable.\n\nCOMPLETED - The creation process completed successfully.\n\nDELETED - The DataSource is marked as deleted. It is not usable.\n\nLogUri -> (string)\n\nA link to the file containing logs of CreateDataSourceFrom* operations.\n\nMessage -> (string)\n\nThe user-supplied description of the most recent details about creating the DataSource .\n\nRedshiftMetadata -> (structure)\n\nDescribes the DataSource details specific to Amazon Redshift.\n\nRedshiftDatabase -> (structure)\n\nDescribes the database details required to connect to an Amazon Redshift database.\n\nDatabaseName -> (string)\n\nThe name of a database hosted on an Amazon Redshift cluster.\n\nClusterIdentifier -> (string)\n\nThe ID of an Amazon Redshift cluster.\n\nDatabaseUserName -> (string)\n\nA username to be used by Amazon Machine Learning (Amazon ML)to connect to a database on an Amazon Redshift cluster. The username should have sufficient permissions to execute the RedshiftSelectSqlQuery query. The username should be valid for an Amazon Redshift USER .\n\nSelectSqlQuery -> (string)\n\nThe SQL query that is specified during CreateDataSourceFromRedshift . Returns only if Verbose is true in GetDataSourceInput.\n\nRDSMetadata -> (structure)\n\nThe datasource details that are specific to Amazon RDS.\n\nDatabase -> (structure)\n\nThe database details required to connect to an Amazon RDS.\n\nInstanceIdentifier -> (string)\n\nThe ID of an RDS DB instance.\n\nDatabaseName -> (string)\n\nThe name of a database hosted on an RDS DB instance.\n\nDatabaseUserName -> (string)\n\nThe username to be used by Amazon ML to connect to database on an Amazon RDS instance. The username should have sufficient permissions to execute an RDSSelectSqlQuery query.\n\nSelectSqlQuery -> (string)\n\nThe SQL query that is supplied during CreateDataSourceFromRDS . Returns only if Verbose is true in GetDataSourceInput .\n\nResourceRole -> (string)\n\nThe role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2 instance to carry out the copy task from Amazon RDS to Amazon S3. For more information, see Role templates for data pipelines.\n\nServiceRole -> (string)\n\nThe role (DataPipelineDefaultRole) assumed by the Data Pipeline service to monitor the progress of the copy task from Amazon RDS to Amazon S3. For more information, see Role templates for data pipelines.\n\nDataPipelineId -> (string)\n\nThe ID of the Data Pipeline instance that is used to carry to copy data from Amazon RDS to Amazon S3. You can use the ID to find details about the instance in the Data Pipeline console.\n\nRoleARN -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS IAM Role , such as the following: arn:aws:iam::account:role/rolename.\n\nComputeStatistics -> (boolean)\n\nThe parameter is true if statistics need to be generated from the observation data.\n\nComputeTime -> (long)\n\nThe approximate CPU time in milliseconds that Amazon Machine Learning spent processing the DataSource , normalized and scaled on computation resources. ComputeTime is only available if the DataSource is in the COMPLETED state and the ComputeStatistics is set to true.\n\nFinishedAt -> (timestamp)\n\nThe epoch time when Amazon Machine Learning marked the DataSource as COMPLETED or FAILED . FinishedAt is only available when the DataSource is in the COMPLETED or FAILED state.\n\nStartedAt -> (timestamp)\n\nThe epoch time when Amazon Machine Learning marked the DataSource as INPROGRESS . StartedAt isn’t available if the DataSource is in the PENDING state.\n\nDataSourceSchema -> (string)\n\nThe schema used by all of the data files of this DataSource .\n\nNote: This parameter is provided as part of the verbose format."
    },
    {
      "command_name": "get-evaluation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/get-evaluation.html",
      "command_description": "Description\n\nReturns an Evaluation that includes metadata as well as the current status of the Evaluation .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-evaluation\n--evaluation-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--evaluation-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--evaluation-id (string)\n\nThe ID of the Evaluation to retrieve. The evaluation of each MLModel is recorded and cataloged. The ID provides the means to access the information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEvaluationId -> (string)\n\nThe evaluation ID which is same as the EvaluationId in the request.\n\nMLModelId -> (string)\n\nThe ID of the MLModel that was the focus of the evaluation.\n\nEvaluationDataSourceId -> (string)\n\nThe DataSource used for this evaluation.\n\nInputDataLocationS3 -> (string)\n\nThe location of the data file or directory in Amazon Simple Storage Service (Amazon S3).\n\nCreatedByIamUser -> (string)\n\nThe AWS user account that invoked the evaluation. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.\n\nCreatedAt -> (timestamp)\n\nThe time that the Evaluation was created. The time is expressed in epoch time.\n\nLastUpdatedAt -> (timestamp)\n\nThe time of the most recent edit to the Evaluation . The time is expressed in epoch time.\n\nName -> (string)\n\nA user-supplied name or description of the Evaluation .\n\nStatus -> (string)\n\nThe status of the evaluation. This element can have one of the following values:\n\nPENDING - Amazon Machine Language (Amazon ML) submitted a request to evaluate an MLModel .\n\nINPROGRESS - The evaluation is underway.\n\nFAILED - The request to evaluate an MLModel did not run to completion. It is not usable.\n\nCOMPLETED - The evaluation process completed successfully.\n\nDELETED - The Evaluation is marked as deleted. It is not usable.\n\nPerformanceMetrics -> (structure)\n\nMeasurements of how well the MLModel performed using observations referenced by the DataSource . One of the following metric is returned based on the type of the MLModel :\n\nBinaryAUC: A binary MLModel uses the Area Under the Curve (AUC) technique to measure performance.\n\nRegressionRMSE: A regression MLModel uses the Root Mean Square Error (RMSE) technique to measure performance. RMSE measures the difference between predicted and actual values for a single variable.\n\nMulticlassAvgFScore: A multiclass MLModel uses the F1 score technique to measure performance.\n\nFor more information about performance metrics, please see the Amazon Machine Learning Developer Guide .\n\nProperties -> (map)\n\nkey -> (string)\n\nvalue -> (string)\n\nLogUri -> (string)\n\nA link to the file that contains logs of the CreateEvaluation operation.\n\nMessage -> (string)\n\nA description of the most recent details about evaluating the MLModel .\n\nComputeTime -> (long)\n\nThe approximate CPU time in milliseconds that Amazon Machine Learning spent processing the Evaluation , normalized and scaled on computation resources. ComputeTime is only available if the Evaluation is in the COMPLETED state.\n\nFinishedAt -> (timestamp)\n\nThe epoch time when Amazon Machine Learning marked the Evaluation as COMPLETED or FAILED . FinishedAt is only available when the Evaluation is in the COMPLETED or FAILED state.\n\nStartedAt -> (timestamp)\n\nThe epoch time when Amazon Machine Learning marked the Evaluation as INPROGRESS . StartedAt isn’t available if the Evaluation is in the PENDING state."
    },
    {
      "command_name": "get-ml-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/get-ml-model.html",
      "command_description": "Description\n\nReturns an MLModel that includes detailed metadata, data source information, and the current status of the MLModel .\n\nGetMLModel provides results in normal or verbose format.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-ml-model\n--ml-model-id <value>\n[--verbose | --no-verbose]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ml-model-id <value>",
        "[--verbose | --no-verbose]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ml-model-id (string)\n\nThe ID assigned to the MLModel at creation.\n\n--verbose | --no-verbose (boolean)\n\nSpecifies whether the GetMLModel operation should return Recipe .\n\nIf true, Recipe is returned.\n\nIf false, Recipe is not returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMLModelId -> (string)\n\nThe MLModel ID, which is same as the MLModelId in the request.\n\nTrainingDataSourceId -> (string)\n\nThe ID of the training DataSource .\n\nCreatedByIamUser -> (string)\n\nThe AWS user account from which the MLModel was created. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.\n\nCreatedAt -> (timestamp)\n\nThe time that the MLModel was created. The time is expressed in epoch time.\n\nLastUpdatedAt -> (timestamp)\n\nThe time of the most recent edit to the MLModel . The time is expressed in epoch time.\n\nName -> (string)\n\nA user-supplied name or description of the MLModel .\n\nStatus -> (string)\n\nThe current status of the MLModel . This element can have one of the following values:\n\nPENDING - Amazon Machine Learning (Amazon ML) submitted a request to describe a MLModel .\n\nINPROGRESS - The request is processing.\n\nFAILED - The request did not run to completion. The ML model isn’t usable.\n\nCOMPLETED - The request completed successfully.\n\nDELETED - The MLModel is marked as deleted. It isn’t usable.\n\nSizeInBytes -> (long)\n\nLong integer type that is a 64-bit signed number.\n\nEndpointInfo -> (structure)\n\nThe current endpoint of the MLModel\n\nPeakRequestsPerSecond -> (integer)\n\nThe maximum processing rate for the real-time endpoint for MLModel , measured in incoming requests per second.\n\nCreatedAt -> (timestamp)\n\nThe time that the request to create the real-time endpoint for the MLModel was received. The time is expressed in epoch time.\n\nEndpointUrl -> (string)\n\nThe URI that specifies where to send real-time prediction requests for the MLModel .\n\nNote: The application must wait until the real-time endpoint is ready before using this URI.\n\nEndpointStatus -> (string)\n\nThe current status of the real-time endpoint for the MLModel . This element can have one of the following values:\n\nNONE - Endpoint does not exist or was previously deleted.\n\nREADY - Endpoint is ready to be used for real-time predictions.\n\nUPDATING - Updating/creating the endpoint.\n\nTrainingParameters -> (map)\n\nA list of the training parameters in the MLModel . The list is implemented as a map of key-value pairs.\n\nThe following is the current set of training parameters:\n\nsgd.maxMLModelSizeInBytes - The maximum allowed size of the model. Depending on the input data, the size of the model might affect its performance. The value is an integer that ranges from 100000 to 2147483648 . The default value is 33554432 .\n\nsgd.maxPasses - The number of times that the training process traverses the observations to build the MLModel . The value is an integer that ranges from 1 to 10000 . The default value is 10 .\n\nsgd.shuffleType - Whether Amazon ML shuffles the training data. Shuffling data improves a model’s ability to find the optimal solution for a variety of data types. The valid values are auto and none . The default value is none . We strongly recommend that you shuffle your data.\n\nsgd.l1RegularizationAmount - The coefficient regularization L1 norm. It controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to zero, resulting in a sparse feature set. If you use this parameter, start by specifying a small value, such as 1.0E-08 . The value is a double that ranges from 0 to MAX_DOUBLE . The default is to not use L1 normalization. This parameter can’t be used when L2 is specified. Use this parameter sparingly.\n\nsgd.l2RegularizationAmount - The coefficient regularization L2 norm. It controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to small, nonzero values. If you use this parameter, start by specifying a small value, such as 1.0E-08 . The value is a double that ranges from 0 to MAX_DOUBLE . The default is to not use L2 normalization. This parameter can’t be used when L1 is specified. Use this parameter sparingly.\n\nkey -> (string)\n\nString type.\n\nvalue -> (string)\n\nString type.\n\nInputDataLocationS3 -> (string)\n\nThe location of the data file or directory in Amazon Simple Storage Service (Amazon S3).\n\nMLModelType -> (string)\n\nIdentifies the MLModel category. The following are the available types:\n\nREGRESSION – Produces a numeric result. For example, “What price should a house be listed at?”\n\nBINARY – Produces one of two possible results. For example, “Is this an e-commerce website?”\n\nMULTICLASS – Produces one of several possible results. For example, “Is this a HIGH, LOW or MEDIUM risk trade?”\n\nScoreThreshold -> (float)\n\nThe scoring threshold is used in binary classification MLModel models. It marks the boundary between a positive prediction and a negative prediction.\n\nOutput values greater than or equal to the threshold receive a positive result from the MLModel, such as true . Output values less than the threshold receive a negative response from the MLModel, such as false .\n\nScoreThresholdLastUpdatedAt -> (timestamp)\n\nThe time of the most recent edit to the ScoreThreshold . The time is expressed in epoch time.\n\nLogUri -> (string)\n\nA link to the file that contains logs of the CreateMLModel operation.\n\nMessage -> (string)\n\nA description of the most recent details about accessing the MLModel .\n\nComputeTime -> (long)\n\nThe approximate CPU time in milliseconds that Amazon Machine Learning spent processing the MLModel , normalized and scaled on computation resources. ComputeTime is only available if the MLModel is in the COMPLETED state.\n\nFinishedAt -> (timestamp)\n\nThe epoch time when Amazon Machine Learning marked the MLModel as COMPLETED or FAILED . FinishedAt is only available when the MLModel is in the COMPLETED or FAILED state.\n\nStartedAt -> (timestamp)\n\nThe epoch time when Amazon Machine Learning marked the MLModel as INPROGRESS . StartedAt isn’t available if the MLModel is in the PENDING state.\n\nRecipe -> (string)\n\nThe recipe to use when training the MLModel . The Recipe provides detailed information about the observation data to use during training, and manipulations to perform on the observation data during training.\n\nNote: This parameter is provided as part of the verbose format.\n\nSchema -> (string)\n\nThe schema used by all of the data files referenced by the DataSource .\n\nNote: This parameter is provided as part of the verbose format."
    },
    {
      "command_name": "predict",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/predict.html",
      "command_description": "Description\n\nGenerates a prediction for the observation using the specified ML Model .\n\nNote: Not all response parameters will be populated. Whether a response parameter is populated depends on the type of model requested.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  predict\n--ml-model-id <value>\n--record <value>\n--predict-endpoint <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ml-model-id <value>",
        "--record <value>",
        "--predict-endpoint <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ml-model-id (string)\n\nA unique identifier of the MLModel .\n\n--record (map)\n\nA map of variable name-value pairs that represent an observation.\n\nkey -> (string)\n\nThe name of a variable. Currently it’s used to specify the name of the target value, label, weight, and tags.\n\nvalue -> (string)\n\nThe value of a variable. Currently it’s used to specify values of the target value, weights, and tag variables and for filtering variable values.\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--predict-endpoint (string)\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPrediction -> (structure)\n\nThe output from a Predict operation:\n\nDetails - Contains the following attributes: DetailsAttributes.PREDICTIVE_MODEL_TYPE - REGRESSION | BINARY | MULTICLASS DetailsAttributes.ALGORITHM - SGD\n\nPredictedLabel - Present for either a BINARY or MULTICLASS MLModel request.\n\nPredictedScores - Contains the raw classification score corresponding to each label.\n\nPredictedValue - Present for a REGRESSION MLModel request.\n\npredictedLabel -> (string)\n\nThe prediction label for either a BINARY or MULTICLASS MLModel .\n\npredictedValue -> (float)\n\nThe prediction value for REGRESSION MLModel .\n\npredictedScores -> (map)\n\nProvides the raw classification score corresponding to each label.\n\nkey -> (string)\n\nvalue -> (float)\n\ndetails -> (map)\n\nProvides any additional details regarding the prediction.\n\nkey -> (string)\n\nContains the key values of DetailsMap :\n\nPredictiveModelType - Indicates the type of the MLModel .\n\nAlgorithm - Indicates the algorithm that was used for the MLModel .\n\nvalue -> (string)"
    },
    {
      "command_name": "update-batch-prediction",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/update-batch-prediction.html",
      "command_description": "Description\n\nUpdates the BatchPredictionName of a BatchPrediction .\n\nYou can use the GetBatchPrediction operation to view the contents of the updated data element.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-batch-prediction\n--batch-prediction-id <value>\n--batch-prediction-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--batch-prediction-id <value>",
        "--batch-prediction-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--batch-prediction-id (string)\n\nThe ID assigned to the BatchPrediction during creation.\n\n--batch-prediction-name (string)\n\nA new user-supplied name or description of the BatchPrediction .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBatchPredictionId -> (string)\n\nThe ID assigned to the BatchPrediction during creation. This value should be identical to the value of the BatchPredictionId in the request."
    },
    {
      "command_name": "update-data-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/update-data-source.html",
      "command_description": "Description\n\nUpdates the DataSourceName of a DataSource .\n\nYou can use the GetDataSource operation to view the contents of the updated data element.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-data-source\n--data-source-id <value>\n--data-source-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--data-source-id <value>",
        "--data-source-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--data-source-id (string)\n\nThe ID assigned to the DataSource during creation.\n\n--data-source-name (string)\n\nA new user-supplied name or description of the DataSource that will replace the current description.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDataSourceId -> (string)\n\nThe ID assigned to the DataSource during creation. This value should be identical to the value of the DataSourceID in the request."
    },
    {
      "command_name": "update-evaluation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/update-evaluation.html",
      "command_description": "Description\n\nUpdates the EvaluationName of an Evaluation .\n\nYou can use the GetEvaluation operation to view the contents of the updated data element.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-evaluation\n--evaluation-id <value>\n--evaluation-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--evaluation-id <value>",
        "--evaluation-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--evaluation-id (string)\n\nThe ID assigned to the Evaluation during creation.\n\n--evaluation-name (string)\n\nA new user-supplied name or description of the Evaluation that will replace the current content.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEvaluationId -> (string)\n\nThe ID assigned to the Evaluation during creation. This value should be identical to the value of the Evaluation in the request."
    },
    {
      "command_name": "update-ml-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/update-ml-model.html",
      "command_description": "Description\n\nUpdates the MLModelName and the ScoreThreshold of an MLModel .\n\nYou can use the GetMLModel operation to view the contents of the updated data element.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-ml-model\n--ml-model-id <value>\n[--ml-model-name <value>]\n[--score-threshold <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ml-model-id <value>",
        "[--ml-model-name <value>]",
        "[--score-threshold <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ml-model-id (string)\n\nThe ID assigned to the MLModel during creation.\n\n--ml-model-name (string)\n\nA user-supplied name or description of the MLModel .\n\n--score-threshold (float)\n\nThe ScoreThreshold used in binary classification MLModel that marks the boundary between a positive prediction and a negative prediction.\n\nOutput values greater than or equal to the ScoreThreshold receive a positive result from the MLModel , such as true . Output values less than the ScoreThreshold receive a negative response from the MLModel , such as false .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMLModelId -> (string)\n\nThe ID assigned to the MLModel during creation. This value should be identical to the value of the MLModelID in the request."
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/machinelearning/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description\n\nDefinition of the public APIs exposed by Amazon Machine Learning"
}