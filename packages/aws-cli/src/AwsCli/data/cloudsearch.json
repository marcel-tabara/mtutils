{
  "service_name": "cloudsearch",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/index.html",
  "service_commands": [
    {
      "command_name": "build-suggesters",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/build-suggesters.html",
      "command_description": "Description\n\nIndexes the search suggestions. For more information, see Configuring Suggesters in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  build-suggesters\n--domain-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldNames -> (list)\n\nA list of field names.\n\n(string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id ."
    },
    {
      "command_name": "create-domain",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/create-domain.html",
      "command_description": "Description\n\nCreates a new search domain. For more information, see Creating a Search Domain in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-domain\n--domain-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA name for the domain you are creating. Allowed characters are a-z (lower-case letters), 0-9, and hyphen (-). Domain names must start with a letter or number and be at least 3 and no more than 28 characters long.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDomainStatus -> (structure)\n\nThe current status of the search domain.\n\nDomainId -> (string)\n\nAn internally generated unique identifier for a domain.\n\nDomainName -> (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) of the search domain. See Identifiers for IAM Entities in Using AWS Identity and Access Management for more information.\n\nCreated -> (boolean)\n\nTrue if the search domain is created. It can take several minutes to initialize a domain when CreateDomain is called. Newly created search domains are returned from DescribeDomains with a false value for Created until domain creation is complete.\n\nDeleted -> (boolean)\n\nTrue if the search domain has been deleted. The system must clean up resources dedicated to the search domain when DeleteDomain is called. Newly deleted search domains are returned from DescribeDomains with a true value for IsDeleted for several minutes until resource cleanup is complete.\n\nDocService -> (structure)\n\nThe service endpoint for updating documents in a search domain.\n\nEndpoint -> (string)\n\nThe endpoint to which service requests can be submitted. For example, search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com or doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com .\n\nSearchService -> (structure)\n\nThe service endpoint for requesting search results from a search domain.\n\nEndpoint -> (string)\n\nThe endpoint to which service requests can be submitted. For example, search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com or doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com .\n\nRequiresIndexDocuments -> (boolean)\n\nTrue if IndexDocuments needs to be called to activate the current domain configuration.\n\nProcessing -> (boolean)\n\nTrue if processing is being done to activate the current domain configuration.\n\nSearchInstanceType -> (string)\n\nThe instance type that is being used to process search requests.\n\nSearchPartitionCount -> (integer)\n\nThe number of partitions across which the search index is spread.\n\nSearchInstanceCount -> (integer)\n\nThe number of search instances that are available to process search requests.\n\nLimits -> (structure)\n\nMaximumReplicationCount -> (integer)\n\nMaximumPartitionCount -> (integer)"
    },
    {
      "command_name": "define-analysis-scheme",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/define-analysis-scheme.html",
      "command_description": "Description\n\nConfigures an analysis scheme that can be applied to a text or text-array field to define language-specific text processing options. For more information, see Configuring Analysis Schemes in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  define-analysis-scheme\n--domain-name <value>\n--analysis-scheme <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--analysis-scheme <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--analysis-scheme (structure)\n\nConfiguration information for an analysis scheme. Each analysis scheme has a unique name and specifies the language of the text to be processed. The following options can be configured for an analysis scheme: Synonyms , Stopwords , StemmingDictionary , JapaneseTokenizationDictionary and AlgorithmicStemming .\n\nAnalysisSchemeName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nAnalysisSchemeLanguage -> (string)\n\nAn IETF RFC 4646 language code or mul for multiple languages.\n\nAnalysisOptions -> (structure)\n\nSynonyms, stopwords, and stemming options for an analysis scheme. Includes tokenization dictionary for Japanese.\n\nSynonyms -> (string)\n\nA JSON object that defines synonym groups and aliases. A synonym group is an array of arrays, where each sub-array is a group of terms where each term in the group is considered a synonym of every other term in the group. The aliases value is an object that contains a collection of string:value pairs where the string specifies a term and the array of values specifies each of the aliases for that term. An alias is considered a synonym of the specified term, but the term is not considered a synonym of the alias. For more information about specifying synonyms, see Synonyms in the Amazon CloudSearch Developer Guide .\n\nStopwords -> (string)\n\nA JSON array of terms to ignore during indexing and searching. For example, [\"a\", \"an\", \"the\", \"of\"] . The stopwords dictionary must explicitly list each word you want to ignore. Wildcards and regular expressions are not supported.\n\nStemmingDictionary -> (string)\n\nA JSON object that contains a collection of string:value pairs that each map a term to its stem. For example, {\"term1\": \"stem1\", \"term2\": \"stem2\", \"term3\": \"stem3\"} . The stemming dictionary is applied in addition to any algorithmic stemming. This enables you to override the results of the algorithmic stemming to correct specific cases of overstemming or understemming. The maximum size of a stemming dictionary is 500 KB.\n\nJapaneseTokenizationDictionary -> (string)\n\nA JSON array that contains a collection of terms, tokens, readings and part of speech for Japanese Tokenizaiton. The Japanese tokenization dictionary enables you to override the default tokenization for selected terms. This is only valid for Japanese language fields.\n\nAlgorithmicStemming -> (string)\n\nThe level of algorithmic stemming to perform: none , minimal , light , or full . The available levels vary depending on the language. For more information, see Language Specific Text Processing Settings in the Amazon CloudSearch Developer Guide\n\nShorthand Syntax:\n\nAnalysisSchemeName=string,AnalysisSchemeLanguage=string,AnalysisOptions={Synonyms=string,Stopwords=string,StemmingDictionary=string,JapaneseTokenizationDictionary=string,AlgorithmicStemming=string}\n\n\nJSON Syntax:\n\n{\n  \"AnalysisSchemeName\": \"string\",\n  \"AnalysisSchemeLanguage\": \"ar\"|\"bg\"|\"ca\"|\"cs\"|\"da\"|\"de\"|\"el\"|\"en\"|\"es\"|\"eu\"|\"fa\"|\"fi\"|\"fr\"|\"ga\"|\"gl\"|\"he\"|\"hi\"|\"hu\"|\"hy\"|\"id\"|\"it\"|\"ja\"|\"ko\"|\"lv\"|\"mul\"|\"nl\"|\"no\"|\"pt\"|\"ro\"|\"ru\"|\"sv\"|\"th\"|\"tr\"|\"zh-Hans\"|\"zh-Hant\",\n  \"AnalysisOptions\": {\n    \"Synonyms\": \"string\",\n    \"Stopwords\": \"string\",\n    \"StemmingDictionary\": \"string\",\n    \"JapaneseTokenizationDictionary\": \"string\",\n    \"AlgorithmicStemming\": \"none\"|\"minimal\"|\"light\"|\"full\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAnalysisScheme -> (structure)\n\nThe status and configuration of an AnalysisScheme .\n\nOptions -> (structure)\n\nConfiguration information for an analysis scheme. Each analysis scheme has a unique name and specifies the language of the text to be processed. The following options can be configured for an analysis scheme: Synonyms , Stopwords , StemmingDictionary , JapaneseTokenizationDictionary and AlgorithmicStemming .\n\nAnalysisSchemeName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nAnalysisSchemeLanguage -> (string)\n\nAn IETF RFC 4646 language code or mul for multiple languages.\n\nAnalysisOptions -> (structure)\n\nSynonyms, stopwords, and stemming options for an analysis scheme. Includes tokenization dictionary for Japanese.\n\nSynonyms -> (string)\n\nA JSON object that defines synonym groups and aliases. A synonym group is an array of arrays, where each sub-array is a group of terms where each term in the group is considered a synonym of every other term in the group. The aliases value is an object that contains a collection of string:value pairs where the string specifies a term and the array of values specifies each of the aliases for that term. An alias is considered a synonym of the specified term, but the term is not considered a synonym of the alias. For more information about specifying synonyms, see Synonyms in the Amazon CloudSearch Developer Guide .\n\nStopwords -> (string)\n\nA JSON array of terms to ignore during indexing and searching. For example, [\"a\", \"an\", \"the\", \"of\"] . The stopwords dictionary must explicitly list each word you want to ignore. Wildcards and regular expressions are not supported.\n\nStemmingDictionary -> (string)\n\nA JSON object that contains a collection of string:value pairs that each map a term to its stem. For example, {\"term1\": \"stem1\", \"term2\": \"stem2\", \"term3\": \"stem3\"} . The stemming dictionary is applied in addition to any algorithmic stemming. This enables you to override the results of the algorithmic stemming to correct specific cases of overstemming or understemming. The maximum size of a stemming dictionary is 500 KB.\n\nJapaneseTokenizationDictionary -> (string)\n\nA JSON array that contains a collection of terms, tokens, readings and part of speech for Japanese Tokenizaiton. The Japanese tokenization dictionary enables you to override the default tokenization for selected terms. This is only valid for Japanese language fields.\n\nAlgorithmicStemming -> (string)\n\nThe level of algorithmic stemming to perform: none , minimal , light , or full . The available levels vary depending on the language. For more information, see Language Specific Text Processing Settings in the Amazon CloudSearch Developer Guide\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "define-expression",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/define-expression.html",
      "command_description": "Description\n\nConfigures an `` Expression`` for the search domain. Used to create new expressions and modify existing ones. If the expression exists, the new configuration replaces the old one. For more information, see Configuring Expressions in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  define-expression\n--domain-name <value>\n--expression <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--expression <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--expression (string)\n\nThe expression to evaluate for sorting while processing a search request. The Expression syntax is based on JavaScript expressions. For more information, see Configuring Expressions in the Amazon CloudSearch Developer Guide .\n\n--name (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nExpression -> (structure)\n\nThe value of an Expression and its current status.\n\nOptions -> (structure)\n\nThe expression that is evaluated for sorting while processing a search request.\n\nExpressionName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nExpressionValue -> (string)\n\nThe expression to evaluate for sorting while processing a search request. The Expression syntax is based on JavaScript expressions. For more information, see Configuring Expressions in the Amazon CloudSearch Developer Guide .\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "define-index-field",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/define-index-field.html",
      "command_description": "Description\n\nConfigures an `` IndexField`` for the search domain. Used to create new fields and modify existing ones. You must specify the name of the domain you are configuring and an index field configuration. The index field configuration specifies a unique name, the index field type, and the options you want to configure for the field. The options you can specify depend on the `` IndexFieldType`` . If the field exists, the new configuration replaces the old one. For more information, see Configuring Index Fields in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  define-index-field\n--domain-name <value>\n--name <value>\n--type <value>\n[--default-value <value>]\n[--facet-enabled <value>]\n[--search-enabled <value>]\n[--return-enabled <value>]\n[--sort-enabled <value>]\n[--highlight-enabled <value>]\n[--analysis-scheme <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--name <value>",
        "--type <value>",
        "[--default-value <value>]",
        "[--facet-enabled <value>]",
        "[--search-enabled <value>]",
        "[--return-enabled <value>]",
        "[--sort-enabled <value>]",
        "[--highlight-enabled <value>]",
        "[--analysis-scheme <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--name (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\n--type (string)\n\nThe type of field. The valid options for a field depend on the field type. For more information about the supported field types, see Configuring Index Fields in the Amazon CloudSearch Developer Guide .\n\n--default-value (string) A value to use for the field if the field isn’t specified for a document. This can be important if you are using the field in an expression and that field is not present in every document.\n\n--facet-enabled (boolean)\n\nWhether facet information can be returned for the field.\n\n--search-enabled (boolean)\n\nWhether the contents of the field are searchable.\n\n--return-enabled (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\n--sort-enabled (boolean)\n\nWhether the field can be used to sort the search results.\n\n--highlight-enabled (boolean)\n\nWhether highlights can be returned for the field.\n\n--analysis-scheme (string)\n\nThe name of an analysis scheme for a text field.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nIndexField -> (structure)\n\nThe value of an IndexField and its current status.\n\nOptions -> (structure)\n\nConfiguration information for a field in the index, including its name, type, and options. The supported options depend on the `` IndexFieldType`` .\n\nIndexFieldName -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nIndexFieldType -> (string)\n\nThe type of field. The valid options for a field depend on the field type. For more information about the supported field types, see Configuring Index Fields in the Amazon CloudSearch Developer Guide .\n\nIntOptions -> (structure)\n\nOptions for a 64-bit signed integer field. Present if IndexFieldType specifies the field is of type int . All options are enabled by default.\n\nDefaultValue -> (long)\n\nA value to use for the field if the field isn’t specified for a document. This can be important if you are using the field in an expression and that field is not present in every document.\n\nSourceField -> (string)\n\nThe name of the source field to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nDoubleOptions -> (structure)\n\nOptions for a double-precision 64-bit floating point field. Present if IndexFieldType specifies the field is of type double . All options are enabled by default.\n\nDefaultValue -> (double)\n\nA value to use for the field if the field isn’t specified for a document. This can be important if you are using the field in an expression and that field is not present in every document.\n\nSourceField -> (string)\n\nThe name of the source field to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nLiteralOptions -> (structure)\n\nOptions for literal field. Present if IndexFieldType specifies the field is of type literal . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nTextOptions -> (structure)\n\nOptions for text field. Present if IndexFieldType specifies the field is of type text . A text field is always searchable. All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nHighlightEnabled -> (boolean)\n\nWhether highlights can be returned for the field.\n\nAnalysisScheme -> (string)\n\nThe name of an analysis scheme for a text field.\n\nDateOptions -> (structure)\n\nOptions for a date field. Dates and times are specified in UTC (Coordinated Universal Time) according to IETF RFC3339: yyyy-mm-ddT00:00:00Z. Present if IndexFieldType specifies the field is of type date . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nLatLonOptions -> (structure)\n\nOptions for a latlon field. A latlon field contains a location stored as a latitude and longitude value pair. Present if IndexFieldType specifies the field is of type latlon . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nIntArrayOptions -> (structure)\n\nOptions for a field that contains an array of 64-bit signed integers. Present if IndexFieldType specifies the field is of type int-array . All options are enabled by default.\n\nDefaultValue -> (long)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nDoubleArrayOptions -> (structure)\n\nOptions for a field that contains an array of double-precision 64-bit floating point values. Present if IndexFieldType specifies the field is of type double-array . All options are enabled by default.\n\nDefaultValue -> (double)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nLiteralArrayOptions -> (structure)\n\nOptions for a field that contains an array of literal strings. Present if IndexFieldType specifies the field is of type literal-array . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nTextArrayOptions -> (structure)\n\nOptions for a field that contains an array of text strings. Present if IndexFieldType specifies the field is of type text-array . A text-array field is always searchable. All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nHighlightEnabled -> (boolean)\n\nWhether highlights can be returned for the field.\n\nAnalysisScheme -> (string)\n\nThe name of an analysis scheme for a text-array field.\n\nDateArrayOptions -> (structure)\n\nOptions for a field that contains an array of dates. Present if IndexFieldType specifies the field is of type date-array . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "define-suggester",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/define-suggester.html",
      "command_description": "Description\n\nConfigures a suggester for a domain. A suggester enables you to display possible matches before users finish typing their queries. When you configure a suggester, you must specify the name of the text field you want to search for possible matches and a unique name for the suggester. For more information, see Getting Search Suggestions in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  define-suggester\n--domain-name <value>\n--suggester <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--suggester <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--suggester (structure)\n\nConfiguration information for a search suggester. Each suggester has a unique name and specifies the text field you want to use for suggestions. The following options can be configured for a suggester: FuzzyMatching , SortExpression .\n\nSuggesterName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nDocumentSuggesterOptions -> (structure)\n\nOptions for a search suggester.\n\nSourceField -> (string)\n\nThe name of the index field you want to use for suggestions.\n\nFuzzyMatching -> (string)\n\nThe level of fuzziness allowed when suggesting matches for a string: none , low , or high . With none, the specified string is treated as an exact prefix. With low, suggestions must differ from the specified string by no more than one character. With high, suggestions can differ by up to two characters. The default is none.\n\nSortExpression -> (string)\n\nAn expression that computes a score for each suggestion to control how they are sorted. The scores are rounded to the nearest integer, with a floor of 0 and a ceiling of 2^31-1. A document’s relevance score is not computed for suggestions, so sort expressions cannot reference the _score value. To sort suggestions using a numeric field or existing expression, simply specify the name of the field or expression. If no expression is configured for the suggester, the suggestions are sorted with the closest matches listed first.\n\nShorthand Syntax:\n\nSuggesterName=string,DocumentSuggesterOptions={SourceField=string,FuzzyMatching=string,SortExpression=string}\n\n\nJSON Syntax:\n\n{\n  \"SuggesterName\": \"string\",\n  \"DocumentSuggesterOptions\": {\n    \"SourceField\": \"string\",\n    \"FuzzyMatching\": \"none\"|\"low\"|\"high\",\n    \"SortExpression\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSuggester -> (structure)\n\nThe value of a Suggester and its current status.\n\nOptions -> (structure)\n\nConfiguration information for a search suggester. Each suggester has a unique name and specifies the text field you want to use for suggestions. The following options can be configured for a suggester: FuzzyMatching , SortExpression .\n\nSuggesterName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nDocumentSuggesterOptions -> (structure)\n\nOptions for a search suggester.\n\nSourceField -> (string)\n\nThe name of the index field you want to use for suggestions.\n\nFuzzyMatching -> (string)\n\nThe level of fuzziness allowed when suggesting matches for a string: none , low , or high . With none, the specified string is treated as an exact prefix. With low, suggestions must differ from the specified string by no more than one character. With high, suggestions can differ by up to two characters. The default is none.\n\nSortExpression -> (string)\n\nAn expression that computes a score for each suggestion to control how they are sorted. The scores are rounded to the nearest integer, with a floor of 0 and a ceiling of 2^31-1. A document’s relevance score is not computed for suggestions, so sort expressions cannot reference the _score value. To sort suggestions using a numeric field or existing expression, simply specify the name of the field or expression. If no expression is configured for the suggester, the suggestions are sorted with the closest matches listed first.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "delete-analysis-scheme",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/delete-analysis-scheme.html",
      "command_description": "Description\n\nDeletes an analysis scheme. For more information, see Configuring Analysis Schemes in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-analysis-scheme\n--domain-name <value>\n--analysis-scheme-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--analysis-scheme-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--analysis-scheme-name (string)\n\nThe name of the analysis scheme you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAnalysisScheme -> (structure)\n\nThe status of the analysis scheme being deleted.\n\nOptions -> (structure)\n\nConfiguration information for an analysis scheme. Each analysis scheme has a unique name and specifies the language of the text to be processed. The following options can be configured for an analysis scheme: Synonyms , Stopwords , StemmingDictionary , JapaneseTokenizationDictionary and AlgorithmicStemming .\n\nAnalysisSchemeName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nAnalysisSchemeLanguage -> (string)\n\nAn IETF RFC 4646 language code or mul for multiple languages.\n\nAnalysisOptions -> (structure)\n\nSynonyms, stopwords, and stemming options for an analysis scheme. Includes tokenization dictionary for Japanese.\n\nSynonyms -> (string)\n\nA JSON object that defines synonym groups and aliases. A synonym group is an array of arrays, where each sub-array is a group of terms where each term in the group is considered a synonym of every other term in the group. The aliases value is an object that contains a collection of string:value pairs where the string specifies a term and the array of values specifies each of the aliases for that term. An alias is considered a synonym of the specified term, but the term is not considered a synonym of the alias. For more information about specifying synonyms, see Synonyms in the Amazon CloudSearch Developer Guide .\n\nStopwords -> (string)\n\nA JSON array of terms to ignore during indexing and searching. For example, [\"a\", \"an\", \"the\", \"of\"] . The stopwords dictionary must explicitly list each word you want to ignore. Wildcards and regular expressions are not supported.\n\nStemmingDictionary -> (string)\n\nA JSON object that contains a collection of string:value pairs that each map a term to its stem. For example, {\"term1\": \"stem1\", \"term2\": \"stem2\", \"term3\": \"stem3\"} . The stemming dictionary is applied in addition to any algorithmic stemming. This enables you to override the results of the algorithmic stemming to correct specific cases of overstemming or understemming. The maximum size of a stemming dictionary is 500 KB.\n\nJapaneseTokenizationDictionary -> (string)\n\nA JSON array that contains a collection of terms, tokens, readings and part of speech for Japanese Tokenizaiton. The Japanese tokenization dictionary enables you to override the default tokenization for selected terms. This is only valid for Japanese language fields.\n\nAlgorithmicStemming -> (string)\n\nThe level of algorithmic stemming to perform: none , minimal , light , or full . The available levels vary depending on the language. For more information, see Language Specific Text Processing Settings in the Amazon CloudSearch Developer Guide\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "delete-domain",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/delete-domain.html",
      "command_description": "Description\n\nPermanently deletes a search domain and all of its data. Once a domain has been deleted, it cannot be recovered. For more information, see Deleting a Search Domain in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-domain\n--domain-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nThe name of the domain you want to permanently delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDomainStatus -> (structure)\n\nThe current status of the search domain.\n\nDomainId -> (string)\n\nAn internally generated unique identifier for a domain.\n\nDomainName -> (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) of the search domain. See Identifiers for IAM Entities in Using AWS Identity and Access Management for more information.\n\nCreated -> (boolean)\n\nTrue if the search domain is created. It can take several minutes to initialize a domain when CreateDomain is called. Newly created search domains are returned from DescribeDomains with a false value for Created until domain creation is complete.\n\nDeleted -> (boolean)\n\nTrue if the search domain has been deleted. The system must clean up resources dedicated to the search domain when DeleteDomain is called. Newly deleted search domains are returned from DescribeDomains with a true value for IsDeleted for several minutes until resource cleanup is complete.\n\nDocService -> (structure)\n\nThe service endpoint for updating documents in a search domain.\n\nEndpoint -> (string)\n\nThe endpoint to which service requests can be submitted. For example, search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com or doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com .\n\nSearchService -> (structure)\n\nThe service endpoint for requesting search results from a search domain.\n\nEndpoint -> (string)\n\nThe endpoint to which service requests can be submitted. For example, search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com or doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com .\n\nRequiresIndexDocuments -> (boolean)\n\nTrue if IndexDocuments needs to be called to activate the current domain configuration.\n\nProcessing -> (boolean)\n\nTrue if processing is being done to activate the current domain configuration.\n\nSearchInstanceType -> (string)\n\nThe instance type that is being used to process search requests.\n\nSearchPartitionCount -> (integer)\n\nThe number of partitions across which the search index is spread.\n\nSearchInstanceCount -> (integer)\n\nThe number of search instances that are available to process search requests.\n\nLimits -> (structure)\n\nMaximumReplicationCount -> (integer)\n\nMaximumPartitionCount -> (integer)"
    },
    {
      "command_name": "delete-expression",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/delete-expression.html",
      "command_description": "Description\n\nRemoves an `` Expression`` from the search domain. For more information, see Configuring Expressions in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-expression\n--domain-name <value>\n--expression-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--expression-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--expression-name (string)\n\nThe name of the `` Expression`` to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nExpression -> (structure)\n\nThe status of the expression being deleted.\n\nOptions -> (structure)\n\nThe expression that is evaluated for sorting while processing a search request.\n\nExpressionName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nExpressionValue -> (string)\n\nThe expression to evaluate for sorting while processing a search request. The Expression syntax is based on JavaScript expressions. For more information, see Configuring Expressions in the Amazon CloudSearch Developer Guide .\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "delete-index-field",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/delete-index-field.html",
      "command_description": "Description\n\nRemoves an `` IndexField`` from the search domain. For more information, see Configuring Index Fields in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-index-field\n--domain-name <value>\n--index-field-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--index-field-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--index-field-name (string)\n\nThe name of the index field your want to remove from the domain’s indexing options.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nIndexField -> (structure)\n\nThe status of the index field being deleted.\n\nOptions -> (structure)\n\nConfiguration information for a field in the index, including its name, type, and options. The supported options depend on the `` IndexFieldType`` .\n\nIndexFieldName -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nIndexFieldType -> (string)\n\nThe type of field. The valid options for a field depend on the field type. For more information about the supported field types, see Configuring Index Fields in the Amazon CloudSearch Developer Guide .\n\nIntOptions -> (structure)\n\nOptions for a 64-bit signed integer field. Present if IndexFieldType specifies the field is of type int . All options are enabled by default.\n\nDefaultValue -> (long)\n\nA value to use for the field if the field isn’t specified for a document. This can be important if you are using the field in an expression and that field is not present in every document.\n\nSourceField -> (string)\n\nThe name of the source field to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nDoubleOptions -> (structure)\n\nOptions for a double-precision 64-bit floating point field. Present if IndexFieldType specifies the field is of type double . All options are enabled by default.\n\nDefaultValue -> (double)\n\nA value to use for the field if the field isn’t specified for a document. This can be important if you are using the field in an expression and that field is not present in every document.\n\nSourceField -> (string)\n\nThe name of the source field to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nLiteralOptions -> (structure)\n\nOptions for literal field. Present if IndexFieldType specifies the field is of type literal . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nTextOptions -> (structure)\n\nOptions for text field. Present if IndexFieldType specifies the field is of type text . A text field is always searchable. All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nHighlightEnabled -> (boolean)\n\nWhether highlights can be returned for the field.\n\nAnalysisScheme -> (string)\n\nThe name of an analysis scheme for a text field.\n\nDateOptions -> (structure)\n\nOptions for a date field. Dates and times are specified in UTC (Coordinated Universal Time) according to IETF RFC3339: yyyy-mm-ddT00:00:00Z. Present if IndexFieldType specifies the field is of type date . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nLatLonOptions -> (structure)\n\nOptions for a latlon field. A latlon field contains a location stored as a latitude and longitude value pair. Present if IndexFieldType specifies the field is of type latlon . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nIntArrayOptions -> (structure)\n\nOptions for a field that contains an array of 64-bit signed integers. Present if IndexFieldType specifies the field is of type int-array . All options are enabled by default.\n\nDefaultValue -> (long)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nDoubleArrayOptions -> (structure)\n\nOptions for a field that contains an array of double-precision 64-bit floating point values. Present if IndexFieldType specifies the field is of type double-array . All options are enabled by default.\n\nDefaultValue -> (double)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nLiteralArrayOptions -> (structure)\n\nOptions for a field that contains an array of literal strings. Present if IndexFieldType specifies the field is of type literal-array . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nTextArrayOptions -> (structure)\n\nOptions for a field that contains an array of text strings. Present if IndexFieldType specifies the field is of type text-array . A text-array field is always searchable. All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nHighlightEnabled -> (boolean)\n\nWhether highlights can be returned for the field.\n\nAnalysisScheme -> (string)\n\nThe name of an analysis scheme for a text-array field.\n\nDateArrayOptions -> (structure)\n\nOptions for a field that contains an array of dates. Present if IndexFieldType specifies the field is of type date-array . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "delete-suggester",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/delete-suggester.html",
      "command_description": "Description\n\nDeletes a suggester. For more information, see Getting Search Suggestions in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-suggester\n--domain-name <value>\n--suggester-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--suggester-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--suggester-name (string)\n\nSpecifies the name of the suggester you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSuggester -> (structure)\n\nThe status of the suggester being deleted.\n\nOptions -> (structure)\n\nConfiguration information for a search suggester. Each suggester has a unique name and specifies the text field you want to use for suggestions. The following options can be configured for a suggester: FuzzyMatching , SortExpression .\n\nSuggesterName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nDocumentSuggesterOptions -> (structure)\n\nOptions for a search suggester.\n\nSourceField -> (string)\n\nThe name of the index field you want to use for suggestions.\n\nFuzzyMatching -> (string)\n\nThe level of fuzziness allowed when suggesting matches for a string: none , low , or high . With none, the specified string is treated as an exact prefix. With low, suggestions must differ from the specified string by no more than one character. With high, suggestions can differ by up to two characters. The default is none.\n\nSortExpression -> (string)\n\nAn expression that computes a score for each suggestion to control how they are sorted. The scores are rounded to the nearest integer, with a floor of 0 and a ceiling of 2^31-1. A document’s relevance score is not computed for suggestions, so sort expressions cannot reference the _score value. To sort suggestions using a numeric field or existing expression, simply specify the name of the field or expression. If no expression is configured for the suggester, the suggestions are sorted with the closest matches listed first.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "describe-analysis-schemes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/describe-analysis-schemes.html",
      "command_description": "Description\n\nGets the analysis schemes configured for a domain. An analysis scheme defines language-specific text processing options for a text field. Can be limited to specific analysis schemes by name. By default, shows all analysis schemes and includes any pending changes to the configuration. Set the Deployed option to true to show the active configuration and exclude pending changes. For more information, see Configuring Analysis Schemes in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-analysis-schemes\n--domain-name <value>\n[--analysis-scheme-names <value>]\n[--deployed | --no-deployed]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--analysis-scheme-names <value>]",
        "[--deployed | --no-deployed]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nThe name of the domain you want to describe.\n\n--analysis-scheme-names (list)\n\nThe analysis schemes you want to describe.\n\n(string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--deployed | --no-deployed (boolean)\n\nWhether to display the deployed configuration (true ) or include any pending changes (false ). Defaults to false .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAnalysisSchemes -> (list)\n\nThe analysis scheme descriptions.\n\n(structure)\n\nThe status and configuration of an AnalysisScheme .\n\nOptions -> (structure)\n\nConfiguration information for an analysis scheme. Each analysis scheme has a unique name and specifies the language of the text to be processed. The following options can be configured for an analysis scheme: Synonyms , Stopwords , StemmingDictionary , JapaneseTokenizationDictionary and AlgorithmicStemming .\n\nAnalysisSchemeName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nAnalysisSchemeLanguage -> (string)\n\nAn IETF RFC 4646 language code or mul for multiple languages.\n\nAnalysisOptions -> (structure)\n\nSynonyms, stopwords, and stemming options for an analysis scheme. Includes tokenization dictionary for Japanese.\n\nSynonyms -> (string)\n\nA JSON object that defines synonym groups and aliases. A synonym group is an array of arrays, where each sub-array is a group of terms where each term in the group is considered a synonym of every other term in the group. The aliases value is an object that contains a collection of string:value pairs where the string specifies a term and the array of values specifies each of the aliases for that term. An alias is considered a synonym of the specified term, but the term is not considered a synonym of the alias. For more information about specifying synonyms, see Synonyms in the Amazon CloudSearch Developer Guide .\n\nStopwords -> (string)\n\nA JSON array of terms to ignore during indexing and searching. For example, [\"a\", \"an\", \"the\", \"of\"] . The stopwords dictionary must explicitly list each word you want to ignore. Wildcards and regular expressions are not supported.\n\nStemmingDictionary -> (string)\n\nA JSON object that contains a collection of string:value pairs that each map a term to its stem. For example, {\"term1\": \"stem1\", \"term2\": \"stem2\", \"term3\": \"stem3\"} . The stemming dictionary is applied in addition to any algorithmic stemming. This enables you to override the results of the algorithmic stemming to correct specific cases of overstemming or understemming. The maximum size of a stemming dictionary is 500 KB.\n\nJapaneseTokenizationDictionary -> (string)\n\nA JSON array that contains a collection of terms, tokens, readings and part of speech for Japanese Tokenizaiton. The Japanese tokenization dictionary enables you to override the default tokenization for selected terms. This is only valid for Japanese language fields.\n\nAlgorithmicStemming -> (string)\n\nThe level of algorithmic stemming to perform: none , minimal , light , or full . The available levels vary depending on the language. For more information, see Language Specific Text Processing Settings in the Amazon CloudSearch Developer Guide\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "describe-availability-options",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/describe-availability-options.html",
      "command_description": "Description\n\nGets the availability options configured for a domain. By default, shows the configuration with any pending changes. Set the Deployed option to true to show the active configuration and exclude pending changes. For more information, see Configuring Availability Options in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-availability-options\n--domain-name <value>\n[--deployed | --no-deployed]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--deployed | --no-deployed]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nThe name of the domain you want to describe.\n\n--deployed | --no-deployed (boolean)\n\nWhether to display the deployed configuration (true ) or include any pending changes (false ). Defaults to false .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAvailabilityOptions -> (structure)\n\nThe availability options configured for the domain. Indicates whether Multi-AZ is enabled for the domain.\n\nOptions -> (boolean)\n\nThe availability options configured for the domain.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "describe-domain-endpoint-options",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/describe-domain-endpoint-options.html",
      "command_description": "Description\n\nReturns the domain’s endpoint options, specifically whether all requests to the domain must arrive over HTTPS. For more information, see Configuring Domain Endpoint Options in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-domain-endpoint-options\n--domain-name <value>\n[--deployed | --no-deployed]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--deployed | --no-deployed]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain.\n\n--deployed | --no-deployed (boolean)\n\nWhether to retrieve the latest configuration (which might be in a Processing state) or the current, active configuration. Defaults to false .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDomainEndpointOptions -> (structure)\n\nThe status and configuration of a search domain’s endpoint options.\n\nOptions -> (structure)\n\nThe domain endpoint options configured for the domain.\n\nEnforceHTTPS -> (boolean)\n\nWhether the domain is HTTPS only enabled.\n\nTLSSecurityPolicy -> (string)\n\nThe minimum required TLS version\n\nStatus -> (structure)\n\nThe status of the configured domain endpoint options.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "describe-domains",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/describe-domains.html",
      "command_description": "Description\n\nGets information about the search domains owned by this account. Can be limited to specific domains. Shows all domains by default. To get the number of searchable documents in a domain, use the console or submit a matchall request to your domain’s search endpoint: q=matchall&amp;q.parser=structured&amp;size=0 . For more information, see Getting Information about a Search Domain in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-domains\n[--domain-names <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--domain-names <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-names (list)\n\nThe names of the domains you want to include in the response.\n\n(string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDomainStatusList -> (list)\n\nA list that contains the status of each requested domain.\n\n(structure)\n\nThe current status of the search domain.\n\nDomainId -> (string)\n\nAn internally generated unique identifier for a domain.\n\nDomainName -> (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) of the search domain. See Identifiers for IAM Entities in Using AWS Identity and Access Management for more information.\n\nCreated -> (boolean)\n\nTrue if the search domain is created. It can take several minutes to initialize a domain when CreateDomain is called. Newly created search domains are returned from DescribeDomains with a false value for Created until domain creation is complete.\n\nDeleted -> (boolean)\n\nTrue if the search domain has been deleted. The system must clean up resources dedicated to the search domain when DeleteDomain is called. Newly deleted search domains are returned from DescribeDomains with a true value for IsDeleted for several minutes until resource cleanup is complete.\n\nDocService -> (structure)\n\nThe service endpoint for updating documents in a search domain.\n\nEndpoint -> (string)\n\nThe endpoint to which service requests can be submitted. For example, search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com or doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com .\n\nSearchService -> (structure)\n\nThe service endpoint for requesting search results from a search domain.\n\nEndpoint -> (string)\n\nThe endpoint to which service requests can be submitted. For example, search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com or doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com .\n\nRequiresIndexDocuments -> (boolean)\n\nTrue if IndexDocuments needs to be called to activate the current domain configuration.\n\nProcessing -> (boolean)\n\nTrue if processing is being done to activate the current domain configuration.\n\nSearchInstanceType -> (string)\n\nThe instance type that is being used to process search requests.\n\nSearchPartitionCount -> (integer)\n\nThe number of partitions across which the search index is spread.\n\nSearchInstanceCount -> (integer)\n\nThe number of search instances that are available to process search requests.\n\nLimits -> (structure)\n\nMaximumReplicationCount -> (integer)\n\nMaximumPartitionCount -> (integer)"
    },
    {
      "command_name": "describe-expressions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/describe-expressions.html",
      "command_description": "Description\n\nGets the expressions configured for the search domain. Can be limited to specific expressions by name. By default, shows all expressions and includes any pending changes to the configuration. Set the Deployed option to true to show the active configuration and exclude pending changes. For more information, see Configuring Expressions in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-expressions\n--domain-name <value>\n[--expression-names <value>]\n[--deployed | --no-deployed]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--expression-names <value>]",
        "[--deployed | --no-deployed]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nThe name of the domain you want to describe.\n\n--expression-names (list)\n\nLimits the `` DescribeExpressions`` response to the specified expressions. If not specified, all expressions are shown.\n\n(string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--deployed | --no-deployed (boolean)\n\nWhether to display the deployed configuration (true ) or include any pending changes (false ). Defaults to false .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nExpressions -> (list)\n\nThe expressions configured for the domain.\n\n(structure)\n\nThe value of an Expression and its current status.\n\nOptions -> (structure)\n\nThe expression that is evaluated for sorting while processing a search request.\n\nExpressionName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nExpressionValue -> (string)\n\nThe expression to evaluate for sorting while processing a search request. The Expression syntax is based on JavaScript expressions. For more information, see Configuring Expressions in the Amazon CloudSearch Developer Guide .\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "describe-index-fields",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/describe-index-fields.html",
      "command_description": "Description\n\nGets information about the index fields configured for the search domain. Can be limited to specific fields by name. By default, shows all fields and includes any pending changes to the configuration. Set the Deployed option to true to show the active configuration and exclude pending changes. For more information, see Getting Domain Information in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-index-fields\n--domain-name <value>\n[--field-names <value>]\n[--deployed | --no-deployed]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--field-names <value>]",
        "[--deployed | --no-deployed]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nThe name of the domain you want to describe.\n\n--field-names (list)\n\nA list of the index fields you want to describe. If not specified, information is returned for all configured index fields.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--deployed | --no-deployed (boolean)\n\nWhether to display the deployed configuration (true ) or include any pending changes (false ). Defaults to false .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nIndexFields -> (list)\n\nThe index fields configured for the domain.\n\n(structure)\n\nThe value of an IndexField and its current status.\n\nOptions -> (structure)\n\nConfiguration information for a field in the index, including its name, type, and options. The supported options depend on the `` IndexFieldType`` .\n\nIndexFieldName -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nIndexFieldType -> (string)\n\nThe type of field. The valid options for a field depend on the field type. For more information about the supported field types, see Configuring Index Fields in the Amazon CloudSearch Developer Guide .\n\nIntOptions -> (structure)\n\nOptions for a 64-bit signed integer field. Present if IndexFieldType specifies the field is of type int . All options are enabled by default.\n\nDefaultValue -> (long)\n\nA value to use for the field if the field isn’t specified for a document. This can be important if you are using the field in an expression and that field is not present in every document.\n\nSourceField -> (string)\n\nThe name of the source field to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nDoubleOptions -> (structure)\n\nOptions for a double-precision 64-bit floating point field. Present if IndexFieldType specifies the field is of type double . All options are enabled by default.\n\nDefaultValue -> (double)\n\nA value to use for the field if the field isn’t specified for a document. This can be important if you are using the field in an expression and that field is not present in every document.\n\nSourceField -> (string)\n\nThe name of the source field to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nLiteralOptions -> (structure)\n\nOptions for literal field. Present if IndexFieldType specifies the field is of type literal . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nTextOptions -> (structure)\n\nOptions for text field. Present if IndexFieldType specifies the field is of type text . A text field is always searchable. All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nHighlightEnabled -> (boolean)\n\nWhether highlights can be returned for the field.\n\nAnalysisScheme -> (string)\n\nThe name of an analysis scheme for a text field.\n\nDateOptions -> (structure)\n\nOptions for a date field. Dates and times are specified in UTC (Coordinated Universal Time) according to IETF RFC3339: yyyy-mm-ddT00:00:00Z. Present if IndexFieldType specifies the field is of type date . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nLatLonOptions -> (structure)\n\nOptions for a latlon field. A latlon field contains a location stored as a latitude and longitude value pair. Present if IndexFieldType specifies the field is of type latlon . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceField -> (string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id .\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nSortEnabled -> (boolean)\n\nWhether the field can be used to sort the search results.\n\nIntArrayOptions -> (structure)\n\nOptions for a field that contains an array of 64-bit signed integers. Present if IndexFieldType specifies the field is of type int-array . All options are enabled by default.\n\nDefaultValue -> (long)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nDoubleArrayOptions -> (structure)\n\nOptions for a field that contains an array of double-precision 64-bit floating point values. Present if IndexFieldType specifies the field is of type double-array . All options are enabled by default.\n\nDefaultValue -> (double)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nLiteralArrayOptions -> (structure)\n\nOptions for a field that contains an array of literal strings. Present if IndexFieldType specifies the field is of type literal-array . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nTextArrayOptions -> (structure)\n\nOptions for a field that contains an array of text strings. Present if IndexFieldType specifies the field is of type text-array . A text-array field is always searchable. All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nHighlightEnabled -> (boolean)\n\nWhether highlights can be returned for the field.\n\nAnalysisScheme -> (string)\n\nThe name of an analysis scheme for a text-array field.\n\nDateArrayOptions -> (structure)\n\nOptions for a field that contains an array of dates. Present if IndexFieldType specifies the field is of type date-array . All options are enabled by default.\n\nDefaultValue -> (string)\n\nA value to use for the field if the field isn’t specified for a document.\n\nSourceFields -> (string)\n\nA list of source fields to map to the field.\n\nFacetEnabled -> (boolean)\n\nWhether facet information can be returned for the field.\n\nSearchEnabled -> (boolean)\n\nWhether the contents of the field are searchable.\n\nReturnEnabled -> (boolean)\n\nWhether the contents of the field can be returned in the search results.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "describe-scaling-parameters",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/describe-scaling-parameters.html",
      "command_description": "Description\n\nGets the scaling parameters configured for a domain. A domain’s scaling parameters specify the desired search instance type and replication count. For more information, see Configuring Scaling Options in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-scaling-parameters\n--domain-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nScalingParameters -> (structure)\n\nThe status and configuration of a search domain’s scaling parameters.\n\nOptions -> (structure)\n\nThe desired instance type and desired number of replicas of each index partition.\n\nDesiredInstanceType -> (string)\n\nThe instance type that you want to preconfigure for your domain. For example, search.m1.small .\n\nDesiredReplicationCount -> (integer)\n\nThe number of replicas you want to preconfigure for each index partition.\n\nDesiredPartitionCount -> (integer)\n\nThe number of partitions you want to preconfigure for your domain. Only valid when you select m2.2xlarge as the desired instance type.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "describe-service-access-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/describe-service-access-policies.html",
      "command_description": "Description\n\nGets information about the access policies that control access to the domain’s document and search endpoints. By default, shows the configuration with any pending changes. Set the Deployed option to true to show the active configuration and exclude pending changes. For more information, see Configuring Access for a Search Domain in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-service-access-policies\n--domain-name <value>\n[--deployed | --no-deployed]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--deployed | --no-deployed]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nThe name of the domain you want to describe.\n\n--deployed | --no-deployed (boolean)\n\nWhether to display the deployed configuration (true ) or include any pending changes (false ). Defaults to false .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccessPolicies -> (structure)\n\nThe access rules configured for the domain specified in the request.\n\nOptions -> (string)\n\nAccess rules for a domain’s document or search service endpoints. For more information, see Configuring Access for a Search Domain in the Amazon CloudSearch Developer Guide . The maximum size of a policy document is 100 KB.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "describe-suggesters",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/describe-suggesters.html",
      "command_description": "Description\n\nGets the suggesters configured for a domain. A suggester enables you to display possible matches before users finish typing their queries. Can be limited to specific suggesters by name. By default, shows all suggesters and includes any pending changes to the configuration. Set the Deployed option to true to show the active configuration and exclude pending changes. For more information, see Getting Search Suggestions in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-suggesters\n--domain-name <value>\n[--suggester-names <value>]\n[--deployed | --no-deployed]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--suggester-names <value>]",
        "[--deployed | --no-deployed]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nThe name of the domain you want to describe.\n\n--suggester-names (list)\n\nThe suggesters you want to describe.\n\n(string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--deployed | --no-deployed (boolean)\n\nWhether to display the deployed configuration (true ) or include any pending changes (false ). Defaults to false .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSuggesters -> (list)\n\nThe suggesters configured for the domain specified in the request.\n\n(structure)\n\nThe value of a Suggester and its current status.\n\nOptions -> (structure)\n\nConfiguration information for a search suggester. Each suggester has a unique name and specifies the text field you want to use for suggestions. The following options can be configured for a suggester: FuzzyMatching , SortExpression .\n\nSuggesterName -> (string)\n\nNames must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).\n\nDocumentSuggesterOptions -> (structure)\n\nOptions for a search suggester.\n\nSourceField -> (string)\n\nThe name of the index field you want to use for suggestions.\n\nFuzzyMatching -> (string)\n\nThe level of fuzziness allowed when suggesting matches for a string: none , low , or high . With none, the specified string is treated as an exact prefix. With low, suggestions must differ from the specified string by no more than one character. With high, suggestions can differ by up to two characters. The default is none.\n\nSortExpression -> (string)\n\nAn expression that computes a score for each suggestion to control how they are sorted. The scores are rounded to the nearest integer, with a floor of 0 and a ceiling of 2^31-1. A document’s relevance score is not computed for suggestions, so sort expressions cannot reference the _score value. To sort suggestions using a numeric field or existing expression, simply specify the name of the field or expression. If no expression is configured for the suggester, the suggestions are sorted with the closest matches listed first.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "index-documents",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/index-documents.html",
      "command_description": "Description\n\nTells the search domain to start indexing its documents using the latest indexing options. This operation must be invoked to activate options whose OptionStatus is RequiresIndexDocuments .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  index-documents\n--domain-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldNames -> (list)\n\nThe names of the fields that are currently being indexed.\n\n(string)\n\nA string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field’s name defines a pattern that begins or ends with a wildcard. Any document fields that don’t map to a regular index field but do match a dynamic field’s pattern are configured with the dynamic field’s indexing options.\n\nRegular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported.\n\nThe name score is reserved and cannot be used as a field name. To reference a document’s ID, you can use the name _id ."
    },
    {
      "command_name": "list-domain-names",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/list-domain-names.html",
      "command_description": "Description\n\nLists all search domains owned by an account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-domain-names\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDomainNames -> (map)\n\nThe names of the search domains owned by an account.\n\nkey -> (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\nvalue -> (string)\n\nThe Amazon CloudSearch API version for a domain: 2011-02-01 or 2013-01-01."
    },
    {
      "command_name": "update-availability-options",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/update-availability-options.html",
      "command_description": "Description\n\nConfigures the availability options for a domain. Enabling the Multi-AZ option expands an Amazon CloudSearch domain to an additional Availability Zone in the same Region to increase fault tolerance in the event of a service disruption. Changes to the Multi-AZ option can take about half an hour to become active. For more information, see Configuring Availability Options in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-availability-options\n--domain-name <value>\n--multi-az | --no-multi-az\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--multi-az | --no-multi-az",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--multi-az | --no-multi-az (boolean)\n\nYou expand an existing search domain to a second Availability Zone by setting the Multi-AZ option to true. Similarly, you can turn off the Multi-AZ option to downgrade the domain to a single Availability Zone by setting the Multi-AZ option to false .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAvailabilityOptions -> (structure)\n\nThe newly-configured availability options. Indicates whether Multi-AZ is enabled for the domain.\n\nOptions -> (boolean)\n\nThe availability options configured for the domain.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "update-domain-endpoint-options",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/update-domain-endpoint-options.html",
      "command_description": "Description\n\nUpdates the domain’s endpoint options, specifically whether all requests to the domain must arrive over HTTPS. For more information, see Configuring Domain Endpoint Options in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-domain-endpoint-options\n--domain-name <value>\n--domain-endpoint-options <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--domain-endpoint-options <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain.\n\n--domain-endpoint-options (structure)\n\nWhether to require that all requests to the domain arrive over HTTPS. We recommend Policy-Min-TLS-1-2-2019-07 for TLSSecurityPolicy. For compatibility with older clients, the default is Policy-Min-TLS-1-0-2019-07.\n\nEnforceHTTPS -> (boolean)\n\nWhether the domain is HTTPS only enabled.\n\nTLSSecurityPolicy -> (string)\n\nThe minimum required TLS version\n\nShorthand Syntax:\n\nEnforceHTTPS=boolean,TLSSecurityPolicy=string\n\n\nJSON Syntax:\n\n{\n  \"EnforceHTTPS\": true|false,\n  \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"|\"Policy-Min-TLS-1-2-2019-07\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDomainEndpointOptions -> (structure)\n\nThe newly-configured domain endpoint options.\n\nOptions -> (structure)\n\nThe domain endpoint options configured for the domain.\n\nEnforceHTTPS -> (boolean)\n\nWhether the domain is HTTPS only enabled.\n\nTLSSecurityPolicy -> (string)\n\nThe minimum required TLS version\n\nStatus -> (structure)\n\nThe status of the configured domain endpoint options.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "update-scaling-parameters",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/update-scaling-parameters.html",
      "command_description": "Description\n\nConfigures scaling parameters for a domain. A domain’s scaling parameters specify the desired search instance type and replication count. Amazon CloudSearch will still automatically scale your domain based on the volume of data and traffic, but not below the desired instance type and replication count. If the Multi-AZ option is enabled, these values control the resources used per Availability Zone. For more information, see Configuring Scaling Options in the Amazon CloudSearch Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-scaling-parameters\n--domain-name <value>\n--scaling-parameters <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--scaling-parameters <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--scaling-parameters (structure)\n\nThe desired instance type and desired number of replicas of each index partition.\n\nDesiredInstanceType -> (string)\n\nThe instance type that you want to preconfigure for your domain. For example, search.m1.small .\n\nDesiredReplicationCount -> (integer)\n\nThe number of replicas you want to preconfigure for each index partition.\n\nDesiredPartitionCount -> (integer)\n\nThe number of partitions you want to preconfigure for your domain. Only valid when you select m2.2xlarge as the desired instance type.\n\nShorthand Syntax:\n\nDesiredInstanceType=string,DesiredReplicationCount=integer,DesiredPartitionCount=integer\n\n\nJSON Syntax:\n\n{\n  \"DesiredInstanceType\": \"search.m1.small\"|\"search.m1.large\"|\"search.m2.xlarge\"|\"search.m2.2xlarge\"|\"search.m3.medium\"|\"search.m3.large\"|\"search.m3.xlarge\"|\"search.m3.2xlarge\"|\"search.small\"|\"search.medium\"|\"search.large\"|\"search.xlarge\"|\"search.2xlarge\"|\"search.previousgeneration.small\"|\"search.previousgeneration.large\"|\"search.previousgeneration.xlarge\"|\"search.previousgeneration.2xlarge\",\n  \"DesiredReplicationCount\": integer,\n  \"DesiredPartitionCount\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nScalingParameters -> (structure)\n\nThe status and configuration of a search domain’s scaling parameters.\n\nOptions -> (structure)\n\nThe desired instance type and desired number of replicas of each index partition.\n\nDesiredInstanceType -> (string)\n\nThe instance type that you want to preconfigure for your domain. For example, search.m1.small .\n\nDesiredReplicationCount -> (integer)\n\nThe number of replicas you want to preconfigure for each index partition.\n\nDesiredPartitionCount -> (integer)\n\nThe number of partitions you want to preconfigure for your domain. Only valid when you select m2.2xlarge as the desired instance type.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    },
    {
      "command_name": "update-service-access-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudsearch/update-service-access-policies.html",
      "command_description": "Description\n\nConfigures the access rules that control access to the domain’s document and search endpoints. For more information, see Configuring Access for an Amazon CloudSearch Domain .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-service-access-policies\n--domain-name <value>\n--access-policies <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--access-policies <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string)\n\nA string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).\n\n--access-policies (string)\n\nThe access rules you want to configure. These rules replace any existing rules.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccessPolicies -> (structure)\n\nThe access rules configured for the domain.\n\nOptions -> (string)\n\nAccess rules for a domain’s document or search service endpoints. For more information, see Configuring Access for a Search Domain in the Amazon CloudSearch Developer Guide . The maximum size of a policy document is 100 KB.\n\nStatus -> (structure)\n\nThe status of domain configuration option.\n\nCreationDate -> (timestamp)\n\nA timestamp for when this option was created.\n\nUpdateDate -> (timestamp)\n\nA timestamp for when this option was last updated.\n\nUpdateVersion -> (integer)\n\nA unique integer that indicates when this option was last updated.\n\nState -> (string)\n\nThe state of processing a change to an option. Possible values:\n\nRequiresIndexDocuments : the option’s latest value will not be deployed until IndexDocuments has been called and indexing is complete.\n\nProcessing : the option’s latest value is in the process of being activated.\n\nActive : the option’s latest value is completely deployed.\n\nFailedToValidate : the option value is not compatible with the domain’s data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.\n\nPendingDeletion -> (boolean)\n\nIndicates that the option will be deleted once processing is complete."
    }
  ],
  "service_description": "Description\n\nYou use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.\n\nThe endpoint for configuration service requests is region-specific: cloudsearch.*region* .amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see Regions and Endpoints ."
}