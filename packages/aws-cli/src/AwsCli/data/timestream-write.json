{
  "service_name": "timestream-write",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/index.html",
  "service_commands": [
    {
      "command_name": "create-database",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/create-database.html",
      "command_description": "Description\n\nCreates a new Timestream database. If the KMS key is not specified, the database will be encrypted with a Timestream managed KMS key located in your account. Refer to AWS managed KMS keys for more info. Service quotas apply. For more information, see Access Management in the Timestream Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-database\n--database-name <value>\n[--kms-key-id <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--database-name <value>",
        "[--kms-key-id <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--database-name (string)\n\nThe name of the Timestream database.\n\n--kms-key-id (string)\n\nThe KMS key for the database. If the KMS key is not specified, the database will be encrypted with a Timestream managed KMS key located in your account. Refer to AWS managed KMS keys for more info.\n\n--tags (list)\n\nA list of key-value pairs to label the table.\n\n(structure)\n\nA tag is a label that you assign to a Timestream database and/or table. Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize databases and/or tables, for example, by purpose, owner, or environment.\n\nKey -> (string)\n\nThe key of the tag. Tag keys are case sensitive.\n\nValue -> (string)\n\nThe value of the tag. Tag values are case-sensitive and can be null.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatabase -> (structure)\n\nThe newly created Timestream database.\n\nArn -> (string)\n\nThe Amazon Resource Name that uniquely identifies this database.\n\nDatabaseName -> (string)\n\nThe name of the Timestream database.\n\nTableCount -> (long)\n\nThe total number of tables found within a Timestream database.\n\nKmsKeyId -> (string)\n\nThe identifier of the KMS key used to encrypt the data stored in the database.\n\nCreationTime -> (timestamp)\n\nThe time when the database was created, calculated from the Unix epoch time.\n\nLastUpdatedTime -> (timestamp)\n\nThe last time that this database was updated."
    },
    {
      "command_name": "create-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/create-table.html",
      "command_description": "Description\n\nThe CreateTable operation adds a new table to an existing database in your account. In an AWS account, table names must be at least unique within each Region if they are in the same database. You may have identical table names in the same Region if the tables are in seperate databases. While creating the table, you must specify the table name, database name, and the retention properties. Service quotas apply. For more information, see Access Management in the Timestream Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-table\n--database-name <value>\n--table-name <value>\n[--retention-properties <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--database-name <value>",
        "--table-name <value>",
        "[--retention-properties <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--database-name (string)\n\nThe name of the Timestream database.\n\n--table-name (string)\n\nThe name of the Timestream table.\n\n--retention-properties (structure)\n\nThe duration for which your time series data must be stored in the memory store and the magnetic store.\n\nMemoryStoreRetentionPeriodInHours -> (long)\n\nThe duration for which data must be stored in the memory store.\n\nMagneticStoreRetentionPeriodInDays -> (long)\n\nThe duration for which data must be stored in the magnetic store.\n\nShorthand Syntax:\n\nMemoryStoreRetentionPeriodInHours=long,MagneticStoreRetentionPeriodInDays=long\n\n\nJSON Syntax:\n\n{\n  \"MemoryStoreRetentionPeriodInHours\": long,\n  \"MagneticStoreRetentionPeriodInDays\": long\n}\n\n\n--tags (list)\n\nA list of key-value pairs to label the table.\n\n(structure)\n\nA tag is a label that you assign to a Timestream database and/or table. Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize databases and/or tables, for example, by purpose, owner, or environment.\n\nKey -> (string)\n\nThe key of the tag. Tag keys are case sensitive.\n\nValue -> (string)\n\nThe value of the tag. Tag values are case-sensitive and can be null.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTable -> (structure)\n\nThe newly created Timestream table.\n\nArn -> (string)\n\nThe Amazon Resource Name that uniquely identifies this table.\n\nTableName -> (string)\n\nThe name of the Timestream table.\n\nDatabaseName -> (string)\n\nThe name of the Timestream database that contains this table.\n\nTableStatus -> (string)\n\nThe current state of the table:\n\nDELETING - The table is being deleted.\n\nACTIVE - The table is ready for use.\n\nRetentionProperties -> (structure)\n\nThe retention duration for the memory store and magnetic store.\n\nMemoryStoreRetentionPeriodInHours -> (long)\n\nThe duration for which data must be stored in the memory store.\n\nMagneticStoreRetentionPeriodInDays -> (long)\n\nThe duration for which data must be stored in the magnetic store.\n\nCreationTime -> (timestamp)\n\nThe time when the Timestream table was created.\n\nLastUpdatedTime -> (timestamp)\n\nThe time when the Timestream table was last updated."
    },
    {
      "command_name": "delete-database",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/delete-database.html",
      "command_description": "Description\n\nDeletes a given Timestream database. This is an irreversible operation. After a database is deleted, the time series data from its tables cannot be recovered.\n\nAll tables in the database must be deleted first, or a ValidationException error will be thrown.\n\nDue to the nature of distributed retries, the operation can return either success or a ResourceNotFoundException. Clients should consider them equivalent.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-database\n--database-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--database-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--database-name (string)\n\nThe name of the Timestream database to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/delete-table.html",
      "command_description": "Description\n\nDeletes a given Timestream table. This is an irreversible operation. After a Timestream database table is deleted, the time series data stored in the table cannot be recovered.\n\nDue to the nature of distributed retries, the operation can return either success or a ResourceNotFoundException. Clients should consider them equivalent.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-table\n--database-name <value>\n--table-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--database-name <value>",
        "--table-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--database-name (string)\n\nThe name of the database where the Timestream database is to be deleted.\n\n--table-name (string)\n\nThe name of the Timestream table to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-database",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/describe-database.html",
      "command_description": "Description\n\nReturns information about the database, including the database name, time that the database was created, and the total number of tables found within the database. Service quotas apply. For more information, see Access Management in the Timestream Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-database\n--database-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--database-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--database-name (string)\n\nThe name of the Timestream database.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatabase -> (structure)\n\nThe name of the Timestream table.\n\nArn -> (string)\n\nThe Amazon Resource Name that uniquely identifies this database.\n\nDatabaseName -> (string)\n\nThe name of the Timestream database.\n\nTableCount -> (long)\n\nThe total number of tables found within a Timestream database.\n\nKmsKeyId -> (string)\n\nThe identifier of the KMS key used to encrypt the data stored in the database.\n\nCreationTime -> (timestamp)\n\nThe time when the database was created, calculated from the Unix epoch time.\n\nLastUpdatedTime -> (timestamp)\n\nThe last time that this database was updated."
    },
    {
      "command_name": "describe-endpoints",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/describe-endpoints.html",
      "command_description": "Description\n\nDescribeEndpoints returns a list of available endpoints to make Timestream API calls against. This API is available through both Write and Query.\n\nBecause Timestream’s SDKs are designed to transparently work with the service’s architecture, including the management and mapping of the service endpoints, it is not recommended that you use this API unless :\n\nYour application uses a programming language that does not yet have SDK support\n\nYou require better control over the client-side implementation\n\nFor detailed information on how to use DescribeEndpoints, see The Endpoint Discovery Pattern and REST APIs .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-endpoints\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEndpoints -> (list)\n\nAn Endpoints object is returned when a DescribeEndpoints request is made.\n\n(structure)\n\nRepresents an available endpoint against which to make API calls agaisnt, as well as the TTL for that endpoint.\n\nAddress -> (string)\n\nAn endpoint address.\n\nCachePeriodInMinutes -> (long)\n\nThe TTL for the endpoint, in minutes."
    },
    {
      "command_name": "describe-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/describe-table.html",
      "command_description": "Description\n\nReturns information about the table, including the table name, database name, retention duration of the memory store and the magnetic store. Service quotas apply. For more information, see Access Management in the Timestream Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-table\n--database-name <value>\n--table-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--database-name <value>",
        "--table-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--database-name (string)\n\nThe name of the Timestream database.\n\n--table-name (string)\n\nThe name of the Timestream table.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTable -> (structure)\n\nThe Timestream table.\n\nArn -> (string)\n\nThe Amazon Resource Name that uniquely identifies this table.\n\nTableName -> (string)\n\nThe name of the Timestream table.\n\nDatabaseName -> (string)\n\nThe name of the Timestream database that contains this table.\n\nTableStatus -> (string)\n\nThe current state of the table:\n\nDELETING - The table is being deleted.\n\nACTIVE - The table is ready for use.\n\nRetentionProperties -> (structure)\n\nThe retention duration for the memory store and magnetic store.\n\nMemoryStoreRetentionPeriodInHours -> (long)\n\nThe duration for which data must be stored in the memory store.\n\nMagneticStoreRetentionPeriodInDays -> (long)\n\nThe duration for which data must be stored in the magnetic store.\n\nCreationTime -> (timestamp)\n\nThe time when the Timestream table was created.\n\nLastUpdatedTime -> (timestamp)\n\nThe time when the Timestream table was last updated."
    },
    {
      "command_name": "list-databases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/list-databases.html",
      "command_description": "Description\n\nReturns a list of your Timestream databases. Service quotas apply. For more information, see Access Management in the Timestream Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-databases\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nThe pagination token. To resume pagination, provide the NextToken value as argument of a subsequent API invocation.\n\n--max-results (integer)\n\nThe total number of items to return in the output. If the total number of items available is more than the value specified, a NextToken is provided in the output. To resume pagination, provide the NextToken value as argument of a subsequent API invocation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatabases -> (list)\n\nA list of database names.\n\n(structure)\n\nA top level container for a table. Databases and tables are the fundamental management concepts in Amazon Timestream. All tables in a database are encrypted with the same KMS key.\n\nArn -> (string)\n\nThe Amazon Resource Name that uniquely identifies this database.\n\nDatabaseName -> (string)\n\nThe name of the Timestream database.\n\nTableCount -> (long)\n\nThe total number of tables found within a Timestream database.\n\nKmsKeyId -> (string)\n\nThe identifier of the KMS key used to encrypt the data stored in the database.\n\nCreationTime -> (timestamp)\n\nThe time when the database was created, calculated from the Unix epoch time.\n\nLastUpdatedTime -> (timestamp)\n\nThe last time that this database was updated.\n\nNextToken -> (string)\n\nThe pagination token. This parameter is returned when the response is truncated."
    },
    {
      "command_name": "list-tables",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/list-tables.html",
      "command_description": "Description\n\nA list of tables, along with the name, status and retention properties of each table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tables\n[--database-name <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--database-name <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--database-name (string)\n\nThe name of the Timestream database.\n\n--next-token (string)\n\nThe pagination token. To resume pagination, provide the NextToken value as argument of a subsequent API invocation.\n\n--max-results (integer)\n\nThe total number of items to return in the output. If the total number of items available is more than the value specified, a NextToken is provided in the output. To resume pagination, provide the NextToken value as argument of a subsequent API invocation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTables -> (list)\n\nA list of tables.\n\n(structure)\n\nTable represents a database table in Timestream. Tables contain one or more related time series. You can modify the retention duration of the memory store and the magnetic store for a table.\n\nArn -> (string)\n\nThe Amazon Resource Name that uniquely identifies this table.\n\nTableName -> (string)\n\nThe name of the Timestream table.\n\nDatabaseName -> (string)\n\nThe name of the Timestream database that contains this table.\n\nTableStatus -> (string)\n\nThe current state of the table:\n\nDELETING - The table is being deleted.\n\nACTIVE - The table is ready for use.\n\nRetentionProperties -> (structure)\n\nThe retention duration for the memory store and magnetic store.\n\nMemoryStoreRetentionPeriodInHours -> (long)\n\nThe duration for which data must be stored in the memory store.\n\nMagneticStoreRetentionPeriodInDays -> (long)\n\nThe duration for which data must be stored in the magnetic store.\n\nCreationTime -> (timestamp)\n\nThe time when the Timestream table was created.\n\nLastUpdatedTime -> (timestamp)\n\nThe time when the Timestream table was last updated.\n\nNextToken -> (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/list-tags-for-resource.html",
      "command_description": "Description\n\nList all tags on a Timestream resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Timestream resource with tags to be listed. This value is an Amazon Resource Name (ARN).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe tags currently associated with the Timestream resource.\n\n(structure)\n\nA tag is a label that you assign to a Timestream database and/or table. Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize databases and/or tables, for example, by purpose, owner, or environment.\n\nKey -> (string)\n\nThe key of the tag. Tag keys are case sensitive.\n\nValue -> (string)\n\nThe value of the tag. Tag values are case-sensitive and can be null."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/tag-resource.html",
      "command_description": "Description\n\nAssociate a set of tags with a Timestream resource. You can then activate these user-defined tags so that they appear on the Billing and Cost Management console for cost allocation tracking.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nIdentifies the Timestream resource to which tags should be added. This value is an Amazon Resource Name (ARN).\n\n--tags (list)\n\nThe tags to be assigned to the Timestream resource.\n\n(structure)\n\nA tag is a label that you assign to a Timestream database and/or table. Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize databases and/or tables, for example, by purpose, owner, or environment.\n\nKey -> (string)\n\nThe key of the tag. Tag keys are case sensitive.\n\nValue -> (string)\n\nThe value of the tag. Tag values are case-sensitive and can be null.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/untag-resource.html",
      "command_description": "Description\n\nRemoves the association of tags from a Timestream resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Timestream resource that the tags will be removed from. This value is an Amazon Resource Name (ARN).\n\n--tag-keys (list)\n\nA list of tags keys. Existing tags of the resource whose keys are members of this list will be removed from the Timestream resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-database",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/update-database.html",
      "command_description": "Description\n\nModifies the KMS key for an existing database. While updating the database, you must specify the database name and the identifier of the new KMS key to be used (KmsKeyId ). If there are any concurrent UpdateDatabase requests, first writer wins.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-database\n--database-name <value>\n--kms-key-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--database-name <value>",
        "--kms-key-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--database-name (string)\n\nThe name of the database.\n\n--kms-key-id (string)\n\nThe identifier of the new KMS key (KmsKeyId ) to be used to encrypt the data stored in the database. If the KmsKeyId currently registered with the database is the same as the KmsKeyId in the request, there will not be any update.\n\nYou can specify the KmsKeyId using any of the following:\n\nKey ID: 1234abcd-12ab-34cd-56ef-1234567890ab\n\nKey ARN: arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\n\nAlias name: alias/ExampleAlias\n\nAlias ARN: arn:aws:kms:us-east-1:111122223333:alias/ExampleAlias\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatabase -> (structure)\n\nA top level container for a table. Databases and tables are the fundamental management concepts in Amazon Timestream. All tables in a database are encrypted with the same KMS key.\n\nArn -> (string)\n\nThe Amazon Resource Name that uniquely identifies this database.\n\nDatabaseName -> (string)\n\nThe name of the Timestream database.\n\nTableCount -> (long)\n\nThe total number of tables found within a Timestream database.\n\nKmsKeyId -> (string)\n\nThe identifier of the KMS key used to encrypt the data stored in the database.\n\nCreationTime -> (timestamp)\n\nThe time when the database was created, calculated from the Unix epoch time.\n\nLastUpdatedTime -> (timestamp)\n\nThe last time that this database was updated."
    },
    {
      "command_name": "update-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/update-table.html",
      "command_description": "Description\n\nModifies the retention duration of the memory store and magnetic store for your Timestream table. Note that the change in retention duration takes effect immediately. For example, if the retention period of the memory store was initially set to 2 hours and then changed to 24 hours, the memory store will be capable of holding 24 hours of data, but will be populated with 24 hours of data 22 hours after this change was made. Timestream does not retrieve data from the magnetic store to populate the memory store.\n\nService quotas apply. For more information, see Access Management in the Timestream Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-table\n--database-name <value>\n--table-name <value>\n--retention-properties <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--database-name <value>",
        "--table-name <value>",
        "--retention-properties <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--database-name (string)\n\nThe name of the Timestream database.\n\n--table-name (string)\n\nThe name of the Timesream table.\n\n--retention-properties (structure)\n\nThe retention duration of the memory store and the magnetic store.\n\nMemoryStoreRetentionPeriodInHours -> (long)\n\nThe duration for which data must be stored in the memory store.\n\nMagneticStoreRetentionPeriodInDays -> (long)\n\nThe duration for which data must be stored in the magnetic store.\n\nShorthand Syntax:\n\nMemoryStoreRetentionPeriodInHours=long,MagneticStoreRetentionPeriodInDays=long\n\n\nJSON Syntax:\n\n{\n  \"MemoryStoreRetentionPeriodInHours\": long,\n  \"MagneticStoreRetentionPeriodInDays\": long\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTable -> (structure)\n\nThe updated Timestream table.\n\nArn -> (string)\n\nThe Amazon Resource Name that uniquely identifies this table.\n\nTableName -> (string)\n\nThe name of the Timestream table.\n\nDatabaseName -> (string)\n\nThe name of the Timestream database that contains this table.\n\nTableStatus -> (string)\n\nThe current state of the table:\n\nDELETING - The table is being deleted.\n\nACTIVE - The table is ready for use.\n\nRetentionProperties -> (structure)\n\nThe retention duration for the memory store and magnetic store.\n\nMemoryStoreRetentionPeriodInHours -> (long)\n\nThe duration for which data must be stored in the memory store.\n\nMagneticStoreRetentionPeriodInDays -> (long)\n\nThe duration for which data must be stored in the magnetic store.\n\nCreationTime -> (timestamp)\n\nThe time when the Timestream table was created.\n\nLastUpdatedTime -> (timestamp)\n\nThe time when the Timestream table was last updated."
    },
    {
      "command_name": "write-records",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-write/write-records.html",
      "command_description": "Description\n\nThe WriteRecords operation enables you to write your time series data into Timestream. You can specify a single data point or a batch of data points to be inserted into the system. Timestream offers you with a flexible schema that auto detects the column names and data types for your Timestream tables based on the dimension names and data types of the data points you specify when invoking writes into the database. Timestream support eventual consistency read semantics. This means that when you query data immediately after writing a batch of data into Timestream, the query results might not reflect the results of a recently completed write operation. The results may also include some stale data. If you repeat the query request after a short time, the results should return the latest data. Service quotas apply. For more information, see Access Management in the Timestream Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  write-records\n--database-name <value>\n--table-name <value>\n[--common-attributes <value>]\n--records <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--database-name <value>",
        "--table-name <value>",
        "[--common-attributes <value>]",
        "--records <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--database-name (string)\n\nThe name of the Timestream database.\n\n--table-name (string)\n\nThe name of the Timesream table.\n\n--common-attributes (structure)\n\nA record containing the common measure and dimension attributes shared across all the records in the request. The measure and dimension attributes specified in here will be merged with the measure and dimension attributes in the records object when the data is written into Timestream.\n\nDimensions -> (list)\n\nContains the list of dimensions for time series data points.\n\n(structure)\n\nDimension represents the meta data attributes of the time series. For example, the name and availability zone of an EC2 instance or the name of the manufacturer of a wind turbine are dimensions.\n\nName -> (string)\n\nDimension represents the meta data attributes of the time series. For example, the name and availability zone of an EC2 instance or the name of the manufacturer of a wind turbine are dimensions.\n\nFor constraints on Dimension names, see Naming Constraints .\n\nValue -> (string)\n\nThe value of the dimension.\n\nDimensionValueType -> (string)\n\nThe data type of the dimension for the time series data point.\n\nMeasureName -> (string)\n\nMeasure represents the data attribute of the time series. For example, the CPU utilization of an EC2 instance or the RPM of a wind turbine are measures.\n\nMeasureValue -> (string)\n\nContains the measure value for the time series data point.\n\nMeasureValueType -> (string)\n\nContains the data type of the measure value for the time series data point.\n\nTime -> (string)\n\nContains the time at which the measure value for the data point was collected. The time value plus the unit provides the time elapsed since the epoch. For example, if the time value is 12345 and the unit is ms , then 12345 ms have elapsed since the epoch.\n\nTimeUnit -> (string)\n\nThe granularity of the timestamp unit. It indicates if the time value is in seconds, milliseconds, nanoseconds or other supported values.\n\nVersion -> (long)\n\n64-bit attribute used for record updates. Write requests for duplicate data with a higher version number will update the existing measure value and version. In cases where the measure value is the same, Version will still be updated . Default value is to 1.\n\nShorthand Syntax:\n\nDimensions=[{Name=string,Value=string,DimensionValueType=string},{Name=string,Value=string,DimensionValueType=string}],MeasureName=string,MeasureValue=string,MeasureValueType=string,Time=string,TimeUnit=string,Version=long\n\n\nJSON Syntax:\n\n{\n  \"Dimensions\": [\n    {\n      \"Name\": \"string\",\n      \"Value\": \"string\",\n      \"DimensionValueType\": \"VARCHAR\"\n    }\n    ...\n  ],\n  \"MeasureName\": \"string\",\n  \"MeasureValue\": \"string\",\n  \"MeasureValueType\": \"DOUBLE\"|\"BIGINT\"|\"VARCHAR\"|\"BOOLEAN\",\n  \"Time\": \"string\",\n  \"TimeUnit\": \"MILLISECONDS\"|\"SECONDS\"|\"MICROSECONDS\"|\"NANOSECONDS\",\n  \"Version\": long\n}\n\n\n--records (list)\n\nAn array of records containing the unique dimension and measure attributes for each time series data point.\n\n(structure)\n\nRecord represents a time series data point being written into Timestream. Each record contains an array of dimensions. Dimensions represent the meta data attributes of a time series data point such as the instance name or availability zone of an EC2 instance. A record also contains the measure name which is the name of the measure being collected for example the CPU utilization of an EC2 instance. A record also contains the measure value and the value type which is the data type of the measure value. In addition, the record contains the timestamp when the measure was collected that the timestamp unit which represents the granularity of the timestamp.\n\nDimensions -> (list)\n\nContains the list of dimensions for time series data points.\n\n(structure)\n\nDimension represents the meta data attributes of the time series. For example, the name and availability zone of an EC2 instance or the name of the manufacturer of a wind turbine are dimensions.\n\nName -> (string)\n\nDimension represents the meta data attributes of the time series. For example, the name and availability zone of an EC2 instance or the name of the manufacturer of a wind turbine are dimensions.\n\nFor constraints on Dimension names, see Naming Constraints .\n\nValue -> (string)\n\nThe value of the dimension.\n\nDimensionValueType -> (string)\n\nThe data type of the dimension for the time series data point.\n\nMeasureName -> (string)\n\nMeasure represents the data attribute of the time series. For example, the CPU utilization of an EC2 instance or the RPM of a wind turbine are measures.\n\nMeasureValue -> (string)\n\nContains the measure value for the time series data point.\n\nMeasureValueType -> (string)\n\nContains the data type of the measure value for the time series data point.\n\nTime -> (string)\n\nContains the time at which the measure value for the data point was collected. The time value plus the unit provides the time elapsed since the epoch. For example, if the time value is 12345 and the unit is ms , then 12345 ms have elapsed since the epoch.\n\nTimeUnit -> (string)\n\nThe granularity of the timestamp unit. It indicates if the time value is in seconds, milliseconds, nanoseconds or other supported values.\n\nVersion -> (long)\n\n64-bit attribute used for record updates. Write requests for duplicate data with a higher version number will update the existing measure value and version. In cases where the measure value is the same, Version will still be updated . Default value is to 1.\n\nShorthand Syntax:\n\nDimensions=[{Name=string,Value=string,DimensionValueType=string},{Name=string,Value=string,DimensionValueType=string}],MeasureName=string,MeasureValue=string,MeasureValueType=string,Time=string,TimeUnit=string,Version=long ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Dimensions\": [\n      {\n        \"Name\": \"string\",\n        \"Value\": \"string\",\n        \"DimensionValueType\": \"VARCHAR\"\n      }\n      ...\n    ],\n    \"MeasureName\": \"string\",\n    \"MeasureValue\": \"string\",\n    \"MeasureValueType\": \"DOUBLE\"|\"BIGINT\"|\"VARCHAR\"|\"BOOLEAN\",\n    \"Time\": \"string\",\n    \"TimeUnit\": \"MILLISECONDS\"|\"SECONDS\"|\"MICROSECONDS\"|\"NANOSECONDS\",\n    \"Version\": long\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    }
  ],
  "service_description": "Description\n\nAmazon Timestream is a fast, scalable, fully managed time series database service that makes it easy to store and analyze trillions of time series data points per day. With Timestream, you can easily store and analyze IoT sensor data to derive insights from your IoT applications. You can analyze industrial telemetry to streamline equipment management and maintenance. You can also store and analyze log data and metrics to improve the performance and availability of your applications. Timestream is built from the ground up to effectively ingest, process, and store time series data. It organizes data to optimize query processing. It automatically scales based on the volume of data ingested and on the query volume to ensure you receive optimal performance while inserting and querying data. As your data grows over time, Timestream’s adaptive query processing engine spans across storage tiers to provide fast analysis while reducing costs."
}