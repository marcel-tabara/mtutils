{
  "service_name": "route53-recovery-cluster",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-cluster/index.html",
  "service_commands": [
    {
      "command_name": "get-routing-control-state",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-cluster/get-routing-control-state.html",
      "command_description": "Description\n\nGet the state for a routing control. A routing control is a simple on/off switch that you can use to route traffic to cells. When the state is On, traffic flows to a cell. When it’s off, traffic does not flow.\n\nBefore you can create a routing control, you first must create a cluster to host the control. For more information, see CreateCluster . Access one of the endpoints for the cluster to get or update the routing control state to redirect traffic.\n\nFor more information about working with routing controls, see Routing control in the Route 53 Application Recovery Controller Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-routing-control-state\n--routing-control-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--routing-control-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--routing-control-arn (string)\n\nThe Amazon Resource Number (ARN) for the routing control that you want to get the state for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Number (ARN) of the response.\n\nRoutingControlState -> (string)\n\nThe state of the routing control."
    },
    {
      "command_name": "update-routing-control-state",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-cluster/update-routing-control-state.html",
      "command_description": "Description\n\nSet the state of the routing control to reroute traffic. You can set the value to be On or Off. When the state is On, traffic flows to a cell. When it’s off, traffic does not flow.\n\nFor more information about working with routing controls, see Routing control in the Route 53 Application Recovery Controller Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-routing-control-state\n--routing-control-arn <value>\n--routing-control-state <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--routing-control-arn <value>",
        "--routing-control-state <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--routing-control-arn (string)\n\nThe Amazon Resource Number (ARN) for the routing control that you want to update the state for.\n\n--routing-control-state (string)\n\nThe state of the routing control. You can set the value to be On or Off.\n\nPossible values:\n\nOn\n\nOff\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-routing-control-states",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-cluster/update-routing-control-states.html",
      "command_description": "Description\n\nSet multiple routing control states. You can set the value for each state to be On or Off. When the state is On, traffic flows to a cell. When it’s off, traffic does not flow.\n\nFor more information about working with routing controls, see Routing control in the Route 53 Application Recovery Controller Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-routing-control-states\n--update-routing-control-state-entries <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--update-routing-control-state-entries <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--update-routing-control-state-entries (list)\n\nA set of routing control entries that you want to update.\n\n(structure)\n\nA routing control state.\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Number (ARN) for the routing control state entry.\n\nRoutingControlState -> (string)\n\nThe routing control state in a set of routing control state entries.\n\nShorthand Syntax:\n\nRoutingControlArn=string,RoutingControlState=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"RoutingControlArn\": \"string\",\n    \"RoutingControlState\": \"On\"|\"Off\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    }
  ],
  "service_description": "Description\n\nWelcome to the Amazon Route 53 Application Recovery Controller API Reference Guide for Recovery Control Data Plane .\n\nRecovery control in Route 53 Application Recovery Controller includes extremely reliable routing controls that enable you to recover applications by rerouting traffic, for example, across Availability Zones or AWS Regions. Routing controls are simple on/off switches hosted on a cluster. A cluster is a set of five redundant regional endpoints against which you can execute API calls to update or get the state of routing controls. You use routing controls to failover traffic to recover your application across Availability Zones or Regions.\n\nThis API guide includes information about how to get and update routing control states in Route 53 Application Recovery Controller.\n\nFor more information about Route 53 Application Recovery Controller, see the following:\n\nYou can create clusters, routing controls, and control panels by using the control plane API for Recovery Control. For more information, see Amazon Route 53 Application Recovery Controller Recovery Control API Reference .\n\nRoute 53 Application Recovery Controller also provides continuous readiness checks to ensure that your applications are scaled to handle failover traffic. For more information about the related API actions, see Amazon Route 53 Application Recovery Controller Recovery Readiness API Reference .\n\nFor more information about creating resilient applications and preparing for recovery readiness with Route 53 Application Recovery Controller, see the Amazon Route 53 Application Recovery Controller Developer Guide ."
}