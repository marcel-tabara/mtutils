{
  "service_name": "polly",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/polly/index.html",
  "service_commands": [
    {
      "command_name": "delete-lexicon",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/polly/delete-lexicon.html",
      "command_description": "Description\n\nDeletes the specified pronunciation lexicon stored in an Amazon Web Services Region. A lexicon which has been deleted is not available for speech synthesis, nor is it possible to retrieve it using either the GetLexicon or ListLexicon APIs.\n\nFor more information, see Managing Lexicons .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-lexicon\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the lexicon to delete. Must be an existing lexicon in the region.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a lexicon\n\nThe following delete-lexicon example deletes the specified lexicon.\n\naws polly delete-lexicon \\\n    --name w3c\n\n\nThis command produces no output.\n\nFor more information, see Using the DeleteLexicon operation in the Amazon Polly Developer Guide."
    },
    {
      "command_name": "describe-voices",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/polly/describe-voices.html",
      "command_description": "Description\n\nReturns the list of voices that are available for use when requesting speech synthesis. Each voice speaks a specified language, is either male or female, and is identified by an ID, which is the ASCII version of the voice name.\n\nWhen synthesizing speech ( SynthesizeSpeech ), you provide the voice ID for the voice you want from the list of voices returned by DescribeVoices .\n\nFor example, you want your news reader application to read news in a specific language, but giving a user the option to choose the voice. Using the DescribeVoices operation you can provide the user with a list of available voices to select from.\n\nYou can optionally specify a language code to filter the available voices. For example, if you specify en-US , the operation returns a list of all available US English voices.\n\nThis operation requires permissions to perform the polly:DescribeVoices action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-voices is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Voices",
      "command_synopsis": "Synopsis\n  describe-voices\n[--engine <value>]\n[--language-code <value>]\n[--include-additional-language-codes | --no-include-additional-language-codes]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--engine <value>]",
        "[--language-code <value>]",
        "[--include-additional-language-codes | --no-include-additional-language-codes]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--engine (string)\n\nSpecifies the engine (standard or neural ) used by Amazon Polly when processing input text for speech synthesis.\n\nPossible values:\n\nstandard\n\nneural\n\n--language-code (string)\n\nThe language identification tag (ISO 639 code for the language name-ISO 3166 country code) for filtering the list of voices returned. If you don’t specify this optional parameter, all available voices are returned.\n\nPossible values:\n\narb\n\ncmn-CN\n\ncy-GB\n\nda-DK\n\nde-DE\n\nen-AU\n\nen-GB\n\nen-GB-WLS\n\nen-IN\n\nen-US\n\nes-ES\n\nes-MX\n\nes-US\n\nfr-CA\n\nfr-FR\n\nis-IS\n\nit-IT\n\nja-JP\n\nhi-IN\n\nko-KR\n\nnb-NO\n\nnl-NL\n\npl-PL\n\npt-BR\n\npt-PT\n\nro-RO\n\nru-RU\n\nsv-SE\n\ntr-TR\n\nen-NZ\n\nen-ZA\n\n--include-additional-language-codes | --no-include-additional-language-codes (boolean)\n\nBoolean value indicating whether to return any bilingual voices that use the specified language as an additional language. For instance, if you request all languages that use US English (es-US), and there is an Italian voice that speaks both Italian (it-IT) and US English, that voice will be included if you specify yes but not if you specify no .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nVoices -> (list)\n\nA list of voices with their properties.\n\n(structure)\n\nDescription of the voice.\n\nGender -> (string)\n\nGender of the voice.\n\nId -> (string)\n\nAmazon Polly assigned voice ID. This is the ID that you specify when calling the SynthesizeSpeech operation.\n\nLanguageCode -> (string)\n\nLanguage code of the voice.\n\nLanguageName -> (string)\n\nHuman readable name of the language in English.\n\nName -> (string)\n\nName of the voice (for example, Salli, Kendra, etc.). This provides a human readable voice name that you might display in your application.\n\nAdditionalLanguageCodes -> (list)\n\nAdditional codes for languages available for the specified voice in addition to its default language.\n\nFor example, the default language for Aditi is Indian English (en-IN) because it was first used for that language. Since Aditi is bilingual and fluent in both Indian English and Hindi, this parameter would show the code hi-IN .\n\n(string)\n\nSupportedEngines -> (list)\n\nSpecifies which engines (standard or neural ) that are supported by a given voice.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token to use in the next request to continue the listing of voices. NextToken is returned only if the response is truncated."
    },
    {
      "command_name": "get-lexicon",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/polly/get-lexicon.html",
      "command_description": "Description\n\nReturns the content of the specified pronunciation lexicon stored in an Amazon Web Services Region. For more information, see Managing Lexicons .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-lexicon\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the lexicon.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLexicon -> (structure)\n\nLexicon object that provides name and the string content of the lexicon.\n\nContent -> (string)\n\nLexicon content in string format. The content of a lexicon must be in PLS format.\n\nName -> (string)\n\nName of the lexicon.\n\nLexiconAttributes -> (structure)\n\nMetadata of the lexicon, including phonetic alphabetic used, language code, lexicon ARN, number of lexemes defined in the lexicon, and size of lexicon in bytes.\n\nAlphabet -> (string)\n\nPhonetic alphabet used in the lexicon. Valid values are ipa and x-sampa .\n\nLanguageCode -> (string)\n\nLanguage code that the lexicon applies to. A lexicon with a language code such as “en” would be applied to all English languages (en-GB, en-US, en-AUS, en-WLS, and so on.\n\nLastModified -> (timestamp)\n\nDate lexicon was last modified (a timestamp value).\n\nLexiconArn -> (string)\n\nAmazon Resource Name (ARN) of the lexicon.\n\nLexemesCount -> (integer)\n\nNumber of lexemes in the lexicon.\n\nSize -> (integer)\n\nTotal size of the lexicon, in characters.",
      "command_examples": "Examples\n\nTo retrieve the content of a lexicon\n\nThe following get-lexicon example retrieves the content of the specified pronunciation lexicon.\n\naws polly get-lexicon \\\n    --name w3c\n\n\nOutput:\n\n{\n    \"Lexicon\": {\n        \"Content\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<lexicon version=\\\"1.0\\\" \\n      xmlns=    \\\"http://www.w3.org/2005/01/pronunciation-lexicon\\\"\\n      xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n          xsi:schemaLocation=\\\"http://www.w3.org/2005/01/pronunciation-lexicon \\n        http://www.w3.org/TR/2007/CR-pronunciation-    lexicon-20071212/pls.xsd\\\"\\n      alphabet=\\\"ipa\\\" \\n      xml:lang=\\\"en-US\\\">\\n  <lexeme>\\n    <grapheme>W3C</grapheme>\\n        <alias>World Wide Web Consortium</alias>\\n  </lexeme>\\n</lexicon>\\n\",\n        \"Name\": \"w3c\"\n    },\n    \"LexiconAttributes\": {\n        \"Alphabet\": \"ipa\",\n        \"LanguageCode\": \"en-US\",\n        \"LastModified\": 1603908910.99,\n        \"LexiconArn\": \"arn:aws:polly:us-west-2:880185128111:lexicon/w3c\",\n        \"LexemesCount\": 1,\n        \"Size\": 492\n    }\n}\n\n\nFor more information, see Using the GetLexicon operation in the Amazon Polly Developer Guide."
    },
    {
      "command_name": "get-speech-synthesis-task",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/polly/get-speech-synthesis-task.html",
      "command_description": "Description\n\nRetrieves a specific SpeechSynthesisTask object based on its TaskID. This object contains information about the given speech synthesis task, including the status of the task, and a link to the S3 bucket containing the output of the task.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-speech-synthesis-task\n--task-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--task-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--task-id (string)\n\nThe Amazon Polly generated identifier for a speech synthesis task.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSynthesisTask -> (structure)\n\nSynthesisTask object that provides information from the requested task, including output format, creation time, task status, and so on.\n\nEngine -> (string)\n\nSpecifies the engine (standard or neural ) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.\n\nTaskId -> (string)\n\nThe Amazon Polly generated identifier for a speech synthesis task.\n\nTaskStatus -> (string)\n\nCurrent status of the individual speech synthesis task.\n\nTaskStatusReason -> (string)\n\nReason for the current status of a specific speech synthesis task, including errors if the task has failed.\n\nOutputUri -> (string)\n\nPathway for the output speech file.\n\nCreationTime -> (timestamp)\n\nTimestamp for the time the synthesis task was started.\n\nRequestCharacters -> (integer)\n\nNumber of billable characters synthesized.\n\nSnsTopicArn -> (string)\n\nARN for the SNS topic optionally used for providing status notification for a speech synthesis task.\n\nLexiconNames -> (list)\n\nList of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice.\n\n(string)\n\nOutputFormat -> (string)\n\nThe format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json.\n\nSampleRate -> (string)\n\nThe audio frequency specified in Hz.\n\nThe valid values for mp3 and ogg_vorbis are “8000”, “16000”, “22050”, and “24000”. The default value for standard voices is “22050”. The default value for neural voices is “24000”.\n\nValid values for pcm are “8000” and “16000” The default value is “16000”.\n\nSpeechMarkTypes -> (list)\n\nThe type of speech marks returned for the input text.\n\n(string)\n\nTextType -> (string)\n\nSpecifies whether the input text is plain text or SSML. The default value is plain text.\n\nVoiceId -> (string)\n\nVoice ID to use for the synthesis.\n\nLanguageCode -> (string)\n\nOptional language code for a synthesis task. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN).\n\nIf a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the DescribeVoices operation for the LanguageCode parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.",
      "command_examples": "Examples\n\nTo get information about a speech synthesis task\n\nThe following get-speech-synthesis-task example retrieves information about the specified speech synthesis task.\n\naws polly get-speech-synthesis-task \\\n    --task-id 70b61c0f-57ce-4715-a247-cae8729dcce9\n\n\nOutput:\n\n{\n    \"SynthesisTask\": {\n        \"TaskId\": \"70b61c0f-57ce-4715-a247-cae8729dcce9\",\n        \"TaskStatus\": \"completed\",\n        \"OutputUri\": \"https://s3.us-west-2.amazonaws.com/my-s3-bucket/70b61c0f-57ce-4715-a247-cae8729dcce9.mp3\",\n        \"CreationTime\": 1603911042.689,\n        \"RequestCharacters\": 1311,\n        \"OutputFormat\": \"mp3\",\n        \"TextType\": \"text\",\n        \"VoiceId\": \"Joanna\"\n    }\n}\n\n\nFor more information, see Creating long audio files in the Amazon Polly Developer Guide."
    },
    {
      "command_name": "list-lexicons",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/polly/list-lexicons.html",
      "command_description": "Description\n\nReturns a list of pronunciation lexicons stored in an Amazon Web Services Region. For more information, see Managing Lexicons .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-lexicons is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Lexicons",
      "command_synopsis": "Synopsis\n  list-lexicons\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLexicons -> (list)\n\nA list of lexicon names and attributes.\n\n(structure)\n\nDescribes the content of the lexicon.\n\nName -> (string)\n\nName of the lexicon.\n\nAttributes -> (structure)\n\nProvides lexicon metadata.\n\nAlphabet -> (string)\n\nPhonetic alphabet used in the lexicon. Valid values are ipa and x-sampa .\n\nLanguageCode -> (string)\n\nLanguage code that the lexicon applies to. A lexicon with a language code such as “en” would be applied to all English languages (en-GB, en-US, en-AUS, en-WLS, and so on.\n\nLastModified -> (timestamp)\n\nDate lexicon was last modified (a timestamp value).\n\nLexiconArn -> (string)\n\nAmazon Resource Name (ARN) of the lexicon.\n\nLexemesCount -> (integer)\n\nNumber of lexemes in the lexicon.\n\nSize -> (integer)\n\nTotal size of the lexicon, in characters.\n\nNextToken -> (string)\n\nThe pagination token to use in the next request to continue the listing of lexicons. NextToken is returned only if the response is truncated.",
      "command_examples": "Examples\n\nTo list your lexicons\n\nThe following list-lexicons example lists your pronunciation lexicons.\n\naws polly list-lexicons\n\n\nOutput:\n\n{\n    \"Lexicons\": [\n        {\n            \"Name\": \"w3c\",\n            \"Attributes\": {\n                \"Alphabet\": \"ipa\",\n                \"LanguageCode\": \"en-US\",\n                \"LastModified\": 1603908910.99,\n                \"LexiconArn\": \"arn:aws:polly:us-east-2:123456789012:lexicon/w3c\",\n                \"LexemesCount\": 1,\n                \"Size\": 492\n            }\n        }\n    ]\n}\n\n\nFor more information, see Using the ListLexicons operation in the Amazon Polly Developer Guide."
    },
    {
      "command_name": "list-speech-synthesis-tasks",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/polly/list-speech-synthesis-tasks.html",
      "command_description": "Description\n\nReturns a list of SpeechSynthesisTask objects ordered by their creation date. This operation can filter the tasks by their status, for example, allowing users to list only tasks that are completed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-speech-synthesis-tasks is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SynthesisTasks",
      "command_synopsis": "Synopsis\n  list-speech-synthesis-tasks\n[--status <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--status <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--status (string)\n\nStatus of the speech synthesis tasks returned in a List operation\n\nPossible values:\n\nscheduled\n\ninProgress\n\ncompleted\n\nfailed\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nAn opaque pagination token returned from the previous List operation in this request. If present, this indicates where to continue the listing.\n\nSynthesisTasks -> (list)\n\nList of SynthesisTask objects that provides information from the specified task in the list request, including output format, creation time, task status, and so on.\n\n(structure)\n\nSynthesisTask object that provides information about a speech synthesis task.\n\nEngine -> (string)\n\nSpecifies the engine (standard or neural ) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.\n\nTaskId -> (string)\n\nThe Amazon Polly generated identifier for a speech synthesis task.\n\nTaskStatus -> (string)\n\nCurrent status of the individual speech synthesis task.\n\nTaskStatusReason -> (string)\n\nReason for the current status of a specific speech synthesis task, including errors if the task has failed.\n\nOutputUri -> (string)\n\nPathway for the output speech file.\n\nCreationTime -> (timestamp)\n\nTimestamp for the time the synthesis task was started.\n\nRequestCharacters -> (integer)\n\nNumber of billable characters synthesized.\n\nSnsTopicArn -> (string)\n\nARN for the SNS topic optionally used for providing status notification for a speech synthesis task.\n\nLexiconNames -> (list)\n\nList of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice.\n\n(string)\n\nOutputFormat -> (string)\n\nThe format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json.\n\nSampleRate -> (string)\n\nThe audio frequency specified in Hz.\n\nThe valid values for mp3 and ogg_vorbis are “8000”, “16000”, “22050”, and “24000”. The default value for standard voices is “22050”. The default value for neural voices is “24000”.\n\nValid values for pcm are “8000” and “16000” The default value is “16000”.\n\nSpeechMarkTypes -> (list)\n\nThe type of speech marks returned for the input text.\n\n(string)\n\nTextType -> (string)\n\nSpecifies whether the input text is plain text or SSML. The default value is plain text.\n\nVoiceId -> (string)\n\nVoice ID to use for the synthesis.\n\nLanguageCode -> (string)\n\nOptional language code for a synthesis task. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN).\n\nIf a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the DescribeVoices operation for the LanguageCode parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.",
      "command_examples": "Examples\n\nTo list your speech synthesis tasks\n\nThe following list-speech-synthesis-tasks example lists your speech synthesis tasks.\n\naws polly list-speech-synthesis-tasks\n\n\nOutput:\n\n{\n    \"SynthesisTasks\": [\n        {\n            \"TaskId\": \"70b61c0f-57ce-4715-a247-cae8729dcce9\",\n            \"TaskStatus\": \"completed\",\n            \"OutputUri\": \"https://s3.us-west-2.amazonaws.com/my-s3-bucket/70b61c0f-57ce-4715-a247-cae8729dcce9.mp3\",\n            \"CreationTime\": 1603911042.689,\n            \"RequestCharacters\": 1311,\n            \"OutputFormat\": \"mp3\",\n            \"TextType\": \"text\",\n            \"VoiceId\": \"Joanna\"\n        }\n    ]\n}\n\n\nFor more information, see Creating long audio files in the Amazon Polly Developer Guide."
    },
    {
      "command_name": "put-lexicon",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/polly/put-lexicon.html",
      "command_description": "Description\n\nStores a pronunciation lexicon in an Amazon Web Services Region. If a lexicon with the same name already exists in the region, it is overwritten by the new lexicon. Lexicon operations have eventual consistency, therefore, it might take some time before the lexicon is available to the SynthesizeSpeech operation.\n\nFor more information, see Managing Lexicons .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-lexicon\n--name <value>\n--content <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--content <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the lexicon. The name must follow the regular express format [0-9A-Za-z]{1,20}. That is, the name is a case-sensitive alphanumeric string up to 20 characters long.\n\n--content (string)\n\nContent of the PLS lexicon as string data.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo store a lexicon\n\nThe following put-lexicon example stores the specified pronunciation lexicon. The example.pls file specifies a W3C PLS-compliant lexicon.\n\naws polly put-lexicon \\\n    --name w3c \\\n    --content file://example.pls\n\n\nContents of example.pls\n\n{\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <lexicon version=\"1.0\"\n        xmlns=\"http://www.w3.org/2005/01/pronunciation-lexicon\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://www.w3.org/2005/01/pronunciation-lexicon\n            http://www.w3.org/TR/2007/CR-pronunciation-lexicon-20071212/pls.xsd\"\n        alphabet=\"ipa\"\n        xml:lang=\"en-US\">\n        <lexeme>\n            <grapheme>W3C</grapheme>\n            <alias>World Wide Web Consortium</alias>\n        </lexeme>\n    </lexicon>\n}\n\n\nThis command produces no output.\n\nFor more information, see Using the PutLexicon operation in the Amazon Polly Developer Guide."
    },
    {
      "command_name": "start-speech-synthesis-task",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/polly/start-speech-synthesis-task.html",
      "command_description": "Description\n\nAllows the creation of an asynchronous synthesis task, by starting a new SpeechSynthesisTask . This operation requires all the standard information needed for speech synthesis, plus the name of an Amazon S3 bucket for the service to store the output of the synthesis task and two optional parameters (OutputS3KeyPrefix and SnsTopicArn ). Once the synthesis task is created, this operation will return a SpeechSynthesisTask object, which will include an identifier of this task as well as the current status. The SpeechSynthesisTask object is available for 72 hours after starting the asynchronous synthesis task.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-speech-synthesis-task\n[--engine <value>]\n[--language-code <value>]\n[--lexicon-names <value>]\n--output-format <value>\n--output-s3-bucket-name <value>\n[--output-s3-key-prefix <value>]\n[--sample-rate <value>]\n[--sns-topic-arn <value>]\n[--speech-mark-types <value>]\n--text <value>\n[--text-type <value>]\n--voice-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--engine <value>]",
        "[--language-code <value>]",
        "[--lexicon-names <value>]",
        "--output-format <value>",
        "--output-s3-bucket-name <value>",
        "[--output-s3-key-prefix <value>]",
        "[--sample-rate <value>]",
        "[--sns-topic-arn <value>]",
        "[--speech-mark-types <value>]",
        "--text <value>",
        "[--text-type <value>]",
        "--voice-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--engine (string)\n\nSpecifies the engine (standard or neural ) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.\n\nPossible values:\n\nstandard\n\nneural\n\n--language-code (string)\n\nOptional language code for the Speech Synthesis request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN).\n\nIf a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the DescribeVoices operation for the LanguageCode parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.\n\nPossible values:\n\narb\n\ncmn-CN\n\ncy-GB\n\nda-DK\n\nde-DE\n\nen-AU\n\nen-GB\n\nen-GB-WLS\n\nen-IN\n\nen-US\n\nes-ES\n\nes-MX\n\nes-US\n\nfr-CA\n\nfr-FR\n\nis-IS\n\nit-IT\n\nja-JP\n\nhi-IN\n\nko-KR\n\nnb-NO\n\nnl-NL\n\npl-PL\n\npt-BR\n\npt-PT\n\nro-RO\n\nru-RU\n\nsv-SE\n\ntr-TR\n\nen-NZ\n\nen-ZA\n\n--lexicon-names (list)\n\nList of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--output-format (string)\n\nThe format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json.\n\nPossible values:\n\njson\n\nmp3\n\nogg_vorbis\n\npcm\n\n--output-s3-bucket-name (string)\n\nAmazon S3 bucket name to which the output file will be saved.\n\n--output-s3-key-prefix (string)\n\nThe Amazon S3 key prefix for the output speech file.\n\n--sample-rate (string)\n\nThe audio frequency specified in Hz.\n\nThe valid values for mp3 and ogg_vorbis are “8000”, “16000”, “22050”, and “24000”. The default value for standard voices is “22050”. The default value for neural voices is “24000”.\n\nValid values for pcm are “8000” and “16000” The default value is “16000”.\n\n--sns-topic-arn (string)\n\nARN for the SNS topic optionally used for providing status notification for a speech synthesis task.\n\n--speech-mark-types (list)\n\nThe type of speech marks returned for the input text.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  sentence\n  ssml\n  viseme\n  word\n\n\n--text (string)\n\nThe input text to synthesize. If you specify ssml as the TextType, follow the SSML format for the input text.\n\n--text-type (string)\n\nSpecifies whether the input text is plain text or SSML. The default value is plain text.\n\nPossible values:\n\nssml\n\ntext\n\n--voice-id (string)\n\nVoice ID to use for the synthesis.\n\nPossible values:\n\nAditi\n\nAmy\n\nAstrid\n\nBianca\n\nBrian\n\nCamila\n\nCarla\n\nCarmen\n\nCeline\n\nChantal\n\nConchita\n\nCristiano\n\nDora\n\nEmma\n\nEnrique\n\nEwa\n\nFiliz\n\nGabrielle\n\nGeraint\n\nGiorgio\n\nGwyneth\n\nHans\n\nInes\n\nIvy\n\nJacek\n\nJan\n\nJoanna\n\nJoey\n\nJustin\n\nKarl\n\nKendra\n\nKevin\n\nKimberly\n\nLea\n\nLiv\n\nLotte\n\nLucia\n\nLupe\n\nMads\n\nMaja\n\nMarlene\n\nMathieu\n\nMatthew\n\nMaxim\n\nMia\n\nMiguel\n\nMizuki\n\nNaja\n\nNicole\n\nOlivia\n\nPenelope\n\nRaveena\n\nRicardo\n\nRuben\n\nRussell\n\nSalli\n\nSeoyeon\n\nTakumi\n\nTatyana\n\nVicki\n\nVitoria\n\nZeina\n\nZhiyu\n\nAria\n\nAyanda\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSynthesisTask -> (structure)\n\nSynthesisTask object that provides information and attributes about a newly submitted speech synthesis task.\n\nEngine -> (string)\n\nSpecifies the engine (standard or neural ) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.\n\nTaskId -> (string)\n\nThe Amazon Polly generated identifier for a speech synthesis task.\n\nTaskStatus -> (string)\n\nCurrent status of the individual speech synthesis task.\n\nTaskStatusReason -> (string)\n\nReason for the current status of a specific speech synthesis task, including errors if the task has failed.\n\nOutputUri -> (string)\n\nPathway for the output speech file.\n\nCreationTime -> (timestamp)\n\nTimestamp for the time the synthesis task was started.\n\nRequestCharacters -> (integer)\n\nNumber of billable characters synthesized.\n\nSnsTopicArn -> (string)\n\nARN for the SNS topic optionally used for providing status notification for a speech synthesis task.\n\nLexiconNames -> (list)\n\nList of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice.\n\n(string)\n\nOutputFormat -> (string)\n\nThe format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json.\n\nSampleRate -> (string)\n\nThe audio frequency specified in Hz.\n\nThe valid values for mp3 and ogg_vorbis are “8000”, “16000”, “22050”, and “24000”. The default value for standard voices is “22050”. The default value for neural voices is “24000”.\n\nValid values for pcm are “8000” and “16000” The default value is “16000”.\n\nSpeechMarkTypes -> (list)\n\nThe type of speech marks returned for the input text.\n\n(string)\n\nTextType -> (string)\n\nSpecifies whether the input text is plain text or SSML. The default value is plain text.\n\nVoiceId -> (string)\n\nVoice ID to use for the synthesis.\n\nLanguageCode -> (string)\n\nOptional language code for a synthesis task. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN).\n\nIf a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the DescribeVoices operation for the LanguageCode parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.",
      "command_examples": "Examples\n\nTo synthesize text\n\nThe following start-speech-synthesis-task example synthesizes the text in text_file.txt and stores the resulting MP3 file in the specified bucket.\n\naws polly start-speech-synthesis-task \\\n    --output-format mp3 \\\n    --output-s3-bucket-name my-s3-bucket \\\n    --text  file://text_file.txt \\\n    --voice-id Joanna\n\n\nOutput:\n\n{\n    \"SynthesisTask\": {\n        \"TaskId\": \"70b61c0f-57ce-4715-a247-cae8729dcce9\",\n        \"TaskStatus\": \"scheduled\",\n        \"OutputUri\": \"https://s3.us-east-2.amazonaws.com/my-s3-bucket/70b61c0f-57ce-4715-a247-cae8729dcce9.mp3\",\n        \"CreationTime\": 1603911042.689,\n        \"RequestCharacters\": 1311,\n        \"OutputFormat\": \"mp3\",\n        \"TextType\": \"text\",\n        \"VoiceId\": \"Joanna\"\n    }\n}\n\n\nFor more information, see Creating long audio files in the Amazon Polly Developer Guide."
    },
    {
      "command_name": "synthesize-speech",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/polly/synthesize-speech.html",
      "command_description": "Description\n\nSynthesizes UTF-8 input, plain text or SSML, to a stream of bytes. SSML input must be valid, well-formed SSML. Some alphabets might not be available with all the voices (for example, Cyrillic might not be read at all by English voices) unless phoneme mapping is used. For more information, see How it Works .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  synthesize-speech\n[--engine <value>]\n[--language-code <value>]\n[--lexicon-names <value>]\n--output-format <value>\n[--sample-rate <value>]\n[--speech-mark-types <value>]\n--text <value>\n[--text-type <value>]\n--voice-id <value>\n<outfile>\n",
      "command_options": [
        "[--engine <value>]",
        "[--language-code <value>]",
        "[--lexicon-names <value>]",
        "--output-format <value>",
        "[--sample-rate <value>]",
        "[--speech-mark-types <value>]",
        "--text <value>",
        "[--text-type <value>]",
        "--voice-id <value>",
        "<outfile>"
      ],
      "command_options_description": "Options\n\n--engine (string)\n\nSpecifies the engine (standard or neural ) for Amazon Polly to use when processing input text for speech synthesis. For information on Amazon Polly voices and which voices are available in standard-only, NTTS-only, and both standard and NTTS formats, see Available Voices .\n\nNTTS-only voices\n\nWhen using NTTS-only voices such as Kevin (en-US), this parameter is required and must be set to neural . If the engine is not specified, or is set to standard , this will result in an error.\n\nType: String\n\nValid Values: standard | neural\n\nRequired: Yes\n\nStandard voices\n\nFor standard voices, this is not required; the engine parameter defaults to standard . If the engine is not specified, or is set to standard and an NTTS-only voice is selected, this will result in an error.\n\nPossible values:\n\nstandard\n\nneural\n\n--language-code (string)\n\nOptional language code for the Synthesize Speech request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN).\n\nIf a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the DescribeVoices operation for the LanguageCode parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.\n\nPossible values:\n\narb\n\ncmn-CN\n\ncy-GB\n\nda-DK\n\nde-DE\n\nen-AU\n\nen-GB\n\nen-GB-WLS\n\nen-IN\n\nen-US\n\nes-ES\n\nes-MX\n\nes-US\n\nfr-CA\n\nfr-FR\n\nis-IS\n\nit-IT\n\nja-JP\n\nhi-IN\n\nko-KR\n\nnb-NO\n\nnl-NL\n\npl-PL\n\npt-BR\n\npt-PT\n\nro-RO\n\nru-RU\n\nsv-SE\n\ntr-TR\n\nen-NZ\n\nen-ZA\n\n--lexicon-names (list)\n\nList of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice. For information about storing lexicons, see PutLexicon .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--output-format (string)\n\nThe format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json.\n\nWhen pcm is used, the content returned is audio/pcm in a signed 16-bit, 1 channel (mono), little-endian format.\n\nPossible values:\n\njson\n\nmp3\n\nogg_vorbis\n\npcm\n\n--sample-rate (string)\n\nThe audio frequency specified in Hz.\n\nThe valid values for mp3 and ogg_vorbis are “8000”, “16000”, “22050”, and “24000”. The default value for standard voices is “22050”. The default value for neural voices is “24000”.\n\nValid values for pcm are “8000” and “16000” The default value is “16000”.\n\n--speech-mark-types (list)\n\nThe type of speech marks returned for the input text.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  sentence\n  ssml\n  viseme\n  word\n\n\n--text (string)\n\nInput text to synthesize. If you specify ssml as the TextType , follow the SSML format for the input text.\n\n--text-type (string)\n\nSpecifies whether the input text is plain text or SSML. The default value is plain text. For more information, see Using SSML .\n\nPossible values:\n\nssml\n\ntext\n\n--voice-id (string)\n\nVoice ID to use for the synthesis. You can get a list of available voice IDs by calling the DescribeVoices operation.\n\nPossible values:\n\nAditi\n\nAmy\n\nAstrid\n\nBianca\n\nBrian\n\nCamila\n\nCarla\n\nCarmen\n\nCeline\n\nChantal\n\nConchita\n\nCristiano\n\nDora\n\nEmma\n\nEnrique\n\nEwa\n\nFiliz\n\nGabrielle\n\nGeraint\n\nGiorgio\n\nGwyneth\n\nHans\n\nInes\n\nIvy\n\nJacek\n\nJan\n\nJoanna\n\nJoey\n\nJustin\n\nKarl\n\nKendra\n\nKevin\n\nKimberly\n\nLea\n\nLiv\n\nLotte\n\nLucia\n\nLupe\n\nMads\n\nMaja\n\nMarlene\n\nMathieu\n\nMatthew\n\nMaxim\n\nMia\n\nMiguel\n\nMizuki\n\nNaja\n\nNicole\n\nOlivia\n\nPenelope\n\nRaveena\n\nRicardo\n\nRuben\n\nRussell\n\nSalli\n\nSeoyeon\n\nTakumi\n\nTatyana\n\nVicki\n\nVitoria\n\nZeina\n\nZhiyu\n\nAria\n\nAyanda\n\noutfile (string) Filename where the content will be saved\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAudioStream -> (blob)\n\nStream containing the synthesized speech.\n\nContentType -> (string)\n\nSpecifies the type audio stream. This should reflect the OutputFormat parameter in your request.\n\nIf you request mp3 as the OutputFormat , the ContentType returned is audio/mpeg.\n\nIf you request ogg_vorbis as the OutputFormat , the ContentType returned is audio/ogg.\n\nIf you request pcm as the OutputFormat , the ContentType returned is audio/pcm in a signed 16-bit, 1 channel (mono), little-endian format.\n\nIf you request json as the OutputFormat , the ContentType returned is audio/json.\n\nRequestCharacters -> (integer)\n\nNumber of characters synthesized."
    }
  ],
  "service_description": "Description\n\nAmazon Polly is a web service that makes it easy to synthesize speech from text.\n\nThe Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain."
}