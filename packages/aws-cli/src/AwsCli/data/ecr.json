{
  "service_name": "ecr",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/index.html",
  "service_commands": [
    {
      "command_name": "batch-check-layer-availability",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/batch-check-layer-availability.html",
      "command_description": "Description\n\nChecks the availability of one or more image layers in a repository.\n\nWhen an image is pushed to a repository, each image layer is checked to verify if it has been uploaded before. If it has been uploaded, then the image layer is skipped.\n\nNote\n\nThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the docker CLI to pull, tag, and push images.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-check-layer-availability\n[--registry-id <value>]\n--repository-name <value>\n--layer-digests <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--layer-digests <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository that is associated with the image layers to check.\n\n--layer-digests (list)\n\nThe digests of the image layers to check.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nlayers -> (list)\n\nA list of image layer objects corresponding to the image layer references in the request.\n\n(structure)\n\nAn object representing an Amazon ECR image layer.\n\nlayerDigest -> (string)\n\nThe sha256 digest of the image layer.\n\nlayerAvailability -> (string)\n\nThe availability status of the image layer.\n\nlayerSize -> (long)\n\nThe size, in bytes, of the image layer.\n\nmediaType -> (string)\n\nThe media type of the layer, such as application/vnd.docker.image.rootfs.diff.tar.gzip or application/vnd.oci.image.layer.v1.tar+gzip .\n\nfailures -> (list)\n\nAny failures associated with the call.\n\n(structure)\n\nAn object representing an Amazon ECR image layer failure.\n\nlayerDigest -> (string)\n\nThe layer digest associated with the failure.\n\nfailureCode -> (string)\n\nThe failure code associated with the failure.\n\nfailureReason -> (string)\n\nThe reason for the failure.",
      "command_examples": "Examples\n\nTo check the availability of a layer\n\nThe following batch-check-layer-availability example checks the availability of a layer with the digest sha256:6171c7451a50945f8ddd72f7732cc04d7a0d1f48138a426b2e64387fdeb834ed in the cluster-autoscaler repository.\n\naws ecr batch-check-layer-availability \\\n    --repository-name cluster-autoscaler \\\n    --layer-digests sha256:6171c7451a50945f8ddd72f7732cc04d7a0d1f48138a426b2e64387fdeb834ed\n\n\nOutput:\n\n{\n    \"layers\": [\n        {\n            \"layerDigest\": \"sha256:6171c7451a50945f8ddd72f7732cc04d7a0d1f48138a426b2e64387fdeb834ed\",\n            \"layerAvailability\": \"AVAILABLE\",\n            \"layerSize\": 2777,\n            \"mediaType\": \"application/vnd.docker.container.image.v1+json\"\n        }\n    ],\n    \"failures\": []\n}\n"
    },
    {
      "command_name": "batch-delete-image",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/batch-delete-image.html",
      "command_description": "Description\n\nDeletes a list of specified images within a repository. Images are specified with either an imageTag or imageDigest .\n\nYou can remove a tag from an image by specifying the image’s tag in your request. When you remove the last tag from an image, the image is deleted from your repository.\n\nYou can completely delete an image (and all of its tags) by specifying the image’s digest in your request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-delete-image\n[--registry-id <value>]\n--repository-name <value>\n--image-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--image-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe repository that contains the image to delete.\n\n--image-ids (list)\n\nA list of image ID references that correspond to images to delete. The format of the imageIds reference is imageTag=tag or imageDigest=digest .\n\n(structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nShorthand Syntax:\n\nimageDigest=string,imageTag=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"imageDigest\": \"string\",\n    \"imageTag\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nimageIds -> (list)\n\nThe image IDs of the deleted images.\n\n(structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nfailures -> (list)\n\nAny failures associated with the call.\n\n(structure)\n\nAn object representing an Amazon ECR image failure.\n\nimageId -> (structure)\n\nThe image ID associated with the failure.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nfailureCode -> (string)\n\nThe code associated with the failure.\n\nfailureReason -> (string)\n\nThe reason for the failure.",
      "command_examples": "Examples\n\nExample 1: To delete an image\n\nThe following batch-delete-image example deletes an image with the tag precise in the specified repository in the default registry for an account.\n\naws ecr batch-delete-image \\\n    --repository-name ubuntu \\\n    --image-ids imageTag=precise\n\n\nOutput:\n\n{\n    \"failures\": [],\n    \"imageIds\": [\n        {\n            \"imageTag\": \"precise\",\n            \"imageDigest\": \"sha256:19665f1e6d1e504117a1743c0a3d3753086354a38375961f2e665416ef4b1b2f\"\n        }\n    ]\n}\n\n\nExample 2: To delete multiple images\n\nThe following batch-delete-image example deletes all images tagged with prod and team1 in the specified repository.\n\naws ecr batch-delete-image \\\n    --repository-name MyRepository \\\n    --image-ids imageTag=prod imageTag=team1\n\n\nOutput:\n\n{\n    \"imageIds\": [\n        {\n            \"imageDigest\": \"sha256:123456789012\",\n            \"imageTag\": \"prod\"\n        },\n        {\n            \"imageDigest\": \"sha256:567890121234\",\n            \"imageTag\": \"team1\"\n        }\n    ],\n    \"failures\": []\n}\n\n\nFor more information, see Deleting an Image in the Amazon ECR User Guide."
    },
    {
      "command_name": "batch-get-image",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/batch-get-image.html",
      "command_description": "Description\n\nGets detailed information for an image. Images are specified with either an imageTag or imageDigest .\n\nWhen an image is pulled, the BatchGetImage API is called once to retrieve the image manifest.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-image\n[--registry-id <value>]\n--repository-name <value>\n--image-ids <value>\n[--accepted-media-types <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--image-ids <value>",
        "[--accepted-media-types <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe repository that contains the images to describe.\n\n--image-ids (list)\n\nA list of image ID references that correspond to images to describe. The format of the imageIds reference is imageTag=tag or imageDigest=digest .\n\n(structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nShorthand Syntax:\n\nimageDigest=string,imageTag=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"imageDigest\": \"string\",\n    \"imageTag\": \"string\"\n  }\n  ...\n]\n\n\n--accepted-media-types (list)\n\nThe accepted media types for the request.\n\nValid values: application/vnd.docker.distribution.manifest.v1+json | application/vnd.docker.distribution.manifest.v2+json | application/vnd.oci.image.manifest.v1+json\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nimages -> (list)\n\nA list of image objects corresponding to the image references in the request.\n\n(structure)\n\nAn object representing an Amazon ECR image.\n\nregistryId -> (string)\n\nThe Amazon Web Services account ID associated with the registry containing the image.\n\nrepositoryName -> (string)\n\nThe name of the repository associated with the image.\n\nimageId -> (structure)\n\nAn object containing the image tag and image digest associated with an image.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nimageManifest -> (string)\n\nThe image manifest associated with the image.\n\nimageManifestMediaType -> (string)\n\nThe manifest media type of the image.\n\nfailures -> (list)\n\nAny failures associated with the call.\n\n(structure)\n\nAn object representing an Amazon ECR image failure.\n\nimageId -> (structure)\n\nThe image ID associated with the failure.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nfailureCode -> (string)\n\nThe code associated with the failure.\n\nfailureReason -> (string)\n\nThe reason for the failure.",
      "command_examples": "Examples\n\nExample 1: To get an image\n\nThe following batch-get-image example gets an image with the tag v1.13.6 in a repository called cluster-autoscaler in the default registry for an account.\n\naws ecr batch-get-image \\\n    --repository-name cluster-autoscaler \\\n    --image-ids imageTag=v1.13.6\n\n\nOutput:\n\n{\n    \"images\": [\n        {\n            \"registryId\": \"012345678910\",\n            \"repositoryName\": \"cluster-autoscaler\",\n            \"imageId\": {\n                \"imageDigest\": \"sha256:4a1c6567c38904384ebc64e35b7eeddd8451110c299e3368d2210066487d97e5\",\n                \"imageTag\": \"v1.13.6\"\n            },\n            \"imageManifest\": \"{\\n   \\\"schemaVersion\\\": 2,\\n   \\\"mediaType\\\": \\\"application/vnd.docker.distribution.manifest.v2+json\\\",\\n   \\\"config\\\": {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.container.image.v1+json\\\",\\n      \\\"size\\\": 2777,\\n      \\\"digest\\\": \\\"sha256:6171c7451a50945f8ddd72f7732cc04d7a0d1f48138a426b2e64387fdeb834ed\\\"\\n   },\\n   \\\"layers\\\": [\\n      {\\n         \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n         \\\"size\\\": 17743696,\\n         \\\"digest\\\": \\\"sha256:39fafc05754f195f134ca11ecdb1c9a691ab0848c697fffeb5a85f900caaf6e1\\\"\\n      },\\n      {\\n         \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n         \\\"size\\\": 2565026,\\n         \\\"digest\\\": \\\"sha256:8c8a779d3a537b767ae1091fe6e00c2590afd16767aa6096d1b318d75494819f\\\"\\n      },\\n      {\\n         \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n         \\\"size\\\": 28005981,\\n         \\\"digest\\\": \\\"sha256:c44ba47496991c9982ee493b47fd25c252caabf2b4ae7dd679c9a27b6a3c8fb7\\\"\\n      },\\n      {\\n         \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n         \\\"size\\\": 775,\\n         \\\"digest\\\": \\\"sha256:e2c388b44226544363ca007be7b896bcce1baebea04da23cbd165eac30be650f\\\"\\n      }\\n   ]\\n}\"\n        }\n    ],\n    \"failures\": []\n}\n\n\nExample 2: To get multiple images\n\nThe following batch-get-image example displays details of all images tagged with prod and team1 in the specified repository.\n\naws ecr batch-get-image \\\n    --repository-name MyRepository \\\n    --image-ids imageTag=prod imageTag=team1\n\n\nOutput:\n\n{\n    \"images\": [\n        {\n            \"registryId\": \"123456789012\",\n            \"repositoryName\": \"MyRepository\",\n            \"imageId\": {\n                \"imageDigest\": \"sha256:123456789012\",\n                \"imageTag\": \"prod\"\n            },\n            \"imageManifest\": \"manifestExample1\"\n        },\n        {\n            \"registryId\": \"567890121234\",\n            \"repositoryName\": \"MyRepository\",\n            \"imageId\": {\n                \"imageDigest\": \"sha256:123456789012\",\n                \"imageTag\": \"team1\"\n            },\n            \"imageManifest\": \"manifestExample2\"\n        }\n    ],\n    \"failures\": []\n}\n\n\nFor more information, see Images in the Amazon ECR User Guide."
    },
    {
      "command_name": "complete-layer-upload",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/complete-layer-upload.html",
      "command_description": "Description\n\nInforms Amazon ECR that the image layer upload has completed for a specified registry, repository name, and upload ID. You can optionally provide a sha256 digest of the image layer for data validation purposes.\n\nWhen an image is pushed, the CompleteLayerUpload API is called once per each new image layer to verify that the upload has completed.\n\nNote\n\nThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the docker CLI to pull, tag, and push images.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  complete-layer-upload\n[--registry-id <value>]\n--repository-name <value>\n--upload-id <value>\n--layer-digests <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--upload-id <value>",
        "--layer-digests <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository to associate with the image layer.\n\n--upload-id (string)\n\nThe upload ID from a previous InitiateLayerUpload operation to associate with the image layer.\n\n--layer-digests (list)\n\nThe sha256 digest of the image layer.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nuploadId -> (string)\n\nThe upload ID associated with the layer.\n\nlayerDigest -> (string)\n\nThe sha256 digest of the image layer.",
      "command_examples": "Examples\n\nTo complete an image layer upload\n\nThe following complete-layer-upload example completes an image layer upload to the layer-test repository.\n\naws ecr complete-layer-upload \\\n    --repository-name layer-test \\\n    --upload-id 6cb64b8a-9378-0e33-2ab1-b780fab8a9e9 \\\n    --layer-digests 6cb64b8a-9378-0e33-2ab1-b780fab8a9e9:48074e6d3a68b39aad8ccc002cdad912d4148c0f92b3729323e\n\n\nOutput:\n\n{\n    \"uploadId\": \"6cb64b8a-9378-0e33-2ab1-b780fab8a9e9\",\n    \"layerDigest\": \"sha256:9a77f85878aa1906f2020a0ecdf7a7e962d57e882250acd773383224b3fe9a02\",\n    \"repositoryName\": \"layer-test\",\n    \"registryId\": \"130757420319\"\n}\n"
    },
    {
      "command_name": "create-repository",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/create-repository.html",
      "command_description": "Description\n\nCreates a repository. For more information, see Amazon ECR repositories in the Amazon Elastic Container Registry User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-repository\n[--registry-id <value>]\n--repository-name <value>\n[--tags <value>]\n[--image-tag-mutability <value>]\n[--image-scanning-configuration <value>]\n[--encryption-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--tags <value>]",
        "[--image-tag-mutability <value>]",
        "[--image-scanning-configuration <value>]",
        "[--encryption-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe AWS account ID associated with the registry to create the repository. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name to use for the repository. The repository name may be specified on its own (such as nginx-web-app ) or it can be prepended with a namespace to group the repository into a category (such as project-a/nginx-web-app ).\n\n--tags (list)\n\nThe metadata that you apply to the repository to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\n(structure)\n\nThe metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nKey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--image-tag-mutability (string)\n\nThe tag mutability setting for the repository. If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.\n\nPossible values:\n\nMUTABLE\n\nIMMUTABLE\n\n--image-scanning-configuration (structure)\n\nThe image scanning configuration for the repository. This determines whether images are scanned for known vulnerabilities after being pushed to the repository.\n\nscanOnPush -> (boolean)\n\nThe setting that determines whether images are scanned after being pushed to a repository. If set to true , images will be scanned after being pushed. If this parameter is not specified, it will default to false and images will not be scanned unless a scan is manually started with the API_StartImageScan API.\n\nShorthand Syntax:\n\nscanOnPush=boolean\n\n\nJSON Syntax:\n\n{\n  \"scanOnPush\": true|false\n}\n\n\n--encryption-configuration (structure)\n\nThe encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.\n\nencryptionType -> (string)\n\nThe encryption type to use.\n\nIf you use the KMS encryption type, the contents of the repository will be encrypted using server-side encryption with Key Management Service key stored in KMS. When you use KMS to encrypt your data, you can either use the default Amazon Web Services managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see Protecting data using server-side encryption with an KMS key stored in Key Management Service (SSE-KMS) in the Amazon Simple Storage Service Console Developer Guide. .\n\nIf you use the AES256 encryption type, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an AES-256 encryption algorithm. For more information, see Protecting data using server-side encryption with Amazon S3-managed encryption keys (SSE-S3) in the Amazon Simple Storage Service Console Developer Guide. .\n\nkmsKey -> (string)\n\nIf you use the KMS encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default Amazon Web Services managed KMS key for Amazon ECR will be used.\n\nShorthand Syntax:\n\nencryptionType=string,kmsKey=string\n\n\nJSON Syntax:\n\n{\n  \"encryptionType\": \"AES256\"|\"KMS\",\n  \"kmsKey\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepository -> (structure)\n\nThe repository that was created.\n\nrepositoryArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the repository. The ARN contains the arn:aws:ecr namespace, followed by the region of the repository, Amazon Web Services account ID of the repository owner, repository namespace, and repository name. For example, arn:aws:ecr:region:012345678910:repository/test .\n\nregistryId -> (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository.\n\nrepositoryName -> (string)\n\nThe name of the repository.\n\nrepositoryUri -> (string)\n\nThe URI for the repository. You can use this URI for container image push and pull operations.\n\ncreatedAt -> (timestamp)\n\nThe date and time, in JavaScript date format, when the repository was created.\n\nimageTagMutability -> (string)\n\nThe tag mutability setting for the repository.\n\nimageScanningConfiguration -> (structure)\n\nThe image scanning configuration for a repository.\n\nscanOnPush -> (boolean)\n\nThe setting that determines whether images are scanned after being pushed to a repository. If set to true , images will be scanned after being pushed. If this parameter is not specified, it will default to false and images will not be scanned unless a scan is manually started with the API_StartImageScan API.\n\nencryptionConfiguration -> (structure)\n\nThe encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.\n\nencryptionType -> (string)\n\nThe encryption type to use.\n\nIf you use the KMS encryption type, the contents of the repository will be encrypted using server-side encryption with Key Management Service key stored in KMS. When you use KMS to encrypt your data, you can either use the default Amazon Web Services managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see Protecting data using server-side encryption with an KMS key stored in Key Management Service (SSE-KMS) in the Amazon Simple Storage Service Console Developer Guide. .\n\nIf you use the AES256 encryption type, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an AES-256 encryption algorithm. For more information, see Protecting data using server-side encryption with Amazon S3-managed encryption keys (SSE-S3) in the Amazon Simple Storage Service Console Developer Guide. .\n\nkmsKey -> (string)\n\nIf you use the KMS encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default Amazon Web Services managed KMS key for Amazon ECR will be used.",
      "command_examples": "Examples\n\nExample 1: To create a repository\n\nThe following create-repository example creates a repository inside the specified namespace in the default registry for an account.\n\naws ecr create-repository \\\n    --repository-name project-a/nginx-web-app\n\n\nOutput:\n\n{\n    \"repository\": {\n        \"registryId\": \"123456789012\",\n        \"repositoryName\": \"sample-repo\",\n        \"repositoryArn\": \"arn:aws:ecr:us-west-2:123456789012:repository/project-a/nginx-web-app\"\n    }\n}\n\n\nFor more information, see Creating a Repository in the Amazon ECR User Guide.\n\nExample 2: To create a repository configured with image tag immutability\n\nThe following create-repository example creates a repository configured for tag immutability in the default registry for an account.\n\naws ecr create-repository \\\n    --repository-name sample-repo \\\n    --image-tag-mutability IMMUTABLE\n\n\nOutput:\n\n{\n    \"repository\": {\n        \"registryId\": \"123456789012\",\n        \"repositoryName\": \"sample-repo\",\n        \"repositoryArn\": \"arn:aws:ecr:us-west-2:123456789012:repository/sample-repo\",\n        \"imageTagMutability\": \"IMMUTABLE\"\n    }\n}\n\n\nFor more information, see Image Tag Mutability in the Amazon ECR User Guide.\n\nExample 3: To create a repository configured with a scanning configuration\n\nThe following create-repository example creates a repository configured to perform a vulnerability scan on image push in the default registry for an account.\n\naws ecr create-repository \\\n    --repository-name sample-repo \\\n    --image-scanning-configuration scanOnPush=true\n\n\nOutput:\n\n{\n    \"repository\": {\n        \"registryId\": \"123456789012\",\n        \"repositoryName\": \"sample-repo\",\n        \"repositoryArn\": \"arn:aws:ecr:us-west-2:123456789012:repository/sample-repo\",\n        \"imageScanningConfiguration\": {\n            \"scanOnPush\": true\n        }\n    }\n}\n\n\nFor more information, see Image Scanning in the Amazon ECR User Guide."
    },
    {
      "command_name": "delete-lifecycle-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/delete-lifecycle-policy.html",
      "command_description": "Description\n\nDeletes the lifecycle policy associated with the specified repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-lifecycle-policy\n[--registry-id <value>]\n--repository-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nlifecyclePolicyText -> (string)\n\nThe JSON lifecycle policy text.\n\nlastEvaluatedAt -> (timestamp)\n\nThe time stamp of the last time that the lifecycle policy was run.",
      "command_examples": "Examples\n\nTo delete the lifecycle policy for a repository\n\nThe following delete-lifecycle-policy example deletes the lifecycle policy for the hello-world repository.\n\naws ecr delete-lifecycle-policy \\\n    --repository-name hello-world\n\n\nOutput:\n\n{\n    \"registryId\": \"012345678910\",\n    \"repositoryName\": \"hello-world\",\n    \"lifecyclePolicyText\": \"{\\\"rules\\\":[{\\\"rulePriority\\\":1,\\\"description\\\":\\\"Remove untagged images.\\\",\\\"selection\\\":{\\\"tagStatus\\\":\\\"untagged\\\",\\\"countType\\\":\\\"sinceImagePushed\\\",\\\"countUnit\\\":\\\"days\\\",\\\"countNumber\\\":10},\\\"action\\\":{\\\"type\\\":\\\"expire\\\"}}]}\",\n    \"lastEvaluatedAt\": 0.0\n}\n"
    },
    {
      "command_name": "delete-registry-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/delete-registry-policy.html",
      "command_description": "Description\n\nDeletes the registry permissions policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-registry-policy\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\npolicyText -> (string)\n\nThe contents of the registry permissions policy that was deleted."
    },
    {
      "command_name": "delete-repository",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/delete-repository.html",
      "command_description": "Description\n\nDeletes a repository. If the repository contains images, you must either delete all images in the repository or use the force option to delete the repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-repository\n[--registry-id <value>]\n--repository-name <value>\n[--force | --no-force]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--force | --no-force]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository to delete.\n\n--force | --no-force (boolean)\n\nIf a repository contains images, forces the deletion.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepository -> (structure)\n\nThe repository that was deleted.\n\nrepositoryArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the repository. The ARN contains the arn:aws:ecr namespace, followed by the region of the repository, Amazon Web Services account ID of the repository owner, repository namespace, and repository name. For example, arn:aws:ecr:region:012345678910:repository/test .\n\nregistryId -> (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository.\n\nrepositoryName -> (string)\n\nThe name of the repository.\n\nrepositoryUri -> (string)\n\nThe URI for the repository. You can use this URI for container image push and pull operations.\n\ncreatedAt -> (timestamp)\n\nThe date and time, in JavaScript date format, when the repository was created.\n\nimageTagMutability -> (string)\n\nThe tag mutability setting for the repository.\n\nimageScanningConfiguration -> (structure)\n\nThe image scanning configuration for a repository.\n\nscanOnPush -> (boolean)\n\nThe setting that determines whether images are scanned after being pushed to a repository. If set to true , images will be scanned after being pushed. If this parameter is not specified, it will default to false and images will not be scanned unless a scan is manually started with the API_StartImageScan API.\n\nencryptionConfiguration -> (structure)\n\nThe encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.\n\nencryptionType -> (string)\n\nThe encryption type to use.\n\nIf you use the KMS encryption type, the contents of the repository will be encrypted using server-side encryption with Key Management Service key stored in KMS. When you use KMS to encrypt your data, you can either use the default Amazon Web Services managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see Protecting data using server-side encryption with an KMS key stored in Key Management Service (SSE-KMS) in the Amazon Simple Storage Service Console Developer Guide. .\n\nIf you use the AES256 encryption type, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an AES-256 encryption algorithm. For more information, see Protecting data using server-side encryption with Amazon S3-managed encryption keys (SSE-S3) in the Amazon Simple Storage Service Console Developer Guide. .\n\nkmsKey -> (string)\n\nIf you use the KMS encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default Amazon Web Services managed KMS key for Amazon ECR will be used.",
      "command_examples": "Examples\n\nTo delete a repository\n\nThe following delete-repository example command force deletes the specified repository in the default registry for an account. The --force flag is required if the repository contains images.\n\naws ecr delete-repository \\\n    --repository-name ubuntu \\\n    --force\n\n\nOutput:\n\n{\n    \"repository\": {\n        \"registryId\": \"123456789012\",\n        \"repositoryName\": \"ubuntu\",\n        \"repositoryArn\": \"arn:aws:ecr:us-west-2:123456789012:repository/ubuntu\"\n    }\n}\n\n\nFor more information, see Deleting a Repository in the Amazon ECR User Guide."
    },
    {
      "command_name": "delete-repository-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/delete-repository-policy.html",
      "command_description": "Description\n\nDeletes the repository policy associated with the specified repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-repository-policy\n[--registry-id <value>]\n--repository-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository that is associated with the repository policy to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\npolicyText -> (string)\n\nThe JSON repository policy that was deleted from the repository.",
      "command_examples": "Examples\n\nTo delete the repository policy for a repository\n\nThe following delete-repository-policy example deletes the repository policy for the cluster-autoscaler repository.\n\naws ecr delete-repository-policy \\\n    --repository-name cluster-autoscaler\n\n\nOutput:\n\n{\n    \"registryId\": \"012345678910\",\n    \"repositoryName\": \"cluster-autoscaler\",\n    \"policyText\": \"{\\n  \\\"Version\\\" : \\\"2008-10-17\\\",\\n  \\\"Statement\\\" : [ {\\n    \\\"Sid\\\" : \\\"allow public pull\\\",\\n    \\\"Effect\\\" : \\\"Allow\\\",\\n    \\\"Principal\\\" : \\\"*\\\",\\n    \\\"Action\\\" : [ \\\"ecr:BatchCheckLayerAvailability\\\", \\\"ecr:BatchGetImage\\\", \\\"ecr:GetDownloadUrlForLayer\\\" ]\\n  } ]\\n}\"\n}\n"
    },
    {
      "command_name": "describe-image-replication-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/describe-image-replication-status.html",
      "command_description": "Description\n\nReturns the replication status for a specified image.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-image-replication-status\n--repository-name <value>\n--image-id <value>\n[--registry-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--repository-name <value>",
        "--image-id <value>",
        "[--registry-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--repository-name (string)\n\nThe name of the repository that the image is in.\n\n--image-id (structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nShorthand Syntax:\n\nimageDigest=string,imageTag=string\n\n\nJSON Syntax:\n\n{\n  \"imageDigest\": \"string\",\n  \"imageTag\": \"string\"\n}\n\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry. If you do not specify a registry, the default registry is assumed.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nimageId -> (structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nreplicationStatuses -> (list)\n\nThe replication status details for the images in the specified repository.\n\n(structure)\n\nThe status of the replication process for an image.\n\nregion -> (string)\n\nThe destination Region for the image replication.\n\nregistryId -> (string)\n\nThe AWS account ID associated with the registry to which the image belongs.\n\nstatus -> (string)\n\nThe image replication status.\n\nfailureCode -> (string)\n\nThe failure code for a replication that has failed."
    },
    {
      "command_name": "describe-image-scan-findings",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/describe-image-scan-findings.html",
      "command_description": "Description\n\nReturns the scan findings for the specified image.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-image-scan-findings is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: imageScanFindings.findings",
      "command_synopsis": "Synopsis\n  describe-image-scan-findings\n[--registry-id <value>]\n--repository-name <value>\n--image-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--image-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository in which to describe the image scan findings for. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe repository for the image for which to describe the scan findings.\n\n--image-id (structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nShorthand Syntax:\n\nimageDigest=string,imageTag=string\n\n\nJSON Syntax:\n\n{\n  \"imageDigest\": \"string\",\n  \"imageTag\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nimageId -> (structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nimageScanStatus -> (structure)\n\nThe current state of the scan.\n\nstatus -> (string)\n\nThe current state of an image scan.\n\ndescription -> (string)\n\nThe description of the image scan status.\n\nimageScanFindings -> (structure)\n\nThe information contained in the image scan findings.\n\nimageScanCompletedAt -> (timestamp)\n\nThe time of the last completed image scan.\n\nvulnerabilitySourceUpdatedAt -> (timestamp)\n\nThe time when the vulnerability data was last scanned.\n\nfindings -> (list)\n\nThe findings from the image scan.\n\n(structure)\n\nContains information about an image scan finding.\n\nname -> (string)\n\nThe name associated with the finding, usually a CVE number.\n\ndescription -> (string)\n\nThe description of the finding.\n\nuri -> (string)\n\nA link containing additional details about the security vulnerability.\n\nseverity -> (string)\n\nThe finding severity.\n\nattributes -> (list)\n\nA collection of attributes of the host from which the finding is generated.\n\n(structure)\n\nThis data type is used in the ImageScanFinding data type.\n\nkey -> (string)\n\nThe attribute key.\n\nvalue -> (string)\n\nThe value assigned to the attribute key.\n\nfindingSeverityCounts -> (map)\n\nThe image vulnerability counts, sorted by severity.\n\nkey -> (string)\n\nvalue -> (integer)\n\nnextToken -> (string)\n\nThe nextToken value to include in a future DescribeImageScanFindings request. When the results of a DescribeImageScanFindings request exceed maxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return.",
      "command_examples": "Examples\n\nTo describe the scan findings for an image\n\nThe following describe-image-scan-findings example returns the image scan findings for an image using the image digest in the specified repository in the default registry for an account.\n\naws ecr describe-image-scan-findings \\\n    --repository-name sample-repo \\\n    --image-id imageDigest=sha256:74b2c688c700ec95a93e478cdb959737c148df3fbf5ea706abe0318726e885e6\n\n\nOutput:\n\n{\n    \"imageScanFindings\": {\n      \"findings\": [\n          {\n              \"name\": \"CVE-2019-5188\",\n              \"description\": \"A code execution vulnerability exists in the directory rehashing functionality of E2fsprogs e2fsck 1.45.4. A specially crafted ext4 directory can cause an out-of-bounds write on the stack, resulting in code execution. An attacker can corrupt a partition to trigger this vulnerability.\",\n              \"uri\": \"http://people.ubuntu.com/~ubuntu-security/cve/CVE-2019-5188\",\n              \"severity\": \"MEDIUM\",\n              \"attributes\": [\n                  {\n                      \"key\": \"package_version\",\n                      \"value\": \"1.44.1-1ubuntu1.1\"\n                  },\n                  {\n                      \"key\": \"package_name\",\n                      \"value\": \"e2fsprogs\"\n                  },\n                  {\n                      \"key\": \"CVSS2_VECTOR\",\n                      \"value\": \"AV:L/AC:L/Au:N/C:P/I:P/A:P\"\n                  },\n                  {\n                      \"key\": \"CVSS2_SCORE\",\n                      \"value\": \"4.6\"\n                  }\n              ]\n          }\n      ],\n      \"imageScanCompletedAt\": 1579839105.0,\n      \"vulnerabilitySourceUpdatedAt\": 1579811117.0,\n      \"findingSeverityCounts\": {\n          \"MEDIUM\": 1\n      }\n  },\n  \"registryId\": \"123456789012\",\n  \"repositoryName\": \"sample-repo\",\n  \"imageId\": {\n      \"imageDigest\": \"sha256:74b2c688c700ec95a93e478cdb959737c148df3fbf5ea706abe0318726e885e6\"\n  },\n  \"imageScanStatus\": {\n      \"status\": \"COMPLETE\",\n      \"description\": \"The scan was completed successfully.\"\n  }\n}\n\n\nFor more information, see Image Scanning in the Amazon ECR User Guide."
    },
    {
      "command_name": "describe-images",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/describe-images.html",
      "command_description": "Description\n\nReturns metadata about the images in a repository.\n\nNote\n\nBeginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the docker images command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by DescribeImages .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-images is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: imageDetails",
      "command_synopsis": "Synopsis\n  describe-images\n[--registry-id <value>]\n--repository-name <value>\n[--image-ids <value>]\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--image-ids <value>]",
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe repository that contains the images to describe.\n\n--image-ids (list)\n\nThe list of image IDs for the requested repository.\n\n(structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nShorthand Syntax:\n\nimageDigest=string,imageTag=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"imageDigest\": \"string\",\n    \"imageTag\": \"string\"\n  }\n  ...\n]\n\n\n--filter (structure)\n\nThe filter key and value with which to filter your DescribeImages results.\n\ntagStatus -> (string)\n\nThe tag status with which to filter your DescribeImages results. You can filter results based on whether they are TAGGED or UNTAGGED .\n\nShorthand Syntax:\n\ntagStatus=string\n\n\nJSON Syntax:\n\n{\n  \"tagStatus\": \"TAGGED\"|\"UNTAGGED\"|\"ANY\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nimageDetails -> (list)\n\nA list of ImageDetail objects that contain data about the image.\n\n(structure)\n\nAn object that describes an image returned by a DescribeImages operation.\n\nregistryId -> (string)\n\nThe Amazon Web Services account ID associated with the registry to which this image belongs.\n\nrepositoryName -> (string)\n\nThe name of the repository to which this image belongs.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTags -> (list)\n\nThe list of tags associated with this image.\n\n(string)\n\nimageSizeInBytes -> (long)\n\nThe size, in bytes, of the image in the repository.\n\nIf the image is a manifest list, this will be the max size of all manifests in the list.\n\nNote\n\nBeginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the docker images command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by DescribeImages .\n\nimagePushedAt -> (timestamp)\n\nThe date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\n\nimageScanStatus -> (structure)\n\nThe current state of the scan.\n\nstatus -> (string)\n\nThe current state of an image scan.\n\ndescription -> (string)\n\nThe description of the image scan status.\n\nimageScanFindingsSummary -> (structure)\n\nA summary of the last completed image scan.\n\nimageScanCompletedAt -> (timestamp)\n\nThe time of the last completed image scan.\n\nvulnerabilitySourceUpdatedAt -> (timestamp)\n\nThe time when the vulnerability data was last scanned.\n\nfindingSeverityCounts -> (map)\n\nThe image vulnerability counts, sorted by severity.\n\nkey -> (string)\n\nvalue -> (integer)\n\nimageManifestMediaType -> (string)\n\nThe media type of the image manifest.\n\nartifactMediaType -> (string)\n\nThe artifact media type of the image.\n\nnextToken -> (string)\n\nThe nextToken value to include in a future DescribeImages request. When the results of a DescribeImages request exceed maxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return.",
      "command_examples": "Examples\n\nTo describe an image in a repository\n\nThe folowing describe-images example displays details about an image in the cluster-autoscaler repository with the tag v1.13.6.\n\naws ecr describe-images \\\n    --repository-name cluster-autoscaler \\\n    --image-ids imageTag=v1.13.6\n\n\nOutput:\n\n{\n    \"imageDetails\": [\n        {\n            \"registryId\": \"012345678910\",\n            \"repositoryName\": \"cluster-autoscaler\",\n            \"imageDigest\": \"sha256:4a1c6567c38904384ebc64e35b7eeddd8451110c299e3368d2210066487d97e5\",\n            \"imageTags\": [\n                \"v1.13.6\"\n            ],\n            \"imageSizeInBytes\": 48318255,\n            \"imagePushedAt\": 1565128275.0\n        }\n    ]\n}\n"
    },
    {
      "command_name": "describe-registry",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/describe-registry.html",
      "command_description": "Description\n\nDescribes the settings for a registry. The replication configuration for a repository can be created or updated with the PutReplicationConfiguration API action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-registry\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe ID of the registry.\n\nreplicationConfiguration -> (structure)\n\nThe replication configuration for the registry.\n\nrules -> (list)\n\nAn array of objects representing the replication destinations and repository filters for a replication configuration.\n\n(structure)\n\nAn array of objects representing the replication destinations and repository filters for a replication configuration.\n\ndestinations -> (list)\n\nAn array of objects representing the destination for a replication rule.\n\n(structure)\n\nAn array of objects representing the destination for a replication rule.\n\nregion -> (string)\n\nThe Region to replicate to.\n\nregistryId -> (string)\n\nThe Amazon Web Services account ID of the Amazon ECR private registry to replicate to. When configuring cross-Region replication within your own registry, specify your own account ID.\n\nrepositoryFilters -> (list)\n\nAn array of objects representing the filters for a replication rule. Specifying a repository filter for a replication rule provides a method for controlling which repositories in a private registry are replicated.\n\n(structure)\n\nThe filter settings used with image replication. Specifying a repository filter to a replication rule provides a method for controlling which repositories in a private registry are replicated. If no repository filter is specified, all images in the repository are replicated.\n\nfilter -> (string)\n\nThe repository filter details. When the PREFIX_MATCH filter type is specified, this value is required and should be the repository name prefix to configure replication for.\n\nfilterType -> (string)\n\nThe repository filter type. The only supported value is PREFIX_MATCH , which is a repository name prefix specified with the filter parameter."
    },
    {
      "command_name": "describe-repositories",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/describe-repositories.html",
      "command_description": "Description\n\nDescribes image repositories in a registry.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-repositories is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: repositories",
      "command_synopsis": "Synopsis\n  describe-repositories\n[--registry-id <value>]\n[--repository-names <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "[--repository-names <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.\n\n--repository-names (list)\n\nA list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepositories -> (list)\n\nA list of repository objects corresponding to valid repositories.\n\n(structure)\n\nAn object representing a repository.\n\nrepositoryArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the repository. The ARN contains the arn:aws:ecr namespace, followed by the region of the repository, Amazon Web Services account ID of the repository owner, repository namespace, and repository name. For example, arn:aws:ecr:region:012345678910:repository/test .\n\nregistryId -> (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository.\n\nrepositoryName -> (string)\n\nThe name of the repository.\n\nrepositoryUri -> (string)\n\nThe URI for the repository. You can use this URI for container image push and pull operations.\n\ncreatedAt -> (timestamp)\n\nThe date and time, in JavaScript date format, when the repository was created.\n\nimageTagMutability -> (string)\n\nThe tag mutability setting for the repository.\n\nimageScanningConfiguration -> (structure)\n\nThe image scanning configuration for a repository.\n\nscanOnPush -> (boolean)\n\nThe setting that determines whether images are scanned after being pushed to a repository. If set to true , images will be scanned after being pushed. If this parameter is not specified, it will default to false and images will not be scanned unless a scan is manually started with the API_StartImageScan API.\n\nencryptionConfiguration -> (structure)\n\nThe encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.\n\nencryptionType -> (string)\n\nThe encryption type to use.\n\nIf you use the KMS encryption type, the contents of the repository will be encrypted using server-side encryption with Key Management Service key stored in KMS. When you use KMS to encrypt your data, you can either use the default Amazon Web Services managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see Protecting data using server-side encryption with an KMS key stored in Key Management Service (SSE-KMS) in the Amazon Simple Storage Service Console Developer Guide. .\n\nIf you use the AES256 encryption type, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an AES-256 encryption algorithm. For more information, see Protecting data using server-side encryption with Amazon S3-managed encryption keys (SSE-S3) in the Amazon Simple Storage Service Console Developer Guide. .\n\nkmsKey -> (string)\n\nIf you use the KMS encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default Amazon Web Services managed KMS key for Amazon ECR will be used.\n\nnextToken -> (string)\n\nThe nextToken value to include in a future DescribeRepositories request. When the results of a DescribeRepositories request exceed maxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return.",
      "command_examples": "Examples\n\nTo describe the repositories in a registry\n\nThis example describes the repositories in the default registry for an account.\n\nCommand:\n\naws ecr describe-repositories\n\n\nOutput:\n\n{\n    \"repositories\": [\n        {\n            \"registryId\": \"012345678910\",\n            \"repositoryName\": \"ubuntu\",\n            \"repositoryArn\": \"arn:aws:ecr:us-west-2:012345678910:repository/ubuntu\"\n        },\n        {\n            \"registryId\": \"012345678910\",\n            \"repositoryName\": \"test\",\n            \"repositoryArn\": \"arn:aws:ecr:us-west-2:012345678910:repository/test\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "get-authorization-token",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/get-authorization-token.html",
      "command_description": "Description\n\nRetrieves an authorization token. An authorization token represents your IAM authentication credentials and can be used to access any Amazon ECR registry that your IAM principal has access to. The authorization token is valid for 12 hours.\n\nThe authorizationToken returned is a base64 encoded string that can be decoded and used in a docker login command to authenticate to a registry. The CLI offers an get-login-password command that simplifies the login process. For more information, see Registry authentication in the Amazon Elastic Container Registry User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-authorization-token\n[--registry-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-ids (list)\n\nA list of Amazon Web Services account IDs that are associated with the registries for which to get AuthorizationData objects. If you do not specify a registry, the default registry is assumed.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nauthorizationData -> (list)\n\nA list of authorization token data objects that correspond to the registryIds values in the request.\n\n(structure)\n\nAn object representing authorization data for an Amazon ECR registry.\n\nauthorizationToken -> (string)\n\nA base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format user:password for private registry authentication using docker login .\n\nexpiresAt -> (timestamp)\n\nThe Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.\n\nproxyEndpoint -> (string)\n\nThe registry URL to use for this authorization token in a docker login command. The Amazon ECR registry URL format is https://aws_account_id.dkr.ecr.region.amazonaws.com . For example, https://012345678910.dkr.ecr.us-east-1.amazonaws.com ..",
      "command_examples": "Examples\n\nTo get an authorization token for your default registry\n\nThe following get-authorization-token example command gets an authorization token for your default registry.\n\naws ecr get-authorization-token\n\n\nOutput:\n\n{\n    \"authorizationData\": [\n        {\n            \"authorizationToken\": \"QVdTOkN...\",\n            \"expiresAt\": 1448875853.241,\n            \"proxyEndpoint\": \"https://123456789012.dkr.ecr.us-west-2.amazonaws.com\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "get-download-url-for-layer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/get-download-url-for-layer.html",
      "command_description": "Description\n\nRetrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You can only get URLs for image layers that are referenced in an image.\n\nWhen an image is pulled, the GetDownloadUrlForLayer API is called once per image layer that is not already cached.\n\nNote\n\nThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the docker CLI to pull, tag, and push images.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-download-url-for-layer\n[--registry-id <value>]\n--repository-name <value>\n--layer-digest <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--layer-digest <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository that is associated with the image layer to download.\n\n--layer-digest (string)\n\nThe digest of the image layer to download.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndownloadUrl -> (string)\n\nThe pre-signed Amazon S3 download URL for the requested layer.\n\nlayerDigest -> (string)\n\nThe digest of the image layer to download.",
      "command_examples": "Examples\n\nTo get the download URL of a layer\n\nThe following get-download-url-for-layer example displays the download URL of a layer with the digest sha256:6171c7451a50945f8ddd72f7732cc04d7a0d1f48138a426b2e64387fdeb834ed in the cluster-autoscaler repository.\n\naws ecr get-download-url-for-layer \\\n    --repository-name cluster-autoscaler  \\\n    --layer-digest sha256:6171c7451a50945f8ddd72f7732cc04d7a0d1f48138a426b2e64387fdeb834ed\n\n\nOutput:\n\n{\n    \"downloadUrl\": \"https://prod-us-west-2-starport-layer-bucket.s3.us-west-2.amazonaws.com/e501-012345678910-9cb60dc0-7284-5643-3987-da6dac0465f0/04620aac-66a5-4167-8232-55ee7ef6d565?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20190814T220617Z&X-Amz-SignedHeaders=host&X-Amz-Expires=3600&X-Amz-Credential=AKIA32P3D2JDNMVAJLGF%2F20190814%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Signature=9161345894947a1672467a0da7a1550f2f7157318312fe4941b59976239c3337\",\n    \"layerDigest\": \"sha256:6171c7451a50945f8ddd72f7732cc04d7a0d1f48138a426b2e64387fdeb834ed\"\n}\n"
    },
    {
      "command_name": "get-lifecycle-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/get-lifecycle-policy.html",
      "command_description": "Description\n\nRetrieves the lifecycle policy for the specified repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-lifecycle-policy\n[--registry-id <value>]\n--repository-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nlifecyclePolicyText -> (string)\n\nThe JSON lifecycle policy text.\n\nlastEvaluatedAt -> (timestamp)\n\nThe time stamp of the last time that the lifecycle policy was run.",
      "command_examples": "Examples\n\nTo retrieve a lifecycle policy\n\nThe following get-lifecycle-policy example displays details of the lifecycle policy for the specified repository in the default registry for the account.\n\naws ecr get-lifecycle-policy \\\n    --repository-name \"project-a/amazon-ecs-sample\"\n\n\nOutput:\n\n{\n     \"registryId\": \"123456789012\",\n     \"repositoryName\": \"project-a/amazon-ecs-sample\",\n     \"lifecyclePolicyText\": \"{\\\"rules\\\":[{\\\"rulePriority\\\":1,\\\"description\\\":\\\"Expire images older than 14 days\\\",\\\"selection\\\":{\\\"tagStatus\\\":\\\"untagged\\\",\\\"countType\\\":\\\"sinceImagePushed\\\",\\\"countUnit\\\":\\\"days\\\",\\\"countNumber\\\":14},\\\"action\\\":{\\\"type\\\":\\\"expire\\\"}}]}\",\n     \"lastEvaluatedAt\": 1504295007.0\n}\n\n\nFor more information, see Lifecycle Policies in the Amazon ECR User Guide."
    },
    {
      "command_name": "get-lifecycle-policy-preview",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/get-lifecycle-policy-preview.html",
      "command_description": "Description\n\nRetrieves the results of the lifecycle policy preview request for the specified repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-lifecycle-policy-preview is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: previewResults",
      "command_synopsis": "Synopsis\n  get-lifecycle-policy-preview\n[--registry-id <value>]\n--repository-name <value>\n[--image-ids <value>]\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--image-ids <value>]",
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository.\n\n--image-ids (list)\n\nThe list of imageIDs to be included.\n\n(structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nShorthand Syntax:\n\nimageDigest=string,imageTag=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"imageDigest\": \"string\",\n    \"imageTag\": \"string\"\n  }\n  ...\n]\n\n\n--filter (structure)\n\nAn optional parameter that filters results based on image tag status and all tags, if tagged.\n\ntagStatus -> (string)\n\nThe tag status of the image.\n\nShorthand Syntax:\n\ntagStatus=string\n\n\nJSON Syntax:\n\n{\n  \"tagStatus\": \"TAGGED\"|\"UNTAGGED\"|\"ANY\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nlifecyclePolicyText -> (string)\n\nThe JSON lifecycle policy text.\n\nstatus -> (string)\n\nThe status of the lifecycle policy preview request.\n\nnextToken -> (string)\n\nThe nextToken value to include in a future GetLifecyclePolicyPreview request. When the results of a GetLifecyclePolicyPreview request exceed maxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return.\n\npreviewResults -> (list)\n\nThe results of the lifecycle policy preview request.\n\n(structure)\n\nThe result of the lifecycle policy preview.\n\nimageTags -> (list)\n\nThe list of tags associated with this image.\n\n(string)\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimagePushedAt -> (timestamp)\n\nThe date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\n\naction -> (structure)\n\nThe type of action to be taken.\n\ntype -> (string)\n\nThe type of action to be taken.\n\nappliedRulePriority -> (integer)\n\nThe priority of the applied rule.\n\nsummary -> (structure)\n\nThe list of images that is returned as a result of the action.\n\nexpiringImageTotalCount -> (integer)\n\nThe number of expiring images.",
      "command_examples": "Examples\n\nTo retrieve details for a lifecycle policy preview\n\nThe following get-lifecycle-policy-preview example retrieves the result of a lifecycle policy preview for the specified repository in the default registry for an account.\n\nCommand:\n\naws ecr get-lifecycle-policy-preview \\\n    --repository-name \"project-a/amazon-ecs-sample\"\n\n\nOutput:\n\n{\n    \"registryId\": \"012345678910\",\n    \"repositoryName\": \"project-a/amazon-ecs-sample\",\n    \"lifecyclePolicyText\": \"{\\n    \\\"rules\\\": [\\n        {\\n            \\\"rulePriority\\\": 1,\\n            \\\"description\\\": \\\"Expire images older than 14 days\\\",\\n            \\\"selection\\\": {\\n                \\\"tagStatus\\\": \\\"untagged\\\",\\n                \\\"countType\\\": \\\"sinceImagePushed\\\",\\n                \\\"countUnit\\\": \\\"days\\\",\\n                \\\"countNumber\\\": 14\\n            },\\n            \\\"action\\\": {\\n                \\\"type\\\": \\\"expire\\\"\\n            }\\n        }\\n    ]\\n}\\n\",\n    \"status\": \"COMPLETE\",\n    \"previewResults\": [],\n    \"summary\": {\n        \"expiringImageTotalCount\": 0\n    }\n}\n\n\nFor more information, see Lifecycle Policies in the Amazon ECR User Guide."
    },
    {
      "command_name": "get-login-password",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/get-login-password.html",
      "command_description": "Description\n\nTo log in to an Amazon ECR registry\n\nThis command retrieves and displays an authentication token using the GetAuthorizationToken API that you can use to authenticate to an Amazon ECR registry. You can pass the authorization token to the login command of the container client of your preference, such as the Docker CLI. After you have authenticated to an Amazon ECR registry with this command, you can use the client to push and pull images from that registry as long as your IAM principal has access to do so until the token expires. The authorization token is valid for 12 hours.\n\nThis command is supported using the latest version of AWS CLI version 2 or in v1.17.10 or later of AWS CLI version 1. For information on updating to the latest AWS CLI version, see Installing the AWS CLI in the AWS Command Line Interface User Guide.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\nget-login-password\n",
      "command_options": [],
      "command_options_description": "Options\n\nNone\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_examples": "Examples\n\nTo retrieve a password to authenticate to a registry\n\nThe following get-login-password displays a password that you can use with a container client of your choice to authenticate to any Amazon ECR registry that your IAM principal has access to.\n\naws ecr get-login-password\n\n\nOutput:\n\n<password>\n\n\nTo use with the Docker CLI, pipe the output of the get-login-password command to the docker login command. When retrieving the password, ensure that you specify the same Region that your Amazon ECR registry exists in.\n\naws ecr get-login-password \\\n    --region <region> \\\n| docker login \\\n    --username AWS \\\n    --password-stdin <aws_account_id>.dkr.ecr.<region>.amazonaws.com\n\n\nFor more information, see Registry Authentication in the Amazon ECR User Guide."
    },
    {
      "command_name": "get-registry-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/get-registry-policy.html",
      "command_description": "Description\n\nRetrieves the permissions policy for a registry.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-registry-policy\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe ID of the registry.\n\npolicyText -> (string)\n\nThe JSON text of the permissions policy for a registry."
    },
    {
      "command_name": "get-repository-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/get-repository-policy.html",
      "command_description": "Description\n\nRetrieves the repository policy for the specified repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-repository-policy\n[--registry-id <value>]\n--repository-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository with the policy to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\npolicyText -> (string)\n\nThe JSON repository policy text associated with the repository.",
      "command_examples": "Examples\n\nTo retrieve the repository policy for a repository\n\nThe following get-repository-policy example displays details about the repository policy for the cluster-autoscaler repository.\n\naws ecr get-repository-policy \\\n    --repository-name cluster-autoscaler\n\n\nOutput:\n\n{\n    \"registryId\": \"012345678910\",\n    \"repositoryName\": \"cluster-autoscaler\",\n    \"policyText\": \"{\\n  \\\"Version\\\" : \\\"2008-10-17\\\",\\n  \\\"Statement\\\" : [ {\\n    \\\"Sid\\\" : \\\"allow public pull\\\",\\n    \\\"Effect\\\" : \\\"Allow\\\",\\n    \\\"Principal\\\" : \\\"*\\\",\\n    \\\"Action\\\" : [ \\\"ecr:BatchCheckLayerAvailability\\\", \\\"ecr:BatchGetImage\\\", \\\"ecr:GetDownloadUrlForLayer\\\" ]\\n  } ]\\n}\"\n}\n"
    },
    {
      "command_name": "initiate-layer-upload",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/initiate-layer-upload.html",
      "command_description": "Description\n\nNotifies Amazon ECR that you intend to upload an image layer.\n\nWhen an image is pushed, the InitiateLayerUpload API is called once per image layer that has not already been uploaded. Whether or not an image layer has been uploaded is determined by the BatchCheckLayerAvailability API action.\n\nNote\n\nThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the docker CLI to pull, tag, and push images.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  initiate-layer-upload\n[--registry-id <value>]\n--repository-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository to which you intend to upload layers.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nuploadId -> (string)\n\nThe upload ID for the layer upload. This parameter is passed to further UploadLayerPart and CompleteLayerUpload operations.\n\npartSize -> (long)\n\nThe size, in bytes, that Amazon ECR expects future layer part uploads to be.",
      "command_examples": "Examples\n\nTo initiate an image layer upload\n\nThe following initiate-layer-upload example initiates an image layer upload to the layer-test repository.\n\naws ecr initiate-layer-upload \\\n    --repository-name layer-test\n\n\nOutput:\n\n{\n    \"partSize\": 10485760,\n    \"uploadId\": \"6cb64b8a-9378-0e33-2ab1-b780fab8a9e9\"\n}\n"
    },
    {
      "command_name": "list-images",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/list-images.html",
      "command_description": "Description\n\nLists all the image IDs for the specified repository.\n\nYou can filter images based on whether or not they are tagged by using the tagStatus filter and specifying either TAGGED , UNTAGGED or ANY . For example, you can filter your results to return only UNTAGGED images and then pipe that result to a BatchDeleteImage operation to delete them. Or, you can filter your results to return only TAGGED images to list all of the tags in your repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-images is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: imageIds",
      "command_synopsis": "Synopsis\n  list-images\n[--registry-id <value>]\n--repository-name <value>\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe repository with image IDs to be listed.\n\n--filter (structure)\n\nThe filter key and value with which to filter your ListImages results.\n\ntagStatus -> (string)\n\nThe tag status with which to filter your ListImages results. You can filter results based on whether they are TAGGED or UNTAGGED .\n\nShorthand Syntax:\n\ntagStatus=string\n\n\nJSON Syntax:\n\n{\n  \"tagStatus\": \"TAGGED\"|\"UNTAGGED\"|\"ANY\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nimageIds -> (list)\n\nThe list of image IDs for the requested repository.\n\n(structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nnextToken -> (string)\n\nThe nextToken value to include in a future ListImages request. When the results of a ListImages request exceed maxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return.",
      "command_examples": "Examples\n\nTo list the images in a repository\n\nThe following list-images example displays a list of the images in the cluster-autoscaler repository.\n\naws ecr list-images \\\n    --repository-name cluster-autoscaler\n\n\nOutput:\n\n{\n    \"imageIds\": [\n        {\n            \"imageDigest\": \"sha256:99c6fb4377e9a420a1eb3b410a951c9f464eff3b7dbc76c65e434e39b94b6570\",\n            \"imageTag\": \"v1.13.8\"\n        },\n        {\n            \"imageDigest\": \"sha256:99c6fb4377e9a420a1eb3b410a951c9f464eff3b7dbc76c65e434e39b94b6570\",\n            \"imageTag\": \"v1.13.7\"\n        },\n        {\n            \"imageDigest\": \"sha256:4a1c6567c38904384ebc64e35b7eeddd8451110c299e3368d2210066487d97e5\",\n            \"imageTag\": \"v1.13.6\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/list-tags-for-resource.html",
      "command_description": "Description\n\nList the tags for an Amazon ECR resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (list)\n\nThe tags for the resource.\n\n(structure)\n\nThe metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nKey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).",
      "command_examples": "Examples\n\nTo list the tags for repository\n\nThe following list-tags-for-resource example displays a list of the tags associated with the hello-world repository.\n\naws ecr list-tags-for-resource \\\n    --resource-arn arn:aws:ecr:us-west-2:012345678910:repository/hello-world\n\n\nOutput:\n\n{\n    \"tags\": [\n        {\n            \"Key\": \"Stage\",\n            \"Value\": \"Integ\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "put-image",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/put-image.html",
      "command_description": "Description\n\nCreates or updates the image manifest and tags associated with an image.\n\nWhen an image is pushed and all new image layers have been uploaded, the PutImage API is called once to create or update the image manifest and the tags associated with the image.\n\nNote\n\nThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the docker CLI to pull, tag, and push images.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-image\n[--registry-id <value>]\n--repository-name <value>\n--image-manifest <value>\n[--image-manifest-media-type <value>]\n[--image-tag <value>]\n[--image-digest <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--image-manifest <value>",
        "[--image-manifest-media-type <value>]",
        "[--image-tag <value>]",
        "[--image-digest <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository in which to put the image.\n\n--image-manifest (string)\n\nThe image manifest corresponding to the image to be uploaded.\n\n--image-manifest-media-type (string)\n\nThe media type of the image manifest. If you push an image manifest that does not contain the mediaType field, you must specify the imageManifestMediaType in the request.\n\n--image-tag (string)\n\nThe tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or Open Container Initiative (OCI) formats.\n\n--image-digest (string)\n\nThe image digest of the image manifest corresponding to the image.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nimage -> (structure)\n\nDetails of the image uploaded.\n\nregistryId -> (string)\n\nThe Amazon Web Services account ID associated with the registry containing the image.\n\nrepositoryName -> (string)\n\nThe name of the repository associated with the image.\n\nimageId -> (structure)\n\nAn object containing the image tag and image digest associated with an image.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nimageManifest -> (string)\n\nThe image manifest associated with the image.\n\nimageManifestMediaType -> (string)\n\nThe manifest media type of the image.",
      "command_examples": "Examples\n\nTo retag an image with its manifest\n\nThe following put-image example creates a new tag in the hello-world repository with an existing image manifest.\n\naws ecr put-image \\\n    --repository-name hello-world \\\n    --image-tag 2019.08 \\\n    --image-manifest file://hello-world.manifest.json\n\n\nContents of hello-world.manifest.json:\n\n{\n    \"schemaVersion\": 2,\n    \"mediaType\": \"application/vnd.docker.distribution.manifest.v2+json\",\n    \"config\": {\n        \"mediaType\": \"application/vnd.docker.container.image.v1+json\",\n        \"size\": 5695,\n        \"digest\": \"sha256:cea5fe7701b7db3dd1c372f3cea6f43cdda444fcc488f530829145e426d8b980\"\n    },\n    \"layers\": [\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 39096921,\n            \"digest\": \"sha256:d8868e50ac4c7104d2200d42f432b661b2da8c1e417ccfae217e6a1e04bb9295\"\n        },\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 57938,\n            \"digest\": \"sha256:83251ac64627fc331584f6c498b3aba5badc01574e2c70b2499af3af16630eed\"\n        },\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 423,\n            \"digest\": \"sha256:589bba2f1b36ae56f0152c246e2541c5aa604b058febfcf2be32e9a304fec610\"\n        },\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 680,\n            \"digest\": \"sha256:d62ecaceda3964b735cdd2af613d6bb136a52c1da0838b2ff4b4dab4212bcb1c\"\n        },\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 162,\n            \"digest\": \"sha256:6d93b41cfc6bf0d2522b7cf61588de4cd045065b36c52bd3aec2ba0622b2b22b\"\n        },\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 28268840,\n            \"digest\": \"sha256:6986b4d4c07932c680b3587f2eac8b0e013568c003cc23b04044628a5c5e599f\"\n        },\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 35369152,\n            \"digest\": \"sha256:8c5ec60f10102dc8da0649d866c7c2f706e459d0bdc25c83ad2de86f4996c276\"\n        },\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 155,\n            \"digest\": \"sha256:cde50b1c594539c5f67cbede9aef95c9ae321ccfb857f7b251b45b84198adc85\"\n        },\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 28737,\n            \"digest\": \"sha256:2e102807ab72a73fc9abf53e8c50e421bdc337a0a8afcb242176edeec65977e4\"\n        },\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 190,\n            \"digest\": \"sha256:fc379bbd5ed37808772bef016553a297356c59b8f134659e6ee4ecb563c2f5a7\"\n        },\n        {\n            \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n            \"size\": 28748,\n            \"digest\": \"sha256:021db240dfccf5a1aff19507d17c0177e5888e518acf295b52204b1825e8b7ee\"\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"image\": {\n        \"registryId\": \"130757420319\",\n        \"repositoryName\": \"hello-world\",\n        \"imageId\": {\n            \"imageDigest\": \"sha256:8ece96b74f87652876199d83bd107d0435a196133af383ac54cb82b6cc5283ae\",\n            \"imageTag\": \"2019.08\"\n        },\n        \"imageManifest\": \"{\\n  \\\"schemaVersion\\\": 2,\\n  \\\"mediaType\\\": \\\"application/vnd.docker.distribution.manifest.v2+json\\\",\\n  \\\"config\\\": {\\n    \\\"mediaType\\\": \\\"application/vnd.docker.container.image.v1+json\\\",\\n    \\\"size\\\": 5695,\\n    \\\"digest\\\": \\\"sha256:cea5fe7701b7db3dd1c372f3cea6f43cdda444fcc488f530829145e426d8b980\\\"\\n  },\\n  \\\"layers\\\": [\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 39096921,\\n      \\\"digest\\\": \\\"sha256:d8868e50ac4c7104d2200d42f432b661b2da8c1e417ccfae217e6a1e04bb9295\\\"\\n    },\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 57938,\\n      \\\"digest\\\": \\\"sha256:83251ac64627fc331584f6c498b3aba5badc01574e2c70b2499af3af16630eed\\\"\\n    },\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 423,\\n      \\\"digest\\\": \\\"sha256:589bba2f1b36ae56f0152c246e2541c5aa604b058febfcf2be32e9a304fec610\\\"\\n    },\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 680,\\n      \\\"digest\\\": \\\"sha256:d62ecaceda3964b735cdd2af613d6bb136a52c1da0838b2ff4b4dab4212bcb1c\\\"\\n    },\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 162,\\n      \\\"digest\\\": \\\"sha256:6d93b41cfc6bf0d2522b7cf61588de4cd045065b36c52bd3aec2ba0622b2b22b\\\"\\n    },\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 28268840,\\n      \\\"digest\\\": \\\"sha256:6986b4d4c07932c680b3587f2eac8b0e013568c003cc23b04044628a5c5e599f\\\"\\n    },\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 35369152,\\n      \\\"digest\\\": \\\"sha256:8c5ec60f10102dc8da0649d866c7c2f706e459d0bdc25c83ad2de86f4996c276\\\"\\n    },\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 155,\\n      \\\"digest\\\": \\\"sha256:cde50b1c594539c5f67cbede9aef95c9ae321ccfb857f7b251b45b84198adc85\\\"\\n    },\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 28737,\\n      \\\"digest\\\": \\\"sha256:2e102807ab72a73fc9abf53e8c50e421bdc337a0a8afcb242176edeec65977e4\\\"\\n    },\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 190,\\n      \\\"digest\\\": \\\"sha256:fc379bbd5ed37808772bef016553a297356c59b8f134659e6ee4ecb563c2f5a7\\\"\\n    },\\n    {\\n      \\\"mediaType\\\": \\\"application/vnd.docker.image.rootfs.diff.tar.gzip\\\",\\n      \\\"size\\\": 28748,\\n      \\\"digest\\\": \\\"sha256:021db240dfccf5a1aff19507d17c0177e5888e518acf295b52204b1825e8b7ee\\\"\\n    }\\n  ]\\n}\\n\"\n    }\n}\n"
    },
    {
      "command_name": "put-image-scanning-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/put-image-scanning-configuration.html",
      "command_description": "Description\n\nUpdates the image scanning configuration for the specified repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-image-scanning-configuration\n[--registry-id <value>]\n--repository-name <value>\n--image-scanning-configuration <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--image-scanning-configuration <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository in which to update the image scanning configuration setting. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository in which to update the image scanning configuration setting.\n\n--image-scanning-configuration (structure)\n\nThe image scanning configuration for the repository. This setting determines whether images are scanned for known vulnerabilities after being pushed to the repository.\n\nscanOnPush -> (boolean)\n\nThe setting that determines whether images are scanned after being pushed to a repository. If set to true , images will be scanned after being pushed. If this parameter is not specified, it will default to false and images will not be scanned unless a scan is manually started with the API_StartImageScan API.\n\nShorthand Syntax:\n\nscanOnPush=boolean\n\n\nJSON Syntax:\n\n{\n  \"scanOnPush\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nimageScanningConfiguration -> (structure)\n\nThe image scanning configuration setting for the repository.\n\nscanOnPush -> (boolean)\n\nThe setting that determines whether images are scanned after being pushed to a repository. If set to true , images will be scanned after being pushed. If this parameter is not specified, it will default to false and images will not be scanned unless a scan is manually started with the API_StartImageScan API.",
      "command_examples": "Examples\n\nTo update the image scanning configuration for a repository\n\nThe following put-image-scanning-configuration example updates the image scanning configuration for the specified repository.\n\naws ecr put-image-scanning-configuration \\\n    --repository-name sample-repo \\\n    --image-scanning-configuration scanOnPush=true\n\n\nOutput:\n\n{\n   \"registryId\": \"012345678910\",\n   \"repositoryName\": \"sample-repo\",\n   \"imageScanningConfiguration\": {\n     \"scanOnPush\": true\n   }\n}\n\n\nFor more information, see Image Scanning in the Amazon ECR User Guide."
    },
    {
      "command_name": "put-image-tag-mutability",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/put-image-tag-mutability.html",
      "command_description": "Description\n\nUpdates the image tag mutability settings for the specified repository. For more information, see Image tag mutability in the Amazon Elastic Container Registry User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-image-tag-mutability\n[--registry-id <value>]\n--repository-name <value>\n--image-tag-mutability <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--image-tag-mutability <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository in which to update the image tag mutability settings. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository in which to update the image tag mutability settings.\n\n--image-tag-mutability (string)\n\nThe tag mutability setting for the repository. If MUTABLE is specified, image tags can be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.\n\nPossible values:\n\nMUTABLE\n\nIMMUTABLE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nimageTagMutability -> (string)\n\nThe image tag mutability setting for the repository.",
      "command_examples": "Examples\n\nTo update the image tag mutability setting for a repository\n\nThe following put-image-tag-mutability example configures the specified repository for tag immutability. This prevents all image tags within the repository from being overwritten.\n\naws ecr put-image-tag-mutability \\\n    --repository-name hello-repository \\\n    --image-tag-mutability IMMUTABLE\n\n\nOutput:\n\n{\n   \"registryId\": \"012345678910\",\n   \"repositoryName\": \"sample-repo\",\n   \"imageTagMutability\": \"IMMUTABLE\"\n}\n\n\nFor more information, see Image Tag Mutability in the Amazon ECR User Guide."
    },
    {
      "command_name": "put-lifecycle-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/put-lifecycle-policy.html",
      "command_description": "Description\n\nCreates or updates the lifecycle policy for the specified repository. For more information, see Lifecycle policy template .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-lifecycle-policy\n[--registry-id <value>]\n--repository-name <value>\n--lifecycle-policy-text <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--lifecycle-policy-text <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository to receive the policy.\n\n--lifecycle-policy-text (string)\n\nThe JSON repository policy text to apply to the repository.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nlifecyclePolicyText -> (string)\n\nThe JSON repository policy text.",
      "command_examples": "Examples\n\nTo create a lifecycle policy\n\nThe following put-lifecycle-policy example creates a lifecycle policy for the specified repository in the default registry for an account.\n\naws ecr put-lifecycle-policy \\\n    --repository-name \"project-a/amazon-ecs-sample\" \\\n    --lifecycle-policy-text \"file://policy.json\"\n\n\nContents of policy.json:\n\n{\n   \"rules\": [\n       {\n           \"rulePriority\": 1,\n           \"description\": \"Expire images older than 14 days\",\n           \"selection\": {\n               \"tagStatus\": \"untagged\",\n               \"countType\": \"sinceImagePushed\",\n               \"countUnit\": \"days\",\n               \"countNumber\": 14\n           },\n           \"action\": {\n               \"type\": \"expire\"\n           }\n       }\n   ]\n}\n\n\nOutput:\n\n{\n   \"registryId\": \"<aws_account_id>\",\n   \"repositoryName\": \"project-a/amazon-ecs-sample\",\n   \"lifecyclePolicyText\": \"{\\\"rules\\\":[{\\\"rulePriority\\\":1,\\\"description\\\":\\\"Expire images older than 14 days\\\",\\\"selection\\\":{\\\"tagStatus\\\":\\\"untagged\\\",\\\"countType\\\":\\\"sinceImagePushed\\\",\\\"countUnit\\\":\\\"days\\\",\\\"countNumber\\\":14},\\\"action\\\":{\\\"type\\\":\\\"expire\\\"}}]}\"\n}\n\n\nFor more information, see Lifecycle Policies in the Amazon ECR User Guide."
    },
    {
      "command_name": "put-registry-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/put-registry-policy.html",
      "command_description": "Description\n\nCreates or updates the permissions policy for your registry.\n\nA registry policy is used to specify permissions for another Amazon Web Services account and is used when configuring cross-account replication. For more information, see Registry permissions in the Amazon Elastic Container Registry User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-registry-policy\n--policy-text <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-text <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-text (string)\n\nThe JSON policy text to apply to your registry. The policy text follows the same format as IAM policy text. For more information, see Registry permissions in the Amazon Elastic Container Registry User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID.\n\npolicyText -> (string)\n\nThe JSON policy text for your registry."
    },
    {
      "command_name": "put-replication-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/put-replication-configuration.html",
      "command_description": "Description\n\nCreates or updates the replication configuration for a registry. The existing replication configuration for a repository can be retrieved with the DescribeRegistry API action. The first time the PutReplicationConfiguration API is called, a service-linked IAM role is created in your account for the replication process. For more information, see Using service-linked roles for Amazon ECR in the Amazon Elastic Container Registry User Guide .\n\nNote\n\nWhen configuring cross-account replication, the destination account must grant the source account permission to replicate. This permission is controlled using a registry permissions policy. For more information, see PutRegistryPolicy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-replication-configuration\n--replication-configuration <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--replication-configuration <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--replication-configuration (structure)\n\nAn object representing the replication configuration for a registry.\n\nrules -> (list)\n\nAn array of objects representing the replication destinations and repository filters for a replication configuration.\n\n(structure)\n\nAn array of objects representing the replication destinations and repository filters for a replication configuration.\n\ndestinations -> (list)\n\nAn array of objects representing the destination for a replication rule.\n\n(structure)\n\nAn array of objects representing the destination for a replication rule.\n\nregion -> (string)\n\nThe Region to replicate to.\n\nregistryId -> (string)\n\nThe Amazon Web Services account ID of the Amazon ECR private registry to replicate to. When configuring cross-Region replication within your own registry, specify your own account ID.\n\nrepositoryFilters -> (list)\n\nAn array of objects representing the filters for a replication rule. Specifying a repository filter for a replication rule provides a method for controlling which repositories in a private registry are replicated.\n\n(structure)\n\nThe filter settings used with image replication. Specifying a repository filter to a replication rule provides a method for controlling which repositories in a private registry are replicated. If no repository filter is specified, all images in the repository are replicated.\n\nfilter -> (string)\n\nThe repository filter details. When the PREFIX_MATCH filter type is specified, this value is required and should be the repository name prefix to configure replication for.\n\nfilterType -> (string)\n\nThe repository filter type. The only supported value is PREFIX_MATCH , which is a repository name prefix specified with the filter parameter.\n\nJSON Syntax:\n\n{\n  \"rules\": [\n    {\n      \"destinations\": [\n        {\n          \"region\": \"string\",\n          \"registryId\": \"string\"\n        }\n        ...\n      ],\n      \"repositoryFilters\": [\n        {\n          \"filter\": \"string\",\n          \"filterType\": \"PREFIX_MATCH\"\n        }\n        ...\n      ]\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nreplicationConfiguration -> (structure)\n\nThe contents of the replication configuration for the registry.\n\nrules -> (list)\n\nAn array of objects representing the replication destinations and repository filters for a replication configuration.\n\n(structure)\n\nAn array of objects representing the replication destinations and repository filters for a replication configuration.\n\ndestinations -> (list)\n\nAn array of objects representing the destination for a replication rule.\n\n(structure)\n\nAn array of objects representing the destination for a replication rule.\n\nregion -> (string)\n\nThe Region to replicate to.\n\nregistryId -> (string)\n\nThe Amazon Web Services account ID of the Amazon ECR private registry to replicate to. When configuring cross-Region replication within your own registry, specify your own account ID.\n\nrepositoryFilters -> (list)\n\nAn array of objects representing the filters for a replication rule. Specifying a repository filter for a replication rule provides a method for controlling which repositories in a private registry are replicated.\n\n(structure)\n\nThe filter settings used with image replication. Specifying a repository filter to a replication rule provides a method for controlling which repositories in a private registry are replicated. If no repository filter is specified, all images in the repository are replicated.\n\nfilter -> (string)\n\nThe repository filter details. When the PREFIX_MATCH filter type is specified, this value is required and should be the repository name prefix to configure replication for.\n\nfilterType -> (string)\n\nThe repository filter type. The only supported value is PREFIX_MATCH , which is a repository name prefix specified with the filter parameter."
    },
    {
      "command_name": "set-repository-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/set-repository-policy.html",
      "command_description": "Description\n\nApplies a repository policy to the specified repository to control access permissions. For more information, see Amazon ECR Repository policies in the Amazon Elastic Container Registry User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-repository-policy\n[--registry-id <value>]\n--repository-name <value>\n--policy-text <value>\n[--force | --no-force]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--policy-text <value>",
        "[--force | --no-force]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository to receive the policy.\n\n--policy-text (string)\n\nThe JSON repository policy text to apply to the repository. For more information, see Amazon ECR repository policies in the Amazon Elastic Container Registry User Guide .\n\n--force | --no-force (boolean)\n\nIf the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the SetRepositoryPolicy operation. This is intended to prevent accidental repository lock outs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\npolicyText -> (string)\n\nThe JSON repository policy text applied to the repository.",
      "command_examples": "Examples\n\nTo set the repository policy for a repository\n\nThe following set-repository-policy example attaches a repository policy contained in a file to the cluster-autoscaler repository.\n\naws ecr set-repository-policy \\\n    --repository-name cluster-autoscaler \\\n    --policy-text file://my-policy.json\n\n\nContents of my-policy.json:\n\n{\n    \"Version\" : \"2008-10-17\",\n    \"Statement\" : [\n        {\n            \"Sid\" : \"allow public pull\",\n            \"Effect\" : \"Allow\",\n            \"Principal\" : \"*\",\n            \"Action\" : [\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:BatchGetImage\",\n                \"ecr:GetDownloadUrlForLayer\"\n            ]\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"registryId\": \"012345678910\",\n    \"repositoryName\": \"cluster-autoscaler\",\n    \"policyText\": \"{\\n  \\\"Version\\\" : \\\"2008-10-17\\\",\\n  \\\"Statement\\\" : [ {\\n    \\\"Sid\\\" : \\\"allow public pull\\\",\\n    \\\"Effect\\\" : \\\"Allow\\\",\\n    \\\"Principal\\\" : \\\"*\\\",\\n    \\\"Action\\\" : [ \\\"ecr:BatchCheckLayerAvailability\\\", \\\"ecr:BatchGetImage\\\", \\\"ecr:GetDownloadUrlForLayer\\\" ]\\n  } ]\\n}\"\n}\n"
    },
    {
      "command_name": "start-image-scan",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/start-image-scan.html",
      "command_description": "Description\n\nStarts an image vulnerability scan. An image scan can only be started once per 24 hours on an individual image. This limit includes if an image was scanned on initial push. For more information, see Image scanning in the Amazon Elastic Container Registry User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-image-scan\n[--registry-id <value>]\n--repository-name <value>\n--image-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--image-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository in which to start an image scan request. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository that contains the images to scan.\n\n--image-id (structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nShorthand Syntax:\n\nimageDigest=string,imageTag=string\n\n\nJSON Syntax:\n\n{\n  \"imageDigest\": \"string\",\n  \"imageTag\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nimageId -> (structure)\n\nAn object with identifying information for an image in an Amazon ECR repository.\n\nimageDigest -> (string)\n\nThe sha256 digest of the image manifest.\n\nimageTag -> (string)\n\nThe tag used for the image.\n\nimageScanStatus -> (structure)\n\nThe current state of the scan.\n\nstatus -> (string)\n\nThe current state of an image scan.\n\ndescription -> (string)\n\nThe description of the image scan status.",
      "command_examples": "Examples\n\nTo start an image vulnerability scan\n\nThe following start-image-scan example starts an image scan for and specified by the image digest in the specified repository.\n\naws ecr start-image-scan \\\n    --repository-name sample-repo \\\n    --image-id imageDigest=sha256:74b2c688c700ec95a93e478cdb959737c148df3fbf5ea706abe0318726e885e6\n\n\nOutput:\n\n{\n   \"registryId\": \"012345678910\",\n   \"repositoryName\": \"sample-repo\",\n   \"imageId\": {\n       \"imageDigest\": \"sha256:74b2c688c700ec95a93e478cdb959737c148df3fbf5ea706abe0318726e885e6\"\n   },\n   \"imageScanStatus\": {\n       \"status\": \"IN_PROGRESS\"\n   }\n}\n\n\nFor more information, see Image Scanning in the Amazon ECR User Guide."
    },
    {
      "command_name": "start-lifecycle-policy-preview",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/start-lifecycle-policy-preview.html",
      "command_description": "Description\n\nStarts a preview of a lifecycle policy for the specified repository. This allows you to see the results before associating the lifecycle policy with the repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-lifecycle-policy-preview\n[--registry-id <value>]\n--repository-name <value>\n[--lifecycle-policy-text <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "[--lifecycle-policy-text <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository to be evaluated.\n\n--lifecycle-policy-text (string)\n\nThe policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nlifecyclePolicyText -> (string)\n\nThe JSON repository policy text.\n\nstatus -> (string)\n\nThe status of the lifecycle policy preview request.",
      "command_examples": "Examples\n\nTo create a lifecycle policy preview\n\nThe following start-lifecycle-policy-preview example creates a lifecycle policy preview defined by a JSON file for the specified repository.\n\naws ecr start-lifecycle-policy-preview \\\n    --repository-name \"project-a/amazon-ecs-sample\" \\\n    --lifecycle-policy-text \"file://policy.json\"\n\n\nContents of policy.json:\n\n{\n   \"rules\": [\n       {\n           \"rulePriority\": 1,\n           \"description\": \"Expire images older than 14 days\",\n           \"selection\": {\n               \"tagStatus\": \"untagged\",\n               \"countType\": \"sinceImagePushed\",\n               \"countUnit\": \"days\",\n               \"countNumber\": 14\n           },\n           \"action\": {\n               \"type\": \"expire\"\n           }\n       }\n   ]\n}\n\n\nOutput:\n\n{\n   \"registryId\": \"012345678910\",\n   \"repositoryName\": \"project-a/amazon-ecs-sample\",\n   \"lifecyclePolicyText\": \"{\\n    \\\"rules\\\": [\\n        {\\n            \\\"rulePriority\\\": 1,\\n            \\\"description\\\": \\\"Expire images older than 14 days\\\",\\n            \\\"selection\\\": {\\n                \\\"tagStatus\\\": \\\"untagged\\\",\\n                \\\"countType\\\": \\\"sinceImagePushed\\\",\\n                \\\"countUnit\\\": \\\"days\\\",\\n                \\\"countNumber\\\": 14\\n            },\\n            \\\"action\\\": {\\n                \\\"type\\\": \\\"expire\\\"\\n            }\\n        }\\n    ]\\n}\\n\",\n   \"status\": \"IN_PROGRESS\"\n}\n"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/tag-resource.html",
      "command_description": "Description\n\nAdds specified tags to a resource with the specified ARN. Existing tags on a resource are not changed if they are not specified in the request parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.\n\n--tags (list)\n\nThe tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\n(structure)\n\nThe metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nKey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo tag a repository\n\nThe following tag-resource example sets a tag with key Stage and value Integ on the hello-world repository.\n\naws ecr tag-resource \\\n    --resource-arn arn:aws:ecr:us-west-2:012345678910:repository/hello-world \\\n    --tags Key=Stage,Value=Integ\n\n\nThis command produces no output."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/untag-resource.html",
      "command_description": "Description\n\nDeletes specified tags from a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.\n\n--tag-keys (list)\n\nThe keys of the tags to be removed.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo untag a repository\n\nThe following untag-resource example removes the tag with the key Stage from the hello-world repository.\n\naws ecr untag-resource \\\n    --resource-arn arn:aws:ecr:us-west-2:012345678910:repository/hello-world \\\n    --tag-keys Stage\n\n\nThis command produces no output."
    },
    {
      "command_name": "upload-layer-part",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/upload-layer-part.html",
      "command_description": "Description\n\nUploads an image layer part to Amazon ECR.\n\nWhen an image is pushed, each new image layer is uploaded in parts. The maximum size of each image layer part can be 20971520 bytes (or about 20MB). The UploadLayerPart API is called once per each new image layer part.\n\nNote\n\nThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the docker CLI to pull, tag, and push images.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  upload-layer-part\n[--registry-id <value>]\n--repository-name <value>\n--upload-id <value>\n--part-first-byte <value>\n--part-last-byte <value>\n--layer-part-blob <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--repository-name <value>",
        "--upload-id <value>",
        "--part-first-byte <value>",
        "--part-last-byte <value>",
        "--layer-part-blob <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (string)\n\nThe Amazon Web Services account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.\n\n--repository-name (string)\n\nThe name of the repository to which you are uploading layer parts.\n\n--upload-id (string)\n\nThe upload ID from a previous InitiateLayerUpload operation to associate with the layer part upload.\n\n--part-first-byte (long)\n\nThe position of the first byte of the layer part witin the overall image layer.\n\n--part-last-byte (long)\n\nThe position of the last byte of the layer part within the overall image layer.\n\n--layer-part-blob (blob)\n\nThe base64-encoded layer part payload.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nregistryId -> (string)\n\nThe registry ID associated with the request.\n\nrepositoryName -> (string)\n\nThe repository name associated with the request.\n\nuploadId -> (string)\n\nThe upload ID associated with the request.\n\nlastByteReceived -> (long)\n\nThe integer value of the last byte received in the request.",
      "command_examples": "Examples\n\nTo upload a layer part\n\nThis following upload-layer-part uploads an image layer part to the layer-test repository.\n\naws ecr upload-layer-part \\\n    --repository-name layer-test \\\n    --upload-id 6cb64b8a-9378-0e33-2ab1-b780fab8a9e9 \\\n    --part-first-byte 0 \\\n    --part-last-byte 8323314 \\\n    --layer-part-blob fileb:///var/lib/docker/image/overlay2/layerdb/sha256/ff986b10a018b48074e6d3a68b39aad8ccc002cdad912d4148c0f92b3729323e/layer.b64\n\n\nOutput:\n\n{\n    \"uploadId\": \"6cb64b8a-9378-0e33-2ab1-b780fab8a9e9\",\n    \"registryId\": \"012345678910\",\n    \"lastByteReceived\": 8323314,\n    \"repositoryName\": \"layer-test\"\n}\n"
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description\n\nAmazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports private repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images.\n\nAmazon ECR has service endpoints in each supported Region. For more information, see Amazon ECR endpoints in the Amazon Web Services General Reference ."
}