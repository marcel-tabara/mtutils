{
  "service_name": "rekognition",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/index.html",
  "service_commands": [
    {
      "command_name": "compare-faces",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/compare-faces.html",
      "command_description": "Description\n\nCompares a face in the source input image with each of the 100 largest faces detected in the target input image.\n\nIf the source image contains multiple faces, the service detects the largest face and compares it with each face detected in the target image.\n\nNote\n\nCompareFaces uses machine learning algorithms, which are probabilistic. A false negative is an incorrect prediction that a face in the target image has a low similarity confidence score when compared to the face in the source image. To reduce the probability of false negatives, we recommend that you compare the target image against multiple source images. If you plan to use CompareFaces to make a decision that impacts an individual’s rights, privacy, or access to services, we recommend that you pass the result to a human for review and further validation before taking action.\n\nYou pass the input and target images either as base64-encoded image bytes or as references to images in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes isn’t supported. The image must be formatted as a PNG or JPEG file.\n\nIn response, the operation returns an array of face matches ordered by similarity score in descending order. For each face match, the response provides a bounding box of the face, facial landmarks, pose details (pitch, role, and yaw), quality (brightness and sharpness), and confidence value (indicating the level of confidence that the bounding box contains a face). The response also provides a similarity score, which indicates how closely the faces match.\n\nNote\n\nBy default, only faces with a similarity score of greater than or equal to 80% are returned in the response. You can change this value by specifying the SimilarityThreshold parameter.\n\nCompareFaces also returns an array of faces that don’t match the source image. For each face, it returns a bounding box, confidence value, landmarks, pose details, and quality. The response also returns information about the face in the source image, including the bounding box of the face and confidence value.\n\nThe QualityFilter input parameter allows you to filter out detected faces that don’t meet a required quality bar. The quality bar is based on a variety of common use cases. Use QualityFilter to set the quality bar by specifying LOW , MEDIUM , or HIGH . If you do not want to filter detected faces, specify NONE . The default value is NONE .\n\nIf the image doesn’t contain Exif metadata, CompareFaces returns orientation information for the source and target images. Use these values to display the images with the correct image orientation.\n\nIf no faces are detected in the source or target images, CompareFaces returns an InvalidParameterException error.\n\nNote\n\nThis is a stateless API operation. That is, data returned by this operation doesn’t persist.\n\nFor an example, see Comparing Faces in Images in the Amazon Rekognition Developer Guide.\n\nThis operation requires permissions to perform the rekognition:CompareFaces action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  compare-faces\n[--source-image <value>]\n[--target-image <value>]\n[--similarity-threshold <value>]\n[--quality-filter <value>]\n[--source-image-bytes <value>]\n[--target-image-bytes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--source-image <value>]",
        "[--target-image <value>]",
        "[--similarity-threshold <value>]",
        "[--quality-filter <value>]",
        "[--source-image-bytes <value>]",
        "[--target-image-bytes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--source-image (structure)\n\nThe input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.\n\nIf you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode image bytes passed using the Bytes field. For more information, see Images in the Amazon Rekognition developer guide.\n\nTo specify a local file use --source-image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--target-image (structure)\n\nThe target image as base64-encoded bytes or an S3 object. If you use the AWS CLI to call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.\n\nIf you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode image bytes passed using the Bytes field. For more information, see Images in the Amazon Rekognition developer guide.\n\nTo specify a local file use --target-image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--similarity-threshold (float)\n\nThe minimum level of confidence in the face matches that a match must meet to be included in the FaceMatches array.\n\n--quality-filter (string)\n\nA filter that specifies a quality bar for how much filtering is done to identify faces. Filtered faces aren’t compared. If you specify AUTO , Amazon Rekognition chooses the quality bar. If you specify LOW , MEDIUM , or HIGH , filtering removes all faces that don’t meet the chosen quality bar. The quality bar is based on a variety of common use cases. Low-quality detections can occur for a number of reasons. Some examples are an object that’s misidentified as a face, a face that’s too blurry, or a face with a pose that’s too extreme to use. If you specify NONE , no filtering is performed. The default value is NONE .\n\nTo use quality filtering, the collection you are using must be associated with version 3 of the face model or higher.\n\nPossible values:\n\nNONE\n\nAUTO\n\nLOW\n\nMEDIUM\n\nHIGH\n\n--source-image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--target-image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSourceImageFace -> (structure)\n\nThe face in the source image that was used for comparison.\n\nBoundingBox -> (structure)\n\nBounding box of the face.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nConfidence -> (float)\n\nConfidence level that the selected bounding box contains a face.\n\nFaceMatches -> (list)\n\nAn array of faces in the target image that match the source image face. Each CompareFacesMatch object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.\n\n(structure)\n\nProvides information about a face in a target image that matches the source image face analyzed by CompareFaces . The Face property contains the bounding box of the face in the target image. The Similarity property is the confidence that the source image face matches the face in the bounding box.\n\nSimilarity -> (float)\n\nLevel of confidence that the faces match.\n\nFace -> (structure)\n\nProvides face metadata (bounding box and confidence that the bounding box actually contains a face).\n\nBoundingBox -> (structure)\n\nBounding box of the face.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nConfidence -> (float)\n\nLevel of confidence that what the bounding box contains is a face.\n\nLandmarks -> (list)\n\nAn array of facial landmarks.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies face image brightness and sharpness.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. Valid values include “Happy”, “Sad”, “Angry”, “Confused”, “Disgusted”, “Surprised”, “Calm”, “Unknown”, and “Fear”.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nUnmatchedFaces -> (list)\n\nAn array of faces in the target image that did not match the source image face.\n\n(structure)\n\nProvides face metadata for target image faces that are analyzed by CompareFaces and RecognizeCelebrities .\n\nBoundingBox -> (structure)\n\nBounding box of the face.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nConfidence -> (float)\n\nLevel of confidence that what the bounding box contains is a face.\n\nLandmarks -> (list)\n\nAn array of facial landmarks.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies face image brightness and sharpness.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. Valid values include “Happy”, “Sad”, “Angry”, “Confused”, “Disgusted”, “Surprised”, “Calm”, “Unknown”, and “Fear”.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSourceImageOrientationCorrection -> (string)\n\nThe value of SourceImageOrientationCorrection is always null.\n\nIf the input image is in .jpeg format, it might contain exchangeable image file format (Exif) metadata that includes the image’s orientation. Amazon Rekognition uses this orientation information to perform image correction. The bounding box coordinates are translated to represent object locations after the orientation information in the Exif metadata is used to correct the image orientation. Images in .png format don’t contain Exif metadata.\n\nAmazon Rekognition doesn’t perform image correction for images in .png format and .jpeg images without orientation information in the image Exif metadata. The bounding box coordinates aren’t translated and represent the object locations before the image is rotated.\n\nTargetImageOrientationCorrection -> (string)\n\nThe value of TargetImageOrientationCorrection is always null.\n\nIf the input image is in .jpeg format, it might contain exchangeable image file format (Exif) metadata that includes the image’s orientation. Amazon Rekognition uses this orientation information to perform image correction. The bounding box coordinates are translated to represent object locations after the orientation information in the Exif metadata is used to correct the image orientation. Images in .png format don’t contain Exif metadata.\n\nAmazon Rekognition doesn’t perform image correction for images in .png format and .jpeg images without orientation information in the image Exif metadata. The bounding box coordinates aren’t translated and represent the object locations before the image is rotated.",
      "command_examples": "Examples\n\nTo compare faces in two images\n\nThe following compare-faces command compares faces in two images stored in an Amazon S3 bucket.\n\naws rekognition compare-faces \\\n    --source-image '{\"S3Object\":{\"Bucket\":\"MyImageS3Bucket\",\"Name\":\"source.jpg\"}}' \\\n    --target-image '{\"S3Object\":{\"Bucket\":\"MyImageS3Bucket\",\"Name\":\"target.jpg\"}}'\n\n\nOutput:\n\n{\n    \"UnmatchedFaces\": [],\n    \"FaceMatches\": [\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.12368916720151901,\n                    \"Top\": 0.16007372736930847,\n                    \"Left\": 0.5901257991790771,\n                    \"Height\": 0.25140416622161865\n                },\n                \"Confidence\": 100.0,\n                \"Pose\": {\n                    \"Yaw\": -3.7351467609405518,\n                    \"Roll\": -0.10309021919965744,\n                    \"Pitch\": 0.8637830018997192\n                },\n                \"Quality\": {\n                    \"Sharpness\": 95.51618957519531,\n                    \"Brightness\": 65.29893493652344\n                },\n                \"Landmarks\": [\n                    {\n                        \"Y\": 0.26721030473709106,\n                        \"X\": 0.6204193830490112,\n                        \"Type\": \"eyeLeft\"\n                    },\n                    {\n                        \"Y\": 0.26831310987472534,\n                        \"X\": 0.6776827573776245,\n                        \"Type\": \"eyeRight\"\n                    },\n                    {\n                        \"Y\": 0.3514654338359833,\n                        \"X\": 0.6241428852081299,\n                        \"Type\": \"mouthLeft\"\n                    },\n                    {\n                        \"Y\": 0.35258132219314575,\n                        \"X\": 0.6713621020317078,\n                        \"Type\": \"mouthRight\"\n                    },\n                    {\n                        \"Y\": 0.3140771687030792,\n                        \"X\": 0.6428444981575012,\n                        \"Type\": \"nose\"\n                    }\n                ]\n            },\n            \"Similarity\": 100.0\n        }\n    ],\n    \"SourceImageFace\": {\n        \"BoundingBox\": {\n            \"Width\": 0.12368916720151901,\n            \"Top\": 0.16007372736930847,\n            \"Left\": 0.5901257991790771,\n            \"Height\": 0.25140416622161865\n        },\n        \"Confidence\": 100.0\n    }\n}\n\n\nFor more information, see Comparing Faces in Images in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "create-collection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/create-collection.html",
      "command_description": "Description\n\nCreates a collection in an AWS Region. You can add faces to the collection using the IndexFaces operation.\n\nFor example, you might create collections, one for each of your application users. A user can then index faces using the IndexFaces operation and persist results in a specific collection. Then, a user can search the collection for faces in the user-specific container.\n\nWhen you create a collection, it is associated with the latest version of the face model version.\n\nNote\n\nCollection names are case-sensitive.\n\nThis operation requires permissions to perform the rekognition:CreateCollection action. If you want to tag your collection, you also require permission to perform the rekognition:TagResource operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-collection\n--collection-id <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--collection-id <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--collection-id (string)\n\nID for the collection that you are creating.\n\n--tags (map)\n\nA set of tags (key-value pairs) that you want to attach to the collection.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatusCode -> (integer)\n\nHTTP status code indicating the result of the operation.\n\nCollectionArn -> (string)\n\nAmazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.\n\nFaceModelVersion -> (string)\n\nVersion number of the face detection model associated with the collection you are creating.",
      "command_examples": "Examples\n\nTo create a collection\n\nThe following create-collection command creates a collection with the specified name.\n\naws rekognition create-collection \\\n    --collection-id \"MyCollection\"\n\n\nOutput:\n\n{\n    \"CollectionArn\": \"aws:rekognition:us-west-2:123456789012:collection/MyCollection\",\n    \"FaceModelVersion\": \"4.0\",\n    \"StatusCode\": 200\n}\n\n\nFor more information, see Creating a Collection in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "create-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/create-project.html",
      "command_description": "Description\n\nCreates a new Amazon Rekognition Custom Labels project. A project is a logical grouping of resources (images, Labels, models) and operations (training, evaluation and detection).\n\nThis operation requires permissions to perform the rekognition:CreateProject action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-project\n--project-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the project to create.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nProjectArn -> (string)\n\nThe Amazon Resource Name (ARN) of the new project. You can use the ARN to configure IAM access to the project."
    },
    {
      "command_name": "create-project-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/create-project-version.html",
      "command_description": "Description\n\nCreates a new version of a model and begins training. Models are managed as part of an Amazon Rekognition Custom Labels project. You can specify one training dataset and one testing dataset. The response from CreateProjectVersion is an Amazon Resource Name (ARN) for the version of the model.\n\nTraining takes a while to complete. You can get the current status by calling DescribeProjectVersions .\n\nOnce training has successfully completed, call DescribeProjectVersions to get the training results and evaluate the model.\n\nAfter evaluating the model, you start the model by calling StartProjectVersion .\n\nThis operation requires permissions to perform the rekognition:CreateProjectVersion action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-project-version\n--project-arn <value>\n--version-name <value>\n--output-config <value>\n--training-data <value>\n--testing-data <value>\n[--tags <value>]\n[--kms-key-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "--version-name <value>",
        "--output-config <value>",
        "--training-data <value>",
        "--testing-data <value>",
        "[--tags <value>]",
        "[--kms-key-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe ARN of the Amazon Rekognition Custom Labels project that manages the model that you want to train.\n\n--version-name (string)\n\nA name for the version of the model. This value must be unique.\n\n--output-config (structure)\n\nThe Amazon S3 bucket location to store the results of training. The S3 bucket can be in any AWS account as long as the caller has s3:PutObject permissions on the S3 bucket.\n\nS3Bucket -> (string)\n\nThe S3 bucket where training output is placed.\n\nS3KeyPrefix -> (string)\n\nThe prefix applied to the training output files.\n\nShorthand Syntax:\n\nS3Bucket=string,S3KeyPrefix=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3KeyPrefix\": \"string\"\n}\n\n\n--training-data (structure)\n\nThe dataset to use for training.\n\nAssets -> (list)\n\nA Sagemaker GroundTruth manifest file that contains the training images (assets).\n\n(structure)\n\nAssets are the images that you use to train and evaluate a model version. Assets can also contain validation information that you use to debug a failed model training.\n\nGroundTruthManifest -> (structure)\n\nThe S3 bucket that contains an Amazon Sagemaker Ground Truth format manifest file.\n\nS3Object -> (structure)\n\nProvides the S3 bucket name and object name.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource-Based Policies in the Amazon Rekognition Developer Guide.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nJSON Syntax:\n\n{\n  \"Assets\": [\n    {\n      \"GroundTruthManifest\": {\n        \"S3Object\": {\n          \"Bucket\": \"string\",\n          \"Name\": \"string\",\n          \"Version\": \"string\"\n        }\n      }\n    }\n    ...\n  ]\n}\n\n\n--testing-data (structure)\n\nThe dataset to use for testing.\n\nAssets -> (list)\n\nThe assets used for testing.\n\n(structure)\n\nAssets are the images that you use to train and evaluate a model version. Assets can also contain validation information that you use to debug a failed model training.\n\nGroundTruthManifest -> (structure)\n\nThe S3 bucket that contains an Amazon Sagemaker Ground Truth format manifest file.\n\nS3Object -> (structure)\n\nProvides the S3 bucket name and object name.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource-Based Policies in the Amazon Rekognition Developer Guide.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nAutoCreate -> (boolean)\n\nIf specified, Amazon Rekognition Custom Labels creates a testing dataset with an 80/20 split of the training dataset.\n\nJSON Syntax:\n\n{\n  \"Assets\": [\n    {\n      \"GroundTruthManifest\": {\n        \"S3Object\": {\n          \"Bucket\": \"string\",\n          \"Name\": \"string\",\n          \"Version\": \"string\"\n        }\n      }\n    }\n    ...\n  ],\n  \"AutoCreate\": true|false\n}\n\n\n--tags (map)\n\nA set of tags (key-value pairs) that you want to attach to the model.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--kms-key-id (string)\n\nThe identifier for your AWS Key Management Service (AWS KMS) customer master key (CMK). You can supply the Amazon Resource Name (ARN) of your CMK, the ID of your CMK, an alias for your CMK, or an alias ARN. The key is used to encrypt training and test images copied into the service for model training. Your source images are unaffected. The key is also used to encrypt training results and manifest files written to the output Amazon S3 bucket (OutputConfig ).\n\nIf you choose to use your own CMK, you need the following permissions on the CMK.\n\nkms:CreateGrant\n\nkms:DescribeKey\n\nkms:GenerateDataKey\n\nkms:Decrypt\n\nIf you don’t specify a value for KmsKeyId , images copied into the service are encrypted using a key that AWS owns and manages.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nProjectVersionArn -> (string)\n\nThe ARN of the model version that was created. Use DescribeProjectVersion to get the current status of the training operation."
    },
    {
      "command_name": "create-stream-processor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/create-stream-processor.html",
      "command_description": "Description\n\nCreates an Amazon Rekognition stream processor that you can use to detect and recognize faces in a streaming video.\n\nAmazon Rekognition Video is a consumer of live video from Amazon Kinesis Video Streams. Amazon Rekognition Video sends analysis results to Amazon Kinesis Data Streams.\n\nYou provide as input a Kinesis video stream (Input ) and a Kinesis data stream (Output ) stream. You also specify the face recognition criteria in Settings . For example, the collection containing faces that you want to recognize. Use Name to assign an identifier for the stream processor. You use Name to manage the stream processor. For example, you can start processing the source video by calling StartStreamProcessor with the Name field.\n\nAfter you have finished analyzing a streaming video, use StopStreamProcessor to stop processing. You can delete the stream processor by calling DeleteStreamProcessor .\n\nThis operation requires permissions to perform the rekognition:CreateStreamProcessor action. If you want to tag your stream processor, you also require permission to perform the rekognition:TagResource operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-stream-processor\n--input <value>\n--name <value>\n--settings <value>\n--role-arn <value>\n[--tags <value>]\n--stream-processor-output <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input <value>",
        "--name <value>",
        "--settings <value>",
        "--role-arn <value>",
        "[--tags <value>]",
        "--stream-processor-output <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input (structure)\n\nKinesis video stream stream that provides the source streaming video. If you are using the AWS CLI, the parameter name is StreamProcessorInput .\n\nKinesisVideoStream -> (structure)\n\nThe Kinesis video stream input stream for the source streaming video.\n\nArn -> (string)\n\nARN of the Kinesis video stream stream that streams the source video.\n\nShorthand Syntax:\n\nKinesisVideoStream={Arn=string}\n\n\nJSON Syntax:\n\n{\n  \"KinesisVideoStream\": {\n    \"Arn\": \"string\"\n  }\n}\n\n\n--name (string)\n\nAn identifier you assign to the stream processor. You can use Name to manage the stream processor. For example, you can get the current status of the stream processor by calling DescribeStreamProcessor . Name is idempotent.\n\n--settings (structure)\n\nFace recognition input parameters to be used by the stream processor. Includes the collection to use for face recognition and the face attributes to detect.\n\nFaceSearch -> (structure)\n\nFace search settings to use on a streaming video.\n\nCollectionId -> (string)\n\nThe ID of a collection that contains faces that you want to search for.\n\nFaceMatchThreshold -> (float)\n\nMinimum face match confidence score that must be met to return a result for a recognized face. Default is 80. 0 is the lowest confidence. 100 is the highest confidence.\n\nShorthand Syntax:\n\nFaceSearch={CollectionId=string,FaceMatchThreshold=float}\n\n\nJSON Syntax:\n\n{\n  \"FaceSearch\": {\n    \"CollectionId\": \"string\",\n    \"FaceMatchThreshold\": float\n  }\n}\n\n\n--role-arn (string)\n\nARN of the IAM role that allows access to the stream processor.\n\n--tags (map)\n\nA set of tags (key-value pairs) that you want to attach to the stream processor.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--stream-processor-output (structure)\n\nKinesis data stream stream to which Amazon Rekognition Video puts the analysis results. If you are using the AWS CLI, the parameter name is StreamProcessorOutput .\n\nKinesisDataStream -> (structure)\n\nThe Amazon Kinesis Data Streams stream to which the Amazon Rekognition stream processor streams the analysis results.\n\nArn -> (string)\n\nARN of the output Amazon Kinesis Data Streams stream.\n\nShorthand Syntax:\n\nKinesisDataStream={Arn=string}\n\n\nJSON Syntax:\n\n{\n  \"KinesisDataStream\": {\n    \"Arn\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStreamProcessorArn -> (string)\n\nARN for the newly create stream processor.",
      "command_examples": "Examples\n\nTo create a new stream processor\n\nThe following create-stream-processor example creates a new stream processor with the specified configuration.\n\naws rekognition create-stream-processor --name my-stream-processor\\\n    --input '{\"KinesisVideoStream\":{\"Arn\":\"arn:aws:kinesisvideo:us-west-2:123456789012:stream/macwebcam/1530559711205\"}}'\\\n    --stream-processor-output '{\"KinesisDataStream\":{\"Arn\":\"arn:aws:kinesis:us-west-2:123456789012:stream/AmazonRekognitionRekStream\"}}'\\\n    --role-arn arn:aws:iam::123456789012:role/AmazonRekognitionDetect\\\n    --settings '{\"FaceSearch\":{\"CollectionId\":\"MyCollection\",\"FaceMatchThreshold\":85.5}}'\n\n\nOutput:\n\n{\n    \"StreamProcessorArn\": \"arn:aws:rekognition:us-west-2:123456789012:streamprocessor/my-stream-processor\"\n}\n\n\nFor more information, see Working with Streaming Videos in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "delete-collection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/delete-collection.html",
      "command_description": "Description\n\nDeletes the specified collection. Note that this operation removes all faces in the collection. For an example, see delete-collection-procedure .\n\nThis operation requires permissions to perform the rekognition:DeleteCollection action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-collection\n--collection-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--collection-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--collection-id (string)\n\nID of the collection to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatusCode -> (integer)\n\nHTTP status code that indicates the result of the operation.",
      "command_examples": "Examples\n\nTo delete a collection\n\nThe following delete-collection command deletes the specified collection.\n\naws rekognition delete-collection \\\n    --collection-id MyCollection\n\n\nOutput:\n\n{\n    \"StatusCode\": 200\n}\n\n\nFor more information, see Deleting a Collection in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "delete-faces",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/delete-faces.html",
      "command_description": "Description\n\nDeletes faces from a collection. You specify a collection ID and an array of face IDs to remove from the collection.\n\nThis operation requires permissions to perform the rekognition:DeleteFaces action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-faces\n--collection-id <value>\n--face-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--collection-id <value>",
        "--face-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--collection-id (string)\n\nCollection from which to remove the specific faces.\n\n--face-ids (list)\n\nAn array of face IDs to delete.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeletedFaces -> (list)\n\nAn array of strings (face IDs) of the faces that were deleted.\n\n(string)",
      "command_examples": "Examples\n\nTo delete faces from a collection\n\nThe following delete-faces command deletes the specified face from a collection.\n\naws rekognition delete-faces \\\n    --collection-id MyCollection\n    --face-ids '[\"0040279c-0178-436e-b70a-e61b074e96b0\"]'\n\n\nOutput:\n\n{\n    \"DeletedFaces\": [\n        \"0040279c-0178-436e-b70a-e61b074e96b0\"\n    ]\n}\n\n\nFor more information, see Deleting Faces from a Collection in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "delete-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/delete-project.html",
      "command_description": "Description\n\nDeletes an Amazon Rekognition Custom Labels project. To delete a project you must first delete all models associated with the project. To delete a model, see DeleteProjectVersion .\n\nThis operation requires permissions to perform the rekognition:DeleteProject action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-project\n--project-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe Amazon Resource Name (ARN) of the project that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatus -> (string)\n\nThe current status of the delete project operation."
    },
    {
      "command_name": "delete-project-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/delete-project-version.html",
      "command_description": "Description\n\nDeletes an Amazon Rekognition Custom Labels model.\n\nYou can’t delete a model if it is running or if it is training. To check the status of a model, use the Status field returned from DescribeProjectVersions . To stop a running model call StopProjectVersion . If the model is training, wait until it finishes.\n\nThis operation requires permissions to perform the rekognition:DeleteProjectVersion action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-project-version\n--project-version-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-version-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-version-arn (string)\n\nThe Amazon Resource Name (ARN) of the model version that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatus -> (string)\n\nThe status of the deletion operation."
    },
    {
      "command_name": "delete-stream-processor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/delete-stream-processor.html",
      "command_description": "Description\n\nDeletes the stream processor identified by Name . You assign the value for Name when you create the stream processor with CreateStreamProcessor . You might not be able to use the same name for a stream processor for a few seconds after calling DeleteStreamProcessor .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-stream-processor\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the stream processor you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a stream processor\n\nThe following delete-stream-processor command deletes the specified stream processor.\n\naws rekognition delete-stream-processor \\\n    --name my-stream-processor\n\n\nThis command produces no output.\n\nFor more information, see Working with Streaming Videos in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "describe-collection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/describe-collection.html",
      "command_description": "Description\n\nDescribes the specified collection. You can use DescribeCollection to get information, such as the number of faces indexed into a collection and the version of the model used by the collection for face detection.\n\nFor more information, see Describing a Collection in the Amazon Rekognition Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-collection\n--collection-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--collection-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--collection-id (string)\n\nThe ID of the collection to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFaceCount -> (long)\n\nThe number of faces that are indexed into the collection. To index faces into a collection, use IndexFaces .\n\nFaceModelVersion -> (string)\n\nThe version of the face model that’s used by the collection for face detection.\n\nFor more information, see Model Versioning in the Amazon Rekognition Developer Guide.\n\nCollectionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the collection.\n\nCreationTimestamp -> (timestamp)\n\nThe number of milliseconds since the Unix epoch time until the creation of the collection. The Unix epoch time is 00:00:00 Coordinated Universal Time (UTC), Thursday, 1 January 1970.",
      "command_examples": "Examples\n\nTo describe a collection\n\nThe following describe-collection example displays the details about the specified collection.\n\naws rekognition describe-collection \\\n    --collection-id MyCollection\n\n\nOutput:\n\n{\n    \"FaceCount\": 200,\n    \"CreationTimestamp\": 1569444828.274,\n    \"CollectionARN\": \"arn:aws:rekognition:us-west-2:123456789012:collection/MyCollection\",\n    \"FaceModelVersion\": \"4.0\"\n}\n\n\nFor more information, see Describing a Collection in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "describe-project-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/describe-project-versions.html",
      "command_description": "Description\n\nLists and describes the models in an Amazon Rekognition Custom Labels project. You can specify up to 10 model versions in ProjectVersionArns . If you don’t specify a value, descriptions for all models are returned.\n\nThis operation requires permissions to perform the rekognition:DescribeProjectVersions action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-project-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ProjectVersionDescriptions",
      "command_synopsis": "Synopsis\n  describe-project-versions\n--project-arn <value>\n[--version-names <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "[--version-names <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe Amazon Resource Name (ARN) of the project that contains the models you want to describe.\n\n--version-names (list)\n\nA list of model version names that you want to describe. You can add up to 10 model version names to the list. If you don’t specify a value, all model descriptions are returned. A version name is part of a model (ProjectVersion) ARN. For example, my-model.2020-01-21T09.10.15 is the version name in the following ARN. arn:aws:rekognition:us-east-1:123456789012:project/getting-started/version/*my-model.2020-01-21T09.10.15* /1234567890123 .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nProjectVersionDescriptions -> (list)\n\nA list of model descriptions. The list is sorted by the creation date and time of the model versions, latest to earliest.\n\n(structure)\n\nThe description of a version of a model.\n\nProjectVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the model version.\n\nCreationTimestamp -> (timestamp)\n\nThe Unix datetime for the date and time that training started.\n\nMinInferenceUnits -> (integer)\n\nThe minimum number of inference units used by the model. For more information, see StartProjectVersion .\n\nStatus -> (string)\n\nThe current status of the model version.\n\nStatusMessage -> (string)\n\nA descriptive message for an error or warning that occurred.\n\nBillableTrainingTimeInSeconds -> (long)\n\nThe duration, in seconds, that the model version has been billed for training. This value is only returned if the model version has been successfully trained.\n\nTrainingEndTimestamp -> (timestamp)\n\nThe Unix date and time that training of the model ended.\n\nOutputConfig -> (structure)\n\nThe location where training results are saved.\n\nS3Bucket -> (string)\n\nThe S3 bucket where training output is placed.\n\nS3KeyPrefix -> (string)\n\nThe prefix applied to the training output files.\n\nTrainingDataResult -> (structure)\n\nContains information about the training results.\n\nInput -> (structure)\n\nThe training assets that you supplied for training.\n\nAssets -> (list)\n\nA Sagemaker GroundTruth manifest file that contains the training images (assets).\n\n(structure)\n\nAssets are the images that you use to train and evaluate a model version. Assets can also contain validation information that you use to debug a failed model training.\n\nGroundTruthManifest -> (structure)\n\nThe S3 bucket that contains an Amazon Sagemaker Ground Truth format manifest file.\n\nS3Object -> (structure)\n\nProvides the S3 bucket name and object name.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource-Based Policies in the Amazon Rekognition Developer Guide.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nOutput -> (structure)\n\nThe images (assets) that were actually trained by Amazon Rekognition Custom Labels.\n\nAssets -> (list)\n\nA Sagemaker GroundTruth manifest file that contains the training images (assets).\n\n(structure)\n\nAssets are the images that you use to train and evaluate a model version. Assets can also contain validation information that you use to debug a failed model training.\n\nGroundTruthManifest -> (structure)\n\nThe S3 bucket that contains an Amazon Sagemaker Ground Truth format manifest file.\n\nS3Object -> (structure)\n\nProvides the S3 bucket name and object name.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource-Based Policies in the Amazon Rekognition Developer Guide.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nValidation -> (structure)\n\nThe location of the data validation manifest. The data validation manifest is created for the training dataset during model training.\n\nAssets -> (list)\n\nThe assets that comprise the validation data.\n\n(structure)\n\nAssets are the images that you use to train and evaluate a model version. Assets can also contain validation information that you use to debug a failed model training.\n\nGroundTruthManifest -> (structure)\n\nThe S3 bucket that contains an Amazon Sagemaker Ground Truth format manifest file.\n\nS3Object -> (structure)\n\nProvides the S3 bucket name and object name.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource-Based Policies in the Amazon Rekognition Developer Guide.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nTestingDataResult -> (structure)\n\nContains information about the testing results.\n\nInput -> (structure)\n\nThe testing dataset that was supplied for training.\n\nAssets -> (list)\n\nThe assets used for testing.\n\n(structure)\n\nAssets are the images that you use to train and evaluate a model version. Assets can also contain validation information that you use to debug a failed model training.\n\nGroundTruthManifest -> (structure)\n\nThe S3 bucket that contains an Amazon Sagemaker Ground Truth format manifest file.\n\nS3Object -> (structure)\n\nProvides the S3 bucket name and object name.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource-Based Policies in the Amazon Rekognition Developer Guide.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nAutoCreate -> (boolean)\n\nIf specified, Amazon Rekognition Custom Labels creates a testing dataset with an 80/20 split of the training dataset.\n\nOutput -> (structure)\n\nThe subset of the dataset that was actually tested. Some images (assets) might not be tested due to file formatting and other issues.\n\nAssets -> (list)\n\nThe assets used for testing.\n\n(structure)\n\nAssets are the images that you use to train and evaluate a model version. Assets can also contain validation information that you use to debug a failed model training.\n\nGroundTruthManifest -> (structure)\n\nThe S3 bucket that contains an Amazon Sagemaker Ground Truth format manifest file.\n\nS3Object -> (structure)\n\nProvides the S3 bucket name and object name.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource-Based Policies in the Amazon Rekognition Developer Guide.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nAutoCreate -> (boolean)\n\nIf specified, Amazon Rekognition Custom Labels creates a testing dataset with an 80/20 split of the training dataset.\n\nValidation -> (structure)\n\nThe location of the data validation manifest. The data validation manifest is created for the test dataset during model training.\n\nAssets -> (list)\n\nThe assets that comprise the validation data.\n\n(structure)\n\nAssets are the images that you use to train and evaluate a model version. Assets can also contain validation information that you use to debug a failed model training.\n\nGroundTruthManifest -> (structure)\n\nThe S3 bucket that contains an Amazon Sagemaker Ground Truth format manifest file.\n\nS3Object -> (structure)\n\nProvides the S3 bucket name and object name.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource-Based Policies in the Amazon Rekognition Developer Guide.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nEvaluationResult -> (structure)\n\nThe training results. EvaluationResult is only returned if training is successful.\n\nF1Score -> (float)\n\nThe F1 score for the evaluation of all labels. The F1 score metric evaluates the overall precision and recall performance of the model as a single value. A higher value indicates better precision and recall performance. A lower score indicates that precision, recall, or both are performing poorly.\n\nSummary -> (structure)\n\nThe S3 bucket that contains the training summary.\n\nS3Object -> (structure)\n\nProvides the S3 bucket name and object name.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource-Based Policies in the Amazon Rekognition Developer Guide.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nManifestSummary -> (structure)\n\nThe location of the summary manifest. The summary manifest provides aggregate data validation results for the training and test datasets.\n\nS3Object -> (structure)\n\nProvides the S3 bucket name and object name.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource-Based Policies in the Amazon Rekognition Developer Guide.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nKmsKeyId -> (string)\n\nThe identifer for the AWS Key Management Service (AWS KMS) customer master key that was used to encrypt the model during training.\n\nNextToken -> (string)\n\nIf the previous response was incomplete (because there is more results to retrieve), Amazon Rekognition Custom Labels returns a pagination token in the response. You can use this pagination token to retrieve the next set of results."
    },
    {
      "command_name": "describe-projects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/describe-projects.html",
      "command_description": "Description\n\nLists and gets information about your Amazon Rekognition Custom Labels projects.\n\nThis operation requires permissions to perform the rekognition:DescribeProjects action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-projects is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ProjectDescriptions",
      "command_synopsis": "Synopsis\n  describe-projects\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nProjectDescriptions -> (list)\n\nA list of project descriptions. The list is sorted by the date and time the projects are created.\n\n(structure)\n\nA description of a Amazon Rekognition Custom Labels project.\n\nProjectArn -> (string)\n\nThe Amazon Resource Name (ARN) of the project.\n\nCreationTimestamp -> (timestamp)\n\nThe Unix timestamp for the date and time that the project was created.\n\nStatus -> (string)\n\nThe current status of the project.\n\nNextToken -> (string)\n\nIf the previous response was incomplete (because there is more results to retrieve), Amazon Rekognition Custom Labels returns a pagination token in the response. You can use this pagination token to retrieve the next set of results."
    },
    {
      "command_name": "describe-stream-processor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/describe-stream-processor.html",
      "command_description": "Description\n\nProvides information about a stream processor created by CreateStreamProcessor . You can get information about the input and output streams, the input parameters for the face recognition being performed, and the current status of the stream processor.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-stream-processor\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the stream processor for which you want information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nName of the stream processor.\n\nStreamProcessorArn -> (string)\n\nARN of the stream processor.\n\nStatus -> (string)\n\nCurrent status of the stream processor.\n\nStatusMessage -> (string)\n\nDetailed status message about the stream processor.\n\nCreationTimestamp -> (timestamp)\n\nDate and time the stream processor was created\n\nLastUpdateTimestamp -> (timestamp)\n\nThe time, in Unix format, the stream processor was last updated. For example, when the stream processor moves from a running state to a failed state, or when the user starts or stops the stream processor.\n\nInput -> (structure)\n\nKinesis video stream that provides the source streaming video.\n\nKinesisVideoStream -> (structure)\n\nThe Kinesis video stream input stream for the source streaming video.\n\nArn -> (string)\n\nARN of the Kinesis video stream stream that streams the source video.\n\nOutput -> (structure)\n\nKinesis data stream to which Amazon Rekognition Video puts the analysis results.\n\nKinesisDataStream -> (structure)\n\nThe Amazon Kinesis Data Streams stream to which the Amazon Rekognition stream processor streams the analysis results.\n\nArn -> (string)\n\nARN of the output Amazon Kinesis Data Streams stream.\n\nRoleArn -> (string)\n\nARN of the IAM role that allows access to the stream processor.\n\nSettings -> (structure)\n\nFace recognition input parameters that are being used by the stream processor. Includes the collection to use for face recognition and the face attributes to detect.\n\nFaceSearch -> (structure)\n\nFace search settings to use on a streaming video.\n\nCollectionId -> (string)\n\nThe ID of a collection that contains faces that you want to search for.\n\nFaceMatchThreshold -> (float)\n\nMinimum face match confidence score that must be met to return a result for a recognized face. Default is 80. 0 is the lowest confidence. 100 is the highest confidence.",
      "command_examples": "Examples\n\nTo get information about a stream processor\n\nThe following describe-stream-processor command displays details about the specified stream processor.\n\naws rekognition describe-stream-processor \\\n    --name my-stream-processor\n\n\nOutput:\n\n{\n    \"Status\": \"STOPPED\",\n    \"Name\": \"my-stream-processor\",\n    \"LastUpdateTimestamp\": 1532449292.712,\n    \"Settings\": {\n        \"FaceSearch\": {\n            \"FaceMatchThreshold\": 80.0,\n            \"CollectionId\": \"my-collection\"\n        }\n    },\n    \"RoleArn\": \"arn:aws:iam::123456789012:role/AmazonRekognitionDetectStream\",\n    \"StreamProcessorArn\": \"arn:aws:rekognition:us-west-2:123456789012:streamprocessor/my-stream-processpr\",\n    \"Output\": {\n        \"KinesisDataStream\": {\n            \"Arn\": \"arn:aws:kinesis:us-west-2:123456789012:stream/AmazonRekognitionRekStream\"\n        }\n    },\n    \"Input\": {\n        \"KinesisVideoStream\": {\n            \"Arn\": \"arn:aws:kinesisvideo:us-west-2:123456789012:stream/macwebcam/123456789012\"\n        }\n    },\n    \"CreationTimestamp\": 1532449292.712\n}\n\n\nFor more information, see Working with Streaming Videos in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "detect-custom-labels",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/detect-custom-labels.html",
      "command_description": "Description\n\nDetects custom labels in a supplied image by using an Amazon Rekognition Custom Labels model.\n\nYou specify which version of a model version to use by using the ProjectVersionArn input parameter.\n\nYou pass the input image as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. The image must be either a PNG or JPEG formatted file.\n\nFor each object that the model version detects on an image, the API returns a (CustomLabel ) object in an array (CustomLabels ). Each CustomLabel object provides the label name (Name ), the level of confidence that the image contains the object (Confidence ), and object location information, if it exists, for the label on the image (Geometry ).\n\nTo filter labels that are returned, specify a value for MinConfidence . DetectCustomLabelsLabels only returns labels with a confidence that’s higher than the specified value. The value of MinConfidence maps to the assumed threshold values created during training. For more information, see Assumed threshold in the Amazon Rekognition Custom Labels Developer Guide. Amazon Rekognition Custom Labels metrics expresses an assumed threshold as a floating point value between 0-1. The range of MinConfidence normalizes the threshold value to a percentage value (0-100). Confidence responses from DetectCustomLabels are also returned as a percentage. You can use MinConfidence to change the precision and recall or your model. For more information, see Analyzing an image in the Amazon Rekognition Custom Labels Developer Guide.\n\nIf you don’t specify a value for MinConfidence , DetectCustomLabels returns labels based on the assumed threshold of each label.\n\nThis is a stateless API operation. That is, the operation does not persist any data.\n\nThis operation requires permissions to perform the rekognition:DetectCustomLabels action.\n\nFor more information, see Analyzing an image in the Amazon Rekognition Custom Labels Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-custom-labels\n--project-version-arn <value>\n[--image <value>]\n[--max-results <value>]\n[--min-confidence <value>]\n[--image-bytes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-version-arn <value>",
        "[--image <value>]",
        "[--max-results <value>]",
        "[--min-confidence <value>]",
        "[--image-bytes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-version-arn (string)\n\nThe ARN of the model version that you want to use.\n\n--image (structure)\n\nProvides the input image either as bytes or an S3 object.\n\nYou pass image bytes to an Amazon Rekognition API operation by using the Bytes property. For example, you would use the Bytes property to pass an image loaded from a local file system. Image bytes passed by using the Bytes property must be base64-encoded. Your code may not need to encode image bytes if you are using an AWS SDK to call Amazon Rekognition API operations.\n\nFor more information, see Analyzing an Image Loaded from a Local File System in the Amazon Rekognition Developer Guide.\n\nYou pass images stored in an S3 bucket to an Amazon Rekognition API operation by using the S3Object property. Images stored in an S3 bucket do not need to be base64-encoded.\n\nThe region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.\n\nIf you use the AWS CLI to call Amazon Rekognition operations, passing image bytes using the Bytes property is not supported. You must first upload the image to an Amazon S3 bucket and then call the operation using the S3Object property.\n\nFor Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see Resource Based Policies in the Amazon Rekognition Developer Guide.\n\nTo specify a local file use --image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--max-results (integer)\n\nMaximum number of results you want the service to return in the response. The service returns the specified number of highest confidence labels ranked from highest confidence to lowest.\n\n--min-confidence (float)\n\nSpecifies the minimum confidence level for the labels to return. DetectCustomLabels doesn’t return any labels with a confidence value that’s lower than this specified value. If you specify a value of 0, DetectCustomLabels returns all labels, regardless of the assumed threshold applied to each label. If you don’t specify a value for MinConfidence , DetectCustomLabels returns labels based on the assumed threshold of each label.\n\n--image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCustomLabels -> (list)\n\nAn array of custom labels detected in the input image.\n\n(structure)\n\nA custom label detected in an image by a call to DetectCustomLabels .\n\nName -> (string)\n\nThe name of the custom label.\n\nConfidence -> (float)\n\nThe confidence that the model has in the detection of the custom label. The range is 0-100. A higher value indicates a higher confidence.\n\nGeometry -> (structure)\n\nThe location of the detected object on the image that corresponds to the custom label. Includes an axis aligned coarse bounding box surrounding the object and a finer grain polygon for more accurate spatial information.\n\nBoundingBox -> (structure)\n\nAn axis-aligned coarse representation of the detected item’s location on the image.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nPolygon -> (list)\n\nWithin the bounding box, a fine-grained polygon around the detected item.\n\n(structure)\n\nThe X and Y coordinates of a point on an image. The X and Y values returned are ratios of the overall image size. For example, if the input image is 700x200 and the operation returns X=0.5 and Y=0.25, then the point is at the (350,50) pixel coordinate on the image.\n\nAn array of Point objects, Polygon , is returned by DetectText and by DetectCustomLabels . Polygon represents a fine-grained polygon around a detected item. For more information, see Geometry in the Amazon Rekognition Developer Guide.\n\nX -> (float)\n\nThe value of the X coordinate for a point on a Polygon .\n\nY -> (float)\n\nThe value of the Y coordinate for a point on a Polygon ."
    },
    {
      "command_name": "detect-faces",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/detect-faces.html",
      "command_description": "Description\n\nDetects faces within an image that is provided as input.\n\nDetectFaces detects the 100 largest faces in the image. For each face detected, the operation returns face details. These details include a bounding box of the face, a confidence value (that the bounding box contains a face), and a fixed set of attributes such as facial landmarks (for example, coordinates of eye and mouth), presence of beard, sunglasses, and so on.\n\nThe face-detection algorithm is most effective on frontal faces. For non-frontal or obscured faces, the algorithm might not detect the faces or might detect faces with lower confidence.\n\nYou pass the input image either as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. The image must be either a PNG or JPEG formatted file.\n\nNote\n\nThis is a stateless API operation. That is, the operation does not persist any data.\n\nThis operation requires permissions to perform the rekognition:DetectFaces action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-faces\n[--image <value>]\n[--attributes <value>]\n[--image-bytes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--image <value>]",
        "[--attributes <value>]",
        "[--image-bytes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image (structure)\n\nThe input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.\n\nIf you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode image bytes passed using the Bytes field. For more information, see Images in the Amazon Rekognition developer guide.\n\nTo specify a local file use --image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--attributes (list)\n\nAn array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don’t specify a value for Attributes or if you specify [\"DEFAULT\"] , the API returns the following subset of facial attributes: BoundingBox , Confidence , Pose , Quality , and Landmarks . If you provide [\"ALL\"] , all facial attributes are returned, but the operation takes longer to complete.\n\nIf you provide both, [\"ALL\", \"DEFAULT\"] , the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  DEFAULT\n  ALL\n\n\n--image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFaceDetails -> (list)\n\nDetails of each face found in the image.\n\n(structure)\n\nStructure containing attributes of the face that the algorithm detected.\n\nA FaceDetail object contains either the default facial attributes or all facial attributes. The default attributes are BoundingBox , Confidence , Landmarks , Pose , and Quality .\n\nGetFaceDetection is the only Amazon Rekognition Video stored video operation that can return a FaceDetail object with all attributes. To specify which attributes to return, use the FaceAttributes input parameter for StartFaceDetection . The following Amazon Rekognition Video operations return only the default attributes. The corresponding Start operations don’t have a FaceAttributes input parameter.\n\nGetCelebrityRecognition\n\nGetPersonTracking\n\nGetFaceSearch\n\nThe Amazon Rekognition Image DetectFaces and IndexFaces operations can return all facial attributes. To specify which attributes to return, use the Attributes input parameter for DetectFaces . For IndexFaces , use the DetectAttributes input parameter.\n\nBoundingBox -> (structure)\n\nBounding box of the face. Default attribute.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nAgeRange -> (structure)\n\nThe estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n\nLow -> (integer)\n\nThe lowest estimated age.\n\nHigh -> (integer)\n\nThe highest estimated age.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyeglasses -> (structure)\n\nIndicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing eye glasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSunglasses -> (structure)\n\nIndicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing sunglasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nGender -> (structure)\n\nThe predicted gender of a detected face.\n\nValue -> (string)\n\nThe predicted gender of the face.\n\nConfidence -> (float)\n\nLevel of confidence in the prediction.\n\nBeard -> (structure)\n\nIndicates whether or not the face has a beard, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has beard or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMustache -> (structure)\n\nIndicates whether or not the face has a mustache, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has mustache or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyesOpen -> (structure)\n\nIndicates whether or not the eyes on the face are open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the eyes on the face are open.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMouthOpen -> (structure)\n\nIndicates whether or not the mouth on the face is open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the mouth on the face is open or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nLandmarks -> (list)\n\nIndicates the location of landmarks on the face. Default attribute.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw. Default attribute.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies image brightness and sharpness. Default attribute.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree). Default attribute.\n\nOrientationCorrection -> (string)\n\nThe value of OrientationCorrection is always null.\n\nIf the input image is in .jpeg format, it might contain exchangeable image file format (Exif) metadata that includes the image’s orientation. Amazon Rekognition uses this orientation information to perform image correction. The bounding box coordinates are translated to represent object locations after the orientation information in the Exif metadata is used to correct the image orientation. Images in .png format don’t contain Exif metadata.\n\nAmazon Rekognition doesn’t perform image correction for images in .png format and .jpeg images without orientation information in the image Exif metadata. The bounding box coordinates aren’t translated and represent the object locations before the image is rotated.",
      "command_examples": "Examples\n\nTo detect faces in an image\n\nThe following detect-faces command detects faces in the specified image stored in an Amazon S3 bucket.\n\naws rekognition detect-faces \\\n    --image '{\"S3Object\":{\"Bucket\":\"MyImageS3Bucket\",\"Name\":\"MyFriend.jpg\"}}' \\\n    --attributes \"ALL\"\n\n\nOutput:\n\n{\n    \"FaceDetails\": [\n        {\n            \"Confidence\": 100.0,\n            \"Eyeglasses\": {\n                \"Confidence\": 98.91107940673828,\n                \"Value\": false\n            },\n            \"Sunglasses\": {\n                \"Confidence\": 99.7966537475586,\n                \"Value\": false\n            },\n            \"Gender\": {\n                \"Confidence\": 99.56611633300781,\n                \"Value\": \"Male\"\n            },\n            \"Landmarks\": [\n                {\n                    \"Y\": 0.26721030473709106,\n                    \"X\": 0.6204193830490112,\n                    \"Type\": \"eyeLeft\"\n                },\n                {\n                    \"Y\": 0.26831310987472534,\n                    \"X\": 0.6776827573776245,\n                    \"Type\": \"eyeRight\"\n                },\n                {\n                    \"Y\": 0.3514654338359833,\n                    \"X\": 0.6241428852081299,\n                    \"Type\": \"mouthLeft\"\n                },\n                {\n                    \"Y\": 0.35258132219314575,\n                    \"X\": 0.6713621020317078,\n                    \"Type\": \"mouthRight\"\n                },\n                {\n                    \"Y\": 0.3140771687030792,\n                    \"X\": 0.6428444981575012,\n                    \"Type\": \"nose\"\n                },\n                {\n                    \"Y\": 0.24662546813488007,\n                    \"X\": 0.6001564860343933,\n                    \"Type\": \"leftEyeBrowLeft\"\n                },\n                {\n                    \"Y\": 0.24326619505882263,\n                    \"X\": 0.6303644776344299,\n                    \"Type\": \"leftEyeBrowRight\"\n                },\n                {\n                    \"Y\": 0.23818562924861908,\n                    \"X\": 0.6146903038024902,\n                    \"Type\": \"leftEyeBrowUp\"\n                },\n                {\n                    \"Y\": 0.24373626708984375,\n                    \"X\": 0.6640064716339111,\n                    \"Type\": \"rightEyeBrowLeft\"\n                },\n                {\n                    \"Y\": 0.24877218902111053,\n                    \"X\": 0.7025929093360901,\n                    \"Type\": \"rightEyeBrowRight\"\n                },\n                {\n                    \"Y\": 0.23938551545143127,\n                    \"X\": 0.6823262572288513,\n                    \"Type\": \"rightEyeBrowUp\"\n                },\n                {\n                    \"Y\": 0.265746533870697,\n                    \"X\": 0.6112898588180542,\n                    \"Type\": \"leftEyeLeft\"\n                },\n                {\n                    \"Y\": 0.2676128149032593,\n                    \"X\": 0.6317071914672852,\n                    \"Type\": \"leftEyeRight\"\n                },\n                {\n                    \"Y\": 0.262735515832901,\n                    \"X\": 0.6201658248901367,\n                    \"Type\": \"leftEyeUp\"\n                },\n                {\n                    \"Y\": 0.27025148272514343,\n                    \"X\": 0.6206279993057251,\n                    \"Type\": \"leftEyeDown\"\n                },\n                {\n                    \"Y\": 0.268223375082016,\n                    \"X\": 0.6658390760421753,\n                    \"Type\": \"rightEyeLeft\"\n                },\n                {\n                    \"Y\": 0.2672517001628876,\n                    \"X\": 0.687832236289978,\n                    \"Type\": \"rightEyeRight\"\n                },\n                {\n                    \"Y\": 0.26383838057518005,\n                    \"X\": 0.6769183874130249,\n                    \"Type\": \"rightEyeUp\"\n                },\n                {\n                    \"Y\": 0.27138751745224,\n                    \"X\": 0.676596462726593,\n                    \"Type\": \"rightEyeDown\"\n                },\n                {\n                    \"Y\": 0.32283174991607666,\n                    \"X\": 0.6350004076957703,\n                    \"Type\": \"noseLeft\"\n                },\n                {\n                    \"Y\": 0.3219289481639862,\n                    \"X\": 0.6567046642303467,\n                    \"Type\": \"noseRight\"\n                },\n                {\n                    \"Y\": 0.3420318365097046,\n                    \"X\": 0.6450609564781189,\n                    \"Type\": \"mouthUp\"\n                },\n                {\n                    \"Y\": 0.3664324879646301,\n                    \"X\": 0.6455618143081665,\n                    \"Type\": \"mouthDown\"\n                },\n                {\n                    \"Y\": 0.26721030473709106,\n                    \"X\": 0.6204193830490112,\n                    \"Type\": \"leftPupil\"\n                },\n                {\n                    \"Y\": 0.26831310987472534,\n                    \"X\": 0.6776827573776245,\n                    \"Type\": \"rightPupil\"\n                },\n                {\n                    \"Y\": 0.26343393325805664,\n                    \"X\": 0.5946047306060791,\n                    \"Type\": \"upperJawlineLeft\"\n                },\n                {\n                    \"Y\": 0.3543180525302887,\n                    \"X\": 0.6044883728027344,\n                    \"Type\": \"midJawlineLeft\"\n                },\n                {\n                    \"Y\": 0.4084877669811249,\n                    \"X\": 0.6477024555206299,\n                    \"Type\": \"chinBottom\"\n                },\n                {\n                    \"Y\": 0.3562754988670349,\n                    \"X\": 0.707981526851654,\n                    \"Type\": \"midJawlineRight\"\n                },\n                {\n                    \"Y\": 0.26580461859703064,\n                    \"X\": 0.7234612107276917,\n                    \"Type\": \"upperJawlineRight\"\n                }\n            ],\n            \"Pose\": {\n                \"Yaw\": -3.7351467609405518,\n                \"Roll\": -0.10309021919965744,\n                \"Pitch\": 0.8637830018997192\n            },\n            \"Emotions\": [\n                {\n                    \"Confidence\": 8.74203109741211,\n                    \"Type\": \"SURPRISED\"\n                },\n                {\n                    \"Confidence\": 2.501944065093994,\n                    \"Type\": \"ANGRY\"\n                },\n                {\n                    \"Confidence\": 0.7378743290901184,\n                    \"Type\": \"DISGUSTED\"\n                },\n                {\n                    \"Confidence\": 3.5296201705932617,\n                    \"Type\": \"HAPPY\"\n                },\n                {\n                    \"Confidence\": 1.7162904739379883,\n                    \"Type\": \"SAD\"\n                },\n                {\n                    \"Confidence\": 9.518536567687988,\n                    \"Type\": \"CONFUSED\"\n                },\n                {\n                    \"Confidence\": 0.45474427938461304,\n                    \"Type\": \"FEAR\"\n                },\n                {\n                    \"Confidence\": 72.79895782470703,\n                    \"Type\": \"CALM\"\n                }\n            ],\n            \"AgeRange\": {\n                \"High\": 48,\n                \"Low\": 32\n            },\n            \"EyesOpen\": {\n                \"Confidence\": 98.93987274169922,\n                \"Value\": true\n            },\n            \"BoundingBox\": {\n                \"Width\": 0.12368916720151901,\n                \"Top\": 0.16007372736930847,\n                \"Left\": 0.5901257991790771,\n                \"Height\": 0.25140416622161865\n            },\n            \"Smile\": {\n                \"Confidence\": 93.4493179321289,\n                \"Value\": false\n            },\n            \"MouthOpen\": {\n                \"Confidence\": 90.53053283691406,\n                \"Value\": false\n            },\n            \"Quality\": {\n                \"Sharpness\": 95.51618957519531,\n                \"Brightness\": 65.29893493652344\n            },\n            \"Mustache\": {\n                \"Confidence\": 89.85221099853516,\n                \"Value\": false\n            },\n            \"Beard\": {\n                \"Confidence\": 86.1991195678711,\n                \"Value\": true\n            }\n        }\n    ]\n}\n\n\nFor more information, see Detecting Faces in an Image in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "detect-labels",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/detect-labels.html",
      "command_description": "Description\n\nDetects instances of real-world entities within an image (JPEG or PNG) provided as input. This includes objects like flower, tree, and table; events like wedding, graduation, and birthday party; and concepts like landscape, evening, and nature.\n\nFor an example, see Analyzing Images Stored in an Amazon S3 Bucket in the Amazon Rekognition Developer Guide.\n\nNote\n\nDetectLabels does not support the detection of activities. However, activity detection is supported for label detection in videos. For more information, see StartLabelDetection in the Amazon Rekognition Developer Guide.\n\nYou pass the input image as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. The image must be either a PNG or JPEG formatted file.\n\nFor each object, scene, and concept the API returns one or more labels. Each label provides the object name, and the level of confidence that the image contains the object. For example, suppose the input image has a lighthouse, the sea, and a rock. The response includes all three labels, one for each object.\n\n{Name: lighthouse, Confidence: 98.4629}\n\n{Name: rock,Confidence: 79.2097}\n\n{Name: sea,Confidence: 75.061}\n\nIn the preceding example, the operation returns one label for each of the three objects. The operation can also return multiple labels for the same object in the image. For example, if the input image shows a flower (for example, a tulip), the operation might return the following three labels.\n\n{Name: flower,Confidence: 99.0562}\n\n{Name: plant,Confidence: 99.0562}\n\n{Name: tulip,Confidence: 99.0562}\n\nIn this example, the detection algorithm more precisely identifies the flower as a tulip.\n\nIn response, the API returns an array of labels. In addition, the response also includes the orientation correction. Optionally, you can specify MinConfidence to control the confidence threshold for the labels returned. The default is 55%. You can also add the MaxLabels parameter to limit the number of labels returned.\n\nNote\n\nIf the object detected is a person, the operation doesn’t provide the same facial details that the DetectFaces operation provides.\n\nDetectLabels returns bounding boxes for instances of common object labels in an array of Instance objects. An Instance object contains a BoundingBox object, for the location of the label on the image. It also includes the confidence by which the bounding box was detected.\n\nDetectLabels also returns a hierarchical taxonomy of detected labels. For example, a detected car might be assigned the label car . The label car has two parent labels: Vehicle (its parent) and Transportation (its grandparent). The response returns the entire list of ancestors for a label. Each ancestor is a unique label in the response. In the previous example, Car , Vehicle , and Transportation are returned as unique labels in the response.\n\nThis is a stateless API operation. That is, the operation does not persist any data.\n\nThis operation requires permissions to perform the rekognition:DetectLabels action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-labels\n[--image <value>]\n[--max-labels <value>]\n[--min-confidence <value>]\n[--image-bytes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--image <value>]",
        "[--max-labels <value>]",
        "[--min-confidence <value>]",
        "[--image-bytes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image (structure)\n\nThe input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. Images stored in an S3 Bucket do not need to be base64-encoded.\n\nIf you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode image bytes passed using the Bytes field. For more information, see Images in the Amazon Rekognition developer guide.\n\nTo specify a local file use --image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--max-labels (integer)\n\nMaximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.\n\n--min-confidence (float)\n\nSpecifies the minimum confidence level for the labels to return. Amazon Rekognition doesn’t return any labels with confidence lower than this specified value.\n\nIf MinConfidence is not specified, the operation returns labels with a confidence values greater than or equal to 55 percent.\n\n--image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLabels -> (list)\n\nAn array of labels for the real-world objects detected.\n\n(structure)\n\nStructure containing details about the detected label, including the name, detected instances, parent labels, and level of confidence.\n\nName -> (string)\n\nThe name (label) of the object or scene.\n\nConfidence -> (float)\n\nLevel of confidence.\n\nInstances -> (list)\n\nIf Label represents an object, Instances contains the bounding boxes for each instance of the detected object. Bounding boxes are returned for common object labels such as people, cars, furniture, apparel or pets.\n\n(structure)\n\nAn instance of a label returned by Amazon Rekognition Image ( DetectLabels ) or by Amazon Rekognition Video ( GetLabelDetection ).\n\nBoundingBox -> (structure)\n\nThe position of the label instance on the image.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nConfidence -> (float)\n\nThe confidence that Amazon Rekognition has in the accuracy of the bounding box.\n\nParents -> (list)\n\nThe parent labels for a label. The response includes all ancestor labels.\n\n(structure)\n\nA parent label for a label. A label can have 0, 1, or more parents.\n\nName -> (string)\n\nThe name of the parent label.\n\nOrientationCorrection -> (string)\n\nThe value of OrientationCorrection is always null.\n\nIf the input image is in .jpeg format, it might contain exchangeable image file format (Exif) metadata that includes the image’s orientation. Amazon Rekognition uses this orientation information to perform image correction. The bounding box coordinates are translated to represent object locations after the orientation information in the Exif metadata is used to correct the image orientation. Images in .png format don’t contain Exif metadata.\n\nAmazon Rekognition doesn’t perform image correction for images in .png format and .jpeg images without orientation information in the image Exif metadata. The bounding box coordinates aren’t translated and represent the object locations before the image is rotated.\n\nLabelModelVersion -> (string)\n\nVersion number of the label detection model that was used to detect labels.",
      "command_examples": "Examples\n\nTo detect a label in an image\n\nThe following detect-labels example detects scenes and objects in an image stored in an Amazon S3 bucket.\n\naws rekognition detect-labels \\\n    --image '{\"S3Object\":{\"Bucket\":\"bucket\",\"Name\":\"image\"}}'\n\n\nOutput:\n\n{\n    \"Labels\": [\n        {\n            \"Instances\": [],\n            \"Confidence\": 99.15271759033203,\n            \"Parents\": [\n                {\n                    \"Name\": \"Vehicle\"\n                },\n                {\n                    \"Name\": \"Transportation\"\n                }\n            ],\n            \"Name\": \"Automobile\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 99.15271759033203,\n            \"Parents\": [\n                {\n                    \"Name\": \"Transportation\"\n                }\n            ],\n            \"Name\": \"Vehicle\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 99.15271759033203,\n            \"Parents\": [],\n            \"Name\": \"Transportation\"\n        },\n        {\n            \"Instances\": [\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.10616336017847061,\n                        \"Top\": 0.5039216876029968,\n                        \"Left\": 0.0037978808395564556,\n                        \"Height\": 0.18528179824352264\n                    },\n                    \"Confidence\": 99.15271759033203\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.2429988533258438,\n                        \"Top\": 0.5251884460449219,\n                        \"Left\": 0.7309805154800415,\n                        \"Height\": 0.21577216684818268\n                    },\n                    \"Confidence\": 99.1286392211914\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.14233611524105072,\n                        \"Top\": 0.5333095788955688,\n                        \"Left\": 0.6494812965393066,\n                        \"Height\": 0.15528248250484467\n                    },\n                    \"Confidence\": 98.48368072509766\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.11086395382881165,\n                        \"Top\": 0.5354844927787781,\n                        \"Left\": 0.10355594009160995,\n                        \"Height\": 0.10271988064050674\n                    },\n                    \"Confidence\": 96.45606231689453\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.06254628300666809,\n                        \"Top\": 0.5573825240135193,\n                        \"Left\": 0.46083059906959534,\n                        \"Height\": 0.053911514580249786\n                    },\n                    \"Confidence\": 93.65448760986328\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.10105438530445099,\n                        \"Top\": 0.534368634223938,\n                        \"Left\": 0.5743985772132874,\n                        \"Height\": 0.12226245552301407\n                    },\n                    \"Confidence\": 93.06217193603516\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.056389667093753815,\n                        \"Top\": 0.5235804319381714,\n                        \"Left\": 0.9427769780158997,\n                        \"Height\": 0.17163699865341187\n                    },\n                    \"Confidence\": 92.6864013671875\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.06003860384225845,\n                        \"Top\": 0.5441341400146484,\n                        \"Left\": 0.22409997880458832,\n                        \"Height\": 0.06737709045410156\n                    },\n                    \"Confidence\": 90.4227066040039\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.02848697081208229,\n                        \"Top\": 0.5107086896896362,\n                        \"Left\": 0,\n                        \"Height\": 0.19150497019290924\n                    },\n                    \"Confidence\": 86.65286254882812\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.04067881405353546,\n                        \"Top\": 0.5566273927688599,\n                        \"Left\": 0.316415935754776,\n                        \"Height\": 0.03428703173995018\n                    },\n                    \"Confidence\": 85.36471557617188\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.043411049991846085,\n                        \"Top\": 0.5394920110702515,\n                        \"Left\": 0.18293385207653046,\n                        \"Height\": 0.0893595889210701\n                    },\n                    \"Confidence\": 82.21705627441406\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.031183116137981415,\n                        \"Top\": 0.5579366683959961,\n                        \"Left\": 0.2853088080883026,\n                        \"Height\": 0.03989990055561066\n                    },\n                    \"Confidence\": 81.0157470703125\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.031113790348172188,\n                        \"Top\": 0.5504819750785828,\n                        \"Left\": 0.2580395042896271,\n                        \"Height\": 0.056484755128622055\n                    },\n                    \"Confidence\": 56.13441467285156\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.08586374670267105,\n                        \"Top\": 0.5438792705535889,\n                        \"Left\": 0.5128012895584106,\n                        \"Height\": 0.08550430089235306\n                    },\n                    \"Confidence\": 52.37760925292969\n                }\n            ],\n            \"Confidence\": 99.15271759033203,\n            \"Parents\": [\n                {\n                    \"Name\": \"Vehicle\"\n                },\n                {\n                    \"Name\": \"Transportation\"\n                }\n            ],\n            \"Name\": \"Car\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 98.9914321899414,\n            \"Parents\": [],\n            \"Name\": \"Human\"\n        },\n        {\n            \"Instances\": [\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.19360728561878204,\n                        \"Top\": 0.35072067379951477,\n                        \"Left\": 0.43734854459762573,\n                        \"Height\": 0.2742200493812561\n                    },\n                    \"Confidence\": 98.9914321899414\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.03801717236638069,\n                        \"Top\": 0.5010883808135986,\n                        \"Left\": 0.9155802130699158,\n                        \"Height\": 0.06597328186035156\n                    },\n                    \"Confidence\": 85.02790832519531\n                }\n            ],\n            \"Confidence\": 98.9914321899414,\n            \"Parents\": [],\n            \"Name\": \"Person\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 93.24951934814453,\n            \"Parents\": [],\n            \"Name\": \"Machine\"\n        },\n        {\n            \"Instances\": [\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.03561960905790329,\n                        \"Top\": 0.6468243598937988,\n                        \"Left\": 0.7850857377052307,\n                        \"Height\": 0.08878646790981293\n                    },\n                    \"Confidence\": 93.24951934814453\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.02217046171426773,\n                        \"Top\": 0.6149078607559204,\n                        \"Left\": 0.04757237061858177,\n                        \"Height\": 0.07136218994855881\n                    },\n                    \"Confidence\": 91.5025863647461\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.016197510063648224,\n                        \"Top\": 0.6274210214614868,\n                        \"Left\": 0.6472989320755005,\n                        \"Height\": 0.04955997318029404\n                    },\n                    \"Confidence\": 85.14686584472656\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.020207518711686134,\n                        \"Top\": 0.6348286867141724,\n                        \"Left\": 0.7295016646385193,\n                        \"Height\": 0.07059963047504425\n                    },\n                    \"Confidence\": 83.34547424316406\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.020280985161662102,\n                        \"Top\": 0.6171894669532776,\n                        \"Left\": 0.08744934946298599,\n                        \"Height\": 0.05297485366463661\n                    },\n                    \"Confidence\": 79.9981460571289\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.018318990245461464,\n                        \"Top\": 0.623889148235321,\n                        \"Left\": 0.6836880445480347,\n                        \"Height\": 0.06730121374130249\n                    },\n                    \"Confidence\": 78.87144470214844\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.021310249343514442,\n                        \"Top\": 0.6167286038398743,\n                        \"Left\": 0.004064912907779217,\n                        \"Height\": 0.08317798376083374\n                    },\n                    \"Confidence\": 75.89361572265625\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.03604431077837944,\n                        \"Top\": 0.7030032277107239,\n                        \"Left\": 0.9254803657531738,\n                        \"Height\": 0.04569442570209503\n                    },\n                    \"Confidence\": 64.402587890625\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.009834849275648594,\n                        \"Top\": 0.5821820497512817,\n                        \"Left\": 0.28094568848609924,\n                        \"Height\": 0.01964157074689865\n                    },\n                    \"Confidence\": 62.79907989501953\n                },\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.01475677452981472,\n                        \"Top\": 0.6137543320655823,\n                        \"Left\": 0.5950819253921509,\n                        \"Height\": 0.039063986390829086\n                    },\n                    \"Confidence\": 59.40483474731445\n                }\n            ],\n            \"Confidence\": 93.24951934814453,\n            \"Parents\": [\n                {\n                    \"Name\": \"Machine\"\n                }\n            ],\n            \"Name\": \"Wheel\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 92.61514282226562,\n            \"Parents\": [],\n            \"Name\": \"Road\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 92.37877655029297,\n            \"Parents\": [\n                {\n                    \"Name\": \"Person\"\n                }\n            ],\n            \"Name\": \"Sport\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 92.37877655029297,\n            \"Parents\": [\n                {\n                    \"Name\": \"Person\"\n                }\n            ],\n            \"Name\": \"Sports\"\n        },\n        {\n            \"Instances\": [\n                {\n                    \"BoundingBox\": {\n                        \"Width\": 0.12326609343290329,\n                        \"Top\": 0.6332163214683533,\n                        \"Left\": 0.44815489649772644,\n                        \"Height\": 0.058117982000112534\n                    },\n                    \"Confidence\": 92.37877655029297\n                }\n            ],\n            \"Confidence\": 92.37877655029297,\n            \"Parents\": [\n                {\n                    \"Name\": \"Person\"\n                },\n                {\n                    \"Name\": \"Sport\"\n                }\n            ],\n            \"Name\": \"Skateboard\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 90.62931060791016,\n            \"Parents\": [\n                {\n                    \"Name\": \"Person\"\n                }\n            ],\n            \"Name\": \"Pedestrian\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 88.81334686279297,\n            \"Parents\": [],\n            \"Name\": \"Asphalt\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 88.81334686279297,\n            \"Parents\": [],\n            \"Name\": \"Tarmac\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 88.23201751708984,\n            \"Parents\": [],\n            \"Name\": \"Path\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 80.26520538330078,\n            \"Parents\": [],\n            \"Name\": \"Urban\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 80.26520538330078,\n            \"Parents\": [\n                {\n                    \"Name\": \"Building\"\n                },\n                {\n                    \"Name\": \"Urban\"\n                }\n            ],\n            \"Name\": \"Town\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 80.26520538330078,\n            \"Parents\": [],\n            \"Name\": \"Building\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 80.26520538330078,\n            \"Parents\": [\n                {\n                    \"Name\": \"Building\"\n                },\n                {\n                    \"Name\": \"Urban\"\n                }\n            ],\n            \"Name\": \"City\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 78.37934875488281,\n            \"Parents\": [\n                {\n                    \"Name\": \"Car\"\n                },\n                {\n                    \"Name\": \"Vehicle\"\n                },\n                {\n                    \"Name\": \"Transportation\"\n                }\n            ],\n            \"Name\": \"Parking Lot\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 78.37934875488281,\n            \"Parents\": [\n                {\n                    \"Name\": \"Car\"\n                },\n                {\n                    \"Name\": \"Vehicle\"\n                },\n                {\n                    \"Name\": \"Transportation\"\n                }\n            ],\n            \"Name\": \"Parking\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 74.37590026855469,\n            \"Parents\": [\n                {\n                    \"Name\": \"Building\"\n                },\n                {\n                    \"Name\": \"Urban\"\n                },\n                {\n                    \"Name\": \"City\"\n                }\n            ],\n            \"Name\": \"Downtown\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 69.84622955322266,\n            \"Parents\": [\n                {\n                    \"Name\": \"Road\"\n                }\n            ],\n            \"Name\": \"Intersection\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 57.68518829345703,\n            \"Parents\": [\n                {\n                    \"Name\": \"Sports Car\"\n                },\n                {\n                    \"Name\": \"Car\"\n                },\n                {\n                    \"Name\": \"Vehicle\"\n                },\n                {\n                    \"Name\": \"Transportation\"\n                }\n            ],\n            \"Name\": \"Coupe\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 57.68518829345703,\n            \"Parents\": [\n                {\n                    \"Name\": \"Car\"\n                },\n                {\n                    \"Name\": \"Vehicle\"\n                },\n                {\n                    \"Name\": \"Transportation\"\n                }\n            ],\n            \"Name\": \"Sports Car\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 56.59492111206055,\n            \"Parents\": [\n                {\n                    \"Name\": \"Path\"\n                }\n            ],\n            \"Name\": \"Sidewalk\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 56.59492111206055,\n            \"Parents\": [\n                {\n                    \"Name\": \"Path\"\n                }\n            ],\n            \"Name\": \"Pavement\"\n        },\n        {\n            \"Instances\": [],\n            \"Confidence\": 55.58770751953125,\n            \"Parents\": [\n                {\n                    \"Name\": \"Building\"\n                },\n                {\n                    \"Name\": \"Urban\"\n                }\n            ],\n            \"Name\": \"Neighborhood\"\n        }\n    ],\n    \"LabelModelVersion\": \"2.0\"\n}\n\n\nFor more information, see Detecting Labels in an Image in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "detect-moderation-labels",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/detect-moderation-labels.html",
      "command_description": "Description\n\nDetects unsafe content in a specified JPEG or PNG format image. Use DetectModerationLabels to moderate images depending on your requirements. For example, you might want to filter images that contain nudity, but not images containing suggestive content.\n\nTo filter images, use the labels returned by DetectModerationLabels to determine which types of content are appropriate.\n\nFor information about moderation labels, see Detecting Unsafe Content in the Amazon Rekognition Developer Guide.\n\nYou pass the input image either as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. The image must be either a PNG or JPEG formatted file.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-moderation-labels\n[--image <value>]\n[--min-confidence <value>]\n[--human-loop-config <value>]\n[--image-bytes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--image <value>]",
        "[--min-confidence <value>]",
        "[--human-loop-config <value>]",
        "[--image-bytes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image (structure)\n\nThe input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.\n\nIf you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode image bytes passed using the Bytes field. For more information, see Images in the Amazon Rekognition developer guide.\n\nTo specify a local file use --image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--min-confidence (float)\n\nSpecifies the minimum confidence level for the labels to return. Amazon Rekognition doesn’t return any labels with a confidence level lower than this specified value.\n\nIf you don’t specify MinConfidence , the operation returns labels with confidence values greater than or equal to 50 percent.\n\n--human-loop-config (structure)\n\nSets up the configuration for human evaluation, including the FlowDefinition the image will be sent to.\n\nHumanLoopName -> (string)\n\nThe name of the human review used for this image. This should be kept unique within a region.\n\nFlowDefinitionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the flow definition. You can create a flow definition by using the Amazon Sagemaker CreateFlowDefinition Operation.\n\nDataAttributes -> (structure)\n\nSets attributes of the input data.\n\nContentClassifiers -> (list)\n\nSets whether the input image is free of personally identifiable information.\n\n(string)\n\nShorthand Syntax:\n\nHumanLoopName=string,FlowDefinitionArn=string,DataAttributes={ContentClassifiers=[string,string]}\n\n\nJSON Syntax:\n\n{\n  \"HumanLoopName\": \"string\",\n  \"FlowDefinitionArn\": \"string\",\n  \"DataAttributes\": {\n    \"ContentClassifiers\": [\"FreeOfPersonallyIdentifiableInformation\"|\"FreeOfAdultContent\", ...]\n  }\n}\n\n\n--image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nModerationLabels -> (list)\n\nArray of detected Moderation labels and the time, in milliseconds from the start of the video, they were detected.\n\n(structure)\n\nProvides information about a single type of inappropriate, unwanted, or offensive content found in an image or video. Each type of moderated content has a label within a hierarchical taxonomy. For more information, see Content moderation in the Amazon Rekognition Developer Guide.\n\nConfidence -> (float)\n\nSpecifies the confidence that Amazon Rekognition has that the label has been correctly identified.\n\nIf you don’t specify the MinConfidence parameter in the call to DetectModerationLabels , the operation returns labels with a confidence value greater than or equal to 50 percent.\n\nName -> (string)\n\nThe label name for the type of unsafe content detected in the image.\n\nParentName -> (string)\n\nThe name for the parent label. Labels at the top level of the hierarchy have the parent label \"\" .\n\nModerationModelVersion -> (string)\n\nVersion number of the moderation detection model that was used to detect unsafe content.\n\nHumanLoopActivationOutput -> (structure)\n\nShows the results of the human in the loop evaluation.\n\nHumanLoopArn -> (string)\n\nThe Amazon Resource Name (ARN) of the HumanLoop created.\n\nHumanLoopActivationReasons -> (list)\n\nShows if and why human review was needed.\n\n(string)\n\nHumanLoopActivationConditionsEvaluationResults -> (string)\n\nShows the result of condition evaluations, including those conditions which activated a human review.",
      "command_examples": "Examples\n\nTo detect unsafe content in an image\n\nThe following detect-moderation-labels command detects unsafe content in the specified image stored in an Amazon S3 bucket.\n\naws rekognition detect-moderation-labels \\\n    --image \"S3Object={Bucket=MyImageS3Bucket,Name=gun.jpg}\"\n\n\nOutput:\n\n{\n    \"ModerationModelVersion\": \"3.0\",\n    \"ModerationLabels\": [\n        {\n            \"Confidence\": 97.29618072509766,\n            \"ParentName\": \"Violence\",\n            \"Name\": \"Weapon Violence\"\n        },\n        {\n            \"Confidence\": 97.29618072509766,\n            \"ParentName\": \"\",\n            \"Name\": \"Violence\"\n        }\n    ]\n}\n\n\nFor more information, see Detecting Unsafe Images in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "detect-protective-equipment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/detect-protective-equipment.html",
      "command_description": "Description\n\nDetects Personal Protective Equipment (PPE) worn by people detected in an image. Amazon Rekognition can detect the following types of PPE.\n\nFace cover\n\nHand cover\n\nHead cover\n\nYou pass the input image as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. The image must be either a PNG or JPG formatted file.\n\nDetectProtectiveEquipment detects PPE worn by up to 15 persons detected in an image.\n\nFor each person detected in the image the API returns an array of body parts (face, head, left-hand, right-hand). For each body part, an array of detected items of PPE is returned, including an indicator of whether or not the PPE covers the body part. The API returns the confidence it has in each detection (person, PPE, body part and body part coverage). It also returns a bounding box ( BoundingBox ) for each detected person and each detected item of PPE.\n\nYou can optionally request a summary of detected PPE items with the SummarizationAttributes input parameter. The summary provides the following information.\n\nThe persons detected as wearing all of the types of PPE that you specify.\n\nThe persons detected as not wearing all of the types PPE that you specify.\n\nThe persons detected where PPE adornment could not be determined.\n\nThis is a stateless API operation. That is, the operation does not persist any data.\n\nThis operation requires permissions to perform the rekognition:DetectProtectiveEquipment action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-protective-equipment\n[--image <value>]\n[--summarization-attributes <value>]\n[--image-bytes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--image <value>]",
        "[--summarization-attributes <value>]",
        "[--image-bytes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image (structure)\n\nThe image in which you want to detect PPE on detected persons. The image can be passed as image bytes or you can reference an image stored in an Amazon S3 bucket.\n\nTo specify a local file use --image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--summarization-attributes (structure)\n\nAn array of PPE types that you want to summarize.\n\nMinConfidence -> (float)\n\nThe minimum confidence level for which you want summary information. The confidence level applies to person detection, body part detection, equipment detection, and body part coverage. Amazon Rekognition doesn’t return summary information with a confidence than this specified value. There isn’t a default value.\n\nSpecify a MinConfidence value that is between 50-100% as DetectProtectiveEquipment returns predictions only where the detection confidence is between 50% - 100%. If you specify a value that is less than 50%, the results are the same specifying a value of 50%.\n\nRequiredEquipmentTypes -> (list)\n\nAn array of personal protective equipment types for which you want summary information. If a person is detected wearing a required requipment type, the person’s ID is added to the PersonsWithRequiredEquipment array field returned in ProtectiveEquipmentSummary by DetectProtectiveEquipment .\n\n(string)\n\nShorthand Syntax:\n\nMinConfidence=float,RequiredEquipmentTypes=string,string\n\n\nJSON Syntax:\n\n{\n  \"MinConfidence\": float,\n  \"RequiredEquipmentTypes\": [\"FACE_COVER\"|\"HAND_COVER\"|\"HEAD_COVER\", ...]\n}\n\n\n--image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nProtectiveEquipmentModelVersion -> (string)\n\nThe version number of the PPE detection model used to detect PPE in the image.\n\nPersons -> (list)\n\nAn array of persons detected in the image (including persons not wearing PPE).\n\n(structure)\n\nA person detected by a call to DetectProtectiveEquipment . The API returns all persons detected in the input image in an array of ProtectiveEquipmentPerson objects.\n\nBodyParts -> (list)\n\nAn array of body parts detected on a person’s body (including body parts without PPE).\n\n(structure)\n\nInformation about a body part detected by DetectProtectiveEquipment that contains PPE. An array of ProtectiveEquipmentBodyPart objects is returned for each person detected by DetectProtectiveEquipment .\n\nName -> (string)\n\nThe detected body part.\n\nConfidence -> (float)\n\nThe confidence that Amazon Rekognition has in the detection accuracy of the detected body part.\n\nEquipmentDetections -> (list)\n\nAn array of Personal Protective Equipment items detected around a body part.\n\n(structure)\n\nInformation about an item of Personal Protective Equipment (PPE) detected by DetectProtectiveEquipment . For more information, see DetectProtectiveEquipment .\n\nBoundingBox -> (structure)\n\nA bounding box surrounding the item of detected PPE.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nConfidence -> (float)\n\nThe confidence that Amazon Rekognition has that the bounding box (BoundingBox ) contains an item of PPE.\n\nType -> (string)\n\nThe type of detected PPE.\n\nCoversBodyPart -> (structure)\n\nInformation about the body part covered by the detected PPE.\n\nConfidence -> (float)\n\nThe confidence that Amazon Rekognition has in the value of Value .\n\nValue -> (boolean)\n\nTrue if the PPE covers the corresponding body part, otherwise false.\n\nBoundingBox -> (structure)\n\nA bounding box around the detected person.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nConfidence -> (float)\n\nThe confidence that Amazon Rekognition has that the bounding box contains a person.\n\nId -> (integer)\n\nThe identifier for the detected person. The identifier is only unique for a single call to DetectProtectiveEquipment .\n\nSummary -> (structure)\n\nSummary information for the types of PPE specified in the SummarizationAttributes input parameter.\n\nPersonsWithRequiredEquipment -> (list)\n\nAn array of IDs for persons who are wearing detected personal protective equipment.\n\n(integer)\n\nPersonsWithoutRequiredEquipment -> (list)\n\nAn array of IDs for persons who are not wearing all of the types of PPE specified in the RequiredEquipmentTypes field of the detected personal protective equipment.\n\n(integer)\n\nPersonsIndeterminate -> (list)\n\nAn array of IDs for persons where it was not possible to determine if they are wearing personal protective equipment.\n\n(integer)"
    },
    {
      "command_name": "detect-text",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/detect-text.html",
      "command_description": "Description\n\nDetects text in the input image and converts it into machine-readable text.\n\nPass the input image as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, you must pass it as a reference to an image in an Amazon S3 bucket. For the AWS CLI, passing image bytes is not supported. The image must be either a .png or .jpeg formatted file.\n\nThe DetectText operation returns text in an array of TextDetection elements, TextDetections . Each TextDetection element provides information about a single word or line of text that was detected in the image.\n\nA word is one or more ISO basic latin script characters that are not separated by spaces. DetectText can detect up to 100 words in an image.\n\nA line is a string of equally spaced words. A line isn’t necessarily a complete sentence. For example, a driver’s license number is detected as a line. A line ends when there is no aligned text after it. Also, a line ends when there is a large gap between words, relative to the length of the words. This means, depending on the gap between words, Amazon Rekognition may detect multiple lines in text aligned in the same direction. Periods don’t represent the end of a line. If a sentence spans multiple lines, the DetectText operation returns multiple lines.\n\nTo determine whether a TextDetection element is a line of text or a word, use the TextDetection object Type field.\n\nTo be detected, text must be within +/- 90 degrees orientation of the horizontal axis.\n\nFor more information, see DetectText in the Amazon Rekognition Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-text\n[--image <value>]\n[--filters <value>]\n[--image-bytes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--image <value>]",
        "[--filters <value>]",
        "[--image-bytes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image (structure)\n\nThe input image as base64-encoded bytes or an Amazon S3 object. If you use the AWS CLI to call Amazon Rekognition operations, you can’t pass image bytes.\n\nIf you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode image bytes passed using the Bytes field. For more information, see Images in the Amazon Rekognition developer guide.\n\nTo specify a local file use --image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--filters (structure)\n\nOptional parameters that let you set the criteria that the text must meet to be included in your response.\n\nWordFilter -> (structure)\n\nA set of parameters that allow you to filter out certain results from your returned results.\n\nMinConfidence -> (float)\n\nSets the confidence of word detection. Words with detection confidence below this will be excluded from the result. Values should be between 50 and 100 as Text in Video will not return any result below 50.\n\nMinBoundingBoxHeight -> (float)\n\nSets the minimum height of the word bounding box. Words with bounding box heights lesser than this value will be excluded from the result. Value is relative to the video frame height.\n\nMinBoundingBoxWidth -> (float)\n\nSets the minimum width of the word bounding box. Words with bounding boxes widths lesser than this value will be excluded from the result. Value is relative to the video frame width.\n\nRegionsOfInterest -> (list)\n\nA Filter focusing on a certain area of the image. Uses a BoundingBox object to set the region of the image.\n\n(structure)\n\nSpecifies a location within the frame that Rekognition checks for text. Uses a BoundingBox object to set a region of the screen.\n\nA word is included in the region if the word is more than half in that region. If there is more than one region, the word will be compared with all regions of the screen. Any word more than half in a region is kept in the results.\n\nBoundingBox -> (structure)\n\nThe box representing a region of interest on screen.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nJSON Syntax:\n\n{\n  \"WordFilter\": {\n    \"MinConfidence\": float,\n    \"MinBoundingBoxHeight\": float,\n    \"MinBoundingBoxWidth\": float\n  },\n  \"RegionsOfInterest\": [\n    {\n      \"BoundingBox\": {\n        \"Width\": float,\n        \"Height\": float,\n        \"Left\": float,\n        \"Top\": float\n      }\n    }\n    ...\n  ]\n}\n\n\n--image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTextDetections -> (list)\n\nAn array of text that was detected in the input image.\n\n(structure)\n\nInformation about a word or line of text detected by DetectText .\n\nThe DetectedText field contains the text that Amazon Rekognition detected in the image.\n\nEvery word and line has an identifier (Id ). Each word belongs to a line and has a parent identifier (ParentId ) that identifies the line of text in which the word appears. The word Id is also an index for the word within a line of words.\n\nFor more information, see Detecting Text in the Amazon Rekognition Developer Guide.\n\nDetectedText -> (string)\n\nThe word or line of text recognized by Amazon Rekognition.\n\nType -> (string)\n\nThe type of text that was detected.\n\nId -> (integer)\n\nThe identifier for the detected text. The identifier is only unique for a single call to DetectText .\n\nParentId -> (integer)\n\nThe Parent identifier for the detected text identified by the value of ID . If the type of detected text is LINE , the value of ParentId is Null .\n\nConfidence -> (float)\n\nThe confidence that Amazon Rekognition has in the accuracy of the detected text and the accuracy of the geometry points around the detected text.\n\nGeometry -> (structure)\n\nThe location of the detected text on the image. Includes an axis aligned coarse bounding box surrounding the text and a finer grain polygon for more accurate spatial information.\n\nBoundingBox -> (structure)\n\nAn axis-aligned coarse representation of the detected item’s location on the image.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nPolygon -> (list)\n\nWithin the bounding box, a fine-grained polygon around the detected item.\n\n(structure)\n\nThe X and Y coordinates of a point on an image. The X and Y values returned are ratios of the overall image size. For example, if the input image is 700x200 and the operation returns X=0.5 and Y=0.25, then the point is at the (350,50) pixel coordinate on the image.\n\nAn array of Point objects, Polygon , is returned by DetectText and by DetectCustomLabels . Polygon represents a fine-grained polygon around a detected item. For more information, see Geometry in the Amazon Rekognition Developer Guide.\n\nX -> (float)\n\nThe value of the X coordinate for a point on a Polygon .\n\nY -> (float)\n\nThe value of the Y coordinate for a point on a Polygon .\n\nTextModelVersion -> (string)\n\nThe model version used to detect text.",
      "command_examples": "Examples\n\nTo detect text in an image\n\nThe following detect-text command detects text in the specified image.\n\naws rekognition detect-text \\\n    --image '{\"S3Object\":{\"Bucket\":\"MyImageS3Bucket\",\"Name\":\"ExamplePicture.jpg\"}}'\n\n\nOutput:\n\n{\n    \"TextDetections\": [\n        {\n            \"Geometry\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.24624845385551453,\n                    \"Top\": 0.28288066387176514,\n                    \"Left\": 0.391388863325119,\n                    \"Height\": 0.022687450051307678\n                },\n                \"Polygon\": [\n                    {\n                        \"Y\": 0.28288066387176514,\n                        \"X\": 0.391388863325119\n                    },\n                    {\n                        \"Y\": 0.2826388478279114,\n                        \"X\": 0.6376373171806335\n                    },\n                    {\n                        \"Y\": 0.30532628297805786,\n                        \"X\": 0.637677013874054\n                    },\n                    {\n                        \"Y\": 0.305568128824234,\n                        \"X\": 0.39142853021621704\n                    }\n                ]\n            },\n            \"Confidence\": 94.35709381103516,\n            \"DetectedText\": \"ESTD 1882\",\n            \"Type\": \"LINE\",\n            \"Id\": 0\n        },\n        {\n            \"Geometry\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.33933889865875244,\n                    \"Top\": 0.32603850960731506,\n                    \"Left\": 0.34534579515457153,\n                    \"Height\": 0.07126858830451965\n                },\n                \"Polygon\": [\n                    {\n                        \"Y\": 0.32603850960731506,\n                        \"X\": 0.34534579515457153\n                    },\n                    {\n                        \"Y\": 0.32633158564567566,\n                        \"X\": 0.684684693813324\n                    },\n                    {\n                        \"Y\": 0.3976001739501953,\n                        \"X\": 0.684575080871582\n                    },\n                    {\n                        \"Y\": 0.3973070979118347,\n                        \"X\": 0.345236212015152\n                    }\n                ]\n            },\n            \"Confidence\": 99.95779418945312,\n            \"DetectedText\": \"BRAINS\",\n            \"Type\": \"LINE\",\n            \"Id\": 1\n        },\n        {\n            \"Confidence\": 97.22098541259766,\n            \"Geometry\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.061079490929841995,\n                    \"Top\": 0.2843210697174072,\n                    \"Left\": 0.391391396522522,\n                    \"Height\": 0.021029088646173477\n                },\n                \"Polygon\": [\n                    {\n                        \"Y\": 0.2843210697174072,\n                        \"X\": 0.391391396522522\n                    },\n                    {\n                        \"Y\": 0.2828207015991211,\n                        \"X\": 0.4524524509906769\n                    },\n                    {\n                        \"Y\": 0.3038259446620941,\n                        \"X\": 0.4534534513950348\n                    },\n                    {\n                        \"Y\": 0.30532634258270264,\n                        \"X\": 0.3923923969268799\n                    }\n                ]\n            },\n            \"DetectedText\": \"ESTD\",\n            \"ParentId\": 0,\n            \"Type\": \"WORD\",\n            \"Id\": 2\n        },\n        {\n            \"Confidence\": 91.49320983886719,\n            \"Geometry\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.07007007300853729,\n                    \"Top\": 0.2828207015991211,\n                    \"Left\": 0.5675675868988037,\n                    \"Height\": 0.02250562608242035\n                },\n                \"Polygon\": [\n                    {\n                        \"Y\": 0.2828207015991211,\n                        \"X\": 0.5675675868988037\n                    },\n                    {\n                        \"Y\": 0.2828207015991211,\n                        \"X\": 0.6376376152038574\n                    },\n                    {\n                        \"Y\": 0.30532634258270264,\n                        \"X\": 0.6376376152038574\n                    },\n                    {\n                        \"Y\": 0.30532634258270264,\n                        \"X\": 0.5675675868988037\n                    }\n                ]\n            },\n            \"DetectedText\": \"1882\",\n            \"ParentId\": 0,\n            \"Type\": \"WORD\",\n            \"Id\": 3\n        },\n        {\n            \"Confidence\": 99.95779418945312,\n            \"Geometry\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.33933934569358826,\n                    \"Top\": 0.32633158564567566,\n                    \"Left\": 0.3453453481197357,\n                    \"Height\": 0.07127484679222107\n                },\n                \"Polygon\": [\n                    {\n                        \"Y\": 0.32633158564567566,\n                        \"X\": 0.3453453481197357\n                    },\n                    {\n                        \"Y\": 0.32633158564567566,\n                        \"X\": 0.684684693813324\n                    },\n                    {\n                        \"Y\": 0.39759939908981323,\n                        \"X\": 0.6836836934089661\n                    },\n                    {\n                        \"Y\": 0.39684921503067017,\n                        \"X\": 0.3453453481197357\n                    }\n                ]\n            },\n            \"DetectedText\": \"BRAINS\",\n            \"ParentId\": 1,\n            \"Type\": \"WORD\",\n            \"Id\": 4\n        }\n    ]\n}\n"
    },
    {
      "command_name": "get-celebrity-info",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/get-celebrity-info.html",
      "command_description": "Description\n\nGets the name and additional information about a celebrity based on their Amazon Rekognition ID. The additional information is returned as an array of URLs. If there is no additional information about the celebrity, this list is empty.\n\nFor more information, see Recognizing Celebrities in an Image in the Amazon Rekognition Developer Guide.\n\nThis operation requires permissions to perform the rekognition:GetCelebrityInfo action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-celebrity-info\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID for the celebrity. You get the celebrity ID from a call to the RecognizeCelebrities operation, which recognizes celebrities in an image.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUrls -> (list)\n\nAn array of URLs pointing to additional celebrity information.\n\n(string)\n\nName -> (string)\n\nThe name of the celebrity.\n\nKnownGender -> (structure)\n\nRetrieves the known gender for the celebrity.\n\nType -> (string)\n\nA string value of the KnownGender info about the Celebrity.",
      "command_examples": "Examples\n\nTo get information about a celebrity\n\nThe following get-celebrity-info command displays information about the specified celebrity. The id parameter comes from a previous call to recognize-celebrities.\n\naws rekognition get-celebrity-info --id nnnnnnn\n\n\nOutput:\n\n{\n    \"Name\": \"Celeb A\",\n    \"Urls\": [\n        \"www.imdb.com/name/aaaaaaaaa\"\n    ]\n}\n\n\nFor more information, see Getting Information About a Celebrity in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "get-celebrity-recognition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/get-celebrity-recognition.html",
      "command_description": "Description\n\nGets the celebrity recognition results for a Amazon Rekognition Video analysis started by StartCelebrityRecognition .\n\nCelebrity recognition in a video is an asynchronous operation. Analysis is started by a call to StartCelebrityRecognition which returns a job identifier (JobId ). When the celebrity recognition operation finishes, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic registered in the initial call to StartCelebrityRecognition . To get the results of the celebrity recognition analysis, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetCelebrityDetection and pass the job identifier (JobId ) from the initial call to StartCelebrityDetection .\n\nFor more information, see Working With Stored Videos in the Amazon Rekognition Developer Guide.\n\nGetCelebrityRecognition returns detected celebrities and the time(s) they are detected in an array (Celebrities ) of CelebrityRecognition objects. Each CelebrityRecognition contains information about the celebrity in a CelebrityDetail object and the time, Timestamp , the celebrity was detected.\n\nNote\n\nGetCelebrityRecognition only returns the default facial attributes (BoundingBox , Confidence , Landmarks , Pose , and Quality ). The other facial attributes listed in the Face object of the following response syntax are not returned. For more information, see FaceDetail in the Amazon Rekognition Developer Guide.\n\nBy default, the Celebrities array is sorted by time (milliseconds from the start of the video). You can also sort the array by celebrity by specifying the value ID in the SortBy input parameter.\n\nThe CelebrityDetail object includes the celebrity identifer and additional information urls. If you don’t store the additional information urls, you can get them later by calling GetCelebrityInfo with the celebrity identifer.\n\nNo information is returned for faces not recognized as celebrities.\n\nUse MaxResults parameter to limit the number of labels returned. If there are more results than specified in MaxResults , the value of NextToken in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call GetCelebrityDetection and populate the NextToken request parameter with the token value returned from the previous call to GetCelebrityRecognition .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-celebrity-recognition\n--job-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nJob identifier for the required celebrity recognition analysis. You can get the job identifer from a call to StartCelebrityRecognition .\n\n--max-results (integer)\n\nMaximum number of results to return per paginated call. The largest value you can specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results is returned. The default value is 1000.\n\n--next-token (string)\n\nIf the previous response was incomplete (because there is more recognized celebrities to retrieve), Amazon Rekognition Video returns a pagination token in the response. You can use this pagination token to retrieve the next set of celebrities.\n\n--sort-by (string)\n\nSort to use for celebrities returned in Celebrities field. Specify ID to sort by the celebrity identifier, specify TIMESTAMP to sort by the time the celebrity was recognized.\n\nPossible values:\n\nID\n\nTIMESTAMP\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nThe current status of the celebrity recognition job.\n\nStatusMessage -> (string)\n\nIf the job fails, StatusMessage provides a descriptive error message.\n\nVideoMetadata -> (structure)\n\nInformation about a video that Amazon Rekognition Video analyzed. Videometadata is returned in every page of paginated responses from a Amazon Rekognition Video operation.\n\nCodec -> (string)\n\nType of compression used in the analyzed video.\n\nDurationMillis -> (long)\n\nLength of the video in milliseconds.\n\nFormat -> (string)\n\nFormat of the analyzed video. Possible values are MP4, MOV and AVI.\n\nFrameRate -> (float)\n\nNumber of frames per second in the video.\n\nFrameHeight -> (long)\n\nVertical pixel dimension of the video.\n\nFrameWidth -> (long)\n\nHorizontal pixel dimension of the video.\n\nColorRange -> (string)\n\nA description of the range of luminance values in a video, either LIMITED (16 to 235) or FULL (0 to 255).\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Rekognition Video returns this token that you can use in the subsequent request to retrieve the next set of celebrities.\n\nCelebrities -> (list)\n\nArray of celebrities recognized in the video.\n\n(structure)\n\nInformation about a detected celebrity and the time the celebrity was detected in a stored video. For more information, see GetCelebrityRecognition in the Amazon Rekognition Developer Guide.\n\nTimestamp -> (long)\n\nThe time, in milliseconds from the start of the video, that the celebrity was recognized.\n\nCelebrity -> (structure)\n\nInformation about a recognized celebrity.\n\nUrls -> (list)\n\nAn array of URLs pointing to additional celebrity information.\n\n(string)\n\nName -> (string)\n\nThe name of the celebrity.\n\nId -> (string)\n\nThe unique identifier for the celebrity.\n\nConfidence -> (float)\n\nThe confidence, in percentage, that Amazon Rekognition has that the recognized face is the celebrity.\n\nBoundingBox -> (structure)\n\nBounding box around the body of a celebrity.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nFace -> (structure)\n\nFace details for the recognized celebrity.\n\nBoundingBox -> (structure)\n\nBounding box of the face. Default attribute.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nAgeRange -> (structure)\n\nThe estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n\nLow -> (integer)\n\nThe lowest estimated age.\n\nHigh -> (integer)\n\nThe highest estimated age.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyeglasses -> (structure)\n\nIndicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing eye glasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSunglasses -> (structure)\n\nIndicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing sunglasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nGender -> (structure)\n\nThe predicted gender of a detected face.\n\nValue -> (string)\n\nThe predicted gender of the face.\n\nConfidence -> (float)\n\nLevel of confidence in the prediction.\n\nBeard -> (structure)\n\nIndicates whether or not the face has a beard, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has beard or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMustache -> (structure)\n\nIndicates whether or not the face has a mustache, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has mustache or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyesOpen -> (structure)\n\nIndicates whether or not the eyes on the face are open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the eyes on the face are open.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMouthOpen -> (structure)\n\nIndicates whether or not the mouth on the face is open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the mouth on the face is open or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nLandmarks -> (list)\n\nIndicates the location of landmarks on the face. Default attribute.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw. Default attribute.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies image brightness and sharpness. Default attribute.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree). Default attribute.",
      "command_examples": "Examples\n\nTo get the results of a celebrity recognition operation\n\nThe following get-celebrity-recognition command diplays the results of a celebrity recognition operation that you started previously by calling start-celebrity-recognition.\n\naws rekognition get-celebrity-recognition  \\\n    --job-id 1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\n\n\nOutput:\n\n{\n    \"NextToken\": \"3D01ClxlCiT31VsRDkAO3IybLb/h5AtDWSGuhYi+N1FIJwwPtAkuKzDhL2rV3GcwmNt77+12\",\n    \"Celebrities\": [\n        {\n            \"Timestamp\": 0,\n            \"Celebrity\": {\n                \"Confidence\": 96.0,\n                \"Face\": {\n                    \"BoundingBox\": {\n                        \"Width\": 0.70333331823349,\n                        \"Top\": 0.16750000417232513,\n                        \"Left\": 0.19555555284023285,\n                        \"Height\": 0.3956249952316284\n                    },\n                    \"Landmarks\": [\n                        {\n                            \"Y\": 0.31031012535095215,\n                            \"X\": 0.441436767578125,\n                            \"Type\": \"eyeLeft\"\n                        },\n                        {\n                            \"Y\": 0.3081788718700409,\n                            \"X\": 0.6437258720397949,\n                            \"Type\": \"eyeRight\"\n                        },\n                        {\n                            \"Y\": 0.39542075991630554,\n                            \"X\": 0.5572493076324463,\n                            \"Type\": \"nose\"\n                        },\n                        {\n                            \"Y\": 0.4597957134246826,\n                            \"X\": 0.4579732120037079,\n                            \"Type\": \"mouthLeft\"\n                        },\n                        {\n                            \"Y\": 0.45688048005104065,\n                            \"X\": 0.6349081993103027,\n                            \"Type\": \"mouthRight\"\n                        }\n                    ],\n                    \"Pose\": {\n                        \"Yaw\": 8.943398475646973,\n                        \"Roll\": -2.0309247970581055,\n                        \"Pitch\": -0.5674862861633301\n                    },\n                    \"Quality\": {\n                        \"Sharpness\": 99.40211486816406,\n                        \"Brightness\": 89.47132110595703\n                    },\n                    \"Confidence\": 99.99861145019531\n                },\n                \"Name\": \"CelebrityA\",\n                \"Urls\": [\n                    \"www.imdb.com/name/111111111\"\n                ],\n                \"Id\": \"nnnnnn\"\n            }\n        },\n        {\n            \"Timestamp\": 467,\n            \"Celebrity\": {\n                \"Confidence\": 99.0,\n                \"Face\": {\n                    \"BoundingBox\": {\n                        \"Width\": 0.6877777576446533,\n                        \"Top\": 0.18437500298023224,\n                        \"Left\": 0.20555555820465088,\n                        \"Height\": 0.3868750035762787\n                    },\n                    \"Landmarks\": [\n                        {\n                            \"Y\": 0.31895750761032104,\n                            \"X\": 0.4411413371562958,\n                            \"Type\": \"eyeLeft\"\n                        },\n                        {\n                            \"Y\": 0.3140959143638611,\n                            \"X\": 0.6523157954216003,\n                            \"Type\": \"eyeRight\"\n                        },\n                        {\n                            \"Y\": 0.4016456604003906,\n                            \"X\": 0.5682755708694458,\n                            \"Type\": \"nose\"\n                        },\n                        {\n                            \"Y\": 0.46894142031669617,\n                            \"X\": 0.4597797095775604,\n                            \"Type\": \"mouthLeft\"\n                        },\n                        {\n                            \"Y\": 0.46971091628074646,\n                            \"X\": 0.6286435127258301,\n                            \"Type\": \"mouthRight\"\n                        }\n                    ],\n                    \"Pose\": {\n                        \"Yaw\": 10.433465957641602,\n                        \"Roll\": -3.347442388534546,\n                        \"Pitch\": 1.3709543943405151\n                    },\n                    \"Quality\": {\n                        \"Sharpness\": 99.5531005859375,\n                        \"Brightness\": 88.5764389038086\n                    },\n                    \"Confidence\": 99.99148559570312\n                },\n                \"Name\": \"Jane Celebrity\",\n                \"Urls\": [\n                    \"www.imdb.com/name/111111111\"\n                ],\n                \"Id\": \"nnnnnn\"\n            }\n        }\n    ],\n    \"JobStatus\": \"SUCCEEDED\",\n    \"VideoMetadata\": {\n        \"Format\": \"QuickTime / MOV\",\n        \"FrameRate\": 29.978118896484375,\n        \"Codec\": \"h264\",\n        \"DurationMillis\": 4570,\n        \"FrameHeight\": 1920,\n        \"FrameWidth\": 1080\n    }\n}\n\n\nFor more information, see Recognizing Celebrities in a Stored Video in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "get-content-moderation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/get-content-moderation.html",
      "command_description": "Description\n\nGets the inappropriate, unwanted, or offensive content analysis results for a Amazon Rekognition Video analysis started by StartContentModeration . For a list of moderation labels in Amazon Rekognition, see Using the image and video moderation APIs .\n\nAmazon Rekognition Video inappropriate or offensive content detection in a stored video is an asynchronous operation. You start analysis by calling StartContentModeration which returns a job identifier (JobId ). When analysis finishes, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic registered in the initial call to StartContentModeration . To get the results of the content analysis, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetContentModeration and pass the job identifier (JobId ) from the initial call to StartContentModeration .\n\nFor more information, see Working with Stored Videos in the Amazon Rekognition Devlopers Guide.\n\nGetContentModeration returns detected inappropriate, unwanted, or offensive content moderation labels, and the time they are detected, in an array, ModerationLabels , of ContentModerationDetection objects.\n\nBy default, the moderated labels are returned sorted by time, in milliseconds from the start of the video. You can also sort them by moderated label by specifying NAME for the SortBy input parameter.\n\nSince video analysis can return a large number of results, use the MaxResults parameter to limit the number of labels returned in a single call to GetContentModeration . If there are more results than specified in MaxResults , the value of NextToken in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call GetContentModeration and populate the NextToken request parameter with the value of NextToken returned from the previous call to GetContentModeration .\n\nFor more information, see Content moderation in the Amazon Rekognition Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-content-moderation\n--job-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier for the inappropriate, unwanted, or offensive content moderation job. Use JobId to identify the job in a subsequent call to GetContentModeration .\n\n--max-results (integer)\n\nMaximum number of results to return per paginated call. The largest value you can specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results is returned. The default value is 1000.\n\n--next-token (string)\n\nIf the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of content moderation labels.\n\n--sort-by (string)\n\nSort to use for elements in the ModerationLabelDetections array. Use TIMESTAMP to sort array elements by the time labels are detected. Use NAME to alphabetically group elements for a label together. Within each label group, the array element are sorted by detection confidence. The default sort is by TIMESTAMP .\n\nPossible values:\n\nNAME\n\nTIMESTAMP\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nThe current status of the content moderation analysis job.\n\nStatusMessage -> (string)\n\nIf the job fails, StatusMessage provides a descriptive error message.\n\nVideoMetadata -> (structure)\n\nInformation about a video that Amazon Rekognition analyzed. Videometadata is returned in every page of paginated responses from GetContentModeration .\n\nCodec -> (string)\n\nType of compression used in the analyzed video.\n\nDurationMillis -> (long)\n\nLength of the video in milliseconds.\n\nFormat -> (string)\n\nFormat of the analyzed video. Possible values are MP4, MOV and AVI.\n\nFrameRate -> (float)\n\nNumber of frames per second in the video.\n\nFrameHeight -> (long)\n\nVertical pixel dimension of the video.\n\nFrameWidth -> (long)\n\nHorizontal pixel dimension of the video.\n\nColorRange -> (string)\n\nA description of the range of luminance values in a video, either LIMITED (16 to 235) or FULL (0 to 255).\n\nModerationLabels -> (list)\n\nThe detected inappropriate, unwanted, or offensive content moderation labels and the time(s) they were detected.\n\n(structure)\n\nInformation about an inappropriate, unwanted, or offensive content label detection in a stored video.\n\nTimestamp -> (long)\n\nTime, in milliseconds from the beginning of the video, that the content moderation label was detected.\n\nModerationLabel -> (structure)\n\nThe content moderation label detected by in the stored video.\n\nConfidence -> (float)\n\nSpecifies the confidence that Amazon Rekognition has that the label has been correctly identified.\n\nIf you don’t specify the MinConfidence parameter in the call to DetectModerationLabels , the operation returns labels with a confidence value greater than or equal to 50 percent.\n\nName -> (string)\n\nThe label name for the type of unsafe content detected in the image.\n\nParentName -> (string)\n\nThe name for the parent label. Labels at the top level of the hierarchy have the parent label \"\" .\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Rekognition Video returns this token that you can use in the subsequent request to retrieve the next set of content moderation labels.\n\nModerationModelVersion -> (string)\n\nVersion number of the moderation detection model that was used to detect inappropriate, unwanted, or offensive content.",
      "command_examples": "Examples\n\nTo get the results of an unsafe content operation\n\nThe following get-content-moderation command displays the results of an unsafe content operation that you started previously by calling start-content-moderation.\n\naws rekognition get-content-moderation \\\n    --job-id 1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\n\n\nOutput:\n\n{\n    \"NextToken\": \"dlhcKMHMzpCBGFukz6IO3JMcWiJAamCVhXHt3r6b4b5Tfbyw3q7o+Jeezt+ZpgfOnW9FCCgQ\",\n    \"ModerationLabels\": [\n        {\n            \"Timestamp\": 0,\n            \"ModerationLabel\": {\n                \"Confidence\": 97.39583587646484,\n                \"ParentName\": \"\",\n                \"Name\": \"Violence\"\n            }\n        },\n        {\n            \"Timestamp\": 0,\n            \"ModerationLabel\": {\n                \"Confidence\": 97.39583587646484,\n                \"ParentName\": \"Violence\",\n                \"Name\": \"Weapon Violence\"\n            }\n        }\n    ],\n    \"JobStatus\": \"SUCCEEDED\",\n    \"VideoMetadata\": {\n        \"Format\": \"QuickTime / MOV\",\n        \"FrameRate\": 29.97515869140625,\n        \"Codec\": \"h264\",\n        \"DurationMillis\": 6039,\n        \"FrameHeight\": 1920,\n        \"FrameWidth\": 1080\n    }\n}\n\n\nFor more information, see Detecting Unsafe Stored Videos in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "get-face-detection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/get-face-detection.html",
      "command_description": "Description\n\nGets face detection results for a Amazon Rekognition Video analysis started by StartFaceDetection .\n\nFace detection with Amazon Rekognition Video is an asynchronous operation. You start face detection by calling StartFaceDetection which returns a job identifier (JobId ). When the face detection operation finishes, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic registered in the initial call to StartFaceDetection . To get the results of the face detection operation, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetFaceDetection and pass the job identifier (JobId ) from the initial call to StartFaceDetection .\n\nGetFaceDetection returns an array of detected faces (Faces ) sorted by the time the faces were detected.\n\nUse MaxResults parameter to limit the number of labels returned. If there are more results than specified in MaxResults , the value of NextToken in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call GetFaceDetection and populate the NextToken request parameter with the token value returned from the previous call to GetFaceDetection .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-face-detection\n--job-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nUnique identifier for the face detection job. The JobId is returned from StartFaceDetection .\n\n--max-results (integer)\n\nMaximum number of results to return per paginated call. The largest value you can specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results is returned. The default value is 1000.\n\n--next-token (string)\n\nIf the previous response was incomplete (because there are more faces to retrieve), Amazon Rekognition Video returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nThe current status of the face detection job.\n\nStatusMessage -> (string)\n\nIf the job fails, StatusMessage provides a descriptive error message.\n\nVideoMetadata -> (structure)\n\nInformation about a video that Amazon Rekognition Video analyzed. Videometadata is returned in every page of paginated responses from a Amazon Rekognition video operation.\n\nCodec -> (string)\n\nType of compression used in the analyzed video.\n\nDurationMillis -> (long)\n\nLength of the video in milliseconds.\n\nFormat -> (string)\n\nFormat of the analyzed video. Possible values are MP4, MOV and AVI.\n\nFrameRate -> (float)\n\nNumber of frames per second in the video.\n\nFrameHeight -> (long)\n\nVertical pixel dimension of the video.\n\nFrameWidth -> (long)\n\nHorizontal pixel dimension of the video.\n\nColorRange -> (string)\n\nA description of the range of luminance values in a video, either LIMITED (16 to 235) or FULL (0 to 255).\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.\n\nFaces -> (list)\n\nAn array of faces detected in the video. Each element contains a detected face’s details and the time, in milliseconds from the start of the video, the face was detected.\n\n(structure)\n\nInformation about a face detected in a video analysis request and the time the face was detected in the video.\n\nTimestamp -> (long)\n\nTime, in milliseconds from the start of the video, that the face was detected.\n\nFace -> (structure)\n\nThe face properties for the detected face.\n\nBoundingBox -> (structure)\n\nBounding box of the face. Default attribute.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nAgeRange -> (structure)\n\nThe estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n\nLow -> (integer)\n\nThe lowest estimated age.\n\nHigh -> (integer)\n\nThe highest estimated age.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyeglasses -> (structure)\n\nIndicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing eye glasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSunglasses -> (structure)\n\nIndicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing sunglasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nGender -> (structure)\n\nThe predicted gender of a detected face.\n\nValue -> (string)\n\nThe predicted gender of the face.\n\nConfidence -> (float)\n\nLevel of confidence in the prediction.\n\nBeard -> (structure)\n\nIndicates whether or not the face has a beard, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has beard or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMustache -> (structure)\n\nIndicates whether or not the face has a mustache, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has mustache or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyesOpen -> (structure)\n\nIndicates whether or not the eyes on the face are open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the eyes on the face are open.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMouthOpen -> (structure)\n\nIndicates whether or not the mouth on the face is open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the mouth on the face is open or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nLandmarks -> (list)\n\nIndicates the location of landmarks on the face. Default attribute.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw. Default attribute.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies image brightness and sharpness. Default attribute.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree). Default attribute.",
      "command_examples": "Examples\n\nTo get the results of a face detection operation\n\nThe following get-face-detection command displays the results of a face detection operation that you started previously by calling start-face-detection.\n\naws rekognition get-face-detection \\\n    --job-id 1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\n\n\nOutput:\n\n{\n    \"Faces\": [\n        {\n            \"Timestamp\": 467,\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.1560753583908081,\n                    \"Top\": 0.13555361330509186,\n                    \"Left\": -0.0952017530798912,\n                    \"Height\": 0.6934483051300049\n                },\n                \"Landmarks\": [\n                    {\n                        \"Y\": 0.4013825058937073,\n                        \"X\": -0.041750285774469376,\n                        \"Type\": \"eyeLeft\"\n                    },\n                    {\n                        \"Y\": 0.41695496439933777,\n                        \"X\": 0.027979329228401184,\n                        \"Type\": \"eyeRight\"\n                    },\n                    {\n                        \"Y\": 0.6375303268432617,\n                        \"X\": -0.04034662991762161,\n                        \"Type\": \"mouthLeft\"\n                    },\n                    {\n                        \"Y\": 0.6497718691825867,\n                        \"X\": 0.013960429467260838,\n                        \"Type\": \"mouthRight\"\n                    },\n                    {\n                        \"Y\": 0.5238034129142761,\n                        \"X\": 0.008022055961191654,\n                        \"Type\": \"nose\"\n                    }\n                ],\n                \"Pose\": {\n                    \"Yaw\": -58.07863998413086,\n                    \"Roll\": 1.9384294748306274,\n                    \"Pitch\": -24.66305160522461\n                },\n                \"Quality\": {\n                    \"Sharpness\": 83.14741516113281,\n                    \"Brightness\": 25.75942611694336\n                },\n                \"Confidence\": 87.7622299194336\n            }\n        },\n        {\n            \"Timestamp\": 967,\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.28559377789497375,\n                    \"Top\": 0.19436298310756683,\n                    \"Left\": 0.024553587660193443,\n                    \"Height\": 0.7216082215309143\n                },\n                \"Landmarks\": [\n                    {\n                        \"Y\": 0.4650231599807739,\n                        \"X\": 0.16269078850746155,\n                        \"Type\": \"eyeLeft\"\n                    },\n                    {\n                        \"Y\": 0.4843238294124603,\n                        \"X\": 0.2782580852508545,\n                        \"Type\": \"eyeRight\"\n                    },\n                    {\n                        \"Y\": 0.71530681848526,\n                        \"X\": 0.1741468608379364,\n                        \"Type\": \"mouthLeft\"\n                    },\n                    {\n                        \"Y\": 0.7310671210289001,\n                        \"X\": 0.26857468485832214,\n                        \"Type\": \"mouthRight\"\n                    },\n                    {\n                        \"Y\": 0.582602322101593,\n                        \"X\": 0.2566150426864624,\n                        \"Type\": \"nose\"\n                    }\n                ],\n                \"Pose\": {\n                    \"Yaw\": 11.487052917480469,\n                    \"Roll\": 5.074230670928955,\n                    \"Pitch\": 15.396159172058105\n                },\n                \"Quality\": {\n                    \"Sharpness\": 73.32209777832031,\n                    \"Brightness\": 54.96497344970703\n                },\n                \"Confidence\": 99.99998474121094\n            }\n        }\n    ],\n    \"NextToken\": \"OzL223pDKy9116O/02KXRqFIEAwxjy4PkgYcm3hSo0rdysbXg5Ex0eFgTGEj0ADEac6S037U\",\n    \"JobStatus\": \"SUCCEEDED\",\n    \"VideoMetadata\": {\n        \"Format\": \"QuickTime / MOV\",\n        \"FrameRate\": 29.970617294311523,\n        \"Codec\": \"h264\",\n        \"DurationMillis\": 6806,\n        \"FrameHeight\": 1080,\n        \"FrameWidth\": 1920\n    }\n}\n\n\nFor more information, see Detecting Faces in a Stored Video in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "get-face-search",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/get-face-search.html",
      "command_description": "Description\n\nGets the face search results for Amazon Rekognition Video face search started by StartFaceSearch . The search returns faces in a collection that match the faces of persons detected in a video. It also includes the time(s) that faces are matched in the video.\n\nFace search in a video is an asynchronous operation. You start face search by calling to StartFaceSearch which returns a job identifier (JobId ). When the search operation finishes, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic registered in the initial call to StartFaceSearch . To get the search results, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetFaceSearch and pass the job identifier (JobId ) from the initial call to StartFaceSearch .\n\nFor more information, see Searching Faces in a Collection in the Amazon Rekognition Developer Guide.\n\nThe search results are retured in an array, Persons , of PersonMatch objects. Each``PersonMatch`` element contains details about the matching faces in the input collection, person information (facial attributes, bounding boxes, and person identifer) for the matched person, and the time the person was matched in the video.\n\nNote\n\nGetFaceSearch only returns the default facial attributes (BoundingBox , Confidence , Landmarks , Pose , and Quality ). The other facial attributes listed in the Face object of the following response syntax are not returned. For more information, see FaceDetail in the Amazon Rekognition Developer Guide.\n\nBy default, the Persons array is sorted by the time, in milliseconds from the start of the video, persons are matched. You can also sort by persons by specifying INDEX for the SORTBY input parameter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-face-search\n--job-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe job identifer for the search request. You get the job identifier from an initial call to StartFaceSearch .\n\n--max-results (integer)\n\nMaximum number of results to return per paginated call. The largest value you can specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results is returned. The default value is 1000.\n\n--next-token (string)\n\nIf the previous response was incomplete (because there is more search results to retrieve), Amazon Rekognition Video returns a pagination token in the response. You can use this pagination token to retrieve the next set of search results.\n\n--sort-by (string)\n\nSort to use for grouping faces in the response. Use TIMESTAMP to group faces by the time that they are recognized. Use INDEX to sort by recognized faces.\n\nPossible values:\n\nINDEX\n\nTIMESTAMP\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nThe current status of the face search job.\n\nStatusMessage -> (string)\n\nIf the job fails, StatusMessage provides a descriptive error message.\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Rekognition Video returns this token that you can use in the subsequent request to retrieve the next set of search results.\n\nVideoMetadata -> (structure)\n\nInformation about a video that Amazon Rekognition analyzed. Videometadata is returned in every page of paginated responses from a Amazon Rekognition Video operation.\n\nCodec -> (string)\n\nType of compression used in the analyzed video.\n\nDurationMillis -> (long)\n\nLength of the video in milliseconds.\n\nFormat -> (string)\n\nFormat of the analyzed video. Possible values are MP4, MOV and AVI.\n\nFrameRate -> (float)\n\nNumber of frames per second in the video.\n\nFrameHeight -> (long)\n\nVertical pixel dimension of the video.\n\nFrameWidth -> (long)\n\nHorizontal pixel dimension of the video.\n\nColorRange -> (string)\n\nA description of the range of luminance values in a video, either LIMITED (16 to 235) or FULL (0 to 255).\n\nPersons -> (list)\n\nAn array of persons, PersonMatch , in the video whose face(s) match the face(s) in an Amazon Rekognition collection. It also includes time information for when persons are matched in the video. You specify the input collection in an initial call to StartFaceSearch . Each Persons element includes a time the person was matched, face match details (FaceMatches ) for matching faces in the collection, and person information (Person ) for the matched person.\n\n(structure)\n\nInformation about a person whose face matches a face(s) in an Amazon Rekognition collection. Includes information about the faces in the Amazon Rekognition collection ( FaceMatch ), information about the person ( PersonDetail ), and the time stamp for when the person was detected in a video. An array of PersonMatch objects is returned by GetFaceSearch .\n\nTimestamp -> (long)\n\nThe time, in milliseconds from the beginning of the video, that the person was matched in the video.\n\nPerson -> (structure)\n\nInformation about the matched person.\n\nIndex -> (long)\n\nIdentifier for the person detected person within a video. Use to keep track of the person throughout the video. The identifier is not stored by Amazon Rekognition.\n\nBoundingBox -> (structure)\n\nBounding box around the detected person.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nFace -> (structure)\n\nFace details for the detected person.\n\nBoundingBox -> (structure)\n\nBounding box of the face. Default attribute.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nAgeRange -> (structure)\n\nThe estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n\nLow -> (integer)\n\nThe lowest estimated age.\n\nHigh -> (integer)\n\nThe highest estimated age.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyeglasses -> (structure)\n\nIndicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing eye glasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSunglasses -> (structure)\n\nIndicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing sunglasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nGender -> (structure)\n\nThe predicted gender of a detected face.\n\nValue -> (string)\n\nThe predicted gender of the face.\n\nConfidence -> (float)\n\nLevel of confidence in the prediction.\n\nBeard -> (structure)\n\nIndicates whether or not the face has a beard, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has beard or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMustache -> (structure)\n\nIndicates whether or not the face has a mustache, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has mustache or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyesOpen -> (structure)\n\nIndicates whether or not the eyes on the face are open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the eyes on the face are open.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMouthOpen -> (structure)\n\nIndicates whether or not the mouth on the face is open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the mouth on the face is open or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nLandmarks -> (list)\n\nIndicates the location of landmarks on the face. Default attribute.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw. Default attribute.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies image brightness and sharpness. Default attribute.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree). Default attribute.\n\nFaceMatches -> (list)\n\nInformation about the faces in the input collection that match the face of a person in the video.\n\n(structure)\n\nProvides face metadata. In addition, it also provides the confidence in the match of this face with the input face.\n\nSimilarity -> (float)\n\nConfidence in the match of this face with the input face.\n\nFace -> (structure)\n\nDescribes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.\n\nFaceId -> (string)\n\nUnique identifier that Amazon Rekognition assigns to the face.\n\nBoundingBox -> (structure)\n\nBounding box of the face.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nImageId -> (string)\n\nUnique identifier that Amazon Rekognition assigns to the input image.\n\nExternalImageId -> (string)\n\nIdentifier that you assign to all the faces in the input image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree).",
      "command_examples": "Examples\n\nTo get the results of a face search operation\n\nThe following get-face-search command displays the results of a face search operation that you started previously by calling start-face-search.\n\naws rekognition get-face-search  \\\n    --job-id 1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\n\n\nOutput:\n\n{\n    \"Persons\": [\n        {\n            \"Timestamp\": 467,\n            \"FaceMatches\": [],\n            \"Person\": {\n                \"Index\": 0,\n                \"Face\": {\n                    \"BoundingBox\": {\n                        \"Width\": 0.1560753583908081,\n                        \"Top\": 0.13555361330509186,\n                        \"Left\": -0.0952017530798912,\n                        \"Height\": 0.6934483051300049\n                    },\n                    \"Landmarks\": [\n                        {\n                            \"Y\": 0.4013825058937073,\n                            \"X\": -0.041750285774469376,\n                            \"Type\": \"eyeLeft\"\n                        },\n                        {\n                            \"Y\": 0.41695496439933777,\n                            \"X\": 0.027979329228401184,\n                            \"Type\": \"eyeRight\"\n                        },\n                        {\n                            \"Y\": 0.6375303268432617,\n                            \"X\": -0.04034662991762161,\n                            \"Type\": \"mouthLeft\"\n                        },\n                        {\n                            \"Y\": 0.6497718691825867,\n                            \"X\": 0.013960429467260838,\n                            \"Type\": \"mouthRight\"\n                        },\n                        {\n                            \"Y\": 0.5238034129142761,\n                            \"X\": 0.008022055961191654,\n                            \"Type\": \"nose\"\n                        }\n                    ],\n                    \"Pose\": {\n                        \"Yaw\": -58.07863998413086,\n                        \"Roll\": 1.9384294748306274,\n                        \"Pitch\": -24.66305160522461\n                    },\n                    \"Quality\": {\n                        \"Sharpness\": 83.14741516113281,\n                        \"Brightness\": 25.75942611694336\n                    },\n                    \"Confidence\": 87.7622299194336\n                }\n            }\n        },\n        {\n            \"Timestamp\": 967,\n            \"FaceMatches\": [\n                {\n                    \"Face\": {\n                        \"BoundingBox\": {\n                            \"Width\": 0.12368900328874588,\n                            \"Top\": 0.16007399559020996,\n                            \"Left\": 0.5901259779930115,\n                            \"Height\": 0.2514039874076843\n                        },\n                        \"FaceId\": \"056a95fa-2060-4159-9cab-7ed4daa030fa\",\n                        \"ExternalImageId\": \"image3.jpg\",\n                        \"Confidence\": 100.0,\n                        \"ImageId\": \"08f8a078-8929-37fd-8e8f-aadf690e8232\"\n                    },\n                    \"Similarity\": 98.44476318359375\n                }\n            ],\n            \"Person\": {\n                \"Index\": 1,\n                \"Face\": {\n                    \"BoundingBox\": {\n                        \"Width\": 0.28559377789497375,\n                        \"Top\": 0.19436298310756683,\n                        \"Left\": 0.024553587660193443,\n                        \"Height\": 0.7216082215309143\n                    },\n                    \"Landmarks\": [\n                        {\n                            \"Y\": 0.4650231599807739,\n                            \"X\": 0.16269078850746155,\n                            \"Type\": \"eyeLeft\"\n                        },\n                        {\n                            \"Y\": 0.4843238294124603,\n                            \"X\": 0.2782580852508545,\n                            \"Type\": \"eyeRight\"\n                        },\n                        {\n                            \"Y\": 0.71530681848526,\n                            \"X\": 0.1741468608379364,\n                            \"Type\": \"mouthLeft\"\n                        },\n                        {\n                            \"Y\": 0.7310671210289001,\n                            \"X\": 0.26857468485832214,\n                            \"Type\": \"mouthRight\"\n                        },\n                        {\n                            \"Y\": 0.582602322101593,\n                            \"X\": 0.2566150426864624,\n                            \"Type\": \"nose\"\n                        }\n                    ],\n                    \"Pose\": {\n                        \"Yaw\": 11.487052917480469,\n                        \"Roll\": 5.074230670928955,\n                        \"Pitch\": 15.396159172058105\n                    },\n                    \"Quality\": {\n                        \"Sharpness\": 73.32209777832031,\n                        \"Brightness\": 54.96497344970703\n                    },\n                    \"Confidence\": 99.99998474121094\n                }\n            }\n        }\n    ],\n    \"NextToken\": \"5bkgcezyuaqhtWk3C8OTW6cjRghrwV9XDMivm5B3MXm+Lv6G+L+GejyFHPhoNa/ldXIC4c/d\",\n    \"JobStatus\": \"SUCCEEDED\",\n    \"VideoMetadata\": {\n        \"Format\": \"QuickTime / MOV\",\n        \"FrameRate\": 29.970617294311523,\n        \"Codec\": \"h264\",\n        \"DurationMillis\": 6806,\n        \"FrameHeight\": 1080,\n        \"FrameWidth\": 1920\n    }\n}\n\n\nFor more information, see Searching Stored Videos for Faces in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "get-label-detection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/get-label-detection.html",
      "command_description": "Description\n\nGets the label detection results of a Amazon Rekognition Video analysis started by StartLabelDetection .\n\nThe label detection operation is started by a call to StartLabelDetection which returns a job identifier (JobId ). When the label detection operation finishes, Amazon Rekognition publishes a completion status to the Amazon Simple Notification Service topic registered in the initial call to StartlabelDetection . To get the results of the label detection operation, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetLabelDetection and pass the job identifier (JobId ) from the initial call to StartLabelDetection .\n\nGetLabelDetection returns an array of detected labels (Labels ) sorted by the time the labels were detected. You can also sort by the label name by specifying NAME for the SortBy input parameter.\n\nThe labels returned include the label name, the percentage confidence in the accuracy of the detected label, and the time the label was detected in the video.\n\nThe returned labels also include bounding box information for common objects, a hierarchical taxonomy of detected labels, and the version of the label model used for detection.\n\nUse MaxResults parameter to limit the number of labels returned. If there are more results than specified in MaxResults , the value of NextToken in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call GetlabelDetection and populate the NextToken request parameter with the token value returned from the previous call to GetLabelDetection .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-label-detection\n--job-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nJob identifier for the label detection operation for which you want results returned. You get the job identifer from an initial call to StartlabelDetection .\n\n--max-results (integer)\n\nMaximum number of results to return per paginated call. The largest value you can specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results is returned. The default value is 1000.\n\n--next-token (string)\n\nIf the previous response was incomplete (because there are more labels to retrieve), Amazon Rekognition Video returns a pagination token in the response. You can use this pagination token to retrieve the next set of labels.\n\n--sort-by (string)\n\nSort to use for elements in the Labels array. Use TIMESTAMP to sort array elements by the time labels are detected. Use NAME to alphabetically group elements for a label together. Within each label group, the array element are sorted by detection confidence. The default sort is by TIMESTAMP .\n\nPossible values:\n\nNAME\n\nTIMESTAMP\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nThe current status of the label detection job.\n\nStatusMessage -> (string)\n\nIf the job fails, StatusMessage provides a descriptive error message.\n\nVideoMetadata -> (structure)\n\nInformation about a video that Amazon Rekognition Video analyzed. Videometadata is returned in every page of paginated responses from a Amazon Rekognition video operation.\n\nCodec -> (string)\n\nType of compression used in the analyzed video.\n\nDurationMillis -> (long)\n\nLength of the video in milliseconds.\n\nFormat -> (string)\n\nFormat of the analyzed video. Possible values are MP4, MOV and AVI.\n\nFrameRate -> (float)\n\nNumber of frames per second in the video.\n\nFrameHeight -> (long)\n\nVertical pixel dimension of the video.\n\nFrameWidth -> (long)\n\nHorizontal pixel dimension of the video.\n\nColorRange -> (string)\n\nA description of the range of luminance values in a video, either LIMITED (16 to 235) or FULL (0 to 255).\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Rekognition Video returns this token that you can use in the subsequent request to retrieve the next set of labels.\n\nLabels -> (list)\n\nAn array of labels detected in the video. Each element contains the detected label and the time, in milliseconds from the start of the video, that the label was detected.\n\n(structure)\n\nInformation about a label detected in a video analysis request and the time the label was detected in the video.\n\nTimestamp -> (long)\n\nTime, in milliseconds from the start of the video, that the label was detected.\n\nLabel -> (structure)\n\nDetails about the detected label.\n\nName -> (string)\n\nThe name (label) of the object or scene.\n\nConfidence -> (float)\n\nLevel of confidence.\n\nInstances -> (list)\n\nIf Label represents an object, Instances contains the bounding boxes for each instance of the detected object. Bounding boxes are returned for common object labels such as people, cars, furniture, apparel or pets.\n\n(structure)\n\nAn instance of a label returned by Amazon Rekognition Image ( DetectLabels ) or by Amazon Rekognition Video ( GetLabelDetection ).\n\nBoundingBox -> (structure)\n\nThe position of the label instance on the image.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nConfidence -> (float)\n\nThe confidence that Amazon Rekognition has in the accuracy of the bounding box.\n\nParents -> (list)\n\nThe parent labels for a label. The response includes all ancestor labels.\n\n(structure)\n\nA parent label for a label. A label can have 0, 1, or more parents.\n\nName -> (string)\n\nThe name of the parent label.\n\nLabelModelVersion -> (string)\n\nVersion number of the label detection model that was used to detect labels.",
      "command_examples": "Examples\n\nTo get the results of an objects and scenes detection operation\n\nThe following get-label-detection command displays the results of an objects and scenes detection operation that you started previously by calling start-label-detection.\n\naws rekognition get-label-detection  \\\n    --job-id 1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\n\n\nOutput:\n\n{\n    \"Labels\": [\n        {\n            \"Timestamp\": 0,\n            \"Label\": {\n                \"Instances\": [],\n                \"Confidence\": 50.19071578979492,\n                \"Parents\": [\n                    {\n                        \"Name\": \"Person\"\n                    },\n                    {\n                        \"Name\": \"Crowd\"\n                    }\n                ],\n                \"Name\": \"Audience\"\n            }\n        },\n        {\n            \"Timestamp\": 0,\n            \"Label\": {\n                \"Instances\": [],\n                \"Confidence\": 55.74115753173828,\n                \"Parents\": [\n                    {\n                        \"Name\": \"Room\"\n                    },\n                    {\n                        \"Name\": \"Indoors\"\n                    },\n                    {\n                        \"Name\": \"School\"\n                    }\n                ],\n                \"Name\": \"Classroom\"\n            }\n        }\n    ],\n    \"JobStatus\": \"SUCCEEDED\",\n    \"LabelModelVersion\": \"2.0\",\n    \"VideoMetadata\": {\n        \"Format\": \"QuickTime / MOV\",\n        \"FrameRate\": 29.970617294311523,\n        \"Codec\": \"h264\",\n        \"DurationMillis\": 6806,\n        \"FrameHeight\": 1080,\n        \"FrameWidth\": 1920\n    },\n    \"NextToken\": \"BMugzAi4L72IERzQdbpyMQuEFBsjlo5W0Yx3mfG+sR9mm98E1/CpObenspRfs/5FBQFs4X7G\"\n}\n\n\nFor more information, see Detecting Labels in a Video in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "get-person-tracking",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/get-person-tracking.html",
      "command_description": "Description\n\nGets the path tracking results of a Amazon Rekognition Video analysis started by StartPersonTracking .\n\nThe person path tracking operation is started by a call to StartPersonTracking which returns a job identifier (JobId ). When the operation finishes, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic registered in the initial call to StartPersonTracking .\n\nTo get the results of the person path tracking operation, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetPersonTracking and pass the job identifier (JobId ) from the initial call to StartPersonTracking .\n\nGetPersonTracking returns an array, Persons , of tracked persons and the time(s) their paths were tracked in the video.\n\nNote\n\nGetPersonTracking only returns the default facial attributes (BoundingBox , Confidence , Landmarks , Pose , and Quality ). The other facial attributes listed in the Face object of the following response syntax are not returned.\n\nFor more information, see FaceDetail in the Amazon Rekognition Developer Guide.\n\nBy default, the array is sorted by the time(s) a person’s path is tracked in the video. You can sort by tracked persons by specifying INDEX for the SortBy input parameter.\n\nUse the MaxResults parameter to limit the number of items returned. If there are more results than specified in MaxResults , the value of NextToken in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call GetPersonTracking and populate the NextToken request parameter with the token value returned from the previous call to GetPersonTracking .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-person-tracking\n--job-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier for a job that tracks persons in a video. You get the JobId from a call to StartPersonTracking .\n\n--max-results (integer)\n\nMaximum number of results to return per paginated call. The largest value you can specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results is returned. The default value is 1000.\n\n--next-token (string)\n\nIf the previous response was incomplete (because there are more persons to retrieve), Amazon Rekognition Video returns a pagination token in the response. You can use this pagination token to retrieve the next set of persons.\n\n--sort-by (string)\n\nSort to use for elements in the Persons array. Use TIMESTAMP to sort array elements by the time persons are detected. Use INDEX to sort by the tracked persons. If you sort by INDEX , the array elements for each person are sorted by detection confidence. The default sort is by TIMESTAMP .\n\nPossible values:\n\nINDEX\n\nTIMESTAMP\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nThe current status of the person tracking job.\n\nStatusMessage -> (string)\n\nIf the job fails, StatusMessage provides a descriptive error message.\n\nVideoMetadata -> (structure)\n\nInformation about a video that Amazon Rekognition Video analyzed. Videometadata is returned in every page of paginated responses from a Amazon Rekognition Video operation.\n\nCodec -> (string)\n\nType of compression used in the analyzed video.\n\nDurationMillis -> (long)\n\nLength of the video in milliseconds.\n\nFormat -> (string)\n\nFormat of the analyzed video. Possible values are MP4, MOV and AVI.\n\nFrameRate -> (float)\n\nNumber of frames per second in the video.\n\nFrameHeight -> (long)\n\nVertical pixel dimension of the video.\n\nFrameWidth -> (long)\n\nHorizontal pixel dimension of the video.\n\nColorRange -> (string)\n\nA description of the range of luminance values in a video, either LIMITED (16 to 235) or FULL (0 to 255).\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Rekognition Video returns this token that you can use in the subsequent request to retrieve the next set of persons.\n\nPersons -> (list)\n\nAn array of the persons detected in the video and the time(s) their path was tracked throughout the video. An array element will exist for each time a person’s path is tracked.\n\n(structure)\n\nDetails and path tracking information for a single time a person’s path is tracked in a video. Amazon Rekognition operations that track people’s paths return an array of PersonDetection objects with elements for each time a person’s path is tracked in a video.\n\nFor more information, see GetPersonTracking in the Amazon Rekognition Developer Guide.\n\nTimestamp -> (long)\n\nThe time, in milliseconds from the start of the video, that the person’s path was tracked.\n\nPerson -> (structure)\n\nDetails about a person whose path was tracked in a video.\n\nIndex -> (long)\n\nIdentifier for the person detected person within a video. Use to keep track of the person throughout the video. The identifier is not stored by Amazon Rekognition.\n\nBoundingBox -> (structure)\n\nBounding box around the detected person.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nFace -> (structure)\n\nFace details for the detected person.\n\nBoundingBox -> (structure)\n\nBounding box of the face. Default attribute.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nAgeRange -> (structure)\n\nThe estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n\nLow -> (integer)\n\nThe lowest estimated age.\n\nHigh -> (integer)\n\nThe highest estimated age.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyeglasses -> (structure)\n\nIndicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing eye glasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSunglasses -> (structure)\n\nIndicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing sunglasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nGender -> (structure)\n\nThe predicted gender of a detected face.\n\nValue -> (string)\n\nThe predicted gender of the face.\n\nConfidence -> (float)\n\nLevel of confidence in the prediction.\n\nBeard -> (structure)\n\nIndicates whether or not the face has a beard, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has beard or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMustache -> (structure)\n\nIndicates whether or not the face has a mustache, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has mustache or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyesOpen -> (structure)\n\nIndicates whether or not the eyes on the face are open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the eyes on the face are open.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMouthOpen -> (structure)\n\nIndicates whether or not the mouth on the face is open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the mouth on the face is open or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nLandmarks -> (list)\n\nIndicates the location of landmarks on the face. Default attribute.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw. Default attribute.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies image brightness and sharpness. Default attribute.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree). Default attribute.",
      "command_examples": "Examples\n\nTo get the results of a people pathing operation\n\nThe following get-person-tracking command displays the results of a people pathing operation that you started previously by calling start-person-tracking.\n\naws rekognition get-person-tracking  \\\n    --job-id 1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\n\n\nOutput:\n\n{\n    \"Persons\": [\n        {\n            \"Timestamp\": 500,\n            \"Person\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.4151041805744171,\n                    \"Top\": 0.07870370149612427,\n                    \"Left\": 0.0,\n                    \"Height\": 0.9212962985038757\n                },\n                \"Index\": 0\n            }\n        },\n        {\n            \"Timestamp\": 567,\n            \"Person\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.4755208194255829,\n                    \"Top\": 0.07777778059244156,\n                    \"Left\": 0.0,\n                    \"Height\": 0.9194444417953491\n                },\n                \"Index\": 0\n            }\n        }\n    ],\n    \"NextToken\": \"D/vRIYNyhG79ugdta3f+8cRg9oSRo+HigGOuxRiYpTn0ExnqTi1CJektVAc4HrAXDv25eHYk\",\n    \"JobStatus\": \"SUCCEEDED\",\n    \"VideoMetadata\": {\n        \"Format\": \"QuickTime / MOV\",\n        \"FrameRate\": 29.970617294311523,\n        \"Codec\": \"h264\",\n        \"DurationMillis\": 6806,\n        \"FrameHeight\": 1080,\n        \"FrameWidth\": 1920\n    }\n}\n\n\nFor more information, see People Pathing in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "get-segment-detection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/get-segment-detection.html",
      "command_description": "Description\n\nGets the segment detection results of a Amazon Rekognition Video analysis started by StartSegmentDetection .\n\nSegment detection with Amazon Rekognition Video is an asynchronous operation. You start segment detection by calling StartSegmentDetection which returns a job identifier (JobId ). When the segment detection operation finishes, Amazon Rekognition publishes a completion status to the Amazon Simple Notification Service topic registered in the initial call to StartSegmentDetection . To get the results of the segment detection operation, first check that the status value published to the Amazon SNS topic is SUCCEEDED . if so, call GetSegmentDetection and pass the job identifier (JobId ) from the initial call of StartSegmentDetection .\n\nGetSegmentDetection returns detected segments in an array (Segments ) of SegmentDetection objects. Segments is sorted by the segment types specified in the SegmentTypes input parameter of StartSegmentDetection . Each element of the array includes the detected segment, the precentage confidence in the acuracy of the detected segment, the type of the segment, and the frame in which the segment was detected.\n\nUse SelectedSegmentTypes to find out the type of segment detection requested in the call to StartSegmentDetection .\n\nUse the MaxResults parameter to limit the number of segment detections returned. If there are more results than specified in MaxResults , the value of NextToken in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call GetSegmentDetection and populate the NextToken request parameter with the token value returned from the previous call to GetSegmentDetection .\n\nFor more information, see Detecting Video Segments in Stored Video in the Amazon Rekognition Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-segment-detection\n--job-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nJob identifier for the text detection operation for which you want results returned. You get the job identifer from an initial call to StartSegmentDetection .\n\n--max-results (integer)\n\nMaximum number of results to return per paginated call. The largest value you can specify is 1000.\n\n--next-token (string)\n\nIf the response is truncated, Amazon Rekognition Video returns this token that you can use in the subsequent request to retrieve the next set of text.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nCurrent status of the segment detection job.\n\nStatusMessage -> (string)\n\nIf the job fails, StatusMessage provides a descriptive error message.\n\nVideoMetadata -> (list)\n\nCurrently, Amazon Rekognition Video returns a single object in the VideoMetadata array. The object contains information about the video stream in the input file that Amazon Rekognition Video chose to analyze. The VideoMetadata object includes the video codec, video format and other information. Video metadata is returned in each page of information returned by GetSegmentDetection .\n\n(structure)\n\nInformation about a video that Amazon Rekognition analyzed. Videometadata is returned in every page of paginated responses from a Amazon Rekognition video operation.\n\nCodec -> (string)\n\nType of compression used in the analyzed video.\n\nDurationMillis -> (long)\n\nLength of the video in milliseconds.\n\nFormat -> (string)\n\nFormat of the analyzed video. Possible values are MP4, MOV and AVI.\n\nFrameRate -> (float)\n\nNumber of frames per second in the video.\n\nFrameHeight -> (long)\n\nVertical pixel dimension of the video.\n\nFrameWidth -> (long)\n\nHorizontal pixel dimension of the video.\n\nColorRange -> (string)\n\nA description of the range of luminance values in a video, either LIMITED (16 to 235) or FULL (0 to 255).\n\nAudioMetadata -> (list)\n\nAn array of objects. There can be multiple audio streams. Each AudioMetadata object contains metadata for a single audio stream. Audio information in an AudioMetadata objects includes the audio codec, the number of audio channels, the duration of the audio stream, and the sample rate. Audio metadata is returned in each page of information returned by GetSegmentDetection .\n\n(structure)\n\nMetadata information about an audio stream. An array of AudioMetadata objects for the audio streams found in a stored video is returned by GetSegmentDetection .\n\nCodec -> (string)\n\nThe audio codec used to encode or decode the audio stream.\n\nDurationMillis -> (long)\n\nThe duration of the audio stream in milliseconds.\n\nSampleRate -> (long)\n\nThe sample rate for the audio stream.\n\nNumberOfChannels -> (long)\n\nThe number of audio channels in the segment.\n\nNextToken -> (string)\n\nIf the previous response was incomplete (because there are more labels to retrieve), Amazon Rekognition Video returns a pagination token in the response. You can use this pagination token to retrieve the next set of text.\n\nSegments -> (list)\n\nAn array of segments detected in a video. The array is sorted by the segment types (TECHNICAL_CUE or SHOT) specified in the SegmentTypes input parameter of StartSegmentDetection . Within each segment type the array is sorted by timestamp values.\n\n(structure)\n\nA technical cue or shot detection segment detected in a video. An array of SegmentDetection objects containing all segments detected in a stored video is returned by GetSegmentDetection .\n\nType -> (string)\n\nThe type of the segment. Valid values are TECHNICAL_CUE and SHOT .\n\nStartTimestampMillis -> (long)\n\nThe start time of the detected segment in milliseconds from the start of the video. This value is rounded down. For example, if the actual timestamp is 100.6667 milliseconds, Amazon Rekognition Video returns a value of 100 millis.\n\nEndTimestampMillis -> (long)\n\nThe end time of the detected segment, in milliseconds, from the start of the video. This value is rounded down.\n\nDurationMillis -> (long)\n\nThe duration of the detected segment in milliseconds.\n\nStartTimecodeSMPTE -> (string)\n\nThe frame-accurate SMPTE timecode, from the start of a video, for the start of a detected segment. StartTimecode is in HH:MM:SS:fr format (and ;fr for drop frame-rates).\n\nEndTimecodeSMPTE -> (string)\n\nThe frame-accurate SMPTE timecode, from the start of a video, for the end of a detected segment. EndTimecode is in HH:MM:SS:fr format (and ;fr for drop frame-rates).\n\nDurationSMPTE -> (string)\n\nThe duration of the timecode for the detected segment in SMPTE format.\n\nTechnicalCueSegment -> (structure)\n\nIf the segment is a technical cue, contains information about the technical cue.\n\nType -> (string)\n\nThe type of the technical cue.\n\nConfidence -> (float)\n\nThe confidence that Amazon Rekognition Video has in the accuracy of the detected segment.\n\nShotSegment -> (structure)\n\nIf the segment is a shot detection, contains information about the shot detection.\n\nIndex -> (long)\n\nAn Identifier for a shot detection segment detected in a video.\n\nConfidence -> (float)\n\nThe confidence that Amazon Rekognition Video has in the accuracy of the detected segment.\n\nStartFrameNumber -> (long)\n\nThe frame number of the start of a video segment, using a frame index that starts with 0.\n\nEndFrameNumber -> (long)\n\nThe frame number at the end of a video segment, using a frame index that starts with 0.\n\nDurationFrames -> (long)\n\nThe duration of a video segment, expressed in frames.\n\nSelectedSegmentTypes -> (list)\n\nAn array containing the segment types requested in the call to StartSegmentDetection .\n\n(structure)\n\nInformation about the type of a segment requested in a call to StartSegmentDetection . An array of SegmentTypeInfo objects is returned by the response from GetSegmentDetection .\n\nType -> (string)\n\nThe type of a segment (technical cue or shot detection).\n\nModelVersion -> (string)\n\nThe version of the model used to detect segments."
    },
    {
      "command_name": "get-text-detection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/get-text-detection.html",
      "command_description": "Description\n\nGets the text detection results of a Amazon Rekognition Video analysis started by StartTextDetection .\n\nText detection with Amazon Rekognition Video is an asynchronous operation. You start text detection by calling StartTextDetection which returns a job identifier (JobId ) When the text detection operation finishes, Amazon Rekognition publishes a completion status to the Amazon Simple Notification Service topic registered in the initial call to StartTextDetection . To get the results of the text detection operation, first check that the status value published to the Amazon SNS topic is SUCCEEDED . if so, call GetTextDetection and pass the job identifier (JobId ) from the initial call of StartLabelDetection .\n\nGetTextDetection returns an array of detected text (TextDetections ) sorted by the time the text was detected, up to 50 words per frame of video.\n\nEach element of the array includes the detected text, the precentage confidence in the acuracy of the detected text, the time the text was detected, bounding box information for where the text was located, and unique identifiers for words and their lines.\n\nUse MaxResults parameter to limit the number of text detections returned. If there are more results than specified in MaxResults , the value of NextToken in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call GetTextDetection and populate the NextToken request parameter with the token value returned from the previous call to GetTextDetection .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-text-detection\n--job-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nJob identifier for the text detection operation for which you want results returned. You get the job identifer from an initial call to StartTextDetection .\n\n--max-results (integer)\n\nMaximum number of results to return per paginated call. The largest value you can specify is 1000.\n\n--next-token (string)\n\nIf the previous response was incomplete (because there are more labels to retrieve), Amazon Rekognition Video returns a pagination token in the response. You can use this pagination token to retrieve the next set of text.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nCurrent status of the text detection job.\n\nStatusMessage -> (string)\n\nIf the job fails, StatusMessage provides a descriptive error message.\n\nVideoMetadata -> (structure)\n\nInformation about a video that Amazon Rekognition analyzed. Videometadata is returned in every page of paginated responses from a Amazon Rekognition video operation.\n\nCodec -> (string)\n\nType of compression used in the analyzed video.\n\nDurationMillis -> (long)\n\nLength of the video in milliseconds.\n\nFormat -> (string)\n\nFormat of the analyzed video. Possible values are MP4, MOV and AVI.\n\nFrameRate -> (float)\n\nNumber of frames per second in the video.\n\nFrameHeight -> (long)\n\nVertical pixel dimension of the video.\n\nFrameWidth -> (long)\n\nHorizontal pixel dimension of the video.\n\nColorRange -> (string)\n\nA description of the range of luminance values in a video, either LIMITED (16 to 235) or FULL (0 to 255).\n\nTextDetections -> (list)\n\nAn array of text detected in the video. Each element contains the detected text, the time in milliseconds from the start of the video that the text was detected, and where it was detected on the screen.\n\n(structure)\n\nInformation about text detected in a video. Incudes the detected text, the time in milliseconds from the start of the video that the text was detected, and where it was detected on the screen.\n\nTimestamp -> (long)\n\nThe time, in milliseconds from the start of the video, that the text was detected.\n\nTextDetection -> (structure)\n\nDetails about text detected in a video.\n\nDetectedText -> (string)\n\nThe word or line of text recognized by Amazon Rekognition.\n\nType -> (string)\n\nThe type of text that was detected.\n\nId -> (integer)\n\nThe identifier for the detected text. The identifier is only unique for a single call to DetectText .\n\nParentId -> (integer)\n\nThe Parent identifier for the detected text identified by the value of ID . If the type of detected text is LINE , the value of ParentId is Null .\n\nConfidence -> (float)\n\nThe confidence that Amazon Rekognition has in the accuracy of the detected text and the accuracy of the geometry points around the detected text.\n\nGeometry -> (structure)\n\nThe location of the detected text on the image. Includes an axis aligned coarse bounding box surrounding the text and a finer grain polygon for more accurate spatial information.\n\nBoundingBox -> (structure)\n\nAn axis-aligned coarse representation of the detected item’s location on the image.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nPolygon -> (list)\n\nWithin the bounding box, a fine-grained polygon around the detected item.\n\n(structure)\n\nThe X and Y coordinates of a point on an image. The X and Y values returned are ratios of the overall image size. For example, if the input image is 700x200 and the operation returns X=0.5 and Y=0.25, then the point is at the (350,50) pixel coordinate on the image.\n\nAn array of Point objects, Polygon , is returned by DetectText and by DetectCustomLabels . Polygon represents a fine-grained polygon around a detected item. For more information, see Geometry in the Amazon Rekognition Developer Guide.\n\nX -> (float)\n\nThe value of the X coordinate for a point on a Polygon .\n\nY -> (float)\n\nThe value of the Y coordinate for a point on a Polygon .\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Rekognition Video returns this token that you can use in the subsequent request to retrieve the next set of text.\n\nTextModelVersion -> (string)\n\nVersion number of the text detection model that was used to detect text."
    },
    {
      "command_name": "index-faces",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/index-faces.html",
      "command_description": "Description\n\nDetects faces in the input image and adds them to the specified collection.\n\nAmazon Rekognition doesn’t save the actual faces that are detected. Instead, the underlying detection algorithm first detects the faces in the input image. For each face, the algorithm extracts facial features into a feature vector, and stores it in the backend database. Amazon Rekognition uses feature vectors when it performs face match and search operations using the SearchFaces and SearchFacesByImage operations.\n\nFor more information, see Adding Faces to a Collection in the Amazon Rekognition Developer Guide.\n\nTo get the number of faces in a collection, call DescribeCollection .\n\nIf you’re using version 1.0 of the face detection model, IndexFaces indexes the 15 largest faces in the input image. Later versions of the face detection model index the 100 largest faces in the input image.\n\nIf you’re using version 4 or later of the face model, image orientation information is not returned in the OrientationCorrection field.\n\nTo determine which version of the model you’re using, call DescribeCollection and supply the collection ID. You can also get the model version from the value of FaceModelVersion in the response from IndexFaces\n\nFor more information, see Model Versioning in the Amazon Rekognition Developer Guide.\n\nIf you provide the optional ExternalImageId for the input image you provided, Amazon Rekognition associates this ID with all faces that it detects. When you call the ListFaces operation, the response returns the external ID. You can use this external image ID to create a client-side index to associate the faces with each image. You can then use the index to find all faces in an image.\n\nYou can specify the maximum number of faces to index with the MaxFaces input parameter. This is useful when you want to index the largest faces in an image and don’t want to index smaller faces, such as those belonging to people standing in the background.\n\nThe QualityFilter input parameter allows you to filter out detected faces that don’t meet a required quality bar. The quality bar is based on a variety of common use cases. By default, IndexFaces chooses the quality bar that’s used to filter faces. You can also explicitly choose the quality bar. Use QualityFilter , to set the quality bar by specifying LOW , MEDIUM , or HIGH . If you do not want to filter detected faces, specify NONE .\n\nNote\n\nTo use quality filtering, you need a collection associated with version 3 of the face model or higher. To get the version of the face model associated with a collection, call DescribeCollection .\n\nInformation about faces detected in an image, but not indexed, is returned in an array of UnindexedFace objects, UnindexedFaces . Faces aren’t indexed for reasons such as:\n\nThe number of faces detected exceeds the value of the MaxFaces request parameter.\n\nThe face is too small compared to the image dimensions.\n\nThe face is too blurry.\n\nThe image is too dark.\n\nThe face has an extreme pose.\n\nThe face doesn’t have enough detail to be suitable for face search.\n\nIn response, the IndexFaces operation returns an array of metadata for all detected faces, FaceRecords . This includes:\n\nThe bounding box, BoundingBox , of the detected face.\n\nA confidence value, Confidence , which indicates the confidence that the bounding box contains a face.\n\nA face ID, FaceId , assigned by the service for each face that’s detected and stored.\n\nAn image ID, ImageId , assigned by the service for the input image.\n\nIf you request all facial attributes (by using the detectionAttributes parameter), Amazon Rekognition returns detailed facial attributes, such as facial landmarks (for example, location of eye and mouth) and other facial attributes. If you provide the same image, specify the same collection, and use the same external ID in the IndexFaces operation, Amazon Rekognition doesn’t save duplicate face metadata.\n\nThe input image is passed either as base64-encoded image bytes, or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes isn’t supported. The image must be formatted as a PNG or JPEG file.\n\nThis operation requires permissions to perform the rekognition:IndexFaces action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  index-faces\n--collection-id <value>\n[--image <value>]\n[--external-image-id <value>]\n[--detection-attributes <value>]\n[--max-faces <value>]\n[--quality-filter <value>]\n[--image-bytes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--collection-id <value>",
        "[--image <value>]",
        "[--external-image-id <value>]",
        "[--detection-attributes <value>]",
        "[--max-faces <value>]",
        "[--quality-filter <value>]",
        "[--image-bytes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--collection-id (string)\n\nThe ID of an existing collection to which you want to add the faces that are detected in the input images.\n\n--image (structure)\n\nThe input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to call Amazon Rekognition operations, passing base64-encoded image bytes isn’t supported.\n\nIf you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode image bytes passed using the Bytes field. For more information, see Images in the Amazon Rekognition developer guide.\n\nTo specify a local file use --image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--external-image-id (string)\n\nThe ID you want to assign to all the faces detected in the image.\n\n--detection-attributes (list)\n\nAn array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don’t specify a value for Attributes or if you specify [\"DEFAULT\"] , the API returns the following subset of facial attributes: BoundingBox , Confidence , Pose , Quality , and Landmarks . If you provide [\"ALL\"] , all facial attributes are returned, but the operation takes longer to complete.\n\nIf you provide both, [\"ALL\", \"DEFAULT\"] , the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  DEFAULT\n  ALL\n\n\n--max-faces (integer)\n\nThe maximum number of faces to index. The value of MaxFaces must be greater than or equal to 1. IndexFaces returns no more than 100 detected faces in an image, even if you specify a larger value for MaxFaces .\n\nIf IndexFaces detects more faces than the value of MaxFaces , the faces with the lowest quality are filtered out first. If there are still more faces than the value of MaxFaces , the faces with the smallest bounding boxes are filtered out (up to the number that’s needed to satisfy the value of MaxFaces ). Information about the unindexed faces is available in the UnindexedFaces array.\n\nThe faces that are returned by IndexFaces are sorted by the largest face bounding box size to the smallest size, in descending order.\n\nMaxFaces can be used with a collection associated with any version of the face model.\n\n--quality-filter (string)\n\nA filter that specifies a quality bar for how much filtering is done to identify faces. Filtered faces aren’t indexed. If you specify AUTO , Amazon Rekognition chooses the quality bar. If you specify LOW , MEDIUM , or HIGH , filtering removes all faces that don’t meet the chosen quality bar. The default value is AUTO . The quality bar is based on a variety of common use cases. Low-quality detections can occur for a number of reasons. Some examples are an object that’s misidentified as a face, a face that’s too blurry, or a face with a pose that’s too extreme to use. If you specify NONE , no filtering is performed.\n\nTo use quality filtering, the collection you are using must be associated with version 3 of the face model or higher.\n\nPossible values:\n\nNONE\n\nAUTO\n\nLOW\n\nMEDIUM\n\nHIGH\n\n--image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFaceRecords -> (list)\n\nAn array of faces detected and added to the collection. For more information, see Searching Faces in a Collection in the Amazon Rekognition Developer Guide.\n\n(structure)\n\nObject containing both the face metadata (stored in the backend database), and facial attributes that are detected but aren’t stored in the database.\n\nFace -> (structure)\n\nDescribes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned.\n\nFaceId -> (string)\n\nUnique identifier that Amazon Rekognition assigns to the face.\n\nBoundingBox -> (structure)\n\nBounding box of the face.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nImageId -> (string)\n\nUnique identifier that Amazon Rekognition assigns to the input image.\n\nExternalImageId -> (string)\n\nIdentifier that you assign to all the faces in the input image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree).\n\nFaceDetail -> (structure)\n\nStructure containing attributes of the face that the algorithm detected.\n\nBoundingBox -> (structure)\n\nBounding box of the face. Default attribute.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nAgeRange -> (structure)\n\nThe estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n\nLow -> (integer)\n\nThe lowest estimated age.\n\nHigh -> (integer)\n\nThe highest estimated age.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyeglasses -> (structure)\n\nIndicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing eye glasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSunglasses -> (structure)\n\nIndicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing sunglasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nGender -> (structure)\n\nThe predicted gender of a detected face.\n\nValue -> (string)\n\nThe predicted gender of the face.\n\nConfidence -> (float)\n\nLevel of confidence in the prediction.\n\nBeard -> (structure)\n\nIndicates whether or not the face has a beard, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has beard or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMustache -> (structure)\n\nIndicates whether or not the face has a mustache, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has mustache or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyesOpen -> (structure)\n\nIndicates whether or not the eyes on the face are open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the eyes on the face are open.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMouthOpen -> (structure)\n\nIndicates whether or not the mouth on the face is open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the mouth on the face is open or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nLandmarks -> (list)\n\nIndicates the location of landmarks on the face. Default attribute.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw. Default attribute.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies image brightness and sharpness. Default attribute.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree). Default attribute.\n\nOrientationCorrection -> (string)\n\nIf your collection is associated with a face detection model that’s later than version 3.0, the value of OrientationCorrection is always null and no orientation information is returned.\n\nIf your collection is associated with a face detection model that’s version 3.0 or earlier, the following applies:\n\nIf the input image is in .jpeg format, it might contain exchangeable image file format (Exif) metadata that includes the image’s orientation. Amazon Rekognition uses this orientation information to perform image correction - the bounding box coordinates are translated to represent object locations after the orientation information in the Exif metadata is used to correct the image orientation. Images in .png format don’t contain Exif metadata. The value of OrientationCorrection is null.\n\nIf the image doesn’t contain orientation information in its Exif metadata, Amazon Rekognition returns an estimated orientation (ROTATE_0, ROTATE_90, ROTATE_180, ROTATE_270). Amazon Rekognition doesn’t perform image correction for images. The bounding box coordinates aren’t translated and represent the object locations before the image is rotated.\n\nBounding box information is returned in the FaceRecords array. You can get the version of the face detection model by calling DescribeCollection .\n\nFaceModelVersion -> (string)\n\nThe version number of the face detection model that’s associated with the input collection (CollectionId ).\n\nUnindexedFaces -> (list)\n\nAn array of faces that were detected in the image but weren’t indexed. They weren’t indexed because the quality filter identified them as low quality, or the MaxFaces request parameter filtered them out. To use the quality filter, you specify the QualityFilter request parameter.\n\n(structure)\n\nA face that IndexFaces detected, but didn’t index. Use the Reasons response attribute to determine why a face wasn’t indexed.\n\nReasons -> (list)\n\nAn array of reasons that specify why a face wasn’t indexed.\n\nEXTREME_POSE - The face is at a pose that can’t be detected. For example, the head is turned too far away from the camera.\n\nEXCEEDS_MAX_FACES - The number of faces detected is already higher than that specified by the MaxFaces input parameter for IndexFaces .\n\nLOW_BRIGHTNESS - The image is too dark.\n\nLOW_SHARPNESS - The image is too blurry.\n\nLOW_CONFIDENCE - The face was detected with a low confidence.\n\nSMALL_BOUNDING_BOX - The bounding box around the face is too small.\n\n(string)\n\nFaceDetail -> (structure)\n\nThe structure that contains attributes of a face that IndexFaces detected, but didn’t index.\n\nBoundingBox -> (structure)\n\nBounding box of the face. Default attribute.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nAgeRange -> (structure)\n\nThe estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n\nLow -> (integer)\n\nThe lowest estimated age.\n\nHigh -> (integer)\n\nThe highest estimated age.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyeglasses -> (structure)\n\nIndicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing eye glasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSunglasses -> (structure)\n\nIndicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is wearing sunglasses or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nGender -> (structure)\n\nThe predicted gender of a detected face.\n\nValue -> (string)\n\nThe predicted gender of the face.\n\nConfidence -> (float)\n\nLevel of confidence in the prediction.\n\nBeard -> (structure)\n\nIndicates whether or not the face has a beard, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has beard or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMustache -> (structure)\n\nIndicates whether or not the face has a mustache, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face has mustache or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEyesOpen -> (structure)\n\nIndicates whether or not the eyes on the face are open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the eyes on the face are open.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMouthOpen -> (structure)\n\nIndicates whether or not the mouth on the face is open, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the mouth on the face is open or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nLandmarks -> (list)\n\nIndicates the location of landmarks on the face. Default attribute.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw. Default attribute.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies image brightness and sharpness. Default attribute.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree). Default attribute.",
      "command_examples": "Examples\n\nTo add faces to a collection\n\nThe following index-faces command adds the faces found in an image to the specified collection.\n\naws rekognition index-faces \\\n    --image '{\"S3Object\":{\"Bucket\":\"MyVideoS3Bucket\",\"Name\":\"MyPicture.jpg\"}}' \\\n    --collection-id MyCollection \\\n    --max-faces 1 \\\n    --quality-filter \"AUTO\" \\\n    --detection-attributes \"ALL\" \\\n    --external-image-id \"MyPicture.jpg\"\n\n\nOutput:\n\n{\n    \"FaceRecords\": [\n        {\n            \"FaceDetail\": {\n                \"Confidence\": 99.993408203125,\n                \"Eyeglasses\": {\n                    \"Confidence\": 99.11750030517578,\n                    \"Value\": false\n                },\n                \"Sunglasses\": {\n                    \"Confidence\": 99.98249053955078,\n                    \"Value\": false\n                },\n                \"Gender\": {\n                    \"Confidence\": 99.92769622802734,\n                    \"Value\": \"Male\"\n                },\n                \"Landmarks\": [\n                    {\n                        \"Y\": 0.26750367879867554,\n                        \"X\": 0.6202793717384338,\n                        \"Type\": \"eyeLeft\"\n                    },\n                    {\n                        \"Y\": 0.26642778515815735,\n                        \"X\": 0.6787431836128235,\n                        \"Type\": \"eyeRight\"\n                    },\n                    {\n                        \"Y\": 0.31361380219459534,\n                        \"X\": 0.6421601176261902,\n                        \"Type\": \"nose\"\n                    },\n                    {\n                        \"Y\": 0.3495299220085144,\n                        \"X\": 0.6216195225715637,\n                        \"Type\": \"mouthLeft\"\n                    },\n                    {\n                        \"Y\": 0.35194727778434753,\n                        \"X\": 0.669899046421051,\n                        \"Type\": \"mouthRight\"\n                    },\n                    {\n                        \"Y\": 0.26844894886016846,\n                        \"X\": 0.6210268139839172,\n                        \"Type\": \"leftPupil\"\n                    },\n                    {\n                        \"Y\": 0.26707562804222107,\n                        \"X\": 0.6817160844802856,\n                        \"Type\": \"rightPupil\"\n                    },\n                    {\n                        \"Y\": 0.24834522604942322,\n                        \"X\": 0.6018546223640442,\n                        \"Type\": \"leftEyeBrowLeft\"\n                    },\n                    {\n                        \"Y\": 0.24397172033786774,\n                        \"X\": 0.6172008514404297,\n                        \"Type\": \"leftEyeBrowUp\"\n                    },\n                    {\n                        \"Y\": 0.24677404761314392,\n                        \"X\": 0.6339119076728821,\n                        \"Type\": \"leftEyeBrowRight\"\n                    },\n                    {\n                        \"Y\": 0.24582654237747192,\n                        \"X\": 0.6619398593902588,\n                        \"Type\": \"rightEyeBrowLeft\"\n                    },\n                    {\n                        \"Y\": 0.23973053693771362,\n                        \"X\": 0.6804757118225098,\n                        \"Type\": \"rightEyeBrowUp\"\n                    },\n                    {\n                        \"Y\": 0.24441994726657867,\n                        \"X\": 0.6978968977928162,\n                        \"Type\": \"rightEyeBrowRight\"\n                    },\n                    {\n                        \"Y\": 0.2695908546447754,\n                        \"X\": 0.6085202693939209,\n                        \"Type\": \"leftEyeLeft\"\n                    },\n                    {\n                        \"Y\": 0.26716896891593933,\n                        \"X\": 0.6315826177597046,\n                        \"Type\": \"leftEyeRight\"\n                    },\n                    {\n                        \"Y\": 0.26289820671081543,\n                        \"X\": 0.6202316880226135,\n                        \"Type\": \"leftEyeUp\"\n                    },\n                    {\n                        \"Y\": 0.27123287320137024,\n                        \"X\": 0.6205548048019409,\n                        \"Type\": \"leftEyeDown\"\n                    },\n                    {\n                        \"Y\": 0.2668408751487732,\n                        \"X\": 0.6663622260093689,\n                        \"Type\": \"rightEyeLeft\"\n                    },\n                    {\n                        \"Y\": 0.26741549372673035,\n                        \"X\": 0.6910083889961243,\n                        \"Type\": \"rightEyeRight\"\n                    },\n                    {\n                        \"Y\": 0.2614026665687561,\n                        \"X\": 0.6785826086997986,\n                        \"Type\": \"rightEyeUp\"\n                    },\n                    {\n                        \"Y\": 0.27075251936912537,\n                        \"X\": 0.6789616942405701,\n                        \"Type\": \"rightEyeDown\"\n                    },\n                    {\n                        \"Y\": 0.3211299479007721,\n                        \"X\": 0.6324167847633362,\n                        \"Type\": \"noseLeft\"\n                    },\n                    {\n                        \"Y\": 0.32276326417922974,\n                        \"X\": 0.6558475494384766,\n                        \"Type\": \"noseRight\"\n                    },\n                    {\n                        \"Y\": 0.34385165572166443,\n                        \"X\": 0.6444970965385437,\n                        \"Type\": \"mouthUp\"\n                    },\n                    {\n                        \"Y\": 0.3671635091304779,\n                        \"X\": 0.6459195017814636,\n                        \"Type\": \"mouthDown\"\n                    }\n                ],\n                \"Pose\": {\n                    \"Yaw\": -9.54541015625,\n                    \"Roll\": -0.5709401965141296,\n                    \"Pitch\": 0.6045494675636292\n                },\n                \"Emotions\": [\n                    {\n                        \"Confidence\": 39.90074157714844,\n                        \"Type\": \"HAPPY\"\n                    },\n                    {\n                        \"Confidence\": 23.38753890991211,\n                        \"Type\": \"CALM\"\n                    },\n                    {\n                        \"Confidence\": 5.840933322906494,\n                        \"Type\": \"CONFUSED\"\n                    }\n                ],\n                \"AgeRange\": {\n                    \"High\": 63,\n                    \"Low\": 45\n                },\n                \"EyesOpen\": {\n                    \"Confidence\": 99.80887603759766,\n                    \"Value\": true\n                },\n                \"BoundingBox\": {\n                    \"Width\": 0.18562500178813934,\n                    \"Top\": 0.1618015021085739,\n                    \"Left\": 0.5575000047683716,\n                    \"Height\": 0.24770642817020416\n                },\n                \"Smile\": {\n                    \"Confidence\": 99.69740295410156,\n                    \"Value\": false\n                },\n                \"MouthOpen\": {\n                    \"Confidence\": 99.97393798828125,\n                    \"Value\": false\n                },\n                \"Quality\": {\n                    \"Sharpness\": 95.54405975341797,\n                    \"Brightness\": 63.867706298828125\n                },\n                \"Mustache\": {\n                    \"Confidence\": 97.05007934570312,\n                    \"Value\": false\n                },\n                \"Beard\": {\n                    \"Confidence\": 87.34505462646484,\n                    \"Value\": false\n                }\n            },\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.18562500178813934,\n                    \"Top\": 0.1618015021085739,\n                    \"Left\": 0.5575000047683716,\n                    \"Height\": 0.24770642817020416\n                },\n                \"FaceId\": \"ce7ed422-2132-4a11-ab14-06c5c410f29f\",\n                \"ExternalImageId\": \"example-image.jpg\",\n                \"Confidence\": 99.993408203125,\n                \"ImageId\": \"8d67061e-90d2-598f-9fbd-29c8497039c0\"\n            }\n        }\n    ],\n    \"UnindexedFaces\": [],\n    \"FaceModelVersion\": \"3.0\",\n    \"OrientationCorrection\": \"ROTATE_0\"\n}\n\n\nFor more information, see Adding Faces to a Collection in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "list-collections",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/list-collections.html",
      "command_description": "Description\n\nReturns list of collection IDs in your account. If the result is truncated, the response also provides a NextToken that you can use in the subsequent request to fetch the next set of collection IDs.\n\nFor an example, see Listing Collections in the Amazon Rekognition Developer Guide.\n\nThis operation requires permissions to perform the rekognition:ListCollections action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-collections is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: CollectionIds, FaceModelVersions",
      "command_synopsis": "Synopsis\n  list-collections\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCollectionIds -> (list)\n\nAn array of collection IDs.\n\n(string)\n\nNextToken -> (string)\n\nIf the result is truncated, the response provides a NextToken that you can use in the subsequent request to fetch the next set of collection IDs.\n\nFaceModelVersions -> (list)\n\nVersion numbers of the face detection models associated with the collections in the array CollectionIds . For example, the value of FaceModelVersions[2] is the version number for the face detection model used by the collection in CollectionId[2] .\n\n(string)",
      "command_examples": "Examples\n\nTo list the available collections\n\nThe following list-collections command lists the available collections in the AWS account.\n\naws rekognition list-collections\n\n\nOutput:\n\n{\n    \"FaceModelVersions\": [\n        \"2.0\",\n        \"3.0\",\n        \"3.0\",\n        \"3.0\",\n        \"4.0\",\n        \"1.0\",\n        \"3.0\",\n        \"4.0\",\n        \"4.0\",\n        \"4.0\"\n    ],\n    \"CollectionIds\": [\n        \"MyCollection1\",\n        \"MyCollection2\",\n        \"MyCollection3\",\n        \"MyCollection4\",\n        \"MyCollection5\",\n        \"MyCollection6\",\n        \"MyCollection7\",\n        \"MyCollection8\",\n        \"MyCollection9\",\n        \"MyCollection10\"\n    ]\n}\n\n\nFor more information, see Listing Collections in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "list-faces",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/list-faces.html",
      "command_description": "Description\n\nReturns metadata for faces in the specified collection. This metadata includes information such as the bounding box coordinates, the confidence (that the bounding box contains a face), and face ID. For an example, see Listing Faces in a Collection in the Amazon Rekognition Developer Guide.\n\nThis operation requires permissions to perform the rekognition:ListFaces action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-faces is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Faces",
      "command_synopsis": "Synopsis\n  list-faces\n--collection-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--collection-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--collection-id (string)\n\nID of the collection from which to list the faces.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFaces -> (list)\n\nAn array of Face objects.\n\n(structure)\n\nDescribes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned.\n\nFaceId -> (string)\n\nUnique identifier that Amazon Rekognition assigns to the face.\n\nBoundingBox -> (structure)\n\nBounding box of the face.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nImageId -> (string)\n\nUnique identifier that Amazon Rekognition assigns to the input image.\n\nExternalImageId -> (string)\n\nIdentifier that you assign to all the faces in the input image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree).\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.\n\nFaceModelVersion -> (string)\n\nVersion number of the face detection model associated with the input collection (CollectionId ).",
      "command_examples": "Examples\n\nTo list the faces in a collection\n\nThe following list-faces command lists the faces in the specified collection.\n\naws rekognition list-faces \\\n    --collection-id MyCollection\n\n\nOutput:\n\n{\n    \"FaceModelVersion\": \"3.0\",\n    \"Faces\": [\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.5216310024261475,\n                \"Top\": 0.3256250023841858,\n                \"Left\": 0.13394300639629364,\n                \"Height\": 0.3918749988079071\n            },\n            \"FaceId\": \"0040279c-0178-436e-b70a-e61b074e96b0\",\n            \"ExternalImageId\": \"image1.jpg\",\n            \"Confidence\": 100.0,\n            \"ImageId\": \"f976e487-3719-5e2d-be8b-ea2724c26991\"\n        },\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.5074880123138428,\n                \"Top\": 0.3774999976158142,\n                \"Left\": 0.18302799761295319,\n                \"Height\": 0.3812499940395355\n            },\n            \"FaceId\": \"086261e8-6deb-4bc0-ac73-ab22323cc38d\",\n            \"ExternalImageId\": \"image2.jpg\",\n            \"Confidence\": 99.99930572509766,\n            \"ImageId\": \"ae1593b0-a8f6-5e24-a306-abf529e276fa\"\n        },\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.5574039816856384,\n                \"Top\": 0.37187498807907104,\n                \"Left\": 0.14559100568294525,\n                \"Height\": 0.4181250035762787\n            },\n            \"FaceId\": \"11c4bd3c-19c5-4eb8-aecc-24feb93a26e1\",\n            \"ExternalImageId\": \"image3.jpg\",\n            \"Confidence\": 99.99960327148438,\n            \"ImageId\": \"80739b4d-883f-5b78-97cf-5124038e26b9\"\n        },\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.18562500178813934,\n                \"Top\": 0.1618019938468933,\n                \"Left\": 0.5575000047683716,\n                \"Height\": 0.24770599603652954\n            },\n            \"FaceId\": \"13692fe4-990a-4679-b14a-5ac23d135eab\",\n            \"ExternalImageId\": \"image4.jpg\",\n            \"Confidence\": 99.99340057373047,\n            \"ImageId\": \"8df18239-9ad1-5acd-a46a-6581ff98f51b\"\n        },\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.5307819843292236,\n                \"Top\": 0.2862499952316284,\n                \"Left\": 0.1564060002565384,\n                \"Height\": 0.3987500071525574\n            },\n            \"FaceId\": \"2eb5f3fd-e2a9-4b1c-a89f-afa0a518fe06\",\n            \"ExternalImageId\": \"image5.jpg\",\n            \"Confidence\": 99.99970245361328,\n            \"ImageId\": \"3c314792-197d-528d-bbb6-798ed012c150\"\n        },\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.5773710012435913,\n                \"Top\": 0.34437501430511475,\n                \"Left\": 0.12396000325679779,\n                \"Height\": 0.4337500035762787\n            },\n            \"FaceId\": \"57189455-42b0-4839-a86c-abda48b13174\",\n            \"ExternalImageId\": \"image6.jpg\",\n            \"Confidence\": 100.0,\n            \"ImageId\": \"0aff2f37-e7a2-5dbc-a3a3-4ef6ec18eaa0\"\n        },\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.5349419713020325,\n                \"Top\": 0.29124999046325684,\n                \"Left\": 0.16389399766921997,\n                \"Height\": 0.40187498927116394\n            },\n            \"FaceId\": \"745f7509-b1fa-44e0-8b95-367b1359638a\",\n            \"ExternalImageId\": \"image7.jpg\",\n            \"Confidence\": 99.99979400634766,\n            \"ImageId\": \"67a34327-48d1-5179-b042-01e52ccfeada\"\n        },\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.41499999165534973,\n                \"Top\": 0.09187500178813934,\n                \"Left\": 0.28083300590515137,\n                \"Height\": 0.3112500011920929\n            },\n            \"FaceId\": \"8d3cfc70-4ba8-4b36-9644-90fba29c2dac\",\n            \"ExternalImageId\": \"image8.jpg\",\n            \"Confidence\": 99.99769592285156,\n            \"ImageId\": \"a294da46-2cb1-5cc4-9045-61d7ca567662\"\n        },\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.48166701197624207,\n                \"Top\": 0.20999999344348907,\n                \"Left\": 0.21250000596046448,\n                \"Height\": 0.36125001311302185\n            },\n            \"FaceId\": \"bd4ceb4d-9acc-4ab7-8ef8-1c2d2ba0a66a\",\n            \"ExternalImageId\": \"image9.jpg\",\n            \"Confidence\": 99.99949645996094,\n            \"ImageId\": \"5e1a7588-e5a0-5ee3-bd00-c642518dfe3a\"\n        },\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.18562500178813934,\n                \"Top\": 0.1618019938468933,\n                \"Left\": 0.5575000047683716,\n                \"Height\": 0.24770599603652954\n            },\n            \"FaceId\": \"ce7ed422-2132-4a11-ab14-06c5c410f29f\",\n            \"ExternalImageId\": \"image10.jpg\",\n            \"Confidence\": 99.99340057373047,\n            \"ImageId\": \"8d67061e-90d2-598f-9fbd-29c8497039c0\"\n        }\n    ]\n}\n\n\nFor more information, see Listing Faces in a Collection in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "list-stream-processors",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/list-stream-processors.html",
      "command_description": "Description\n\nGets a list of stream processors that you have created with CreateStreamProcessor .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-stream-processors is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: StreamProcessors",
      "command_synopsis": "Synopsis\n  list-stream-processors\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Rekognition Video returns this token that you can use in the subsequent request to retrieve the next set of stream processors.\n\nStreamProcessors -> (list)\n\nList of stream processors that you have created.\n\n(structure)\n\nAn object that recognizes faces in a streaming video. An Amazon Rekognition stream processor is created by a call to CreateStreamProcessor . The request parameters for CreateStreamProcessor describe the Kinesis video stream source for the streaming video, face recognition parameters, and where to stream the analysis resullts.\n\nName -> (string)\n\nName of the Amazon Rekognition stream processor.\n\nStatus -> (string)\n\nCurrent status of the Amazon Rekognition stream processor.",
      "command_examples": "Examples\n\nTo list the stream processors in your account\n\nThe following list-stream-processors command lists the stream processors in your account and the state of each.\n\naws rekognition list-stream-processors\n\n\nOutput:\n\n{\n    \"StreamProcessors\": [\n        {\n            \"Status\": \"STOPPED\",\n            \"Name\": \"my-stream-processor\"\n        }\n    ]\n}\n\n\nFor more information, see Working with Streaming Videos in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/list-tags-for-resource.html",
      "command_description": "Description\n\nReturns a list of tags in an Amazon Rekognition collection, stream processor, or Custom Labels model.\n\nThis operation requires permissions to perform the rekognition:ListTagsForResource action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nAmazon Resource Name (ARN) of the model, collection, or stream processor that contains the tags that you want a list of.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (map)\n\nA list of key-value tags assigned to the resource.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "recognize-celebrities",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/recognize-celebrities.html",
      "command_description": "Description\n\nReturns an array of celebrities recognized in the input image. For more information, see Recognizing Celebrities in the Amazon Rekognition Developer Guide.\n\nRecognizeCelebrities returns the 64 largest faces in the image. It lists recognized celebrities in the CelebrityFaces array and unrecognized faces in the UnrecognizedFaces array. RecognizeCelebrities doesn’t return celebrities whose faces aren’t among the largest 64 faces in the image.\n\nFor each celebrity recognized, RecognizeCelebrities returns a Celebrity object. The Celebrity object contains the celebrity name, ID, URL links to additional information, match confidence, and a ComparedFace object that you can use to locate the celebrity’s face on the image.\n\nAmazon Rekognition doesn’t retain information about which images a celebrity has been recognized in. Your application must store this information and use the Celebrity ID property as a unique identifier for the celebrity. If you don’t store the celebrity name or additional information URLs returned by RecognizeCelebrities , you will need the ID to identify the celebrity in a call to the GetCelebrityInfo operation.\n\nYou pass the input image either as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. The image must be either a PNG or JPEG formatted file.\n\nFor an example, see Recognizing Celebrities in an Image in the Amazon Rekognition Developer Guide.\n\nThis operation requires permissions to perform the rekognition:RecognizeCelebrities operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  recognize-celebrities\n[--image <value>]\n[--image-bytes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--image <value>]",
        "[--image-bytes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image (structure)\n\nThe input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.\n\nIf you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode image bytes passed using the Bytes field. For more information, see Images in the Amazon Rekognition developer guide.\n\nTo specify a local file use --image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCelebrityFaces -> (list)\n\nDetails about each celebrity found in the image. Amazon Rekognition can detect a maximum of 64 celebrities in an image. Each celebrity object includes the following attributes: Face , Confidence , Emotions , Landmarks , Pose , Quality , Smile , Id , KnownGender , MatchConfidence , Name , Urls .\n\n(structure)\n\nProvides information about a celebrity recognized by the RecognizeCelebrities operation.\n\nUrls -> (list)\n\nAn array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.\n\n(string)\n\nName -> (string)\n\nThe name of the celebrity.\n\nId -> (string)\n\nA unique identifier for the celebrity.\n\nFace -> (structure)\n\nProvides information about the celebrity’s face, such as its location on the image.\n\nBoundingBox -> (structure)\n\nBounding box of the face.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nConfidence -> (float)\n\nLevel of confidence that what the bounding box contains is a face.\n\nLandmarks -> (list)\n\nAn array of facial landmarks.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies face image brightness and sharpness.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. Valid values include “Happy”, “Sad”, “Angry”, “Confused”, “Disgusted”, “Surprised”, “Calm”, “Unknown”, and “Fear”.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nMatchConfidence -> (float)\n\nThe confidence, in percentage, that Amazon Rekognition has that the recognized face is the celebrity.\n\nKnownGender -> (structure)\n\nThe known gender identity for the celebrity that matches the provided ID.\n\nType -> (string)\n\nA string value of the KnownGender info about the Celebrity.\n\nUnrecognizedFaces -> (list)\n\nDetails about each unrecognized face in the image.\n\n(structure)\n\nProvides face metadata for target image faces that are analyzed by CompareFaces and RecognizeCelebrities .\n\nBoundingBox -> (structure)\n\nBounding box of the face.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nConfidence -> (float)\n\nLevel of confidence that what the bounding box contains is a face.\n\nLandmarks -> (list)\n\nAn array of facial landmarks.\n\n(structure)\n\nIndicates the location of the landmark on the face.\n\nType -> (string)\n\nType of landmark.\n\nX -> (float)\n\nThe x-coordinate of the landmark expressed as a ratio of the width of the image. The x-coordinate is measured from the left-side of the image. For example, if the image is 700 pixels wide and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n\nY -> (float)\n\nThe y-coordinate of the landmark expressed as a ratio of the height of the image. The y-coordinate is measured from the top of the image. For example, if the image height is 200 pixels and the y-coordinate of the landmark is at 50 pixels, this value is 0.25.\n\nPose -> (structure)\n\nIndicates the pose of the face as determined by its pitch, roll, and yaw.\n\nRoll -> (float)\n\nValue representing the face rotation on the roll axis.\n\nYaw -> (float)\n\nValue representing the face rotation on the yaw axis.\n\nPitch -> (float)\n\nValue representing the face rotation on the pitch axis.\n\nQuality -> (structure)\n\nIdentifies face image brightness and sharpness.\n\nBrightness -> (float)\n\nValue representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n\nSharpness -> (float)\n\nValue representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n\nEmotions -> (list)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. Valid values include “Happy”, “Sad”, “Angry”, “Confused”, “Disgusted”, “Surprised”, “Calm”, “Unknown”, and “Fear”.\n\n(structure)\n\nThe emotions that appear to be expressed on the face, and the confidence level in the determination. The API is only making a determination of the physical appearance of a person’s face. It is not a determination of the person’s internal emotional state and should not be used in such a way. For example, a person pretending to have a sad face might not be sad emotionally.\n\nType -> (string)\n\nType of emotion detected.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nSmile -> (structure)\n\nIndicates whether or not the face is smiling, and the confidence level in the determination.\n\nValue -> (boolean)\n\nBoolean value that indicates whether the face is smiling or not.\n\nConfidence -> (float)\n\nLevel of confidence in the determination.\n\nOrientationCorrection -> (string)\n\nNote\n\nSupport for estimating image orientation using the the OrientationCorrection field has ceased as of August 2021. Any returned values for this field included in an API response will always be NULL.\n\nThe orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in CelebrityFaces and UnrecognizedFaces represent face locations before the image orientation is corrected.\n\nNote\n\nIf the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image’s orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of OrientationCorrection is null. The CelebrityFaces and UnrecognizedFaces bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don’t contain Exif metadata.",
      "command_examples": "Examples\n\nTo recognize celebrities in an image\n\nThe following recognize-celebrities command recognizes celebrities in the specified image stored in an Amazon S3 bucket.:\n\naws rekognition recognize-celebrities \\\n    --image \"S3Object={Bucket=MyImageS3Bucket,Name=moviestars.jpg}\"\n\n\nOutput:\n\n{\n    \"UnrecognizedFaces\": [\n        {\n            \"BoundingBox\": {\n                \"Width\": 0.14416666328907013,\n                \"Top\": 0.07777778059244156,\n                \"Left\": 0.625,\n                \"Height\": 0.2746031880378723\n            },\n            \"Confidence\": 99.9990234375,\n            \"Pose\": {\n                \"Yaw\": 10.80408763885498,\n                \"Roll\": -12.761146545410156,\n                \"Pitch\": 10.96889877319336\n            },\n            \"Quality\": {\n                \"Sharpness\": 94.1185531616211,\n                \"Brightness\": 79.18367004394531\n            },\n            \"Landmarks\": [\n                {\n                    \"Y\": 0.18220913410186768,\n                    \"X\": 0.6702951788902283,\n                    \"Type\": \"eyeLeft\"\n                },\n                {\n                    \"Y\": 0.16337193548679352,\n                    \"X\": 0.7188183665275574,\n                    \"Type\": \"eyeRight\"\n                },\n                {\n                    \"Y\": 0.20739148557186127,\n                    \"X\": 0.7055801749229431,\n                    \"Type\": \"nose\"\n                },\n                {\n                    \"Y\": 0.2889308035373688,\n                    \"X\": 0.687512218952179,\n                    \"Type\": \"mouthLeft\"\n                },\n                {\n                    \"Y\": 0.2706988751888275,\n                    \"X\": 0.7250053286552429,\n                    \"Type\": \"mouthRight\"\n                }\n            ]\n        }\n    ],\n    \"CelebrityFaces\": [\n        {\n            \"MatchConfidence\": 100.0,\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.14000000059604645,\n                    \"Top\": 0.1190476194024086,\n                    \"Left\": 0.82833331823349,\n                    \"Height\": 0.2666666805744171\n                },\n                \"Confidence\": 99.99359130859375,\n                \"Pose\": {\n                    \"Yaw\": -10.509642601013184,\n                    \"Roll\": -14.51749324798584,\n                    \"Pitch\": 13.799399375915527\n                },\n                \"Quality\": {\n                    \"Sharpness\": 78.74752044677734,\n                    \"Brightness\": 42.201324462890625\n                },\n                \"Landmarks\": [\n                    {\n                        \"Y\": 0.2290833294391632,\n                        \"X\": 0.8709492087364197,\n                        \"Type\": \"eyeLeft\"\n                    },\n                    {\n                        \"Y\": 0.20639978349208832,\n                        \"X\": 0.9153988361358643,\n                        \"Type\": \"eyeRight\"\n                    },\n                    {\n                        \"Y\": 0.25417643785476685,\n                        \"X\": 0.8907724022865295,\n                        \"Type\": \"nose\"\n                    },\n                    {\n                        \"Y\": 0.32729196548461914,\n                        \"X\": 0.8876466155052185,\n                        \"Type\": \"mouthLeft\"\n                    },\n                    {\n                        \"Y\": 0.3115464746952057,\n                        \"X\": 0.9238573312759399,\n                        \"Type\": \"mouthRight\"\n                    }\n                ]\n            },\n            \"Name\": \"Celeb A\",\n            \"Urls\": [\n                \"www.imdb.com/name/aaaaaaaaa\"\n            ],\n            \"Id\": \"1111111\"\n        },\n        {\n            \"MatchConfidence\": 97.0,\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.13333334028720856,\n                    \"Top\": 0.24920634925365448,\n                    \"Left\": 0.4449999928474426,\n                    \"Height\": 0.2539682686328888\n                },\n                \"Confidence\": 99.99979400634766,\n                \"Pose\": {\n                    \"Yaw\": 6.557040691375732,\n                    \"Roll\": -7.316643714904785,\n                    \"Pitch\": 9.272967338562012\n                },\n                \"Quality\": {\n                    \"Sharpness\": 83.23492431640625,\n                    \"Brightness\": 78.83267974853516\n                },\n                \"Landmarks\": [\n                    {\n                        \"Y\": 0.3625510632991791,\n                        \"X\": 0.48898839950561523,\n                        \"Type\": \"eyeLeft\"\n                    },\n                    {\n                        \"Y\": 0.35366007685661316,\n                        \"X\": 0.5313721299171448,\n                        \"Type\": \"eyeRight\"\n                    },\n                    {\n                        \"Y\": 0.3894785940647125,\n                        \"X\": 0.5173314809799194,\n                        \"Type\": \"nose\"\n                    },\n                    {\n                        \"Y\": 0.44889405369758606,\n                        \"X\": 0.5020005702972412,\n                        \"Type\": \"mouthLeft\"\n                    },\n                    {\n                        \"Y\": 0.4408611059188843,\n                        \"X\": 0.5351271629333496,\n                        \"Type\": \"mouthRight\"\n                    }\n                ]\n            },\n            \"Name\": \"Celeb B\",\n            \"Urls\": [\n                \"www.imdb.com/name/bbbbbbbbb\"\n            ],\n            \"Id\": \"2222222\"\n        },\n        {\n            \"MatchConfidence\": 100.0,\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.12416666746139526,\n                    \"Top\": 0.2968254089355469,\n                    \"Left\": 0.2150000035762787,\n                    \"Height\": 0.23650793731212616\n                },\n                \"Confidence\": 99.99958801269531,\n                \"Pose\": {\n                    \"Yaw\": 7.801797866821289,\n                    \"Roll\": -8.326810836791992,\n                    \"Pitch\": 7.844768047332764\n                },\n                \"Quality\": {\n                    \"Sharpness\": 86.93206024169922,\n                    \"Brightness\": 79.81291198730469\n                },\n                \"Landmarks\": [\n                    {\n                        \"Y\": 0.4027804136276245,\n                        \"X\": 0.2575301229953766,\n                        \"Type\": \"eyeLeft\"\n                    },\n                    {\n                        \"Y\": 0.3934555947780609,\n                        \"X\": 0.2956969439983368,\n                        \"Type\": \"eyeRight\"\n                    },\n                    {\n                        \"Y\": 0.4309830069541931,\n                        \"X\": 0.2837020754814148,\n                        \"Type\": \"nose\"\n                    },\n                    {\n                        \"Y\": 0.48186683654785156,\n                        \"X\": 0.26812544465065,\n                        \"Type\": \"mouthLeft\"\n                    },\n                    {\n                        \"Y\": 0.47338807582855225,\n                        \"X\": 0.29905644059181213,\n                        \"Type\": \"mouthRight\"\n                    }\n                ]\n            },\n            \"Name\": \"Celeb C\",\n            \"Urls\": [\n                \"www.imdb.com/name/ccccccccc\"\n            ],\n            \"Id\": \"3333333\"\n        },\n        {\n            \"MatchConfidence\": 97.0,\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.11916666477918625,\n                    \"Top\": 0.3698412775993347,\n                    \"Left\": 0.008333333767950535,\n                    \"Height\": 0.22698412835597992\n                },\n                \"Confidence\": 99.99999237060547,\n                \"Pose\": {\n                    \"Yaw\": 16.38478660583496,\n                    \"Roll\": -1.0260354280471802,\n                    \"Pitch\": 5.975185394287109\n                },\n                \"Quality\": {\n                    \"Sharpness\": 83.23492431640625,\n                    \"Brightness\": 61.408443450927734\n                },\n                \"Landmarks\": [\n                    {\n                        \"Y\": 0.4632347822189331,\n                        \"X\": 0.049406956881284714,\n                        \"Type\": \"eyeLeft\"\n                    },\n                    {\n                        \"Y\": 0.46388113498687744,\n                        \"X\": 0.08722897619009018,\n                        \"Type\": \"eyeRight\"\n                    },\n                    {\n                        \"Y\": 0.5020678639411926,\n                        \"X\": 0.0758260041475296,\n                        \"Type\": \"nose\"\n                    },\n                    {\n                        \"Y\": 0.544157862663269,\n                        \"X\": 0.054029736667871475,\n                        \"Type\": \"mouthLeft\"\n                    },\n                    {\n                        \"Y\": 0.5463630557060242,\n                        \"X\": 0.08464983850717545,\n                        \"Type\": \"mouthRight\"\n                    }\n                ]\n            },\n            \"Name\": \"Celeb D\",\n            \"Urls\": [\n                \"www.imdb.com/name/ddddddddd\"\n            ],\n            \"Id\": \"4444444\"\n        }\n    ]\n}\n\n\nFor more information, see Recognizing Celebrities in an Image in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "search-faces",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/search-faces.html",
      "command_description": "Description\n\nFor a given input face ID, searches for matching faces in the collection the face belongs to. You get a face ID when you add a face to the collection using the IndexFaces operation. The operation compares the features of the input face with faces in the specified collection.\n\nNote\n\nYou can also search faces without indexing faces by using the SearchFacesByImage operation.\n\nThe operation response returns an array of faces that match, ordered by similarity score with the highest similarity first. More specifically, it is an array of metadata for each face match that is found. Along with the metadata, the response also includes a confidence value for each face match, indicating the confidence that the specific face matches the input face.\n\nFor an example, see Searching for a Face Using Its Face ID in the Amazon Rekognition Developer Guide.\n\nThis operation requires permissions to perform the rekognition:SearchFaces action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  search-faces\n--collection-id <value>\n--face-id <value>\n[--max-faces <value>]\n[--face-match-threshold <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--collection-id <value>",
        "--face-id <value>",
        "[--max-faces <value>]",
        "[--face-match-threshold <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--collection-id (string)\n\nID of the collection the face belongs to.\n\n--face-id (string)\n\nID of a face to find matches for in the collection.\n\n--max-faces (integer)\n\nMaximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n\n--face-match-threshold (float)\n\nOptional value specifying the minimum confidence in the face match to return. For example, don’t return any matches where confidence in matches is less than 70%. The default value is 80%.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSearchedFaceId -> (string)\n\nID of the face that was searched for matches in a collection.\n\nFaceMatches -> (list)\n\nAn array of faces that matched the input face, along with the confidence in the match.\n\n(structure)\n\nProvides face metadata. In addition, it also provides the confidence in the match of this face with the input face.\n\nSimilarity -> (float)\n\nConfidence in the match of this face with the input face.\n\nFace -> (structure)\n\nDescribes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.\n\nFaceId -> (string)\n\nUnique identifier that Amazon Rekognition assigns to the face.\n\nBoundingBox -> (structure)\n\nBounding box of the face.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nImageId -> (string)\n\nUnique identifier that Amazon Rekognition assigns to the input image.\n\nExternalImageId -> (string)\n\nIdentifier that you assign to all the faces in the input image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree).\n\nFaceModelVersion -> (string)\n\nVersion number of the face detection model associated with the input collection (CollectionId ).",
      "command_examples": "Examples\n\nTo search for faces in a collection that match a face ID.\n\nThe following search-faces command searches for faces in a collection that match the specified face ID.\n\naws rekognition search-faces \\\n    --face-id 8d3cfc70-4ba8-4b36-9644-90fba29c2dac \\\n    --collection-id MyCollection\n\n\nOutput:\n\n{\n    \"SearchedFaceId\": \"8d3cfc70-4ba8-4b36-9644-90fba29c2dac\",\n    \"FaceModelVersion\": \"3.0\",\n    \"FaceMatches\": [\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.48166701197624207,\n                    \"Top\": 0.20999999344348907,\n                    \"Left\": 0.21250000596046448,\n                    \"Height\": 0.36125001311302185\n                },\n                \"FaceId\": \"bd4ceb4d-9acc-4ab7-8ef8-1c2d2ba0a66a\",\n                \"ExternalImageId\": \"image1.jpg\",\n                \"Confidence\": 99.99949645996094,\n                \"ImageId\": \"5e1a7588-e5a0-5ee3-bd00-c642518dfe3a\"\n            },\n            \"Similarity\": 99.30997467041016\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.18562500178813934,\n                    \"Top\": 0.1618019938468933,\n                    \"Left\": 0.5575000047683716,\n                    \"Height\": 0.24770599603652954\n                },\n                \"FaceId\": \"ce7ed422-2132-4a11-ab14-06c5c410f29f\",\n                \"ExternalImageId\": \"example-image.jpg\",\n                \"Confidence\": 99.99340057373047,\n                \"ImageId\": \"8d67061e-90d2-598f-9fbd-29c8497039c0\"\n            },\n            \"Similarity\": 99.24862670898438\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.18562500178813934,\n                    \"Top\": 0.1618019938468933,\n                    \"Left\": 0.5575000047683716,\n                    \"Height\": 0.24770599603652954\n                },\n                \"FaceId\": \"13692fe4-990a-4679-b14a-5ac23d135eab\",\n                \"ExternalImageId\": \"image3.jpg\",\n                \"Confidence\": 99.99340057373047,\n                \"ImageId\": \"8df18239-9ad1-5acd-a46a-6581ff98f51b\"\n            },\n            \"Similarity\": 99.24862670898438\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.5349419713020325,\n                    \"Top\": 0.29124999046325684,\n                    \"Left\": 0.16389399766921997,\n                    \"Height\": 0.40187498927116394\n                },\n                \"FaceId\": \"745f7509-b1fa-44e0-8b95-367b1359638a\",\n                \"ExternalImageId\": \"image9.jpg\",\n                \"Confidence\": 99.99979400634766,\n                \"ImageId\": \"67a34327-48d1-5179-b042-01e52ccfeada\"\n            },\n            \"Similarity\": 96.73158264160156\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.5307819843292236,\n                    \"Top\": 0.2862499952316284,\n                    \"Left\": 0.1564060002565384,\n                    \"Height\": 0.3987500071525574\n                },\n                \"FaceId\": \"2eb5f3fd-e2a9-4b1c-a89f-afa0a518fe06\",\n                \"ExternalImageId\": \"image10.jpg\",\n                \"Confidence\": 99.99970245361328,\n                \"ImageId\": \"3c314792-197d-528d-bbb6-798ed012c150\"\n            },\n            \"Similarity\": 96.48291015625\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.5074880123138428,\n                    \"Top\": 0.3774999976158142,\n                    \"Left\": 0.18302799761295319,\n                    \"Height\": 0.3812499940395355\n                },\n                \"FaceId\": \"086261e8-6deb-4bc0-ac73-ab22323cc38d\",\n                \"ExternalImageId\": \"image6.jpg\",\n                \"Confidence\": 99.99930572509766,\n                \"ImageId\": \"ae1593b0-a8f6-5e24-a306-abf529e276fa\"\n            },\n            \"Similarity\": 96.43287658691406\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.5574039816856384,\n                    \"Top\": 0.37187498807907104,\n                    \"Left\": 0.14559100568294525,\n                    \"Height\": 0.4181250035762787\n                },\n                \"FaceId\": \"11c4bd3c-19c5-4eb8-aecc-24feb93a26e1\",\n                \"ExternalImageId\": \"image5.jpg\",\n                \"Confidence\": 99.99960327148438,\n                \"ImageId\": \"80739b4d-883f-5b78-97cf-5124038e26b9\"\n            },\n            \"Similarity\": 95.25305938720703\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.5773710012435913,\n                    \"Top\": 0.34437501430511475,\n                    \"Left\": 0.12396000325679779,\n                    \"Height\": 0.4337500035762787\n                },\n                \"FaceId\": \"57189455-42b0-4839-a86c-abda48b13174\",\n                \"ExternalImageId\": \"image8.jpg\",\n                \"Confidence\": 100.0,\n                \"ImageId\": \"0aff2f37-e7a2-5dbc-a3a3-4ef6ec18eaa0\"\n            },\n            \"Similarity\": 95.22837829589844\n        }\n    ]\n}\n\n\nFor more information, see Searching for a Face Using Its Face ID in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "search-faces-by-image",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/search-faces-by-image.html",
      "command_description": "Description\n\nFor a given input image, first detects the largest face in the image, and then searches the specified collection for matching faces. The operation compares the features of the input face with faces in the specified collection.\n\nNote\n\nTo search for all faces in an input image, you might first call the IndexFaces operation, and then use the face IDs returned in subsequent calls to the SearchFaces operation.\n\nYou can also call the DetectFaces operation and use the bounding boxes in the response to make face crops, which then you can pass in to the SearchFacesByImage operation.\n\nYou pass the input image either as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. The image must be either a PNG or JPEG formatted file.\n\nThe response returns an array of faces that match, ordered by similarity score with the highest similarity first. More specifically, it is an array of metadata for each face match found. Along with the metadata, the response also includes a similarity indicating how similar the face is to the input face. In the response, the operation also returns the bounding box (and a confidence level that the bounding box contains a face) of the face that Amazon Rekognition used for the input image.\n\nIf no faces are detected in the input image, SearchFacesByImage returns an InvalidParameterException error.\n\nFor an example, Searching for a Face Using an Image in the Amazon Rekognition Developer Guide.\n\nThe QualityFilter input parameter allows you to filter out detected faces that don’t meet a required quality bar. The quality bar is based on a variety of common use cases. Use QualityFilter to set the quality bar for filtering by specifying LOW , MEDIUM , or HIGH . If you do not want to filter detected faces, specify NONE . The default value is NONE .\n\nNote\n\nTo use quality filtering, you need a collection associated with version 3 of the face model or higher. To get the version of the face model associated with a collection, call DescribeCollection .\n\nThis operation requires permissions to perform the rekognition:SearchFacesByImage action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  search-faces-by-image\n--collection-id <value>\n[--image <value>]\n[--max-faces <value>]\n[--face-match-threshold <value>]\n[--quality-filter <value>]\n[--image-bytes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--collection-id <value>",
        "[--image <value>]",
        "[--max-faces <value>]",
        "[--face-match-threshold <value>]",
        "[--quality-filter <value>]",
        "[--image-bytes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--collection-id (string)\n\nID of the collection to search.\n\n--image (structure)\n\nThe input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.\n\nIf you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode image bytes passed using the Bytes field. For more information, see Images in the Amazon Rekognition developer guide.\n\nTo specify a local file use --image-bytes instead.\n\nBytes -> (blob)\n\nBlob of image bytes up to 5 MBs.\n\nS3Object -> (structure)\n\nIdentifies an S3 object as the image source.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nBytes=blob,S3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"Bytes\": blob,\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--max-faces (integer)\n\nMaximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n\n--face-match-threshold (float)\n\n(Optional) Specifies the minimum confidence in the face match to return. For example, don’t return any matches where confidence in matches is less than 70%. The default value is 80%.\n\n--quality-filter (string)\n\nA filter that specifies a quality bar for how much filtering is done to identify faces. Filtered faces aren’t searched for in the collection. If you specify AUTO , Amazon Rekognition chooses the quality bar. If you specify LOW , MEDIUM , or HIGH , filtering removes all faces that don’t meet the chosen quality bar. The quality bar is based on a variety of common use cases. Low-quality detections can occur for a number of reasons. Some examples are an object that’s misidentified as a face, a face that’s too blurry, or a face with a pose that’s too extreme to use. If you specify NONE , no filtering is performed. The default value is NONE .\n\nTo use quality filtering, the collection you are using must be associated with version 3 of the face model or higher.\n\nPossible values:\n\nNONE\n\nAUTO\n\nLOW\n\nMEDIUM\n\nHIGH\n\n--image-bytes (blob)\n\nThe content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSearchedFaceBoundingBox -> (structure)\n\nThe bounding box around the face in the input image that Amazon Rekognition used for the search.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nSearchedFaceConfidence -> (float)\n\nThe level of confidence that the searchedFaceBoundingBox , contains a face.\n\nFaceMatches -> (list)\n\nAn array of faces that match the input face, along with the confidence in the match.\n\n(structure)\n\nProvides face metadata. In addition, it also provides the confidence in the match of this face with the input face.\n\nSimilarity -> (float)\n\nConfidence in the match of this face with the input face.\n\nFace -> (structure)\n\nDescribes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.\n\nFaceId -> (string)\n\nUnique identifier that Amazon Rekognition assigns to the face.\n\nBoundingBox -> (structure)\n\nBounding box of the face.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nImageId -> (string)\n\nUnique identifier that Amazon Rekognition assigns to the input image.\n\nExternalImageId -> (string)\n\nIdentifier that you assign to all the faces in the input image.\n\nConfidence -> (float)\n\nConfidence level that the bounding box contains a face (and not a different object such as a tree).\n\nFaceModelVersion -> (string)\n\nVersion number of the face detection model associated with the input collection (CollectionId ).",
      "command_examples": "Examples\n\nTo search for faces in a collection that match the largest face in an image.\n\nThe following search-faces-by-image command searches for faces in a collection that match the largest face in the specified image.:\n\naws rekognition search-faces-by-image \\\n    --image '{\"S3Object\":{\"Bucket\":\"MyImageS3Bucket\",\"Name\":\"ExamplePerson.jpg\"}}' \\\n    --collection-id MyFaceImageCollection\n\n{\n    \"SearchedFaceBoundingBox\": {\n        \"Width\": 0.18562500178813934,\n        \"Top\": 0.1618015021085739,\n        \"Left\": 0.5575000047683716,\n        \"Height\": 0.24770642817020416\n    },\n    \"SearchedFaceConfidence\": 99.993408203125,\n    \"FaceMatches\": [\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.18562500178813934,\n                    \"Top\": 0.1618019938468933,\n                    \"Left\": 0.5575000047683716,\n                    \"Height\": 0.24770599603652954\n                },\n                \"FaceId\": \"ce7ed422-2132-4a11-ab14-06c5c410f29f\",\n                \"ExternalImageId\": \"example-image.jpg\",\n                \"Confidence\": 99.99340057373047,\n                \"ImageId\": \"8d67061e-90d2-598f-9fbd-29c8497039c0\"\n            },\n            \"Similarity\": 99.97913360595703\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.18562500178813934,\n                    \"Top\": 0.1618019938468933,\n                    \"Left\": 0.5575000047683716,\n                    \"Height\": 0.24770599603652954\n                },\n                \"FaceId\": \"13692fe4-990a-4679-b14a-5ac23d135eab\",\n                \"ExternalImageId\": \"image3.jpg\",\n                \"Confidence\": 99.99340057373047,\n                \"ImageId\": \"8df18239-9ad1-5acd-a46a-6581ff98f51b\"\n            },\n            \"Similarity\": 99.97913360595703\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.41499999165534973,\n                    \"Top\": 0.09187500178813934,\n                    \"Left\": 0.28083300590515137,\n                    \"Height\": 0.3112500011920929\n                },\n                \"FaceId\": \"8d3cfc70-4ba8-4b36-9644-90fba29c2dac\",\n                \"ExternalImageId\": \"image2.jpg\",\n                \"Confidence\": 99.99769592285156,\n                \"ImageId\": \"a294da46-2cb1-5cc4-9045-61d7ca567662\"\n            },\n            \"Similarity\": 99.18069458007812\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.48166701197624207,\n                    \"Top\": 0.20999999344348907,\n                    \"Left\": 0.21250000596046448,\n                    \"Height\": 0.36125001311302185\n                },\n                \"FaceId\": \"bd4ceb4d-9acc-4ab7-8ef8-1c2d2ba0a66a\",\n                \"ExternalImageId\": \"image1.jpg\",\n                \"Confidence\": 99.99949645996094,\n                \"ImageId\": \"5e1a7588-e5a0-5ee3-bd00-c642518dfe3a\"\n            },\n            \"Similarity\": 98.66607666015625\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.5349419713020325,\n                    \"Top\": 0.29124999046325684,\n                    \"Left\": 0.16389399766921997,\n                    \"Height\": 0.40187498927116394\n                },\n                \"FaceId\": \"745f7509-b1fa-44e0-8b95-367b1359638a\",\n                \"ExternalImageId\": \"image9.jpg\",\n                \"Confidence\": 99.99979400634766,\n                \"ImageId\": \"67a34327-48d1-5179-b042-01e52ccfeada\"\n            },\n            \"Similarity\": 98.24278259277344\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.5307819843292236,\n                    \"Top\": 0.2862499952316284,\n                    \"Left\": 0.1564060002565384,\n                    \"Height\": 0.3987500071525574\n                },\n                \"FaceId\": \"2eb5f3fd-e2a9-4b1c-a89f-afa0a518fe06\",\n                \"ExternalImageId\": \"image10.jpg\",\n                \"Confidence\": 99.99970245361328,\n                \"ImageId\": \"3c314792-197d-528d-bbb6-798ed012c150\"\n            },\n            \"Similarity\": 98.10665893554688\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.5074880123138428,\n                    \"Top\": 0.3774999976158142,\n                    \"Left\": 0.18302799761295319,\n                    \"Height\": 0.3812499940395355\n                },\n                \"FaceId\": \"086261e8-6deb-4bc0-ac73-ab22323cc38d\",\n                \"ExternalImageId\": \"image6.jpg\",\n                \"Confidence\": 99.99930572509766,\n                \"ImageId\": \"ae1593b0-a8f6-5e24-a306-abf529e276fa\"\n            },\n            \"Similarity\": 98.10526275634766\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.5574039816856384,\n                    \"Top\": 0.37187498807907104,\n                    \"Left\": 0.14559100568294525,\n                    \"Height\": 0.4181250035762787\n                },\n                \"FaceId\": \"11c4bd3c-19c5-4eb8-aecc-24feb93a26e1\",\n                \"ExternalImageId\": \"image5.jpg\",\n                \"Confidence\": 99.99960327148438,\n                \"ImageId\": \"80739b4d-883f-5b78-97cf-5124038e26b9\"\n            },\n            \"Similarity\": 97.94659423828125\n        },\n        {\n            \"Face\": {\n                \"BoundingBox\": {\n                    \"Width\": 0.5773710012435913,\n                    \"Top\": 0.34437501430511475,\n                    \"Left\": 0.12396000325679779,\n                    \"Height\": 0.4337500035762787\n                },\n                \"FaceId\": \"57189455-42b0-4839-a86c-abda48b13174\",\n                \"ExternalImageId\": \"image8.jpg\",\n                \"Confidence\": 100.0,\n                \"ImageId\": \"0aff2f37-e7a2-5dbc-a3a3-4ef6ec18eaa0\"\n            },\n            \"Similarity\": 97.93476867675781\n        }\n    ],\n    \"FaceModelVersion\": \"3.0\"\n}\n\n\nFor more information, see Searching for a Face Using an Image in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "start-celebrity-recognition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/start-celebrity-recognition.html",
      "command_description": "Description\n\nStarts asynchronous recognition of celebrities in a stored video.\n\nAmazon Rekognition Video can detect celebrities in a video must be stored in an Amazon S3 bucket. Use Video to specify the bucket name and the filename of the video. StartCelebrityRecognition returns a job identifier (JobId ) which you use to get the results of the analysis. When celebrity recognition analysis is finished, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic that you specify in NotificationChannel . To get the results of the celebrity recognition analysis, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetCelebrityRecognition and pass the job identifier (JobId ) from the initial call to StartCelebrityRecognition .\n\nFor more information, see Recognizing Celebrities in the Amazon Rekognition Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-celebrity-recognition\n--video <value>\n[--client-request-token <value>]\n[--notification-channel <value>]\n[--job-tag <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--video <value>",
        "[--client-request-token <value>]",
        "[--notification-channel <value>]",
        "[--job-tag <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--video (structure)\n\nThe video in which you want to recognize celebrities. The video must be stored in an Amazon S3 bucket.\n\nS3Object -> (structure)\n\nThe Amazon S3 bucket name and file name for the video.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nS3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--client-request-token (string)\n\nIdempotent token used to identify the start request. If you use the same token with multiple StartCelebrityRecognition requests, the same JobId is returned. Use ClientRequestToken to prevent the same job from being accidently started more than once.\n\n--notification-channel (structure)\n\nThe Amazon SNS topic ARN that you want Amazon Rekognition Video to publish the completion status of the celebrity recognition analysis to. The Amazon SNS topic must have a topic name that begins with AmazonRekognition if you are using the AmazonRekognitionServiceRole permissions policy.\n\nSNSTopicArn -> (string)\n\nThe Amazon SNS topic to which Amazon Rekognition to posts the completion status.\n\nRoleArn -> (string)\n\nThe ARN of an IAM role that gives Amazon Rekognition publishing permissions to the Amazon SNS topic.\n\nShorthand Syntax:\n\nSNSTopicArn=string,RoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"SNSTopicArn\": \"string\",\n  \"RoleArn\": \"string\"\n}\n\n\n--job-tag (string)\n\nAn identifier you specify that’s returned in the completion notification that’s published to your Amazon Simple Notification Service topic. For example, you can use JobTag to group related jobs and identify them in the completion notification.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier for the celebrity recognition analysis job. Use JobId to identify the job in a subsequent call to GetCelebrityRecognition .",
      "command_examples": "Examples\n\nTo start the recognition of celebrities in a stored video\n\nThe following start-celebrity-recognition command starts a job to look for celebrities in the specified video file stored in an Amazon S3 bucket.\n\naws rekognition start-celebrity-recognition \\\n    --video \"S3Object={Bucket=MyVideoS3Bucket,Name=MyVideoFile.mpg}\"\n\n\nOutput:\n\n{\n    \"JobId\": \"1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\"\n}\n\n\nFor more information, see Recognizing Celebrities in a Stored Video in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "start-content-moderation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/start-content-moderation.html",
      "command_description": "Description\n\nStarts asynchronous detection of inappropriate, unwanted, or offensive content in a stored video. For a list of moderation labels in Amazon Rekognition, see Using the image and video moderation APIs .\n\nAmazon Rekognition Video can moderate content in a video stored in an Amazon S3 bucket. Use Video to specify the bucket name and the filename of the video. StartContentModeration returns a job identifier (JobId ) which you use to get the results of the analysis. When content analysis is finished, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic that you specify in NotificationChannel .\n\nTo get the results of the content analysis, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetContentModeration and pass the job identifier (JobId ) from the initial call to StartContentModeration .\n\nFor more information, see Content moderation in the Amazon Rekognition Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-content-moderation\n--video <value>\n[--min-confidence <value>]\n[--client-request-token <value>]\n[--notification-channel <value>]\n[--job-tag <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--video <value>",
        "[--min-confidence <value>]",
        "[--client-request-token <value>]",
        "[--notification-channel <value>]",
        "[--job-tag <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--video (structure)\n\nThe video in which you want to detect inappropriate, unwanted, or offensive content. The video must be stored in an Amazon S3 bucket.\n\nS3Object -> (structure)\n\nThe Amazon S3 bucket name and file name for the video.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nS3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--min-confidence (float)\n\nSpecifies the minimum confidence that Amazon Rekognition must have in order to return a moderated content label. Confidence represents how certain Amazon Rekognition is that the moderated content is correctly identified. 0 is the lowest confidence. 100 is the highest confidence. Amazon Rekognition doesn’t return any moderated content labels with a confidence level lower than this specified value. If you don’t specify MinConfidence , GetContentModeration returns labels with confidence values greater than or equal to 50 percent.\n\n--client-request-token (string)\n\nIdempotent token used to identify the start request. If you use the same token with multiple StartContentModeration requests, the same JobId is returned. Use ClientRequestToken to prevent the same job from being accidently started more than once.\n\n--notification-channel (structure)\n\nThe Amazon SNS topic ARN that you want Amazon Rekognition Video to publish the completion status of the content analysis to. The Amazon SNS topic must have a topic name that begins with AmazonRekognition if you are using the AmazonRekognitionServiceRole permissions policy to access the topic.\n\nSNSTopicArn -> (string)\n\nThe Amazon SNS topic to which Amazon Rekognition to posts the completion status.\n\nRoleArn -> (string)\n\nThe ARN of an IAM role that gives Amazon Rekognition publishing permissions to the Amazon SNS topic.\n\nShorthand Syntax:\n\nSNSTopicArn=string,RoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"SNSTopicArn\": \"string\",\n  \"RoleArn\": \"string\"\n}\n\n\n--job-tag (string)\n\nAn identifier you specify that’s returned in the completion notification that’s published to your Amazon Simple Notification Service topic. For example, you can use JobTag to group related jobs and identify them in the completion notification.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier for the content analysis job. Use JobId to identify the job in a subsequent call to GetContentModeration .",
      "command_examples": "Examples\n\nTo start the recognition of unsafe content in a stored video\n\nThe following start-content-moderation command starts a job to detect unsafe content in the specified video file stored in an Amazon S3 bucket.\n\naws rekognition start-content-moderation \\\n    --video \"S3Object={Bucket=MyVideoS3Bucket,Name=MyVideoFile.mpg}\"\n\n\nOutput:\n\n{\n    \"JobId\": \"1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\"\n}\n\n\nFor more information, see Detecting Unsafe Stored Videos in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "start-face-detection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/start-face-detection.html",
      "command_description": "Description\n\nStarts asynchronous detection of faces in a stored video.\n\nAmazon Rekognition Video can detect faces in a video stored in an Amazon S3 bucket. Use Video to specify the bucket name and the filename of the video. StartFaceDetection returns a job identifier (JobId ) that you use to get the results of the operation. When face detection is finished, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic that you specify in NotificationChannel . To get the results of the face detection operation, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetFaceDetection and pass the job identifier (JobId ) from the initial call to StartFaceDetection .\n\nFor more information, see Detecting Faces in a Stored Video in the Amazon Rekognition Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-face-detection\n--video <value>\n[--client-request-token <value>]\n[--notification-channel <value>]\n[--face-attributes <value>]\n[--job-tag <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--video <value>",
        "[--client-request-token <value>]",
        "[--notification-channel <value>]",
        "[--face-attributes <value>]",
        "[--job-tag <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--video (structure)\n\nThe video in which you want to detect faces. The video must be stored in an Amazon S3 bucket.\n\nS3Object -> (structure)\n\nThe Amazon S3 bucket name and file name for the video.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nS3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--client-request-token (string)\n\nIdempotent token used to identify the start request. If you use the same token with multiple StartFaceDetection requests, the same JobId is returned. Use ClientRequestToken to prevent the same job from being accidently started more than once.\n\n--notification-channel (structure)\n\nThe ARN of the Amazon SNS topic to which you want Amazon Rekognition Video to publish the completion status of the face detection operation. The Amazon SNS topic must have a topic name that begins with AmazonRekognition if you are using the AmazonRekognitionServiceRole permissions policy.\n\nSNSTopicArn -> (string)\n\nThe Amazon SNS topic to which Amazon Rekognition to posts the completion status.\n\nRoleArn -> (string)\n\nThe ARN of an IAM role that gives Amazon Rekognition publishing permissions to the Amazon SNS topic.\n\nShorthand Syntax:\n\nSNSTopicArn=string,RoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"SNSTopicArn\": \"string\",\n  \"RoleArn\": \"string\"\n}\n\n\n--face-attributes (string)\n\nThe face attributes you want returned.\n\nDEFAULT - The following subset of facial attributes are returned: BoundingBox, Confidence, Pose, Quality and Landmarks.\n\nALL - All facial attributes are returned.\n\nPossible values:\n\nDEFAULT\n\nALL\n\n--job-tag (string)\n\nAn identifier you specify that’s returned in the completion notification that’s published to your Amazon Simple Notification Service topic. For example, you can use JobTag to group related jobs and identify them in the completion notification.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier for the face detection job. Use JobId to identify the job in a subsequent call to GetFaceDetection .",
      "command_examples": "Examples\n\nTo detect faces in a video\n\nThe following start-face-detection command starts a job to detect faces in the specified video file stored in an Amazon S3 bucket.\n\naws rekognition start-face-detection\n    --video \"S3Object={Bucket=MyVideoS3Bucket,Name=MyVideoFile.mpg}\"\n\n\nOutput:\n\n{\n    \"JobId\": \"1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\"\n}\n\n\nFor more information, see Detecting Faces in a Stored Video in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "start-face-search",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/start-face-search.html",
      "command_description": "Description\n\nStarts the asynchronous search for faces in a collection that match the faces of persons detected in a stored video.\n\nThe video must be stored in an Amazon S3 bucket. Use Video to specify the bucket name and the filename of the video. StartFaceSearch returns a job identifier (JobId ) which you use to get the search results once the search has completed. When searching is finished, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic that you specify in NotificationChannel . To get the search results, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetFaceSearch and pass the job identifier (JobId ) from the initial call to StartFaceSearch . For more information, see procedure-person-search-videos .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-face-search\n--video <value>\n[--client-request-token <value>]\n[--face-match-threshold <value>]\n--collection-id <value>\n[--notification-channel <value>]\n[--job-tag <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--video <value>",
        "[--client-request-token <value>]",
        "[--face-match-threshold <value>]",
        "--collection-id <value>",
        "[--notification-channel <value>]",
        "[--job-tag <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--video (structure)\n\nThe video you want to search. The video must be stored in an Amazon S3 bucket.\n\nS3Object -> (structure)\n\nThe Amazon S3 bucket name and file name for the video.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nS3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--client-request-token (string)\n\nIdempotent token used to identify the start request. If you use the same token with multiple StartFaceSearch requests, the same JobId is returned. Use ClientRequestToken to prevent the same job from being accidently started more than once.\n\n--face-match-threshold (float)\n\nThe minimum confidence in the person match to return. For example, don’t return any matches where confidence in matches is less than 70%. The default value is 80%.\n\n--collection-id (string)\n\nID of the collection that contains the faces you want to search for.\n\n--notification-channel (structure)\n\nThe ARN of the Amazon SNS topic to which you want Amazon Rekognition Video to publish the completion status of the search. The Amazon SNS topic must have a topic name that begins with AmazonRekognition if you are using the AmazonRekognitionServiceRole permissions policy to access the topic.\n\nSNSTopicArn -> (string)\n\nThe Amazon SNS topic to which Amazon Rekognition to posts the completion status.\n\nRoleArn -> (string)\n\nThe ARN of an IAM role that gives Amazon Rekognition publishing permissions to the Amazon SNS topic.\n\nShorthand Syntax:\n\nSNSTopicArn=string,RoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"SNSTopicArn\": \"string\",\n  \"RoleArn\": \"string\"\n}\n\n\n--job-tag (string)\n\nAn identifier you specify that’s returned in the completion notification that’s published to your Amazon Simple Notification Service topic. For example, you can use JobTag to group related jobs and identify them in the completion notification.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier for the search job. Use JobId to identify the job in a subsequent call to GetFaceSearch .",
      "command_examples": "Examples\n\nTo search for faces in a collection that match faces detected in a video\n\nThe following start-face-search command starts a job to search for faces in a collection that match faces detected in the specified video file in an Amazon S3 bucket.\n\naws rekognition start-face-search \\\n    --video \"S3Object={Bucket=MyVideoS3Bucket,Name=MyVideoFile.mpg}\" \\\n    --collection-id collection\n\n\nOutput:\n\n{\n    \"JobId\": \"1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\"\n}\n\n\nFor more information, see Searching Stored Videos for Faces in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "start-label-detection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/start-label-detection.html",
      "command_description": "Description\n\nStarts asynchronous detection of labels in a stored video.\n\nAmazon Rekognition Video can detect labels in a video. Labels are instances of real-world entities. This includes objects like flower, tree, and table; events like wedding, graduation, and birthday party; concepts like landscape, evening, and nature; and activities like a person getting out of a car or a person skiing.\n\nThe video must be stored in an Amazon S3 bucket. Use Video to specify the bucket name and the filename of the video. StartLabelDetection returns a job identifier (JobId ) which you use to get the results of the operation. When label detection is finished, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic that you specify in NotificationChannel .\n\nTo get the results of the label detection operation, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetLabelDetection and pass the job identifier (JobId ) from the initial call to StartLabelDetection .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-label-detection\n--video <value>\n[--client-request-token <value>]\n[--min-confidence <value>]\n[--notification-channel <value>]\n[--job-tag <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--video <value>",
        "[--client-request-token <value>]",
        "[--min-confidence <value>]",
        "[--notification-channel <value>]",
        "[--job-tag <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--video (structure)\n\nThe video in which you want to detect labels. The video must be stored in an Amazon S3 bucket.\n\nS3Object -> (structure)\n\nThe Amazon S3 bucket name and file name for the video.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nS3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--client-request-token (string)\n\nIdempotent token used to identify the start request. If you use the same token with multiple StartLabelDetection requests, the same JobId is returned. Use ClientRequestToken to prevent the same job from being accidently started more than once.\n\n--min-confidence (float)\n\nSpecifies the minimum confidence that Amazon Rekognition Video must have in order to return a detected label. Confidence represents how certain Amazon Rekognition is that a label is correctly identified.0 is the lowest confidence. 100 is the highest confidence. Amazon Rekognition Video doesn’t return any labels with a confidence level lower than this specified value.\n\nIf you don’t specify MinConfidence , the operation returns labels with confidence values greater than or equal to 50 percent.\n\n--notification-channel (structure)\n\nThe Amazon SNS topic ARN you want Amazon Rekognition Video to publish the completion status of the label detection operation to. The Amazon SNS topic must have a topic name that begins with AmazonRekognition if you are using the AmazonRekognitionServiceRole permissions policy.\n\nSNSTopicArn -> (string)\n\nThe Amazon SNS topic to which Amazon Rekognition to posts the completion status.\n\nRoleArn -> (string)\n\nThe ARN of an IAM role that gives Amazon Rekognition publishing permissions to the Amazon SNS topic.\n\nShorthand Syntax:\n\nSNSTopicArn=string,RoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"SNSTopicArn\": \"string\",\n  \"RoleArn\": \"string\"\n}\n\n\n--job-tag (string)\n\nAn identifier you specify that’s returned in the completion notification that’s published to your Amazon Simple Notification Service topic. For example, you can use JobTag to group related jobs and identify them in the completion notification.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier for the label detection job. Use JobId to identify the job in a subsequent call to GetLabelDetection .",
      "command_examples": "Examples\n\nTo detect objects and scenes in a video\n\nThe following start-label-detection command starts a job to detect objects and scenes in the specified video file stored in an Amazon S3 bucket.\n\naws rekognition start-label-detection \\\n    --video \"S3Object={Bucket=MyVideoS3Bucket,Name=MyVideoFile.mpg}\"\n\n\nOutput:\n\n{\n    \"JobId\": \"1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\"\n}\n\n\nFor more information, see Detecting Labels in a Video in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "start-person-tracking",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/start-person-tracking.html",
      "command_description": "Description\n\nStarts the asynchronous tracking of a person’s path in a stored video.\n\nAmazon Rekognition Video can track the path of people in a video stored in an Amazon S3 bucket. Use Video to specify the bucket name and the filename of the video. StartPersonTracking returns a job identifier (JobId ) which you use to get the results of the operation. When label detection is finished, Amazon Rekognition publishes a completion status to the Amazon Simple Notification Service topic that you specify in NotificationChannel .\n\nTo get the results of the person detection operation, first check that the status value published to the Amazon SNS topic is SUCCEEDED . If so, call GetPersonTracking and pass the job identifier (JobId ) from the initial call to StartPersonTracking .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-person-tracking\n--video <value>\n[--client-request-token <value>]\n[--notification-channel <value>]\n[--job-tag <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--video <value>",
        "[--client-request-token <value>]",
        "[--notification-channel <value>]",
        "[--job-tag <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--video (structure)\n\nThe video in which you want to detect people. The video must be stored in an Amazon S3 bucket.\n\nS3Object -> (structure)\n\nThe Amazon S3 bucket name and file name for the video.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nS3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--client-request-token (string)\n\nIdempotent token used to identify the start request. If you use the same token with multiple StartPersonTracking requests, the same JobId is returned. Use ClientRequestToken to prevent the same job from being accidently started more than once.\n\n--notification-channel (structure)\n\nThe Amazon SNS topic ARN you want Amazon Rekognition Video to publish the completion status of the people detection operation to. The Amazon SNS topic must have a topic name that begins with AmazonRekognition if you are using the AmazonRekognitionServiceRole permissions policy.\n\nSNSTopicArn -> (string)\n\nThe Amazon SNS topic to which Amazon Rekognition to posts the completion status.\n\nRoleArn -> (string)\n\nThe ARN of an IAM role that gives Amazon Rekognition publishing permissions to the Amazon SNS topic.\n\nShorthand Syntax:\n\nSNSTopicArn=string,RoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"SNSTopicArn\": \"string\",\n  \"RoleArn\": \"string\"\n}\n\n\n--job-tag (string)\n\nAn identifier you specify that’s returned in the completion notification that’s published to your Amazon Simple Notification Service topic. For example, you can use JobTag to group related jobs and identify them in the completion notification.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier for the person detection job. Use JobId to identify the job in a subsequent call to GetPersonTracking .",
      "command_examples": "Examples\n\nTo start the pathing of people in a stored video\n\nThe following start-person-tracking command starts a job to track the paths that people take in the specified video fiel stored in an Amazon S3 bucket.:\n\naws rekognition start-person-tracking \\\n    --video \"S3Object={Bucket=MyVideoS3Bucket,Name=MyVideoFile.mpg}\"\n\n\nOutput:\n\n{\n    \"JobId\": \"1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\"\n}\n\n\nFor more information, see People Pathing in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "start-project-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/start-project-version.html",
      "command_description": "Description\n\nStarts the running of the version of a model. Starting a model takes a while to complete. To check the current state of the model, use DescribeProjectVersions .\n\nOnce the model is running, you can detect custom labels in new images by calling DetectCustomLabels .\n\nNote\n\nYou are charged for the amount of time that the model is running. To stop a running model, call StopProjectVersion .\n\nThis operation requires permissions to perform the rekognition:StartProjectVersion action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-project-version\n--project-version-arn <value>\n--min-inference-units <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-version-arn <value>",
        "--min-inference-units <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-version-arn (string)\n\nThe Amazon Resource Name(ARN) of the model version that you want to start.\n\n--min-inference-units (integer)\n\nThe minimum number of inference units to use. A single inference unit represents 1 hour of processing and can support up to 5 Transaction Pers Second (TPS). Use a higher number to increase the TPS throughput of your model. You are charged for the number of inference units that you use.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatus -> (string)\n\nThe current running status of the model."
    },
    {
      "command_name": "start-segment-detection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/start-segment-detection.html",
      "command_description": "Description\n\nStarts asynchronous detection of segment detection in a stored video.\n\nAmazon Rekognition Video can detect segments in a video stored in an Amazon S3 bucket. Use Video to specify the bucket name and the filename of the video. StartSegmentDetection returns a job identifier (JobId ) which you use to get the results of the operation. When segment detection is finished, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic that you specify in NotificationChannel .\n\nYou can use the Filters ( StartSegmentDetectionFilters ) input parameter to specify the minimum detection confidence returned in the response. Within Filters , use ShotFilter ( StartShotDetectionFilter ) to filter detected shots. Use TechnicalCueFilter ( StartTechnicalCueDetectionFilter ) to filter technical cues.\n\nTo get the results of the segment detection operation, first check that the status value published to the Amazon SNS topic is SUCCEEDED . if so, call GetSegmentDetection and pass the job identifier (JobId ) from the initial call to StartSegmentDetection .\n\nFor more information, see Detecting Video Segments in Stored Video in the Amazon Rekognition Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-segment-detection\n--video <value>\n[--client-request-token <value>]\n[--notification-channel <value>]\n[--job-tag <value>]\n[--filters <value>]\n--segment-types <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--video <value>",
        "[--client-request-token <value>]",
        "[--notification-channel <value>]",
        "[--job-tag <value>]",
        "[--filters <value>]",
        "--segment-types <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--video (structure)\n\nVideo file stored in an Amazon S3 bucket. Amazon Rekognition video start operations such as StartLabelDetection use Video to specify a video for analysis. The supported file formats are .mp4, .mov and .avi.\n\nS3Object -> (structure)\n\nThe Amazon S3 bucket name and file name for the video.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nS3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--client-request-token (string)\n\nIdempotent token used to identify the start request. If you use the same token with multiple StartSegmentDetection requests, the same JobId is returned. Use ClientRequestToken to prevent the same job from being accidently started more than once.\n\n--notification-channel (structure)\n\nThe ARN of the Amazon SNS topic to which you want Amazon Rekognition Video to publish the completion status of the segment detection operation. Note that the Amazon SNS topic must have a topic name that begins with AmazonRekognition if you are using the AmazonRekognitionServiceRole permissions policy to access the topic.\n\nSNSTopicArn -> (string)\n\nThe Amazon SNS topic to which Amazon Rekognition to posts the completion status.\n\nRoleArn -> (string)\n\nThe ARN of an IAM role that gives Amazon Rekognition publishing permissions to the Amazon SNS topic.\n\nShorthand Syntax:\n\nSNSTopicArn=string,RoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"SNSTopicArn\": \"string\",\n  \"RoleArn\": \"string\"\n}\n\n\n--job-tag (string)\n\nAn identifier you specify that’s returned in the completion notification that’s published to your Amazon Simple Notification Service topic. For example, you can use JobTag to group related jobs and identify them in the completion notification.\n\n--filters (structure)\n\nFilters for technical cue or shot detection.\n\nTechnicalCueFilter -> (structure)\n\nFilters that are specific to technical cues.\n\nMinSegmentConfidence -> (float)\n\nSpecifies the minimum confidence that Amazon Rekognition Video must have in order to return a detected segment. Confidence represents how certain Amazon Rekognition is that a segment is correctly identified. 0 is the lowest confidence. 100 is the highest confidence. Amazon Rekognition Video doesn’t return any segments with a confidence level lower than this specified value.\n\nIf you don’t specify MinSegmentConfidence , GetSegmentDetection returns segments with confidence values greater than or equal to 50 percent.\n\nBlackFrame -> (structure)\n\nA filter that allows you to control the black frame detection by specifying the black levels and pixel coverage of black pixels in a frame. Videos can come from multiple sources, formats, and time periods, with different standards and varying noise levels for black frames that need to be accounted for.\n\nMaxPixelThreshold -> (float)\n\nA threshold used to determine the maximum luminance value for a pixel to be considered black. In a full color range video, luminance values range from 0-255. A pixel value of 0 is pure black, and the most strict filter. The maximum black pixel value is computed as follows: max_black_pixel_value = minimum_luminance + MaxPixelThreshold *luminance_range.\n\nFor example, for a full range video with BlackPixelThreshold = 0.1, max_black_pixel_value is 0 + 0.1 * (255-0) = 25.5.\n\nThe default value of MaxPixelThreshold is 0.2, which maps to a max_black_pixel_value of 51 for a full range video. You can lower this threshold to be more strict on black levels.\n\nMinCoveragePercentage -> (float)\n\nThe minimum percentage of pixels in a frame that need to have a luminance below the max_black_pixel_value for a frame to be considered a black frame. Luminance is calculated using the BT.709 matrix.\n\nThe default value is 99, which means at least 99% of all pixels in the frame are black pixels as per the MaxPixelThreshold set. You can reduce this value to allow more noise on the black frame.\n\nShotFilter -> (structure)\n\nFilters that are specific to shot detections.\n\nMinSegmentConfidence -> (float)\n\nSpecifies the minimum confidence that Amazon Rekognition Video must have in order to return a detected segment. Confidence represents how certain Amazon Rekognition is that a segment is correctly identified. 0 is the lowest confidence. 100 is the highest confidence. Amazon Rekognition Video doesn’t return any segments with a confidence level lower than this specified value.\n\nIf you don’t specify MinSegmentConfidence , the GetSegmentDetection returns segments with confidence values greater than or equal to 50 percent.\n\nShorthand Syntax:\n\nTechnicalCueFilter={MinSegmentConfidence=float,BlackFrame={MaxPixelThreshold=float,MinCoveragePercentage=float}},ShotFilter={MinSegmentConfidence=float}\n\n\nJSON Syntax:\n\n{\n  \"TechnicalCueFilter\": {\n    \"MinSegmentConfidence\": float,\n    \"BlackFrame\": {\n      \"MaxPixelThreshold\": float,\n      \"MinCoveragePercentage\": float\n    }\n  },\n  \"ShotFilter\": {\n    \"MinSegmentConfidence\": float\n  }\n}\n\n\n--segment-types (list)\n\nAn array of segment types to detect in the video. Valid values are TECHNICAL_CUE and SHOT.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  TECHNICAL_CUE\n  SHOT\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nUnique identifier for the segment detection job. The JobId is returned from StartSegmentDetection ."
    },
    {
      "command_name": "start-stream-processor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/start-stream-processor.html",
      "command_description": "Description\n\nStarts processing a stream processor. You create a stream processor by calling CreateStreamProcessor . To tell StartStreamProcessor which stream processor to start, use the value of the Name field specified in the call to CreateStreamProcessor .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-stream-processor\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the stream processor to start processing.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo start a stream processor\n\nThe following start-stream-processor command starts the specified video stream processor.\n\naws rekognition start-stream-processor \\\n    --name my-stream-processor\n\n\nThis command produces no output.\n\nFor more information, see Working with Streaming Videos in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "start-text-detection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/start-text-detection.html",
      "command_description": "Description\n\nStarts asynchronous detection of text in a stored video.\n\nAmazon Rekognition Video can detect text in a video stored in an Amazon S3 bucket. Use Video to specify the bucket name and the filename of the video. StartTextDetection returns a job identifier (JobId ) which you use to get the results of the operation. When text detection is finished, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic that you specify in NotificationChannel .\n\nTo get the results of the text detection operation, first check that the status value published to the Amazon SNS topic is SUCCEEDED . if so, call GetTextDetection and pass the job identifier (JobId ) from the initial call to StartTextDetection .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-text-detection\n--video <value>\n[--client-request-token <value>]\n[--notification-channel <value>]\n[--job-tag <value>]\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--video <value>",
        "[--client-request-token <value>]",
        "[--notification-channel <value>]",
        "[--job-tag <value>]",
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--video (structure)\n\nVideo file stored in an Amazon S3 bucket. Amazon Rekognition video start operations such as StartLabelDetection use Video to specify a video for analysis. The supported file formats are .mp4, .mov and .avi.\n\nS3Object -> (structure)\n\nThe Amazon S3 bucket name and file name for the video.\n\nBucket -> (string)\n\nName of the S3 bucket.\n\nName -> (string)\n\nS3 object key name.\n\nVersion -> (string)\n\nIf the bucket is versioning enabled, you can specify the object version.\n\nShorthand Syntax:\n\nS3Object={Bucket=string,Name=string,Version=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Object\": {\n    \"Bucket\": \"string\",\n    \"Name\": \"string\",\n    \"Version\": \"string\"\n  }\n}\n\n\n--client-request-token (string)\n\nIdempotent token used to identify the start request. If you use the same token with multiple StartTextDetection requests, the same JobId is returned. Use ClientRequestToken to prevent the same job from being accidentaly started more than once.\n\n--notification-channel (structure)\n\nThe Amazon Simple Notification Service topic to which Amazon Rekognition publishes the completion status of a video analysis operation. For more information, see api-video . Note that the Amazon SNS topic must have a topic name that begins with AmazonRekognition if you are using the AmazonRekognitionServiceRole permissions policy to access the topic. For more information, see Giving access to multiple Amazon SNS topics .\n\nSNSTopicArn -> (string)\n\nThe Amazon SNS topic to which Amazon Rekognition to posts the completion status.\n\nRoleArn -> (string)\n\nThe ARN of an IAM role that gives Amazon Rekognition publishing permissions to the Amazon SNS topic.\n\nShorthand Syntax:\n\nSNSTopicArn=string,RoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"SNSTopicArn\": \"string\",\n  \"RoleArn\": \"string\"\n}\n\n\n--job-tag (string)\n\nAn identifier returned in the completion status published by your Amazon Simple Notification Service topic. For example, you can use JobTag to group related jobs and identify them in the completion notification.\n\n--filters (structure)\n\nOptional parameters that let you set criteria the text must meet to be included in your response.\n\nWordFilter -> (structure)\n\nFilters focusing on qualities of the text, such as confidence or size.\n\nMinConfidence -> (float)\n\nSets the confidence of word detection. Words with detection confidence below this will be excluded from the result. Values should be between 50 and 100 as Text in Video will not return any result below 50.\n\nMinBoundingBoxHeight -> (float)\n\nSets the minimum height of the word bounding box. Words with bounding box heights lesser than this value will be excluded from the result. Value is relative to the video frame height.\n\nMinBoundingBoxWidth -> (float)\n\nSets the minimum width of the word bounding box. Words with bounding boxes widths lesser than this value will be excluded from the result. Value is relative to the video frame width.\n\nRegionsOfInterest -> (list)\n\nFilter focusing on a certain area of the frame. Uses a BoundingBox object to set the region of the screen.\n\n(structure)\n\nSpecifies a location within the frame that Rekognition checks for text. Uses a BoundingBox object to set a region of the screen.\n\nA word is included in the region if the word is more than half in that region. If there is more than one region, the word will be compared with all regions of the screen. Any word more than half in a region is kept in the results.\n\nBoundingBox -> (structure)\n\nThe box representing a region of interest on screen.\n\nWidth -> (float)\n\nWidth of the bounding box as a ratio of the overall image width.\n\nHeight -> (float)\n\nHeight of the bounding box as a ratio of the overall image height.\n\nLeft -> (float)\n\nLeft coordinate of the bounding box as a ratio of overall image width.\n\nTop -> (float)\n\nTop coordinate of the bounding box as a ratio of overall image height.\n\nJSON Syntax:\n\n{\n  \"WordFilter\": {\n    \"MinConfidence\": float,\n    \"MinBoundingBoxHeight\": float,\n    \"MinBoundingBoxWidth\": float\n  },\n  \"RegionsOfInterest\": [\n    {\n      \"BoundingBox\": {\n        \"Width\": float,\n        \"Height\": float,\n        \"Left\": float,\n        \"Top\": float\n      }\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nIdentifier for the text detection job. Use JobId to identify the job in a subsequent call to GetTextDetection ."
    },
    {
      "command_name": "stop-project-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/stop-project-version.html",
      "command_description": "Description\n\nStops a running model. The operation might take a while to complete. To check the current status, call DescribeProjectVersions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-project-version\n--project-version-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-version-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-version-arn (string)\n\nThe Amazon Resource Name (ARN) of the model version that you want to delete.\n\nThis operation requires permissions to perform the rekognition:StopProjectVersion action.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatus -> (string)\n\nThe current status of the stop operation."
    },
    {
      "command_name": "stop-stream-processor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/stop-stream-processor.html",
      "command_description": "Description\n\nStops a running stream processor that was created by CreateStreamProcessor .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-stream-processor\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of a stream processor created by CreateStreamProcessor .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo stop a running stream processor\n\nThe following stop-stream-processor command stops the specified running stream processor.\n\naws rekognition stop-stream-processor \\\n    --name my-stream-processor\n\n\nThis command produces no output.\n\nFor more information, see Working with Streaming Videos in the Amazon Rekognition Developer Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/tag-resource.html",
      "command_description": "Description\n\nAdds one or more key-value tags to an Amazon Rekognition collection, stream processor, or Custom Labels model. For more information, see Tagging AWS Resources .\n\nThis operation requires permissions to perform the rekognition:TagResource action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nAmazon Resource Name (ARN) of the model, collection, or stream processor that you want to assign the tags to.\n\n--tags (map)\n\nThe key-value tags to assign to the resource.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/untag-resource.html",
      "command_description": "Description\n\nRemoves one or more tags from an Amazon Rekognition collection, stream processor, or Custom Labels model.\n\nThis operation requires permissions to perform the rekognition:UntagResource action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nAmazon Resource Name (ARN) of the model, collection, or stream processor that you want to remove the tags from.\n\n--tag-keys (list)\n\nA list of the tags that you want to remove.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rekognition/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description\n\nThis is the Amazon Rekognition API reference."
}