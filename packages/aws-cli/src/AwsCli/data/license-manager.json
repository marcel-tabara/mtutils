{
  "service_name": "license-manager",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/index.html",
  "service_commands": [
    {
      "command_name": "accept-grant",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/accept-grant.html",
      "command_description": "Description\n\nAccepts the specified grant.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  accept-grant\n--grant-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--grant-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--grant-arn (string)\n\nAmazon Resource Name (ARN) of the grant.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGrantArn -> (string)\n\nGrant ARN.\n\nStatus -> (string)\n\nGrant status.\n\nVersion -> (string)\n\nGrant version."
    },
    {
      "command_name": "check-in-license",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/check-in-license.html",
      "command_description": "Description\n\nChecks in the specified license. Check in a license when it is no longer in use.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  check-in-license\n--license-consumption-token <value>\n[--beneficiary <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-consumption-token <value>",
        "[--beneficiary <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-consumption-token (string)\n\nLicense consumption token.\n\n--beneficiary (string)\n\nLicense beneficiary.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "checkout-borrow-license",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/checkout-borrow-license.html",
      "command_description": "Description\n\nChecks out the specified license for offline use.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  checkout-borrow-license\n--license-arn <value>\n--entitlements <value>\n--digital-signature-method <value>\n[--node-id <value>]\n[--checkout-metadata <value>]\n--client-token <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-arn <value>",
        "--entitlements <value>",
        "--digital-signature-method <value>",
        "[--node-id <value>]",
        "[--checkout-metadata <value>]",
        "--client-token <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-arn (string)\n\nAmazon Resource Name (ARN) of the license. The license must use the borrow consumption configuration.\n\n--entitlements (list)\n\nLicense entitlements. Partial checkouts are not supported.\n\n(structure)\n\nData associated with an entitlement resource.\n\nName -> (string)\n\nEntitlement data name.\n\nValue -> (string)\n\nEntitlement data value.\n\nUnit -> (string)\n\nEntitlement data unit.\n\nShorthand Syntax:\n\nName=string,Value=string,Unit=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Value\": \"string\",\n    \"Unit\": \"Count\"|\"None\"|\"Seconds\"|\"Microseconds\"|\"Milliseconds\"|\"Bytes\"|\"Kilobytes\"|\"Megabytes\"|\"Gigabytes\"|\"Terabytes\"|\"Bits\"|\"Kilobits\"|\"Megabits\"|\"Gigabits\"|\"Terabits\"|\"Percent\"|\"Bytes/Second\"|\"Kilobytes/Second\"|\"Megabytes/Second\"|\"Gigabytes/Second\"|\"Terabytes/Second\"|\"Bits/Second\"|\"Kilobits/Second\"|\"Megabits/Second\"|\"Gigabits/Second\"|\"Terabits/Second\"|\"Count/Second\"\n  }\n  ...\n]\n\n\n--digital-signature-method (string)\n\nDigital signature method. The possible value is JSON Web Signature (JWS) algorithm PS384. For more information, see RFC 7518 Digital Signature with RSASSA-PSS .\n\nPossible values:\n\nJWT_PS384\n\n--node-id (string)\n\nNode ID.\n\n--checkout-metadata (list)\n\nInformation about constraints.\n\n(structure)\n\nDescribes key/value pairs.\n\nName -> (string)\n\nThe key name.\n\nValue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nName=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseArn -> (string)\n\nAmazon Resource Name (ARN) of the license.\n\nLicenseConsumptionToken -> (string)\n\nLicense consumption token.\n\nEntitlementsAllowed -> (list)\n\nAllowed license entitlements.\n\n(structure)\n\nData associated with an entitlement resource.\n\nName -> (string)\n\nEntitlement data name.\n\nValue -> (string)\n\nEntitlement data value.\n\nUnit -> (string)\n\nEntitlement data unit.\n\nNodeId -> (string)\n\nNode ID.\n\nSignedToken -> (string)\n\nSigned token.\n\nIssuedAt -> (string)\n\nDate and time at which the license checkout is issued.\n\nExpiration -> (string)\n\nDate and time at which the license checkout expires.\n\nCheckoutMetadata -> (list)\n\nInformation about constraints.\n\n(structure)\n\nDescribes key/value pairs.\n\nName -> (string)\n\nThe key name.\n\nValue -> (string)\n\nThe value."
    },
    {
      "command_name": "checkout-license",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/checkout-license.html",
      "command_description": "Description\n\nChecks out the specified license.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  checkout-license\n--product-sku <value>\n--checkout-type <value>\n--key-fingerprint <value>\n--entitlements <value>\n--client-token <value>\n[--beneficiary <value>]\n[--node-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--product-sku <value>",
        "--checkout-type <value>",
        "--key-fingerprint <value>",
        "--entitlements <value>",
        "--client-token <value>",
        "[--beneficiary <value>]",
        "[--node-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--product-sku (string)\n\nProduct SKU.\n\n--checkout-type (string)\n\nCheckout type.\n\nPossible values:\n\nPROVISIONAL\n\nPERPETUAL\n\n--key-fingerprint (string)\n\nKey fingerprint identifying the license.\n\n--entitlements (list)\n\nLicense entitlements.\n\n(structure)\n\nData associated with an entitlement resource.\n\nName -> (string)\n\nEntitlement data name.\n\nValue -> (string)\n\nEntitlement data value.\n\nUnit -> (string)\n\nEntitlement data unit.\n\nShorthand Syntax:\n\nName=string,Value=string,Unit=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Value\": \"string\",\n    \"Unit\": \"Count\"|\"None\"|\"Seconds\"|\"Microseconds\"|\"Milliseconds\"|\"Bytes\"|\"Kilobytes\"|\"Megabytes\"|\"Gigabytes\"|\"Terabytes\"|\"Bits\"|\"Kilobits\"|\"Megabits\"|\"Gigabits\"|\"Terabits\"|\"Percent\"|\"Bytes/Second\"|\"Kilobytes/Second\"|\"Megabytes/Second\"|\"Gigabytes/Second\"|\"Terabytes/Second\"|\"Bits/Second\"|\"Kilobits/Second\"|\"Megabits/Second\"|\"Gigabits/Second\"|\"Terabits/Second\"|\"Count/Second\"\n  }\n  ...\n]\n\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--beneficiary (string)\n\nLicense beneficiary.\n\n--node-id (string)\n\nNode ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCheckoutType -> (string)\n\nCheckout type.\n\nLicenseConsumptionToken -> (string)\n\nLicense consumption token.\n\nEntitlementsAllowed -> (list)\n\nAllowed license entitlements.\n\n(structure)\n\nData associated with an entitlement resource.\n\nName -> (string)\n\nEntitlement data name.\n\nValue -> (string)\n\nEntitlement data value.\n\nUnit -> (string)\n\nEntitlement data unit.\n\nSignedToken -> (string)\n\nSigned token.\n\nNodeId -> (string)\n\nNode ID.\n\nIssuedAt -> (string)\n\nDate and time at which the license checkout is issued.\n\nExpiration -> (string)\n\nDate and time at which the license checkout expires.\n\nLicenseArn -> (string)\n\nAmazon Resource Name (ARN) of the checkout license."
    },
    {
      "command_name": "create-grant",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/create-grant.html",
      "command_description": "Description\n\nCreates a grant for the specified license. A grant shares the use of license entitlements with specific Amazon Web Services accounts.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-grant\n--client-token <value>\n--grant-name <value>\n--license-arn <value>\n--principals <value>\n--home-region <value>\n--allowed-operations <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--client-token <value>",
        "--grant-name <value>",
        "--license-arn <value>",
        "--principals <value>",
        "--home-region <value>",
        "--allowed-operations <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--grant-name (string)\n\nGrant name.\n\n--license-arn (string)\n\nAmazon Resource Name (ARN) of the license.\n\n--principals (list)\n\nThe grant principals.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--home-region (string)\n\nHome Region of the grant.\n\n--allowed-operations (list)\n\nAllowed operations for the grant.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  CreateGrant\n  CheckoutLicense\n  CheckoutBorrowLicense\n  CheckInLicense\n  ExtendConsumptionLicense\n  ListPurchasedLicenses\n  CreateToken\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGrantArn -> (string)\n\nGrant ARN.\n\nStatus -> (string)\n\nGrant status.\n\nVersion -> (string)\n\nGrant version."
    },
    {
      "command_name": "create-grant-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/create-grant-version.html",
      "command_description": "Description\n\nCreates a new version of the specified grant.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-grant-version\n--client-token <value>\n--grant-arn <value>\n[--grant-name <value>]\n[--allowed-operations <value>]\n[--status <value>]\n[--status-reason <value>]\n[--source-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--client-token <value>",
        "--grant-arn <value>",
        "[--grant-name <value>]",
        "[--allowed-operations <value>]",
        "[--status <value>]",
        "[--status-reason <value>]",
        "[--source-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--grant-arn (string)\n\nAmazon Resource Name (ARN) of the grant.\n\n--grant-name (string)\n\nGrant name.\n\n--allowed-operations (list)\n\nAllowed operations for the grant.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  CreateGrant\n  CheckoutLicense\n  CheckoutBorrowLicense\n  CheckInLicense\n  ExtendConsumptionLicense\n  ListPurchasedLicenses\n  CreateToken\n\n\n--status (string)\n\nGrant status.\n\nPossible values:\n\nPENDING_WORKFLOW\n\nPENDING_ACCEPT\n\nREJECTED\n\nACTIVE\n\nFAILED_WORKFLOW\n\nDELETED\n\nPENDING_DELETE\n\nDISABLED\n\nWORKFLOW_COMPLETED\n\n--status-reason (string)\n\nGrant status reason.\n\n--source-version (string)\n\nCurrent version of the grant.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGrantArn -> (string)\n\nGrant ARN.\n\nStatus -> (string)\n\nGrant status.\n\nVersion -> (string)\n\nNew version of the grant."
    },
    {
      "command_name": "create-license",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/create-license.html",
      "command_description": "Description\n\nCreates a license.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-license\n--license-name <value>\n--product-name <value>\n--product-sku <value>\n--issuer <value>\n--home-region <value>\n--validity <value>\n--entitlements <value>\n--beneficiary <value>\n--consumption-configuration <value>\n[--license-metadata <value>]\n--client-token <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-name <value>",
        "--product-name <value>",
        "--product-sku <value>",
        "--issuer <value>",
        "--home-region <value>",
        "--validity <value>",
        "--entitlements <value>",
        "--beneficiary <value>",
        "--consumption-configuration <value>",
        "[--license-metadata <value>]",
        "--client-token <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-name (string)\n\nLicense name.\n\n--product-name (string)\n\nProduct name.\n\n--product-sku (string)\n\nProduct SKU.\n\n--issuer (structure)\n\nLicense issuer.\n\nName -> (string)\n\nIssuer name.\n\nSignKey -> (string)\n\nAsymmetric KMS key from Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.\n\nShorthand Syntax:\n\nName=string,SignKey=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"SignKey\": \"string\"\n}\n\n\n--home-region (string)\n\nHome Region for the license.\n\n--validity (structure)\n\nDate and time range during which the license is valid, in ISO8601-UTC format.\n\nBegin -> (string)\n\nStart of the time range.\n\nEnd -> (string)\n\nEnd of the time range.\n\nShorthand Syntax:\n\nBegin=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Begin\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--entitlements (list)\n\nLicense entitlements.\n\n(structure)\n\nDescribes a resource entitled for use with a license.\n\nName -> (string)\n\nEntitlement name.\n\nValue -> (string)\n\nEntitlement resource. Use only if the unit is None.\n\nMaxCount -> (long)\n\nMaximum entitlement count. Use if the unit is not None.\n\nOverage -> (boolean)\n\nIndicates whether overages are allowed.\n\nUnit -> (string)\n\nEntitlement unit.\n\nAllowCheckIn -> (boolean)\n\nIndicates whether check-ins are allowed.\n\nShorthand Syntax:\n\nName=string,Value=string,MaxCount=long,Overage=boolean,Unit=string,AllowCheckIn=boolean ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Value\": \"string\",\n    \"MaxCount\": long,\n    \"Overage\": true|false,\n    \"Unit\": \"Count\"|\"None\"|\"Seconds\"|\"Microseconds\"|\"Milliseconds\"|\"Bytes\"|\"Kilobytes\"|\"Megabytes\"|\"Gigabytes\"|\"Terabytes\"|\"Bits\"|\"Kilobits\"|\"Megabits\"|\"Gigabits\"|\"Terabits\"|\"Percent\"|\"Bytes/Second\"|\"Kilobytes/Second\"|\"Megabytes/Second\"|\"Gigabytes/Second\"|\"Terabytes/Second\"|\"Bits/Second\"|\"Kilobits/Second\"|\"Megabits/Second\"|\"Gigabits/Second\"|\"Terabits/Second\"|\"Count/Second\",\n    \"AllowCheckIn\": true|false\n  }\n  ...\n]\n\n\n--beneficiary (string)\n\nLicense beneficiary.\n\n--consumption-configuration (structure)\n\nConfiguration for consumption of the license. Choose a provisional configuration for workloads running with continuous connectivity. Choose a borrow configuration for workloads with offline usage.\n\nRenewType -> (string)\n\nRenewal frequency.\n\nProvisionalConfiguration -> (structure)\n\nDetails about a provisional configuration.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the provisional configuration, in minutes.\n\nBorrowConfiguration -> (structure)\n\nDetails about a borrow configuration.\n\nAllowEarlyCheckIn -> (boolean)\n\nIndicates whether early check-ins are allowed.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the borrow configuration, in minutes.\n\nShorthand Syntax:\n\nRenewType=string,ProvisionalConfiguration={MaxTimeToLiveInMinutes=integer},BorrowConfiguration={AllowEarlyCheckIn=boolean,MaxTimeToLiveInMinutes=integer}\n\n\nJSON Syntax:\n\n{\n  \"RenewType\": \"None\"|\"Weekly\"|\"Monthly\",\n  \"ProvisionalConfiguration\": {\n    \"MaxTimeToLiveInMinutes\": integer\n  },\n  \"BorrowConfiguration\": {\n    \"AllowEarlyCheckIn\": true|false,\n    \"MaxTimeToLiveInMinutes\": integer\n  }\n}\n\n\n--license-metadata (list)\n\nInformation about the license.\n\n(structure)\n\nDescribes key/value pairs.\n\nName -> (string)\n\nThe key name.\n\nValue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nName=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseArn -> (string)\n\nAmazon Resource Name (ARN) of the license.\n\nStatus -> (string)\n\nLicense status.\n\nVersion -> (string)\n\nLicense version."
    },
    {
      "command_name": "create-license-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/create-license-configuration.html",
      "command_description": "Description\n\nCreates a license configuration.\n\nA license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity to host (how long a license must be associated with a host), and the number of licenses purchased and used.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-license-configuration\n--name <value>\n[--description <value>]\n--license-counting-type <value>\n[--license-count <value>]\n[--license-count-hard-limit | --no-license-count-hard-limit]\n[--license-rules <value>]\n[--tags <value>]\n[--disassociate-when-not-found | --no-disassociate-when-not-found]\n[--product-information-list <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--license-counting-type <value>",
        "[--license-count <value>]",
        "[--license-count-hard-limit | --no-license-count-hard-limit]",
        "[--license-rules <value>]",
        "[--tags <value>]",
        "[--disassociate-when-not-found | --no-disassociate-when-not-found]",
        "[--product-information-list <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the license configuration.\n\n--description (string)\n\nDescription of the license configuration.\n\n--license-counting-type (string)\n\nDimension used to track the license inventory.\n\nPossible values:\n\nvCPU\n\nInstance\n\nCore\n\nSocket\n\n--license-count (long)\n\nNumber of licenses managed by the license configuration.\n\n--license-count-hard-limit | --no-license-count-hard-limit (boolean)\n\nIndicates whether hard or soft license enforcement is used. Exceeding a hard limit blocks the launch of new instances.\n\n--license-rules (list)\n\nLicense rules. The syntax is #name=value (for example, #allowedTenancy=EC2-DedicatedHost). The available rules vary by dimension, as follows.\n\nCores dimension: allowedTenancy | licenseAffinityToHost | maximumCores | minimumCores\n\nInstances dimension: allowedTenancy | maximumCores | minimumCores | maximumSockets | minimumSockets | maximumVcpus | minimumVcpus\n\nSockets dimension: allowedTenancy | licenseAffinityToHost | maximumSockets | minimumSockets\n\nvCPUs dimension: allowedTenancy | honorVcpuOptimization | maximumVcpus | minimumVcpus\n\nThe unit for licenseAffinityToHost is days and the range is 1 to 180. The possible values for allowedTenancy are EC2-Default , EC2-DedicatedHost , and EC2-DedicatedInstance . The possible values for honorVcpuOptimization are True and False .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (list)\n\nTags to add to the license configuration.\n\n(structure)\n\nDetails about a tag for a license configuration.\n\nKey -> (string)\n\nTag key.\n\nValue -> (string)\n\nTag value.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--disassociate-when-not-found | --no-disassociate-when-not-found (boolean)\n\nWhen true, disassociates a resource when software is uninstalled.\n\n--product-information-list (list)\n\nProduct information.\n\n(structure)\n\nDescribes product information for a license configuration.\n\nResourceType -> (string)\n\nResource type. The possible values are SSM_MANAGED | RDS .\n\nProductInformationFilterList -> (list)\n\nA Product information filter consists of a ProductInformationFilterComparator which is a logical operator, a ProductInformationFilterName which specifies the type of filter being declared, and a ProductInformationFilterValue that specifies the value to filter on.\n\nAccepted values for ProductInformationFilterName are listed here along with descriptions and valid options for ProductInformationFilterComparator .\n\nThe following filters and are supported when the resource type is SSM_MANAGED :\n\nApplication Name - The name of the application. Logical operator is EQUALS .\n\nApplication Publisher - The publisher of the application. Logical operator is EQUALS .\n\nApplication Version - The version of the application. Logical operator is EQUALS .\n\nPlatform Name - The name of the platform. Logical operator is EQUALS .\n\nPlatform Type - The platform type. Logical operator is EQUALS .\n\nTag:key - The key of a tag attached to an Amazon Web Services resource you wish to exclude from automated discovery. Logical operator is NOT_EQUALS . The key for your tag must be appended to Tag: following the example: Tag:name-of-your-key . ProductInformationFilterValue is optional if you are not using values for the key.\n\nAccountId - The 12-digit ID of an Amazon Web Services account you wish to exclude from automated discovery. Logical operator is NOT_EQUALS .\n\nLicense Included - The type of license included. Logical operators are EQUALS and NOT_EQUALS . Possible values are: sql-server-enterprise | sql-server-standard | sql-server-web | windows-server-datacenter .\n\nThe following filters and logical operators are supported when the resource type is RDS :\n\nEngine Edition - The edition of the database engine. Logical operator is EQUALS . Possible values are: oracle-ee | oracle-se | oracle-se1 | oracle-se2 .\n\nLicense Pack - The license pack. Logical operator is EQUALS . Possible values are: data guard | diagnostic pack sqlt | tuning pack sqlt | ols | olap .\n\n(structure)\n\nDescribes product information filters.\n\nProductInformationFilterName -> (string)\n\nFilter name.\n\nProductInformationFilterValue -> (list)\n\nFilter value.\n\n(string)\n\nProductInformationFilterComparator -> (string)\n\nLogical operator.\n\nJSON Syntax:\n\n[\n  {\n    \"ResourceType\": \"string\",\n    \"ProductInformationFilterList\": [\n      {\n        \"ProductInformationFilterName\": \"string\",\n        \"ProductInformationFilterValue\": [\"string\", ...],\n        \"ProductInformationFilterComparator\": \"string\"\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseConfigurationArn -> (string)\n\nAmazon Resource Name (ARN) of the license configuration.",
      "command_examples": "Examples\n\nExample 1: To create a license configuration\n\nThe following create-license-configuration example creates a license configuration with a hard limit of 10 cores.\n\naws license-manager create-license-configuration --name my-license-configuration \\\n    --license-counting-type Core \\\n    --license-count 10 \\\n    --license-count-hard-limit\n\n\nOutput:\n\n{\n  \"LicenseConfigurationArn\": \"arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-6eb6586f508a786a2ba41EXAMPLE1111\"\n}\n\n\nExample 2: To create a license configuration\n\nThe following create-license-configuration example creates a license configuration with a soft limit of 100 vCPUs. It uses a rule to enable vCPU optimization.\n\naws license-manager create-license-configuration --name my-license-configuration\n    --license-counting-type vCPU \\\n    --license-count 100 \\\n    --license-rules \"#honorVcpuOptimization=true\"\n\n\nOutput:\n\n{\n  \"LicenseConfigurationArn\": \"arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-6eb6586f508a786a2ba41EXAMPLE2222\"\n}\n"
    },
    {
      "command_name": "create-license-conversion-task-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/create-license-conversion-task-for-resource.html",
      "command_description": "Description\n\nCreates a new license conversion task.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-license-conversion-task-for-resource\n--resource-arn <value>\n--source-license-context <value>\n--destination-license-context <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--source-license-context <value>",
        "--destination-license-context <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nAmazon Resource Name (ARN) of the resource you are converting the license type for.\n\n--source-license-context (structure)\n\nInformation that identifies the license type you are converting from. For the structure of the source license, see Convert a license type using the AWS CLI in the License Manager User Guide .\n\nUsageOperation -> (string)\n\nThe Usage operation value that corresponds to the license type you are converting your resource from. For more information about which platforms correspond to which usage operation values see Sample data: usage operation by platform\n\nShorthand Syntax:\n\nUsageOperation=string\n\n\nJSON Syntax:\n\n{\n  \"UsageOperation\": \"string\"\n}\n\n\n--destination-license-context (structure)\n\nInformation that identifies the license type you are converting to. For the structure of the destination license, see Convert a license type using the AWS CLI in the License Manager User Guide .\n\nUsageOperation -> (string)\n\nThe Usage operation value that corresponds to the license type you are converting your resource from. For more information about which platforms correspond to which usage operation values see Sample data: usage operation by platform\n\nShorthand Syntax:\n\nUsageOperation=string\n\n\nJSON Syntax:\n\n{\n  \"UsageOperation\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseConversionTaskId -> (string)\n\nThe ID of the created license type conversion task."
    },
    {
      "command_name": "create-license-manager-report-generator",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/create-license-manager-report-generator.html",
      "command_description": "Description\n\nCreates a report generator.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-license-manager-report-generator\n--report-generator-name <value>\n--type <value>\n--report-context <value>\n--report-frequency <value>\n--client-token <value>\n[--description <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--report-generator-name <value>",
        "--type <value>",
        "--report-context <value>",
        "--report-frequency <value>",
        "--client-token <value>",
        "[--description <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--report-generator-name (string)\n\nName of the report generator.\n\n--type (list)\n\nType of reports to generate. The following report types an be generated:\n\nLicense configuration report - Reports the number and details of consumed licenses for a license configuration.\n\nResource report - Reports the tracked licenses and resource consumption for a license configuration.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  LicenseConfigurationSummaryReport\n  LicenseConfigurationUsageReport\n\n\n--report-context (structure)\n\nDefines the type of license configuration the report generator tracks.\n\nlicenseConfigurationArns -> (list)\n\nAmazon Resource Name (ARN) of the license configuration that this generator reports on.\n\n(string)\n\nShorthand Syntax:\n\nlicenseConfigurationArns=string,string\n\n\nJSON Syntax:\n\n{\n  \"licenseConfigurationArns\": [\"string\", ...]\n}\n\n\n--report-frequency (structure)\n\nFrequency by which reports are generated. Reports can be generated daily, monthly, or weekly.\n\nvalue -> (integer)\n\nNumber of times within the frequency period that a report is generated. The only supported value is 1 .\n\nperiod -> (string)\n\nTime period between each report. The period can be daily, weekly, or monthly.\n\nShorthand Syntax:\n\nvalue=integer,period=string\n\n\nJSON Syntax:\n\n{\n  \"value\": integer,\n  \"period\": \"DAY\"|\"WEEK\"|\"MONTH\"\n}\n\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--description (string)\n\nDescription of the report generator.\n\n--tags (list)\n\nTags to add to the report generator.\n\n(structure)\n\nDetails about a tag for a license configuration.\n\nKey -> (string)\n\nTag key.\n\nValue -> (string)\n\nTag value.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseManagerReportGeneratorArn -> (string)\n\nThe Amazon Resource Name (ARN) of the new report generator."
    },
    {
      "command_name": "create-license-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/create-license-version.html",
      "command_description": "Description\n\nCreates a new version of the specified license.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-license-version\n--license-arn <value>\n--license-name <value>\n--product-name <value>\n--issuer <value>\n--home-region <value>\n--validity <value>\n[--license-metadata <value>]\n--entitlements <value>\n--consumption-configuration <value>\n--status <value>\n--client-token <value>\n[--source-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-arn <value>",
        "--license-name <value>",
        "--product-name <value>",
        "--issuer <value>",
        "--home-region <value>",
        "--validity <value>",
        "[--license-metadata <value>]",
        "--entitlements <value>",
        "--consumption-configuration <value>",
        "--status <value>",
        "--client-token <value>",
        "[--source-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-arn (string)\n\nAmazon Resource Name (ARN) of the license.\n\n--license-name (string)\n\nLicense name.\n\n--product-name (string)\n\nProduct name.\n\n--issuer (structure)\n\nLicense issuer.\n\nName -> (string)\n\nIssuer name.\n\nSignKey -> (string)\n\nAsymmetric KMS key from Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.\n\nShorthand Syntax:\n\nName=string,SignKey=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"SignKey\": \"string\"\n}\n\n\n--home-region (string)\n\nHome Region of the license.\n\n--validity (structure)\n\nDate and time range during which the license is valid, in ISO8601-UTC format.\n\nBegin -> (string)\n\nStart of the time range.\n\nEnd -> (string)\n\nEnd of the time range.\n\nShorthand Syntax:\n\nBegin=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Begin\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--license-metadata (list)\n\nInformation about the license.\n\n(structure)\n\nDescribes key/value pairs.\n\nName -> (string)\n\nThe key name.\n\nValue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nName=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--entitlements (list)\n\nLicense entitlements.\n\n(structure)\n\nDescribes a resource entitled for use with a license.\n\nName -> (string)\n\nEntitlement name.\n\nValue -> (string)\n\nEntitlement resource. Use only if the unit is None.\n\nMaxCount -> (long)\n\nMaximum entitlement count. Use if the unit is not None.\n\nOverage -> (boolean)\n\nIndicates whether overages are allowed.\n\nUnit -> (string)\n\nEntitlement unit.\n\nAllowCheckIn -> (boolean)\n\nIndicates whether check-ins are allowed.\n\nShorthand Syntax:\n\nName=string,Value=string,MaxCount=long,Overage=boolean,Unit=string,AllowCheckIn=boolean ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Value\": \"string\",\n    \"MaxCount\": long,\n    \"Overage\": true|false,\n    \"Unit\": \"Count\"|\"None\"|\"Seconds\"|\"Microseconds\"|\"Milliseconds\"|\"Bytes\"|\"Kilobytes\"|\"Megabytes\"|\"Gigabytes\"|\"Terabytes\"|\"Bits\"|\"Kilobits\"|\"Megabits\"|\"Gigabits\"|\"Terabits\"|\"Percent\"|\"Bytes/Second\"|\"Kilobytes/Second\"|\"Megabytes/Second\"|\"Gigabytes/Second\"|\"Terabytes/Second\"|\"Bits/Second\"|\"Kilobits/Second\"|\"Megabits/Second\"|\"Gigabits/Second\"|\"Terabits/Second\"|\"Count/Second\",\n    \"AllowCheckIn\": true|false\n  }\n  ...\n]\n\n\n--consumption-configuration (structure)\n\nConfiguration for consumption of the license. Choose a provisional configuration for workloads running with continuous connectivity. Choose a borrow configuration for workloads with offline usage.\n\nRenewType -> (string)\n\nRenewal frequency.\n\nProvisionalConfiguration -> (structure)\n\nDetails about a provisional configuration.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the provisional configuration, in minutes.\n\nBorrowConfiguration -> (structure)\n\nDetails about a borrow configuration.\n\nAllowEarlyCheckIn -> (boolean)\n\nIndicates whether early check-ins are allowed.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the borrow configuration, in minutes.\n\nShorthand Syntax:\n\nRenewType=string,ProvisionalConfiguration={MaxTimeToLiveInMinutes=integer},BorrowConfiguration={AllowEarlyCheckIn=boolean,MaxTimeToLiveInMinutes=integer}\n\n\nJSON Syntax:\n\n{\n  \"RenewType\": \"None\"|\"Weekly\"|\"Monthly\",\n  \"ProvisionalConfiguration\": {\n    \"MaxTimeToLiveInMinutes\": integer\n  },\n  \"BorrowConfiguration\": {\n    \"AllowEarlyCheckIn\": true|false,\n    \"MaxTimeToLiveInMinutes\": integer\n  }\n}\n\n\n--status (string)\n\nLicense status.\n\nPossible values:\n\nAVAILABLE\n\nPENDING_AVAILABLE\n\nDEACTIVATED\n\nSUSPENDED\n\nEXPIRED\n\nPENDING_DELETE\n\nDELETED\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--source-version (string)\n\nCurrent version of the license.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseArn -> (string)\n\nLicense ARN.\n\nVersion -> (string)\n\nNew version of the license.\n\nStatus -> (string)\n\nLicense status."
    },
    {
      "command_name": "create-token",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/create-token.html",
      "command_description": "Description\n\nCreates a long-lived token.\n\nA refresh token is a JWT token used to get an access token. With an access token, you can call AssumeRoleWithWebIdentity to get role credentials that you can use to call License Manager to manage the specified license.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-token\n--license-arn <value>\n[--role-arns <value>]\n[--expiration-in-days <value>]\n[--token-properties <value>]\n--client-token <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-arn <value>",
        "[--role-arns <value>]",
        "[--expiration-in-days <value>]",
        "[--token-properties <value>]",
        "--client-token <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-arn (string)\n\nAmazon Resource Name (ARN) of the license. The ARN is mapped to the aud claim of the JWT token.\n\n--role-arns (list)\n\nAmazon Resource Name (ARN) of the IAM roles to embed in the token. License Manager does not check whether the roles are in use.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--expiration-in-days (integer)\n\nToken expiration, in days, counted from token creation. The default is 365 days.\n\n--token-properties (list)\n\nData specified by the caller to be included in the JWT token. The data is mapped to the amr claim of the JWT token.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--client-token (string)\n\nIdempotency token, valid for 10 minutes.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTokenId -> (string)\n\nToken ID.\n\nTokenType -> (string)\n\nToken type.\n\nToken -> (string)\n\nRefresh token, encoded as a JWT token."
    },
    {
      "command_name": "delete-grant",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/delete-grant.html",
      "command_description": "Description\n\nDeletes the specified grant.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-grant\n--grant-arn <value>\n[--status-reason <value>]\n--grant-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--grant-arn <value>",
        "[--status-reason <value>]",
        "--grant-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--grant-arn (string)\n\nAmazon Resource Name (ARN) of the grant.\n\n--status-reason (string)\n\nThe Status reason for the delete request.\n\n--grant-version (string)\n\nCurrent version of the grant.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGrantArn -> (string)\n\nGrant ARN.\n\nStatus -> (string)\n\nGrant status.\n\nVersion -> (string)\n\nGrant version."
    },
    {
      "command_name": "delete-license",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/delete-license.html",
      "command_description": "Description\n\nDeletes the specified license.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-license\n--license-arn <value>\n--source-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-arn <value>",
        "--source-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-arn (string)\n\nAmazon Resource Name (ARN) of the license.\n\n--source-version (string)\n\nCurrent version of the license.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatus -> (string)\n\nLicense status.\n\nDeletionDate -> (string)\n\nDate when the license is deleted."
    },
    {
      "command_name": "delete-license-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/delete-license-configuration.html",
      "command_description": "Description\n\nDeletes the specified license configuration.\n\nYou cannot delete a license configuration that is in use.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-license-configuration\n--license-configuration-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-configuration-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-configuration-arn (string)\n\nID of the license configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a license configuration\n\nThe following delete-license-configuration example deletes the specified license configuration.\n\naws license-manager delete-license-configuration \\\n    --license-configuration-arn arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-6eb6586f508a786a2ba4f56c1EXAMPLE\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-license-manager-report-generator",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/delete-license-manager-report-generator.html",
      "command_description": "Description\n\nDeletes the specified report generator.\n\nThis action deletes the report generator, which stops it from generating future reports. The action cannot be reversed. It has no effect on the previous reports from this generator.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-license-manager-report-generator\n--license-manager-report-generator-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-manager-report-generator-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-manager-report-generator-arn (string)\n\nAmazon Resource Name (ARN) of the report generator to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-token",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/delete-token.html",
      "command_description": "Description\n\nDeletes the specified token. Must be called in the license home Region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-token\n--token-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--token-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--token-id (string)\n\nToken ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "extend-license-consumption",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/extend-license-consumption.html",
      "command_description": "Description\n\nExtends the expiration date for license consumption.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  extend-license-consumption\n--license-consumption-token <value>\n[--dry-run | --no-dry-run]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-consumption-token <value>",
        "[--dry-run | --no-dry-run]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-consumption-token (string)\n\nLicense consumption token.\n\n--dry-run | --no-dry-run (boolean)\n\nChecks whether you have the required permissions for the action, without actually making the request. Provides an error response if you do not have the required permissions.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseConsumptionToken -> (string)\n\nLicense consumption token.\n\nExpiration -> (string)\n\nDate and time at which the license consumption expires."
    },
    {
      "command_name": "get-access-token",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/get-access-token.html",
      "command_description": "Description\n\nGets a temporary access token to use with AssumeRoleWithWebIdentity. Access tokens are valid for one hour.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-access-token\n--token <value>\n[--token-properties <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--token <value>",
        "[--token-properties <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--token (string)\n\nRefresh token, encoded as a JWT token.\n\n--token-properties (list)\n\nToken properties to validate against those present in the JWT token.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccessToken -> (string)\n\nTemporary access token."
    },
    {
      "command_name": "get-grant",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/get-grant.html",
      "command_description": "Description\n\nGets detailed information about the specified grant.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-grant\n--grant-arn <value>\n[--grant-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--grant-arn <value>",
        "[--grant-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--grant-arn (string)\n\nAmazon Resource Name (ARN) of the grant.\n\n--grant-version (string)\n\nGrant version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGrant -> (structure)\n\nGrant details.\n\nGrantArn -> (string)\n\nAmazon Resource Name (ARN) of the grant.\n\nGrantName -> (string)\n\nGrant name.\n\nParentArn -> (string)\n\nParent ARN.\n\nLicenseArn -> (string)\n\nLicense ARN.\n\nGranteePrincipalArn -> (string)\n\nThe grantee principal ARN.\n\nHomeRegion -> (string)\n\nHome Region of the grant.\n\nGrantStatus -> (string)\n\nGrant status.\n\nStatusReason -> (string)\n\nGrant status reason.\n\nVersion -> (string)\n\nGrant version.\n\nGrantedOperations -> (list)\n\nGranted operations.\n\n(string)"
    },
    {
      "command_name": "get-license",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/get-license.html",
      "command_description": "Description\n\nGets detailed information about the specified license.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-license\n--license-arn <value>\n[--license-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-arn <value>",
        "[--license-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-arn (string)\n\nAmazon Resource Name (ARN) of the license.\n\n--license-version (string)\n\nLicense version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicense -> (structure)\n\nLicense details.\n\nLicenseArn -> (string)\n\nAmazon Resource Name (ARN) of the license.\n\nLicenseName -> (string)\n\nLicense name.\n\nProductName -> (string)\n\nProduct name.\n\nProductSKU -> (string)\n\nProduct SKU.\n\nIssuer -> (structure)\n\nLicense issuer.\n\nName -> (string)\n\nIssuer name.\n\nSignKey -> (string)\n\nAsymmetric KMS key from Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.\n\nKeyFingerprint -> (string)\n\nIssuer key fingerprint.\n\nHomeRegion -> (string)\n\nHome Region of the license.\n\nStatus -> (string)\n\nLicense status.\n\nValidity -> (structure)\n\nDate and time range during which the license is valid, in ISO8601-UTC format.\n\nBegin -> (string)\n\nStart of the time range.\n\nEnd -> (string)\n\nEnd of the time range.\n\nBeneficiary -> (string)\n\nLicense beneficiary.\n\nEntitlements -> (list)\n\nLicense entitlements.\n\n(structure)\n\nDescribes a resource entitled for use with a license.\n\nName -> (string)\n\nEntitlement name.\n\nValue -> (string)\n\nEntitlement resource. Use only if the unit is None.\n\nMaxCount -> (long)\n\nMaximum entitlement count. Use if the unit is not None.\n\nOverage -> (boolean)\n\nIndicates whether overages are allowed.\n\nUnit -> (string)\n\nEntitlement unit.\n\nAllowCheckIn -> (boolean)\n\nIndicates whether check-ins are allowed.\n\nConsumptionConfiguration -> (structure)\n\nConfiguration for consumption of the license.\n\nRenewType -> (string)\n\nRenewal frequency.\n\nProvisionalConfiguration -> (structure)\n\nDetails about a provisional configuration.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the provisional configuration, in minutes.\n\nBorrowConfiguration -> (structure)\n\nDetails about a borrow configuration.\n\nAllowEarlyCheckIn -> (boolean)\n\nIndicates whether early check-ins are allowed.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the borrow configuration, in minutes.\n\nLicenseMetadata -> (list)\n\nLicense metadata.\n\n(structure)\n\nDescribes key/value pairs.\n\nName -> (string)\n\nThe key name.\n\nValue -> (string)\n\nThe value.\n\nCreateTime -> (string)\n\nLicense creation time.\n\nVersion -> (string)\n\nLicense version."
    },
    {
      "command_name": "get-license-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/get-license-configuration.html",
      "command_description": "Description\n\nGets detailed information about the specified license configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-license-configuration\n--license-configuration-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-configuration-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-configuration-arn (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseConfigurationId -> (string)\n\nUnique ID for the license configuration.\n\nLicenseConfigurationArn -> (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\nName -> (string)\n\nName of the license configuration.\n\nDescription -> (string)\n\nDescription of the license configuration.\n\nLicenseCountingType -> (string)\n\nDimension for which the licenses are counted.\n\nLicenseRules -> (list)\n\nLicense rules.\n\n(string)\n\nLicenseCount -> (long)\n\nNumber of available licenses.\n\nLicenseCountHardLimit -> (boolean)\n\nSets the number of available licenses as a hard limit.\n\nConsumedLicenses -> (long)\n\nNumber of licenses assigned to resources.\n\nStatus -> (string)\n\nLicense configuration status.\n\nOwnerAccountId -> (string)\n\nAccount ID of the owner of the license configuration.\n\nConsumedLicenseSummaryList -> (list)\n\nSummaries of the licenses consumed by resources.\n\n(structure)\n\nDetails about license consumption.\n\nResourceType -> (string)\n\nResource type of the resource consuming a license.\n\nConsumedLicenses -> (long)\n\nNumber of licenses consumed by the resource.\n\nManagedResourceSummaryList -> (list)\n\nSummaries of the managed resources.\n\n(structure)\n\nSummary information about a managed resource.\n\nResourceType -> (string)\n\nType of resource associated with a license.\n\nAssociationCount -> (long)\n\nNumber of resources associated with licenses.\n\nTags -> (list)\n\nTags for the license configuration.\n\n(structure)\n\nDetails about a tag for a license configuration.\n\nKey -> (string)\n\nTag key.\n\nValue -> (string)\n\nTag value.\n\nProductInformationList -> (list)\n\nProduct information.\n\n(structure)\n\nDescribes product information for a license configuration.\n\nResourceType -> (string)\n\nResource type. The possible values are SSM_MANAGED | RDS .\n\nProductInformationFilterList -> (list)\n\nA Product information filter consists of a ProductInformationFilterComparator which is a logical operator, a ProductInformationFilterName which specifies the type of filter being declared, and a ProductInformationFilterValue that specifies the value to filter on.\n\nAccepted values for ProductInformationFilterName are listed here along with descriptions and valid options for ProductInformationFilterComparator .\n\nThe following filters and are supported when the resource type is SSM_MANAGED :\n\nApplication Name - The name of the application. Logical operator is EQUALS .\n\nApplication Publisher - The publisher of the application. Logical operator is EQUALS .\n\nApplication Version - The version of the application. Logical operator is EQUALS .\n\nPlatform Name - The name of the platform. Logical operator is EQUALS .\n\nPlatform Type - The platform type. Logical operator is EQUALS .\n\nTag:key - The key of a tag attached to an Amazon Web Services resource you wish to exclude from automated discovery. Logical operator is NOT_EQUALS . The key for your tag must be appended to Tag: following the example: Tag:name-of-your-key . ProductInformationFilterValue is optional if you are not using values for the key.\n\nAccountId - The 12-digit ID of an Amazon Web Services account you wish to exclude from automated discovery. Logical operator is NOT_EQUALS .\n\nLicense Included - The type of license included. Logical operators are EQUALS and NOT_EQUALS . Possible values are: sql-server-enterprise | sql-server-standard | sql-server-web | windows-server-datacenter .\n\nThe following filters and logical operators are supported when the resource type is RDS :\n\nEngine Edition - The edition of the database engine. Logical operator is EQUALS . Possible values are: oracle-ee | oracle-se | oracle-se1 | oracle-se2 .\n\nLicense Pack - The license pack. Logical operator is EQUALS . Possible values are: data guard | diagnostic pack sqlt | tuning pack sqlt | ols | olap .\n\n(structure)\n\nDescribes product information filters.\n\nProductInformationFilterName -> (string)\n\nFilter name.\n\nProductInformationFilterValue -> (list)\n\nFilter value.\n\n(string)\n\nProductInformationFilterComparator -> (string)\n\nLogical operator.\n\nAutomatedDiscoveryInformation -> (structure)\n\nAutomated discovery information.\n\nLastRunTime -> (timestamp)\n\nTime that automated discovery last ran.\n\nDisassociateWhenNotFound -> (boolean)\n\nWhen true, disassociates a resource when software is uninstalled.",
      "command_examples": "Examples\n\nTo get license configuration information\n\nThe following get-license-configuration example displays details for the specified license configuration.\n\naws license-manager get-license-configuration \\\n    --license-configuration-arn arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-38b658717b87478aaa7c00883EXAMPLE\n\n\nOutput:\n\n{\n    \"LicenseConfigurationId\": \"lic-38b658717b87478aaa7c00883EXAMPLE\",\n    \"LicenseConfigurationArn\": \"arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-38b658717b87478aaa7c00883EXAMPLE\",\n    \"Name\": \"my-license-configuration\",\n    \"LicenseCountingType\": \"vCPU\",\n    \"LicenseRules\": [],\n    \"LicenseCountHardLimit\": false,\n    \"ConsumedLicenses\": 0,\n    \"Status\": \"AVAILABLE\",\n    \"OwnerAccountId\": \"123456789012\",\n    \"ConsumedLicenseSummaryList\": [\n        {\n            \"ResourceType\": \"EC2_INSTANCE\",\n            \"ConsumedLicenses\": 0\n        },\n        {\n            \"ResourceType\": \"EC2_HOST\",\n            \"ConsumedLicenses\": 0\n        },\n        {\n            \"ResourceType\": \"SYSTEMS_MANAGER_MANAGED_INSTANCE\",\n            \"ConsumedLicenses\": 0\n        }\n    ],\n    \"ManagedResourceSummaryList\": [\n        {\n            \"ResourceType\": \"EC2_INSTANCE\",\n            \"AssociationCount\": 0\n        },\n        {\n            \"ResourceType\": \"EC2_HOST\",\n            \"AssociationCount\": 0\n        },\n        {\n            \"ResourceType\": \"EC2_AMI\",\n            \"AssociationCount\": 2\n        },\n        {\n            \"ResourceType\": \"SYSTEMS_MANAGER_MANAGED_INSTANCE\",\n            \"AssociationCount\": 0\n        }\n    ]\n}\n"
    },
    {
      "command_name": "get-license-conversion-task",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/get-license-conversion-task.html",
      "command_description": "Description\n\nGets information about the specified license type conversion task.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-license-conversion-task\n--license-conversion-task-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-conversion-task-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-conversion-task-id (string)\n\nID of the license type conversion task to retrieve information on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseConversionTaskId -> (string)\n\nID of the license type conversion task.\n\nResourceArn -> (string)\n\nAmazon Resource Names (ARN) of the resources the license conversion task is associated with.\n\nSourceLicenseContext -> (structure)\n\nInformation about the license type converted from.\n\nUsageOperation -> (string)\n\nThe Usage operation value that corresponds to the license type you are converting your resource from. For more information about which platforms correspond to which usage operation values see Sample data: usage operation by platform\n\nDestinationLicenseContext -> (structure)\n\nInformation about the license type converted to.\n\nUsageOperation -> (string)\n\nThe Usage operation value that corresponds to the license type you are converting your resource from. For more information about which platforms correspond to which usage operation values see Sample data: usage operation by platform\n\nStatusMessage -> (string)\n\nThe status message for the conversion task.\n\nStatus -> (string)\n\nStatus of the license type conversion task.\n\nStartTime -> (timestamp)\n\nTime at which the license type conversion task was started .\n\nLicenseConversionTime -> (timestamp)\n\nAmount of time to complete the license type conversion.\n\nEndTime -> (timestamp)\n\nTime at which the license type conversion task was completed."
    },
    {
      "command_name": "get-license-manager-report-generator",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/get-license-manager-report-generator.html",
      "command_description": "Description\n\nGets information about the specified report generator.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-license-manager-report-generator\n--license-manager-report-generator-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-manager-report-generator-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-manager-report-generator-arn (string)\n\nAmazon Resource Name (ARN) of the report generator.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReportGenerator -> (structure)\n\nA report generator that creates periodic reports about your license configurations.\n\nReportGeneratorName -> (string)\n\nName of the report generator.\n\nReportType -> (list)\n\nType of reports that are generated.\n\n(string)\n\nReportContext -> (structure)\n\nLicense configuration type for this generator.\n\nlicenseConfigurationArns -> (list)\n\nAmazon Resource Name (ARN) of the license configuration that this generator reports on.\n\n(string)\n\nReportFrequency -> (structure)\n\nDetails about how frequently reports are generated.\n\nvalue -> (integer)\n\nNumber of times within the frequency period that a report is generated. The only supported value is 1 .\n\nperiod -> (string)\n\nTime period between each report. The period can be daily, weekly, or monthly.\n\nLicenseManagerReportGeneratorArn -> (string)\n\nAmazon Resource Name (ARN) of the report generator.\n\nLastRunStatus -> (string)\n\nStatus of the last report generation attempt.\n\nLastRunFailureReason -> (string)\n\nFailure message for the last report generation attempt.\n\nLastReportGenerationTime -> (string)\n\nTime the last report was generated at.\n\nReportCreatorAccount -> (string)\n\nThe Amazon Web Services account ID used to create the report generator.\n\nDescription -> (string)\n\nDescription of the report generator.\n\nS3Location -> (structure)\n\nDetails of the S3 bucket that report generator reports are published to.\n\nbucket -> (string)\n\nName of the S3 bucket reports are published to.\n\nkeyPrefix -> (string)\n\nPrefix of the S3 bucket reports are published to.\n\nCreateTime -> (string)\n\nTime the report was created.\n\nTags -> (list)\n\nTags associated with the report generator.\n\n(structure)\n\nDetails about a tag for a license configuration.\n\nKey -> (string)\n\nTag key.\n\nValue -> (string)\n\nTag value."
    },
    {
      "command_name": "get-license-usage",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/get-license-usage.html",
      "command_description": "Description\n\nGets detailed information about the usage of the specified license.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-license-usage\n--license-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-arn (string)\n\nAmazon Resource Name (ARN) of the license.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseUsage -> (structure)\n\nLicense usage details.\n\nEntitlementUsages -> (list)\n\nLicense entitlement usages.\n\n(structure)\n\nUsage associated with an entitlement resource.\n\nName -> (string)\n\nEntitlement usage name.\n\nConsumedValue -> (string)\n\nResource usage consumed.\n\nMaxCount -> (string)\n\nMaximum entitlement usage count.\n\nUnit -> (string)\n\nEntitlement usage unit."
    },
    {
      "command_name": "get-service-settings",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/get-service-settings.html",
      "command_description": "Description\n\nGets the License Manager settings for the current Region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-service-settings\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nS3BucketArn -> (string)\n\nRegional S3 bucket path for storing reports, license trail event data, discovery data, and so on.\n\nSnsTopicArn -> (string)\n\nSNS topic configured to receive notifications from License Manager.\n\nOrganizationConfiguration -> (structure)\n\nIndicates whether Organizations is integrated with License Manager for cross-account discovery.\n\nEnableIntegration -> (boolean)\n\nEnables Organizations integration.\n\nEnableCrossAccountsDiscovery -> (boolean)\n\nIndicates whether cross-account discovery is enabled.\n\nLicenseManagerResourceShareArn -> (string)\n\nAmazon Resource Name (ARN) of the resource share. The License Manager management account provides member accounts with access to this share.",
      "command_examples": "Examples\n\nTo get the License Manager settings\n\nThe following get-service-settings example displays the service settings for License Manager in the current Region.\n\naws license-manager get-service-settings\n\n\nThe following shows example output if cross-account resource discovery is disabled.\n\n{\n    \"OrganizationConfiguration\": {\n        \"EnableIntegration\": false\n    },\n    \"EnableCrossAccountsDiscovery\": false\n}\n\n\nThe following shows example output if cross-account resource discovery is enabled.\n\n{\n    \"S3BucketArn\": \"arn:aws:s3:::aws-license-manager-service-c22d6279-35c4-47c4-bb\",\n    \"OrganizationConfiguration\": {\n        \"EnableIntegration\": true\n    },\n    \"EnableCrossAccountsDiscovery\": true\n}\n"
    },
    {
      "command_name": "list-associations-for-license-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-associations-for-license-configuration.html",
      "command_description": "Description\n\nLists the resource associations for the specified license configuration.\n\nResource associations need not consume licenses from a license configuration. For example, an AMI or a stopped instance might not consume a license (depending on the license rules).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-associations-for-license-configuration is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: LicenseConfigurationAssociations",
      "command_synopsis": "Synopsis\n  list-associations-for-license-configuration\n--license-configuration-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-configuration-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-configuration-arn (string)\n\nAmazon Resource Name (ARN) of a license configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseConfigurationAssociations -> (list)\n\nInformation about the associations for the license configuration.\n\n(structure)\n\nDescribes an association with a license configuration.\n\nResourceArn -> (string)\n\nAmazon Resource Name (ARN) of the resource.\n\nResourceType -> (string)\n\nType of server resource.\n\nResourceOwnerId -> (string)\n\nID of the Amazon Web Services account that owns the resource consuming licenses.\n\nAssociationTime -> (timestamp)\n\nTime when the license configuration was associated with the resource.\n\nAmiAssociationScope -> (string)\n\nScope of AMI associations. The possible value is cross-account .\n\nNextToken -> (string)\n\nToken for the next set of results.",
      "command_examples": "Examples\n\nTo get associations for a license configuration\n\nThe following list-associations-for-license-configuration example displays detailed information for the associations of the specified license configuration.\n\naws license-manager list-associations-for-license-configuration \\\n    --license-configuration-arn arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-38b658717b87478aaa7c00883EXAMPLE\n\n\nOutput:\n\n{\n    \"LicenseConfigurationAssociations\": [\n        {\n            \"ResourceArn\": \"arn:aws:ec2:us-west-2::image/ami-1234567890abcdef0\",\n            \"ResourceType\": \"EC2_AMI\",\n            \"ResourceOwnerId\": \"123456789012\",\n            \"AssociationTime\": 1568825118.617\n        },\n        {\n            \"ResourceArn\": \"arn:aws:ec2:us-west-2::image/ami-0abcdef1234567890\",\n            \"ResourceType\": \"EC2_AMI\",\n            \"ResourceOwnerId\": \"123456789012\",\n            \"AssociationTime\": 1568825118.946\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-distributed-grants",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-distributed-grants.html",
      "command_description": "Description\n\nLists the grants distributed for the specified license.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-distributed-grants\n[--grant-arns <value>]\n[--filters <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--grant-arns <value>]",
        "[--filters <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--grant-arns (list)\n\nAmazon Resource Names (ARNs) of the grants.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--filters (list)\n\nFilters to scope the results. The following filters are supported:\n\nLicenseArn\n\nGrantStatus\n\nGranteePrincipalARN\n\nProductSKU\n\nLicenseIssuerName\n\n(structure)\n\nA filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nName -> (string)\n\nName of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nFilter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--next-token (string)\n\nToken for the next set of results.\n\n--max-results (integer)\n\nMaximum number of results to return in a single call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGrants -> (list)\n\nDistributed grant details.\n\n(structure)\n\nDescribes a grant.\n\nGrantArn -> (string)\n\nAmazon Resource Name (ARN) of the grant.\n\nGrantName -> (string)\n\nGrant name.\n\nParentArn -> (string)\n\nParent ARN.\n\nLicenseArn -> (string)\n\nLicense ARN.\n\nGranteePrincipalArn -> (string)\n\nThe grantee principal ARN.\n\nHomeRegion -> (string)\n\nHome Region of the grant.\n\nGrantStatus -> (string)\n\nGrant status.\n\nStatusReason -> (string)\n\nGrant status reason.\n\nVersion -> (string)\n\nGrant version.\n\nGrantedOperations -> (list)\n\nGranted operations.\n\n(string)\n\nNextToken -> (string)\n\nToken for the next set of results."
    },
    {
      "command_name": "list-failures-for-license-configuration-operations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-failures-for-license-configuration-operations.html",
      "command_description": "Description\n\nLists the license configuration operations that failed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-failures-for-license-configuration-operations\n--license-configuration-arn <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-configuration-arn <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-configuration-arn (string)\n\nAmazon Resource Name of the license configuration.\n\n--max-results (integer)\n\nMaximum number of results to return in a single call.\n\n--next-token (string)\n\nToken for the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseOperationFailureList -> (list)\n\nLicense configuration operations that failed.\n\n(structure)\n\nDescribes the failure of a license operation.\n\nResourceArn -> (string)\n\nAmazon Resource Name (ARN) of the resource.\n\nResourceType -> (string)\n\nResource type.\n\nErrorMessage -> (string)\n\nError message.\n\nFailureTime -> (timestamp)\n\nFailure time.\n\nOperationName -> (string)\n\nName of the operation.\n\nResourceOwnerId -> (string)\n\nID of the Amazon Web Services account that owns the resource.\n\nOperationRequestedBy -> (string)\n\nThe requester is “License Manager Automated Discovery”.\n\nMetadataList -> (list)\n\nReserved.\n\n(structure)\n\nDescribes key/value pairs.\n\nName -> (string)\n\nThe key name.\n\nValue -> (string)\n\nThe value.\n\nNextToken -> (string)\n\nToken for the next set of results."
    },
    {
      "command_name": "list-license-configurations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-license-configurations.html",
      "command_description": "Description\n\nLists the license configurations for your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-license-configurations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: LicenseConfigurations",
      "command_synopsis": "Synopsis\n  list-license-configurations\n[--license-configuration-arns <value>]\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--license-configuration-arns <value>]",
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-configuration-arns (list)\n\nAmazon Resource Names (ARN) of the license configurations.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--filters (list)\n\nFilters to scope the results. The following filters and logical operators are supported:\n\nlicenseCountingType - The dimension for which licenses are counted. Possible values are vCPU | Instance | Core | Socket . Logical operators are EQUALS | NOT_EQUALS .\n\nenforceLicenseCount - A Boolean value that indicates whether hard license enforcement is used. Logical operators are EQUALS | NOT_EQUALS .\n\nusagelimitExceeded - A Boolean value that indicates whether the available licenses have been exceeded. Logical operators are EQUALS | NOT_EQUALS .\n\n(structure)\n\nA filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nName -> (string)\n\nName of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nFilter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseConfigurations -> (list)\n\nInformation about the license configurations.\n\n(structure)\n\nA license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.\n\nLicenseConfigurationId -> (string)\n\nUnique ID of the license configuration.\n\nLicenseConfigurationArn -> (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\nName -> (string)\n\nName of the license configuration.\n\nDescription -> (string)\n\nDescription of the license configuration.\n\nLicenseCountingType -> (string)\n\nDimension to use to track the license inventory.\n\nLicenseRules -> (list)\n\nLicense rules.\n\n(string)\n\nLicenseCount -> (long)\n\nNumber of licenses managed by the license configuration.\n\nLicenseCountHardLimit -> (boolean)\n\nNumber of available licenses as a hard limit.\n\nDisassociateWhenNotFound -> (boolean)\n\nWhen true, disassociates a resource when software is uninstalled.\n\nConsumedLicenses -> (long)\n\nNumber of licenses consumed.\n\nStatus -> (string)\n\nStatus of the license configuration.\n\nOwnerAccountId -> (string)\n\nAccount ID of the license configuration’s owner.\n\nConsumedLicenseSummaryList -> (list)\n\nSummaries for licenses consumed by various resources.\n\n(structure)\n\nDetails about license consumption.\n\nResourceType -> (string)\n\nResource type of the resource consuming a license.\n\nConsumedLicenses -> (long)\n\nNumber of licenses consumed by the resource.\n\nManagedResourceSummaryList -> (list)\n\nSummaries for managed resources.\n\n(structure)\n\nSummary information about a managed resource.\n\nResourceType -> (string)\n\nType of resource associated with a license.\n\nAssociationCount -> (long)\n\nNumber of resources associated with licenses.\n\nProductInformationList -> (list)\n\nProduct information.\n\n(structure)\n\nDescribes product information for a license configuration.\n\nResourceType -> (string)\n\nResource type. The possible values are SSM_MANAGED | RDS .\n\nProductInformationFilterList -> (list)\n\nA Product information filter consists of a ProductInformationFilterComparator which is a logical operator, a ProductInformationFilterName which specifies the type of filter being declared, and a ProductInformationFilterValue that specifies the value to filter on.\n\nAccepted values for ProductInformationFilterName are listed here along with descriptions and valid options for ProductInformationFilterComparator .\n\nThe following filters and are supported when the resource type is SSM_MANAGED :\n\nApplication Name - The name of the application. Logical operator is EQUALS .\n\nApplication Publisher - The publisher of the application. Logical operator is EQUALS .\n\nApplication Version - The version of the application. Logical operator is EQUALS .\n\nPlatform Name - The name of the platform. Logical operator is EQUALS .\n\nPlatform Type - The platform type. Logical operator is EQUALS .\n\nTag:key - The key of a tag attached to an Amazon Web Services resource you wish to exclude from automated discovery. Logical operator is NOT_EQUALS . The key for your tag must be appended to Tag: following the example: Tag:name-of-your-key . ProductInformationFilterValue is optional if you are not using values for the key.\n\nAccountId - The 12-digit ID of an Amazon Web Services account you wish to exclude from automated discovery. Logical operator is NOT_EQUALS .\n\nLicense Included - The type of license included. Logical operators are EQUALS and NOT_EQUALS . Possible values are: sql-server-enterprise | sql-server-standard | sql-server-web | windows-server-datacenter .\n\nThe following filters and logical operators are supported when the resource type is RDS :\n\nEngine Edition - The edition of the database engine. Logical operator is EQUALS . Possible values are: oracle-ee | oracle-se | oracle-se1 | oracle-se2 .\n\nLicense Pack - The license pack. Logical operator is EQUALS . Possible values are: data guard | diagnostic pack sqlt | tuning pack sqlt | ols | olap .\n\n(structure)\n\nDescribes product information filters.\n\nProductInformationFilterName -> (string)\n\nFilter name.\n\nProductInformationFilterValue -> (list)\n\nFilter value.\n\n(string)\n\nProductInformationFilterComparator -> (string)\n\nLogical operator.\n\nAutomatedDiscoveryInformation -> (structure)\n\nAutomated discovery information.\n\nLastRunTime -> (timestamp)\n\nTime that automated discovery last ran.\n\nNextToken -> (string)\n\nToken for the next set of results.",
      "command_examples": "Examples\n\nExample 1: To list all of your license configurations\n\nThe following list-license-configurations example lists all your license configurations.\n\naws license-manager list-license-configurations\n\n\nOutput:\n\n{\n    \"LicenseConfigurations\": [\n        {\n            \"LicenseConfigurationId\": \"lic-6eb6586f508a786a2ba4f56c1EXAMPLE\",\n            \"LicenseConfigurationArn\": \"arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-6eb6586f508a786a2ba4f56c1EXAMPLE\",\n            \"Name\": \"my-license-configuration\",\n            \"LicenseCountingType\": \"Core\",\n            \"LicenseRules\": [],\n            \"LicenseCount\": 10,\n            \"LicenseCountHardLimit\": true,\n            \"ConsumedLicenses\": 0,\n            \"Status\": \"AVAILABLE\",\n            \"OwnerAccountId\": \"123456789012\",\n            \"ConsumedLicenseSummaryList\": [\n                {\n                    \"ResourceType\": \"EC2_INSTANCE\",\n                    \"ConsumedLicenses\": 0\n                },\n                {\n                    \"ResourceType\": \"EC2_HOST\",\n                    \"ConsumedLicenses\": 0\n                },\n                {\n                    \"ResourceType\": \"SYSTEMS_MANAGER_MANAGED_INSTANCE\",\n                    \"ConsumedLicenses\": 0\n                }\n            ],\n            \"ManagedResourceSummaryList\": [\n                {\n                    \"ResourceType\": \"EC2_INSTANCE\",\n                    \"AssociationCount\": 0\n                },\n                {\n                    \"ResourceType\": \"EC2_HOST\",\n                    \"AssociationCount\": 0\n                },\n                {\n                    \"ResourceType\": \"EC2_AMI\",\n                    \"AssociationCount\": 0\n                },\n                {\n                    \"ResourceType\": \"SYSTEMS_MANAGER_MANAGED_INSTANCE\",\n                    \"AssociationCount\": 0\n                }\n            ]\n        },\n        {\n            ...\n        }\n    ]\n}\n\n\nExample 2: To list a specific license configuration\n\nThe following list-license-configurations example lists only the specified license configuration.\n\naws license-manager list-license-configurations \\\n    --license-configuration-arns arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-38b658717b87478aaa7c00883EXAMPLE\n"
    },
    {
      "command_name": "list-license-conversion-tasks",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-license-conversion-tasks.html",
      "command_description": "Description\n\nLists the license type conversion tasks for your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-license-conversion-tasks\n[--next-token <value>]\n[--max-results <value>]\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nToken for the next set of results.\n\n--max-results (integer)\n\nMaximum number of results to return in a single call.\n\n--filters (list)\n\nFilters to scope the results. Valid filters are ResourceArns and Status .\n\n(structure)\n\nA filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nName -> (string)\n\nName of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nFilter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseConversionTasks -> (list)\n\nInformation about the license configuration tasks for your account.\n\n(structure)\n\nInformation about a license type conversion task.\n\nLicenseConversionTaskId -> (string)\n\nThe ID of the license type conversion task.\n\nResourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the resource associated with the license type conversion task.\n\nSourceLicenseContext -> (structure)\n\nInformation about the license type this conversion task converted from.\n\nUsageOperation -> (string)\n\nThe Usage operation value that corresponds to the license type you are converting your resource from. For more information about which platforms correspond to which usage operation values see Sample data: usage operation by platform\n\nDestinationLicenseContext -> (structure)\n\nInformation about the license type this conversion task converted to.\n\nUsageOperation -> (string)\n\nThe Usage operation value that corresponds to the license type you are converting your resource from. For more information about which platforms correspond to which usage operation values see Sample data: usage operation by platform\n\nStatus -> (string)\n\nThe status of the conversion task.\n\nStatusMessage -> (string)\n\nThe status message for the conversion task.\n\nStartTime -> (timestamp)\n\nThe time the conversion task was started at.\n\nLicenseConversionTime -> (timestamp)\n\nThe time the usage operation value of the resource was changed.\n\nEndTime -> (timestamp)\n\nThe time the conversion task was completed.\n\nNextToken -> (string)\n\nToken for the next set of results."
    },
    {
      "command_name": "list-license-manager-report-generators",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-license-manager-report-generators.html",
      "command_description": "Description\n\nLists the report generators for your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-license-manager-report-generators\n[--filters <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nFilters to scope the results. The following filters are supported:\n\nLicenseConfigurationArn\n\n(structure)\n\nA filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nName -> (string)\n\nName of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nFilter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--next-token (string)\n\nToken for the next set of results.\n\n--max-results (integer)\n\nMaximum number of results to return in a single call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReportGenerators -> (list)\n\nA report generator that creates periodic reports about your license configurations.\n\n(structure)\n\nDescribe the details of a report generator.\n\nReportGeneratorName -> (string)\n\nName of the report generator.\n\nReportType -> (list)\n\nType of reports that are generated.\n\n(string)\n\nReportContext -> (structure)\n\nLicense configuration type for this generator.\n\nlicenseConfigurationArns -> (list)\n\nAmazon Resource Name (ARN) of the license configuration that this generator reports on.\n\n(string)\n\nReportFrequency -> (structure)\n\nDetails about how frequently reports are generated.\n\nvalue -> (integer)\n\nNumber of times within the frequency period that a report is generated. The only supported value is 1 .\n\nperiod -> (string)\n\nTime period between each report. The period can be daily, weekly, or monthly.\n\nLicenseManagerReportGeneratorArn -> (string)\n\nAmazon Resource Name (ARN) of the report generator.\n\nLastRunStatus -> (string)\n\nStatus of the last report generation attempt.\n\nLastRunFailureReason -> (string)\n\nFailure message for the last report generation attempt.\n\nLastReportGenerationTime -> (string)\n\nTime the last report was generated at.\n\nReportCreatorAccount -> (string)\n\nThe Amazon Web Services account ID used to create the report generator.\n\nDescription -> (string)\n\nDescription of the report generator.\n\nS3Location -> (structure)\n\nDetails of the S3 bucket that report generator reports are published to.\n\nbucket -> (string)\n\nName of the S3 bucket reports are published to.\n\nkeyPrefix -> (string)\n\nPrefix of the S3 bucket reports are published to.\n\nCreateTime -> (string)\n\nTime the report was created.\n\nTags -> (list)\n\nTags associated with the report generator.\n\n(structure)\n\nDetails about a tag for a license configuration.\n\nKey -> (string)\n\nTag key.\n\nValue -> (string)\n\nTag value.\n\nNextToken -> (string)\n\nToken for the next set of results."
    },
    {
      "command_name": "list-license-specifications-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-license-specifications-for-resource.html",
      "command_description": "Description\n\nDescribes the license configurations for the specified resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-license-specifications-for-resource is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: LicenseSpecifications",
      "command_synopsis": "Synopsis\n  list-license-specifications-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nAmazon Resource Name (ARN) of a resource that has an associated license configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseSpecifications -> (list)\n\nLicense configurations associated with a resource.\n\n(structure)\n\nDetails for associating a license configuration with a resource.\n\nLicenseConfigurationArn -> (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\nAmiAssociationScope -> (string)\n\nScope of AMI associations. The possible value is cross-account .\n\nNextToken -> (string)\n\nToken for the next set of results.",
      "command_examples": "Examples\n\nTo list the license configurations for a resource\n\nThe following list-license-specifications-for-resource example lists the license configurations associated with the specified Amazon Machine Image (AMI).\n\naws license-manager list-license-specifications-for-resource \\\n    --resource-arn arn:aws:ec2:us-west-2::image/ami-1234567890abcdef0\n\n\nOutput:\n\n{\n    \"LicenseConfigurationArn\": \"arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-38b658717b87478aaa7c00883EXAMPLE\"\n}\n"
    },
    {
      "command_name": "list-license-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-license-versions.html",
      "command_description": "Description\n\nLists all versions of the specified license.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-license-versions\n--license-arn <value>\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-arn <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-arn (string)\n\nAmazon Resource Name (ARN) of the license.\n\n--next-token (string)\n\nToken for the next set of results.\n\n--max-results (integer)\n\nMaximum number of results to return in a single call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenses -> (list)\n\nLicense details.\n\n(structure)\n\nSoftware license that is managed in License Manager.\n\nLicenseArn -> (string)\n\nAmazon Resource Name (ARN) of the license.\n\nLicenseName -> (string)\n\nLicense name.\n\nProductName -> (string)\n\nProduct name.\n\nProductSKU -> (string)\n\nProduct SKU.\n\nIssuer -> (structure)\n\nLicense issuer.\n\nName -> (string)\n\nIssuer name.\n\nSignKey -> (string)\n\nAsymmetric KMS key from Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.\n\nKeyFingerprint -> (string)\n\nIssuer key fingerprint.\n\nHomeRegion -> (string)\n\nHome Region of the license.\n\nStatus -> (string)\n\nLicense status.\n\nValidity -> (structure)\n\nDate and time range during which the license is valid, in ISO8601-UTC format.\n\nBegin -> (string)\n\nStart of the time range.\n\nEnd -> (string)\n\nEnd of the time range.\n\nBeneficiary -> (string)\n\nLicense beneficiary.\n\nEntitlements -> (list)\n\nLicense entitlements.\n\n(structure)\n\nDescribes a resource entitled for use with a license.\n\nName -> (string)\n\nEntitlement name.\n\nValue -> (string)\n\nEntitlement resource. Use only if the unit is None.\n\nMaxCount -> (long)\n\nMaximum entitlement count. Use if the unit is not None.\n\nOverage -> (boolean)\n\nIndicates whether overages are allowed.\n\nUnit -> (string)\n\nEntitlement unit.\n\nAllowCheckIn -> (boolean)\n\nIndicates whether check-ins are allowed.\n\nConsumptionConfiguration -> (structure)\n\nConfiguration for consumption of the license.\n\nRenewType -> (string)\n\nRenewal frequency.\n\nProvisionalConfiguration -> (structure)\n\nDetails about a provisional configuration.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the provisional configuration, in minutes.\n\nBorrowConfiguration -> (structure)\n\nDetails about a borrow configuration.\n\nAllowEarlyCheckIn -> (boolean)\n\nIndicates whether early check-ins are allowed.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the borrow configuration, in minutes.\n\nLicenseMetadata -> (list)\n\nLicense metadata.\n\n(structure)\n\nDescribes key/value pairs.\n\nName -> (string)\n\nThe key name.\n\nValue -> (string)\n\nThe value.\n\nCreateTime -> (string)\n\nLicense creation time.\n\nVersion -> (string)\n\nLicense version.\n\nNextToken -> (string)\n\nToken for the next set of results."
    },
    {
      "command_name": "list-licenses",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-licenses.html",
      "command_description": "Description\n\nLists the licenses for your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-licenses\n[--license-arns <value>]\n[--filters <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--license-arns <value>]",
        "[--filters <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-arns (list)\n\nAmazon Resource Names (ARNs) of the licenses.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--filters (list)\n\nFilters to scope the results. The following filters are supported:\n\nBeneficiary\n\nProductSKU\n\nFingerprint\n\nStatus\n\n(structure)\n\nA filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nName -> (string)\n\nName of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nFilter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--next-token (string)\n\nToken for the next set of results.\n\n--max-results (integer)\n\nMaximum number of results to return in a single call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenses -> (list)\n\nLicense details.\n\n(structure)\n\nSoftware license that is managed in License Manager.\n\nLicenseArn -> (string)\n\nAmazon Resource Name (ARN) of the license.\n\nLicenseName -> (string)\n\nLicense name.\n\nProductName -> (string)\n\nProduct name.\n\nProductSKU -> (string)\n\nProduct SKU.\n\nIssuer -> (structure)\n\nLicense issuer.\n\nName -> (string)\n\nIssuer name.\n\nSignKey -> (string)\n\nAsymmetric KMS key from Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.\n\nKeyFingerprint -> (string)\n\nIssuer key fingerprint.\n\nHomeRegion -> (string)\n\nHome Region of the license.\n\nStatus -> (string)\n\nLicense status.\n\nValidity -> (structure)\n\nDate and time range during which the license is valid, in ISO8601-UTC format.\n\nBegin -> (string)\n\nStart of the time range.\n\nEnd -> (string)\n\nEnd of the time range.\n\nBeneficiary -> (string)\n\nLicense beneficiary.\n\nEntitlements -> (list)\n\nLicense entitlements.\n\n(structure)\n\nDescribes a resource entitled for use with a license.\n\nName -> (string)\n\nEntitlement name.\n\nValue -> (string)\n\nEntitlement resource. Use only if the unit is None.\n\nMaxCount -> (long)\n\nMaximum entitlement count. Use if the unit is not None.\n\nOverage -> (boolean)\n\nIndicates whether overages are allowed.\n\nUnit -> (string)\n\nEntitlement unit.\n\nAllowCheckIn -> (boolean)\n\nIndicates whether check-ins are allowed.\n\nConsumptionConfiguration -> (structure)\n\nConfiguration for consumption of the license.\n\nRenewType -> (string)\n\nRenewal frequency.\n\nProvisionalConfiguration -> (structure)\n\nDetails about a provisional configuration.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the provisional configuration, in minutes.\n\nBorrowConfiguration -> (structure)\n\nDetails about a borrow configuration.\n\nAllowEarlyCheckIn -> (boolean)\n\nIndicates whether early check-ins are allowed.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the borrow configuration, in minutes.\n\nLicenseMetadata -> (list)\n\nLicense metadata.\n\n(structure)\n\nDescribes key/value pairs.\n\nName -> (string)\n\nThe key name.\n\nValue -> (string)\n\nThe value.\n\nCreateTime -> (string)\n\nLicense creation time.\n\nVersion -> (string)\n\nLicense version.\n\nNextToken -> (string)\n\nToken for the next set of results."
    },
    {
      "command_name": "list-received-grants",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-received-grants.html",
      "command_description": "Description\n\nLists grants that are received but not accepted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-received-grants\n[--grant-arns <value>]\n[--filters <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--grant-arns <value>]",
        "[--filters <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--grant-arns (list)\n\nAmazon Resource Names (ARNs) of the grants.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--filters (list)\n\nFilters to scope the results. The following filters are supported:\n\nProductSKU\n\nLicenseIssuerName\n\nLicenseArn\n\nGrantStatus\n\nGranterAccountId\n\n(structure)\n\nA filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nName -> (string)\n\nName of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nFilter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--next-token (string)\n\nToken for the next set of results.\n\n--max-results (integer)\n\nMaximum number of results to return in a single call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGrants -> (list)\n\nReceived grant details.\n\n(structure)\n\nDescribes a grant.\n\nGrantArn -> (string)\n\nAmazon Resource Name (ARN) of the grant.\n\nGrantName -> (string)\n\nGrant name.\n\nParentArn -> (string)\n\nParent ARN.\n\nLicenseArn -> (string)\n\nLicense ARN.\n\nGranteePrincipalArn -> (string)\n\nThe grantee principal ARN.\n\nHomeRegion -> (string)\n\nHome Region of the grant.\n\nGrantStatus -> (string)\n\nGrant status.\n\nStatusReason -> (string)\n\nGrant status reason.\n\nVersion -> (string)\n\nGrant version.\n\nGrantedOperations -> (list)\n\nGranted operations.\n\n(string)\n\nNextToken -> (string)\n\nToken for the next set of results."
    },
    {
      "command_name": "list-received-licenses",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-received-licenses.html",
      "command_description": "Description\n\nLists received licenses.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-received-licenses\n[--license-arns <value>]\n[--filters <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--license-arns <value>]",
        "[--filters <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-arns (list)\n\nAmazon Resource Names (ARNs) of the licenses.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--filters (list)\n\nFilters to scope the results. The following filters are supported:\n\nProductSKU\n\nStatus\n\nFingerprint\n\nIssuerName\n\nBeneficiary\n\n(structure)\n\nA filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nName -> (string)\n\nName of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nFilter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--next-token (string)\n\nToken for the next set of results.\n\n--max-results (integer)\n\nMaximum number of results to return in a single call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenses -> (list)\n\nReceived license details.\n\n(structure)\n\nDescribes a license that is granted to a grantee.\n\nLicenseArn -> (string)\n\nAmazon Resource Name (ARN) of the license.\n\nLicenseName -> (string)\n\nLicense name.\n\nProductName -> (string)\n\nProduct name.\n\nProductSKU -> (string)\n\nProduct SKU.\n\nIssuer -> (structure)\n\nGranted license issuer.\n\nName -> (string)\n\nIssuer name.\n\nSignKey -> (string)\n\nAsymmetric KMS key from Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.\n\nKeyFingerprint -> (string)\n\nIssuer key fingerprint.\n\nHomeRegion -> (string)\n\nHome Region of the granted license.\n\nStatus -> (string)\n\nGranted license status.\n\nValidity -> (structure)\n\nDate and time range during which the granted license is valid, in ISO8601-UTC format.\n\nBegin -> (string)\n\nStart of the time range.\n\nEnd -> (string)\n\nEnd of the time range.\n\nBeneficiary -> (string)\n\nGranted license beneficiary.\n\nEntitlements -> (list)\n\nLicense entitlements.\n\n(structure)\n\nDescribes a resource entitled for use with a license.\n\nName -> (string)\n\nEntitlement name.\n\nValue -> (string)\n\nEntitlement resource. Use only if the unit is None.\n\nMaxCount -> (long)\n\nMaximum entitlement count. Use if the unit is not None.\n\nOverage -> (boolean)\n\nIndicates whether overages are allowed.\n\nUnit -> (string)\n\nEntitlement unit.\n\nAllowCheckIn -> (boolean)\n\nIndicates whether check-ins are allowed.\n\nConsumptionConfiguration -> (structure)\n\nConfiguration for consumption of the license.\n\nRenewType -> (string)\n\nRenewal frequency.\n\nProvisionalConfiguration -> (structure)\n\nDetails about a provisional configuration.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the provisional configuration, in minutes.\n\nBorrowConfiguration -> (structure)\n\nDetails about a borrow configuration.\n\nAllowEarlyCheckIn -> (boolean)\n\nIndicates whether early check-ins are allowed.\n\nMaxTimeToLiveInMinutes -> (integer)\n\nMaximum time for the borrow configuration, in minutes.\n\nLicenseMetadata -> (list)\n\nGranted license metadata.\n\n(structure)\n\nDescribes key/value pairs.\n\nName -> (string)\n\nThe key name.\n\nValue -> (string)\n\nThe value.\n\nCreateTime -> (string)\n\nCreation time of the granted license.\n\nVersion -> (string)\n\nVersion of the granted license.\n\nReceivedMetadata -> (structure)\n\nGranted license received metadata.\n\nReceivedStatus -> (string)\n\nReceived status.\n\nReceivedStatusReason -> (string)\n\nReceived status reason.\n\nAllowedOperations -> (list)\n\nAllowed operations.\n\n(string)\n\nNextToken -> (string)\n\nToken for the next set of results."
    },
    {
      "command_name": "list-resource-inventory",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-resource-inventory.html",
      "command_description": "Description\n\nLists resources managed using Systems Manager inventory.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resource-inventory is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResourceInventoryList",
      "command_synopsis": "Synopsis\n  list-resource-inventory\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nFilters to scope the results. The following filters and logical operators are supported:\n\naccount_id - The ID of the Amazon Web Services account that owns the resource. Logical operators are EQUALS | NOT_EQUALS .\n\napplication_name - The name of the application. Logical operators are EQUALS | BEGINS_WITH .\n\nlicense_included - The type of license included. Logical operators are EQUALS | NOT_EQUALS . Possible values are sql-server-enterprise | sql-server-standard | sql-server-web | windows-server-datacenter .\n\nplatform - The platform of the resource. Logical operators are EQUALS | BEGINS_WITH .\n\nresource_id - The ID of the resource. Logical operators are EQUALS | NOT_EQUALS .\n\ntag:<key> - The key/value combination of a tag assigned to the resource. Logical operators are EQUALS (single account) or EQUALS | NOT_EQUALS (cross account).\n\n(structure)\n\nAn inventory filter.\n\nName -> (string)\n\nName of the filter.\n\nCondition -> (string)\n\nCondition of the filter.\n\nValue -> (string)\n\nValue of the filter.\n\nShorthand Syntax:\n\nName=string,Condition=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Condition\": \"EQUALS\"|\"NOT_EQUALS\"|\"BEGINS_WITH\"|\"CONTAINS\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceInventoryList -> (list)\n\nInformation about the resources.\n\n(structure)\n\nDetails about a resource.\n\nResourceId -> (string)\n\nID of the resource.\n\nResourceType -> (string)\n\nType of resource.\n\nResourceArn -> (string)\n\nAmazon Resource Name (ARN) of the resource.\n\nPlatform -> (string)\n\nPlatform of the resource.\n\nPlatformVersion -> (string)\n\nPlatform version of the resource in the inventory.\n\nResourceOwningAccountId -> (string)\n\nID of the account that owns the resource.\n\nNextToken -> (string)\n\nToken for the next set of results.",
      "command_examples": "Examples\n\nTo list resources in the resource inventory\n\nThe following list-resource-inventory example lists the resources managed using Systems Manager inventory.\n\naws license-manager list-resource-inventory\n\n\nOutput:\n\n{\n    \"ResourceInventoryList\": [\n        {\n            \"Platform\": \"Red Hat Enterprise Linux Server\",\n            \"ResourceType\": \"EC2Instance\",\n            \"PlatformVersion\": \"7.4\",\n            \"ResourceArn\": \"arn:aws:ec2:us-west-2:1234567890129:instance/i-05d3cdfb05bd36376\",\n            \"ResourceId\": \"i-05d3cdfb05bd36376\",\n            \"ResourceOwningAccountId\": \"1234567890129\"\n        },\n        {\n            \"Platform\": \"Amazon Linux\",\n            \"ResourceType\": \"EC2Instance\",\n            \"PlatformVersion\": \"2\",\n            \"ResourceArn\": \"arn:aws:ec2:us-west-2:1234567890129:instance/i-0b1d036cfd4594808\",\n            \"ResourceId\": \"i-0b1d036cfd4594808\",\n            \"ResourceOwningAccountId\": \"1234567890129\"\n        },\n        {\n            \"Platform\": \"Microsoft Windows Server 2019 Datacenter\",\n            \"ResourceType\": \"EC2Instance\",\n            \"PlatformVersion\": \"10.0.17763\",\n            \"ResourceArn\": \"arn:aws:ec2:us-west-2:1234567890129:instance/i-0cdb3b54a2a8246ad\",\n            \"ResourceId\": \"i-0cdb3b54a2a8246ad\",\n            \"ResourceOwningAccountId\": \"1234567890129\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-tags-for-resource.html",
      "command_description": "Description\n\nLists the tags for the specified license configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nInformation about the tags.\n\n(structure)\n\nDetails about a tag for a license configuration.\n\nKey -> (string)\n\nTag key.\n\nValue -> (string)\n\nTag value.",
      "command_examples": "Examples\n\nTo list the tags for a license configuration\n\nThe following list-tags-for-resource example lists the tags for the specified license configuration.\n\naws license-manager list-tags-for-resource \\\n    --resource-arn arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-6eb6586f508a786a2ba4f56c1EXAMPLE\n\n\nOutput:\n\n{\n    \"Tags\": [\n        {\n            \"Key\": \"project\",\n            \"Value\": \"lima\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-tokens",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-tokens.html",
      "command_description": "Description\n\nLists your tokens.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tokens\n[--token-ids <value>]\n[--filters <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--token-ids <value>]",
        "[--filters <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--token-ids (list)\n\nToken IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--filters (list)\n\nFilters to scope the results. The following filter is supported:\n\nLicenseArns\n\n(structure)\n\nA filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nName -> (string)\n\nName of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nFilter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--next-token (string)\n\nToken for the next set of results.\n\n--max-results (integer)\n\nMaximum number of results to return in a single call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTokens -> (list)\n\nReceived token details.\n\n(structure)\n\nDescribes a token.\n\nTokenId -> (string)\n\nToken ID.\n\nTokenType -> (string)\n\nType of token generated. The supported value is REFRESH_TOKEN .\n\nLicenseArn -> (string)\n\nAmazon Resource Name (ARN) of the license.\n\nExpirationTime -> (string)\n\nToken expiration time, in ISO8601-UTC format.\n\nTokenProperties -> (list)\n\nData specified by the caller.\n\n(string)\n\nRoleArns -> (list)\n\nAmazon Resource Names (ARN) of the roles included in the token.\n\n(string)\n\nStatus -> (string)\n\nToken status. The possible values are AVAILABLE and DELETED .\n\nNextToken -> (string)\n\nToken for the next set of results."
    },
    {
      "command_name": "list-usage-for-license-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/list-usage-for-license-configuration.html",
      "command_description": "Description\n\nLists all license usage records for a license configuration, displaying license consumption details by resource at a selected point in time. Use this action to audit the current license consumption for any license inventory and configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-usage-for-license-configuration is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: LicenseConfigurationUsageList",
      "command_synopsis": "Synopsis\n  list-usage-for-license-configuration\n--license-configuration-arn <value>\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-configuration-arn <value>",
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-configuration-arn (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\n--filters (list)\n\nFilters to scope the results. The following filters and logical operators are supported:\n\nresourceArn - The ARN of the license configuration resource. Logical operators are EQUALS | NOT_EQUALS .\n\nresourceType - The resource type (EC2_INSTANCE | EC2_HOST | EC2_AMI | SYSTEMS_MANAGER_MANAGED_INSTANCE ). Logical operators are EQUALS | NOT_EQUALS .\n\nresourceAccount - The ID of the account that owns the resource. Logical operators are EQUALS | NOT_EQUALS .\n\n(structure)\n\nA filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nName -> (string)\n\nName of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nFilter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLicenseConfigurationUsageList -> (list)\n\nInformation about the license configurations.\n\n(structure)\n\nDetails about the usage of a resource associated with a license configuration.\n\nResourceArn -> (string)\n\nAmazon Resource Name (ARN) of the resource.\n\nResourceType -> (string)\n\nType of resource.\n\nResourceStatus -> (string)\n\nStatus of the resource.\n\nResourceOwnerId -> (string)\n\nID of the account that owns the resource.\n\nAssociationTime -> (timestamp)\n\nTime when the license configuration was initially associated with the resource.\n\nConsumedLicenses -> (long)\n\nNumber of licenses consumed by the resource.\n\nNextToken -> (string)\n\nToken for the next set of results.",
      "command_examples": "Examples\n\nTo list the licenses in use for a license configuration\n\nThe following list-usage-for-license-configuration example lists information about the resources using licenses for the specified license configuration. For example, if the license type is vCPU, any instances consume one license per vCPU.\n\naws license-manager list-usage-for-license-configuration \\\n    --license-configuration-arn arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-38b658717b87478aaa7c00883EXAMPLE\n\n\nOutput:\n\n{\n    \"LicenseConfigurationUsageList\": [\n        {\n            \"ResourceArn\": \"arn:aws:ec2:us-west-2:123456789012:instance/i-04a636d18e83cfacb\",\n            \"ResourceType\": \"EC2_INSTANCE\",\n            \"ResourceStatus\": \"running\",\n            \"ResourceOwnerId\": \"123456789012\",\n            \"AssociationTime\": 1570892850.519,\n            \"ConsumedLicenses\": 2\n        }\n    ]\n}\n"
    },
    {
      "command_name": "reject-grant",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/reject-grant.html",
      "command_description": "Description\n\nRejects the specified grant.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  reject-grant\n--grant-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--grant-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--grant-arn (string)\n\nAmazon Resource Name (ARN) of the grant.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGrantArn -> (string)\n\nGrant ARN.\n\nStatus -> (string)\n\nGrant status.\n\nVersion -> (string)\n\nGrant version."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/tag-resource.html",
      "command_description": "Description\n\nAdds the specified tags to the specified license configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\n--tags (list)\n\nOne or more tags.\n\n(structure)\n\nDetails about a tag for a license configuration.\n\nKey -> (string)\n\nTag key.\n\nValue -> (string)\n\nTag value.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a tag a license configuration\n\nThe following tag-resource example adds the specified tag (key name and value) to the specified license configuration.\n\naws license-manager tag-resource \\\n    --tags Key=project,Value=lima \\\n    --resource-arn arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-6eb6586f508a786a2ba4f56c1EXAMPLE\n\n\nThis command produces no output."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/untag-resource.html",
      "command_description": "Description\n\nRemoves the specified tags from the specified license configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\n--tag-keys (list)\n\nKeys identifying the tags to remove.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from a license configuration\n\nThe following untag-resource example removes the specified tag (key name and resource) from the specified license configuration.\n\naws license-manager untag-resource \\\n    --tag-keys project \\\n    --resource-arn arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-6eb6586f508a786a2ba4f56c1EXAMPLE\n\n\nThis command produces no output."
    },
    {
      "command_name": "update-license-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/update-license-configuration.html",
      "command_description": "Description\n\nModifies the attributes of an existing license configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-license-configuration\n--license-configuration-arn <value>\n[--license-configuration-status <value>]\n[--license-rules <value>]\n[--license-count <value>]\n[--license-count-hard-limit | --no-license-count-hard-limit]\n[--name <value>]\n[--description <value>]\n[--product-information-list <value>]\n[--disassociate-when-not-found | --no-disassociate-when-not-found]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-configuration-arn <value>",
        "[--license-configuration-status <value>]",
        "[--license-rules <value>]",
        "[--license-count <value>]",
        "[--license-count-hard-limit | --no-license-count-hard-limit]",
        "[--name <value>]",
        "[--description <value>]",
        "[--product-information-list <value>]",
        "[--disassociate-when-not-found | --no-disassociate-when-not-found]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-configuration-arn (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\n--license-configuration-status (string)\n\nNew status of the license configuration.\n\nPossible values:\n\nAVAILABLE\n\nDISABLED\n\n--license-rules (list)\n\nNew license rule. The only rule that you can add after you create a license configuration is licenseAffinityToHost.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--license-count (long)\n\nNew number of licenses managed by the license configuration.\n\n--license-count-hard-limit | --no-license-count-hard-limit (boolean)\n\nNew hard limit of the number of available licenses.\n\n--name (string)\n\nNew name of the license configuration.\n\n--description (string)\n\nNew description of the license configuration.\n\n--product-information-list (list)\n\nNew product information.\n\n(structure)\n\nDescribes product information for a license configuration.\n\nResourceType -> (string)\n\nResource type. The possible values are SSM_MANAGED | RDS .\n\nProductInformationFilterList -> (list)\n\nA Product information filter consists of a ProductInformationFilterComparator which is a logical operator, a ProductInformationFilterName which specifies the type of filter being declared, and a ProductInformationFilterValue that specifies the value to filter on.\n\nAccepted values for ProductInformationFilterName are listed here along with descriptions and valid options for ProductInformationFilterComparator .\n\nThe following filters and are supported when the resource type is SSM_MANAGED :\n\nApplication Name - The name of the application. Logical operator is EQUALS .\n\nApplication Publisher - The publisher of the application. Logical operator is EQUALS .\n\nApplication Version - The version of the application. Logical operator is EQUALS .\n\nPlatform Name - The name of the platform. Logical operator is EQUALS .\n\nPlatform Type - The platform type. Logical operator is EQUALS .\n\nTag:key - The key of a tag attached to an Amazon Web Services resource you wish to exclude from automated discovery. Logical operator is NOT_EQUALS . The key for your tag must be appended to Tag: following the example: Tag:name-of-your-key . ProductInformationFilterValue is optional if you are not using values for the key.\n\nAccountId - The 12-digit ID of an Amazon Web Services account you wish to exclude from automated discovery. Logical operator is NOT_EQUALS .\n\nLicense Included - The type of license included. Logical operators are EQUALS and NOT_EQUALS . Possible values are: sql-server-enterprise | sql-server-standard | sql-server-web | windows-server-datacenter .\n\nThe following filters and logical operators are supported when the resource type is RDS :\n\nEngine Edition - The edition of the database engine. Logical operator is EQUALS . Possible values are: oracle-ee | oracle-se | oracle-se1 | oracle-se2 .\n\nLicense Pack - The license pack. Logical operator is EQUALS . Possible values are: data guard | diagnostic pack sqlt | tuning pack sqlt | ols | olap .\n\n(structure)\n\nDescribes product information filters.\n\nProductInformationFilterName -> (string)\n\nFilter name.\n\nProductInformationFilterValue -> (list)\n\nFilter value.\n\n(string)\n\nProductInformationFilterComparator -> (string)\n\nLogical operator.\n\nJSON Syntax:\n\n[\n  {\n    \"ResourceType\": \"string\",\n    \"ProductInformationFilterList\": [\n      {\n        \"ProductInformationFilterName\": \"string\",\n        \"ProductInformationFilterValue\": [\"string\", ...],\n        \"ProductInformationFilterComparator\": \"string\"\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--disassociate-when-not-found | --no-disassociate-when-not-found (boolean)\n\nWhen true, disassociates a resource when software is uninstalled.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a license configuration\n\nThe following update-license-configuration example updates the specified license configuration to remove the hard limit.\n\naws license-manager update-license-configuration \\\n    --no-license-count-hard-limit \\\n    --license-configuration-arn arn:aws:license-manager:us-west-2:880185128111:license-configuration:lic-6eb6586f508a786a2ba4f56c1EXAMPLE\n\n\nThis command produces no output.\n\nThe following update-license-configuration example updates the specified license configuration to change its status to DISABLED.\n\naws license-manager update-license-configuration \\\n    --license-configuration-status DISABLED\n    --license-configuration-arn arn:aws:license-manager:us-west-2:880185128111:license-configuration:lic-6eb6586f508a786a2ba4f56c1EXAMPLE\n\n\nThis command produces no output."
    },
    {
      "command_name": "update-license-manager-report-generator",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/update-license-manager-report-generator.html",
      "command_description": "Description\n\nUpdates a report generator.\n\nAfter you make changes to a report generator, it starts generating new reports within 60 minutes of being updated.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-license-manager-report-generator\n--license-manager-report-generator-arn <value>\n--report-generator-name <value>\n--type <value>\n--report-context <value>\n--report-frequency <value>\n--client-token <value>\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--license-manager-report-generator-arn <value>",
        "--report-generator-name <value>",
        "--type <value>",
        "--report-context <value>",
        "--report-frequency <value>",
        "--client-token <value>",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--license-manager-report-generator-arn (string)\n\nAmazon Resource Name (ARN) of the report generator to update.\n\n--report-generator-name (string)\n\nName of the report generator.\n\n--type (list)\n\nType of reports to generate. The following report types are supported:\n\nLicense configuration report - Reports the number and details of consumed licenses for a license configuration.\n\nResource report - Reports the tracked licenses and resource consumption for a license configuration.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  LicenseConfigurationSummaryReport\n  LicenseConfigurationUsageReport\n\n\n--report-context (structure)\n\nThe report context.\n\nlicenseConfigurationArns -> (list)\n\nAmazon Resource Name (ARN) of the license configuration that this generator reports on.\n\n(string)\n\nShorthand Syntax:\n\nlicenseConfigurationArns=string,string\n\n\nJSON Syntax:\n\n{\n  \"licenseConfigurationArns\": [\"string\", ...]\n}\n\n\n--report-frequency (structure)\n\nFrequency by which reports are generated.\n\nvalue -> (integer)\n\nNumber of times within the frequency period that a report is generated. The only supported value is 1 .\n\nperiod -> (string)\n\nTime period between each report. The period can be daily, weekly, or monthly.\n\nShorthand Syntax:\n\nvalue=integer,period=string\n\n\nJSON Syntax:\n\n{\n  \"value\": integer,\n  \"period\": \"DAY\"|\"WEEK\"|\"MONTH\"\n}\n\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--description (string)\n\nDescription of the report generator.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-license-specifications-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/update-license-specifications-for-resource.html",
      "command_description": "Description\n\nAdds or removes the specified license configurations for the specified Amazon Web Services resource.\n\nYou can update the license specifications of AMIs, instances, and hosts. You cannot update the license specifications for launch templates and CloudFormation templates, as they send license configurations to the operation that creates the resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-license-specifications-for-resource\n--resource-arn <value>\n[--add-license-specifications <value>]\n[--remove-license-specifications <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--add-license-specifications <value>]",
        "[--remove-license-specifications <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nAmazon Resource Name (ARN) of the Amazon Web Services resource.\n\n--add-license-specifications (list)\n\nARNs of the license configurations to add.\n\n(structure)\n\nDetails for associating a license configuration with a resource.\n\nLicenseConfigurationArn -> (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\nAmiAssociationScope -> (string)\n\nScope of AMI associations. The possible value is cross-account .\n\nShorthand Syntax:\n\nLicenseConfigurationArn=string,AmiAssociationScope=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"LicenseConfigurationArn\": \"string\",\n    \"AmiAssociationScope\": \"string\"\n  }\n  ...\n]\n\n\n--remove-license-specifications (list)\n\nARNs of the license configurations to remove.\n\n(structure)\n\nDetails for associating a license configuration with a resource.\n\nLicenseConfigurationArn -> (string)\n\nAmazon Resource Name (ARN) of the license configuration.\n\nAmiAssociationScope -> (string)\n\nScope of AMI associations. The possible value is cross-account .\n\nShorthand Syntax:\n\nLicenseConfigurationArn=string,AmiAssociationScope=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"LicenseConfigurationArn\": \"string\",\n    \"AmiAssociationScope\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the license configurations for a resource\n\nThe following update-license-specifications-for-resource example replaces the license configuration associated with the specified Amazon Machine Image (AMI) by removing one license configuration and adding another.\n\naws license-manager update-license-specifications-for-resource \\\n    --resource-arn arn:aws:ec2:us-west-2::image/ami-1234567890abcdef0 \\\n    --remove-license-specifications LicenseConfigurationArn= arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-38b658717b87478aaa7c00883EXAMPLE \\\n    --add-license-specifications LicenseConfigurationArn=arn:aws:license-manager:us-west-2:123456789012:license-configuration:lic-42b6deb06e5399a980d555927EXAMPLE\n\n\nThis command produces no output."
    },
    {
      "command_name": "update-service-settings",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/license-manager/update-service-settings.html",
      "command_description": "Description\n\nUpdates License Manager settings for the current Region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-service-settings\n[--s3-bucket-arn <value>]\n[--sns-topic-arn <value>]\n[--organization-configuration <value>]\n[--enable-cross-accounts-discovery | --no-enable-cross-accounts-discovery]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--s3-bucket-arn <value>]",
        "[--sns-topic-arn <value>]",
        "[--organization-configuration <value>]",
        "[--enable-cross-accounts-discovery | --no-enable-cross-accounts-discovery]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--s3-bucket-arn (string)\n\nAmazon Resource Name (ARN) of the Amazon S3 bucket where the License Manager information is stored.\n\n--sns-topic-arn (string)\n\nAmazon Resource Name (ARN) of the Amazon SNS topic used for License Manager alerts.\n\n--organization-configuration (structure)\n\nEnables integration with Organizations for cross-account discovery.\n\nEnableIntegration -> (boolean)\n\nEnables Organizations integration.\n\nShorthand Syntax:\n\nEnableIntegration=boolean\n\n\nJSON Syntax:\n\n{\n  \"EnableIntegration\": true|false\n}\n\n\n--enable-cross-accounts-discovery | --no-enable-cross-accounts-discovery (boolean)\n\nActivates cross-account discovery.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the License Manager settings\n\nThe following update-service-settings example enables cross-account resource discovery for License Manager in the current AWS Region. The Amazon S3 bucket is the Resource Data Sync required for Systems Manager inventory.\n\naws license-manager update-service-settings \\\n    --organization-configuration EnableIntegration=true \\\n    --enable-cross-accounts-discovery \\\n    --s3-bucket-arn arn:aws:s3:::aws-license-manager-service-abcd1234EXAMPLE\n\n\nThis command produces no output."
    }
  ],
  "service_description": "Description\n\nLicense Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers."
}