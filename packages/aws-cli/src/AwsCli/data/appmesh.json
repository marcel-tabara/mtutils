{
  "service_name": "appmesh",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/index.html",
  "service_commands": [
    {
      "command_name": "create-gateway-route",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/create-gateway-route.html",
      "command_description": "Description\n\nCreates a gateway route.\n\nA gateway route is attached to a virtual gateway and routes traffic to an existing virtual service. If a route matches a request, it can distribute traffic to a target virtual service.\n\nFor more information about gateway routes, see Gateway routes .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-gateway-route\n[--client-token <value>]\n--gateway-route-name <value>\n--mesh-name <value>\n[--mesh-owner <value>]\n--spec <value>\n[--tags <value>]\n--virtual-gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--gateway-route-name <value>",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--spec <value>",
        "[--tags <value>]",
        "--virtual-gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--gateway-route-name (string)\n\nThe name to use for the gateway route.\n\n--mesh-name (string)\n\nThe name of the service mesh to create the gateway route in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes .\n\n--spec (structure)\n\nThe gateway route specification to apply.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name of the gateway route to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nhostname -> (structure)\n\nThe gateway route host name to be matched on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmetadata -> (list)\n\nThe gateway route metadata to be matched on.\n\n(structure)\n\nAn object representing the metadata of the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe criteria for determining a metadata match.\n\nexact -> (string)\n\nThe exact method header to be matched on.\n\nprefix -> (string)\n\nThe specified beginning characters of the method header to be matched on.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on. The first character of the range is included in the range, though the last character is not. For example, if the range specified were 1-100, only values 1-99 would be matched.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe regex used to match the method header.\n\nsuffix -> (string)\n\nThe specified ending characters of the method header to match on.\n\nname -> (string)\n\nA name for the gateway route metadata.\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\npriority -> (integer)\n\nThe ordering of the gateway routes spec.\n\nJSON Syntax:\n\n{\n  \"grpcRoute\": {\n    \"action\": {\n      \"rewrite\": {\n        \"hostname\": {\n          \"defaultTargetHostname\": \"ENABLED\"|\"DISABLED\"\n        }\n      },\n      \"target\": {\n        \"virtualService\": {\n          \"virtualServiceName\": \"string\"\n        }\n      }\n    },\n    \"match\": {\n      \"hostname\": {\n        \"exact\": \"string\",\n        \"suffix\": \"string\"\n      },\n      \"metadata\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"serviceName\": \"string\"\n    }\n  },\n  \"http2Route\": {\n    \"action\": {\n      \"rewrite\": {\n        \"hostname\": {\n          \"defaultTargetHostname\": \"ENABLED\"|\"DISABLED\"\n        },\n        \"path\": {\n          \"exact\": \"string\"\n        },\n        \"prefix\": {\n          \"defaultPrefix\": \"ENABLED\"|\"DISABLED\",\n          \"value\": \"string\"\n        }\n      },\n      \"target\": {\n        \"virtualService\": {\n          \"virtualServiceName\": \"string\"\n        }\n      }\n    },\n    \"match\": {\n      \"headers\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"hostname\": {\n        \"exact\": \"string\",\n        \"suffix\": \"string\"\n      },\n      \"method\": \"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"DELETE\"|\"CONNECT\"|\"OPTIONS\"|\"TRACE\"|\"PATCH\",\n      \"path\": {\n        \"exact\": \"string\",\n        \"regex\": \"string\"\n      },\n      \"prefix\": \"string\",\n      \"queryParameters\": [\n        {\n          \"match\": {\n            \"exact\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ]\n    }\n  },\n  \"httpRoute\": {\n    \"action\": {\n      \"rewrite\": {\n        \"hostname\": {\n          \"defaultTargetHostname\": \"ENABLED\"|\"DISABLED\"\n        },\n        \"path\": {\n          \"exact\": \"string\"\n        },\n        \"prefix\": {\n          \"defaultPrefix\": \"ENABLED\"|\"DISABLED\",\n          \"value\": \"string\"\n        }\n      },\n      \"target\": {\n        \"virtualService\": {\n          \"virtualServiceName\": \"string\"\n        }\n      }\n    },\n    \"match\": {\n      \"headers\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"hostname\": {\n        \"exact\": \"string\",\n        \"suffix\": \"string\"\n      },\n      \"method\": \"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"DELETE\"|\"CONNECT\"|\"OPTIONS\"|\"TRACE\"|\"PATCH\",\n      \"path\": {\n        \"exact\": \"string\",\n        \"regex\": \"string\"\n      },\n      \"prefix\": \"string\",\n      \"queryParameters\": [\n        {\n          \"match\": {\n            \"exact\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ]\n    }\n  },\n  \"priority\": integer\n}\n\n\n--tags (list)\n\nOptional metadata that you can apply to the gateway route to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\n(structure)\n\nOptional metadata that you apply to a resource to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nkey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nvalue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--virtual-gateway-name (string)\n\nThe name of the virtual gateway to associate the gateway route with. If the virtual gateway is in a shared mesh, then you must be the owner of the virtual gateway resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngatewayRoute -> (structure)\n\nThe full description of your gateway route following the create call.\n\ngatewayRouteName -> (string)\n\nThe name of the gateway route.\n\nmeshName -> (string)\n\nThe name of the service mesh that the resource resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the gateway route.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name of the gateway route to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nhostname -> (structure)\n\nThe gateway route host name to be matched on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmetadata -> (list)\n\nThe gateway route metadata to be matched on.\n\n(structure)\n\nAn object representing the metadata of the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe criteria for determining a metadata match.\n\nexact -> (string)\n\nThe exact method header to be matched on.\n\nprefix -> (string)\n\nThe specified beginning characters of the method header to be matched on.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on. The first character of the range is included in the range, though the last character is not. For example, if the range specified were 1-100, only values 1-99 would be matched.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe regex used to match the method header.\n\nsuffix -> (string)\n\nThe specified ending characters of the method header to match on.\n\nname -> (string)\n\nA name for the gateway route metadata.\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\npriority -> (integer)\n\nThe ordering of the gateway routes spec.\n\nstatus -> (structure)\n\nThe status of the gateway route.\n\nstatus -> (string)\n\nThe current status for the gateway route.\n\nvirtualGatewayName -> (string)\n\nThe virtual gateway that the gateway route is associated with."
    },
    {
      "command_name": "create-mesh",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/create-mesh.html",
      "command_description": "Description\n\nCreates a service mesh.\n\nA service mesh is a logical boundary for network traffic between services that are represented by resources within the mesh. After you create your service mesh, you can create virtual services, virtual nodes, virtual routers, and routes to distribute traffic between the applications in your mesh.\n\nFor more information about service meshes, see Service meshes .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-mesh\n[--client-token <value>]\n--mesh-name <value>\n[--spec <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--spec <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name to use for the service mesh.\n\n--spec (structure)\n\nThe service mesh specification to apply.\n\negressFilter -> (structure)\n\nThe egress filter rules for the service mesh.\n\ntype -> (string)\n\nThe egress filter type. By default, the type is DROP_ALL , which allows egress only from virtual nodes to other defined resources in the service mesh (and any traffic to *.amazonaws.com for Amazon Web Services API calls). You can set the egress filter type to ALLOW_ALL to allow egress to any endpoint inside or outside of the service mesh.\n\nShorthand Syntax:\n\negressFilter={type=string}\n\n\nJSON Syntax:\n\n{\n  \"egressFilter\": {\n    \"type\": \"ALLOW_ALL\"|\"DROP_ALL\"\n  }\n}\n\n\n--tags (list)\n\nOptional metadata that you can apply to the service mesh to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\n(structure)\n\nOptional metadata that you apply to a resource to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nkey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nvalue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmesh -> (structure)\n\nThe full description of your service mesh following the create call.\n\nmeshName -> (string)\n\nThe name of the service mesh.\n\nmetadata -> (structure)\n\nThe associated metadata for the service mesh.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe associated specification for the service mesh.\n\negressFilter -> (structure)\n\nThe egress filter rules for the service mesh.\n\ntype -> (string)\n\nThe egress filter type. By default, the type is DROP_ALL , which allows egress only from virtual nodes to other defined resources in the service mesh (and any traffic to *.amazonaws.com for Amazon Web Services API calls). You can set the egress filter type to ALLOW_ALL to allow egress to any endpoint inside or outside of the service mesh.\n\nstatus -> (structure)\n\nThe status of the service mesh.\n\nstatus -> (string)\n\nThe current mesh status.",
      "command_examples": "Examples\n\nExample 1: To create a new service mesh\n\nThe following create-mesh example creates a service mesh.\n\naws appmesh create-mesh \\\n    --mesh-name app1\n\n\nOutput:\n\n{\n    \"mesh\":{\n        \"meshName\":\"app1\",\n        \"metadata\":{\n            \"arn\":\"arn:aws:appmesh:us-east-1:123456789012:mesh/app1\",\n            \"createdAt\":1563809909.282,\n            \"lastUpdatedAt\":1563809909.282,\n            \"uid\":\"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\":1\n        },\n        \"spec\":{},\n        \"status\":{\n            \"status\":\"ACTIVE\"\n        }\n    }\n}\n\n\nExample 2: To create a new service mesh with multiple tags\n\nThe following create-mesh example creates a service mesh with multiple tags.\n\naws appmesh create-mesh \\\n    --mesh-name app2 \\\n    --tags key=key1,value=value1 key=key2,value=value2 key=key3,value=value3\n\n\nOutput:\n\n{\n    \"mesh\":{\n        \"meshName\":\"app2\",\n        \"metadata\":{\n            \"arn\":\"arn:aws:appmesh:us-east-1:123456789012:mesh/app2\",\n            \"createdAt\":1563822121.877,\n            \"lastUpdatedAt\":1563822121.877,\n            \"uid\":\"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\":1\n        },\n        \"spec\":{},\n        \"status\":{\n            \"status\":\"ACTIVE\"\n        }\n    }\n}\n\n\nFor more information, see Service Meshes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "create-route",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/create-route.html",
      "command_description": "Description\n\nCreates a route that is associated with a virtual router.\n\nYou can route several different protocols and define a retry policy for a route. Traffic can be routed to one or more virtual nodes.\n\nFor more information about routes, see Routes .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-route\n[--client-token <value>]\n--mesh-name <value>\n[--mesh-owner <value>]\n--route-name <value>\n--spec <value>\n[--tags <value>]\n--virtual-router-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--route-name <value>",
        "--spec <value>",
        "[--tags <value>]",
        "--virtual-router-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh to create the route in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes .\n\n--route-name (string)\n\nThe name to use for the route.\n\n--spec (structure)\n\nThe route specification to apply.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nmetadata -> (list)\n\nAn object that represents the data to match from the request.\n\n(structure)\n\nAn object that represents the match metadata for the route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the data to match from the request.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nThe name of the route.\n\nmethodName -> (string)\n\nThe method name to match from the request. If you specify a name, you must also specify a serviceName .\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\ngrpcRetryEvents -> (list)\n\nSpecify at least one of the valid values.\n\n(string)\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\npriority -> (integer)\n\nThe priority for the route. Routes are matched based on the specified value, where 0 is the highest priority.\n\ntcpRoute -> (structure)\n\nAn object that represents the specification of a TCP route.\n\naction -> (structure)\n\nThe action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nJSON Syntax:\n\n{\n  \"grpcRoute\": {\n    \"action\": {\n      \"weightedTargets\": [\n        {\n          \"virtualNode\": \"string\",\n          \"weight\": integer\n        }\n        ...\n      ]\n    },\n    \"match\": {\n      \"metadata\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"methodName\": \"string\",\n      \"serviceName\": \"string\"\n    },\n    \"retryPolicy\": {\n      \"grpcRetryEvents\": [\"cancelled\"|\"deadline-exceeded\"|\"internal\"|\"resource-exhausted\"|\"unavailable\", ...],\n      \"httpRetryEvents\": [\"string\", ...],\n      \"maxRetries\": long,\n      \"perRetryTimeout\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"tcpRetryEvents\": [\"connection-error\", ...]\n    },\n    \"timeout\": {\n      \"idle\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"perRequest\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      }\n    }\n  },\n  \"http2Route\": {\n    \"action\": {\n      \"weightedTargets\": [\n        {\n          \"virtualNode\": \"string\",\n          \"weight\": integer\n        }\n        ...\n      ]\n    },\n    \"match\": {\n      \"headers\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"method\": \"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"DELETE\"|\"CONNECT\"|\"OPTIONS\"|\"TRACE\"|\"PATCH\",\n      \"path\": {\n        \"exact\": \"string\",\n        \"regex\": \"string\"\n      },\n      \"prefix\": \"string\",\n      \"queryParameters\": [\n        {\n          \"match\": {\n            \"exact\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"scheme\": \"http\"|\"https\"\n    },\n    \"retryPolicy\": {\n      \"httpRetryEvents\": [\"string\", ...],\n      \"maxRetries\": long,\n      \"perRetryTimeout\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"tcpRetryEvents\": [\"connection-error\", ...]\n    },\n    \"timeout\": {\n      \"idle\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"perRequest\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      }\n    }\n  },\n  \"httpRoute\": {\n    \"action\": {\n      \"weightedTargets\": [\n        {\n          \"virtualNode\": \"string\",\n          \"weight\": integer\n        }\n        ...\n      ]\n    },\n    \"match\": {\n      \"headers\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"method\": \"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"DELETE\"|\"CONNECT\"|\"OPTIONS\"|\"TRACE\"|\"PATCH\",\n      \"path\": {\n        \"exact\": \"string\",\n        \"regex\": \"string\"\n      },\n      \"prefix\": \"string\",\n      \"queryParameters\": [\n        {\n          \"match\": {\n            \"exact\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"scheme\": \"http\"|\"https\"\n    },\n    \"retryPolicy\": {\n      \"httpRetryEvents\": [\"string\", ...],\n      \"maxRetries\": long,\n      \"perRetryTimeout\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"tcpRetryEvents\": [\"connection-error\", ...]\n    },\n    \"timeout\": {\n      \"idle\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"perRequest\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      }\n    }\n  },\n  \"priority\": integer,\n  \"tcpRoute\": {\n    \"action\": {\n      \"weightedTargets\": [\n        {\n          \"virtualNode\": \"string\",\n          \"weight\": integer\n        }\n        ...\n      ]\n    },\n    \"timeout\": {\n      \"idle\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      }\n    }\n  }\n}\n\n\n--tags (list)\n\nOptional metadata that you can apply to the route to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\n(structure)\n\nOptional metadata that you apply to a resource to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nkey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nvalue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--virtual-router-name (string)\n\nThe name of the virtual router in which to create the route. If the virtual router is in a shared mesh, then you must be the owner of the virtual router resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nroute -> (structure)\n\nThe full description of your mesh following the create call.\n\nmeshName -> (string)\n\nThe name of the service mesh that the route resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the route.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nrouteName -> (string)\n\nThe name of the route.\n\nspec -> (structure)\n\nThe specifications of the route.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nmetadata -> (list)\n\nAn object that represents the data to match from the request.\n\n(structure)\n\nAn object that represents the match metadata for the route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the data to match from the request.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nThe name of the route.\n\nmethodName -> (string)\n\nThe method name to match from the request. If you specify a name, you must also specify a serviceName .\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\ngrpcRetryEvents -> (list)\n\nSpecify at least one of the valid values.\n\n(string)\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\npriority -> (integer)\n\nThe priority for the route. Routes are matched based on the specified value, where 0 is the highest priority.\n\ntcpRoute -> (structure)\n\nAn object that represents the specification of a TCP route.\n\naction -> (structure)\n\nThe action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nstatus -> (structure)\n\nThe status of the route.\n\nstatus -> (string)\n\nThe current status for the route.\n\nvirtualRouterName -> (string)\n\nThe virtual router that the route is associated with.",
      "command_examples": "Examples\n\nTo create a new gRPC route\n\nThe following create-route example uses a JSON input file to create a gRPC route. GRPC traffic that has metadata that starts with 123 is routed to a virtual node named serviceBgrpc. If there are specific gRPC, HTTP, or TCP failures when attempting to communicate with the target of the route, the route is retried three times. There is a 15 second delay between each retry attempt.\n\naws appmesh create-route \\\n    --cli-input-json file://create-route-grpc.json\n\n\nContents of create-route-grpc.json:\n\n{\n    \"meshName\" : \"apps\",\n    \"routeName\" : \"grpcRoute\",\n    \"spec\" : {\n       \"grpcRoute\" : {\n          \"action\" : {\n             \"weightedTargets\" : [\n                {\n                   \"virtualNode\" : \"serviceBgrpc\",\n                   \"weight\" : 100\n                }\n             ]\n          },\n          \"match\" : {\n             \"metadata\" : [\n                {\n                   \"invert\" : false,\n                   \"match\" : {\n                      \"prefix\" : \"123\"\n                   },\n                   \"name\" : \"myMetadata\"\n                }\n             ],\n             \"methodName\" : \"GetColor\",\n             \"serviceName\" : \"com.amazonaws.services.ColorService\"\n          },\n          \"retryPolicy\" : {\n             \"grpcRetryEvents\" : [ \"deadline-exceeded\" ],\n             \"httpRetryEvents\" : [ \"server-error\", \"gateway-error\" ],\n             \"maxRetries\" : 3,\n             \"perRetryTimeout\" : {\n                \"unit\" : \"s\",\n                \"value\" : 15\n             },\n             \"tcpRetryEvents\" : [ \"connection-error\" ]\n          }\n       },\n       \"priority\" : 100\n    },\n    \"virtualRouterName\" : \"serviceBgrpc\"\n}\n\n\nOutput:\n\n{\n    \"route\": {\n        \"meshName\": \"apps\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-west-2:123456789012:mesh/apps/virtualRouter/serviceBgrpc/route/grpcRoute\",\n            \"createdAt\": 1572010806.008,\n            \"lastUpdatedAt\": 1572010806.008,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"routeName\": \"grpcRoute\",\n        \"spec\": {\n            \"grpcRoute\": {\n                \"action\": {\n                    \"weightedTargets\": [\n                        {\n                            \"virtualNode\": \"serviceBgrpc\",\n                            \"weight\": 100\n                        }\n                    ]\n                },\n                \"match\": {\n                    \"metadata\": [\n                        {\n                            \"invert\": false,\n                            \"match\": {\n                                \"prefix\": \"123\"\n                            },\n                            \"name\": \"mymetadata\"\n                        }\n                    ],\n                    \"methodName\": \"GetColor\",\n                    \"serviceName\": \"com.amazonaws.services.ColorService\"\n                },\n                \"retryPolicy\": {\n                    \"grpcRetryEvents\": [\n                        \"deadline-exceeded\"\n                    ],\n                    \"httpRetryEvents\": [\n                        \"server-error\",\n                        \"gateway-error\"\n                    ],\n                    \"maxRetries\": 3,\n                    \"perRetryTimeout\": {\n                        \"unit\": \"s\",\n                        \"value\": 15\n                    },\n                    \"tcpRetryEvents\": [\n                        \"connection-error\"\n                    ]\n                }\n            },\n            \"priority\": 100\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualRouterName\": \"serviceBgrpc\"\n    }\n}\n\n\nTo create a new HTTP or HTTP/2 route\n\nThe following create-route example uses a JSON input file to create an HTTP/2 route. To create an HTTP route, replace http2Route with httpRoute under spec. All HTTP/2 traffic addressed to any URL prefix that has a header value that starts with 123 is routed to a virtual node named serviceBhttp2. If there are specific HTTP or TCP failures when attempting to communicate with the target of the route, the route is retried three times. There is a 15 second delay between each retry attempt.\n\naws appmesh create-route \\\n    --cli-input-json file://create-route-http2.json\n\n\nContents of create-route-http2.json:\n\n{\n    \"meshName\": \"apps\",\n    \"routeName\": \"http2Route\",\n    \"spec\": {\n        \"http2Route\": {\n            \"action\": {\n                \"weightedTargets\": [\n                    {\n                        \"virtualNode\": \"serviceBhttp2\",\n                        \"weight\": 100\n                    }\n                ]\n            },\n            \"match\": {\n                \"headers\": [\n                    {\n                        \"invert\": false,\n                        \"match\": {\n                            \"prefix\": \"123\"\n                        },\n                        \"name\": \"clientRequestId\"\n                    }\n                ],\n                \"method\": \"POST\",\n                \"prefix\": \"/\",\n                \"scheme\": \"http\"\n            },\n            \"retryPolicy\": {\n                \"httpRetryEvents\": [\n                    \"server-error\",\n                    \"gateway-error\"\n                ],\n                \"maxRetries\": 3,\n                \"perRetryTimeout\": {\n                    \"unit\": \"s\",\n                    \"value\": 15\n                },\n                \"tcpRetryEvents\": [\n                    \"connection-error\"\n                ]\n            }\n        },\n        \"priority\": 200\n    },\n    \"virtualRouterName\": \"serviceBhttp2\"\n}\n\n\nOutput:\n\n{\n    \"route\": {\n        \"meshName\": \"apps\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-west-2:123456789012:mesh/apps/virtualRouter/serviceBhttp2/route/http2Route\",\n            \"createdAt\": 1572011008.352,\n            \"lastUpdatedAt\": 1572011008.352,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"routeName\": \"http2Route\",\n        \"spec\": {\n            \"http2Route\": {\n                \"action\": {\n                    \"weightedTargets\": [\n                        {\n                            \"virtualNode\": \"serviceBhttp2\",\n                            \"weight\": 100\n                        }\n                    ]\n                },\n                \"match\": {\n                    \"headers\": [\n                        {\n                            \"invert\": false,\n                            \"match\": {\n                                \"prefix\": \"123\"\n                            },\n                            \"name\": \"clientRequestId\"\n                        }\n                    ],\n                    \"method\": \"POST\",\n                    \"prefix\": \"/\",\n                    \"scheme\": \"http\"\n                },\n                \"retryPolicy\": {\n                    \"httpRetryEvents\": [\n                        \"server-error\",\n                        \"gateway-error\"\n                    ],\n                    \"maxRetries\": 3,\n                    \"perRetryTimeout\": {\n                        \"unit\": \"s\",\n                        \"value\": 15\n                    },\n                    \"tcpRetryEvents\": [\n                        \"connection-error\"\n                    ]\n                }\n            },\n            \"priority\": 200\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualRouterName\": \"serviceBhttp2\"\n    }\n}\n\n\nTo create a new TCP route\n\nThe following create-route example uses a JSON input file to create a TCP route. 75 percent of traffic is routed to a virtual node named serviceBtcp, and 25 percent of traffic is routed to a virtual node named serviceBv2tcp. Specifying different weightings for different targets is an effective way to do a deployment of a new version of an application. You can adjust the weights so that eventually, 100 percent of all traffic is routed to a target that has the new version of an application.\n\naws appmesh create-route \\\n    --cli-input-json file://create-route-tcp.json\n\n\nContents of create-route-tcp.json:\n\n{\n    \"meshName\": \"apps\",\n    \"routeName\": \"tcpRoute\",\n    \"spec\": {\n        \"priority\": 300,\n        \"tcpRoute\": {\n            \"action\": {\n                \"weightedTargets\": [\n                    {\n                        \"virtualNode\": \"serviceBtcp\",\n                        \"weight\": 75\n                    },\n                    {\n                        \"virtualNode\": \"serviceBv2tcp\",\n                        \"weight\": 25\n                    }\n                ]\n            }\n        }\n    },\n    \"virtualRouterName\": \"serviceBtcp\"\n}\n\n\nOutput:\n\n{\n    \"route\": {\n        \"meshName\": \"apps\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-west-2:123456789012:mesh/apps/virtualRouter/serviceBtcp/route/tcpRoute\",\n            \"createdAt\": 1572011436.26,\n            \"lastUpdatedAt\": 1572011436.26,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"routeName\": \"tcpRoute\",\n        \"spec\": {\n            \"priority\": 300,\n            \"tcpRoute\": {\n                \"action\": {\n                    \"weightedTargets\": [\n                        {\n                            \"virtualNode\": \"serviceBtcp\",\n                            \"weight\": 75\n                        },\n                        {\n                            \"virtualNode\": \"serviceBv2tcp\",\n                            \"weight\": 25\n                        }\n                    ]\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualRouterName\": \"serviceBtcp\"\n    }\n}\n\n\nFor more information, see Routes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "create-virtual-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/create-virtual-gateway.html",
      "command_description": "Description\n\nCreates a virtual gateway.\n\nA virtual gateway allows resources outside your mesh to communicate to resources that are inside your mesh. The virtual gateway represents an Envoy proxy running in an Amazon ECS task, in a Kubernetes service, or on an Amazon EC2 instance. Unlike a virtual node, which represents an Envoy running with an application, a virtual gateway represents Envoy deployed by itself.\n\nFor more information about virtual gateways, see Virtual gateways .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-virtual-gateway\n[--client-token <value>]\n--mesh-name <value>\n[--mesh-owner <value>]\n--spec <value>\n[--tags <value>]\n--virtual-gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--spec <value>",
        "[--tags <value>]",
        "--virtual-gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh to create the virtual gateway in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes .\n\n--spec (structure)\n\nThe virtual gateway specification to apply.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlisteners -> (list)\n\nThe listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual gateway.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the virtual gateway listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring the listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping. Specify one protocol.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for the listener.\n\ncertificate -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an Certificate Manager certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nAn object that represents logging information.\n\naccessLog -> (structure)\n\nThe access log configuration.\n\nfile -> (structure)\n\nThe file object to send virtual gateway access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nJSON Syntax:\n\n{\n  \"backendDefaults\": {\n    \"clientPolicy\": {\n      \"tls\": {\n        \"certificate\": {\n          \"file\": {\n            \"certificateChain\": \"string\",\n            \"privateKey\": \"string\"\n          },\n          \"sds\": {\n            \"secretName\": \"string\"\n          }\n        },\n        \"enforce\": true|false,\n        \"ports\": [integer, ...],\n        \"validation\": {\n          \"subjectAlternativeNames\": {\n            \"match\": {\n              \"exact\": [\"string\", ...]\n            }\n          },\n          \"trust\": {\n            \"acm\": {\n              \"certificateAuthorityArns\": [\"string\", ...]\n            },\n            \"file\": {\n              \"certificateChain\": \"string\"\n            },\n            \"sds\": {\n              \"secretName\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"listeners\": [\n    {\n      \"connectionPool\": {\n        \"grpc\": {\n          \"maxRequests\": integer\n        },\n        \"http\": {\n          \"maxConnections\": integer,\n          \"maxPendingRequests\": integer\n        },\n        \"http2\": {\n          \"maxRequests\": integer\n        }\n      },\n      \"healthCheck\": {\n        \"healthyThreshold\": integer,\n        \"intervalMillis\": long,\n        \"path\": \"string\",\n        \"port\": integer,\n        \"protocol\": \"http\"|\"http2\"|\"grpc\",\n        \"timeoutMillis\": long,\n        \"unhealthyThreshold\": integer\n      },\n      \"portMapping\": {\n        \"port\": integer,\n        \"protocol\": \"http\"|\"http2\"|\"grpc\"\n      },\n      \"tls\": {\n        \"certificate\": {\n          \"acm\": {\n            \"certificateArn\": \"string\"\n          },\n          \"file\": {\n            \"certificateChain\": \"string\",\n            \"privateKey\": \"string\"\n          },\n          \"sds\": {\n            \"secretName\": \"string\"\n          }\n        },\n        \"mode\": \"STRICT\"|\"PERMISSIVE\"|\"DISABLED\",\n        \"validation\": {\n          \"subjectAlternativeNames\": {\n            \"match\": {\n              \"exact\": [\"string\", ...]\n            }\n          },\n          \"trust\": {\n            \"file\": {\n              \"certificateChain\": \"string\"\n            },\n            \"sds\": {\n              \"secretName\": \"string\"\n            }\n          }\n        }\n      }\n    }\n    ...\n  ],\n  \"logging\": {\n    \"accessLog\": {\n      \"file\": {\n        \"path\": \"string\"\n      }\n    }\n  }\n}\n\n\n--tags (list)\n\nOptional metadata that you can apply to the virtual gateway to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\n(structure)\n\nOptional metadata that you apply to a resource to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nkey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nvalue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--virtual-gateway-name (string)\n\nThe name to use for the virtual gateway.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualGateway -> (structure)\n\nThe full description of your virtual gateway following the create call.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual gateway resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual gateway.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlisteners -> (list)\n\nThe listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual gateway.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the virtual gateway listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring the listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping. Specify one protocol.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for the listener.\n\ncertificate -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an Certificate Manager certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nAn object that represents logging information.\n\naccessLog -> (structure)\n\nThe access log configuration.\n\nfile -> (structure)\n\nThe file object to send virtual gateway access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nstatus -> (structure)\n\nThe current status of the virtual gateway.\n\nstatus -> (string)\n\nThe current status.\n\nvirtualGatewayName -> (string)\n\nThe name of the virtual gateway."
    },
    {
      "command_name": "create-virtual-node",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/create-virtual-node.html",
      "command_description": "Description\n\nCreates a virtual node within a service mesh.\n\nA virtual node acts as a logical pointer to a particular task group, such as an Amazon ECS service or a Kubernetes deployment. When you create a virtual node, you can specify the service discovery information for your task group, and whether the proxy running in a task group will communicate with other proxies using Transport Layer Security (TLS).\n\nYou define a listener for any inbound traffic that your virtual node expects. Any virtual service that your virtual node expects to communicate to is specified as a backend .\n\nThe response metadata for your new virtual node contains the arn that is associated with the virtual node. Set this value to the full ARN; for example, arn:aws:appmesh:us-west-2:123456789012:myMesh/default/virtualNode/myApp ) as the APPMESH_RESOURCE_ARN environment variable for your task group’s Envoy proxy container in your task definition or pod spec. This is then mapped to the node.id and node.cluster Envoy parameters.\n\nNote\n\nBy default, App Mesh uses the name of the resource you specified in APPMESH_RESOURCE_ARN when Envoy is referring to itself in metrics and traces. You can override this behavior by setting the APPMESH_RESOURCE_CLUSTER environment variable with your own name.\n\nFor more information about virtual nodes, see Virtual nodes . You must be using 1.15.0 or later of the Envoy image when setting these variables. For more information aboutApp Mesh Envoy variables, see Envoy image in the AWS App Mesh User Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-virtual-node\n[--client-token <value>]\n--mesh-name <value>\n[--mesh-owner <value>]\n--spec <value>\n[--tags <value>]\n--virtual-node-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--spec <value>",
        "[--tags <value>]",
        "--virtual-node-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh to create the virtual node in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes .\n\n--spec (structure)\n\nThe virtual node specification to apply.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nbackends -> (list)\n\nThe backends that the virtual node is expected to send outbound traffic to.\n\n(structure)\n\nAn object that represents the backends that a virtual node is expected to send outbound traffic to.\n\nvirtualService -> (structure)\n\nSpecifies a virtual service to use as a backend.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents the client policy for a backend.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that is acting as a virtual node backend.\n\nlisteners -> (list)\n\nThe listener that the virtual node is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual node.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\ntcp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.\n\noutlierDetection -> (structure)\n\nThe outlier detection information for the listener.\n\nbaseEjectionDuration -> (structure)\n\nThe base amount of time for which a host is ejected.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ninterval -> (structure)\n\nThe time interval between ejection sweep analysis.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nmaxEjectionPercent -> (integer)\n\nMaximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.\n\nmaxServerErrors -> (long)\n\nNumber of consecutive 5xx errors required for ejection.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\ntimeout -> (structure)\n\nAn object that represents timeouts for different protocols.\n\ngrpc -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2 -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for a listener.\n\ncertificate -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an AWS Certicate Manager (ACM) certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nThe inbound and outbound access logging information for the virtual node.\n\naccessLog -> (structure)\n\nThe access log configuration for a virtual node.\n\nfile -> (structure)\n\nThe file object to send virtual node access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nNote\n\nThe Envoy process must have write permissions to the path that you specify here. Otherwise, Envoy fails to bootstrap properly.\n\nserviceDiscovery -> (structure)\n\nThe service discovery information for the virtual node. If your virtual node does not expect ingress traffic, you can omit this parameter. If you specify a listener , then you must specify service discovery information.\n\nawsCloudMap -> (structure)\n\nSpecifies any Cloud Map information for the virtual node.\n\nattributes -> (list)\n\nA string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.\n\n(structure)\n\nAn object that represents the Cloud Map attribute information for your virtual node.\n\nNote\n\nAWS Cloud Map is not available in the eu-south-1 Region.\n\nkey -> (string)\n\nThe name of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nvalue -> (string)\n\nThe value of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nnamespaceName -> (string)\n\nThe name of the Cloud Map namespace to use.\n\nserviceName -> (string)\n\nThe name of the Cloud Map service to use.\n\ndns -> (structure)\n\nSpecifies the DNS information for the virtual node.\n\nhostname -> (string)\n\nSpecifies the DNS service discovery hostname for the virtual node.\n\nresponseType -> (string)\n\nSpecifies the DNS response type for the virtual node.\n\nJSON Syntax:\n\n{\n  \"backendDefaults\": {\n    \"clientPolicy\": {\n      \"tls\": {\n        \"certificate\": {\n          \"file\": {\n            \"certificateChain\": \"string\",\n            \"privateKey\": \"string\"\n          },\n          \"sds\": {\n            \"secretName\": \"string\"\n          }\n        },\n        \"enforce\": true|false,\n        \"ports\": [integer, ...],\n        \"validation\": {\n          \"subjectAlternativeNames\": {\n            \"match\": {\n              \"exact\": [\"string\", ...]\n            }\n          },\n          \"trust\": {\n            \"acm\": {\n              \"certificateAuthorityArns\": [\"string\", ...]\n            },\n            \"file\": {\n              \"certificateChain\": \"string\"\n            },\n            \"sds\": {\n              \"secretName\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"backends\": [\n    {\n      \"virtualService\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"string\",\n                \"privateKey\": \"string\"\n              },\n              \"sds\": {\n                \"secretName\": \"string\"\n              }\n            },\n            \"enforce\": true|false,\n            \"ports\": [integer, ...],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\"string\", ...]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\"string\", ...]\n                },\n                \"file\": {\n                  \"certificateChain\": \"string\"\n                },\n                \"sds\": {\n                  \"secretName\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"virtualServiceName\": \"string\"\n      }\n    }\n    ...\n  ],\n  \"listeners\": [\n    {\n      \"connectionPool\": {\n        \"grpc\": {\n          \"maxRequests\": integer\n        },\n        \"http\": {\n          \"maxConnections\": integer,\n          \"maxPendingRequests\": integer\n        },\n        \"http2\": {\n          \"maxRequests\": integer\n        },\n        \"tcp\": {\n          \"maxConnections\": integer\n        }\n      },\n      \"healthCheck\": {\n        \"healthyThreshold\": integer,\n        \"intervalMillis\": long,\n        \"path\": \"string\",\n        \"port\": integer,\n        \"protocol\": \"http\"|\"tcp\"|\"http2\"|\"grpc\",\n        \"timeoutMillis\": long,\n        \"unhealthyThreshold\": integer\n      },\n      \"outlierDetection\": {\n        \"baseEjectionDuration\": {\n          \"unit\": \"s\"|\"ms\",\n          \"value\": long\n        },\n        \"interval\": {\n          \"unit\": \"s\"|\"ms\",\n          \"value\": long\n        },\n        \"maxEjectionPercent\": integer,\n        \"maxServerErrors\": long\n      },\n      \"portMapping\": {\n        \"port\": integer,\n        \"protocol\": \"http\"|\"tcp\"|\"http2\"|\"grpc\"\n      },\n      \"timeout\": {\n        \"grpc\": {\n          \"idle\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          },\n          \"perRequest\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          }\n        },\n        \"http\": {\n          \"idle\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          },\n          \"perRequest\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          }\n        },\n        \"http2\": {\n          \"idle\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          },\n          \"perRequest\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          }\n        },\n        \"tcp\": {\n          \"idle\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          }\n        }\n      },\n      \"tls\": {\n        \"certificate\": {\n          \"acm\": {\n            \"certificateArn\": \"string\"\n          },\n          \"file\": {\n            \"certificateChain\": \"string\",\n            \"privateKey\": \"string\"\n          },\n          \"sds\": {\n            \"secretName\": \"string\"\n          }\n        },\n        \"mode\": \"STRICT\"|\"PERMISSIVE\"|\"DISABLED\",\n        \"validation\": {\n          \"subjectAlternativeNames\": {\n            \"match\": {\n              \"exact\": [\"string\", ...]\n            }\n          },\n          \"trust\": {\n            \"file\": {\n              \"certificateChain\": \"string\"\n            },\n            \"sds\": {\n              \"secretName\": \"string\"\n            }\n          }\n        }\n      }\n    }\n    ...\n  ],\n  \"logging\": {\n    \"accessLog\": {\n      \"file\": {\n        \"path\": \"string\"\n      }\n    }\n  },\n  \"serviceDiscovery\": {\n    \"awsCloudMap\": {\n      \"attributes\": [\n        {\n          \"key\": \"string\",\n          \"value\": \"string\"\n        }\n        ...\n      ],\n      \"namespaceName\": \"string\",\n      \"serviceName\": \"string\"\n    },\n    \"dns\": {\n      \"hostname\": \"string\",\n      \"responseType\": \"LOADBALANCER\"|\"ENDPOINTS\"\n    }\n  }\n}\n\n\n--tags (list)\n\nOptional metadata that you can apply to the virtual node to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\n(structure)\n\nOptional metadata that you apply to a resource to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nkey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nvalue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--virtual-node-name (string)\n\nThe name to use for the virtual node.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualNode -> (structure)\n\nThe full description of your virtual node following the create call.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual node resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the virtual node.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual node.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nbackends -> (list)\n\nThe backends that the virtual node is expected to send outbound traffic to.\n\n(structure)\n\nAn object that represents the backends that a virtual node is expected to send outbound traffic to.\n\nvirtualService -> (structure)\n\nSpecifies a virtual service to use as a backend.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents the client policy for a backend.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that is acting as a virtual node backend.\n\nlisteners -> (list)\n\nThe listener that the virtual node is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual node.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\ntcp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.\n\noutlierDetection -> (structure)\n\nThe outlier detection information for the listener.\n\nbaseEjectionDuration -> (structure)\n\nThe base amount of time for which a host is ejected.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ninterval -> (structure)\n\nThe time interval between ejection sweep analysis.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nmaxEjectionPercent -> (integer)\n\nMaximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.\n\nmaxServerErrors -> (long)\n\nNumber of consecutive 5xx errors required for ejection.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\ntimeout -> (structure)\n\nAn object that represents timeouts for different protocols.\n\ngrpc -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2 -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for a listener.\n\ncertificate -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an AWS Certicate Manager (ACM) certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nThe inbound and outbound access logging information for the virtual node.\n\naccessLog -> (structure)\n\nThe access log configuration for a virtual node.\n\nfile -> (structure)\n\nThe file object to send virtual node access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nNote\n\nThe Envoy process must have write permissions to the path that you specify here. Otherwise, Envoy fails to bootstrap properly.\n\nserviceDiscovery -> (structure)\n\nThe service discovery information for the virtual node. If your virtual node does not expect ingress traffic, you can omit this parameter. If you specify a listener , then you must specify service discovery information.\n\nawsCloudMap -> (structure)\n\nSpecifies any Cloud Map information for the virtual node.\n\nattributes -> (list)\n\nA string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.\n\n(structure)\n\nAn object that represents the Cloud Map attribute information for your virtual node.\n\nNote\n\nAWS Cloud Map is not available in the eu-south-1 Region.\n\nkey -> (string)\n\nThe name of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nvalue -> (string)\n\nThe value of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nnamespaceName -> (string)\n\nThe name of the Cloud Map namespace to use.\n\nserviceName -> (string)\n\nThe name of the Cloud Map service to use.\n\ndns -> (structure)\n\nSpecifies the DNS information for the virtual node.\n\nhostname -> (string)\n\nSpecifies the DNS service discovery hostname for the virtual node.\n\nresponseType -> (string)\n\nSpecifies the DNS response type for the virtual node.\n\nstatus -> (structure)\n\nThe current status for the virtual node.\n\nstatus -> (string)\n\nThe current status of the virtual node.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node.",
      "command_examples": "Examples\n\nExample 1: To create a new virtual node that uses DNS for discovery\n\nThe following create-virtual-node example uses a JSON input file to create a virtual node that uses DNS for service discovery.\n\naws appmesh create-virtual-node \\\n    --cli-input-json file://create-virtual-node-dns.json\n\n\nContents of create-virtual-node-dns.json:\n\n{\n    \"meshName\": \"app1\",\n    \"spec\": {\n        \"listeners\": [\n            {\n                \"portMapping\": {\n                    \"port\": 80,\n                    \"protocol\": \"http\"\n                }\n            }\n        ],\n        \"serviceDiscovery\": {\n            \"dns\": {\n                \"hostname\": \"serviceBv1.svc.cluster.local\"\n            }\n        }\n    },\n    \"virtualNodeName\": \"vnServiceBv1\"\n}\n\n\nOutput:\n\n{\n    \"virtualNode\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/vnServiceBv1\",\n            \"createdAt\": 1563810019.874,\n            \"lastUpdatedAt\": 1563810019.874,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"spec\": {\n            \"listeners\": [\n                {\n                    \"portMapping\": {\n                        \"port\": 80,\n                        \"protocol\": \"http\"\n                    }\n                }\n            ],\n            \"serviceDiscovery\": {\n                \"dns\": {\n                    \"hostname\": \"serviceBv1.svc.cluster.local\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualNodeName\": \"vnServiceBv1\"\n    }\n}\n\n\nExample 2: To create a new virtual node that uses AWS Cloud Map for discovery\n\nThe following create-virtual-node example uses a JSON input file to create a virtual node that uses AWS Cloud Map for service discovery.\n\naws appmesh create-virtual-node \\\n    --cli-input-json file://create-virtual-node-cloud-map.json\n\n\nContents of create-virtual-node-cloud-map.json:\n\n{\n    \"meshName\": \"app1\",\n    \"spec\": {\n        \"backends\": [\n            {\n                \"virtualService\": {\n                    \"virtualServiceName\": \"serviceA.svc.cluster.local\"\n                }\n            }\n        ],\n        \"listeners\": [\n            {\n                \"portMapping\": {\n                    \"port\": 80,\n                    \"protocol\": \"http\"\n                }\n            }\n        ],\n        \"serviceDiscovery\": {\n            \"awsCloudMap\": {\n                \"attributes\": [\n                    {\n                        \"key\": \"Environment\",\n                        \"value\": \"Testing\"\n                    }\n                ],\n                \"namespaceName\": \"namespace1\",\n                \"serviceName\": \"serviceA\"\n            }\n        }\n    },\n    \"virtualNodeName\": \"vnServiceA\"\n}\n\n\nOutput:\n\n{\n    \"virtualNode\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/vnServiceA\",\n            \"createdAt\": 1563810859.465,\n            \"lastUpdatedAt\": 1563810859.465,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"spec\": {\n            \"backends\": [\n                {\n                    \"virtualService\": {\n                        \"virtualServiceName\": \"serviceA.svc.cluster.local\"\n                    }\n                }\n            ],\n            \"listeners\": [\n                {\n                    \"portMapping\": {\n                        \"port\": 80,\n                        \"protocol\": \"http\"\n                    }\n                }\n            ],\n            \"serviceDiscovery\": {\n                \"awsCloudMap\": {\n                    \"attributes\": [\n                        {\n                            \"key\": \"Environment\",\n                            \"value\": \"Testing\"\n                        }\n                    ],\n                    \"namespaceName\": \"namespace1\",\n                    \"serviceName\": \"serviceA\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualNodeName\": \"vnServiceA\"\n    }\n}\n\n\nFor more information, see Virtual Nodes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "create-virtual-router",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/create-virtual-router.html",
      "command_description": "Description\n\nCreates a virtual router within a service mesh.\n\nSpecify a listener for any inbound traffic that your virtual router receives. Create a virtual router for each protocol and port that you need to route. Virtual routers handle traffic for one or more virtual services within your mesh. After you create your virtual router, create and associate routes for your virtual router that direct incoming requests to different virtual nodes.\n\nFor more information about virtual routers, see Virtual routers .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-virtual-router\n[--client-token <value>]\n--mesh-name <value>\n[--mesh-owner <value>]\n--spec <value>\n[--tags <value>]\n--virtual-router-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--spec <value>",
        "[--tags <value>]",
        "--virtual-router-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh to create the virtual router in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes .\n\n--spec (structure)\n\nThe virtual router specification to apply.\n\nlisteners -> (list)\n\nThe listeners that the virtual router is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a virtual router listener.\n\nportMapping -> (structure)\n\nAn object that represents a port mapping.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\nJSON Syntax:\n\n{\n  \"listeners\": [\n    {\n      \"portMapping\": {\n        \"port\": integer,\n        \"protocol\": \"http\"|\"tcp\"|\"http2\"|\"grpc\"\n      }\n    }\n    ...\n  ]\n}\n\n\n--tags (list)\n\nOptional metadata that you can apply to the virtual router to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\n(structure)\n\nOptional metadata that you apply to a resource to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nkey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nvalue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--virtual-router-name (string)\n\nThe name to use for the virtual router.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualRouter -> (structure)\n\nThe full description of your virtual router following the create call.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual router resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the virtual router.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual router.\n\nlisteners -> (list)\n\nThe listeners that the virtual router is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a virtual router listener.\n\nportMapping -> (structure)\n\nAn object that represents a port mapping.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\nstatus -> (structure)\n\nThe current status of the virtual router.\n\nstatus -> (string)\n\nThe current status of the virtual router.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router.",
      "command_examples": "Examples\n\nTo create a new virtual router\n\nThe following create-virtual-router example uses a JSON input file to create a virtual router with a listener for HTTP using port 80.\n\naws appmesh create-virtual-router \\\n    --cli-input-json file://create-virtual-router.json\n\n\nContents of create-virtual-router.json:\n\n{\n    \"meshName\": \"app1\",\n    \"spec\": {\n        \"listeners\": [\n            {\n                \"portMapping\": {\n                    \"port\": 80,\n                    \"protocol\": \"http\"\n                }\n            }\n        ]\n    },\n    \"virtualRouterName\": \"vrServiceB\"\n}\n\n\nOutput:\n\n{\n    \"virtualRouter\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB\",\n            \"createdAt\": 1563810546.59,\n            \"lastUpdatedAt\": 1563810546.59,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"spec\": {\n            \"listeners\": [\n                {\n                    \"portMapping\": {\n                        \"port\": 80,\n                        \"protocol\": \"http\"\n                    }\n                }\n            ]\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualRouterName\": \"vrServiceB\"\n    }\n}\n\n\nFor more information, see Virtual Routers in the AWS App Mesh User Guide."
    },
    {
      "command_name": "create-virtual-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/create-virtual-service.html",
      "command_description": "Description\n\nCreates a virtual service within a service mesh.\n\nA virtual service is an abstraction of a real service that is provided by a virtual node directly or indirectly by means of a virtual router. Dependent services call your virtual service by its virtualServiceName , and those requests are routed to the virtual node or virtual router that is specified as the provider for the virtual service.\n\nFor more information about virtual services, see Virtual services .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-virtual-service\n[--client-token <value>]\n--mesh-name <value>\n[--mesh-owner <value>]\n--spec <value>\n[--tags <value>]\n--virtual-service-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--spec <value>",
        "[--tags <value>]",
        "--virtual-service-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh to create the virtual service in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see Working with shared meshes .\n\n--spec (structure)\n\nThe virtual service specification to apply.\n\nprovider -> (structure)\n\nThe App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.\n\nvirtualNode -> (structure)\n\nThe virtual node associated with a virtual service.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node that is acting as a service provider.\n\nvirtualRouter -> (structure)\n\nThe virtual router associated with a virtual service.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router that is acting as a service provider.\n\nShorthand Syntax:\n\nprovider={virtualNode={virtualNodeName=string},virtualRouter={virtualRouterName=string}}\n\n\nJSON Syntax:\n\n{\n  \"provider\": {\n    \"virtualNode\": {\n      \"virtualNodeName\": \"string\"\n    },\n    \"virtualRouter\": {\n      \"virtualRouterName\": \"string\"\n    }\n  }\n}\n\n\n--tags (list)\n\nOptional metadata that you can apply to the virtual service to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\n(structure)\n\nOptional metadata that you apply to a resource to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nkey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nvalue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--virtual-service-name (string)\n\nThe name to use for the virtual service.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualService -> (structure)\n\nThe full description of your virtual service following the create call.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual service resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual service.\n\nprovider -> (structure)\n\nThe App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.\n\nvirtualNode -> (structure)\n\nThe virtual node associated with a virtual service.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node that is acting as a service provider.\n\nvirtualRouter -> (structure)\n\nThe virtual router associated with a virtual service.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router that is acting as a service provider.\n\nstatus -> (structure)\n\nThe current status of the virtual service.\n\nstatus -> (string)\n\nThe current status of the virtual service.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service.",
      "command_examples": "Examples\n\nExample 1: To create a new virtual service with a virtual node provider\n\nThe following create-virtual-service example uses a JSON input file to create a virtual service with a virtual node provider.\n\naws appmesh create-virtual-service \\\n    --cli-input-json file://create-virtual-service-virtual-node.json\n\n\nContents of create-virtual-service-virtual-node.json:\n\n{\n    \"meshName\": \"app1\",\n    \"spec\": {\n        \"provider\": {\n            \"virtualNode\": {\n                \"virtualNodeName\": \"vnServiceA\"\n            }\n        }\n    },\n    \"virtualServiceName\": \"serviceA.svc.cluster.local\"\n}\n\n\nOutput:\n\n{\n    \"virtualService\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualService/serviceA.svc.cluster.local\",\n            \"createdAt\": 1563810859.474,\n            \"lastUpdatedAt\": 1563810967.179,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 2\n        },\n        \"spec\": {\n            \"provider\": {\n                \"virtualNode\": {\n                    \"virtualNodeName\": \"vnServiceA\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualServiceName\": \"serviceA.svc.cluster.local\"\n    }\n}\n\n\nFor more information, see Virtual Node in the AWS App Mesh User Guide.\n\nExample 2: To create a new virtual service with a virtual router provider\n\nThe following create-virtual-service example uses a JSON input file to create a virtual service with a virtual router provider.\n\naws appmesh create-virtual-service \\\n    --cli-input-json file://create-virtual-service-virtual-router.json\n\n\nContents of create-virtual-service-virtual-router.json:\n\n{\n    \"meshName\": \"app1\",\n    \"spec\": {\n        \"provider\": {\n            \"virtualRouter\": {\n                \"virtualRouterName\": \"vrServiceB\"\n            }\n        }\n    },\n    \"virtualServiceName\": \"serviceB.svc.cluster.local\"\n}\n\n\nOutput:\n\n{\n    \"virtualService\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualService/serviceB.svc.cluster.local\",\n            \"createdAt\": 1563908363.999,\n            \"lastUpdatedAt\": 1563908363.999,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"spec\": {\n            \"provider\": {\n                \"virtualRouter\": {\n                    \"virtualRouterName\": \"vrServiceB\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualServiceName\": \"serviceB.svc.cluster.local\"\n    }\n}\n\n\nFor more information, see `Virtual Services<https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_services.html>`__ in the AWS App Mesh User Guide"
    },
    {
      "command_name": "delete-gateway-route",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/delete-gateway-route.html",
      "command_description": "Description\n\nDeletes an existing gateway route.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-gateway-route\n--gateway-route-name <value>\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--gateway-route-name <value>",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--gateway-route-name (string)\n\nThe name of the gateway route to delete.\n\n--mesh-name (string)\n\nThe name of the service mesh to delete the gateway route from.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-gateway-name (string)\n\nThe name of the virtual gateway to delete the route from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngatewayRoute -> (structure)\n\nThe gateway route that was deleted.\n\ngatewayRouteName -> (string)\n\nThe name of the gateway route.\n\nmeshName -> (string)\n\nThe name of the service mesh that the resource resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the gateway route.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name of the gateway route to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nhostname -> (structure)\n\nThe gateway route host name to be matched on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmetadata -> (list)\n\nThe gateway route metadata to be matched on.\n\n(structure)\n\nAn object representing the metadata of the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe criteria for determining a metadata match.\n\nexact -> (string)\n\nThe exact method header to be matched on.\n\nprefix -> (string)\n\nThe specified beginning characters of the method header to be matched on.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on. The first character of the range is included in the range, though the last character is not. For example, if the range specified were 1-100, only values 1-99 would be matched.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe regex used to match the method header.\n\nsuffix -> (string)\n\nThe specified ending characters of the method header to match on.\n\nname -> (string)\n\nA name for the gateway route metadata.\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\npriority -> (integer)\n\nThe ordering of the gateway routes spec.\n\nstatus -> (structure)\n\nThe status of the gateway route.\n\nstatus -> (string)\n\nThe current status for the gateway route.\n\nvirtualGatewayName -> (string)\n\nThe virtual gateway that the gateway route is associated with."
    },
    {
      "command_name": "delete-mesh",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/delete-mesh.html",
      "command_description": "Description\n\nDeletes an existing service mesh.\n\nYou must delete all resources (virtual services, routes, virtual routers, and virtual nodes) in the service mesh before you can delete the mesh itself.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-mesh\n--mesh-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmesh -> (structure)\n\nThe service mesh that was deleted.\n\nmeshName -> (string)\n\nThe name of the service mesh.\n\nmetadata -> (structure)\n\nThe associated metadata for the service mesh.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe associated specification for the service mesh.\n\negressFilter -> (structure)\n\nThe egress filter rules for the service mesh.\n\ntype -> (string)\n\nThe egress filter type. By default, the type is DROP_ALL , which allows egress only from virtual nodes to other defined resources in the service mesh (and any traffic to *.amazonaws.com for Amazon Web Services API calls). You can set the egress filter type to ALLOW_ALL to allow egress to any endpoint inside or outside of the service mesh.\n\nstatus -> (structure)\n\nThe status of the service mesh.\n\nstatus -> (string)\n\nThe current mesh status.",
      "command_examples": "Examples\n\nTo delete a service mesh\n\nThe following delete-mesh example deletes the specified service mesh.\n\naws appmesh delete-mesh \\\n    --mesh-name app1\n\n\nOutput:\n\n{\n    \"mesh\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1\",\n            \"createdAt\": 1563809909.282,\n            \"lastUpdatedAt\": 1563824981.248,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 2\n        },\n        \"spec\": {\n            \"egressFilter\": {\n                \"type\": \"ALLOW_ALL\"\n            }\n        },\n        \"status\": {\n            \"status\": \"DELETED\"\n        }\n    }\n}\n\n\nFor more information, see Service Meshes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "delete-route",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/delete-route.html",
      "command_description": "Description\n\nDeletes an existing route.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-route\n--mesh-name <value>\n[--mesh-owner <value>]\n--route-name <value>\n--virtual-router-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--route-name <value>",
        "--virtual-router-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to delete the route in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--route-name (string)\n\nThe name of the route to delete.\n\n--virtual-router-name (string)\n\nThe name of the virtual router to delete the route in.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nroute -> (structure)\n\nThe route that was deleted.\n\nmeshName -> (string)\n\nThe name of the service mesh that the route resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the route.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nrouteName -> (string)\n\nThe name of the route.\n\nspec -> (structure)\n\nThe specifications of the route.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nmetadata -> (list)\n\nAn object that represents the data to match from the request.\n\n(structure)\n\nAn object that represents the match metadata for the route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the data to match from the request.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nThe name of the route.\n\nmethodName -> (string)\n\nThe method name to match from the request. If you specify a name, you must also specify a serviceName .\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\ngrpcRetryEvents -> (list)\n\nSpecify at least one of the valid values.\n\n(string)\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\npriority -> (integer)\n\nThe priority for the route. Routes are matched based on the specified value, where 0 is the highest priority.\n\ntcpRoute -> (structure)\n\nAn object that represents the specification of a TCP route.\n\naction -> (structure)\n\nThe action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nstatus -> (structure)\n\nThe status of the route.\n\nstatus -> (string)\n\nThe current status for the route.\n\nvirtualRouterName -> (string)\n\nThe virtual router that the route is associated with.",
      "command_examples": "Examples\n\nTo delete a route\n\nThe following delete-route example deletes the specified route.\n\naws appmesh delete-route \\\n    --mesh-name app1 \\\n    --virtual-router-name vrServiceB \\\n    --route-name toVnServiceB-weighted\n\n\nOutput:\n\n{\n    \"route\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB/route/toVnServiceB-weighted\",\n            \"createdAt\": 1563811384.015,\n            \"lastUpdatedAt\": 1563823915.936,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 3\n        },\n        \"routeName\": \"toVnServiceB-weighted\",\n        \"spec\": {\n            \"httpRoute\": {\n                \"action\": {\n                    \"weightedTargets\": [\n                        {\n                            \"virtualNode\": \"vnServiceBv1\",\n                            \"weight\": 80\n                        },\n                        {\n                            \"virtualNode\": \"vnServiceBv2\",\n                            \"weight\": 20\n                        }\n                    ]\n                },\n                \"match\": {\n                    \"prefix\": \"/\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"DELETED\"\n        },\n        \"virtualRouterName\": \"vrServiceB\"\n    }\n}\n\n\nFor more information, see Routes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "delete-virtual-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/delete-virtual-gateway.html",
      "command_description": "Description\n\nDeletes an existing virtual gateway. You cannot delete a virtual gateway if any gateway routes are associated to it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-virtual-gateway\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to delete the virtual gateway from.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-gateway-name (string)\n\nThe name of the virtual gateway to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualGateway -> (structure)\n\nThe virtual gateway that was deleted.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual gateway resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual gateway.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlisteners -> (list)\n\nThe listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual gateway.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the virtual gateway listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring the listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping. Specify one protocol.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for the listener.\n\ncertificate -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an Certificate Manager certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nAn object that represents logging information.\n\naccessLog -> (structure)\n\nThe access log configuration.\n\nfile -> (structure)\n\nThe file object to send virtual gateway access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nstatus -> (structure)\n\nThe current status of the virtual gateway.\n\nstatus -> (string)\n\nThe current status.\n\nvirtualGatewayName -> (string)\n\nThe name of the virtual gateway."
    },
    {
      "command_name": "delete-virtual-node",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/delete-virtual-node.html",
      "command_description": "Description\n\nDeletes an existing virtual node.\n\nYou must delete any virtual services that list a virtual node as a service provider before you can delete the virtual node itself.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-virtual-node\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-node-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-node-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to delete the virtual node in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-node-name (string)\n\nThe name of the virtual node to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualNode -> (structure)\n\nThe virtual node that was deleted.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual node resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the virtual node.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual node.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nbackends -> (list)\n\nThe backends that the virtual node is expected to send outbound traffic to.\n\n(structure)\n\nAn object that represents the backends that a virtual node is expected to send outbound traffic to.\n\nvirtualService -> (structure)\n\nSpecifies a virtual service to use as a backend.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents the client policy for a backend.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that is acting as a virtual node backend.\n\nlisteners -> (list)\n\nThe listener that the virtual node is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual node.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\ntcp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.\n\noutlierDetection -> (structure)\n\nThe outlier detection information for the listener.\n\nbaseEjectionDuration -> (structure)\n\nThe base amount of time for which a host is ejected.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ninterval -> (structure)\n\nThe time interval between ejection sweep analysis.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nmaxEjectionPercent -> (integer)\n\nMaximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.\n\nmaxServerErrors -> (long)\n\nNumber of consecutive 5xx errors required for ejection.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\ntimeout -> (structure)\n\nAn object that represents timeouts for different protocols.\n\ngrpc -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2 -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for a listener.\n\ncertificate -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an AWS Certicate Manager (ACM) certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nThe inbound and outbound access logging information for the virtual node.\n\naccessLog -> (structure)\n\nThe access log configuration for a virtual node.\n\nfile -> (structure)\n\nThe file object to send virtual node access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nNote\n\nThe Envoy process must have write permissions to the path that you specify here. Otherwise, Envoy fails to bootstrap properly.\n\nserviceDiscovery -> (structure)\n\nThe service discovery information for the virtual node. If your virtual node does not expect ingress traffic, you can omit this parameter. If you specify a listener , then you must specify service discovery information.\n\nawsCloudMap -> (structure)\n\nSpecifies any Cloud Map information for the virtual node.\n\nattributes -> (list)\n\nA string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.\n\n(structure)\n\nAn object that represents the Cloud Map attribute information for your virtual node.\n\nNote\n\nAWS Cloud Map is not available in the eu-south-1 Region.\n\nkey -> (string)\n\nThe name of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nvalue -> (string)\n\nThe value of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nnamespaceName -> (string)\n\nThe name of the Cloud Map namespace to use.\n\nserviceName -> (string)\n\nThe name of the Cloud Map service to use.\n\ndns -> (structure)\n\nSpecifies the DNS information for the virtual node.\n\nhostname -> (string)\n\nSpecifies the DNS service discovery hostname for the virtual node.\n\nresponseType -> (string)\n\nSpecifies the DNS response type for the virtual node.\n\nstatus -> (structure)\n\nThe current status for the virtual node.\n\nstatus -> (string)\n\nThe current status of the virtual node.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node.",
      "command_examples": "Examples\n\nTo delete a virtual node\n\nThe following delete-virtual-node example deletes the specified virtual node.\n\naws appmesh delete-virtual-node \\\n    --mesh-name app1 \\\n    --virtual-node-name vnServiceBv2\n\n\nOutput:\n\n{\n    \"virtualNode\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/vnServiceBv2\",\n            \"createdAt\": 1563810117.297,\n            \"lastUpdatedAt\": 1563824700.678,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 2\n        },\n        \"spec\": {\n            \"backends\": [],\n            \"listeners\": [\n                {\n                    \"portMapping\": {\n                        \"port\": 80,\n                        \"protocol\": \"http\"\n                    }\n                }\n            ],\n            \"serviceDiscovery\": {\n                \"dns\": {\n                    \"hostname\": \"serviceBv2.svc.cluster.local\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"DELETED\"\n        },\n        \"virtualNodeName\": \"vnServiceBv2\"\n    }\n}\n\n\nFor more information, see Virtual Nodes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "delete-virtual-router",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/delete-virtual-router.html",
      "command_description": "Description\n\nDeletes an existing virtual router.\n\nYou must delete any routes associated with the virtual router before you can delete the router itself.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-virtual-router\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-router-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-router-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to delete the virtual router in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-router-name (string)\n\nThe name of the virtual router to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualRouter -> (structure)\n\nThe virtual router that was deleted.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual router resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the virtual router.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual router.\n\nlisteners -> (list)\n\nThe listeners that the virtual router is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a virtual router listener.\n\nportMapping -> (structure)\n\nAn object that represents a port mapping.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\nstatus -> (structure)\n\nThe current status of the virtual router.\n\nstatus -> (string)\n\nThe current status of the virtual router.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router.",
      "command_examples": "Examples\n\nTo delete a virtual router\n\nThe following delete-virtual-router example deletes the specified virtual router.\n\naws appmesh delete-virtual-router \\\n    --mesh-name app1 \\\n    --virtual-router-name vrServiceB\n\n\nOutput:\n\n{\n    \"virtualRouter\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB\",\n            \"createdAt\": 1563810546.59,\n            \"lastUpdatedAt\": 1563824253.467,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 3\n        },\n        \"spec\": {\n            \"listeners\": [\n                {\n                    \"portMapping\": {\n                        \"port\": 80,\n                        \"protocol\": \"http\"\n                    }\n                }\n            ]\n        },\n        \"status\": {\n            \"status\": \"DELETED\"\n        },\n        \"virtualRouterName\": \"vrServiceB\"\n    }\n}\n\n\nFor more information, see Virtual Routers in the AWS App Mesh User Guide."
    },
    {
      "command_name": "delete-virtual-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/delete-virtual-service.html",
      "command_description": "Description\n\nDeletes an existing virtual service.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-virtual-service\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-service-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-service-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to delete the virtual service in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-service-name (string)\n\nThe name of the virtual service to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualService -> (structure)\n\nThe virtual service that was deleted.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual service resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual service.\n\nprovider -> (structure)\n\nThe App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.\n\nvirtualNode -> (structure)\n\nThe virtual node associated with a virtual service.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node that is acting as a service provider.\n\nvirtualRouter -> (structure)\n\nThe virtual router associated with a virtual service.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router that is acting as a service provider.\n\nstatus -> (structure)\n\nThe current status of the virtual service.\n\nstatus -> (string)\n\nThe current status of the virtual service.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service.",
      "command_examples": "Examples\n\nTo delete a virtual service\n\nThe following delete-virtual-service example deletes the specified virtual service.\n\naws appmesh delete-virtual-service \\\n    --mesh-name app1 \\\n    --virtual-service-name serviceB.svc.cluster.local\n\n\nOutput:\n\n{\n    \"virtualService\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualService/serviceB.svc.cluster.local\",\n            \"createdAt\": 1563908363.999,\n            \"lastUpdatedAt\": 1563913940.866,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 3\n        },\n        \"spec\": {},\n        \"status\": {\n            \"status\": \"DELETED\"\n        },\n        \"virtualServiceName\": \"serviceB.svc.cluster.local\"\n    }\n}\n\n\nFor more information, see Virtual Service in the AWS App Mesh User Guide."
    },
    {
      "command_name": "describe-gateway-route",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/describe-gateway-route.html",
      "command_description": "Description\n\nDescribes an existing gateway route.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-gateway-route\n--gateway-route-name <value>\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--gateway-route-name <value>",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--gateway-route-name (string)\n\nThe name of the gateway route to describe.\n\n--mesh-name (string)\n\nThe name of the service mesh that the gateway route resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-gateway-name (string)\n\nThe name of the virtual gateway that the gateway route is associated with.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngatewayRoute -> (structure)\n\nThe full description of your gateway route.\n\ngatewayRouteName -> (string)\n\nThe name of the gateway route.\n\nmeshName -> (string)\n\nThe name of the service mesh that the resource resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the gateway route.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name of the gateway route to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nhostname -> (structure)\n\nThe gateway route host name to be matched on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmetadata -> (list)\n\nThe gateway route metadata to be matched on.\n\n(structure)\n\nAn object representing the metadata of the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe criteria for determining a metadata match.\n\nexact -> (string)\n\nThe exact method header to be matched on.\n\nprefix -> (string)\n\nThe specified beginning characters of the method header to be matched on.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on. The first character of the range is included in the range, though the last character is not. For example, if the range specified were 1-100, only values 1-99 would be matched.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe regex used to match the method header.\n\nsuffix -> (string)\n\nThe specified ending characters of the method header to match on.\n\nname -> (string)\n\nA name for the gateway route metadata.\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\npriority -> (integer)\n\nThe ordering of the gateway routes spec.\n\nstatus -> (structure)\n\nThe status of the gateway route.\n\nstatus -> (string)\n\nThe current status for the gateway route.\n\nvirtualGatewayName -> (string)\n\nThe virtual gateway that the gateway route is associated with."
    },
    {
      "command_name": "describe-mesh",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/describe-mesh.html",
      "command_description": "Description\n\nDescribes an existing service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-mesh\n--mesh-name <value>\n[--mesh-owner <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to describe.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmesh -> (structure)\n\nThe full description of your service mesh.\n\nmeshName -> (string)\n\nThe name of the service mesh.\n\nmetadata -> (structure)\n\nThe associated metadata for the service mesh.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe associated specification for the service mesh.\n\negressFilter -> (structure)\n\nThe egress filter rules for the service mesh.\n\ntype -> (string)\n\nThe egress filter type. By default, the type is DROP_ALL , which allows egress only from virtual nodes to other defined resources in the service mesh (and any traffic to *.amazonaws.com for Amazon Web Services API calls). You can set the egress filter type to ALLOW_ALL to allow egress to any endpoint inside or outside of the service mesh.\n\nstatus -> (structure)\n\nThe status of the service mesh.\n\nstatus -> (string)\n\nThe current mesh status.",
      "command_examples": "Examples\n\nTo describe a service mesh\n\nThe following describe-mesh example returns details about the specified service mesh.\n\naws appmesh describe-mesh \\\n    --mesh-name app1\n\n\nOutput:\n\n{\n    \"mesh\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1\",\n            \"createdAt\": 1563809909.282,\n            \"lastUpdatedAt\": 1563809909.282,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"spec\": {},\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        }\n    }\n}\n\n\nFor more information, see Service Meshes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "describe-route",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/describe-route.html",
      "command_description": "Description\n\nDescribes an existing route.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-route\n--mesh-name <value>\n[--mesh-owner <value>]\n--route-name <value>\n--virtual-router-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--route-name <value>",
        "--virtual-router-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh that the route resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--route-name (string)\n\nThe name of the route to describe.\n\n--virtual-router-name (string)\n\nThe name of the virtual router that the route is associated with.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nroute -> (structure)\n\nThe full description of your route.\n\nmeshName -> (string)\n\nThe name of the service mesh that the route resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the route.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nrouteName -> (string)\n\nThe name of the route.\n\nspec -> (structure)\n\nThe specifications of the route.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nmetadata -> (list)\n\nAn object that represents the data to match from the request.\n\n(structure)\n\nAn object that represents the match metadata for the route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the data to match from the request.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nThe name of the route.\n\nmethodName -> (string)\n\nThe method name to match from the request. If you specify a name, you must also specify a serviceName .\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\ngrpcRetryEvents -> (list)\n\nSpecify at least one of the valid values.\n\n(string)\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\npriority -> (integer)\n\nThe priority for the route. Routes are matched based on the specified value, where 0 is the highest priority.\n\ntcpRoute -> (structure)\n\nAn object that represents the specification of a TCP route.\n\naction -> (structure)\n\nThe action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nstatus -> (structure)\n\nThe status of the route.\n\nstatus -> (string)\n\nThe current status for the route.\n\nvirtualRouterName -> (string)\n\nThe virtual router that the route is associated with.",
      "command_examples": "Examples\n\nTo describe a route\n\nThe following describe-route example returns details about the specified route.\n\naws appmesh describe-route \\\n    --mesh-name app1 \\\n    --virtual-router-name vrServiceB \\\n    --route-name toVnServiceB-weighted\n\n\nOutput:\n\n{\n    \"route\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB/route/toVnServiceB-weighted\",\n            \"createdAt\": 1563811384.015,\n            \"lastUpdatedAt\": 1563811384.015,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"routeName\": \"toVnServiceB-weighted\",\n        \"spec\": {\n            \"httpRoute\": {\n                \"action\": {\n                    \"weightedTargets\": [\n                        {\n                            \"virtualNode\": \"vnServiceBv1\",\n                            \"weight\": 90\n                        },\n                        {\n                            \"virtualNode\": \"vnServiceBv2\",\n                            \"weight\": 10\n                        }\n                    ]\n                },\n                \"match\": {\n                    \"prefix\": \"/\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualRouterName\": \"vrServiceB\"\n    }\n}\n\n\nFor more information, see Routes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "describe-virtual-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/describe-virtual-gateway.html",
      "command_description": "Description\n\nDescribes an existing virtual gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-virtual-gateway\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh that the gateway route resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-gateway-name (string)\n\nThe name of the virtual gateway to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualGateway -> (structure)\n\nThe full description of your virtual gateway.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual gateway resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual gateway.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlisteners -> (list)\n\nThe listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual gateway.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the virtual gateway listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring the listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping. Specify one protocol.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for the listener.\n\ncertificate -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an Certificate Manager certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nAn object that represents logging information.\n\naccessLog -> (structure)\n\nThe access log configuration.\n\nfile -> (structure)\n\nThe file object to send virtual gateway access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nstatus -> (structure)\n\nThe current status of the virtual gateway.\n\nstatus -> (string)\n\nThe current status.\n\nvirtualGatewayName -> (string)\n\nThe name of the virtual gateway."
    },
    {
      "command_name": "describe-virtual-node",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/describe-virtual-node.html",
      "command_description": "Description\n\nDescribes an existing virtual node.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-virtual-node\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-node-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-node-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh that the virtual node resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-node-name (string)\n\nThe name of the virtual node to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualNode -> (structure)\n\nThe full description of your virtual node.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual node resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the virtual node.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual node.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nbackends -> (list)\n\nThe backends that the virtual node is expected to send outbound traffic to.\n\n(structure)\n\nAn object that represents the backends that a virtual node is expected to send outbound traffic to.\n\nvirtualService -> (structure)\n\nSpecifies a virtual service to use as a backend.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents the client policy for a backend.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that is acting as a virtual node backend.\n\nlisteners -> (list)\n\nThe listener that the virtual node is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual node.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\ntcp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.\n\noutlierDetection -> (structure)\n\nThe outlier detection information for the listener.\n\nbaseEjectionDuration -> (structure)\n\nThe base amount of time for which a host is ejected.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ninterval -> (structure)\n\nThe time interval between ejection sweep analysis.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nmaxEjectionPercent -> (integer)\n\nMaximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.\n\nmaxServerErrors -> (long)\n\nNumber of consecutive 5xx errors required for ejection.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\ntimeout -> (structure)\n\nAn object that represents timeouts for different protocols.\n\ngrpc -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2 -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for a listener.\n\ncertificate -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an AWS Certicate Manager (ACM) certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nThe inbound and outbound access logging information for the virtual node.\n\naccessLog -> (structure)\n\nThe access log configuration for a virtual node.\n\nfile -> (structure)\n\nThe file object to send virtual node access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nNote\n\nThe Envoy process must have write permissions to the path that you specify here. Otherwise, Envoy fails to bootstrap properly.\n\nserviceDiscovery -> (structure)\n\nThe service discovery information for the virtual node. If your virtual node does not expect ingress traffic, you can omit this parameter. If you specify a listener , then you must specify service discovery information.\n\nawsCloudMap -> (structure)\n\nSpecifies any Cloud Map information for the virtual node.\n\nattributes -> (list)\n\nA string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.\n\n(structure)\n\nAn object that represents the Cloud Map attribute information for your virtual node.\n\nNote\n\nAWS Cloud Map is not available in the eu-south-1 Region.\n\nkey -> (string)\n\nThe name of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nvalue -> (string)\n\nThe value of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nnamespaceName -> (string)\n\nThe name of the Cloud Map namespace to use.\n\nserviceName -> (string)\n\nThe name of the Cloud Map service to use.\n\ndns -> (structure)\n\nSpecifies the DNS information for the virtual node.\n\nhostname -> (string)\n\nSpecifies the DNS service discovery hostname for the virtual node.\n\nresponseType -> (string)\n\nSpecifies the DNS response type for the virtual node.\n\nstatus -> (structure)\n\nThe current status for the virtual node.\n\nstatus -> (string)\n\nThe current status of the virtual node.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node.",
      "command_examples": "Examples\n\nTo describe a virtual node\n\nThe following describe-virtual-node example returns details about the specified virtual node.\n\naws appmesh describe-virtual-node \\\n    --mesh-name app1 \\\n    --virtual-node-name vnServiceBv1\n\n\nOutput:\n\n{\n    \"virtualNode\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/vnServiceBv1\",\n            \"createdAt\": 1563810019.874,\n            \"lastUpdatedAt\": 1563810019.874,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"spec\": {\n            \"backends\": [],\n            \"listeners\": [\n                {\n                    \"portMapping\": {\n                        \"port\": 80,\n                        \"protocol\": \"http\"\n                    }\n                }\n            ],\n            \"serviceDiscovery\": {\n                \"dns\": {\n                    \"hostname\": \"serviceBv1.svc.cluster.local\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualNodeName\": \"vnServiceBv1\"\n    }\n}\n\n\nFor more information, see Virtual Nodes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "describe-virtual-router",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/describe-virtual-router.html",
      "command_description": "Description\n\nDescribes an existing virtual router.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-virtual-router\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-router-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-router-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh that the virtual router resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-router-name (string)\n\nThe name of the virtual router to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualRouter -> (structure)\n\nThe full description of your virtual router.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual router resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the virtual router.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual router.\n\nlisteners -> (list)\n\nThe listeners that the virtual router is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a virtual router listener.\n\nportMapping -> (structure)\n\nAn object that represents a port mapping.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\nstatus -> (structure)\n\nThe current status of the virtual router.\n\nstatus -> (string)\n\nThe current status of the virtual router.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router.",
      "command_examples": "Examples\n\nTo describe a virtual router\n\nThe following describe-virtual-router example returns details about the specified virtual router.\n\naws appmesh describe-virtual-router \\\n    --mesh-name app1 \\\n    --virtual-router-name vrServiceB\n\n\nOutput:\n\n{\n    \"virtualRouter\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB\",\n            \"createdAt\": 1563810546.59,\n            \"lastUpdatedAt\": 1563810546.59,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"spec\": {\n            \"listeners\": [\n                {\n                    \"portMapping\": {\n                        \"port\": 80,\n                        \"protocol\": \"http\"\n                    }\n                }\n            ]\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualRouterName\": \"vrServiceB\"\n    }\n}\n\n\nFor more information, see Virtual Routers in the AWS App Mesh User Guide."
    },
    {
      "command_name": "describe-virtual-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/describe-virtual-service.html",
      "command_description": "Description\n\nDescribes an existing virtual service.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-virtual-service\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-service-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-service-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh that the virtual service resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-service-name (string)\n\nThe name of the virtual service to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualService -> (structure)\n\nThe full description of your virtual service.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual service resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual service.\n\nprovider -> (structure)\n\nThe App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.\n\nvirtualNode -> (structure)\n\nThe virtual node associated with a virtual service.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node that is acting as a service provider.\n\nvirtualRouter -> (structure)\n\nThe virtual router associated with a virtual service.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router that is acting as a service provider.\n\nstatus -> (structure)\n\nThe current status of the virtual service.\n\nstatus -> (string)\n\nThe current status of the virtual service.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service.",
      "command_examples": "Examples\n\nTo describe a virtual service\n\nThe following describe-virtual-service example returns details about the specified virtual service.\n\naws appmesh describe-virtual-service \\\n    --mesh-name app1 \\\n    --virtual-service-name serviceB.svc.cluster.local\n\n\nOutput:\n\n{\n    \"virtualService\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualService/serviceB.svc.cluster.local\",\n            \"createdAt\": 1563908363.999,\n            \"lastUpdatedAt\": 1563908363.999,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 1\n        },\n        \"spec\": {\n            \"provider\": {\n                \"virtualRouter\": {\n                    \"virtualRouterName\": \"vrServiceB\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualServiceName\": \"serviceB.svc.cluster.local\"\n    }\n}\n\n\nFor more information, see Virtual Services in the AWS App Mesh User Guide."
    },
    {
      "command_name": "list-gateway-routes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/list-gateway-routes.html",
      "command_description": "Description\n\nReturns a list of existing gateway routes that are associated to a virtual gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-gateway-routes is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: gatewayRoutes",
      "command_synopsis": "Synopsis\n  list-gateway-routes\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to list gateway routes in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-gateway-name (string)\n\nThe name of the virtual gateway to list gateway routes in.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngatewayRoutes -> (list)\n\nThe list of existing gateway routes for the specified service mesh and virtual gateway.\n\n(structure)\n\nAn object that represents a gateway route returned by a list operation.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the gateway route.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\ngatewayRouteName -> (string)\n\nThe name of the gateway route.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the resource resides in.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nvirtualGatewayName -> (string)\n\nThe virtual gateway that the gateway route is associated with.\n\nnextToken -> (string)\n\nThe nextToken value to include in a future ListGatewayRoutes request. When the results of a ListGatewayRoutes request exceed limit , you can use this value to retrieve the next page of results. This value is null when there are no more results to return."
    },
    {
      "command_name": "list-meshes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/list-meshes.html",
      "command_description": "Description\n\nReturns a list of existing service meshes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-meshes is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: meshes",
      "command_synopsis": "Synopsis\n  list-meshes\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmeshes -> (list)\n\nThe list of existing service meshes.\n\n(structure)\n\nAn object that represents a service mesh returned by a list operation.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) of the service mesh.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshName -> (string)\n\nThe name of the service mesh.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nnextToken -> (string)\n\nThe nextToken value to include in a future ListMeshes request. When the results of a ListMeshes request exceed limit , you can use this value to retrieve the next page of results. This value is null when there are no more results to return.",
      "command_examples": "Examples\n\nTo list service meshes\n\nThe following list-meshes example lists all of the service meshes in the current AWS Region.\n\naws appmesh list-meshes\n\n\nOutput:\n\n{\n    \"meshes\": [\n        {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1\",\n            \"meshName\": \"app1\"\n        }\n    ]\n}\n\n\nFor more information, see Service Meshes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "list-routes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/list-routes.html",
      "command_description": "Description\n\nReturns a list of existing routes in a service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-routes is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: routes",
      "command_synopsis": "Synopsis\n  list-routes\n--mesh-name <value>\n[--mesh-owner <value>]\n--virtual-router-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--virtual-router-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to list routes in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--virtual-router-name (string)\n\nThe name of the virtual router to list routes in.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nThe nextToken value to include in a future ListRoutes request. When the results of a ListRoutes request exceed limit , you can use this value to retrieve the next page of results. This value is null when there are no more results to return.\n\nroutes -> (list)\n\nThe list of existing routes for the specified service mesh and virtual router.\n\n(structure)\n\nAn object that represents a route returned by a list operation.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the route.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the route resides in.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nrouteName -> (string)\n\nThe name of the route.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nvirtualRouterName -> (string)\n\nThe virtual router that the route is associated with.",
      "command_examples": "Examples\n\nTo list routes\n\nThe following list-routes example lists all of the routes for the specified virtual router.\n\naws appmesh list-routes \\\n    --mesh-name app1 \\\n    --virtual-router-name vrServiceB\n\n\nOutput:\n\n{\n    \"routes\": [\n        {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB/route/toVnServiceB\",\n            \"meshName\": \"app1\",\n            \"routeName\": \"toVnServiceB-weighted\",\n            \"virtualRouterName\": \"vrServiceB\"\n        }\n    ]\n}\n\n\nFor more information, see Routes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/list-tags-for-resource.html",
      "command_description": "Description\n\nList the tags for an App Mesh resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-tags-for-resource is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: tags",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the resource to list the tags for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nThe nextToken value to include in a future ListTagsForResource request. When the results of a ListTagsForResource request exceed limit , you can use this value to retrieve the next page of results. This value is null when there are no more results to return.\n\ntags -> (list)\n\nThe tags for the resource.\n\n(structure)\n\nOptional metadata that you apply to a resource to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nkey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nvalue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).",
      "command_examples": "Examples\n\nTo list tags for a resource\n\nThe following list-tags-for-resource example lists all of the tags assigned to the specified resource.\n\naws appmesh list-tags-for-resource \\\n    --resource-arn arn:aws:appmesh:us-east-1:123456789012:mesh/app1\n\n\nOutput:\n\n{\n    \"tags\": [\n        {\n            \"key\": \"key1\",\n            \"value\": \"value1\"\n        },\n        {\n            \"key\": \"key2\",\n            \"value\": \"value2\"\n        },\n        {\n            \"key\": \"key3\",\n            \"value\": \"value3\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-virtual-gateways",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/list-virtual-gateways.html",
      "command_description": "Description\n\nReturns a list of existing virtual gateways in a service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-virtual-gateways is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: virtualGateways",
      "command_synopsis": "Synopsis\n  list-virtual-gateways\n--mesh-name <value>\n[--mesh-owner <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to list virtual gateways in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nThe nextToken value to include in a future ListVirtualGateways request. When the results of a ListVirtualGateways request exceed limit , you can use this value to retrieve the next page of results. This value is null when there are no more results to return.\n\nvirtualGateways -> (list)\n\nThe list of existing virtual gateways for the specified service mesh.\n\n(structure)\n\nAn object that represents a virtual gateway returned by a list operation.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the resource resides in.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nvirtualGatewayName -> (string)\n\nThe name of the resource."
    },
    {
      "command_name": "list-virtual-nodes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/list-virtual-nodes.html",
      "command_description": "Description\n\nReturns a list of existing virtual nodes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-virtual-nodes is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: virtualNodes",
      "command_synopsis": "Synopsis\n  list-virtual-nodes\n--mesh-name <value>\n[--mesh-owner <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to list virtual nodes in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nThe nextToken value to include in a future ListVirtualNodes request. When the results of a ListVirtualNodes request exceed limit , you can use this value to retrieve the next page of results. This value is null when there are no more results to return.\n\nvirtualNodes -> (list)\n\nThe list of existing virtual nodes for the specified service mesh.\n\n(structure)\n\nAn object that represents a virtual node returned by a list operation.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the virtual node.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual node resides in.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node.",
      "command_examples": "Examples\n\nTo list virtual nodes\n\nThe following list-virtual-nodes example lists all of the virtual nodes in the specified service mesh.\n\naws appmesh list-virtual-nodes \\\n    --mesh-name app1\n\n\nOutput:\n\n{\n    \"virtualNodes\": [\n        {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/vnServiceBv1\",\n            \"meshName\": \"app1\",\n            \"virtualNodeName\": \"vnServiceBv1\"\n        },\n        {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/vnServiceBv2\",\n            \"meshName\": \"app1\",\n            \"virtualNodeName\": \"vnServiceBv2\"\n        }\n    ]\n}\n\n\nFor more information, see Virtual Nodes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "list-virtual-routers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/list-virtual-routers.html",
      "command_description": "Description\n\nReturns a list of existing virtual routers in a service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-virtual-routers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: virtualRouters",
      "command_synopsis": "Synopsis\n  list-virtual-routers\n--mesh-name <value>\n[--mesh-owner <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to list virtual routers in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nThe nextToken value to include in a future ListVirtualRouters request. When the results of a ListVirtualRouters request exceed limit , you can use this value to retrieve the next page of results. This value is null when there are no more results to return.\n\nvirtualRouters -> (list)\n\nThe list of existing virtual routers for the specified service mesh.\n\n(structure)\n\nAn object that represents a virtual router returned by a list operation.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the virtual router.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual router resides in.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router.",
      "command_examples": "Examples\n\nTo list virtual routers\n\nThe following list-virtual-routers example lists all of the virtual routers in the specified service mesh.\n\naws appmesh list-virtual-routers \\\n    --mesh-name app1\n\n\nOutput:\n\n{\n    \"virtualRouters\": [\n        {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB\",\n            \"meshName\": \"app1\",\n            \"virtualRouterName\": \"vrServiceB\"\n        }\n    ]\n}\n\n\nFor more information, see Virtual Routers in the AWS App Mesh User Guide."
    },
    {
      "command_name": "list-virtual-services",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/list-virtual-services.html",
      "command_description": "Description\n\nReturns a list of existing virtual services in a service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-virtual-services is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: virtualServices",
      "command_synopsis": "Synopsis\n  list-virtual-services\n--mesh-name <value>\n[--mesh-owner <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mesh-name (string)\n\nThe name of the service mesh to list virtual services in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nThe nextToken value to include in a future ListVirtualServices request. When the results of a ListVirtualServices request exceed limit , you can use this value to retrieve the next page of results. This value is null when there are no more results to return.\n\nvirtualServices -> (list)\n\nThe list of existing virtual services for the specified service mesh.\n\n(structure)\n\nAn object that represents a virtual service returned by a list operation.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the virtual service.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual service resides in.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service.",
      "command_examples": "Examples\n\nTo list virtual services\n\nThe following list-virtual-services example lists all of the virtual services in the specified service mesh.\n\naws appmesh list-virtual-services \\\n    --mesh-name app1\n\n\nOutput:\n\n{\n    \"virtualServices\": [\n        {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualService/serviceA.svc.cluster.local\",\n            \"meshName\": \"app1\",\n            \"virtualServiceName\": \"serviceA.svc.cluster.local\"\n        },\n        {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualService/serviceB.svc.cluster.local\",\n            \"meshName\": \"app1\",\n            \"virtualServiceName\": \"serviceB.svc.cluster.local\"\n        }\n    ]\n}\n\n\nFor more information, see Virtual Services in the AWS App Mesh User Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/tag-resource.html",
      "command_description": "Description\n\nAssociates the specified tags to a resource with the specified resourceArn . If existing tags on a resource aren’t specified in the request parameters, they aren’t changed. When a resource is deleted, the tags associated with that resource are also deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource to add tags to.\n\n--tags (list)\n\nThe tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\n(structure)\n\nOptional metadata that you apply to a resource to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\n\nkey -> (string)\n\nOne part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.\n\nvalue -> (string)\n\nThe optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo tag a resource\n\nThe following tag-resource example adds the tag key1 with the value value1 to the specified resource.\n\naws appmesh tag-resource \\\n    --resource-arn arn:aws:appmesh:us-east-1:123456789012:mesh/app1 \\\n    --tags key=key1,value=value1\n\n\nThis command produces no output."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/untag-resource.html",
      "command_description": "Description\n\nDeletes specified tags from a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource to delete tags from.\n\n--tag-keys (list)\n\nThe keys of the tags to be removed.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo untag a resource\n\nThe following untag-resource example removes a tag with the key key1 from the specified resource.\n\naws appmesh untag-resource \\\n    --resource-arn arn:aws:appmesh:us-east-1:123456789012:mesh/app1 \\\n    --tag-keys key1\n\n\nThis command produces no output."
    },
    {
      "command_name": "update-gateway-route",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/update-gateway-route.html",
      "command_description": "Description\n\nUpdates an existing gateway route that is associated to a specified virtual gateway in a service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-gateway-route\n[--client-token <value>]\n--gateway-route-name <value>\n--mesh-name <value>\n[--mesh-owner <value>]\n--spec <value>\n--virtual-gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--gateway-route-name <value>",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--spec <value>",
        "--virtual-gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--gateway-route-name (string)\n\nThe name of the gateway route to update.\n\n--mesh-name (string)\n\nThe name of the service mesh that the gateway route resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--spec (structure)\n\nThe new gateway route specification to apply. This overwrites the existing data.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name of the gateway route to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nhostname -> (structure)\n\nThe gateway route host name to be matched on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmetadata -> (list)\n\nThe gateway route metadata to be matched on.\n\n(structure)\n\nAn object representing the metadata of the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe criteria for determining a metadata match.\n\nexact -> (string)\n\nThe exact method header to be matched on.\n\nprefix -> (string)\n\nThe specified beginning characters of the method header to be matched on.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on. The first character of the range is included in the range, though the last character is not. For example, if the range specified were 1-100, only values 1-99 would be matched.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe regex used to match the method header.\n\nsuffix -> (string)\n\nThe specified ending characters of the method header to match on.\n\nname -> (string)\n\nA name for the gateway route metadata.\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\npriority -> (integer)\n\nThe ordering of the gateway routes spec.\n\nJSON Syntax:\n\n{\n  \"grpcRoute\": {\n    \"action\": {\n      \"rewrite\": {\n        \"hostname\": {\n          \"defaultTargetHostname\": \"ENABLED\"|\"DISABLED\"\n        }\n      },\n      \"target\": {\n        \"virtualService\": {\n          \"virtualServiceName\": \"string\"\n        }\n      }\n    },\n    \"match\": {\n      \"hostname\": {\n        \"exact\": \"string\",\n        \"suffix\": \"string\"\n      },\n      \"metadata\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"serviceName\": \"string\"\n    }\n  },\n  \"http2Route\": {\n    \"action\": {\n      \"rewrite\": {\n        \"hostname\": {\n          \"defaultTargetHostname\": \"ENABLED\"|\"DISABLED\"\n        },\n        \"path\": {\n          \"exact\": \"string\"\n        },\n        \"prefix\": {\n          \"defaultPrefix\": \"ENABLED\"|\"DISABLED\",\n          \"value\": \"string\"\n        }\n      },\n      \"target\": {\n        \"virtualService\": {\n          \"virtualServiceName\": \"string\"\n        }\n      }\n    },\n    \"match\": {\n      \"headers\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"hostname\": {\n        \"exact\": \"string\",\n        \"suffix\": \"string\"\n      },\n      \"method\": \"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"DELETE\"|\"CONNECT\"|\"OPTIONS\"|\"TRACE\"|\"PATCH\",\n      \"path\": {\n        \"exact\": \"string\",\n        \"regex\": \"string\"\n      },\n      \"prefix\": \"string\",\n      \"queryParameters\": [\n        {\n          \"match\": {\n            \"exact\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ]\n    }\n  },\n  \"httpRoute\": {\n    \"action\": {\n      \"rewrite\": {\n        \"hostname\": {\n          \"defaultTargetHostname\": \"ENABLED\"|\"DISABLED\"\n        },\n        \"path\": {\n          \"exact\": \"string\"\n        },\n        \"prefix\": {\n          \"defaultPrefix\": \"ENABLED\"|\"DISABLED\",\n          \"value\": \"string\"\n        }\n      },\n      \"target\": {\n        \"virtualService\": {\n          \"virtualServiceName\": \"string\"\n        }\n      }\n    },\n    \"match\": {\n      \"headers\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"hostname\": {\n        \"exact\": \"string\",\n        \"suffix\": \"string\"\n      },\n      \"method\": \"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"DELETE\"|\"CONNECT\"|\"OPTIONS\"|\"TRACE\"|\"PATCH\",\n      \"path\": {\n        \"exact\": \"string\",\n        \"regex\": \"string\"\n      },\n      \"prefix\": \"string\",\n      \"queryParameters\": [\n        {\n          \"match\": {\n            \"exact\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ]\n    }\n  },\n  \"priority\": integer\n}\n\n\n--virtual-gateway-name (string)\n\nThe name of the virtual gateway that the gateway route is associated with.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngatewayRoute -> (structure)\n\nA full description of the gateway route that was updated.\n\ngatewayRouteName -> (string)\n\nThe name of the gateway route.\n\nmeshName -> (string)\n\nThe name of the service mesh that the resource resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the gateway route.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name of the gateway route to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nhostname -> (structure)\n\nThe gateway route host name to be matched on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmetadata -> (list)\n\nThe gateway route metadata to be matched on.\n\n(structure)\n\nAn object representing the metadata of the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe criteria for determining a metadata match.\n\nexact -> (string)\n\nThe exact method header to be matched on.\n\nprefix -> (string)\n\nThe specified beginning characters of the method header to be matched on.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on. The first character of the range is included in the range, though the last character is not. For example, if the range specified were 1-100, only values 1-99 would be matched.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe regex used to match the method header.\n\nsuffix -> (string)\n\nThe specified ending characters of the method header to match on.\n\nname -> (string)\n\nA name for the gateway route metadata.\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP gateway route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nrewrite -> (structure)\n\nThe gateway route action to rewrite.\n\nhostname -> (structure)\n\nThe host name to rewrite.\n\ndefaultTargetHostname -> (string)\n\nThe default target host name to write to.\n\npath -> (structure)\n\nThe path to rewrite.\n\nexact -> (string)\n\nThe exact path to rewrite.\n\nprefix -> (structure)\n\nThe specified beginning characters to rewrite.\n\ndefaultPrefix -> (string)\n\nThe default prefix used to replace the incoming route prefix when rewritten.\n\nvalue -> (string)\n\nThe value used to replace the incoming route prefix when rewritten.\n\ntarget -> (structure)\n\nAn object that represents the target that traffic is routed to when a request matches the gateway route.\n\nvirtualService -> (structure)\n\nAn object that represents a virtual service gateway route target.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that traffic is routed to.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the gateway route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the method and value to match with the header value sent in a request. Specify one match method.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the gateway route that will be matched on.\n\nhostname -> (structure)\n\nThe host name to match on.\n\nexact -> (string)\n\nThe exact host name to match on.\n\nsuffix -> (string)\n\nThe specified ending characters of the host name to match on.\n\nmethod -> (string)\n\nThe method to match on.\n\npath -> (structure)\n\nThe path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe query parameter to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\npriority -> (integer)\n\nThe ordering of the gateway routes spec.\n\nstatus -> (structure)\n\nThe status of the gateway route.\n\nstatus -> (string)\n\nThe current status for the gateway route.\n\nvirtualGatewayName -> (string)\n\nThe virtual gateway that the gateway route is associated with."
    },
    {
      "command_name": "update-mesh",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/update-mesh.html",
      "command_description": "Description\n\nUpdates an existing service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-mesh\n[--client-token <value>]\n--mesh-name <value>\n[--spec <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--spec <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh to update.\n\n--spec (structure)\n\nThe service mesh specification to apply.\n\negressFilter -> (structure)\n\nThe egress filter rules for the service mesh.\n\ntype -> (string)\n\nThe egress filter type. By default, the type is DROP_ALL , which allows egress only from virtual nodes to other defined resources in the service mesh (and any traffic to *.amazonaws.com for Amazon Web Services API calls). You can set the egress filter type to ALLOW_ALL to allow egress to any endpoint inside or outside of the service mesh.\n\nShorthand Syntax:\n\negressFilter={type=string}\n\n\nJSON Syntax:\n\n{\n  \"egressFilter\": {\n    \"type\": \"ALLOW_ALL\"|\"DROP_ALL\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmesh -> (structure)\n\nAn object that represents a service mesh returned by a describe operation.\n\nmeshName -> (string)\n\nThe name of the service mesh.\n\nmetadata -> (structure)\n\nThe associated metadata for the service mesh.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe associated specification for the service mesh.\n\negressFilter -> (structure)\n\nThe egress filter rules for the service mesh.\n\ntype -> (string)\n\nThe egress filter type. By default, the type is DROP_ALL , which allows egress only from virtual nodes to other defined resources in the service mesh (and any traffic to *.amazonaws.com for Amazon Web Services API calls). You can set the egress filter type to ALLOW_ALL to allow egress to any endpoint inside or outside of the service mesh.\n\nstatus -> (structure)\n\nThe status of the service mesh.\n\nstatus -> (string)\n\nThe current mesh status.",
      "command_examples": "Examples\n\nTo update a service mesh\n\nThe following update-mesh example uses a JSON input file to update a service mesh to allow all external egress traffic to be forwarded through the Envoy proxy untouched.\n\naws appmesh update-mesh \\\n    --cli-input-json file://update-mesh.json\n\n\nContents of update-mesh.json:\n\n{\n    \"meshName\": \"app1\",\n    \"spec\": {\n        \"egressFilter\": {\n            \"type\": \"ALLOW_ALL\"\n        }\n    }\n}\n\n\nOutput:\n\n{\n    \"mesh\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1\",\n            \"createdAt\": 1563809909.282,\n            \"lastUpdatedAt\": 1563812829.687,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 2\n        },\n        \"spec\": {\n            \"egressFilter\": {\n                \"type\": \"ALLOW_ALL\"\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        }\n    }\n}\n\n\nFor more information, see Service Meshes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "update-route",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/update-route.html",
      "command_description": "Description\n\nUpdates an existing route for a specified service mesh and virtual router.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-route\n[--client-token <value>]\n--mesh-name <value>\n[--mesh-owner <value>]\n--route-name <value>\n--spec <value>\n--virtual-router-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--route-name <value>",
        "--spec <value>",
        "--virtual-router-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh that the route resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--route-name (string)\n\nThe name of the route to update.\n\n--spec (structure)\n\nThe new route specification to apply. This overwrites the existing data.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nmetadata -> (list)\n\nAn object that represents the data to match from the request.\n\n(structure)\n\nAn object that represents the match metadata for the route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the data to match from the request.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nThe name of the route.\n\nmethodName -> (string)\n\nThe method name to match from the request. If you specify a name, you must also specify a serviceName .\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\ngrpcRetryEvents -> (list)\n\nSpecify at least one of the valid values.\n\n(string)\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\npriority -> (integer)\n\nThe priority for the route. Routes are matched based on the specified value, where 0 is the highest priority.\n\ntcpRoute -> (structure)\n\nAn object that represents the specification of a TCP route.\n\naction -> (structure)\n\nThe action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nJSON Syntax:\n\n{\n  \"grpcRoute\": {\n    \"action\": {\n      \"weightedTargets\": [\n        {\n          \"virtualNode\": \"string\",\n          \"weight\": integer\n        }\n        ...\n      ]\n    },\n    \"match\": {\n      \"metadata\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"methodName\": \"string\",\n      \"serviceName\": \"string\"\n    },\n    \"retryPolicy\": {\n      \"grpcRetryEvents\": [\"cancelled\"|\"deadline-exceeded\"|\"internal\"|\"resource-exhausted\"|\"unavailable\", ...],\n      \"httpRetryEvents\": [\"string\", ...],\n      \"maxRetries\": long,\n      \"perRetryTimeout\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"tcpRetryEvents\": [\"connection-error\", ...]\n    },\n    \"timeout\": {\n      \"idle\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"perRequest\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      }\n    }\n  },\n  \"http2Route\": {\n    \"action\": {\n      \"weightedTargets\": [\n        {\n          \"virtualNode\": \"string\",\n          \"weight\": integer\n        }\n        ...\n      ]\n    },\n    \"match\": {\n      \"headers\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"method\": \"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"DELETE\"|\"CONNECT\"|\"OPTIONS\"|\"TRACE\"|\"PATCH\",\n      \"path\": {\n        \"exact\": \"string\",\n        \"regex\": \"string\"\n      },\n      \"prefix\": \"string\",\n      \"queryParameters\": [\n        {\n          \"match\": {\n            \"exact\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"scheme\": \"http\"|\"https\"\n    },\n    \"retryPolicy\": {\n      \"httpRetryEvents\": [\"string\", ...],\n      \"maxRetries\": long,\n      \"perRetryTimeout\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"tcpRetryEvents\": [\"connection-error\", ...]\n    },\n    \"timeout\": {\n      \"idle\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"perRequest\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      }\n    }\n  },\n  \"httpRoute\": {\n    \"action\": {\n      \"weightedTargets\": [\n        {\n          \"virtualNode\": \"string\",\n          \"weight\": integer\n        }\n        ...\n      ]\n    },\n    \"match\": {\n      \"headers\": [\n        {\n          \"invert\": true|false,\n          \"match\": {\n            \"exact\": \"string\",\n            \"prefix\": \"string\",\n            \"range\": {\n              \"end\": long,\n              \"start\": long\n            },\n            \"regex\": \"string\",\n            \"suffix\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"method\": \"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"DELETE\"|\"CONNECT\"|\"OPTIONS\"|\"TRACE\"|\"PATCH\",\n      \"path\": {\n        \"exact\": \"string\",\n        \"regex\": \"string\"\n      },\n      \"prefix\": \"string\",\n      \"queryParameters\": [\n        {\n          \"match\": {\n            \"exact\": \"string\"\n          },\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"scheme\": \"http\"|\"https\"\n    },\n    \"retryPolicy\": {\n      \"httpRetryEvents\": [\"string\", ...],\n      \"maxRetries\": long,\n      \"perRetryTimeout\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"tcpRetryEvents\": [\"connection-error\", ...]\n    },\n    \"timeout\": {\n      \"idle\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      },\n      \"perRequest\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      }\n    }\n  },\n  \"priority\": integer,\n  \"tcpRoute\": {\n    \"action\": {\n      \"weightedTargets\": [\n        {\n          \"virtualNode\": \"string\",\n          \"weight\": integer\n        }\n        ...\n      ]\n    },\n    \"timeout\": {\n      \"idle\": {\n        \"unit\": \"s\"|\"ms\",\n        \"value\": long\n      }\n    }\n  }\n}\n\n\n--virtual-router-name (string)\n\nThe name of the virtual router that the route is associated with.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nroute -> (structure)\n\nA full description of the route that was updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the route resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the route.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nrouteName -> (string)\n\nThe name of the route.\n\nspec -> (structure)\n\nThe specifications of the route.\n\ngrpcRoute -> (structure)\n\nAn object that represents the specification of a gRPC route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nmetadata -> (list)\n\nAn object that represents the data to match from the request.\n\n(structure)\n\nAn object that represents the match metadata for the route.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nAn object that represents the data to match from the request.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nThe name of the route.\n\nmethodName -> (string)\n\nThe method name to match from the request. If you specify a name, you must also specify a serviceName .\n\nserviceName -> (string)\n\nThe fully qualified domain name for the service to match from the request.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\ngrpcRetryEvents -> (list)\n\nSpecify at least one of the valid values.\n\n(string)\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2Route -> (structure)\n\nAn object that represents the specification of an HTTP/2 route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttpRoute -> (structure)\n\nAn object that represents the specification of an HTTP route.\n\naction -> (structure)\n\nAn object that represents the action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a request match.\n\nheaders -> (list)\n\nThe client request headers to match on.\n\n(structure)\n\nAn object that represents the HTTP header in the request.\n\ninvert -> (boolean)\n\nSpecify True to match anything except the match criteria. The default value is False .\n\nmatch -> (structure)\n\nThe HeaderMatchMethod object.\n\nexact -> (string)\n\nThe value sent by the client must match the specified value exactly.\n\nprefix -> (string)\n\nThe value sent by the client must begin with the specified characters.\n\nrange -> (structure)\n\nAn object that represents the range of values to match on.\n\nend -> (long)\n\nThe end of the range.\n\nstart -> (long)\n\nThe start of the range.\n\nregex -> (string)\n\nThe value sent by the client must include the specified characters.\n\nsuffix -> (string)\n\nThe value sent by the client must end with the specified characters.\n\nname -> (string)\n\nA name for the HTTP header in the client request that will be matched on.\n\nmethod -> (string)\n\nThe client request method to match on. Specify only one.\n\npath -> (structure)\n\nThe client request path to match on.\n\nexact -> (string)\n\nThe exact path to match on.\n\nregex -> (string)\n\nThe regex used to match the path.\n\nprefix -> (string)\n\nSpecifies the path to match requests with. This parameter must always start with / , which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is my-service.local and you want the route to match requests to my-service.local/metrics , your prefix should be /metrics .\n\nqueryParameters -> (list)\n\nThe client request query parameters to match on.\n\n(structure)\n\nAn object that represents the query parameter in the request.\n\nmatch -> (structure)\n\nThe query parameter to match on.\n\nexact -> (string)\n\nThe exact query parameter to match on.\n\nname -> (string)\n\nA name for the query parameter that will be matched on.\n\nscheme -> (string)\n\nThe client request scheme to match on. Specify only one. Applicable only for HTTP2 routes.\n\nretryPolicy -> (structure)\n\nAn object that represents a retry policy.\n\nhttpRetryEvents -> (list)\n\nSpecify at least one of the following values.\n\nserver-error – HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511\n\ngateway-error – HTTP status codes 502, 503, and 504\n\nclient-error – HTTP status code 409\n\nstream-error – Retry on refused stream\n\n(string)\n\nmaxRetries -> (long)\n\nThe maximum number of retry attempts.\n\nperRetryTimeout -> (structure)\n\nThe timeout for each retry attempt.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcpRetryEvents -> (list)\n\nSpecify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.\n\n(string)\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\npriority -> (integer)\n\nThe priority for the route. Routes are matched based on the specified value, where 0 is the highest priority.\n\ntcpRoute -> (structure)\n\nAn object that represents the specification of a TCP route.\n\naction -> (structure)\n\nThe action to take if a match is determined.\n\nweightedTargets -> (list)\n\nAn object that represents the targets that traffic is routed to when a request matches the route.\n\n(structure)\n\nAn object that represents a target and its relative weight. Traffic is distributed across targets according to their relative weight. For example, a weighted target with a relative weight of 50 receives five times as much traffic as one with a relative weight of 10. The total weight for all targets combined must be less than or equal to 100.\n\nvirtualNode -> (string)\n\nThe virtual node to associate with the weighted target.\n\nweight -> (integer)\n\nThe relative weight of the weighted target.\n\ntimeout -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nstatus -> (structure)\n\nThe status of the route.\n\nstatus -> (string)\n\nThe current status for the route.\n\nvirtualRouterName -> (string)\n\nThe virtual router that the route is associated with.",
      "command_examples": "Examples\n\nTo update a route\n\nThe following update-route example uses a JSON input file to update the weights for a route.\n\naws appmesh update-route \\\n    --cli-input-json file://update-route-weighted.json\n\n\nContents of update-route-weighted.json:\n\n{\n    \"meshName\": \"app1\",\n    \"routeName\": \"toVnServiceB-weighted\",\n    \"spec\": {\n        \"httpRoute\": {\n            \"action\": {\n                \"weightedTargets\": [\n                    {\n                        \"virtualNode\": \"vnServiceBv1\",\n                        \"weight\": 80\n                    },\n                    {\n                        \"virtualNode\": \"vnServiceBv2\",\n                        \"weight\": 20\n                    }\n                ]\n            },\n            \"match\": {\n                \"prefix\": \"/\"\n            }\n        }\n    },\n    \"virtualRouterName\": \"vrServiceB\"\n}\n\n\nOutput:\n\n{\n    \"route\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB/route/toVnServiceB-weighted\",\n            \"createdAt\": 1563811384.015,\n            \"lastUpdatedAt\": 1563819600.022,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 2\n        },\n        \"routeName\": \"toVnServiceB-weighted\",\n        \"spec\": {\n            \"httpRoute\": {\n                \"action\": {\n                    \"weightedTargets\": [\n                        {\n                            \"virtualNode\": \"vnServiceBv1\",\n                            \"weight\": 80\n                        },\n                        {\n                            \"virtualNode\": \"vnServiceBv2\",\n                            \"weight\": 20\n                        }\n                    ]\n                },\n                \"match\": {\n                    \"prefix\": \"/\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualRouterName\": \"vrServiceB\"\n    }\n}\n\n\nFor more information, see Routes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "update-virtual-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/update-virtual-gateway.html",
      "command_description": "Description\n\nUpdates an existing virtual gateway in a specified service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-virtual-gateway\n[--client-token <value>]\n--mesh-name <value>\n[--mesh-owner <value>]\n--spec <value>\n--virtual-gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--spec <value>",
        "--virtual-gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh that the virtual gateway resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--spec (structure)\n\nThe new virtual gateway specification to apply. This overwrites the existing data.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlisteners -> (list)\n\nThe listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual gateway.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the virtual gateway listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring the listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping. Specify one protocol.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for the listener.\n\ncertificate -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an Certificate Manager certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nAn object that represents logging information.\n\naccessLog -> (structure)\n\nThe access log configuration.\n\nfile -> (structure)\n\nThe file object to send virtual gateway access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nJSON Syntax:\n\n{\n  \"backendDefaults\": {\n    \"clientPolicy\": {\n      \"tls\": {\n        \"certificate\": {\n          \"file\": {\n            \"certificateChain\": \"string\",\n            \"privateKey\": \"string\"\n          },\n          \"sds\": {\n            \"secretName\": \"string\"\n          }\n        },\n        \"enforce\": true|false,\n        \"ports\": [integer, ...],\n        \"validation\": {\n          \"subjectAlternativeNames\": {\n            \"match\": {\n              \"exact\": [\"string\", ...]\n            }\n          },\n          \"trust\": {\n            \"acm\": {\n              \"certificateAuthorityArns\": [\"string\", ...]\n            },\n            \"file\": {\n              \"certificateChain\": \"string\"\n            },\n            \"sds\": {\n              \"secretName\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"listeners\": [\n    {\n      \"connectionPool\": {\n        \"grpc\": {\n          \"maxRequests\": integer\n        },\n        \"http\": {\n          \"maxConnections\": integer,\n          \"maxPendingRequests\": integer\n        },\n        \"http2\": {\n          \"maxRequests\": integer\n        }\n      },\n      \"healthCheck\": {\n        \"healthyThreshold\": integer,\n        \"intervalMillis\": long,\n        \"path\": \"string\",\n        \"port\": integer,\n        \"protocol\": \"http\"|\"http2\"|\"grpc\",\n        \"timeoutMillis\": long,\n        \"unhealthyThreshold\": integer\n      },\n      \"portMapping\": {\n        \"port\": integer,\n        \"protocol\": \"http\"|\"http2\"|\"grpc\"\n      },\n      \"tls\": {\n        \"certificate\": {\n          \"acm\": {\n            \"certificateArn\": \"string\"\n          },\n          \"file\": {\n            \"certificateChain\": \"string\",\n            \"privateKey\": \"string\"\n          },\n          \"sds\": {\n            \"secretName\": \"string\"\n          }\n        },\n        \"mode\": \"STRICT\"|\"PERMISSIVE\"|\"DISABLED\",\n        \"validation\": {\n          \"subjectAlternativeNames\": {\n            \"match\": {\n              \"exact\": [\"string\", ...]\n            }\n          },\n          \"trust\": {\n            \"file\": {\n              \"certificateChain\": \"string\"\n            },\n            \"sds\": {\n              \"secretName\": \"string\"\n            }\n          }\n        }\n      }\n    }\n    ...\n  ],\n  \"logging\": {\n    \"accessLog\": {\n      \"file\": {\n        \"path\": \"string\"\n      }\n    }\n  }\n}\n\n\n--virtual-gateway-name (string)\n\nThe name of the virtual gateway to update.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualGateway -> (structure)\n\nA full description of the virtual gateway that was updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual gateway resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual gateway.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s client’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlisteners -> (list)\n\nThe listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual gateway.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the virtual gateway listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring the listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping. Specify one protocol.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for the listener.\n\ncertificate -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an Certificate Manager certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a virtual gateway listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a virtual gateway’s listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a virtual gateway’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nAn object that represents logging information.\n\naccessLog -> (structure)\n\nThe access log configuration.\n\nfile -> (structure)\n\nThe file object to send virtual gateway access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nstatus -> (structure)\n\nThe current status of the virtual gateway.\n\nstatus -> (string)\n\nThe current status.\n\nvirtualGatewayName -> (string)\n\nThe name of the virtual gateway."
    },
    {
      "command_name": "update-virtual-node",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/update-virtual-node.html",
      "command_description": "Description\n\nUpdates an existing virtual node in a specified service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-virtual-node\n[--client-token <value>]\n--mesh-name <value>\n[--mesh-owner <value>]\n--spec <value>\n--virtual-node-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--spec <value>",
        "--virtual-node-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh that the virtual node resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--spec (structure)\n\nThe new virtual node specification to apply. This overwrites the existing data.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nbackends -> (list)\n\nThe backends that the virtual node is expected to send outbound traffic to.\n\n(structure)\n\nAn object that represents the backends that a virtual node is expected to send outbound traffic to.\n\nvirtualService -> (structure)\n\nSpecifies a virtual service to use as a backend.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents the client policy for a backend.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that is acting as a virtual node backend.\n\nlisteners -> (list)\n\nThe listener that the virtual node is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual node.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\ntcp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.\n\noutlierDetection -> (structure)\n\nThe outlier detection information for the listener.\n\nbaseEjectionDuration -> (structure)\n\nThe base amount of time for which a host is ejected.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ninterval -> (structure)\n\nThe time interval between ejection sweep analysis.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nmaxEjectionPercent -> (integer)\n\nMaximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.\n\nmaxServerErrors -> (long)\n\nNumber of consecutive 5xx errors required for ejection.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\ntimeout -> (structure)\n\nAn object that represents timeouts for different protocols.\n\ngrpc -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2 -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for a listener.\n\ncertificate -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an AWS Certicate Manager (ACM) certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nThe inbound and outbound access logging information for the virtual node.\n\naccessLog -> (structure)\n\nThe access log configuration for a virtual node.\n\nfile -> (structure)\n\nThe file object to send virtual node access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nNote\n\nThe Envoy process must have write permissions to the path that you specify here. Otherwise, Envoy fails to bootstrap properly.\n\nserviceDiscovery -> (structure)\n\nThe service discovery information for the virtual node. If your virtual node does not expect ingress traffic, you can omit this parameter. If you specify a listener , then you must specify service discovery information.\n\nawsCloudMap -> (structure)\n\nSpecifies any Cloud Map information for the virtual node.\n\nattributes -> (list)\n\nA string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.\n\n(structure)\n\nAn object that represents the Cloud Map attribute information for your virtual node.\n\nNote\n\nAWS Cloud Map is not available in the eu-south-1 Region.\n\nkey -> (string)\n\nThe name of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nvalue -> (string)\n\nThe value of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nnamespaceName -> (string)\n\nThe name of the Cloud Map namespace to use.\n\nserviceName -> (string)\n\nThe name of the Cloud Map service to use.\n\ndns -> (structure)\n\nSpecifies the DNS information for the virtual node.\n\nhostname -> (string)\n\nSpecifies the DNS service discovery hostname for the virtual node.\n\nresponseType -> (string)\n\nSpecifies the DNS response type for the virtual node.\n\nJSON Syntax:\n\n{\n  \"backendDefaults\": {\n    \"clientPolicy\": {\n      \"tls\": {\n        \"certificate\": {\n          \"file\": {\n            \"certificateChain\": \"string\",\n            \"privateKey\": \"string\"\n          },\n          \"sds\": {\n            \"secretName\": \"string\"\n          }\n        },\n        \"enforce\": true|false,\n        \"ports\": [integer, ...],\n        \"validation\": {\n          \"subjectAlternativeNames\": {\n            \"match\": {\n              \"exact\": [\"string\", ...]\n            }\n          },\n          \"trust\": {\n            \"acm\": {\n              \"certificateAuthorityArns\": [\"string\", ...]\n            },\n            \"file\": {\n              \"certificateChain\": \"string\"\n            },\n            \"sds\": {\n              \"secretName\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"backends\": [\n    {\n      \"virtualService\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"string\",\n                \"privateKey\": \"string\"\n              },\n              \"sds\": {\n                \"secretName\": \"string\"\n              }\n            },\n            \"enforce\": true|false,\n            \"ports\": [integer, ...],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\"string\", ...]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\"string\", ...]\n                },\n                \"file\": {\n                  \"certificateChain\": \"string\"\n                },\n                \"sds\": {\n                  \"secretName\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"virtualServiceName\": \"string\"\n      }\n    }\n    ...\n  ],\n  \"listeners\": [\n    {\n      \"connectionPool\": {\n        \"grpc\": {\n          \"maxRequests\": integer\n        },\n        \"http\": {\n          \"maxConnections\": integer,\n          \"maxPendingRequests\": integer\n        },\n        \"http2\": {\n          \"maxRequests\": integer\n        },\n        \"tcp\": {\n          \"maxConnections\": integer\n        }\n      },\n      \"healthCheck\": {\n        \"healthyThreshold\": integer,\n        \"intervalMillis\": long,\n        \"path\": \"string\",\n        \"port\": integer,\n        \"protocol\": \"http\"|\"tcp\"|\"http2\"|\"grpc\",\n        \"timeoutMillis\": long,\n        \"unhealthyThreshold\": integer\n      },\n      \"outlierDetection\": {\n        \"baseEjectionDuration\": {\n          \"unit\": \"s\"|\"ms\",\n          \"value\": long\n        },\n        \"interval\": {\n          \"unit\": \"s\"|\"ms\",\n          \"value\": long\n        },\n        \"maxEjectionPercent\": integer,\n        \"maxServerErrors\": long\n      },\n      \"portMapping\": {\n        \"port\": integer,\n        \"protocol\": \"http\"|\"tcp\"|\"http2\"|\"grpc\"\n      },\n      \"timeout\": {\n        \"grpc\": {\n          \"idle\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          },\n          \"perRequest\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          }\n        },\n        \"http\": {\n          \"idle\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          },\n          \"perRequest\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          }\n        },\n        \"http2\": {\n          \"idle\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          },\n          \"perRequest\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          }\n        },\n        \"tcp\": {\n          \"idle\": {\n            \"unit\": \"s\"|\"ms\",\n            \"value\": long\n          }\n        }\n      },\n      \"tls\": {\n        \"certificate\": {\n          \"acm\": {\n            \"certificateArn\": \"string\"\n          },\n          \"file\": {\n            \"certificateChain\": \"string\",\n            \"privateKey\": \"string\"\n          },\n          \"sds\": {\n            \"secretName\": \"string\"\n          }\n        },\n        \"mode\": \"STRICT\"|\"PERMISSIVE\"|\"DISABLED\",\n        \"validation\": {\n          \"subjectAlternativeNames\": {\n            \"match\": {\n              \"exact\": [\"string\", ...]\n            }\n          },\n          \"trust\": {\n            \"file\": {\n              \"certificateChain\": \"string\"\n            },\n            \"sds\": {\n              \"secretName\": \"string\"\n            }\n          }\n        }\n      }\n    }\n    ...\n  ],\n  \"logging\": {\n    \"accessLog\": {\n      \"file\": {\n        \"path\": \"string\"\n      }\n    }\n  },\n  \"serviceDiscovery\": {\n    \"awsCloudMap\": {\n      \"attributes\": [\n        {\n          \"key\": \"string\",\n          \"value\": \"string\"\n        }\n        ...\n      ],\n      \"namespaceName\": \"string\",\n      \"serviceName\": \"string\"\n    },\n    \"dns\": {\n      \"hostname\": \"string\",\n      \"responseType\": \"LOADBALANCER\"|\"ENDPOINTS\"\n    }\n  }\n}\n\n\n--virtual-node-name (string)\n\nThe name of the virtual node to update.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualNode -> (structure)\n\nA full description of the virtual node that was updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual node resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the virtual node.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual node.\n\nbackendDefaults -> (structure)\n\nA reference to an object that represents the defaults for backends.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents a client policy.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nbackends -> (list)\n\nThe backends that the virtual node is expected to send outbound traffic to.\n\n(structure)\n\nAn object that represents the backends that a virtual node is expected to send outbound traffic to.\n\nvirtualService -> (structure)\n\nSpecifies a virtual service to use as a backend.\n\nclientPolicy -> (structure)\n\nA reference to an object that represents the client policy for a backend.\n\ntls -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) client policy.\n\ncertificate -> (structure)\n\nA reference to an object that represents a client’s TLS certificate.\n\nfile -> (structure)\n\nAn object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a client’s TLS Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nenforce -> (boolean)\n\nWhether the policy is enforced. The default is True , if a value isn’t specified.\n\nports -> (list)\n\nOne or more ports that the policy is enforced for.\n\n(integer)\n\nvalidation -> (structure)\n\nA reference to an object that represents a TLS validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.\n\ncertificateAuthorityArns -> (list)\n\nOne or more ACM Amazon Resource Name (ARN)s.\n\n(string)\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service that is acting as a virtual node backend.\n\nlisteners -> (list)\n\nThe listener that the virtual node is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a listener for a virtual node.\n\nconnectionPool -> (structure)\n\nThe connection pool information for the listener.\n\ngrpc -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\nhttp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nmaxPendingRequests -> (integer)\n\nNumber of overflowing requests after max_connections Envoy will queue to upstream cluster.\n\nhttp2 -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxRequests -> (integer)\n\nMaximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.\n\ntcp -> (structure)\n\nAn object that represents a type of connection pool.\n\nmaxConnections -> (integer)\n\nMaximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.\n\nhealthCheck -> (structure)\n\nThe health check information for the listener.\n\nhealthyThreshold -> (integer)\n\nThe number of consecutive successful health checks that must occur before declaring listener healthy.\n\nintervalMillis -> (long)\n\nThe time period in milliseconds between each health check execution.\n\npath -> (string)\n\nThe destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored.\n\nport -> (integer)\n\nThe destination port for the health check request. This port must match the port defined in the PortMapping for the listener.\n\nprotocol -> (string)\n\nThe protocol for the health check request. If you specify grpc , then your service must conform to the GRPC Health Checking Protocol .\n\ntimeoutMillis -> (long)\n\nThe amount of time to wait when receiving a response from the health check, in milliseconds.\n\nunhealthyThreshold -> (integer)\n\nThe number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.\n\noutlierDetection -> (structure)\n\nThe outlier detection information for the listener.\n\nbaseEjectionDuration -> (structure)\n\nThe base amount of time for which a host is ejected.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ninterval -> (structure)\n\nThe time interval between ejection sweep analysis.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nmaxEjectionPercent -> (integer)\n\nMaximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.\n\nmaxServerErrors -> (long)\n\nNumber of consecutive 5xx errors required for ejection.\n\nportMapping -> (structure)\n\nThe port mapping information for the listener.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\ntimeout -> (structure)\n\nAn object that represents timeouts for different protocols.\n\ngrpc -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nhttp2 -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\nperRequest -> (structure)\n\nAn object that represents a per request timeout. The default value is 15 seconds. If you set a higher timeout, then make sure that the higher value is set for each App Mesh resource in a conversation. For example, if a virtual node backend uses a virtual router provider to route to another virtual node, then the timeout should be greater than 15 seconds for the source and destination virtual node and the route.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntcp -> (structure)\n\nAn object that represents types of timeouts.\n\nidle -> (structure)\n\nAn object that represents an idle timeout. An idle timeout bounds the amount of time that a connection may be idle. The default value is none.\n\nunit -> (string)\n\nA unit of time.\n\nvalue -> (long)\n\nA number of time units.\n\ntls -> (structure)\n\nA reference to an object that represents the Transport Layer Security (TLS) properties for a listener.\n\ncertificate -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) certificate.\n\nacm -> (structure)\n\nA reference to an object that represents an AWS Certicate Manager (ACM) certificate.\n\ncertificateArn -> (string)\n\nThe Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see Transport Layer Security (TLS) .\n\nfile -> (structure)\n\nA reference to an object that represents a local file certificate.\n\ncertificateChain -> (string)\n\nThe certificate chain for the certificate.\n\nprivateKey -> (string)\n\nThe private key for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Secret Discovery Service certificate.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.\n\nmode -> (string)\n\nSpecify one of the following modes.\n\nSTRICT – Listener only accepts connections with TLS enabled.\n\nPERMISSIVE – Listener accepts connections with or without TLS enabled.\n\nDISABLED – Listener only accepts connections without TLS.\n\nvalidation -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) validation context.\n\nsubjectAlternativeNames -> (structure)\n\nA reference to an object that represents the SANs for a listener’s Transport Layer Security (TLS) validation context.\n\nmatch -> (structure)\n\nAn object that represents the criteria for determining a SANs match.\n\nexact -> (list)\n\nThe values sent must match the specified values exactly.\n\n(string)\n\ntrust -> (structure)\n\nA reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.\n\nfile -> (structure)\n\nAn object that represents a Transport Layer Security (TLS) validation context trust for a local file.\n\ncertificateChain -> (string)\n\nThe certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.\n\nsds -> (structure)\n\nA reference to an object that represents a listener’s Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nsecretName -> (string)\n\nA reference to an object that represents the name of the secret for a Transport Layer Security (TLS) Secret Discovery Service validation context trust.\n\nlogging -> (structure)\n\nThe inbound and outbound access logging information for the virtual node.\n\naccessLog -> (structure)\n\nThe access log configuration for a virtual node.\n\nfile -> (structure)\n\nThe file object to send virtual node access logs to.\n\npath -> (string)\n\nThe file path to write access logs to. You can use /dev/stdout to send access logs to standard out and configure your Envoy container to use a log driver, such as awslogs , to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container’s file system to write the files to disk.\n\nNote\n\nThe Envoy process must have write permissions to the path that you specify here. Otherwise, Envoy fails to bootstrap properly.\n\nserviceDiscovery -> (structure)\n\nThe service discovery information for the virtual node. If your virtual node does not expect ingress traffic, you can omit this parameter. If you specify a listener , then you must specify service discovery information.\n\nawsCloudMap -> (structure)\n\nSpecifies any Cloud Map information for the virtual node.\n\nattributes -> (list)\n\nA string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.\n\n(structure)\n\nAn object that represents the Cloud Map attribute information for your virtual node.\n\nNote\n\nAWS Cloud Map is not available in the eu-south-1 Region.\n\nkey -> (string)\n\nThe name of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nvalue -> (string)\n\nThe value of an Cloud Map service instance attribute key. Any Cloud Map service instance that contains the specified key and value is returned.\n\nnamespaceName -> (string)\n\nThe name of the Cloud Map namespace to use.\n\nserviceName -> (string)\n\nThe name of the Cloud Map service to use.\n\ndns -> (structure)\n\nSpecifies the DNS information for the virtual node.\n\nhostname -> (string)\n\nSpecifies the DNS service discovery hostname for the virtual node.\n\nresponseType -> (string)\n\nSpecifies the DNS response type for the virtual node.\n\nstatus -> (structure)\n\nThe current status for the virtual node.\n\nstatus -> (string)\n\nThe current status of the virtual node.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node.",
      "command_examples": "Examples\n\nTo update a virtual node\n\nThe following update-virtual-node example uses a JSON input file to add a health check to a virtual node.\n\naws appmesh update-virtual-node \\\n    --cli-input-json file://update-virtual-node.json\n\n\nContents of update-virtual-node.json:\n\n{\n    \"clientToken\": \"500\",\n    \"meshName\": \"app1\",\n    \"spec\": {\n        \"listeners\": [\n            {\n                \"healthCheck\": {\n                    \"healthyThreshold\": 5,\n                    \"intervalMillis\": 10000,\n                    \"path\": \"/\",\n                    \"port\": 80,\n                    \"protocol\": \"http\",\n                    \"timeoutMillis\": 3000,\n                    \"unhealthyThreshold\": 3\n                },\n                \"portMapping\": {\n                    \"port\": 80,\n                    \"protocol\": \"http\"\n                }\n            }\n        ],\n        \"serviceDiscovery\": {\n            \"dns\": {\n                \"hostname\": \"serviceBv1.svc.cluster.local\"\n            }\n        }\n    },\n    \"virtualNodeName\": \"vnServiceBv1\"\n}\n\n\nOutput:\n\n{\n    \"virtualNode\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualNode/vnServiceBv1\",\n            \"createdAt\": 1563810019.874,\n            \"lastUpdatedAt\": 1563819234.825,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 2\n        },\n        \"spec\": {\n            \"listeners\": [\n                {\n                    \"healthCheck\": {\n                        \"healthyThreshold\": 5,\n                        \"intervalMillis\": 10000,\n                        \"path\": \"/\",\n                        \"port\": 80,\n                        \"protocol\": \"http\",\n                        \"timeoutMillis\": 3000,\n                        \"unhealthyThreshold\": 3\n                    },\n                    \"portMapping\": {\n                        \"port\": 80,\n                        \"protocol\": \"http\"\n                    }\n                }\n            ],\n            \"serviceDiscovery\": {\n                \"dns\": {\n                    \"hostname\": \"serviceBv1.svc.cluster.local\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualNodeName\": \"vnServiceBv1\"\n    }\n}\n\n\nFor more information, see Virtual Nodes in the AWS App Mesh User Guide."
    },
    {
      "command_name": "update-virtual-router",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/update-virtual-router.html",
      "command_description": "Description\n\nUpdates an existing virtual router in a specified service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-virtual-router\n[--client-token <value>]\n--mesh-name <value>\n[--mesh-owner <value>]\n--spec <value>\n--virtual-router-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--spec <value>",
        "--virtual-router-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh that the virtual router resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--spec (structure)\n\nThe new virtual router specification to apply. This overwrites the existing data.\n\nlisteners -> (list)\n\nThe listeners that the virtual router is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a virtual router listener.\n\nportMapping -> (structure)\n\nAn object that represents a port mapping.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\nJSON Syntax:\n\n{\n  \"listeners\": [\n    {\n      \"portMapping\": {\n        \"port\": integer,\n        \"protocol\": \"http\"|\"tcp\"|\"http2\"|\"grpc\"\n      }\n    }\n    ...\n  ]\n}\n\n\n--virtual-router-name (string)\n\nThe name of the virtual router to update.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualRouter -> (structure)\n\nA full description of the virtual router that was updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual router resides in.\n\nmetadata -> (structure)\n\nThe associated metadata for the virtual router.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual router.\n\nlisteners -> (list)\n\nThe listeners that the virtual router is expected to receive inbound traffic from. You can specify one listener.\n\n(structure)\n\nAn object that represents a virtual router listener.\n\nportMapping -> (structure)\n\nAn object that represents a port mapping.\n\nport -> (integer)\n\nThe port used for the port mapping.\n\nprotocol -> (string)\n\nThe protocol used for the port mapping. Specify one protocol.\n\nstatus -> (structure)\n\nThe current status of the virtual router.\n\nstatus -> (string)\n\nThe current status of the virtual router.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router.",
      "command_examples": "Examples\n\nTo update a virtual router\n\nThe following update-virtual-router example uses a JSON input file to update a virtual router listener port.\n\naws appmesh update-virtual-router \\\n    --cli-input-json file://update-virtual-router.json\n\n\nContents of update-virtual-router.json:\n\n{\n    \"meshName\": \"app1\",\n    \"spec\": {\n        \"listeners\": [\n            {\n                \"portMapping\": {\n                    \"port\": 8080,\n                    \"protocol\": \"http\"\n                }\n            }\n        ]\n    },\n    \"virtualRouterName\": \"vrServiceB\"\n}\n\n\nOutput:\n\n{\n    \"virtualRouter\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB\",\n            \"createdAt\": 1563810546.59,\n            \"lastUpdatedAt\": 1563819431.352,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 2\n        },\n        \"spec\": {\n            \"listeners\": [\n                {\n                    \"portMapping\": {\n                        \"port\": 8080,\n                        \"protocol\": \"http\"\n                    }\n                }\n            ]\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualRouterName\": \"vrServiceB\"\n    }\n}\n\n\nFor more information, see Virtual Routers in the AWS App Mesh User Guide."
    },
    {
      "command_name": "update-virtual-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appmesh/update-virtual-service.html",
      "command_description": "Description\n\nUpdates an existing virtual service in a specified service mesh.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-virtual-service\n[--client-token <value>]\n--mesh-name <value>\n[--mesh-owner <value>]\n--spec <value>\n--virtual-service-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--mesh-name <value>",
        "[--mesh-owner <value>]",
        "--spec <value>",
        "--virtual-service-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.\n\n--mesh-name (string)\n\nThe name of the service mesh that the virtual service resides in.\n\n--mesh-owner (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\n--spec (structure)\n\nThe new virtual service specification to apply. This overwrites the existing data.\n\nprovider -> (structure)\n\nThe App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.\n\nvirtualNode -> (structure)\n\nThe virtual node associated with a virtual service.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node that is acting as a service provider.\n\nvirtualRouter -> (structure)\n\nThe virtual router associated with a virtual service.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router that is acting as a service provider.\n\nShorthand Syntax:\n\nprovider={virtualNode={virtualNodeName=string},virtualRouter={virtualRouterName=string}}\n\n\nJSON Syntax:\n\n{\n  \"provider\": {\n    \"virtualNode\": {\n      \"virtualNodeName\": \"string\"\n    },\n    \"virtualRouter\": {\n      \"virtualRouterName\": \"string\"\n    }\n  }\n}\n\n\n--virtual-service-name (string)\n\nThe name of the virtual service to update.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualService -> (structure)\n\nA full description of the virtual service that was updated.\n\nmeshName -> (string)\n\nThe name of the service mesh that the virtual service resides in.\n\nmetadata -> (structure)\n\nAn object that represents metadata for a resource.\n\narn -> (string)\n\nThe full Amazon Resource Name (ARN) for the resource.\n\ncreatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe Unix epoch timestamp in seconds for when the resource was last updated.\n\nmeshOwner -> (string)\n\nThe AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it’s the ID of the account that shared the mesh with your account. For more information about mesh sharing, see Working with shared meshes .\n\nresourceOwner -> (string)\n\nThe AWS IAM account ID of the resource owner. If the account ID is not your own, then it’s the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see Working with shared meshes .\n\nuid -> (string)\n\nThe unique identifier for the resource.\n\nversion -> (long)\n\nThe version of the resource. Resources are created at version 1, and this version is incremented each time that they’re updated.\n\nspec -> (structure)\n\nThe specifications of the virtual service.\n\nprovider -> (structure)\n\nThe App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.\n\nvirtualNode -> (structure)\n\nThe virtual node associated with a virtual service.\n\nvirtualNodeName -> (string)\n\nThe name of the virtual node that is acting as a service provider.\n\nvirtualRouter -> (structure)\n\nThe virtual router associated with a virtual service.\n\nvirtualRouterName -> (string)\n\nThe name of the virtual router that is acting as a service provider.\n\nstatus -> (structure)\n\nThe current status of the virtual service.\n\nstatus -> (string)\n\nThe current status of the virtual service.\n\nvirtualServiceName -> (string)\n\nThe name of the virtual service.",
      "command_examples": "Examples\n\nTo update a virtual service\n\nThe following update-virtual-service example uses a JSON input file to update a virtual service to use a virtual router provider.\n\naws appmesh update-virtual-service \\\n    --cli-input-json file://update-virtual-service.json\n\n\nContents of update-virtual-service.json:\n\n{\n    \"meshName\": \"app1\",\n    \"spec\": {\n        \"provider\": {\n            \"virtualRouter\": {\n                \"virtualRouterName\": \"vrServiceA\"\n            }\n        }\n    },\n    \"virtualServiceName\": \"serviceA.svc.cluster.local\"\n}\n\n\nOutput:\n\n{\n    \"virtualService\": {\n        \"meshName\": \"app1\",\n        \"metadata\": {\n            \"arn\": \"arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualService/serviceA.svc.cluster.local\",\n            \"createdAt\": 1563810859.474,\n            \"lastUpdatedAt\": 1563820257.411,\n            \"uid\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"version\": 3\n        },\n        \"spec\": {\n            \"provider\": {\n                \"virtualRouter\": {\n                    \"virtualRouterName\": \"vrServiceA\"\n                }\n            }\n        },\n        \"status\": {\n            \"status\": \"ACTIVE\"\n        },\n        \"virtualServiceName\": \"serviceA.svc.cluster.local\"\n    }\n}\n\n\nFor more information, see Virtual Services in the AWS App Mesh User Guide."
    }
  ],
  "service_description": "Description\n\nApp Mesh is a service mesh based on the Envoy proxy that makes it easy to monitor and control microservices. App Mesh standardizes how your microservices communicate, giving you end-to-end visibility and helping to ensure high availability for your applications.\n\nApp Mesh gives you consistent visibility and network traffic controls for every microservice in an application. You can use App Mesh with Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on Amazon Web Services, and Amazon EC2.\n\nNote\n\nApp Mesh supports microservice applications that use service discovery naming for their components. For more information about service discovery on Amazon ECS, see Service Discovery in the Amazon Elastic Container Service Developer Guide . Kubernetes kube-dns and coredns are supported. For more information, see DNS for Services and Pods in the Kubernetes documentation."
}