{
  "service_name": "mediatailor",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/index.html",
  "service_commands": [
    {
      "command_name": "configure-logs-for-playback-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/configure-logs-for-playback-configuration.html",
      "command_description": "Description\n\nConfigures Amazon CloudWatch log settings for a playback configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  configure-logs-for-playback-configuration\n--percent-enabled <value>\n--playback-configuration-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--percent-enabled <value>",
        "--playback-configuration-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--percent-enabled (integer)\n\nThe percentage of session logs that MediaTailor sends to your Cloudwatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to 60, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the debug log mode .\n\nValid values: 0 - 100\n\n--playback-configuration-name (string)\n\nThe name of the playback configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPercentEnabled -> (integer)\n\nThe percentage of session logs that MediaTailor sends to your Cloudwatch Logs account.\n\nPlaybackConfigurationName -> (string)\n\nThe name of the playback configuration."
    },
    {
      "command_name": "create-channel",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/create-channel.html",
      "command_description": "Description\n\nCreates a channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-channel\n--channel-name <value>\n[--filler-slate <value>]\n--outputs <value>\n--playback-mode <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "[--filler-slate <value>]",
        "--outputs <value>",
        "--playback-mode <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--filler-slate (structure)\n\nThe slate used to fill gaps between programs in the schedule. You must configure filler slate if your channel uses a LINEAR PlaybackMode.\n\nSourceLocationName -> (string)\n\nThe name of the source location where the slate VOD source is stored.\n\nVodSourceName -> (string)\n\nThe slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.\n\nShorthand Syntax:\n\nSourceLocationName=string,VodSourceName=string\n\n\nJSON Syntax:\n\n{\n  \"SourceLocationName\": \"string\",\n  \"VodSourceName\": \"string\"\n}\n\n\n--outputs (list)\n\nThe channel’s output properties.\n\n(structure)\n\nThe output configuration for this channel.\n\nDashPlaylistSettings -> (structure)\n\nDASH manifest configuration parameters.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nMinBufferTimeSeconds -> (integer)\n\nMinimum amount of content (measured in seconds) that a player must keep available in the buffer. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nMinUpdatePeriodSeconds -> (integer)\n\nMinimum amount of time (in seconds) that the player should wait before requesting updates to the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nSuggestedPresentationDelaySeconds -> (integer)\n\nAmount of time (in seconds) that the player should be from the live point at the end of the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nHlsPlaylistSettings -> (structure)\n\nHLS playlist configuration parameters.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nManifestName -> (string)\n\nThe name of the manifest for the channel. The name appears in the PlaybackUrl.\n\nSourceGroup -> (string)\n\nA string used to match which HttpPackageConfiguration is used for each VodSource.\n\nShorthand Syntax:\n\nDashPlaylistSettings={ManifestWindowSeconds=integer,MinBufferTimeSeconds=integer,MinUpdatePeriodSeconds=integer,SuggestedPresentationDelaySeconds=integer},HlsPlaylistSettings={ManifestWindowSeconds=integer},ManifestName=string,SourceGroup=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"DashPlaylistSettings\": {\n      \"ManifestWindowSeconds\": integer,\n      \"MinBufferTimeSeconds\": integer,\n      \"MinUpdatePeriodSeconds\": integer,\n      \"SuggestedPresentationDelaySeconds\": integer\n    },\n    \"HlsPlaylistSettings\": {\n      \"ManifestWindowSeconds\": integer\n    },\n    \"ManifestName\": \"string\",\n    \"SourceGroup\": \"string\"\n  }\n  ...\n]\n\n\n--playback-mode (string)\n\nThe type of playback mode to use for this channel.\n\nLINEAR - The programs in the schedule play once back-to-back in the schedule.\n\nLOOP - The programs in the schedule play back-to-back in an endless loop. When the last program in the schedule stops playing, playback loops back to the first program in the schedule.\n\nPossible values:\n\nLOOP\n\nLINEAR\n\n--tags (map)\n\nThe tags to assign to the channel.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the channel.\n\nChannelName -> (string)\n\nThe name of the channel.\n\nChannelState -> (string)\n\nIndicates whether the channel is in a running state or not.\n\nCreationTime -> (timestamp)\n\nThe timestamp of when the channel was created.\n\nFillerSlate -> (structure)\n\nContains information about the slate used to fill gaps between programs in the schedule.\n\nSourceLocationName -> (string)\n\nThe name of the source location where the slate VOD source is stored.\n\nVodSourceName -> (string)\n\nThe slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.\n\nLastModifiedTime -> (timestamp)\n\nThe timestamp of when the channel was last modified.\n\nOutputs -> (list)\n\nThe channel’s output properties.\n\n(structure)\n\nThis response includes only the “property” : “type” property.\n\nDashPlaylistSettings -> (structure)\n\nDASH manifest configuration settings.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nMinBufferTimeSeconds -> (integer)\n\nMinimum amount of content (measured in seconds) that a player must keep available in the buffer. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nMinUpdatePeriodSeconds -> (integer)\n\nMinimum amount of time (in seconds) that the player should wait before requesting updates to the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nSuggestedPresentationDelaySeconds -> (integer)\n\nAmount of time (in seconds) that the player should be from the live point at the end of the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nHlsPlaylistSettings -> (structure)\n\nHLS manifest configuration settings.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nManifestName -> (string)\n\nThe name of the manifest for the channel that will appear in the channel output’s playback URL.\n\nPlaybackUrl -> (string)\n\nThe URL used for playback by content players.\n\nSourceGroup -> (string)\n\nA string used to associate a package configuration source group with a channel output.\n\nPlaybackMode -> (string)\n\nThe channel’s playback mode.\n\nTags -> (map)\n\nThe tags assigned to the channel.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "create-prefetch-schedule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/create-prefetch-schedule.html",
      "command_description": "Description\n\nCreates a new prefetch schedule for the specified playback configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-prefetch-schedule\n--consumption <value>\n--name <value>\n--playback-configuration-name <value>\n--retrieval <value>\n[--stream-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--consumption <value>",
        "--name <value>",
        "--playback-configuration-name <value>",
        "--retrieval <value>",
        "[--stream-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--consumption (structure)\n\nThe configuration settings for MediaTailor’s consumption of the prefetched ads from the ad decision server. Each consumption configuration contains an end time and an optional start time that define the consumption window . Prefetch schedules automatically expire no earlier than seven days after the end time.\n\nAvailMatchingCriteria -> (list)\n\nIf you only want MediaTailor to insert prefetched ads into avails (ad breaks) that match specific dynamic variables, such as scte.event_id, set the avail matching criteria.\n\n(structure)\n\nMediaTailor only places (consumes) prefetched ads if the ad break meets the criteria defined by the dynamic variables. This gives you granular control over which ad break to place the prefetched ads into.\n\nAs an example, let’s say that you set DynamicVariable to scte.event_id and Operator to EQUALS, and your playback configuration has an ADS URL of https://my.ads.server.com/path?&podId=[scte.avail_num]&event=[scte.event_id]&duration=[session.avail_duration_secs]. And the prefetch request to the ADS contains these values https://my.ads.server.com/path?&podId=3&event=my-awesome-event&duration=30. MediaTailor will only insert the prefetched ads into the ad break if has a SCTE marker with an event id of my-awesome-event, since it must match the event id that MediaTailor uses to query the ADS.\n\nYou can specify up to five AvailMatchingCriteria. If you specify multiple AvailMatchingCriteria, MediaTailor combines them to match using a logical AND. You can model logical OR combinations by creating multiple prefetch schedules.\n\nDynamicVariable -> (string)\n\nThe dynamic variable(s) that MediaTailor should use as avail matching criteria. MediaTailor only places the prefetched ads into the avail if the avail matches the criteria defined by the dynamic variable. For information about dynamic variables, see Using dynamic ad variables in the MediaTailor User Guide .\n\nYou can include up to 100 dynamic variables.\n\nOperator -> (string)\n\nFor the DynamicVariable specified in AvailMatchingCriteria, the Operator that is used for the comparison.\n\nEndTime -> (timestamp)\n\nThe time when MediaTailor no longer considers the prefetched ads for use in an ad break. MediaTailor automatically deletes prefetch schedules no less than seven days after the end time. If you’d like to manually delete the prefetch schedule, you can call DeletePrefetchSchedule.\n\nStartTime -> (timestamp)\n\nThe time when prefetched ads are considered for use in an ad break. If you don’t specify StartTime, the prefetched ads are available after MediaTailor retrives them from the ad decision server.\n\nShorthand Syntax:\n\nAvailMatchingCriteria=[{DynamicVariable=string,Operator=string},{DynamicVariable=string,Operator=string}],EndTime=timestamp,StartTime=timestamp\n\n\nJSON Syntax:\n\n{\n  \"AvailMatchingCriteria\": [\n    {\n      \"DynamicVariable\": \"string\",\n      \"Operator\": \"EQUALS\"\n    }\n    ...\n  ],\n  \"EndTime\": timestamp,\n  \"StartTime\": timestamp\n}\n\n\n--name (string)\n\nThe identifier for the playback configuration.\n\n--playback-configuration-name (string)\n\nThe name of the playback configuration.\n\n--retrieval (structure)\n\nThe configuration settings for retrieval of prefetched ads from the ad decision server. Only one set of prefetched ads will be retrieved and subsequently consumed for each ad break.\n\nDynamicVariables -> (map)\n\nThe dynamic variables to use for substitution during prefetch requests to the ad decision server (ADS).\n\nYou intially configure dynamic variables for the ADS URL when you set up your playback configuration. When you specify DynamicVariables for prefetch retrieval, MediaTailor includes the dynamic variables in the request to the ADS.\n\nkey -> (string)\n\nvalue -> (string)\n\nEndTime -> (timestamp)\n\nThe time when prefetch retrieval ends for the ad break. Prefetching will be attempted for manifest requests that occur at or before this time.\n\nStartTime -> (timestamp)\n\nThe time when prefetch retrievals can start for this break. Ad prefetching will be attempted for manifest requests that occur at or after this time. Defaults to the current time. If not specified, the prefetch retrieval starts as soon as possible.\n\nShorthand Syntax:\n\nDynamicVariables={KeyName1=string,KeyName2=string},EndTime=timestamp,StartTime=timestamp\n\n\nJSON Syntax:\n\n{\n  \"DynamicVariables\": {\"string\": \"string\"\n    ...},\n  \"EndTime\": timestamp,\n  \"StartTime\": timestamp\n}\n\n\n--stream-id (string)\n\nAn optional stream identifier that MediaTailor uses to prefetch ads for multiple streams that use the same playback configuration. If StreamId is specified, MediaTailor returns all of the prefetch schedules with an exact match on StreamId. If not specified, MediaTailor returns all of the prefetch schedules for the playback configuration, regardless of StreamId.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the prefetch schedule.\n\nConsumption -> (structure)\n\nConsumption settings determine how, and when, MediaTailor places the prefetched ads into ad breaks. Ad consumption occurs within a span of time that you define, called a consumption window . You can designate which ad breaks that MediaTailor fills with prefetch ads by setting avail matching criteria.\n\nAvailMatchingCriteria -> (list)\n\nIf you only want MediaTailor to insert prefetched ads into avails (ad breaks) that match specific dynamic variables, such as scte.event_id, set the avail matching criteria.\n\n(structure)\n\nMediaTailor only places (consumes) prefetched ads if the ad break meets the criteria defined by the dynamic variables. This gives you granular control over which ad break to place the prefetched ads into.\n\nAs an example, let’s say that you set DynamicVariable to scte.event_id and Operator to EQUALS, and your playback configuration has an ADS URL of https://my.ads.server.com/path?&podId=[scte.avail_num]&event=[scte.event_id]&duration=[session.avail_duration_secs]. And the prefetch request to the ADS contains these values https://my.ads.server.com/path?&podId=3&event=my-awesome-event&duration=30. MediaTailor will only insert the prefetched ads into the ad break if has a SCTE marker with an event id of my-awesome-event, since it must match the event id that MediaTailor uses to query the ADS.\n\nYou can specify up to five AvailMatchingCriteria. If you specify multiple AvailMatchingCriteria, MediaTailor combines them to match using a logical AND. You can model logical OR combinations by creating multiple prefetch schedules.\n\nDynamicVariable -> (string)\n\nThe dynamic variable(s) that MediaTailor should use as avail matching criteria. MediaTailor only places the prefetched ads into the avail if the avail matches the criteria defined by the dynamic variable. For information about dynamic variables, see Using dynamic ad variables in the MediaTailor User Guide .\n\nYou can include up to 100 dynamic variables.\n\nOperator -> (string)\n\nFor the DynamicVariable specified in AvailMatchingCriteria, the Operator that is used for the comparison.\n\nEndTime -> (timestamp)\n\nThe time when MediaTailor no longer considers the prefetched ads for use in an ad break. MediaTailor automatically deletes prefetch schedules no less than seven days after the end time. If you’d like to manually delete the prefetch schedule, you can call DeletePrefetchSchedule.\n\nStartTime -> (timestamp)\n\nThe time when prefetched ads are considered for use in an ad break. If you don’t specify StartTime, the prefetched ads are available after MediaTailor retrives them from the ad decision server.\n\nName -> (string)\n\nThe name of the prefetch schedule. The name must be unique among all prefetch schedules that are associated with the specified playback configuration.\n\nPlaybackConfigurationName -> (string)\n\nThe name of the playback configuration to create the prefetch schedule for.\n\nRetrieval -> (structure)\n\nA complex type that contains settings for prefetch retrieval from the ad decision server (ADS).\n\nDynamicVariables -> (map)\n\nThe dynamic variables to use for substitution during prefetch requests to the ad decision server (ADS).\n\nYou intially configure dynamic variables for the ADS URL when you set up your playback configuration. When you specify DynamicVariables for prefetch retrieval, MediaTailor includes the dynamic variables in the request to the ADS.\n\nkey -> (string)\n\nvalue -> (string)\n\nEndTime -> (timestamp)\n\nThe time when prefetch retrieval ends for the ad break. Prefetching will be attempted for manifest requests that occur at or before this time.\n\nStartTime -> (timestamp)\n\nThe time when prefetch retrievals can start for this break. Ad prefetching will be attempted for manifest requests that occur at or after this time. Defaults to the current time. If not specified, the prefetch retrieval starts as soon as possible.\n\nStreamId -> (string)\n\nAn optional stream identifier that you can specify in order to prefetch for multiple streams that use the same playback configuration."
    },
    {
      "command_name": "create-program",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/create-program.html",
      "command_description": "Description\n\nCreates a program.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-program\n[--ad-breaks <value>]\n--channel-name <value>\n--program-name <value>\n--schedule-configuration <value>\n--source-location-name <value>\n--vod-source-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--ad-breaks <value>]",
        "--channel-name <value>",
        "--program-name <value>",
        "--schedule-configuration <value>",
        "--source-location-name <value>",
        "--vod-source-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ad-breaks (list)\n\nThe ad break configuration settings.\n\n(structure)\n\nAd break configuration parameters.\n\nMessageType -> (string)\n\nThe SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.\n\nOffsetMillis -> (long)\n\nHow long (in milliseconds) after the beginning of the program that an ad starts. This value must fall within 100ms of a segment boundary, otherwise the ad break will be skipped.\n\nSlate -> (structure)\n\nAd break slate configuration.\n\nSourceLocationName -> (string)\n\nThe name of the source location where the slate VOD source is stored.\n\nVodSourceName -> (string)\n\nThe slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.\n\nSpliceInsertMessage -> (structure)\n\nThis defines the SCTE-35 splice_insert() message inserted around the ad. For information about using splice_insert(), see the SCTE-35 specficiaiton, section 9.7.3.1.\n\nAvailNum -> (integer)\n\nThis is written to splice_insert.avail_num, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 0. Values must be between 0 and 256, inclusive.\n\nAvailsExpected -> (integer)\n\nThis is written to splice_insert.avails_expected, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 0. Values must be between 0 and 256, inclusive.\n\nSpliceEventId -> (integer)\n\nThis is written to splice_insert.splice_event_id, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 1.\n\nUniqueProgramId -> (integer)\n\nThis is written to splice_insert.unique_program_id, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 0. Values must be between 0 and 256, inclusive.\n\nShorthand Syntax:\n\nMessageType=string,OffsetMillis=long,Slate={SourceLocationName=string,VodSourceName=string},SpliceInsertMessage={AvailNum=integer,AvailsExpected=integer,SpliceEventId=integer,UniqueProgramId=integer} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"MessageType\": \"SPLICE_INSERT\",\n    \"OffsetMillis\": long,\n    \"Slate\": {\n      \"SourceLocationName\": \"string\",\n      \"VodSourceName\": \"string\"\n    },\n    \"SpliceInsertMessage\": {\n      \"AvailNum\": integer,\n      \"AvailsExpected\": integer,\n      \"SpliceEventId\": integer,\n      \"UniqueProgramId\": integer\n    }\n  }\n  ...\n]\n\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--program-name (string)\n\nThe identifier for the program you are working on.\n\n--schedule-configuration (structure)\n\nThe schedule configuration settings.\n\nTransition -> (structure)\n\nProgram transition configurations.\n\nRelativePosition -> (string)\n\nThe position where this program will be inserted relative to the RelativePosition.\n\nRelativeProgram -> (string)\n\nThe name of the program that this program will be inserted next to, as defined by RelativePosition.\n\nScheduledStartTimeMillis -> (long)\n\nThe date and time that the program is scheduled to start, in epoch milliseconds.\n\nType -> (string)\n\nDefines when the program plays in the schedule. You can set the value to ABSOLUTE or RELATIVE.\n\nABSOLUTE - The program plays at a specific wall clock time. This setting can only be used for channels using the LINEAR PlaybackMode.\n\nNote the following considerations when using ABSOLUTE transitions:\n\nIf the preceding program in the schedule has a duration that extends past the wall clock time, MediaTailor truncates the preceding program on a common segment boundary.\n\nIf there are gaps in playback, MediaTailor plays the FillerSlate you configured for your linear channel.\n\nRELATIVE - The program is inserted into the schedule either before or after a program that you specify via RelativePosition.\n\nShorthand Syntax:\n\nTransition={RelativePosition=string,RelativeProgram=string,ScheduledStartTimeMillis=long,Type=string}\n\n\nJSON Syntax:\n\n{\n  \"Transition\": {\n    \"RelativePosition\": \"BEFORE_PROGRAM\"|\"AFTER_PROGRAM\",\n    \"RelativeProgram\": \"string\",\n    \"ScheduledStartTimeMillis\": long,\n    \"Type\": \"string\"\n  }\n}\n\n\n--source-location-name (string)\n\nThe name of the source location.\n\n--vod-source-name (string)\n\nThe name that’s used to refer to a VOD source.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAdBreaks -> (list)\n\nThe ad break configuration settings.\n\n(structure)\n\nAd break configuration parameters.\n\nMessageType -> (string)\n\nThe SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.\n\nOffsetMillis -> (long)\n\nHow long (in milliseconds) after the beginning of the program that an ad starts. This value must fall within 100ms of a segment boundary, otherwise the ad break will be skipped.\n\nSlate -> (structure)\n\nAd break slate configuration.\n\nSourceLocationName -> (string)\n\nThe name of the source location where the slate VOD source is stored.\n\nVodSourceName -> (string)\n\nThe slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.\n\nSpliceInsertMessage -> (structure)\n\nThis defines the SCTE-35 splice_insert() message inserted around the ad. For information about using splice_insert(), see the SCTE-35 specficiaiton, section 9.7.3.1.\n\nAvailNum -> (integer)\n\nThis is written to splice_insert.avail_num, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 0. Values must be between 0 and 256, inclusive.\n\nAvailsExpected -> (integer)\n\nThis is written to splice_insert.avails_expected, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 0. Values must be between 0 and 256, inclusive.\n\nSpliceEventId -> (integer)\n\nThis is written to splice_insert.splice_event_id, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 1.\n\nUniqueProgramId -> (integer)\n\nThis is written to splice_insert.unique_program_id, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 0. Values must be between 0 and 256, inclusive.\n\nArn -> (string)\n\nThe ARN of the program.\n\nChannelName -> (string)\n\nThe name of the channel that the program belongs to.\n\nCreationTime -> (timestamp)\n\nThe timestamp of when the program was created.\n\nProgramName -> (string)\n\nThe name of the program.\n\nScheduledStartTime -> (timestamp)\n\nThe date and time that the program is scheduled to start in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751 UTC.\n\nSourceLocationName -> (string)\n\nThe source location name.\n\nVodSourceName -> (string)\n\nThe name that’s used to refer to a VOD source."
    },
    {
      "command_name": "create-source-location",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/create-source-location.html",
      "command_description": "Description\n\nCreates a source location on a specific channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-source-location\n[--access-configuration <value>]\n[--default-segment-delivery-configuration <value>]\n--http-configuration <value>\n--source-location-name <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--access-configuration <value>]",
        "[--default-segment-delivery-configuration <value>]",
        "--http-configuration <value>",
        "--source-location-name <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--access-configuration (structure)\n\nAccess configuration parameters. Configures the type of authentication used to access content from your source location.\n\nAccessType -> (string)\n\nThe type of authentication used to access content from HttpConfiguration::BaseUrl on your source location. Accepted value: S3_SIGV4.\n\nS3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted virtual-style access. If your source location base URL is an Amazon S3 bucket, MediaTailor can use AWS Signature Version 4 (SigV4) authentication to access the bucket where your source content is stored. Your MediaTailor source location baseURL must follow the S3 virtual hosted-style request URL format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.\n\nBefore you can use S3_SIGV4, you must meet these requirements:\n\nYou must allow MediaTailor to access your S3 bucket by granting mediatailor.amazonaws.com principal access in IAM. For information about configuring access in IAM, see Access management in the IAM User Guide.\n\nThe mediatailor.amazonaws.com service principal must have permissions to read all top level manifests referenced by the VodSource packaging configurations.\n\nThe caller of the API must have s3:GetObject IAM permissions to read all top level manifests referenced by your MediaTailor VodSource packaging configurations.\n\nSecretsManagerAccessTokenConfiguration -> (structure)\n\nAWS Secrets Manager access token configuration parameters.\n\nHeaderName -> (string)\n\nThe name of the HTTP header used to supply the access token in requests to the source location.\n\nSecretArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.\n\nSecretStringKey -> (string)\n\nThe AWS Secrets Manager SecretString key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.\n\nShorthand Syntax:\n\nAccessType=string,SecretsManagerAccessTokenConfiguration={HeaderName=string,SecretArn=string,SecretStringKey=string}\n\n\nJSON Syntax:\n\n{\n  \"AccessType\": \"S3_SIGV4\"|\"SECRETS_MANAGER_ACCESS_TOKEN\",\n  \"SecretsManagerAccessTokenConfiguration\": {\n    \"HeaderName\": \"string\",\n    \"SecretArn\": \"string\",\n    \"SecretStringKey\": \"string\"\n  }\n}\n\n\n--default-segment-delivery-configuration (structure)\n\nThe optional configuration for the server that serves segments.\n\nBaseUrl -> (string)\n\nThe hostname of the server that will be used to serve segments. This string must include the protocol, such as https:// .\n\nShorthand Syntax:\n\nBaseUrl=string\n\n\nJSON Syntax:\n\n{\n  \"BaseUrl\": \"string\"\n}\n\n\n--http-configuration (structure)\n\nThe source’s HTTP package configurations.\n\nBaseUrl -> (string)\n\nThe base URL for the source location host server. This string must include the protocol, such as https:// .\n\nShorthand Syntax:\n\nBaseUrl=string\n\n\nJSON Syntax:\n\n{\n  \"BaseUrl\": \"string\"\n}\n\n\n--source-location-name (string)\n\nThe identifier for the source location you are working on.\n\n--tags (map)\n\nThe tags to assign to the source location.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccessConfiguration -> (structure)\n\nThe access configuration for the source location.\n\nAccessType -> (string)\n\nThe type of authentication used to access content from HttpConfiguration::BaseUrl on your source location. Accepted value: S3_SIGV4.\n\nS3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted virtual-style access. If your source location base URL is an Amazon S3 bucket, MediaTailor can use AWS Signature Version 4 (SigV4) authentication to access the bucket where your source content is stored. Your MediaTailor source location baseURL must follow the S3 virtual hosted-style request URL format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.\n\nBefore you can use S3_SIGV4, you must meet these requirements:\n\nYou must allow MediaTailor to access your S3 bucket by granting mediatailor.amazonaws.com principal access in IAM. For information about configuring access in IAM, see Access management in the IAM User Guide.\n\nThe mediatailor.amazonaws.com service principal must have permissions to read all top level manifests referenced by the VodSource packaging configurations.\n\nThe caller of the API must have s3:GetObject IAM permissions to read all top level manifests referenced by your MediaTailor VodSource packaging configurations.\n\nSecretsManagerAccessTokenConfiguration -> (structure)\n\nAWS Secrets Manager access token configuration parameters.\n\nHeaderName -> (string)\n\nThe name of the HTTP header used to supply the access token in requests to the source location.\n\nSecretArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.\n\nSecretStringKey -> (string)\n\nThe AWS Secrets Manager SecretString key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.\n\nArn -> (string)\n\nThe ARN of the source location.\n\nCreationTime -> (timestamp)\n\nThe timestamp that indicates when the source location was created.\n\nDefaultSegmentDeliveryConfiguration -> (structure)\n\nThe default segment delivery configuration settings.\n\nBaseUrl -> (string)\n\nThe hostname of the server that will be used to serve segments. This string must include the protocol, such as https:// .\n\nHttpConfiguration -> (structure)\n\nThe HTTP package configuration settings for the source location.\n\nBaseUrl -> (string)\n\nThe base URL for the source location host server. This string must include the protocol, such as https:// .\n\nLastModifiedTime -> (timestamp)\n\nThe timestamp that indicates when the source location was last modified.\n\nSourceLocationName -> (string)\n\nThe name of the source location.\n\nTags -> (map)\n\nThe tags assigned to the source location.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "create-vod-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/create-vod-source.html",
      "command_description": "Description\n\nCreates name for a specific VOD source in a source location.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-vod-source\n--http-package-configurations <value>\n--source-location-name <value>\n[--tags <value>]\n--vod-source-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--http-package-configurations <value>",
        "--source-location-name <value>",
        "[--tags <value>]",
        "--vod-source-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--http-package-configurations (list)\n\nAn array of HTTP package configuration parameters for this VOD source.\n\n(structure)\n\nThe HTTP package configuration properties for the requested VOD source.\n\nPath -> (string)\n\nThe relative path to the URL for this VOD source. This is combined with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.\n\nSourceGroup -> (string)\n\nThe name of the source group. This has to match one of the Channel::Outputs::SourceGroup.\n\nType -> (string)\n\nThe streaming protocol for this package configuration. Supported values are HLS and DASH.\n\nShorthand Syntax:\n\nPath=string,SourceGroup=string,Type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Path\": \"string\",\n    \"SourceGroup\": \"string\",\n    \"Type\": \"DASH\"|\"HLS\"\n  }\n  ...\n]\n\n\n--source-location-name (string)\n\nThe identifier for the source location you are working on.\n\n--tags (map)\n\nThe tags to assign to the VOD source.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--vod-source-name (string)\n\nThe identifier for the VOD source you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the VOD source.\n\nCreationTime -> (timestamp)\n\nThe timestamp that indicates when the VOD source was created.\n\nHttpPackageConfigurations -> (list)\n\nThe HTTP package configurations.\n\n(structure)\n\nThe HTTP package configuration properties for the requested VOD source.\n\nPath -> (string)\n\nThe relative path to the URL for this VOD source. This is combined with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.\n\nSourceGroup -> (string)\n\nThe name of the source group. This has to match one of the Channel::Outputs::SourceGroup.\n\nType -> (string)\n\nThe streaming protocol for this package configuration. Supported values are HLS and DASH.\n\nLastModifiedTime -> (timestamp)\n\nThe ARN for the VOD source.\n\nSourceLocationName -> (string)\n\nThe name of the source location associated with the VOD source.\n\nTags -> (map)\n\nThe tags assigned to the VOD source.\n\nkey -> (string)\n\nvalue -> (string)\n\nVodSourceName -> (string)\n\nThe name of the VOD source."
    },
    {
      "command_name": "delete-channel",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/delete-channel.html",
      "command_description": "Description\n\nDeletes a channel. You must stop the channel before it can be deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-channel\n--channel-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-channel-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/delete-channel-policy.html",
      "command_description": "Description\n\nDeletes a channel’s IAM policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-channel-policy\n--channel-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-playback-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/delete-playback-configuration.html",
      "command_description": "Description\n\nDeletes the playback configuration for the specified name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-playback-configuration\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe identifier for the playback configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a configuration\n\nThe following delete-playback-configuration deletes a configuration named campaign_short.\n\naws mediatailor delete-playback-configuration \\\n    --name campaign_short\n\n\nThis command produces no output.\n\nFor more information, see Deleting a Configuration in the AWS Elemental MediaTailor User Guide."
    },
    {
      "command_name": "delete-prefetch-schedule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/delete-prefetch-schedule.html",
      "command_description": "Description\n\nDeletes a prefetch schedule for a specific playback configuration. If you call DeletePrefetchSchedule on an expired prefetch schedule, MediaTailor returns an HTTP 404 status code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-prefetch-schedule\n--name <value>\n--playback-configuration-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--playback-configuration-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe identifier for the playback configuration.\n\n--playback-configuration-name (string)\n\nThe name of the playback configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-program",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/delete-program.html",
      "command_description": "Description\n\nDeletes a specific program on a specific channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-program\n--channel-name <value>\n--program-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "--program-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--program-name (string)\n\nThe identifier for the program you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-source-location",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/delete-source-location.html",
      "command_description": "Description\n\nDeletes a source location on a specific channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-source-location\n--source-location-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--source-location-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--source-location-name (string)\n\nThe identifier for the source location you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-vod-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/delete-vod-source.html",
      "command_description": "Description\n\nDeletes a specific VOD source in a specific source location.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-vod-source\n--source-location-name <value>\n--vod-source-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--source-location-name <value>",
        "--vod-source-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--source-location-name (string)\n\nThe identifier for the source location you are working on.\n\n--vod-source-name (string)\n\nThe identifier for the VOD source you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-channel",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/describe-channel.html",
      "command_description": "Description\n\nDescribes the properties of a specific channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-channel\n--channel-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the channel.\n\nChannelName -> (string)\n\nThe name of the channel.\n\nChannelState -> (string)\n\nIndicates whether the channel is in a running state or not.\n\nCreationTime -> (timestamp)\n\nThe timestamp of when the channel was created.\n\nFillerSlate -> (structure)\n\nContains information about the slate used to fill gaps between programs in the schedule.\n\nSourceLocationName -> (string)\n\nThe name of the source location where the slate VOD source is stored.\n\nVodSourceName -> (string)\n\nThe slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.\n\nLastModifiedTime -> (timestamp)\n\nThe timestamp of when the channel was last modified.\n\nOutputs -> (list)\n\nThe channel’s output properties.\n\n(structure)\n\nThis response includes only the “property” : “type” property.\n\nDashPlaylistSettings -> (structure)\n\nDASH manifest configuration settings.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nMinBufferTimeSeconds -> (integer)\n\nMinimum amount of content (measured in seconds) that a player must keep available in the buffer. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nMinUpdatePeriodSeconds -> (integer)\n\nMinimum amount of time (in seconds) that the player should wait before requesting updates to the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nSuggestedPresentationDelaySeconds -> (integer)\n\nAmount of time (in seconds) that the player should be from the live point at the end of the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nHlsPlaylistSettings -> (structure)\n\nHLS manifest configuration settings.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nManifestName -> (string)\n\nThe name of the manifest for the channel that will appear in the channel output’s playback URL.\n\nPlaybackUrl -> (string)\n\nThe URL used for playback by content players.\n\nSourceGroup -> (string)\n\nA string used to associate a package configuration source group with a channel output.\n\nPlaybackMode -> (string)\n\nThe channel’s playback mode.\n\nTags -> (map)\n\nThe tags assigned to the channel.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "describe-program",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/describe-program.html",
      "command_description": "Description\n\nRetrieves the properties of the requested program.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-program\n--channel-name <value>\n--program-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "--program-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--program-name (string)\n\nThe identifier for the program you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAdBreaks -> (list)\n\nThe ad break configuration settings.\n\n(structure)\n\nAd break configuration parameters.\n\nMessageType -> (string)\n\nThe SCTE-35 ad insertion type. Accepted value: SPLICE_INSERT.\n\nOffsetMillis -> (long)\n\nHow long (in milliseconds) after the beginning of the program that an ad starts. This value must fall within 100ms of a segment boundary, otherwise the ad break will be skipped.\n\nSlate -> (structure)\n\nAd break slate configuration.\n\nSourceLocationName -> (string)\n\nThe name of the source location where the slate VOD source is stored.\n\nVodSourceName -> (string)\n\nThe slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.\n\nSpliceInsertMessage -> (structure)\n\nThis defines the SCTE-35 splice_insert() message inserted around the ad. For information about using splice_insert(), see the SCTE-35 specficiaiton, section 9.7.3.1.\n\nAvailNum -> (integer)\n\nThis is written to splice_insert.avail_num, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 0. Values must be between 0 and 256, inclusive.\n\nAvailsExpected -> (integer)\n\nThis is written to splice_insert.avails_expected, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 0. Values must be between 0 and 256, inclusive.\n\nSpliceEventId -> (integer)\n\nThis is written to splice_insert.splice_event_id, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 1.\n\nUniqueProgramId -> (integer)\n\nThis is written to splice_insert.unique_program_id, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is 0. Values must be between 0 and 256, inclusive.\n\nArn -> (string)\n\nThe ARN of the program.\n\nChannelName -> (string)\n\nThe name of the channel that the program belongs to.\n\nCreationTime -> (timestamp)\n\nThe timestamp of when the program was created.\n\nProgramName -> (string)\n\nThe name of the program.\n\nScheduledStartTime -> (timestamp)\n\nThe date and time that the program is scheduled to start in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751 UTC.\n\nSourceLocationName -> (string)\n\nThe source location name.\n\nVodSourceName -> (string)\n\nThe name that’s used to refer to a VOD source."
    },
    {
      "command_name": "describe-source-location",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/describe-source-location.html",
      "command_description": "Description\n\nRetrieves the properties of the requested source location.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-source-location\n--source-location-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--source-location-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--source-location-name (string)\n\nThe identifier for the source location you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccessConfiguration -> (structure)\n\nThe access configuration for the source location.\n\nAccessType -> (string)\n\nThe type of authentication used to access content from HttpConfiguration::BaseUrl on your source location. Accepted value: S3_SIGV4.\n\nS3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted virtual-style access. If your source location base URL is an Amazon S3 bucket, MediaTailor can use AWS Signature Version 4 (SigV4) authentication to access the bucket where your source content is stored. Your MediaTailor source location baseURL must follow the S3 virtual hosted-style request URL format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.\n\nBefore you can use S3_SIGV4, you must meet these requirements:\n\nYou must allow MediaTailor to access your S3 bucket by granting mediatailor.amazonaws.com principal access in IAM. For information about configuring access in IAM, see Access management in the IAM User Guide.\n\nThe mediatailor.amazonaws.com service principal must have permissions to read all top level manifests referenced by the VodSource packaging configurations.\n\nThe caller of the API must have s3:GetObject IAM permissions to read all top level manifests referenced by your MediaTailor VodSource packaging configurations.\n\nSecretsManagerAccessTokenConfiguration -> (structure)\n\nAWS Secrets Manager access token configuration parameters.\n\nHeaderName -> (string)\n\nThe name of the HTTP header used to supply the access token in requests to the source location.\n\nSecretArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.\n\nSecretStringKey -> (string)\n\nThe AWS Secrets Manager SecretString key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.\n\nArn -> (string)\n\nThe ARN of the source location.\n\nCreationTime -> (timestamp)\n\nThe timestamp that indicates when the source location was created.\n\nDefaultSegmentDeliveryConfiguration -> (structure)\n\nThe default segment delivery configuration settings.\n\nBaseUrl -> (string)\n\nThe hostname of the server that will be used to serve segments. This string must include the protocol, such as https:// .\n\nHttpConfiguration -> (structure)\n\nThe HTTP package configuration settings for the source location.\n\nBaseUrl -> (string)\n\nThe base URL for the source location host server. This string must include the protocol, such as https:// .\n\nLastModifiedTime -> (timestamp)\n\nThe timestamp that indicates when the source location was last modified.\n\nSourceLocationName -> (string)\n\nThe name of the source location.\n\nTags -> (map)\n\nThe tags assigned to the source location.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "describe-vod-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/describe-vod-source.html",
      "command_description": "Description\n\nProvides details about a specific VOD source in a specific source location.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-vod-source\n--source-location-name <value>\n--vod-source-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--source-location-name <value>",
        "--vod-source-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--source-location-name (string)\n\nThe identifier for the source location you are working on.\n\n--vod-source-name (string)\n\nThe identifier for the VOD source you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the VOD source.\n\nCreationTime -> (timestamp)\n\nThe timestamp that indicates when the VOD source was created.\n\nHttpPackageConfigurations -> (list)\n\nThe HTTP package configurations.\n\n(structure)\n\nThe HTTP package configuration properties for the requested VOD source.\n\nPath -> (string)\n\nThe relative path to the URL for this VOD source. This is combined with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.\n\nSourceGroup -> (string)\n\nThe name of the source group. This has to match one of the Channel::Outputs::SourceGroup.\n\nType -> (string)\n\nThe streaming protocol for this package configuration. Supported values are HLS and DASH.\n\nLastModifiedTime -> (timestamp)\n\nThe ARN for the VOD source.\n\nSourceLocationName -> (string)\n\nThe name of the source location associated with the VOD source.\n\nTags -> (map)\n\nThe tags assigned to the VOD source.\n\nkey -> (string)\n\nvalue -> (string)\n\nVodSourceName -> (string)\n\nThe name of the VOD source."
    },
    {
      "command_name": "get-channel-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/get-channel-policy.html",
      "command_description": "Description\n\nRetrieves information about a channel’s IAM policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-channel-policy\n--channel-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicy -> (string)\n\nThe IAM policy for the channel."
    },
    {
      "command_name": "get-channel-schedule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/get-channel-schedule.html",
      "command_description": "Description\n\nRetrieves information about your channel’s schedule.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-channel-schedule is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Items",
      "command_synopsis": "Synopsis\n  get-channel-schedule\n--channel-name <value>\n[--duration-minutes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "[--duration-minutes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--duration-minutes (string)\n\nThe schedule duration in minutes. The maximum duration is 4320 minutes (three days).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nAn array of schedule entries for the channel.\n\n(structure)\n\nThe properties for a schedule.\n\nApproximateDurationSeconds -> (long)\n\nThe approximate duration of this program, in seconds.\n\nApproximateStartTime -> (timestamp)\n\nThe approximate time that the program will start playing.\n\nArn -> (string)\n\nThe ARN of the program.\n\nChannelName -> (string)\n\nThe name of the channel that uses this schedule.\n\nProgramName -> (string)\n\nThe name of the program.\n\nScheduleAdBreaks -> (list)\n\nThe schedule’s ad break properties.\n\n(structure)\n\nThe schedule’s ad break properties.\n\nApproximateDurationSeconds -> (long)\n\nThe approximate duration of the ad break, in seconds.\n\nApproximateStartTime -> (timestamp)\n\nThe approximate time that the ad will start playing.\n\nSourceLocationName -> (string)\n\nThe name of the source location containing the VOD source used for the ad break.\n\nVodSourceName -> (string)\n\nThe name of the VOD source used for the ad break.\n\nScheduleEntryType -> (string)\n\nThe type of schedule entry.\n\nValid values: PROGRAM or FILLER_SLATE.\n\nSourceLocationName -> (string)\n\nThe name of the source location.\n\nVodSourceName -> (string)\n\nThe name of the VOD source.\n\nNextToken -> (string)\n\nPagination token from the GET list request. Use the token to fetch the next page of results."
    },
    {
      "command_name": "get-playback-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/get-playback-configuration.html",
      "command_description": "Description\n\nReturns the playback configuration for the specified name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-playback-configuration\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe identifier for the playback configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAdDecisionServerUrl -> (string)\n\nThe URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing, you can provide a static VAST URL. The maximum length is 25,000 characters.\n\nAvailSuppression -> (structure)\n\nThe configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression .\n\nMode -> (string)\n\nSets the ad suppression mode. By default, ad suppression is off and all ad breaks are filled with ads or slate. When Mode is set to BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won’t fill ad breaks on or behind the ad suppression Value time in the manifest lookback window.\n\nValue -> (string)\n\nA live edge offset time in HH:MM:SS. MediaTailor won’t fill ad breaks on or behind this time in the manifest lookback window. If Value is set to 00:00:00, it is in sync with the live edge, and MediaTailor won’t fill any ad breaks on or behind the live edge. If you set a Value time, MediaTailor won’t fill any ad breaks on or behind this time in the manifest lookback window. For example, if you set 00:45:00, then MediaTailor will fill ad breaks that occur within 45 minutes behind the live edge, but won’t fill ad breaks on or behind 45 minutes behind the live edge.\n\nBumper -> (structure)\n\nThe configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers .\n\nEndUrl -> (string)\n\nThe URL for the end bumper asset.\n\nStartUrl -> (string)\n\nThe URL for the start bumper asset.\n\nCdnConfiguration -> (structure)\n\nThe configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.\n\nAdSegmentUrlPrefix -> (string)\n\nA non-default content delivery network (CDN) to serve ad segments. By default, AWS Elemental MediaTailor uses Amazon CloudFront with default cache settings as its CDN for ad segments. To set up an alternate CDN, create a rule in your CDN for the origin ads.mediatailor.&lt;region>.amazonaws.com. Then specify the rule’s name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for ad segments.\n\nContentSegmentUrlPrefix -> (string)\n\nA content delivery network (CDN) to cache content segments, so that content requests don’t always have to go to the origin server. First, create a rule in your CDN for the content segment origin server. Then specify the rule’s name in this ContentSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for content segments.\n\nConfigurationAliases -> (map)\n\nThe player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables .\n\nkey -> (string)\n\nThe dynamic variable that has aliases.\n\nvalue -> (map)\n\nMap of aliases to the value to be used at request time.\n\nkey -> (string)\n\nvalue -> (string)\n\nDashConfiguration -> (structure)\n\nThe configuration for DASH content.\n\nManifestEndpointPrefix -> (string)\n\nThe URL generated by MediaTailor to initiate a playback session. The session uses server-side reporting. This setting is ignored in PUT operations.\n\nMpdLocation -> (string)\n\nThe setting that controls whether MediaTailor includes the Location tag in DASH manifests. MediaTailor populates the Location tag with the URL for manifest update requests, to be used by players that don’t support sticky redirects. Disable this if you have CDN routing rules set up for accessing MediaTailor manifests, and you are either using client-side reporting or your players support sticky HTTP redirects. Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting enables the inclusion of the tag and is the default value.\n\nOriginManifestType -> (string)\n\nThe setting that controls whether MediaTailor handles manifests from the origin server as multi-period manifests or single-period manifests. If your origin server produces single-period manifests, set this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For multi-period manifests, omit this setting or set it to MULTI_PERIOD.\n\nHlsConfiguration -> (structure)\n\nThe configuration for HLS content.\n\nManifestEndpointPrefix -> (string)\n\nThe URL that is used to initiate a playback session for devices that support Apple HLS. The session uses server-side reporting.\n\nLivePreRollConfiguration -> (structure)\n\nThe configuration for pre-roll ad insertion.\n\nAdDecisionServerUrl -> (string)\n\nThe URL for the ad decision server (ADS) for pre-roll ads. This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing, you can provide a static VAST URL. The maximum length is 25,000 characters.\n\nMaxDurationSeconds -> (integer)\n\nThe maximum allowed duration for the pre-roll ad avail. AWS Elemental MediaTailor won’t play pre-roll ads to exceed this duration, regardless of the total duration of ads that the ADS returns.\n\nLogConfiguration -> (structure)\n\nThe Amazon CloudWatch log settings for a playback configuration.\n\nPercentEnabled -> (integer)\n\nThe percentage of session logs that MediaTailor sends to your Cloudwatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to 60, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the debug log mode .\n\nValid values: 0 - 100\n\nManifestProcessingRules -> (structure)\n\nThe configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.\n\nAdMarkerPassthrough -> (structure)\n\nFor HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the MediaTailor personalized manifest.\n\nNo logic is applied to these ad markers. For example, if EXT-X-CUE-OUT has a value of 60, but no ads are filled for that ad break, MediaTailor will not set the value to 0.\n\nEnabled -> (boolean)\n\nEnables ad marker passthrough for your configuration.\n\nName -> (string)\n\nThe identifier for the playback configuration.\n\nPersonalizationThresholdSeconds -> (integer)\n\nDefines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor .\n\nPlaybackConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) for the playback configuration.\n\nPlaybackEndpointPrefix -> (string)\n\nThe URL that the player accesses to get a manifest from AWS Elemental MediaTailor. This session will use server-side reporting.\n\nSessionInitializationEndpointPrefix -> (string)\n\nThe URL that the player uses to initialize a session that uses client-side reporting.\n\nSlateAdUrl -> (string)\n\nThe URL for a high-quality video asset to transcode and use to fill in time that’s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID playback configurations. For VPAID, the slate is required because MediaTailor provides it in the slots designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.\n\nTags -> (map)\n\nThe tags assigned to the playback configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nTranscodeProfileName -> (string)\n\nThe name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.\n\nVideoContentSourceUrl -> (string)\n\nThe URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.",
      "command_examples": "Examples\n\nTo describe a configuration\n\nThe following get-playback-configuration displays all of the details of the configuration named west_campaign.\n\naws mediatailor get-playback-configuration \\\n    --name west_campaign\n\n\nOutput:\n\n{\n     \"AdDecisionServerUrl\": \"http://your.ads.url\",\n     \"CdnConfiguration\": {},\n     \"DashConfiguration\": {\n         \"ManifestEndpointPrefix\": \"https://170c14299689462897d0cc45fc2000bb.mediatailor.us-west-2.amazonaws.com/v1/dash/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/west_campaign/\",\n         \"MpdLocation\": \"EMT_DEFAULT\",\n         \"OriginManifestType\": \"MULTI_PERIOD\"\n     },\n     \"HlsConfiguration\": {\n         \"ManifestEndpointPrefix\": \"https://170c14299689462897d0cc45fc2000bb.mediatailor.us-west-2.amazonaws.com/v1/master/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/west_campaign/\"\n     },\n     \"Name\": \"west_campaign\",\n     \"PlaybackConfigurationArn\": \"arn:aws:mediatailor:us-west-2:123456789012:playbackConfiguration/west_campaign\",\n     \"PlaybackEndpointPrefix\": \"https://170c14299689462897d0cc45fc2000bb.mediatailor.us-west-2.amazonaws.com\",\n     \"SessionInitializationEndpointPrefix\": \"https://170c14299689462897d0cc45fc2000bb.mediatailor.us-west-2.amazonaws.com/v1/session/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/west_campaign/\",\n     \"Tags\": {},\n     \"VideoContentSourceUrl\": \"https://8343f7014c0ea438.mediapackage.us-west-2.amazonaws.com/out/v1/683f0f2ff7cd43a48902e6dcd5e16dcf/index.m3u8\"\n}\n\n\nFor more information, see Viewing a Configuration in the AWS Elemental MediaTailor User Guide."
    },
    {
      "command_name": "get-prefetch-schedule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/get-prefetch-schedule.html",
      "command_description": "Description\n\nReturns information about the prefetch schedule for a specific playback configuration. If you call GetPrefetchSchedule on an expired prefetch schedule, MediaTailor returns an HTTP 404 status code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-prefetch-schedule\n--name <value>\n--playback-configuration-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--playback-configuration-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe identifier for the playback configuration.\n\n--playback-configuration-name (string)\n\nThe name of the playback configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the prefetch schedule.\n\nConsumption -> (structure)\n\nConsumption settings determine how, and when, MediaTailor places the prefetched ads into ad breaks. Ad consumption occurs within a span of time that you define, called a consumption window . You can designate which ad breaks that MediaTailor fills with prefetch ads by setting avail matching criteria.\n\nAvailMatchingCriteria -> (list)\n\nIf you only want MediaTailor to insert prefetched ads into avails (ad breaks) that match specific dynamic variables, such as scte.event_id, set the avail matching criteria.\n\n(structure)\n\nMediaTailor only places (consumes) prefetched ads if the ad break meets the criteria defined by the dynamic variables. This gives you granular control over which ad break to place the prefetched ads into.\n\nAs an example, let’s say that you set DynamicVariable to scte.event_id and Operator to EQUALS, and your playback configuration has an ADS URL of https://my.ads.server.com/path?&podId=[scte.avail_num]&event=[scte.event_id]&duration=[session.avail_duration_secs]. And the prefetch request to the ADS contains these values https://my.ads.server.com/path?&podId=3&event=my-awesome-event&duration=30. MediaTailor will only insert the prefetched ads into the ad break if has a SCTE marker with an event id of my-awesome-event, since it must match the event id that MediaTailor uses to query the ADS.\n\nYou can specify up to five AvailMatchingCriteria. If you specify multiple AvailMatchingCriteria, MediaTailor combines them to match using a logical AND. You can model logical OR combinations by creating multiple prefetch schedules.\n\nDynamicVariable -> (string)\n\nThe dynamic variable(s) that MediaTailor should use as avail matching criteria. MediaTailor only places the prefetched ads into the avail if the avail matches the criteria defined by the dynamic variable. For information about dynamic variables, see Using dynamic ad variables in the MediaTailor User Guide .\n\nYou can include up to 100 dynamic variables.\n\nOperator -> (string)\n\nFor the DynamicVariable specified in AvailMatchingCriteria, the Operator that is used for the comparison.\n\nEndTime -> (timestamp)\n\nThe time when MediaTailor no longer considers the prefetched ads for use in an ad break. MediaTailor automatically deletes prefetch schedules no less than seven days after the end time. If you’d like to manually delete the prefetch schedule, you can call DeletePrefetchSchedule.\n\nStartTime -> (timestamp)\n\nThe time when prefetched ads are considered for use in an ad break. If you don’t specify StartTime, the prefetched ads are available after MediaTailor retrives them from the ad decision server.\n\nName -> (string)\n\nThe name of the prefetch schedule. The name must be unique among all prefetch schedules that are associated with the specified playback configuration.\n\nPlaybackConfigurationName -> (string)\n\nThe name of the playback configuration to create the prefetch schedule for.\n\nRetrieval -> (structure)\n\nA complex type that contains settings for prefetch retrieval from the ad decision server (ADS).\n\nDynamicVariables -> (map)\n\nThe dynamic variables to use for substitution during prefetch requests to the ad decision server (ADS).\n\nYou intially configure dynamic variables for the ADS URL when you set up your playback configuration. When you specify DynamicVariables for prefetch retrieval, MediaTailor includes the dynamic variables in the request to the ADS.\n\nkey -> (string)\n\nvalue -> (string)\n\nEndTime -> (timestamp)\n\nThe time when prefetch retrieval ends for the ad break. Prefetching will be attempted for manifest requests that occur at or before this time.\n\nStartTime -> (timestamp)\n\nThe time when prefetch retrievals can start for this break. Ad prefetching will be attempted for manifest requests that occur at or after this time. Defaults to the current time. If not specified, the prefetch retrieval starts as soon as possible.\n\nStreamId -> (string)\n\nAn optional stream identifier that you can specify in order to prefetch for multiple streams that use the same playback configuration."
    },
    {
      "command_name": "list-alerts",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/list-alerts.html",
      "command_description": "Description\n\nReturns a list of alerts for the given resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-alerts is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Items",
      "command_synopsis": "Synopsis\n  list-alerts\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nAn array of alerts that are associated with this resource.\n\n(structure)\n\nAlert configuration parameters.\n\nAlertCode -> (string)\n\nThe code for the alert. For example, NOT_PROCESSED.\n\nAlertMessage -> (string)\n\nIf an alert is generated for a resource, an explanation of the reason for the alert.\n\nLastModifiedTime -> (timestamp)\n\nThe timestamp when the alert was last modified.\n\nRelatedResourceArns -> (list)\n\nThe Amazon Resource Names (ARNs) related to this alert.\n\n(string)\n\nResourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the resource.\n\nNextToken -> (string)\n\nPagination token from the list request. Use the token to fetch the next page of results."
    },
    {
      "command_name": "list-channels",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/list-channels.html",
      "command_description": "Description\n\nRetrieves a list of channels that are associated with this account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-channels is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Items",
      "command_synopsis": "Synopsis\n  list-channels\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nAn array of channels that are associated with this account.\n\n(structure)\n\nThe configuration parameters for a channel.\n\nArn -> (string)\n\nThe ARN of the channel.\n\nChannelName -> (string)\n\nThe name of the channel.\n\nChannelState -> (string)\n\nReturns the state whether the channel is running or not.\n\nCreationTime -> (timestamp)\n\nThe timestamp of when the channel was created.\n\nFillerSlate -> (structure)\n\nContains information about the slate used to fill gaps between programs in the schedule. You must configure FillerSlate if your channel uses an LINEAR PlaybackMode.\n\nSourceLocationName -> (string)\n\nThe name of the source location where the slate VOD source is stored.\n\nVodSourceName -> (string)\n\nThe slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.\n\nLastModifiedTime -> (timestamp)\n\nThe timestamp of when the channel was last modified.\n\nOutputs -> (list)\n\nThe channel’s output properties.\n\n(structure)\n\nThis response includes only the “property” : “type” property.\n\nDashPlaylistSettings -> (structure)\n\nDASH manifest configuration settings.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nMinBufferTimeSeconds -> (integer)\n\nMinimum amount of content (measured in seconds) that a player must keep available in the buffer. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nMinUpdatePeriodSeconds -> (integer)\n\nMinimum amount of time (in seconds) that the player should wait before requesting updates to the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nSuggestedPresentationDelaySeconds -> (integer)\n\nAmount of time (in seconds) that the player should be from the live point at the end of the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nHlsPlaylistSettings -> (structure)\n\nHLS manifest configuration settings.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nManifestName -> (string)\n\nThe name of the manifest for the channel that will appear in the channel output’s playback URL.\n\nPlaybackUrl -> (string)\n\nThe URL used for playback by content players.\n\nSourceGroup -> (string)\n\nA string used to associate a package configuration source group with a channel output.\n\nPlaybackMode -> (string)\n\nThe type of playback mode for this channel.\n\nLINEAR - Programs play back-to-back only once.\n\nLOOP - Programs play back-to-back in an endless loop. When the last program in the schedule plays, playback loops back to the first program in the schedule.\n\nTags -> (map)\n\nThe tags to assign to the channel.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nPagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results."
    },
    {
      "command_name": "list-playback-configurations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/list-playback-configurations.html",
      "command_description": "Description\n\nReturns a list of the playback configurations defined in AWS Elemental MediaTailor. You can specify a maximum number of configurations to return at a time. The default maximum is 50. Results are returned in pagefuls. If MediaTailor has more configurations than the specified maximum, it provides parameters in the response that you can use to retrieve the next pageful.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-playback-configurations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Items",
      "command_synopsis": "Synopsis\n  list-playback-configurations\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nArray of playback configurations. This might be all the available configurations or a subset, depending on the settings that you provide and the total number of configurations stored.\n\n(structure)\n\nCreates a playback configuration. For information about MediaTailor configurations, see Working with configurations in AWS Elemental MediaTailor .\n\nAdDecisionServerUrl -> (string)\n\nThe URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.\n\nAvailSuppression -> (structure)\n\nThe configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression .\n\nMode -> (string)\n\nSets the ad suppression mode. By default, ad suppression is off and all ad breaks are filled with ads or slate. When Mode is set to BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won’t fill ad breaks on or behind the ad suppression Value time in the manifest lookback window.\n\nValue -> (string)\n\nA live edge offset time in HH:MM:SS. MediaTailor won’t fill ad breaks on or behind this time in the manifest lookback window. If Value is set to 00:00:00, it is in sync with the live edge, and MediaTailor won’t fill any ad breaks on or behind the live edge. If you set a Value time, MediaTailor won’t fill any ad breaks on or behind this time in the manifest lookback window. For example, if you set 00:45:00, then MediaTailor will fill ad breaks that occur within 45 minutes behind the live edge, but won’t fill ad breaks on or behind 45 minutes behind the live edge.\n\nBumper -> (structure)\n\nThe configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers .\n\nEndUrl -> (string)\n\nThe URL for the end bumper asset.\n\nStartUrl -> (string)\n\nThe URL for the start bumper asset.\n\nCdnConfiguration -> (structure)\n\nThe configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.\n\nAdSegmentUrlPrefix -> (string)\n\nA non-default content delivery network (CDN) to serve ad segments. By default, AWS Elemental MediaTailor uses Amazon CloudFront with default cache settings as its CDN for ad segments. To set up an alternate CDN, create a rule in your CDN for the origin ads.mediatailor.&lt;region>.amazonaws.com. Then specify the rule’s name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for ad segments.\n\nContentSegmentUrlPrefix -> (string)\n\nA content delivery network (CDN) to cache content segments, so that content requests don’t always have to go to the origin server. First, create a rule in your CDN for the content segment origin server. Then specify the rule’s name in this ContentSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for content segments.\n\nConfigurationAliases -> (map)\n\nThe player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables .\n\nkey -> (string)\n\nThe dynamic variable that has aliases.\n\nvalue -> (map)\n\nMap of aliases to the value to be used at request time.\n\nkey -> (string)\n\nvalue -> (string)\n\nDashConfiguration -> (structure)\n\nThe configuration for a DASH source.\n\nManifestEndpointPrefix -> (string)\n\nThe URL generated by MediaTailor to initiate a playback session. The session uses server-side reporting. This setting is ignored in PUT operations.\n\nMpdLocation -> (string)\n\nThe setting that controls whether MediaTailor includes the Location tag in DASH manifests. MediaTailor populates the Location tag with the URL for manifest update requests, to be used by players that don’t support sticky redirects. Disable this if you have CDN routing rules set up for accessing MediaTailor manifests, and you are either using client-side reporting or your players support sticky HTTP redirects. Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting enables the inclusion of the tag and is the default value.\n\nOriginManifestType -> (string)\n\nThe setting that controls whether MediaTailor handles manifests from the origin server as multi-period manifests or single-period manifests. If your origin server produces single-period manifests, set this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For multi-period manifests, omit this setting or set it to MULTI_PERIOD.\n\nHlsConfiguration -> (structure)\n\nThe configuration for HLS content.\n\nManifestEndpointPrefix -> (string)\n\nThe URL that is used to initiate a playback session for devices that support Apple HLS. The session uses server-side reporting.\n\nLivePreRollConfiguration -> (structure)\n\nThe configuration for pre-roll ad insertion.\n\nAdDecisionServerUrl -> (string)\n\nThe URL for the ad decision server (ADS) for pre-roll ads. This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing, you can provide a static VAST URL. The maximum length is 25,000 characters.\n\nMaxDurationSeconds -> (integer)\n\nThe maximum allowed duration for the pre-roll ad avail. AWS Elemental MediaTailor won’t play pre-roll ads to exceed this duration, regardless of the total duration of ads that the ADS returns.\n\nLogConfiguration -> (structure)\n\nThe Amazon CloudWatch log settings for a playback configuration.\n\nPercentEnabled -> (integer)\n\nThe percentage of session logs that MediaTailor sends to your Cloudwatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to 60, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the debug log mode .\n\nValid values: 0 - 100\n\nManifestProcessingRules -> (structure)\n\nThe configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.\n\nAdMarkerPassthrough -> (structure)\n\nFor HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the MediaTailor personalized manifest.\n\nNo logic is applied to these ad markers. For example, if EXT-X-CUE-OUT has a value of 60, but no ads are filled for that ad break, MediaTailor will not set the value to 0.\n\nEnabled -> (boolean)\n\nEnables ad marker passthrough for your configuration.\n\nName -> (string)\n\nThe identifier for the playback configuration.\n\nPersonalizationThresholdSeconds -> (integer)\n\nDefines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor .\n\nPlaybackConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) for the playback configuration.\n\nPlaybackEndpointPrefix -> (string)\n\nThe URL that the player accesses to get a manifest from AWS Elemental MediaTailor.\n\nSessionInitializationEndpointPrefix -> (string)\n\nThe URL that the player uses to initialize a session that uses client-side reporting.\n\nSlateAdUrl -> (string)\n\nThe URL for a video asset to transcode and use to fill in time that’s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID playback configurations. For VPAID, the slate is required because MediaTailor provides it in the slots designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.\n\nTags -> (map)\n\nThe tags to assign to the playback configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nTranscodeProfileName -> (string)\n\nThe name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.\n\nVideoContentSourceUrl -> (string)\n\nThe URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.\n\nNextToken -> (string)\n\nPagination token returned by the GET list request when results exceed the maximum allowed. Use the token to fetch the next page of results.",
      "command_examples": "Examples\n\nTo list all configurations\n\nThe following list-playback-configurations displays all of the details of the configuration on the current AWS account.\n\naws mediatailor list-playback-configurations\n\n\nOutput:\n\n{\n    \"Items\": [\n        {\n            \"AdDecisionServerUrl\": \"http://your.ads.url\",\n            \"CdnConfiguration\": {},\n            \"DashConfiguration\": {\n                \"ManifestEndpointPrefix\": \"https://170c14299689462897d0cc45fc2000bb.mediatailor.us-west-2.amazonaws.com/v1/dash/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/west_campaign/\",\n                \"MpdLocation\": \"EMT_DEFAULT\",\n                \"OriginManifestType\": \"MULTI_PERIOD\"\n            },\n            \"HlsConfiguration\": {\n                \"ManifestEndpointPrefix\": \"https://170c14299689462897d0cc45fc2000bb.mediatailor.us-west-2.amazonaws.com/v1/master/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/west_campaign/\"\n            },\n            \"Name\": \"west_campaign\",\n            \"PlaybackConfigurationArn\": \"arn:aws:mediatailor:us-west-2:123456789012:playbackConfiguration/west_campaign\",\n            \"PlaybackEndpointPrefix\": \"https://170c14299689462897d0cc45fc2000bb.mediatailor.us-west-2.amazonaws.com\",\n            \"SessionInitializationEndpointPrefix\": \"https://170c14299689462897d0cc45fc2000bb.mediatailor.us-west-2.amazonaws.com/v1/session/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/west_campaign/\",\n            \"Tags\": {},\n            \"VideoContentSourceUrl\": \"https://8343f7014c0ea438.mediapackage.us-west-2.amazonaws.com/out/v1/683f0f2ff7cd43a48902e6dcd5e16dcf/index.m3u8\"\n        },\n        {\n            \"AdDecisionServerUrl\": \"http://your.ads.url\",\n            \"CdnConfiguration\": {},\n            \"DashConfiguration\": {\n                \"ManifestEndpointPrefix\": \"https://73511f91d6a24ca2b93f3cf1d7cedd67.mediatailor.us-west-2.amazonaws.com/v1/dash/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/sports_campaign/\",\n                \"MpdLocation\": \"DISABLED\",\n                \"OriginManifestType\": \"MULTI_PERIOD\"\n            },\n            \"HlsConfiguration\": {\n                \"ManifestEndpointPrefix\": \"https://73511f91d6a24ca2b93f3cf1d7cedd67.mediatailor.us-west-2.amazonaws.com/v1/master/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/sports_campaign/\"\n            },\n            \"Name\": \"sports_campaign\",\n            \"PlaybackConfigurationArn\": \"arn:aws:mediatailor:us-west-2:123456789012:playbackConfiguration/sports_campaign\",\n            \"PlaybackEndpointPrefix\": \"https://73511f91d6a24ca2b93f3cf1d7cedd67.mediatailor.us-west-2.amazonaws.com\",\n            \"SessionInitializationEndpointPrefix\": \"https://73511f91d6a24ca2b93f3cf1d7cedd67.mediatailor.us-west-2.amazonaws.com/v1/session/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/sports_campaign/\",\n            \"SlateAdUrl\": \"http://s3.bucket/slate_ad.mp4\",\n            \"Tags\": {},\n            \"VideoContentSourceUrl\": \"https://c4af3793bf76b33c.mediapackage.us-west-2.amazonaws.com/out/v1/1dc6718be36f4f34bb9cd86bc50925e6/sports_endpoint/index.m3u8\"\n        }\n    ]\n}\n\n\nFor more information, see `Viewing a Configuration<https://docs.aws.amazon.com/mediatailor/latest/ug/configurations-view.html>`__ in the AWS Elemental MediaTailor User Guide."
    },
    {
      "command_name": "list-prefetch-schedules",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/list-prefetch-schedules.html",
      "command_description": "Description\n\nCreates a new prefetch schedule.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-prefetch-schedules is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Items",
      "command_synopsis": "Synopsis\n  list-prefetch-schedules\n--playback-configuration-name <value>\n[--stream-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--playback-configuration-name <value>",
        "[--stream-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--playback-configuration-name (string)\n\nThe name of the playback configuration.\n\n--stream-id (string)\n\nAn optional filtering parameter whereby MediaTailor filters the prefetch schedules to include only specific streams.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nLists the prefetch schedules. An empty Items list doesn’t mean there aren’t more items to fetch, just that that page was empty.\n\n(structure)\n\nA complex type that contains prefetch schedule information.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the prefetch schedule.\n\nConsumption -> (structure)\n\nConsumption settings determine how, and when, MediaTailor places the prefetched ads into ad breaks. Ad consumption occurs within a span of time that you define, called a consumption window . You can designate which ad breaks that MediaTailor fills with prefetch ads by setting avail matching criteria.\n\nAvailMatchingCriteria -> (list)\n\nIf you only want MediaTailor to insert prefetched ads into avails (ad breaks) that match specific dynamic variables, such as scte.event_id, set the avail matching criteria.\n\n(structure)\n\nMediaTailor only places (consumes) prefetched ads if the ad break meets the criteria defined by the dynamic variables. This gives you granular control over which ad break to place the prefetched ads into.\n\nAs an example, let’s say that you set DynamicVariable to scte.event_id and Operator to EQUALS, and your playback configuration has an ADS URL of https://my.ads.server.com/path?&podId=[scte.avail_num]&event=[scte.event_id]&duration=[session.avail_duration_secs]. And the prefetch request to the ADS contains these values https://my.ads.server.com/path?&podId=3&event=my-awesome-event&duration=30. MediaTailor will only insert the prefetched ads into the ad break if has a SCTE marker with an event id of my-awesome-event, since it must match the event id that MediaTailor uses to query the ADS.\n\nYou can specify up to five AvailMatchingCriteria. If you specify multiple AvailMatchingCriteria, MediaTailor combines them to match using a logical AND. You can model logical OR combinations by creating multiple prefetch schedules.\n\nDynamicVariable -> (string)\n\nThe dynamic variable(s) that MediaTailor should use as avail matching criteria. MediaTailor only places the prefetched ads into the avail if the avail matches the criteria defined by the dynamic variable. For information about dynamic variables, see Using dynamic ad variables in the MediaTailor User Guide .\n\nYou can include up to 100 dynamic variables.\n\nOperator -> (string)\n\nFor the DynamicVariable specified in AvailMatchingCriteria, the Operator that is used for the comparison.\n\nEndTime -> (timestamp)\n\nThe time when MediaTailor no longer considers the prefetched ads for use in an ad break. MediaTailor automatically deletes prefetch schedules no less than seven days after the end time. If you’d like to manually delete the prefetch schedule, you can call DeletePrefetchSchedule.\n\nStartTime -> (timestamp)\n\nThe time when prefetched ads are considered for use in an ad break. If you don’t specify StartTime, the prefetched ads are available after MediaTailor retrives them from the ad decision server.\n\nName -> (string)\n\nThe name of the prefetch schedule. The name must be unique among all prefetch schedules that are associated with the specified playback configuration.\n\nPlaybackConfigurationName -> (string)\n\nThe name of the playback configuration to create the prefetch schedule for.\n\nRetrieval -> (structure)\n\nA complex type that contains settings for prefetch retrieval from the ad decision server (ADS).\n\nDynamicVariables -> (map)\n\nThe dynamic variables to use for substitution during prefetch requests to the ad decision server (ADS).\n\nYou intially configure dynamic variables for the ADS URL when you set up your playback configuration. When you specify DynamicVariables for prefetch retrieval, MediaTailor includes the dynamic variables in the request to the ADS.\n\nkey -> (string)\n\nvalue -> (string)\n\nEndTime -> (timestamp)\n\nThe time when prefetch retrieval ends for the ad break. Prefetching will be attempted for manifest requests that occur at or before this time.\n\nStartTime -> (timestamp)\n\nThe time when prefetch retrievals can start for this break. Ad prefetching will be attempted for manifest requests that occur at or after this time. Defaults to the current time. If not specified, the prefetch retrieval starts as soon as possible.\n\nStreamId -> (string)\n\nAn optional stream identifier that you can specify in order to prefetch for multiple streams that use the same playback configuration.\n\nNextToken -> (string)\n\nThe value that you will use forNextToken in the next ListPrefetchSchedulesRequest request."
    },
    {
      "command_name": "list-source-locations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/list-source-locations.html",
      "command_description": "Description\n\nRetrieves a list of source locations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-source-locations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Items",
      "command_synopsis": "Synopsis\n  list-source-locations\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nAn array of source locations.\n\n(structure)\n\nThis response includes only the “type” : “object” property.\n\nAccessConfiguration -> (structure)\n\nThe access configuration for the source location.\n\nAccessType -> (string)\n\nThe type of authentication used to access content from HttpConfiguration::BaseUrl on your source location. Accepted value: S3_SIGV4.\n\nS3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted virtual-style access. If your source location base URL is an Amazon S3 bucket, MediaTailor can use AWS Signature Version 4 (SigV4) authentication to access the bucket where your source content is stored. Your MediaTailor source location baseURL must follow the S3 virtual hosted-style request URL format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.\n\nBefore you can use S3_SIGV4, you must meet these requirements:\n\nYou must allow MediaTailor to access your S3 bucket by granting mediatailor.amazonaws.com principal access in IAM. For information about configuring access in IAM, see Access management in the IAM User Guide.\n\nThe mediatailor.amazonaws.com service principal must have permissions to read all top level manifests referenced by the VodSource packaging configurations.\n\nThe caller of the API must have s3:GetObject IAM permissions to read all top level manifests referenced by your MediaTailor VodSource packaging configurations.\n\nSecretsManagerAccessTokenConfiguration -> (structure)\n\nAWS Secrets Manager access token configuration parameters.\n\nHeaderName -> (string)\n\nThe name of the HTTP header used to supply the access token in requests to the source location.\n\nSecretArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.\n\nSecretStringKey -> (string)\n\nThe AWS Secrets Manager SecretString key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.\n\nArn -> (string)\n\nThe ARN of the SourceLocation.\n\nCreationTime -> (timestamp)\n\nThe timestamp that indicates when the source location was created.\n\nDefaultSegmentDeliveryConfiguration -> (structure)\n\nThe default segment delivery configuration.\n\nBaseUrl -> (string)\n\nThe hostname of the server that will be used to serve segments. This string must include the protocol, such as https:// .\n\nHttpConfiguration -> (structure)\n\nThe HTTP configuration for the source location.\n\nBaseUrl -> (string)\n\nThe base URL for the source location host server. This string must include the protocol, such as https:// .\n\nLastModifiedTime -> (timestamp)\n\nThe timestamp that indicates when the source location was last modified.\n\nSourceLocationName -> (string)\n\nThe name of the source location.\n\nTags -> (map)\n\nThe tags assigned to the source location.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nPagination token from the list request. Use the token to fetch the next page of results."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/list-tags-for-resource.html",
      "command_description": "Description\n\nReturns a list of the tags assigned to the specified playback configuration resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) for the playback configuration. You can get this from the response to any playback configuration request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (map)\n\nA comma-separated list of tag key:value pairs.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "list-vod-sources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/list-vod-sources.html",
      "command_description": "Description\n\nLists all the VOD sources in a source location.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-vod-sources is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Items",
      "command_synopsis": "Synopsis\n  list-vod-sources\n--source-location-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--source-location-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--source-location-name (string)\n\nThe identifier for the source location you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nLists the VOD sources.\n\n(structure)\n\nVOD source configuration parameters.\n\nArn -> (string)\n\nThe ARN for the VOD source.\n\nCreationTime -> (timestamp)\n\nThe timestamp that indicates when the VOD source was created.\n\nHttpPackageConfigurations -> (list)\n\nThe HTTP package configurations for the VOD source.\n\n(structure)\n\nThe HTTP package configuration properties for the requested VOD source.\n\nPath -> (string)\n\nThe relative path to the URL for this VOD source. This is combined with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.\n\nSourceGroup -> (string)\n\nThe name of the source group. This has to match one of the Channel::Outputs::SourceGroup.\n\nType -> (string)\n\nThe streaming protocol for this package configuration. Supported values are HLS and DASH.\n\nLastModifiedTime -> (timestamp)\n\nThe timestamp that indicates when the VOD source was last modified.\n\nSourceLocationName -> (string)\n\nThe name of the source location that the VOD source is associated with.\n\nTags -> (map)\n\nThe tags assigned to the VOD source.\n\nkey -> (string)\n\nvalue -> (string)\n\nVodSourceName -> (string)\n\nThe name of the VOD source.\n\nNextToken -> (string)\n\nPagination token from the list request. Use the token to fetch the next page of results."
    },
    {
      "command_name": "put-channel-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/put-channel-policy.html",
      "command_description": "Description\n\nCreates an IAM policy for the channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-channel-policy\n--channel-name <value>\n--policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "--policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--policy (string)\n\nAdds an IAM role that determines the permissions of your channel.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "put-playback-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/put-playback-configuration.html",
      "command_description": "Description\n\nAdds a new playback configuration to AWS Elemental MediaTailor.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-playback-configuration\n[--ad-decision-server-url <value>]\n[--avail-suppression <value>]\n[--bumper <value>]\n[--cdn-configuration <value>]\n[--configuration-aliases <value>]\n[--dash-configuration <value>]\n[--live-pre-roll-configuration <value>]\n[--manifest-processing-rules <value>]\n[--name <value>]\n[--personalization-threshold-seconds <value>]\n[--slate-ad-url <value>]\n[--tags <value>]\n[--transcode-profile-name <value>]\n[--video-content-source-url <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--ad-decision-server-url <value>]",
        "[--avail-suppression <value>]",
        "[--bumper <value>]",
        "[--cdn-configuration <value>]",
        "[--configuration-aliases <value>]",
        "[--dash-configuration <value>]",
        "[--live-pre-roll-configuration <value>]",
        "[--manifest-processing-rules <value>]",
        "[--name <value>]",
        "[--personalization-threshold-seconds <value>]",
        "[--slate-ad-url <value>]",
        "[--tags <value>]",
        "[--transcode-profile-name <value>]",
        "[--video-content-source-url <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ad-decision-server-url (string)\n\nThe URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.\n\n--avail-suppression (structure)\n\nThe configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression .\n\nMode -> (string)\n\nSets the ad suppression mode. By default, ad suppression is off and all ad breaks are filled with ads or slate. When Mode is set to BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won’t fill ad breaks on or behind the ad suppression Value time in the manifest lookback window.\n\nValue -> (string)\n\nA live edge offset time in HH:MM:SS. MediaTailor won’t fill ad breaks on or behind this time in the manifest lookback window. If Value is set to 00:00:00, it is in sync with the live edge, and MediaTailor won’t fill any ad breaks on or behind the live edge. If you set a Value time, MediaTailor won’t fill any ad breaks on or behind this time in the manifest lookback window. For example, if you set 00:45:00, then MediaTailor will fill ad breaks that occur within 45 minutes behind the live edge, but won’t fill ad breaks on or behind 45 minutes behind the live edge.\n\nShorthand Syntax:\n\nMode=string,Value=string\n\n\nJSON Syntax:\n\n{\n  \"Mode\": \"OFF\"|\"BEHIND_LIVE_EDGE\",\n  \"Value\": \"string\"\n}\n\n\n--bumper (structure)\n\nThe configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers .\n\nEndUrl -> (string)\n\nThe URL for the end bumper asset.\n\nStartUrl -> (string)\n\nThe URL for the start bumper asset.\n\nShorthand Syntax:\n\nEndUrl=string,StartUrl=string\n\n\nJSON Syntax:\n\n{\n  \"EndUrl\": \"string\",\n  \"StartUrl\": \"string\"\n}\n\n\n--cdn-configuration (structure)\n\nThe configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.\n\nAdSegmentUrlPrefix -> (string)\n\nA non-default content delivery network (CDN) to serve ad segments. By default, AWS Elemental MediaTailor uses Amazon CloudFront with default cache settings as its CDN for ad segments. To set up an alternate CDN, create a rule in your CDN for the origin ads.mediatailor.&lt;region>.amazonaws.com. Then specify the rule’s name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for ad segments.\n\nContentSegmentUrlPrefix -> (string)\n\nA content delivery network (CDN) to cache content segments, so that content requests don’t always have to go to the origin server. First, create a rule in your CDN for the content segment origin server. Then specify the rule’s name in this ContentSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for content segments.\n\nShorthand Syntax:\n\nAdSegmentUrlPrefix=string,ContentSegmentUrlPrefix=string\n\n\nJSON Syntax:\n\n{\n  \"AdSegmentUrlPrefix\": \"string\",\n  \"ContentSegmentUrlPrefix\": \"string\"\n}\n\n\n--configuration-aliases (map)\n\nThe player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables .\n\nkey -> (string)\n\nThe dynamic variable that has aliases.\n\nvalue -> (map)\n\nMap of aliases to the value to be used at request time.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=KeyName1=string,KeyName2=string,KeyName2=KeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": {\"string\": \"string\"\n      ...}\n  ...}\n\n\n--dash-configuration (structure)\n\nThe configuration for DASH content.\n\nMpdLocation -> (string)\n\nThe setting that controls whether MediaTailor includes the Location tag in DASH manifests. MediaTailor populates the Location tag with the URL for manifest update requests, to be used by players that don’t support sticky redirects. Disable this if you have CDN routing rules set up for accessing MediaTailor manifests, and you are either using client-side reporting or your players support sticky HTTP redirects. Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting enables the inclusion of the tag and is the default value.\n\nOriginManifestType -> (string)\n\nThe setting that controls whether MediaTailor handles manifests from the origin server as multi-period manifests or single-period manifests. If your origin server produces single-period manifests, set this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For multi-period manifests, omit this setting or set it to MULTI_PERIOD.\n\nShorthand Syntax:\n\nMpdLocation=string,OriginManifestType=string\n\n\nJSON Syntax:\n\n{\n  \"MpdLocation\": \"string\",\n  \"OriginManifestType\": \"SINGLE_PERIOD\"|\"MULTI_PERIOD\"\n}\n\n\n--live-pre-roll-configuration (structure)\n\nThe configuration for pre-roll ad insertion.\n\nAdDecisionServerUrl -> (string)\n\nThe URL for the ad decision server (ADS) for pre-roll ads. This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing, you can provide a static VAST URL. The maximum length is 25,000 characters.\n\nMaxDurationSeconds -> (integer)\n\nThe maximum allowed duration for the pre-roll ad avail. AWS Elemental MediaTailor won’t play pre-roll ads to exceed this duration, regardless of the total duration of ads that the ADS returns.\n\nShorthand Syntax:\n\nAdDecisionServerUrl=string,MaxDurationSeconds=integer\n\n\nJSON Syntax:\n\n{\n  \"AdDecisionServerUrl\": \"string\",\n  \"MaxDurationSeconds\": integer\n}\n\n\n--manifest-processing-rules (structure)\n\nThe configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.\n\nAdMarkerPassthrough -> (structure)\n\nFor HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the MediaTailor personalized manifest.\n\nNo logic is applied to these ad markers. For example, if EXT-X-CUE-OUT has a value of 60, but no ads are filled for that ad break, MediaTailor will not set the value to 0.\n\nEnabled -> (boolean)\n\nEnables ad marker passthrough for your configuration.\n\nShorthand Syntax:\n\nAdMarkerPassthrough={Enabled=boolean}\n\n\nJSON Syntax:\n\n{\n  \"AdMarkerPassthrough\": {\n    \"Enabled\": true|false\n  }\n}\n\n\n--name (string)\n\nThe identifier for the playback configuration.\n\n--personalization-threshold-seconds (integer)\n\nDefines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor .\n\n--slate-ad-url (string)\n\nThe URL for a high-quality video asset to transcode and use to fill in time that’s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.\n\n--tags (map)\n\nThe tags to assign to the playback configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--transcode-profile-name (string)\n\nThe name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.\n\n--video-content-source-url (string)\n\nThe URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAdDecisionServerUrl -> (string)\n\nThe URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing, you can provide a static VAST URL. The maximum length is 25,000 characters.\n\nAvailSuppression -> (structure)\n\nThe configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression .\n\nMode -> (string)\n\nSets the ad suppression mode. By default, ad suppression is off and all ad breaks are filled with ads or slate. When Mode is set to BEHIND_LIVE_EDGE, ad suppression is active and MediaTailor won’t fill ad breaks on or behind the ad suppression Value time in the manifest lookback window.\n\nValue -> (string)\n\nA live edge offset time in HH:MM:SS. MediaTailor won’t fill ad breaks on or behind this time in the manifest lookback window. If Value is set to 00:00:00, it is in sync with the live edge, and MediaTailor won’t fill any ad breaks on or behind the live edge. If you set a Value time, MediaTailor won’t fill any ad breaks on or behind this time in the manifest lookback window. For example, if you set 00:45:00, then MediaTailor will fill ad breaks that occur within 45 minutes behind the live edge, but won’t fill ad breaks on or behind 45 minutes behind the live edge.\n\nBumper -> (structure)\n\nThe configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers .\n\nEndUrl -> (string)\n\nThe URL for the end bumper asset.\n\nStartUrl -> (string)\n\nThe URL for the start bumper asset.\n\nCdnConfiguration -> (structure)\n\nThe configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.\n\nAdSegmentUrlPrefix -> (string)\n\nA non-default content delivery network (CDN) to serve ad segments. By default, AWS Elemental MediaTailor uses Amazon CloudFront with default cache settings as its CDN for ad segments. To set up an alternate CDN, create a rule in your CDN for the origin ads.mediatailor.&lt;region>.amazonaws.com. Then specify the rule’s name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for ad segments.\n\nContentSegmentUrlPrefix -> (string)\n\nA content delivery network (CDN) to cache content segments, so that content requests don’t always have to go to the origin server. First, create a rule in your CDN for the content segment origin server. Then specify the rule’s name in this ContentSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for content segments.\n\nConfigurationAliases -> (map)\n\nThe player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables .\n\nkey -> (string)\n\nThe dynamic variable that has aliases.\n\nvalue -> (map)\n\nMap of aliases to the value to be used at request time.\n\nkey -> (string)\n\nvalue -> (string)\n\nDashConfiguration -> (structure)\n\nThe configuration for DASH content.\n\nManifestEndpointPrefix -> (string)\n\nThe URL generated by MediaTailor to initiate a playback session. The session uses server-side reporting. This setting is ignored in PUT operations.\n\nMpdLocation -> (string)\n\nThe setting that controls whether MediaTailor includes the Location tag in DASH manifests. MediaTailor populates the Location tag with the URL for manifest update requests, to be used by players that don’t support sticky redirects. Disable this if you have CDN routing rules set up for accessing MediaTailor manifests, and you are either using client-side reporting or your players support sticky HTTP redirects. Valid values are DISABLED and EMT_DEFAULT. The EMT_DEFAULT setting enables the inclusion of the tag and is the default value.\n\nOriginManifestType -> (string)\n\nThe setting that controls whether MediaTailor handles manifests from the origin server as multi-period manifests or single-period manifests. If your origin server produces single-period manifests, set this to SINGLE_PERIOD. The default setting is MULTI_PERIOD. For multi-period manifests, omit this setting or set it to MULTI_PERIOD.\n\nHlsConfiguration -> (structure)\n\nThe configuration for HLS content.\n\nManifestEndpointPrefix -> (string)\n\nThe URL that is used to initiate a playback session for devices that support Apple HLS. The session uses server-side reporting.\n\nLivePreRollConfiguration -> (structure)\n\nThe configuration for pre-roll ad insertion.\n\nAdDecisionServerUrl -> (string)\n\nThe URL for the ad decision server (ADS) for pre-roll ads. This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing, you can provide a static VAST URL. The maximum length is 25,000 characters.\n\nMaxDurationSeconds -> (integer)\n\nThe maximum allowed duration for the pre-roll ad avail. AWS Elemental MediaTailor won’t play pre-roll ads to exceed this duration, regardless of the total duration of ads that the ADS returns.\n\nLogConfiguration -> (structure)\n\nThe Amazon CloudWatch log settings for a playback configuration.\n\nPercentEnabled -> (integer)\n\nThe percentage of session logs that MediaTailor sends to your Cloudwatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to 60, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the debug log mode .\n\nValid values: 0 - 100\n\nManifestProcessingRules -> (structure)\n\nThe configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.\n\nAdMarkerPassthrough -> (structure)\n\nFor HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the MediaTailor personalized manifest.\n\nNo logic is applied to these ad markers. For example, if EXT-X-CUE-OUT has a value of 60, but no ads are filled for that ad break, MediaTailor will not set the value to 0.\n\nEnabled -> (boolean)\n\nEnables ad marker passthrough for your configuration.\n\nName -> (string)\n\nThe identifier for the playback configuration.\n\nPersonalizationThresholdSeconds -> (integer)\n\nDefines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor .\n\nPlaybackConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) for the playback configuration.\n\nPlaybackEndpointPrefix -> (string)\n\nThe URL that the player accesses to get a manifest from AWS Elemental MediaTailor. This session will use server-side reporting.\n\nSessionInitializationEndpointPrefix -> (string)\n\nThe URL that the player uses to initialize a session that uses client-side reporting.\n\nSlateAdUrl -> (string)\n\nThe URL for a high-quality video asset to transcode and use to fill in time that’s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID playback configurations. For VPAID, the slate is required because MediaTailor provides it in the slots designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.\n\nTags -> (map)\n\nThe tags assigned to the playback configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nTranscodeProfileName -> (string)\n\nThe name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.\n\nVideoContentSourceUrl -> (string)\n\nThe URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.",
      "command_examples": "Examples\n\nTo create a configuration\n\nThe following put-playback-configuration creates a configuration named campaign_short.\n\naws mediatailor put-playback-configuration \\\n    --name campaign_short \\\n    --ad-decision-server-url http://your.ads.url \\\n    --video-content-source-url http://video.bucket/index.m3u8\n\n\nOutput:\n\n{\n    \"AdDecisionServerUrl\": \"http://your.ads.url\",\n    \"CdnConfiguration\": {},\n    \"DashConfiguration\": {\n         \"ManifestEndpointPrefix\": \"https://13484114d38f4383bc0d6a7cb879bd00.mediatailor.us-west-2.amazonaws.com/v1/dash/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/campaign_short/\",\n         \"MpdLocation\": \"EMT_DEFAULT\",\n         \"OriginManifestType\": \"MULTI_PERIOD\"\n    },\n    \"HlsConfiguration\": {\n        \"ManifestEndpointPrefix\": \"https://13484114d38f4383bc0d6a7cb879bd00.mediatailor.us-west-2.amazonaws.com/v1/master/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/campaign_short/\"\n    },\n    \"Name\": \"campaign_short\",\n    \"PlaybackConfigurationArn\": \"arn:aws:mediatailor:us-west-2:123456789012:playbackConfiguration/campaign_short\",\n    \"PlaybackEndpointPrefix\": \"https://13484114d38f4383bc0d6a7cb879bd00.mediatailor.us-west-2.amazonaws.com\",\n    \"SessionInitializationEndpointPrefix\": \"https://13484114d38f4383bc0d6a7cb879bd00.mediatailor.us-west-2.amazonaws.com/v1/session/1cbfeaaecb69778e0c167d0505a2bc57da2b1754/campaign_short/\",\n    \"Tags\": {},\n    \"VideoContentSourceUrl\": \"http://video.bucket/index.m3u8\"\n}\n\n\nFor more information, see Creating a Configuration in the AWS Elemental MediaTailor User Guide."
    },
    {
      "command_name": "start-channel",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/start-channel.html",
      "command_description": "Description\n\nStarts a specific channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-channel\n--channel-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "stop-channel",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/stop-channel.html",
      "command_description": "Description\n\nStops a specific channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-channel\n--channel-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/tag-resource.html",
      "command_description": "Description\n\nAdds tags to the specified playback configuration resource. You can specify one or more tags to add.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) for the playback configuration. You can get this from the response to any playback configuration request.\n\n--tags (map)\n\nA comma-separated list of tag key:value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/untag-resource.html",
      "command_description": "Description\n\nRemoves tags from the specified playback configuration resource. You can specify one or more tags to remove.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) for the playback configuration. You can get this from the response to any playback configuration request.\n\n--tag-keys (list)\n\nA comma-separated list of the tag keys to remove from the playback configuration.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-channel",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/update-channel.html",
      "command_description": "Description\n\nUpdates an existing channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-channel\n--channel-name <value>\n--outputs <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--channel-name <value>",
        "--outputs <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--channel-name (string)\n\nThe identifier for the channel you are working on.\n\n--outputs (list)\n\nThe channel’s output properties.\n\n(structure)\n\nThe output configuration for this channel.\n\nDashPlaylistSettings -> (structure)\n\nDASH manifest configuration parameters.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nMinBufferTimeSeconds -> (integer)\n\nMinimum amount of content (measured in seconds) that a player must keep available in the buffer. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nMinUpdatePeriodSeconds -> (integer)\n\nMinimum amount of time (in seconds) that the player should wait before requesting updates to the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nSuggestedPresentationDelaySeconds -> (integer)\n\nAmount of time (in seconds) that the player should be from the live point at the end of the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nHlsPlaylistSettings -> (structure)\n\nHLS playlist configuration parameters.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nManifestName -> (string)\n\nThe name of the manifest for the channel. The name appears in the PlaybackUrl.\n\nSourceGroup -> (string)\n\nA string used to match which HttpPackageConfiguration is used for each VodSource.\n\nShorthand Syntax:\n\nDashPlaylistSettings={ManifestWindowSeconds=integer,MinBufferTimeSeconds=integer,MinUpdatePeriodSeconds=integer,SuggestedPresentationDelaySeconds=integer},HlsPlaylistSettings={ManifestWindowSeconds=integer},ManifestName=string,SourceGroup=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"DashPlaylistSettings\": {\n      \"ManifestWindowSeconds\": integer,\n      \"MinBufferTimeSeconds\": integer,\n      \"MinUpdatePeriodSeconds\": integer,\n      \"SuggestedPresentationDelaySeconds\": integer\n    },\n    \"HlsPlaylistSettings\": {\n      \"ManifestWindowSeconds\": integer\n    },\n    \"ManifestName\": \"string\",\n    \"SourceGroup\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the channel.\n\nChannelName -> (string)\n\nThe name of the channel.\n\nChannelState -> (string)\n\nIndicates whether the channel is in a running state or not.\n\nCreationTime -> (timestamp)\n\nThe timestamp of when the channel was created.\n\nFillerSlate -> (structure)\n\nContains information about the slate used to fill gaps between programs in the schedule.\n\nSourceLocationName -> (string)\n\nThe name of the source location where the slate VOD source is stored.\n\nVodSourceName -> (string)\n\nThe slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.\n\nLastModifiedTime -> (timestamp)\n\nThe timestamp of when the channel was last modified.\n\nOutputs -> (list)\n\nThe channel’s output properties.\n\n(structure)\n\nThis response includes only the “property” : “type” property.\n\nDashPlaylistSettings -> (structure)\n\nDASH manifest configuration settings.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nMinBufferTimeSeconds -> (integer)\n\nMinimum amount of content (measured in seconds) that a player must keep available in the buffer. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nMinUpdatePeriodSeconds -> (integer)\n\nMinimum amount of time (in seconds) that the player should wait before requesting updates to the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nSuggestedPresentationDelaySeconds -> (integer)\n\nAmount of time (in seconds) that the player should be from the live point at the end of the manifest. Minimum value: 2 seconds. Maximum value: 60 seconds.\n\nHlsPlaylistSettings -> (structure)\n\nHLS manifest configuration settings.\n\nManifestWindowSeconds -> (integer)\n\nThe total duration (in seconds) of each manifest. Minimum value: 30 seconds. Maximum value: 3600 seconds.\n\nManifestName -> (string)\n\nThe name of the manifest for the channel that will appear in the channel output’s playback URL.\n\nPlaybackUrl -> (string)\n\nThe URL used for playback by content players.\n\nSourceGroup -> (string)\n\nA string used to associate a package configuration source group with a channel output.\n\nPlaybackMode -> (string)\n\nThe channel’s playback mode.\n\nTags -> (map)\n\nThe tags assigned to the channel.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "update-source-location",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/update-source-location.html",
      "command_description": "Description\n\nUpdates a source location on a specific channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-source-location\n[--access-configuration <value>]\n[--default-segment-delivery-configuration <value>]\n--http-configuration <value>\n--source-location-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--access-configuration <value>]",
        "[--default-segment-delivery-configuration <value>]",
        "--http-configuration <value>",
        "--source-location-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--access-configuration (structure)\n\nAccess configuration parameters. Configures the type of authentication used to access content from your source location.\n\nAccessType -> (string)\n\nThe type of authentication used to access content from HttpConfiguration::BaseUrl on your source location. Accepted value: S3_SIGV4.\n\nS3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted virtual-style access. If your source location base URL is an Amazon S3 bucket, MediaTailor can use AWS Signature Version 4 (SigV4) authentication to access the bucket where your source content is stored. Your MediaTailor source location baseURL must follow the S3 virtual hosted-style request URL format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.\n\nBefore you can use S3_SIGV4, you must meet these requirements:\n\nYou must allow MediaTailor to access your S3 bucket by granting mediatailor.amazonaws.com principal access in IAM. For information about configuring access in IAM, see Access management in the IAM User Guide.\n\nThe mediatailor.amazonaws.com service principal must have permissions to read all top level manifests referenced by the VodSource packaging configurations.\n\nThe caller of the API must have s3:GetObject IAM permissions to read all top level manifests referenced by your MediaTailor VodSource packaging configurations.\n\nSecretsManagerAccessTokenConfiguration -> (structure)\n\nAWS Secrets Manager access token configuration parameters.\n\nHeaderName -> (string)\n\nThe name of the HTTP header used to supply the access token in requests to the source location.\n\nSecretArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.\n\nSecretStringKey -> (string)\n\nThe AWS Secrets Manager SecretString key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.\n\nShorthand Syntax:\n\nAccessType=string,SecretsManagerAccessTokenConfiguration={HeaderName=string,SecretArn=string,SecretStringKey=string}\n\n\nJSON Syntax:\n\n{\n  \"AccessType\": \"S3_SIGV4\"|\"SECRETS_MANAGER_ACCESS_TOKEN\",\n  \"SecretsManagerAccessTokenConfiguration\": {\n    \"HeaderName\": \"string\",\n    \"SecretArn\": \"string\",\n    \"SecretStringKey\": \"string\"\n  }\n}\n\n\n--default-segment-delivery-configuration (structure)\n\nThe optional configuration for the host server that serves segments.\n\nBaseUrl -> (string)\n\nThe hostname of the server that will be used to serve segments. This string must include the protocol, such as https:// .\n\nShorthand Syntax:\n\nBaseUrl=string\n\n\nJSON Syntax:\n\n{\n  \"BaseUrl\": \"string\"\n}\n\n\n--http-configuration (structure)\n\nThe HTTP configuration for the source location.\n\nBaseUrl -> (string)\n\nThe base URL for the source location host server. This string must include the protocol, such as https:// .\n\nShorthand Syntax:\n\nBaseUrl=string\n\n\nJSON Syntax:\n\n{\n  \"BaseUrl\": \"string\"\n}\n\n\n--source-location-name (string)\n\nThe identifier for the source location you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccessConfiguration -> (structure)\n\nThe access configuration for the source location.\n\nAccessType -> (string)\n\nThe type of authentication used to access content from HttpConfiguration::BaseUrl on your source location. Accepted value: S3_SIGV4.\n\nS3_SIGV4 - AWS Signature Version 4 authentication for Amazon S3 hosted virtual-style access. If your source location base URL is an Amazon S3 bucket, MediaTailor can use AWS Signature Version 4 (SigV4) authentication to access the bucket where your source content is stored. Your MediaTailor source location baseURL must follow the S3 virtual hosted-style request URL format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.\n\nBefore you can use S3_SIGV4, you must meet these requirements:\n\nYou must allow MediaTailor to access your S3 bucket by granting mediatailor.amazonaws.com principal access in IAM. For information about configuring access in IAM, see Access management in the IAM User Guide.\n\nThe mediatailor.amazonaws.com service principal must have permissions to read all top level manifests referenced by the VodSource packaging configurations.\n\nThe caller of the API must have s3:GetObject IAM permissions to read all top level manifests referenced by your MediaTailor VodSource packaging configurations.\n\nSecretsManagerAccessTokenConfiguration -> (structure)\n\nAWS Secrets Manager access token configuration parameters.\n\nHeaderName -> (string)\n\nThe name of the HTTP header used to supply the access token in requests to the source location.\n\nSecretArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.\n\nSecretStringKey -> (string)\n\nThe AWS Secrets Manager SecretString key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.\n\nArn -> (string)\n\nThe ARN of the source location.\n\nCreationTime -> (timestamp)\n\nThe timestamp that indicates when the source location was created.\n\nDefaultSegmentDeliveryConfiguration -> (structure)\n\nThe default segment delivery configuration settings.\n\nBaseUrl -> (string)\n\nThe hostname of the server that will be used to serve segments. This string must include the protocol, such as https:// .\n\nHttpConfiguration -> (structure)\n\nThe HTTP package configuration settings for the source location.\n\nBaseUrl -> (string)\n\nThe base URL for the source location host server. This string must include the protocol, such as https:// .\n\nLastModifiedTime -> (timestamp)\n\nThe timestamp that indicates when the source location was last modified.\n\nSourceLocationName -> (string)\n\nThe name of the source location.\n\nTags -> (map)\n\nThe tags assigned to the source location.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "update-vod-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mediatailor/update-vod-source.html",
      "command_description": "Description\n\nUpdates a specific VOD source in a specific source location.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-vod-source\n--http-package-configurations <value>\n--source-location-name <value>\n--vod-source-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--http-package-configurations <value>",
        "--source-location-name <value>",
        "--vod-source-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--http-package-configurations (list)\n\nAn array of HTTP package configurations for the VOD source on this account.\n\n(structure)\n\nThe HTTP package configuration properties for the requested VOD source.\n\nPath -> (string)\n\nThe relative path to the URL for this VOD source. This is combined with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.\n\nSourceGroup -> (string)\n\nThe name of the source group. This has to match one of the Channel::Outputs::SourceGroup.\n\nType -> (string)\n\nThe streaming protocol for this package configuration. Supported values are HLS and DASH.\n\nShorthand Syntax:\n\nPath=string,SourceGroup=string,Type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Path\": \"string\",\n    \"SourceGroup\": \"string\",\n    \"Type\": \"DASH\"|\"HLS\"\n  }\n  ...\n]\n\n\n--source-location-name (string)\n\nThe identifier for the source location you are working on.\n\n--vod-source-name (string)\n\nThe identifier for the VOD source you are working on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the VOD source.\n\nCreationTime -> (timestamp)\n\nThe timestamp that indicates when the VOD source was created.\n\nHttpPackageConfigurations -> (list)\n\nThe HTTP package configurations.\n\n(structure)\n\nThe HTTP package configuration properties for the requested VOD source.\n\nPath -> (string)\n\nThe relative path to the URL for this VOD source. This is combined with SourceLocation::HttpConfiguration::BaseUrl to form a valid URL.\n\nSourceGroup -> (string)\n\nThe name of the source group. This has to match one of the Channel::Outputs::SourceGroup.\n\nType -> (string)\n\nThe streaming protocol for this package configuration. Supported values are HLS and DASH.\n\nLastModifiedTime -> (timestamp)\n\nThe ARN for the VOD source.\n\nSourceLocationName -> (string)\n\nThe name of the source location associated with the VOD source.\n\nTags -> (map)\n\nThe tags assigned to the VOD source.\n\nkey -> (string)\n\nvalue -> (string)\n\nVodSourceName -> (string)\n\nThe name of the VOD source."
    }
  ],
  "service_description": "Description\n\nUse the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the AWS Elemental MediaTailor User Guide .\n\nThrough the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS)."
}