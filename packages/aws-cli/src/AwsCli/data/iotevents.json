{
  "service_name": "iotevents",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/index.html",
  "service_commands": [
    {
      "command_name": "create-alarm-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/create-alarm-model.html",
      "command_description": "Description\n\nCreates an alarm model to monitor an AWS IoT Events input attribute. You can use the alarm to get notified when the value is outside a specified range. For more information, see Create an alarm model in the AWS IoT Events Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-alarm-model\n--alarm-model-name <value>\n[--alarm-model-description <value>]\n--role-arn <value>\n[--tags <value>]\n[--key <value>]\n[--severity <value>]\n--alarm-rule <value>\n[--alarm-notification <value>]\n[--alarm-event-actions <value>]\n[--alarm-capabilities <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--alarm-model-name <value>",
        "[--alarm-model-description <value>]",
        "--role-arn <value>",
        "[--tags <value>]",
        "[--key <value>]",
        "[--severity <value>]",
        "--alarm-rule <value>",
        "[--alarm-notification <value>]",
        "[--alarm-event-actions <value>]",
        "[--alarm-capabilities <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--alarm-model-name (string)\n\nA unique name that helps you identify the alarm model. You can’t change this name after you create the alarm model.\n\n--alarm-model-description (string)\n\nA description that tells you what the alarm model detects.\n\n--role-arn (string)\n\nThe ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see Amazon Resource Names (ARNs) in the AWS General Reference .\n\n--tags (list)\n\nA list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see Tagging your AWS IoT Events resources in the AWS IoT Events Developer Guide .\n\nYou can create up to 50 tags for one alarm model.\n\n(structure)\n\nMetadata that can be used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--key (string)\n\nAn input attribute used as a key to create an alarm. AWS IoT Events routes inputs associated with this key to the alarm.\n\n--severity (integer)\n\nA non-negative integer that reflects the severity level of the alarm.\n\n--alarm-rule (structure)\n\nDefines when your alarm is invoked.\n\nsimpleRule -> (structure)\n\nA rule that compares an input property value to a threshold value with a comparison operator.\n\ninputProperty -> (string)\n\nThe value on the left side of the comparison operator. You can specify an AWS IoT Events input attribute as an input property.\n\ncomparisonOperator -> (string)\n\nThe comparison operator.\n\nthreshold -> (string)\n\nThe value on the right side of the comparison operator. You can enter a number or specify an AWS IoT Events input attribute.\n\nShorthand Syntax:\n\nsimpleRule={inputProperty=string,comparisonOperator=string,threshold=string}\n\n\nJSON Syntax:\n\n{\n  \"simpleRule\": {\n    \"inputProperty\": \"string\",\n    \"comparisonOperator\": \"GREATER\"|\"GREATER_OR_EQUAL\"|\"LESS\"|\"LESS_OR_EQUAL\"|\"EQUAL\"|\"NOT_EQUAL\",\n    \"threshold\": \"string\"\n  }\n}\n\n\n--alarm-notification (structure)\n\nContains information about one or more notification actions.\n\nnotificationActions -> (list)\n\nContains the notification settings of an alarm model. The settings apply to all alarms that were created based on this alarm model.\n\n(structure)\n\nContains the notification settings of an alarm model. The settings apply to all alarms that were created based on this alarm model.\n\naction -> (structure)\n\nSpecifies an AWS Lambda function to manage alarm notifications. You can create one or use the AWS Lambda function provided by AWS IoT Events .\n\nlambdaAction -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsmsConfigurations -> (list)\n\nContains the configuration information of SMS notifications.\n\n(structure)\n\nContains the configuration information of SMS notifications.\n\nsenderId -> (string)\n\nThe sender ID.\n\nadditionalMessage -> (string)\n\nThe message that you want to send. The message can be up to 200 characters.\n\nrecipients -> (list)\n\nSpecifies one or more recipients who receive the message.\n\nWarning\n\nYou must add the users that receive SMS messages to your AWS SSO store .\n\n(structure)\n\nThe information that identifies the recipient.\n\nssoIdentity -> (structure)\n\nThe AWS Single Sign-On (AWS SSO) authentication information.\n\nidentityStoreId -> (string)\n\nThe ID of the AWS SSO identity store.\n\nuserId -> (string)\n\nThe user ID.\n\nemailConfigurations -> (list)\n\nContains the configuration information of email notifications.\n\n(structure)\n\nContains the configuration information of email notifications.\n\nfrom -> (string)\n\nThe email address that sends emails.\n\nWarning\n\nIf you use the AWS IoT Events managed AWS Lambda function to manage your emails, you must verify the email address that sends emails in Amazon SES .\n\ncontent -> (structure)\n\nContains the subject and message of an email.\n\nsubject -> (string)\n\nThe subject of the email.\n\nadditionalMessage -> (string)\n\nThe message that you want to send. The message can be up to 200 characters.\n\nrecipients -> (structure)\n\nContains the information of one or more recipients who receive the emails.\n\nWarning\n\nYou must add the users that receive emails to your AWS SSO store .\n\nto -> (list)\n\nSpecifies one or more recipients who receive the email.\n\n(structure)\n\nThe information that identifies the recipient.\n\nssoIdentity -> (structure)\n\nThe AWS Single Sign-On (AWS SSO) authentication information.\n\nidentityStoreId -> (string)\n\nThe ID of the AWS SSO identity store.\n\nuserId -> (string)\n\nThe user ID.\n\nJSON Syntax:\n\n{\n  \"notificationActions\": [\n    {\n      \"action\": {\n        \"lambdaAction\": {\n          \"functionArn\": \"string\",\n          \"payload\": {\n            \"contentExpression\": \"string\",\n            \"type\": \"STRING\"|\"JSON\"\n          }\n        }\n      },\n      \"smsConfigurations\": [\n        {\n          \"senderId\": \"string\",\n          \"additionalMessage\": \"string\",\n          \"recipients\": [\n            {\n              \"ssoIdentity\": {\n                \"identityStoreId\": \"string\",\n                \"userId\": \"string\"\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"emailConfigurations\": [\n        {\n          \"from\": \"string\",\n          \"content\": {\n            \"subject\": \"string\",\n            \"additionalMessage\": \"string\"\n          },\n          \"recipients\": {\n            \"to\": [\n              {\n                \"ssoIdentity\": {\n                  \"identityStoreId\": \"string\",\n                  \"userId\": \"string\"\n                }\n              }\n              ...\n            ]\n          }\n        }\n        ...\n      ]\n    }\n    ...\n  ]\n}\n\n\n--alarm-event-actions (structure)\n\nContains information about one or more alarm actions.\n\nalarmActions -> (list)\n\nSpecifies one or more supported actions to receive notifications when the alarm state changes.\n\n(structure)\n\nSpecifies one of the following actions to receive notifications when the alarm state changes.\n\nsns -> (structure)\n\nInformation required to publish the Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nInformation required to publish the MQTT message through the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends an AWS IoT Events input, passing in information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nDefines an action to write to the Amazon DynamoDB table that you created. The standard action payload contains all the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify.\n\nYou must use expressions for all parameters in DynamoDBAction . The expressions accept literals, operators, functions, references, and substitution templates.\n\nExamples\n\nFor literal values, the expressions must contain single quotes. For example, the value for the hashKeyType parameter can be 'STRING' .\n\nFor references, you must specify either variables or input values. For example, the value for the hashKeyField parameter can be $input.GreenhouseInput.name .\n\nFor a substitution template, you must use ${} , and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the hashKeyValue parameter uses a substitution template. '${$input.GreenhouseInput.temperature * 6 / 5 + 32} in Fahrenheit'\n\nFor a string concatenation, you must use + . A string concatenation can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the tableName parameter uses a string concatenation. 'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date\n\nFor more information, see Expressions in the AWS IoT Events Developer Guide .\n\nIf the defined payload type is a string, DynamoDBAction writes non-JSON data to the DynamoDB table as binary data. The DynamoDB console displays the data as Base64-encoded text. The value for the payloadField parameter is <payload-field>_raw .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nDefines an action to write to the Amazon DynamoDB table that you created. The default action payload contains all the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify.\n\nYou must use expressions for all parameters in DynamoDBv2Action . The expressions accept literals, operators, functions, references, and substitution templates.\n\nExamples\n\nFor literal values, the expressions must contain single quotes. For example, the value for the tableName parameter can be 'GreenhouseTemperatureTable' .\n\nFor references, you must specify either variables or input values. For example, the value for the tableName parameter can be $variable.ddbtableName .\n\nFor a substitution template, you must use ${} , and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the contentExpression parameter in Payload uses a substitution template. '{\\\"sensorID\\\": \\\"${$input.GreenhouseInput.sensor_id}\\\", \\\"temperature\\\": \\\"${$input.GreenhouseInput.temperature * 9 / 5 + 32}\\\"}'\n\nFor a string concatenation, you must use + . A string concatenation can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the tableName parameter uses a string concatenation. 'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date\n\nFor more information, see Expressions in the AWS IoT Events Developer Guide .\n\nThe value for the type parameter in Payload must be JSON .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.\n\nYou must use expressions for all parameters in IotSiteWiseAction . The expressions accept literals, operators, functions, references, and substitutions templates.\n\nExamples\n\nFor literal values, the expressions must contain single quotes. For example, the value for the propertyAlias parameter can be '/company/windfarm/3/turbine/7/temperature' .\n\nFor references, you must specify either variables or input values. For example, the value for the assetId parameter can be $input.TurbineInput.assetId1 .\n\nFor a substitution template, you must use ${} , and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the propertyAlias parameter uses a substitution template. 'company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/ ${$input.TemperatureInput.sensorData.turbineID}/temperature'\n\nYou must specify either propertyAlias or both assetId and propertyId to identify the target asset property in AWS IoT SiteWise.\n\nFor more information, see Expressions in the AWS IoT Events Developer Guide .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nJSON Syntax:\n\n{\n  \"alarmActions\": [\n    {\n      \"sns\": {\n        \"targetArn\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"iotTopicPublish\": {\n        \"mqttTopic\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"lambda\": {\n        \"functionArn\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"iotEvents\": {\n        \"inputName\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"sqs\": {\n        \"queueUrl\": \"string\",\n        \"useBase64\": true|false,\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"firehose\": {\n        \"deliveryStreamName\": \"string\",\n        \"separator\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"dynamoDB\": {\n        \"hashKeyType\": \"string\",\n        \"hashKeyField\": \"string\",\n        \"hashKeyValue\": \"string\",\n        \"rangeKeyType\": \"string\",\n        \"rangeKeyField\": \"string\",\n        \"rangeKeyValue\": \"string\",\n        \"operation\": \"string\",\n        \"payloadField\": \"string\",\n        \"tableName\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"dynamoDBv2\": {\n        \"tableName\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"iotSiteWise\": {\n        \"entryId\": \"string\",\n        \"assetId\": \"string\",\n        \"propertyId\": \"string\",\n        \"propertyAlias\": \"string\",\n        \"propertyValue\": {\n          \"value\": {\n            \"stringValue\": \"string\",\n            \"integerValue\": \"string\",\n            \"doubleValue\": \"string\",\n            \"booleanValue\": \"string\"\n          },\n          \"timestamp\": {\n            \"timeInSeconds\": \"string\",\n            \"offsetInNanos\": \"string\"\n          },\n          \"quality\": \"string\"\n        }\n      }\n    }\n    ...\n  ]\n}\n\n\n--alarm-capabilities (structure)\n\nContains the configuration information of alarm state changes.\n\ninitializationConfiguration -> (structure)\n\nSpecifies the default alarm state. The configuration applies to all alarms that were created based on this alarm model.\n\ndisabledOnInitialization -> (boolean)\n\nThe value must be TRUE or FALSE . If FALSE , all alarm instances created based on the alarm model are activated. The default value is TRUE .\n\nacknowledgeFlow -> (structure)\n\nSpecifies whether to get notified for alarm state changes.\n\nenabled -> (boolean)\n\nThe value must be TRUE or FALSE . If TRUE , you receive a notification when the alarm state changes. You must choose to acknowledge the notification before the alarm state can return to NORMAL . If FALSE , you won’t receive notifications. The alarm automatically changes to the NORMAL state when the input property value returns to the specified range.\n\nShorthand Syntax:\n\ninitializationConfiguration={disabledOnInitialization=boolean},acknowledgeFlow={enabled=boolean}\n\n\nJSON Syntax:\n\n{\n  \"initializationConfiguration\": {\n    \"disabledOnInitialization\": true|false\n  },\n  \"acknowledgeFlow\": {\n    \"enabled\": true|false\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncreationTime -> (timestamp)\n\nThe time the alarm model was created, in the Unix epoch format.\n\nalarmModelArn -> (string)\n\nThe ARN of the alarm model. For more information, see Amazon Resource Names (ARNs) in the AWS General Reference .\n\nalarmModelVersion -> (string)\n\nThe version of the alarm model.\n\nlastUpdateTime -> (timestamp)\n\nThe time the alarm model was last updated, in the Unix epoch format.\n\nstatus -> (string)\n\nThe status of the alarm model. The status can be one of the following values:\n\nACTIVE - The alarm model is active and it’s ready to evaluate data.\n\nACTIVATING - AWS IoT Events is activating your alarm model. Activating an alarm model can take up to a few minutes.\n\nINACTIVE - The alarm model is inactive, so it isn’t ready to evaluate data. Check your alarm model information and update the alarm model.\n\nFAILED - You couldn’t create or update the alarm model. Check your alarm model information and try again."
    },
    {
      "command_name": "create-detector-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/create-detector-model.html",
      "command_description": "Description\n\nCreates a detector model.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-detector-model\n--detector-model-name <value>\n--detector-model-definition <value>\n[--detector-model-description <value>]\n[--key <value>]\n--role-arn <value>\n[--tags <value>]\n[--evaluation-method <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--detector-model-name <value>",
        "--detector-model-definition <value>",
        "[--detector-model-description <value>]",
        "[--key <value>]",
        "--role-arn <value>",
        "[--tags <value>]",
        "[--evaluation-method <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--detector-model-name (string)\n\nThe name of the detector model.\n\n--detector-model-definition (structure)\n\nInformation that defines how the detectors operate.\n\nstates -> (list)\n\nInformation about the states of the detector.\n\n(structure)\n\nInformation that defines a state of a detector.\n\nstateName -> (string)\n\nThe name of the state.\n\nonInput -> (structure)\n\nWhen an input is received and the condition is TRUE, perform the specified actions .\n\nevents -> (list)\n\nSpecifies the actions performed when the condition evaluates to TRUE.\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\ntransitionEvents -> (list)\n\nSpecifies the actions performed, and the next state entered, when a condition evaluates to TRUE.\n\n(structure)\n\nSpecifies the actions performed and the next state entered when a condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the transition event.\n\ncondition -> (string)\n\nRequired. A Boolean expression that when TRUE causes the actions to be performed and the nextState to be entered.\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nnextState -> (string)\n\nThe next state to enter.\n\nonEnter -> (structure)\n\nWhen entering this state, perform these actions if the condition is TRUE.\n\nevents -> (list)\n\nSpecifies the actions that are performed when the state is entered and the condition is TRUE .\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nonExit -> (structure)\n\nWhen exiting this state, perform these actions if the specified condition is TRUE .\n\nevents -> (list)\n\nSpecifies the actions that are performed when the state is exited and the condition is TRUE .\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\ninitialStateName -> (string)\n\nThe state that is entered at the creation of each detector (instance).\n\nJSON Syntax:\n\n{\n  \"states\": [\n    {\n      \"stateName\": \"string\",\n      \"onInput\": {\n        \"events\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ]\n          }\n          ...\n        ],\n        \"transitionEvents\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ],\n            \"nextState\": \"string\"\n          }\n          ...\n        ]\n      },\n      \"onEnter\": {\n        \"events\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ]\n          }\n          ...\n        ]\n      },\n      \"onExit\": {\n        \"events\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ]\n          }\n          ...\n        ]\n      }\n    }\n    ...\n  ],\n  \"initialStateName\": \"string\"\n}\n\n\n--detector-model-description (string)\n\nA brief description of the detector model.\n\n--key (string)\n\nThe input attribute key used to identify a device or system to create a detector (an instance of the detector model) and then to route each input received to the appropriate detector (instance). This parameter uses a JSON-path expression in the message payload of each input to specify the attribute-value pair that is used to identify the device associated with the input.\n\n--role-arn (string)\n\nThe ARN of the role that grants permission to AWS IoT Events to perform its operations.\n\n--tags (list)\n\nMetadata that can be used to manage the detector model.\n\n(structure)\n\nMetadata that can be used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--evaluation-method (string)\n\nInformation about the order in which events are evaluated and how actions are executed.\n\nPossible values:\n\nBATCH\n\nSERIAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndetectorModelConfiguration -> (structure)\n\nInformation about how the detector model is configured.\n\ndetectorModelName -> (string)\n\nThe name of the detector model.\n\ndetectorModelVersion -> (string)\n\nThe version of the detector model.\n\ndetectorModelDescription -> (string)\n\nA brief description of the detector model.\n\ndetectorModelArn -> (string)\n\nThe ARN of the detector model.\n\nroleArn -> (string)\n\nThe ARN of the role that grants permission to AWS IoT Events to perform its operations.\n\ncreationTime -> (timestamp)\n\nThe time the detector model was created.\n\nlastUpdateTime -> (timestamp)\n\nThe time the detector model was last updated.\n\nstatus -> (string)\n\nThe status of the detector model.\n\nkey -> (string)\n\nThe value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on this identifying information.\n\nThis parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.\n\nevaluationMethod -> (string)\n\nInformation about the order in which events are evaluated and how actions are executed.",
      "command_examples": "Examples\n\nTo create a detector model\n\nThe following create-detector-model example creates a detector model with its configuration specified by a parameter file.\n\naws iotevents create-detector-model  \\\n    --cli-input-json file://motorDetectorModel.json\n\n\nContents of motorDetectorModel.json:\n\n{\n    \"detectorModelName\": \"motorDetectorModel\",\n    \"detectorModelDefinition\": {\n        \"states\": [\n            {\n                \"stateName\": \"Normal\",\n                \"onEnter\": {\n                    \"events\": [\n                        {\n                            \"eventName\": \"init\",\n                            \"condition\": \"true\",\n                            \"actions\": [\n                                {\n                                    \"setVariable\": {\n                                        \"variableName\": \"pressureThresholdBreached\",\n                                        \"value\": \"0\"\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"onInput\": {\n                    \"transitionEvents\": [\n                        {\n                            \"eventName\": \"Overpressurized\",\n                            \"condition\": \"$input.PressureInput.sensorData.pressure &gt; 70\",\n                            \"actions\": [\n                                {\n                                    \"setVariable\": {\n                                        \"variableName\": \"pressureThresholdBreached\",\n                                        \"value\": \"$variable.pressureThresholdBreached + 3\"\n                                    }\n                                }\n                            ],\n                            \"nextState\": \"Dangerous\"\n                        }\n                    ]\n                }\n            },\n            {\n                \"stateName\": \"Dangerous\",\n                \"onEnter\": {\n                    \"events\": [\n                        {\n                            \"eventName\": \"Pressure Threshold Breached\",\n                            \"condition\": \"$variable.pressureThresholdBreached &gt; 1\",\n                            \"actions\": [\n                                {\n                                    \"sns\": {\n                                        \"targetArn\": \"arn:aws:sns:us-east-1:123456789012:underPressureAction\"\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"onInput\": {\n                    \"events\": [\n                        {\n                            \"eventName\": \"Overpressurized\",\n                            \"condition\": \"$input.PressureInput.sensorData.pressure &gt; 70\",\n                            \"actions\": [\n                                {\n                                    \"setVariable\": {\n                                        \"variableName\": \"pressureThresholdBreached\",\n                                        \"value\": \"3\"\n                                    }\n                                }\n                            ]\n                        },\n                        {\n                            \"eventName\": \"Pressure Okay\",\n                            \"condition\": \"$input.PressureInput.sensorData.pressure &lt;= 70\",\n                            \"actions\": [\n                                {\n                                    \"setVariable\": {\n                                        \"variableName\": \"pressureThresholdBreached\",\n                                        \"value\": \"$variable.pressureThresholdBreached - 1\"\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    \"transitionEvents\": [\n                        {\n                            \"eventName\": \"BackToNormal\",\n                            \"condition\": \"$input.PressureInput.sensorData.pressure &lt;= 70 &amp;&amp; $variable.pressureThresholdBreached &lt;= 1\",\n                            \"nextState\": \"Normal\"\n                        }\n                    ]\n                },\n                \"onExit\": {\n                    \"events\": [\n                        {\n                            \"eventName\": \"Normal Pressure Restored\",\n                            \"condition\": \"true\",\n                            \"actions\": [\n                                {\n                                    \"sns\": {\n                                        \"targetArn\": \"arn:aws:sns:us-east-1:123456789012:pressureClearedAction\"\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"initialStateName\": \"Normal\"\n    },\n    \"key\": \"motorid\",\n    \"roleArn\": \"arn:aws:iam::123456789012:role/IoTEventsRole\"\n}\n\n\nOutput:\n\n{\n    \"detectorModelConfiguration\": {\n        \"status\": \"ACTIVATING\",\n        \"lastUpdateTime\": 1560796816.077,\n        \"roleArn\": \"arn:aws:iam::123456789012:role/IoTEventsRole\",\n        \"creationTime\": 1560796816.077,\n        \"detectorModelArn\": \"arn:aws:iotevents:us-west-2:123456789012:detectorModel/motorDetectorModel\",\n        \"key\": \"motorid\",\n        \"detectorModelName\": \"motorDetectorModel\",\n        \"detectorModelVersion\": \"1\"\n    }\n}\n\n\nFor more information, see CreateDetectorModel in the AWS IoT Events API Reference."
    },
    {
      "command_name": "create-input",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/create-input.html",
      "command_description": "Description\n\nCreates an input.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-input\n--input-name <value>\n[--input-description <value>]\n--input-definition <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-name <value>",
        "[--input-description <value>]",
        "--input-definition <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-name (string)\n\nThe name you want to give to the input.\n\n--input-description (string)\n\nA brief description of the input.\n\n--input-definition (structure)\n\nThe definition of the input.\n\nattributes -> (list)\n\nThe attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using BatchPutMessage . Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the condition expressions used by detectors that monitor this input.\n\n(structure)\n\nThe attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using BatchPutMessage . Each such message contains a JSON payload. Those attributes (and their paired values) specified here are available for use in the condition expressions used by detectors.\n\njsonPath -> (string)\n\nAn expression that specifies an attribute-value pair in a JSON structure. Use this to specify an attribute from the JSON payload that is made available by the input. Inputs are derived from messages sent to AWS IoT Events (BatchPutMessage ). Each such message contains a JSON payload. The attribute (and its paired value) specified here are available for use in the condition expressions used by detectors.\n\nSyntax: <field-name>.<field-name>...\n\nShorthand Syntax:\n\nattributes=[{jsonPath=string},{jsonPath=string}]\n\n\nJSON Syntax:\n\n{\n  \"attributes\": [\n    {\n      \"jsonPath\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--tags (list)\n\nMetadata that can be used to manage the input.\n\n(structure)\n\nMetadata that can be used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninputConfiguration -> (structure)\n\nInformation about the configuration of the input.\n\ninputName -> (string)\n\nThe name of the input.\n\ninputDescription -> (string)\n\nA brief description of the input.\n\ninputArn -> (string)\n\nThe ARN of the input.\n\ncreationTime -> (timestamp)\n\nThe time the input was created.\n\nlastUpdateTime -> (timestamp)\n\nThe last time the input was updated.\n\nstatus -> (string)\n\nThe status of the input.",
      "command_examples": "Examples\n\nTo create an input\n\nThe following create-input example creates an input.\n\naws iotevents create-input  \\\n    --cli-input-json file://pressureInput.json\n\n\nContents of pressureInput.json:\n\n{\n    \"inputName\": \"PressureInput\",\n    \"inputDescription\": \"Pressure readings from a motor\",\n    \"inputDefinition\": {\n        \"attributes\": [\n            { \"jsonPath\": \"sensorData.pressure\" },\n            { \"jsonPath\": \"motorid\" }\n        ]\n    }\n}\n\n\nOutput:\n\n{\n    \"inputConfiguration\": {\n        \"status\": \"ACTIVE\",\n        \"inputArn\": \"arn:aws:iotevents:us-west-2:123456789012:input/PressureInput\",\n        \"lastUpdateTime\": 1560795312.542,\n        \"creationTime\": 1560795312.542,\n        \"inputName\": \"PressureInput\",\n        \"inputDescription\": \"Pressure readings from a motor\"\n    }\n}\n\n\nFor more information, see CreateInput in the AWS IoT Events API Reference."
    },
    {
      "command_name": "delete-alarm-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/delete-alarm-model.html",
      "command_description": "Description\n\nDeletes an alarm model. Any alarm instances that were created based on this alarm model are also deleted. This action can’t be undone.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-alarm-model\n--alarm-model-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--alarm-model-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--alarm-model-name (string)\n\nThe name of the alarm model.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-detector-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/delete-detector-model.html",
      "command_description": "Description\n\nDeletes a detector model. Any active instances of the detector model are also deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-detector-model\n--detector-model-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--detector-model-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--detector-model-name (string)\n\nThe name of the detector model to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a detector model\n\nThe following delete-detector-model example deletes the specified detector model. Any active instances of the detector model are also deleted.\n\naws iotevents delete-detector-model \\\n    --detector-model-name motorDetectorModel\n\n\nThis command produces no output.\n\nFor more information, see DeleteDetectorModel in the AWS IoT Events API Reference."
    },
    {
      "command_name": "delete-input",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/delete-input.html",
      "command_description": "Description\n\nDeletes an input.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-input\n--input-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-name (string)\n\nThe name of the input to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an input\n\nThe following delete-input example deletes the specified input.\n\naws iotevents delete-input \\\n    --input-name PressureInput\n\n\nThis command produces no output.\n\nFor more information, see DeleteInput in the AWS IoT Events API Reference."
    },
    {
      "command_name": "describe-alarm-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/describe-alarm-model.html",
      "command_description": "Description\n\nRetrieves information about an alarm model. If you don’t specify a value for the alarmModelVersion parameter, the latest version is returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-alarm-model\n--alarm-model-name <value>\n[--alarm-model-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--alarm-model-name <value>",
        "[--alarm-model-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--alarm-model-name (string)\n\nThe name of the alarm model.\n\n--alarm-model-version (string)\n\nThe version of the alarm model.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncreationTime -> (timestamp)\n\nThe time the alarm model was created, in the Unix epoch format.\n\nalarmModelArn -> (string)\n\nThe ARN of the alarm model. For more information, see Amazon Resource Names (ARNs) in the AWS General Reference .\n\nalarmModelVersion -> (string)\n\nThe version of the alarm model.\n\nlastUpdateTime -> (timestamp)\n\nThe time the alarm model was last updated, in the Unix epoch format.\n\nstatus -> (string)\n\nThe status of the alarm model. The status can be one of the following values:\n\nACTIVE - The alarm model is active and it’s ready to evaluate data.\n\nACTIVATING - AWS IoT Events is activating your alarm model. Activating an alarm model can take up to a few minutes.\n\nINACTIVE - The alarm model is inactive, so it isn’t ready to evaluate data. Check your alarm model information and update the alarm model.\n\nFAILED - You couldn’t create or update the alarm model. Check your alarm model information and try again.\n\nstatusMessage -> (string)\n\nContains information about the status of the alarm model.\n\nalarmModelName -> (string)\n\nThe name of the alarm model.\n\nalarmModelDescription -> (string)\n\nThe description of the alarm model.\n\nroleArn -> (string)\n\nThe ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see Amazon Resource Names (ARNs) in the AWS General Reference .\n\nkey -> (string)\n\nAn input attribute used as a key to create an alarm. AWS IoT Events routes inputs associated with this key to the alarm.\n\nseverity -> (integer)\n\nA non-negative integer that reflects the severity level of the alarm.\n\nalarmRule -> (structure)\n\nDefines when your alarm is invoked.\n\nsimpleRule -> (structure)\n\nA rule that compares an input property value to a threshold value with a comparison operator.\n\ninputProperty -> (string)\n\nThe value on the left side of the comparison operator. You can specify an AWS IoT Events input attribute as an input property.\n\ncomparisonOperator -> (string)\n\nThe comparison operator.\n\nthreshold -> (string)\n\nThe value on the right side of the comparison operator. You can enter a number or specify an AWS IoT Events input attribute.\n\nalarmNotification -> (structure)\n\nContains information about one or more notification actions.\n\nnotificationActions -> (list)\n\nContains the notification settings of an alarm model. The settings apply to all alarms that were created based on this alarm model.\n\n(structure)\n\nContains the notification settings of an alarm model. The settings apply to all alarms that were created based on this alarm model.\n\naction -> (structure)\n\nSpecifies an AWS Lambda function to manage alarm notifications. You can create one or use the AWS Lambda function provided by AWS IoT Events .\n\nlambdaAction -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsmsConfigurations -> (list)\n\nContains the configuration information of SMS notifications.\n\n(structure)\n\nContains the configuration information of SMS notifications.\n\nsenderId -> (string)\n\nThe sender ID.\n\nadditionalMessage -> (string)\n\nThe message that you want to send. The message can be up to 200 characters.\n\nrecipients -> (list)\n\nSpecifies one or more recipients who receive the message.\n\nWarning\n\nYou must add the users that receive SMS messages to your AWS SSO store .\n\n(structure)\n\nThe information that identifies the recipient.\n\nssoIdentity -> (structure)\n\nThe AWS Single Sign-On (AWS SSO) authentication information.\n\nidentityStoreId -> (string)\n\nThe ID of the AWS SSO identity store.\n\nuserId -> (string)\n\nThe user ID.\n\nemailConfigurations -> (list)\n\nContains the configuration information of email notifications.\n\n(structure)\n\nContains the configuration information of email notifications.\n\nfrom -> (string)\n\nThe email address that sends emails.\n\nWarning\n\nIf you use the AWS IoT Events managed AWS Lambda function to manage your emails, you must verify the email address that sends emails in Amazon SES .\n\ncontent -> (structure)\n\nContains the subject and message of an email.\n\nsubject -> (string)\n\nThe subject of the email.\n\nadditionalMessage -> (string)\n\nThe message that you want to send. The message can be up to 200 characters.\n\nrecipients -> (structure)\n\nContains the information of one or more recipients who receive the emails.\n\nWarning\n\nYou must add the users that receive emails to your AWS SSO store .\n\nto -> (list)\n\nSpecifies one or more recipients who receive the email.\n\n(structure)\n\nThe information that identifies the recipient.\n\nssoIdentity -> (structure)\n\nThe AWS Single Sign-On (AWS SSO) authentication information.\n\nidentityStoreId -> (string)\n\nThe ID of the AWS SSO identity store.\n\nuserId -> (string)\n\nThe user ID.\n\nalarmEventActions -> (structure)\n\nContains information about one or more alarm actions.\n\nalarmActions -> (list)\n\nSpecifies one or more supported actions to receive notifications when the alarm state changes.\n\n(structure)\n\nSpecifies one of the following actions to receive notifications when the alarm state changes.\n\nsns -> (structure)\n\nInformation required to publish the Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nInformation required to publish the MQTT message through the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends an AWS IoT Events input, passing in information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nDefines an action to write to the Amazon DynamoDB table that you created. The standard action payload contains all the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify.\n\nYou must use expressions for all parameters in DynamoDBAction . The expressions accept literals, operators, functions, references, and substitution templates.\n\nExamples\n\nFor literal values, the expressions must contain single quotes. For example, the value for the hashKeyType parameter can be 'STRING' .\n\nFor references, you must specify either variables or input values. For example, the value for the hashKeyField parameter can be $input.GreenhouseInput.name .\n\nFor a substitution template, you must use ${} , and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the hashKeyValue parameter uses a substitution template. '${$input.GreenhouseInput.temperature * 6 / 5 + 32} in Fahrenheit'\n\nFor a string concatenation, you must use + . A string concatenation can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the tableName parameter uses a string concatenation. 'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date\n\nFor more information, see Expressions in the AWS IoT Events Developer Guide .\n\nIf the defined payload type is a string, DynamoDBAction writes non-JSON data to the DynamoDB table as binary data. The DynamoDB console displays the data as Base64-encoded text. The value for the payloadField parameter is <payload-field>_raw .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nDefines an action to write to the Amazon DynamoDB table that you created. The default action payload contains all the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify.\n\nYou must use expressions for all parameters in DynamoDBv2Action . The expressions accept literals, operators, functions, references, and substitution templates.\n\nExamples\n\nFor literal values, the expressions must contain single quotes. For example, the value for the tableName parameter can be 'GreenhouseTemperatureTable' .\n\nFor references, you must specify either variables or input values. For example, the value for the tableName parameter can be $variable.ddbtableName .\n\nFor a substitution template, you must use ${} , and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the contentExpression parameter in Payload uses a substitution template. '{\\\"sensorID\\\": \\\"${$input.GreenhouseInput.sensor_id}\\\", \\\"temperature\\\": \\\"${$input.GreenhouseInput.temperature * 9 / 5 + 32}\\\"}'\n\nFor a string concatenation, you must use + . A string concatenation can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the tableName parameter uses a string concatenation. 'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date\n\nFor more information, see Expressions in the AWS IoT Events Developer Guide .\n\nThe value for the type parameter in Payload must be JSON .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.\n\nYou must use expressions for all parameters in IotSiteWiseAction . The expressions accept literals, operators, functions, references, and substitutions templates.\n\nExamples\n\nFor literal values, the expressions must contain single quotes. For example, the value for the propertyAlias parameter can be '/company/windfarm/3/turbine/7/temperature' .\n\nFor references, you must specify either variables or input values. For example, the value for the assetId parameter can be $input.TurbineInput.assetId1 .\n\nFor a substitution template, you must use ${} , and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the propertyAlias parameter uses a substitution template. 'company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/ ${$input.TemperatureInput.sensorData.turbineID}/temperature'\n\nYou must specify either propertyAlias or both assetId and propertyId to identify the target asset property in AWS IoT SiteWise.\n\nFor more information, see Expressions in the AWS IoT Events Developer Guide .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nalarmCapabilities -> (structure)\n\nContains the configuration information of alarm state changes.\n\ninitializationConfiguration -> (structure)\n\nSpecifies the default alarm state. The configuration applies to all alarms that were created based on this alarm model.\n\ndisabledOnInitialization -> (boolean)\n\nThe value must be TRUE or FALSE . If FALSE , all alarm instances created based on the alarm model are activated. The default value is TRUE .\n\nacknowledgeFlow -> (structure)\n\nSpecifies whether to get notified for alarm state changes.\n\nenabled -> (boolean)\n\nThe value must be TRUE or FALSE . If TRUE , you receive a notification when the alarm state changes. You must choose to acknowledge the notification before the alarm state can return to NORMAL . If FALSE , you won’t receive notifications. The alarm automatically changes to the NORMAL state when the input property value returns to the specified range."
    },
    {
      "command_name": "describe-detector-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/describe-detector-model.html",
      "command_description": "Description\n\nDescribes a detector model. If the version parameter is not specified, information about the latest version is returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-detector-model\n--detector-model-name <value>\n[--detector-model-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--detector-model-name <value>",
        "[--detector-model-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--detector-model-name (string)\n\nThe name of the detector model.\n\n--detector-model-version (string)\n\nThe version of the detector model.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndetectorModel -> (structure)\n\nInformation about the detector model.\n\ndetectorModelDefinition -> (structure)\n\nInformation that defines how a detector operates.\n\nstates -> (list)\n\nInformation about the states of the detector.\n\n(structure)\n\nInformation that defines a state of a detector.\n\nstateName -> (string)\n\nThe name of the state.\n\nonInput -> (structure)\n\nWhen an input is received and the condition is TRUE, perform the specified actions .\n\nevents -> (list)\n\nSpecifies the actions performed when the condition evaluates to TRUE.\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\ntransitionEvents -> (list)\n\nSpecifies the actions performed, and the next state entered, when a condition evaluates to TRUE.\n\n(structure)\n\nSpecifies the actions performed and the next state entered when a condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the transition event.\n\ncondition -> (string)\n\nRequired. A Boolean expression that when TRUE causes the actions to be performed and the nextState to be entered.\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nnextState -> (string)\n\nThe next state to enter.\n\nonEnter -> (structure)\n\nWhen entering this state, perform these actions if the condition is TRUE.\n\nevents -> (list)\n\nSpecifies the actions that are performed when the state is entered and the condition is TRUE .\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nonExit -> (structure)\n\nWhen exiting this state, perform these actions if the specified condition is TRUE .\n\nevents -> (list)\n\nSpecifies the actions that are performed when the state is exited and the condition is TRUE .\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\ninitialStateName -> (string)\n\nThe state that is entered at the creation of each detector (instance).\n\ndetectorModelConfiguration -> (structure)\n\nInformation about how the detector is configured.\n\ndetectorModelName -> (string)\n\nThe name of the detector model.\n\ndetectorModelVersion -> (string)\n\nThe version of the detector model.\n\ndetectorModelDescription -> (string)\n\nA brief description of the detector model.\n\ndetectorModelArn -> (string)\n\nThe ARN of the detector model.\n\nroleArn -> (string)\n\nThe ARN of the role that grants permission to AWS IoT Events to perform its operations.\n\ncreationTime -> (timestamp)\n\nThe time the detector model was created.\n\nlastUpdateTime -> (timestamp)\n\nThe time the detector model was last updated.\n\nstatus -> (string)\n\nThe status of the detector model.\n\nkey -> (string)\n\nThe value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on this identifying information.\n\nThis parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.\n\nevaluationMethod -> (string)\n\nInformation about the order in which events are evaluated and how actions are executed.",
      "command_examples": "Examples\n\nTo get information about a detector model\n\nThe following describe-detector-model example displays details for the specified detector model. Because the version parameter is not specified, information about the latest version is returned.\n\naws iotevents describe-detector-model \\\n    --detector-model-name motorDetectorModel\n\n\nOutput:\n\n{\n    \"detectorModel\": {\n        \"detectorModelConfiguration\": {\n            \"status\": \"ACTIVE\",\n            \"lastUpdateTime\": 1560796816.077,\n            \"roleArn\": \"arn:aws:iam::123456789012:role/IoTEventsRole\",\n            \"creationTime\": 1560796816.077,\n            \"detectorModelArn\": \"arn:aws:iotevents:us-west-2:123456789012:detectorModel/motorDetectorModel\",\n            \"key\": \"motorid\",\n            \"detectorModelName\": \"motorDetectorModel\",\n            \"detectorModelVersion\": \"1\"\n        },\n        \"detectorModelDefinition\": {\n            \"states\": [\n                {\n                    \"onInput\": {\n                        \"transitionEvents\": [\n                            {\n                                \"eventName\": \"Overpressurized\",\n                                \"actions\": [\n                                    {\n                                        \"setVariable\": {\n                                            \"variableName\": \"pressureThresholdBreached\",\n                                            \"value\": \"$variable.pressureThresholdBreached + 3\"\n                                        }\n                                    }\n                                ],\n                                \"condition\": \"$input.PressureInput.sensorData.pressure > 70\",\n                                \"nextState\": \"Dangerous\"\n                            }\n                        ],\n                        \"events\": []\n                    },\n                    \"stateName\": \"Normal\",\n                    \"onEnter\": {\n                        \"events\": [\n                            {\n                                \"eventName\": \"init\",\n                                \"actions\": [\n                                    {\n                                        \"setVariable\": {\n                                            \"variableName\": \"pressureThresholdBreached\",\n                                            \"value\": \"0\"\n                                        }\n                                    }\n                                ],\n                                \"condition\": \"true\"\n                            }\n                        ]\n                    },\n                    \"onExit\": {\n                        \"events\": []\n                    }\n                },\n                {\n                    \"onInput\": {\n                        \"transitionEvents\": [\n                            {\n                                \"eventName\": \"BackToNormal\",\n                                \"actions\": [],\n                                \"condition\": \"$input.PressureInput.sensorData.pressure <= 70 && $variable.pressureThresholdBreached <= 1\",\n                                \"nextState\": \"Normal\"\n                            }\n                        ],\n                        \"events\": [\n                            {\n                                \"eventName\": \"Overpressurized\",\n                                \"actions\": [\n                                    {\n                                        \"setVariable\": {\n                                            \"variableName\": \"pressureThresholdBreached\",\n                                            \"value\": \"3\"\n                                        }\n                                    }\n                                ],\n                                \"condition\": \"$input.PressureInput.sensorData.pressure > 70\"\n                            },\n                            {\n                                \"eventName\": \"Pressure Okay\",\n                                \"actions\": [\n                                    {\n                                        \"setVariable\": {\n                                            \"variableName\": \"pressureThresholdBreached\",\n                                            \"value\": \"$variable.pressureThresholdBreached - 1\"\n                                        }\n                                    }\n                                ],\n                                \"condition\": \"$input.PressureInput.sensorData.pressure <= 70\"\n                            }\n                        ]\n                    },\n                    \"stateName\": \"Dangerous\",\n                    \"onEnter\": {\n                        \"events\": [\n                            {\n                                \"eventName\": \"Pressure Threshold Breached\",\n                                \"actions\": [\n                                    {\n                                        \"sns\": {\n                                            \"targetArn\": \"arn:aws:sns:us-east-1:123456789012:underPressureAction\"\n                                        }\n                                    }\n                                ],\n                                \"condition\": \"$variable.pressureThresholdBreached > 1\"\n                            }\n                        ]\n                    },\n                    \"onExit\": {\n                        \"events\": [\n                            {\n                                \"eventName\": \"Normal Pressure Restored\",\n                                \"actions\": [\n                                    {\n                                        \"sns\": {\n                                            \"targetArn\": \"arn:aws:sns:us-east-1:123456789012:pressureClearedAction\"\n                                        }\n                                    }\n                                ],\n                                \"condition\": \"true\"\n                            }\n                        ]\n                    }\n                }\n            ],\n            \"initialStateName\": \"Normal\"\n        }\n    }\n}\n\n\nFor more information, see DescribeDetectorModel in the AWS IoT Events API Reference."
    },
    {
      "command_name": "describe-detector-model-analysis",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/describe-detector-model-analysis.html",
      "command_description": "Description\n\nRetrieves runtime information about a detector model analysis.\n\nNote\n\nAfter AWS IoT Events starts analyzing your detector model, you have up to 24 hours to retrieve the analysis results.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-detector-model-analysis\n--analysis-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--analysis-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--analysis-id (string)\n\nThe ID of the analysis result that you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstatus -> (string)\n\nThe status of the analysis activity. The status can be one of the following values:\n\nRUNNING - AWS IoT Events is analyzing your detector model. This process can take several minutes to complete.\n\nCOMPLETE - AWS IoT Events finished analyzing your detector model.\n\nFAILED - AWS IoT Events couldn’t analyze your detector model. Try again later."
    },
    {
      "command_name": "describe-input",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/describe-input.html",
      "command_description": "Description\n\nDescribes an input.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-input\n--input-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-name (string)\n\nThe name of the input.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninput -> (structure)\n\nInformation about the input.\n\ninputConfiguration -> (structure)\n\nInformation about the configuration of an input.\n\ninputName -> (string)\n\nThe name of the input.\n\ninputDescription -> (string)\n\nA brief description of the input.\n\ninputArn -> (string)\n\nThe ARN of the input.\n\ncreationTime -> (timestamp)\n\nThe time the input was created.\n\nlastUpdateTime -> (timestamp)\n\nThe last time the input was updated.\n\nstatus -> (string)\n\nThe status of the input.\n\ninputDefinition -> (structure)\n\nThe definition of the input.\n\nattributes -> (list)\n\nThe attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using BatchPutMessage . Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the condition expressions used by detectors that monitor this input.\n\n(structure)\n\nThe attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using BatchPutMessage . Each such message contains a JSON payload. Those attributes (and their paired values) specified here are available for use in the condition expressions used by detectors.\n\njsonPath -> (string)\n\nAn expression that specifies an attribute-value pair in a JSON structure. Use this to specify an attribute from the JSON payload that is made available by the input. Inputs are derived from messages sent to AWS IoT Events (BatchPutMessage ). Each such message contains a JSON payload. The attribute (and its paired value) specified here are available for use in the condition expressions used by detectors.\n\nSyntax: <field-name>.<field-name>...",
      "command_examples": "Examples\n\nTo get information about an input\n\nThe following describe-input example displays details for the specified input.\n\naws iotevents describe-input \\\n    --input-name PressureInput\n\n\nOutput:\n\n{\n    \"input\": {\n        \"inputConfiguration\": {\n            \"status\": \"ACTIVE\",\n            \"inputArn\": \"arn:aws:iotevents:us-west-2:123456789012:input/PressureInput\",\n            \"lastUpdateTime\": 1560795312.542,\n            \"creationTime\": 1560795312.542,\n            \"inputName\": \"PressureInput\",\n            \"inputDescription\": \"Pressure readings from a motor\"\n        },\n        \"inputDefinition\": {\n            \"attributes\": [\n                {\n                    \"jsonPath\": \"sensorData.pressure\"\n                },\n                {\n                    \"jsonPath\": \"motorid\"\n                }\n            ]\n        }\n    }\n}\n\n\nFor more information, see DescribeInput in the AWS IoT Events API Reference."
    },
    {
      "command_name": "describe-logging-options",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/describe-logging-options.html",
      "command_description": "Description\n\nRetrieves the current settings of the AWS IoT Events logging options.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-logging-options\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nloggingOptions -> (structure)\n\nThe current settings of the AWS IoT Events logging options.\n\nroleArn -> (string)\n\nThe ARN of the role that grants permission to AWS IoT Events to perform logging.\n\nlevel -> (string)\n\nThe logging level.\n\nenabled -> (boolean)\n\nIf TRUE, logging is enabled for AWS IoT Events.\n\ndetectorDebugOptions -> (list)\n\nInformation that identifies those detector models and their detectors (instances) for which the logging level is given.\n\n(structure)\n\nThe detector model and the specific detectors (instances) for which the logging level is given.\n\ndetectorModelName -> (string)\n\nThe name of the detector model.\n\nkeyValue -> (string)\n\nThe value of the input attribute key used to create the detector (the instance of the detector model).",
      "command_examples": "Examples\n\nTo get information about logging settings\n\nThe following describe-logging-options example retrieves the current settings of the AWS IoT Events logging options.\n\naws iotevents describe-logging-options\n\n\nOutput:\n\n{\n    \"loggingOptions\": {\n        \"roleArn\": \"arn:aws:iam::123456789012:role/IoTEventsRole\",\n        \"enabled\": false,\n        \"level\": \"ERROR\"\n    }\n}\n\n\nFor more information, see DescribeLoggingOptions in the AWS IoT Events API Reference."
    },
    {
      "command_name": "get-detector-model-analysis-results",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/get-detector-model-analysis-results.html",
      "command_description": "Description\n\nRetrieves one or more analysis results of the detector model.\n\nNote\n\nAfter AWS IoT Events starts analyzing your detector model, you have up to 24 hours to retrieve the analysis results.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-detector-model-analysis-results\n--analysis-id <value>\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--analysis-id <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--analysis-id (string)\n\nThe ID of the analysis result that you want to retrieve.\n\n--next-token (string)\n\nThe token that you can use to return the next set of results.\n\n--max-results (integer)\n\nThe maximum number of results to be returned per request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nanalysisResults -> (list)\n\nContains information about one or more analysis results.\n\n(structure)\n\nContains the result of the analysis.\n\ntype -> (string)\n\nThe type of the analysis result. Analyses fall into the following types based on the validators used to generate the analysis result:\n\nsupported-actions - You must specify AWS IoT Events supported actions that work with other AWS services in a supported AWS Region.\n\nservice-limits - Resources or API operations can’t exceed service quotas (also known as limits). Update your detector model or request a quota increase.\n\nstructure - The detector model must follow a structure that AWS IoT Events supports.\n\nexpression-syntax - Your expression must follow the required syntax.\n\ndata-type - Data types referenced in the detector model must be compatible.\n\nreferenced-data - You must define the data referenced in your detector model before you can use the data.\n\nreferenced-resource - Resources that the detector model uses must be available.\n\nFor more information, see Running detector model analyses in the AWS IoT Events Developer Guide .\n\nlevel -> (string)\n\nThe severity level of the analysis result. Based on the severity level, analysis results fall into three general categories:\n\nINFO - An information result tells you about a significant field in your detector model. This type of result usually doesn’t require immediate action.\n\nWARNING - A warning result draws special attention to fields that might cause issues for your detector model. We recommend that you review warnings and take necessary actions before you use your detector model in production environments. Otherwise, the detector model might not work as expected.\n\nERROR - An error result notifies you about a problem found in your detector model. You must fix all errors before you can publish your detector model.\n\nmessage -> (string)\n\nContains additional information about the analysis result.\n\nlocations -> (list)\n\nContains one or more locations that you can use to locate the fields in your detector model that the analysis result references.\n\n(structure)\n\nContains information that you can use to locate the field in your detector model that the analysis result references.\n\npath -> (string)\n\nA JsonPath expression that identifies the error field in your detector model.\n\nnextToken -> (string)\n\nThe token that you can use to return the next set of results, or null if there are no more results."
    },
    {
      "command_name": "list-alarm-model-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/list-alarm-model-versions.html",
      "command_description": "Description\n\nLists all the versions of an alarm model. The operation returns only the metadata associated with each alarm model version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-alarm-model-versions\n--alarm-model-name <value>\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--alarm-model-name <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--alarm-model-name (string)\n\nThe name of the alarm model.\n\n--next-token (string)\n\nThe token that you can use to return the next set of results.\n\n--max-results (integer)\n\nThe maximum number of results to be returned per request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nalarmModelVersionSummaries -> (list)\n\nA list that summarizes each alarm model version.\n\n(structure)\n\nContains a summary of an alarm model version.\n\nalarmModelName -> (string)\n\nThe name of the alarm model.\n\nalarmModelArn -> (string)\n\nThe ARN of the alarm model. For more information, see Amazon Resource Names (ARNs) in the AWS General Reference .\n\nalarmModelVersion -> (string)\n\nThe version of the alarm model.\n\nroleArn -> (string)\n\nThe ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see Amazon Resource Names (ARNs) in the AWS General Reference .\n\ncreationTime -> (timestamp)\n\nThe time the alarm model was created, in the Unix epoch format.\n\nlastUpdateTime -> (timestamp)\n\nThe time the alarm model was last updated, in the Unix epoch format.\n\nstatus -> (string)\n\nThe status of the alarm model. The status can be one of the following values:\n\nACTIVE - The alarm model is active and it’s ready to evaluate data.\n\nACTIVATING - AWS IoT Events is activating your alarm model. Activating an alarm model can take up to a few minutes.\n\nINACTIVE - The alarm model is inactive, so it isn’t ready to evaluate data. Check your alarm model information and update the alarm model.\n\nFAILED - You couldn’t create or update the alarm model. Check your alarm model information and try again.\n\nstatusMessage -> (string)\n\nContains information about the status of the alarm model version.\n\nnextToken -> (string)\n\nThe token that you can use to return the next set of results, or null if there are no more results."
    },
    {
      "command_name": "list-alarm-models",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/list-alarm-models.html",
      "command_description": "Description\n\nLists the alarm models that you created. The operation returns only the metadata associated with each alarm model.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-alarm-models\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nThe token that you can use to return the next set of results.\n\n--max-results (integer)\n\nThe maximum number of results to be returned per request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nalarmModelSummaries -> (list)\n\nA list that summarizes each alarm model.\n\n(structure)\n\nContains a summary of an alarm model.\n\ncreationTime -> (timestamp)\n\nThe time the alarm model was created, in the Unix epoch format.\n\nalarmModelDescription -> (string)\n\nThe description of the alarm model.\n\nalarmModelName -> (string)\n\nThe name of the alarm model.\n\nnextToken -> (string)\n\nThe token that you can use to return the next set of results, or null if there are no more results."
    },
    {
      "command_name": "list-detector-model-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/list-detector-model-versions.html",
      "command_description": "Description\n\nLists all the versions of a detector model. Only the metadata associated with each detector model version is returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-detector-model-versions\n--detector-model-name <value>\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--detector-model-name <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--detector-model-name (string)\n\nThe name of the detector model whose versions are returned.\n\n--next-token (string)\n\nThe token that you can use to return the next set of results.\n\n--max-results (integer)\n\nThe maximum number of results to be returned per request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndetectorModelVersionSummaries -> (list)\n\nSummary information about the detector model versions.\n\n(structure)\n\nInformation about the detector model version.\n\ndetectorModelName -> (string)\n\nThe name of the detector model.\n\ndetectorModelVersion -> (string)\n\nThe ID of the detector model version.\n\ndetectorModelArn -> (string)\n\nThe ARN of the detector model version.\n\nroleArn -> (string)\n\nThe ARN of the role that grants the detector model permission to perform its tasks.\n\ncreationTime -> (timestamp)\n\nThe time the detector model version was created.\n\nlastUpdateTime -> (timestamp)\n\nThe last time the detector model version was updated.\n\nstatus -> (string)\n\nThe status of the detector model version.\n\nevaluationMethod -> (string)\n\nInformation about the order in which events are evaluated and how actions are executed.\n\nnextToken -> (string)\n\nThe token that you can use to return the next set of results, or null if there are no more results.",
      "command_examples": "Examples\n\nTo get information about versions of a detector model\n\nThe following list-detector-model-versions example Lists all the versions of a detector model. Only the metadata associated with each detector model version is returned.\n\naws iotevents list-detector-model-versions \\\n    --detector-model-name motorDetectorModel\n\n\nOutput:\n\n{\n    \"detectorModelVersionSummaries\": [\n        {\n            \"status\": \"ACTIVE\",\n            \"lastUpdateTime\": 1560796816.077,\n            \"roleArn\": \"arn:aws:iam::123456789012:role/IoTEventsRole\",\n            \"creationTime\": 1560796816.077,\n            \"detectorModelArn\": \"arn:aws:iotevents:us-west-2:123456789012:detectorModel/motorDetectorModel\",\n            \"detectorModelName\": \"motorDetectorModel\",\n            \"detectorModelVersion\": \"1\"\n        }\n    ]\n}\n\n\nFor more information, see ListDetectorModelVersions in the AWS IoT Events API Reference."
    },
    {
      "command_name": "list-detector-models",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/list-detector-models.html",
      "command_description": "Description\n\nLists the detector models you have created. Only the metadata associated with each detector model is returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-detector-models\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nThe token that you can use to return the next set of results.\n\n--max-results (integer)\n\nThe maximum number of results to be returned per request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndetectorModelSummaries -> (list)\n\nSummary information about the detector models.\n\n(structure)\n\nInformation about the detector model.\n\ndetectorModelName -> (string)\n\nThe name of the detector model.\n\ndetectorModelDescription -> (string)\n\nA brief description of the detector model.\n\ncreationTime -> (timestamp)\n\nThe time the detector model was created.\n\nnextToken -> (string)\n\nThe token that you can use to return the next set of results, or null if there are no more results.",
      "command_examples": "Examples\n\nTo get a list of your detector models\n\nThe following list-detector-models example Lists the detector models you have created. Only the metadata associated with each detector model is returned.\n\naws iotevents list-detector-models\n\n\nOutput:\n\n{\n    \"detectorModelSummaries\": [\n        {\n            \"detectorModelName\": \"motorDetectorModel\",\n            \"creationTime\": 1552072424.212\n            \"detectorModelDescription\": \"Detect overpressure in a motor.\"\n        }\n    ]\n}\n\n\nFor more information, see ListDetectorModels in the AWS IoT Events API Reference."
    },
    {
      "command_name": "list-input-routings",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/list-input-routings.html",
      "command_description": "Description\n\nLists one or more input routings.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-input-routings\n--input-identifier <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-identifier <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-identifier (structure)\n\nThe identifer of the routed input.\n\niotEventsInputIdentifier -> (structure)\n\nThe identifier of the input routed to AWS IoT Events.\n\ninputName -> (string)\n\nThe name of the input routed to AWS IoT Events.\n\niotSiteWiseInputIdentifier -> (structure)\n\nThe identifer of the input routed from AWS IoT SiteWise.\n\niotSiteWiseAssetModelPropertyIdentifier -> (structure)\n\nThe identifier of the AWS IoT SiteWise asset model property.\n\nassetModelId -> (string)\n\nThe ID of the AWS IoT SiteWise asset model.\n\npropertyId -> (string)\n\nThe ID of the AWS IoT SiteWise asset property.\n\nShorthand Syntax:\n\niotEventsInputIdentifier={inputName=string},iotSiteWiseInputIdentifier={iotSiteWiseAssetModelPropertyIdentifier={assetModelId=string,propertyId=string}}\n\n\nJSON Syntax:\n\n{\n  \"iotEventsInputIdentifier\": {\n    \"inputName\": \"string\"\n  },\n  \"iotSiteWiseInputIdentifier\": {\n    \"iotSiteWiseAssetModelPropertyIdentifier\": {\n      \"assetModelId\": \"string\",\n      \"propertyId\": \"string\"\n    }\n  }\n}\n\n\n--max-results (integer)\n\nThe maximum number of results to be returned per request.\n\n--next-token (string)\n\nThe token that you can use to return the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nroutedResources -> (list)\n\nSummary information about the routed resources.\n\n(structure)\n\nContains information about the routed resource.\n\nname -> (string)\n\nThe name of the routed resource.\n\narn -> (string)\n\nThe ARN of the routed resource. For more information, see Amazon Resource Names (ARNs) in the AWS General Reference .\n\nnextToken -> (string)\n\nThe token that you can use to return the next set of results, or null if there are no more results."
    },
    {
      "command_name": "list-inputs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/list-inputs.html",
      "command_description": "Description\n\nLists the inputs you have created.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-inputs\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nThe token that you can use to return the next set of results.\n\n--max-results (integer)\n\nThe maximum number of results to be returned per request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninputSummaries -> (list)\n\nSummary information about the inputs.\n\n(structure)\n\nInformation about the input.\n\ninputName -> (string)\n\nThe name of the input.\n\ninputDescription -> (string)\n\nA brief description of the input.\n\ninputArn -> (string)\n\nThe ARN of the input.\n\ncreationTime -> (timestamp)\n\nThe time the input was created.\n\nlastUpdateTime -> (timestamp)\n\nThe last time the input was updated.\n\nstatus -> (string)\n\nThe status of the input.\n\nnextToken -> (string)\n\nThe token that you can use to return the next set of results, or null if there are no more results.",
      "command_examples": "Examples\n\nTo list inputs\n\nThe following list-inputs example lists the inputs you have created in your account.\n\naws iotevents list-inputs\n\n\nThis command produces no output. Output:\n\n{\n    {\n        \"status\": \"ACTIVE\",\n        \"inputArn\": \"arn:aws:iotevents:us-west-2:123456789012:input/PressureInput\",\n        \"lastUpdateTime\": 1551742986.768,\n        \"creationTime\": 1551742986.768,\n        \"inputName\": \"PressureInput\",\n        \"inputDescription\": \"Pressure readings from a motor\"\n    }\n}\n\n\nFor more information, see ListInputs in the AWS IoT Events API Reference."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/list-tags-for-resource.html",
      "command_description": "Description\n\nLists the tags (metadata) you have assigned to the resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (list)\n\nThe list of tags assigned to the resource.\n\n(structure)\n\nMetadata that can be used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.",
      "command_examples": "Examples\n\nTo list tags assigned to a resource.\n\nThe following list-tags-for-resource example lists the tag key names and values you have assigned to the resource.\n\naws iotevents list-tags-for-resource \\\n    --resource-arn \"arn:aws:iotevents:us-west-2:123456789012:input/PressureInput\"\n\n\nOutput:\n\n{\n    \"tags\": [\n        {\n            \"value\": \"motor\",\n            \"key\": \"deviceType\"\n        }\n    ]\n}\n\n\nFor more information, see ListTagsForResource in the AWS IoT Events API Reference."
    },
    {
      "command_name": "put-logging-options",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/put-logging-options.html",
      "command_description": "Description\n\nSets or updates the AWS IoT Events logging options.\n\nIf you update the value of any loggingOptions field, it takes up to one minute for the change to take effect. If you change the policy attached to the role you specified in the roleArn field (for example, to correct an invalid policy), it takes up to five minutes for that change to take effect.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-logging-options\n--logging-options <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--logging-options <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--logging-options (structure)\n\nThe new values of the AWS IoT Events logging options.\n\nroleArn -> (string)\n\nThe ARN of the role that grants permission to AWS IoT Events to perform logging.\n\nlevel -> (string)\n\nThe logging level.\n\nenabled -> (boolean)\n\nIf TRUE, logging is enabled for AWS IoT Events.\n\ndetectorDebugOptions -> (list)\n\nInformation that identifies those detector models and their detectors (instances) for which the logging level is given.\n\n(structure)\n\nThe detector model and the specific detectors (instances) for which the logging level is given.\n\ndetectorModelName -> (string)\n\nThe name of the detector model.\n\nkeyValue -> (string)\n\nThe value of the input attribute key used to create the detector (the instance of the detector model).\n\nShorthand Syntax:\n\nroleArn=string,level=string,enabled=boolean,detectorDebugOptions=[{detectorModelName=string,keyValue=string},{detectorModelName=string,keyValue=string}]\n\n\nJSON Syntax:\n\n{\n  \"roleArn\": \"string\",\n  \"level\": \"ERROR\"|\"INFO\"|\"DEBUG\",\n  \"enabled\": true|false,\n  \"detectorDebugOptions\": [\n    {\n      \"detectorModelName\": \"string\",\n      \"keyValue\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo set logging options\n\nThe following put-logging-options example sets or updates the AWS IoT Events logging options. If you update the value of any loggingOptions` field, it can take up to one minute for the change to take effect. Also, if you change the policy attached to the role you specified in the ``roleArn field (for example, to correct an invalid policy) it can take up to five minutes for that change to take effect.\n\naws iotevents put-logging-options \\\n    --cli-input-json file://logging-options.json\n\n\nContents of logging-options.json:\n\n{\n    \"loggingOptions\": {\n        \"roleArn\": \"arn:aws:iam::123456789012:role/IoTEventsRole\",\n        \"level\": \"DEBUG\",\n        \"enabled\": true,\n        \"detectorDebugOptions\": [\n            {\n                \"detectorModelName\": \"motorDetectorModel\",\n                \"keyValue\": \"Fulton-A32\"\n            }\n        ]\n    }\n}\n\n\nThis command produces no output.\n\nFor more information, see PutLoggingOptions in the AWS IoT Events API Reference."
    },
    {
      "command_name": "start-detector-model-analysis",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/start-detector-model-analysis.html",
      "command_description": "Description\n\nPerforms an analysis of your detector model. For more information, see Troubleshooting a detector model in the AWS IoT Events Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-detector-model-analysis\n--detector-model-definition <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--detector-model-definition <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--detector-model-definition (structure)\n\nInformation that defines how a detector operates.\n\nstates -> (list)\n\nInformation about the states of the detector.\n\n(structure)\n\nInformation that defines a state of a detector.\n\nstateName -> (string)\n\nThe name of the state.\n\nonInput -> (structure)\n\nWhen an input is received and the condition is TRUE, perform the specified actions .\n\nevents -> (list)\n\nSpecifies the actions performed when the condition evaluates to TRUE.\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\ntransitionEvents -> (list)\n\nSpecifies the actions performed, and the next state entered, when a condition evaluates to TRUE.\n\n(structure)\n\nSpecifies the actions performed and the next state entered when a condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the transition event.\n\ncondition -> (string)\n\nRequired. A Boolean expression that when TRUE causes the actions to be performed and the nextState to be entered.\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nnextState -> (string)\n\nThe next state to enter.\n\nonEnter -> (structure)\n\nWhen entering this state, perform these actions if the condition is TRUE.\n\nevents -> (list)\n\nSpecifies the actions that are performed when the state is entered and the condition is TRUE .\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nonExit -> (structure)\n\nWhen exiting this state, perform these actions if the specified condition is TRUE .\n\nevents -> (list)\n\nSpecifies the actions that are performed when the state is exited and the condition is TRUE .\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\ninitialStateName -> (string)\n\nThe state that is entered at the creation of each detector (instance).\n\nJSON Syntax:\n\n{\n  \"states\": [\n    {\n      \"stateName\": \"string\",\n      \"onInput\": {\n        \"events\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ]\n          }\n          ...\n        ],\n        \"transitionEvents\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ],\n            \"nextState\": \"string\"\n          }\n          ...\n        ]\n      },\n      \"onEnter\": {\n        \"events\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ]\n          }\n          ...\n        ]\n      },\n      \"onExit\": {\n        \"events\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ]\n          }\n          ...\n        ]\n      }\n    }\n    ...\n  ],\n  \"initialStateName\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nanalysisId -> (string)\n\nThe ID that you can use to retrieve the analysis result."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/tag-resource.html",
      "command_description": "Description\n\nAdds to or modifies the tags of the given resource. Tags are metadata that can be used to manage a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource.\n\n--tags (list)\n\nThe new or modified tags for the resource.\n\n(structure)\n\nMetadata that can be used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add tags to a resource\n\nThe following tag-resource example adds or modifies (if key deviceType already exists) the tag attached the specified resource.\n\naws iotevents tag-resource \\\n    --cli-input-json file://pressureInput.tag.json\n\n\nContents of pressureInput.tag.json:\n\n{\n    \"resourceArn\": \"arn:aws:iotevents:us-west-2:123456789012:input/PressureInput\",\n    \"tags\": [\n        {\n            \"key\": \"deviceType\",\n            \"value\": \"motor\"\n        }\n    ]\n}\n\n\nThis command produces no output.\n\nFor more information, see TagResource in the AWS IoT Events API Reference."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/untag-resource.html",
      "command_description": "Description\n\nRemoves the given tags (metadata) from the resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource.\n\n--tag-keys (list)\n\nA list of the keys of the tags to be removed from the resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from a resource\n\nThe following untag-resource example removes the tag with the specified key name from the specified resource.\n\naws iotevents untag-resource \\\n    --resource-arn arn:aws:iotevents:us-west-2:123456789012:input/PressureInput \\\n    --tagkeys deviceType\n\n\nThis command produces no output.\n\nFor more information, see UntagResource in the AWS IoT Events API Reference."
    },
    {
      "command_name": "update-alarm-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/update-alarm-model.html",
      "command_description": "Description\n\nUpdates an alarm model. Any alarms that were created based on the previous version are deleted and then created again as new data arrives.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-alarm-model\n--alarm-model-name <value>\n[--alarm-model-description <value>]\n--role-arn <value>\n[--severity <value>]\n--alarm-rule <value>\n[--alarm-notification <value>]\n[--alarm-event-actions <value>]\n[--alarm-capabilities <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--alarm-model-name <value>",
        "[--alarm-model-description <value>]",
        "--role-arn <value>",
        "[--severity <value>]",
        "--alarm-rule <value>",
        "[--alarm-notification <value>]",
        "[--alarm-event-actions <value>]",
        "[--alarm-capabilities <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--alarm-model-name (string)\n\nThe name of the alarm model.\n\n--alarm-model-description (string)\n\nThe description of the alarm model.\n\n--role-arn (string)\n\nThe ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see Amazon Resource Names (ARNs) in the AWS General Reference .\n\n--severity (integer)\n\nA non-negative integer that reflects the severity level of the alarm.\n\n--alarm-rule (structure)\n\nDefines when your alarm is invoked.\n\nsimpleRule -> (structure)\n\nA rule that compares an input property value to a threshold value with a comparison operator.\n\ninputProperty -> (string)\n\nThe value on the left side of the comparison operator. You can specify an AWS IoT Events input attribute as an input property.\n\ncomparisonOperator -> (string)\n\nThe comparison operator.\n\nthreshold -> (string)\n\nThe value on the right side of the comparison operator. You can enter a number or specify an AWS IoT Events input attribute.\n\nShorthand Syntax:\n\nsimpleRule={inputProperty=string,comparisonOperator=string,threshold=string}\n\n\nJSON Syntax:\n\n{\n  \"simpleRule\": {\n    \"inputProperty\": \"string\",\n    \"comparisonOperator\": \"GREATER\"|\"GREATER_OR_EQUAL\"|\"LESS\"|\"LESS_OR_EQUAL\"|\"EQUAL\"|\"NOT_EQUAL\",\n    \"threshold\": \"string\"\n  }\n}\n\n\n--alarm-notification (structure)\n\nContains information about one or more notification actions.\n\nnotificationActions -> (list)\n\nContains the notification settings of an alarm model. The settings apply to all alarms that were created based on this alarm model.\n\n(structure)\n\nContains the notification settings of an alarm model. The settings apply to all alarms that were created based on this alarm model.\n\naction -> (structure)\n\nSpecifies an AWS Lambda function to manage alarm notifications. You can create one or use the AWS Lambda function provided by AWS IoT Events .\n\nlambdaAction -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsmsConfigurations -> (list)\n\nContains the configuration information of SMS notifications.\n\n(structure)\n\nContains the configuration information of SMS notifications.\n\nsenderId -> (string)\n\nThe sender ID.\n\nadditionalMessage -> (string)\n\nThe message that you want to send. The message can be up to 200 characters.\n\nrecipients -> (list)\n\nSpecifies one or more recipients who receive the message.\n\nWarning\n\nYou must add the users that receive SMS messages to your AWS SSO store .\n\n(structure)\n\nThe information that identifies the recipient.\n\nssoIdentity -> (structure)\n\nThe AWS Single Sign-On (AWS SSO) authentication information.\n\nidentityStoreId -> (string)\n\nThe ID of the AWS SSO identity store.\n\nuserId -> (string)\n\nThe user ID.\n\nemailConfigurations -> (list)\n\nContains the configuration information of email notifications.\n\n(structure)\n\nContains the configuration information of email notifications.\n\nfrom -> (string)\n\nThe email address that sends emails.\n\nWarning\n\nIf you use the AWS IoT Events managed AWS Lambda function to manage your emails, you must verify the email address that sends emails in Amazon SES .\n\ncontent -> (structure)\n\nContains the subject and message of an email.\n\nsubject -> (string)\n\nThe subject of the email.\n\nadditionalMessage -> (string)\n\nThe message that you want to send. The message can be up to 200 characters.\n\nrecipients -> (structure)\n\nContains the information of one or more recipients who receive the emails.\n\nWarning\n\nYou must add the users that receive emails to your AWS SSO store .\n\nto -> (list)\n\nSpecifies one or more recipients who receive the email.\n\n(structure)\n\nThe information that identifies the recipient.\n\nssoIdentity -> (structure)\n\nThe AWS Single Sign-On (AWS SSO) authentication information.\n\nidentityStoreId -> (string)\n\nThe ID of the AWS SSO identity store.\n\nuserId -> (string)\n\nThe user ID.\n\nJSON Syntax:\n\n{\n  \"notificationActions\": [\n    {\n      \"action\": {\n        \"lambdaAction\": {\n          \"functionArn\": \"string\",\n          \"payload\": {\n            \"contentExpression\": \"string\",\n            \"type\": \"STRING\"|\"JSON\"\n          }\n        }\n      },\n      \"smsConfigurations\": [\n        {\n          \"senderId\": \"string\",\n          \"additionalMessage\": \"string\",\n          \"recipients\": [\n            {\n              \"ssoIdentity\": {\n                \"identityStoreId\": \"string\",\n                \"userId\": \"string\"\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"emailConfigurations\": [\n        {\n          \"from\": \"string\",\n          \"content\": {\n            \"subject\": \"string\",\n            \"additionalMessage\": \"string\"\n          },\n          \"recipients\": {\n            \"to\": [\n              {\n                \"ssoIdentity\": {\n                  \"identityStoreId\": \"string\",\n                  \"userId\": \"string\"\n                }\n              }\n              ...\n            ]\n          }\n        }\n        ...\n      ]\n    }\n    ...\n  ]\n}\n\n\n--alarm-event-actions (structure)\n\nContains information about one or more alarm actions.\n\nalarmActions -> (list)\n\nSpecifies one or more supported actions to receive notifications when the alarm state changes.\n\n(structure)\n\nSpecifies one of the following actions to receive notifications when the alarm state changes.\n\nsns -> (structure)\n\nInformation required to publish the Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nInformation required to publish the MQTT message through the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends an AWS IoT Events input, passing in information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nDefines an action to write to the Amazon DynamoDB table that you created. The standard action payload contains all the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify.\n\nYou must use expressions for all parameters in DynamoDBAction . The expressions accept literals, operators, functions, references, and substitution templates.\n\nExamples\n\nFor literal values, the expressions must contain single quotes. For example, the value for the hashKeyType parameter can be 'STRING' .\n\nFor references, you must specify either variables or input values. For example, the value for the hashKeyField parameter can be $input.GreenhouseInput.name .\n\nFor a substitution template, you must use ${} , and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the hashKeyValue parameter uses a substitution template. '${$input.GreenhouseInput.temperature * 6 / 5 + 32} in Fahrenheit'\n\nFor a string concatenation, you must use + . A string concatenation can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the tableName parameter uses a string concatenation. 'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date\n\nFor more information, see Expressions in the AWS IoT Events Developer Guide .\n\nIf the defined payload type is a string, DynamoDBAction writes non-JSON data to the DynamoDB table as binary data. The DynamoDB console displays the data as Base64-encoded text. The value for the payloadField parameter is <payload-field>_raw .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nDefines an action to write to the Amazon DynamoDB table that you created. The default action payload contains all the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify.\n\nYou must use expressions for all parameters in DynamoDBv2Action . The expressions accept literals, operators, functions, references, and substitution templates.\n\nExamples\n\nFor literal values, the expressions must contain single quotes. For example, the value for the tableName parameter can be 'GreenhouseTemperatureTable' .\n\nFor references, you must specify either variables or input values. For example, the value for the tableName parameter can be $variable.ddbtableName .\n\nFor a substitution template, you must use ${} , and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the contentExpression parameter in Payload uses a substitution template. '{\\\"sensorID\\\": \\\"${$input.GreenhouseInput.sensor_id}\\\", \\\"temperature\\\": \\\"${$input.GreenhouseInput.temperature * 9 / 5 + 32}\\\"}'\n\nFor a string concatenation, you must use + . A string concatenation can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the tableName parameter uses a string concatenation. 'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date\n\nFor more information, see Expressions in the AWS IoT Events Developer Guide .\n\nThe value for the type parameter in Payload must be JSON .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.\n\nYou must use expressions for all parameters in IotSiteWiseAction . The expressions accept literals, operators, functions, references, and substitutions templates.\n\nExamples\n\nFor literal values, the expressions must contain single quotes. For example, the value for the propertyAlias parameter can be '/company/windfarm/3/turbine/7/temperature' .\n\nFor references, you must specify either variables or input values. For example, the value for the assetId parameter can be $input.TurbineInput.assetId1 .\n\nFor a substitution template, you must use ${} , and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. In the following example, the value for the propertyAlias parameter uses a substitution template. 'company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/ ${$input.TemperatureInput.sensorData.turbineID}/temperature'\n\nYou must specify either propertyAlias or both assetId and propertyId to identify the target asset property in AWS IoT SiteWise.\n\nFor more information, see Expressions in the AWS IoT Events Developer Guide .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nJSON Syntax:\n\n{\n  \"alarmActions\": [\n    {\n      \"sns\": {\n        \"targetArn\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"iotTopicPublish\": {\n        \"mqttTopic\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"lambda\": {\n        \"functionArn\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"iotEvents\": {\n        \"inputName\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"sqs\": {\n        \"queueUrl\": \"string\",\n        \"useBase64\": true|false,\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"firehose\": {\n        \"deliveryStreamName\": \"string\",\n        \"separator\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"dynamoDB\": {\n        \"hashKeyType\": \"string\",\n        \"hashKeyField\": \"string\",\n        \"hashKeyValue\": \"string\",\n        \"rangeKeyType\": \"string\",\n        \"rangeKeyField\": \"string\",\n        \"rangeKeyValue\": \"string\",\n        \"operation\": \"string\",\n        \"payloadField\": \"string\",\n        \"tableName\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"dynamoDBv2\": {\n        \"tableName\": \"string\",\n        \"payload\": {\n          \"contentExpression\": \"string\",\n          \"type\": \"STRING\"|\"JSON\"\n        }\n      },\n      \"iotSiteWise\": {\n        \"entryId\": \"string\",\n        \"assetId\": \"string\",\n        \"propertyId\": \"string\",\n        \"propertyAlias\": \"string\",\n        \"propertyValue\": {\n          \"value\": {\n            \"stringValue\": \"string\",\n            \"integerValue\": \"string\",\n            \"doubleValue\": \"string\",\n            \"booleanValue\": \"string\"\n          },\n          \"timestamp\": {\n            \"timeInSeconds\": \"string\",\n            \"offsetInNanos\": \"string\"\n          },\n          \"quality\": \"string\"\n        }\n      }\n    }\n    ...\n  ]\n}\n\n\n--alarm-capabilities (structure)\n\nContains the configuration information of alarm state changes.\n\ninitializationConfiguration -> (structure)\n\nSpecifies the default alarm state. The configuration applies to all alarms that were created based on this alarm model.\n\ndisabledOnInitialization -> (boolean)\n\nThe value must be TRUE or FALSE . If FALSE , all alarm instances created based on the alarm model are activated. The default value is TRUE .\n\nacknowledgeFlow -> (structure)\n\nSpecifies whether to get notified for alarm state changes.\n\nenabled -> (boolean)\n\nThe value must be TRUE or FALSE . If TRUE , you receive a notification when the alarm state changes. You must choose to acknowledge the notification before the alarm state can return to NORMAL . If FALSE , you won’t receive notifications. The alarm automatically changes to the NORMAL state when the input property value returns to the specified range.\n\nShorthand Syntax:\n\ninitializationConfiguration={disabledOnInitialization=boolean},acknowledgeFlow={enabled=boolean}\n\n\nJSON Syntax:\n\n{\n  \"initializationConfiguration\": {\n    \"disabledOnInitialization\": true|false\n  },\n  \"acknowledgeFlow\": {\n    \"enabled\": true|false\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncreationTime -> (timestamp)\n\nThe time the alarm model was created, in the Unix epoch format.\n\nalarmModelArn -> (string)\n\nThe ARN of the alarm model. For more information, see Amazon Resource Names (ARNs) in the AWS General Reference .\n\nalarmModelVersion -> (string)\n\nThe version of the alarm model.\n\nlastUpdateTime -> (timestamp)\n\nThe time the alarm model was last updated, in the Unix epoch format.\n\nstatus -> (string)\n\nThe status of the alarm model. The status can be one of the following values:\n\nACTIVE - The alarm model is active and it’s ready to evaluate data.\n\nACTIVATING - AWS IoT Events is activating your alarm model. Activating an alarm model can take up to a few minutes.\n\nINACTIVE - The alarm model is inactive, so it isn’t ready to evaluate data. Check your alarm model information and update the alarm model.\n\nFAILED - You couldn’t create or update the alarm model. Check your alarm model information and try again."
    },
    {
      "command_name": "update-detector-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/update-detector-model.html",
      "command_description": "Description\n\nUpdates a detector model. Detectors (instances) spawned by the previous version are deleted and then re-created as new inputs arrive.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-detector-model\n--detector-model-name <value>\n--detector-model-definition <value>\n[--detector-model-description <value>]\n--role-arn <value>\n[--evaluation-method <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--detector-model-name <value>",
        "--detector-model-definition <value>",
        "[--detector-model-description <value>]",
        "--role-arn <value>",
        "[--evaluation-method <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--detector-model-name (string)\n\nThe name of the detector model that is updated.\n\n--detector-model-definition (structure)\n\nInformation that defines how a detector operates.\n\nstates -> (list)\n\nInformation about the states of the detector.\n\n(structure)\n\nInformation that defines a state of a detector.\n\nstateName -> (string)\n\nThe name of the state.\n\nonInput -> (structure)\n\nWhen an input is received and the condition is TRUE, perform the specified actions .\n\nevents -> (list)\n\nSpecifies the actions performed when the condition evaluates to TRUE.\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\ntransitionEvents -> (list)\n\nSpecifies the actions performed, and the next state entered, when a condition evaluates to TRUE.\n\n(structure)\n\nSpecifies the actions performed and the next state entered when a condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the transition event.\n\ncondition -> (string)\n\nRequired. A Boolean expression that when TRUE causes the actions to be performed and the nextState to be entered.\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nnextState -> (string)\n\nThe next state to enter.\n\nonEnter -> (structure)\n\nWhen entering this state, perform these actions if the condition is TRUE.\n\nevents -> (list)\n\nSpecifies the actions that are performed when the state is entered and the condition is TRUE .\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\nonExit -> (structure)\n\nWhen exiting this state, perform these actions if the specified condition is TRUE .\n\nevents -> (list)\n\nSpecifies the actions that are performed when the state is exited and the condition is TRUE .\n\n(structure)\n\nSpecifies the actions to be performed when the condition evaluates to TRUE.\n\neventName -> (string)\n\nThe name of the event.\n\ncondition -> (string)\n\nOptional. The Boolean expression that, when TRUE, causes the actions to be performed. If not present, the actions are performed (=TRUE). If the expression result is not a Boolean value, the actions are not performed (=FALSE).\n\nactions -> (list)\n\nThe actions to be performed.\n\n(structure)\n\nAn action to be performed when the condition is TRUE.\n\nsetVariable -> (structure)\n\nSets a variable to a specified value.\n\nvariableName -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\nsns -> (structure)\n\nSends an Amazon SNS message.\n\ntargetArn -> (string)\n\nThe ARN of the Amazon SNS target where the message is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message as an Amazon SNS push notification.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotTopicPublish -> (structure)\n\nPublishes an MQTT message with the given topic to the AWS IoT message broker.\n\nmqttTopic -> (string)\n\nThe MQTT topic of the message. You can use a string expression that includes variables ($variable.<variable-name> ) and input values ($input.<input-name>.<path-to-datum> ) as the topic string.\n\npayload -> (structure)\n\nYou can configure the action payload when you publish a message to an AWS IoT Core topic.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsetTimer -> (structure)\n\nInformation needed to set the timer.\n\ntimerName -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe number of seconds until the timer expires. The minimum value is 60 seconds to ensure accuracy. The maximum value is 31622400 seconds.\n\ndurationExpression -> (string)\n\nThe duration of the timer, in seconds. You can use a string expression that includes numbers, variables ($variable.<variable-name> ), and input values ($input.<input-name>.<path-to-datum> ) as the duration. The range of the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds. The evaluated result of the duration is rounded down to the nearest whole number.\n\nclearTimer -> (structure)\n\nInformation needed to clear the timer.\n\ntimerName -> (string)\n\nThe name of the timer to clear.\n\nresetTimer -> (structure)\n\nInformation needed to reset the timer.\n\ntimerName -> (string)\n\nThe name of the timer to reset.\n\nlambda -> (structure)\n\nCalls a Lambda function, passing in information about the detector model instance and the event that triggered the action.\n\nfunctionArn -> (string)\n\nThe ARN of the Lambda function that is executed.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to a Lambda function.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotEvents -> (structure)\n\nSends AWS IoT Events input, which passes information about the detector model instance and the event that triggered the action.\n\ninputName -> (string)\n\nThe name of the AWS IoT Events input where the data is sent.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an AWS IoT Events input.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nsqs -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.\n\nqueueUrl -> (string)\n\nThe URL of the SQS queue where the data is written.\n\nuseBase64 -> (boolean)\n\nSet this to TRUE if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to FALSE.\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon SQS queue.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\nfirehose -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\n\ndeliveryStreamName -> (string)\n\nThe name of the Kinesis Data Firehose delivery stream where the data is written.\n\nseparator -> (string)\n\nA character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: ‘n’ (newline), ‘t’ (tab), ‘rn’ (Windows newline), ‘,’ (comma).\n\npayload -> (structure)\n\nYou can configure the action payload when you send a message to an Amazon Kinesis Data Firehose delivery stream.\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDB -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\nhashKeyType -> (string)\n\nThe data type for the hash key (also called the partition key). You can specify the following values:\n\n'STRING' - The hash key is a string.\n\n'NUMBER' - The hash key is a number.\n\nIf you don’t specify hashKeyType , the default value is 'STRING' .\n\nhashKeyField -> (string)\n\nThe name of the hash key (also called the partition key). The hashKeyField value must match the partition key of the target DynamoDB table.\n\nhashKeyValue -> (string)\n\nThe value of the hash key (also called the partition key).\n\nrangeKeyType -> (string)\n\nThe data type for the range key (also called the sort key), You can specify the following values:\n\n'STRING' - The range key is a string.\n\n'NUMBER' - The range key is number.\n\nIf you don’t specify rangeKeyField , the default value is 'STRING' .\n\nrangeKeyField -> (string)\n\nThe name of the range key (also called the sort key). The rangeKeyField value must match the sort key of the target DynamoDB table.\n\nrangeKeyValue -> (string)\n\nThe value of the range key (also called the sort key).\n\noperation -> (string)\n\nThe type of operation to perform. You can specify the following values:\n\n'INSERT' - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\n\n'UPDATE' - Update an existing item of the DynamoDB table with new data. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\n'DELETE' - Delete an existing item of the DynamoDB table. This item’s partition key must match the specified hash key. If you specified a range key, the range key must match the item’s sort key.\n\nIf you don’t specify this parameter, AWS IoT Events triggers the 'INSERT' operation.\n\npayloadField -> (string)\n\nThe name of the DynamoDB column that receives the action payload.\n\nIf you don’t specify this parameter, the name of the DynamoDB column is payload .\n\ntableName -> (string)\n\nThe name of the DynamoDB table. The tableName value must match the table name of the target DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\ndynamoDBv2 -> (structure)\n\nWrites to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can customize the payload . A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify. For more information, see Actions in AWS IoT Events Developer Guide .\n\ntableName -> (string)\n\nThe name of the DynamoDB table.\n\npayload -> (structure)\n\nInformation needed to configure the payload.\n\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use contentExpression .\n\ncontentExpression -> (string)\n\nThe content of the payload. You can use a string expression that includes quoted strings ('<string>' ), variables ($variable.<variable-name> ), input values ($input.<input-name>.<path-to-datum> ), string concatenations, and quoted strings that contain ${} as the content. The recommended maximum size of a content expression is 1 KB.\n\ntype -> (string)\n\nThe value of the payload type can be either STRING or JSON .\n\niotSiteWise -> (structure)\n\nSends information about the detector model instance and the event that triggered the action to an asset property in AWS IoT SiteWise .\n\nentryId -> (string)\n\nA unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier.\n\nassetId -> (string)\n\nThe ID of the asset that has the specified property.\n\npropertyId -> (string)\n\nThe ID of the asset property.\n\npropertyAlias -> (string)\n\nThe alias of the asset property.\n\npropertyValue -> (structure)\n\nThe value to send to the asset property. This value contains timestamp, quality, and value (TQV) information.\n\nvalue -> (structure)\n\nThe value to send to an asset property.\n\nstringValue -> (string)\n\nThe asset property value is a string. You must use an expression, and the evaluated result should be a string.\n\nintegerValue -> (string)\n\nThe asset property value is an integer. You must use an expression, and the evaluated result should be an integer.\n\ndoubleValue -> (string)\n\nThe asset property value is a double. You must use an expression, and the evaluated result should be a double.\n\nbooleanValue -> (string)\n\nThe asset property value is a Boolean value that must be 'TRUE' or 'FALSE' . You must use an expression, and the evaluated result should be a Boolean value.\n\ntimestamp -> (structure)\n\nThe timestamp associated with the asset property value. The default is the current event time.\n\ntimeInSeconds -> (string)\n\nThe timestamp, in seconds, in the Unix epoch format. The valid range is between 1-31556889864403199.\n\noffsetInNanos -> (string)\n\nThe nanosecond offset converted from timeInSeconds . The valid range is between 0-999999999.\n\nquality -> (string)\n\nThe quality of the asset property value. The value must be 'GOOD' , 'BAD' , or 'UNCERTAIN' .\n\ninitialStateName -> (string)\n\nThe state that is entered at the creation of each detector (instance).\n\nJSON Syntax:\n\n{\n  \"states\": [\n    {\n      \"stateName\": \"string\",\n      \"onInput\": {\n        \"events\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ]\n          }\n          ...\n        ],\n        \"transitionEvents\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ],\n            \"nextState\": \"string\"\n          }\n          ...\n        ]\n      },\n      \"onEnter\": {\n        \"events\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ]\n          }\n          ...\n        ]\n      },\n      \"onExit\": {\n        \"events\": [\n          {\n            \"eventName\": \"string\",\n            \"condition\": \"string\",\n            \"actions\": [\n              {\n                \"setVariable\": {\n                  \"variableName\": \"string\",\n                  \"value\": \"string\"\n                },\n                \"sns\": {\n                  \"targetArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotTopicPublish\": {\n                  \"mqttTopic\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"setTimer\": {\n                  \"timerName\": \"string\",\n                  \"seconds\": integer,\n                  \"durationExpression\": \"string\"\n                },\n                \"clearTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"resetTimer\": {\n                  \"timerName\": \"string\"\n                },\n                \"lambda\": {\n                  \"functionArn\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotEvents\": {\n                  \"inputName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"sqs\": {\n                  \"queueUrl\": \"string\",\n                  \"useBase64\": true|false,\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"firehose\": {\n                  \"deliveryStreamName\": \"string\",\n                  \"separator\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDB\": {\n                  \"hashKeyType\": \"string\",\n                  \"hashKeyField\": \"string\",\n                  \"hashKeyValue\": \"string\",\n                  \"rangeKeyType\": \"string\",\n                  \"rangeKeyField\": \"string\",\n                  \"rangeKeyValue\": \"string\",\n                  \"operation\": \"string\",\n                  \"payloadField\": \"string\",\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"dynamoDBv2\": {\n                  \"tableName\": \"string\",\n                  \"payload\": {\n                    \"contentExpression\": \"string\",\n                    \"type\": \"STRING\"|\"JSON\"\n                  }\n                },\n                \"iotSiteWise\": {\n                  \"entryId\": \"string\",\n                  \"assetId\": \"string\",\n                  \"propertyId\": \"string\",\n                  \"propertyAlias\": \"string\",\n                  \"propertyValue\": {\n                    \"value\": {\n                      \"stringValue\": \"string\",\n                      \"integerValue\": \"string\",\n                      \"doubleValue\": \"string\",\n                      \"booleanValue\": \"string\"\n                    },\n                    \"timestamp\": {\n                      \"timeInSeconds\": \"string\",\n                      \"offsetInNanos\": \"string\"\n                    },\n                    \"quality\": \"string\"\n                  }\n                }\n              }\n              ...\n            ]\n          }\n          ...\n        ]\n      }\n    }\n    ...\n  ],\n  \"initialStateName\": \"string\"\n}\n\n\n--detector-model-description (string)\n\nA brief description of the detector model.\n\n--role-arn (string)\n\nThe ARN of the role that grants permission to AWS IoT Events to perform its operations.\n\n--evaluation-method (string)\n\nInformation about the order in which events are evaluated and how actions are executed.\n\nPossible values:\n\nBATCH\n\nSERIAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndetectorModelConfiguration -> (structure)\n\nInformation about how the detector model is configured.\n\ndetectorModelName -> (string)\n\nThe name of the detector model.\n\ndetectorModelVersion -> (string)\n\nThe version of the detector model.\n\ndetectorModelDescription -> (string)\n\nA brief description of the detector model.\n\ndetectorModelArn -> (string)\n\nThe ARN of the detector model.\n\nroleArn -> (string)\n\nThe ARN of the role that grants permission to AWS IoT Events to perform its operations.\n\ncreationTime -> (timestamp)\n\nThe time the detector model was created.\n\nlastUpdateTime -> (timestamp)\n\nThe time the detector model was last updated.\n\nstatus -> (string)\n\nThe status of the detector model.\n\nkey -> (string)\n\nThe value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on this identifying information.\n\nThis parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.\n\nevaluationMethod -> (string)\n\nInformation about the order in which events are evaluated and how actions are executed.",
      "command_examples": "Examples\n\nTo update a detector model\n\nThe following update-detector-model example updates the specified detector model. Detectors (instances) spawned by the previous version are deleted and then re-created as new inputs arrive.\n\naws iotevents update-detector-model \\\n    --cli-input-json file://motorDetectorModel.update.json\n\n\nContents of motorDetectorModel.update.json:\n\n{\n    \"detectorModelName\": \"motorDetectorModel\",\n    \"detectorModelDefinition\": {\n        \"states\": [\n            {\n                \"stateName\": \"Normal\",\n                \"onEnter\": {\n                    \"events\": [\n                        {\n                            \"eventName\": \"init\",\n                            \"condition\": \"true\",\n                            \"actions\": [\n                                {\n                                    \"setVariable\": {\n                                        \"variableName\": \"pressureThresholdBreached\",\n                                        \"value\": \"0\"\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"onInput\": {\n                    \"transitionEvents\": [\n                        {\n                            \"eventName\": \"Overpressurized\",\n                            \"condition\": \"$input.PressureInput.sensorData.pressure > 70\",\n                            \"actions\": [\n                                {\n                                    \"setVariable\": {\n                                        \"variableName\": \"pressureThresholdBreached\",\n                                        \"value\": \"$variable.pressureThresholdBreached + 3\"\n                                    }\n                                }\n                            ],\n                            \"nextState\": \"Dangerous\"\n                        }\n                    ]\n                }\n            },\n            {\n                \"stateName\": \"Dangerous\",\n                \"onEnter\": {\n                    \"events\": [\n                        {\n                            \"eventName\": \"Pressure Threshold Breached\",\n                            \"condition\": \"$variable.pressureThresholdBreached > 1\",\n                            \"actions\": [\n                                {\n                                    \"sns\": {\n                                        \"targetArn\": \"arn:aws:sns:us-east-1:123456789012:underPressureAction\"\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"onInput\": {\n                    \"events\": [\n                        {\n                            \"eventName\": \"Overpressurized\",\n                            \"condition\": \"$input.PressureInput.sensorData.pressure > 70\",\n                            \"actions\": [\n                                {\n                                    \"setVariable\": {\n                                        \"variableName\": \"pressureThresholdBreached\",\n                                        \"value\": \"3\"\n                                    }\n                                }\n                            ]\n                        },\n                        {\n                            \"eventName\": \"Pressure Okay\",\n                            \"condition\": \"$input.PressureInput.sensorData.pressure <= 70\",\n                            \"actions\": [\n                                {\n                                    \"setVariable\": {\n                                        \"variableName\": \"pressureThresholdBreached\",\n                                        \"value\": \"$variable.pressureThresholdBreached - 1\"\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    \"transitionEvents\": [\n                        {\n                            \"eventName\": \"BackToNormal\",\n                            \"condition\": \"$input.PressureInput.sensorData.pressure <= 70 && $variable.pressureThresholdBreached <= 1\",\n                            \"nextState\": \"Normal\"\n                        }\n                    ]\n                },\n                \"onExit\": {\n                    \"events\": [\n                        {\n                            \"eventName\": \"Normal Pressure Restored\",\n                            \"condition\": \"true\",\n                            \"actions\": [\n                                {\n                                    \"sns\": {\n                                        \"targetArn\": \"arn:aws:sns:us-east-1:123456789012:pressureClearedAction\"\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"initialStateName\": \"Normal\"\n    },\n    \"roleArn\": \"arn:aws:iam::123456789012:role/IoTEventsRole\"\n}\n\n\nOutput:\n\n{\n    \"detectorModelConfiguration\": {\n        \"status\": \"ACTIVATING\",\n        \"lastUpdateTime\": 1560799387.719,\n        \"roleArn\": \"arn:aws:iam::123456789012:role/IoTEventsRole\",\n        \"creationTime\": 1560799387.719,\n        \"detectorModelArn\": \"arn:aws:iotevents:us-west-2:123456789012:detectorModel/motorDetectorModel\",\n        \"key\": \"motorid\",\n        \"detectorModelName\": \"motorDetectorModel\",\n        \"detectorModelVersion\": \"2\"\n    }\n}\n\n\nFor more information, see UpdateDetectorModel in the AWS IoT Events API Reference."
    },
    {
      "command_name": "update-input",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents/update-input.html",
      "command_description": "Description\n\nUpdates an input.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-input\n--input-name <value>\n[--input-description <value>]\n--input-definition <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-name <value>",
        "[--input-description <value>]",
        "--input-definition <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-name (string)\n\nThe name of the input you want to update.\n\n--input-description (string)\n\nA brief description of the input.\n\n--input-definition (structure)\n\nThe definition of the input.\n\nattributes -> (list)\n\nThe attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using BatchPutMessage . Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the condition expressions used by detectors that monitor this input.\n\n(structure)\n\nThe attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using BatchPutMessage . Each such message contains a JSON payload. Those attributes (and their paired values) specified here are available for use in the condition expressions used by detectors.\n\njsonPath -> (string)\n\nAn expression that specifies an attribute-value pair in a JSON structure. Use this to specify an attribute from the JSON payload that is made available by the input. Inputs are derived from messages sent to AWS IoT Events (BatchPutMessage ). Each such message contains a JSON payload. The attribute (and its paired value) specified here are available for use in the condition expressions used by detectors.\n\nSyntax: <field-name>.<field-name>...\n\nShorthand Syntax:\n\nattributes=[{jsonPath=string},{jsonPath=string}]\n\n\nJSON Syntax:\n\n{\n  \"attributes\": [\n    {\n      \"jsonPath\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninputConfiguration -> (structure)\n\nInformation about the configuration of the input.\n\ninputName -> (string)\n\nThe name of the input.\n\ninputDescription -> (string)\n\nA brief description of the input.\n\ninputArn -> (string)\n\nThe ARN of the input.\n\ncreationTime -> (timestamp)\n\nThe time the input was created.\n\nlastUpdateTime -> (timestamp)\n\nThe last time the input was updated.\n\nstatus -> (string)\n\nThe status of the input.",
      "command_examples": "Examples\n\nTo update an input\n\nThe following update-input example updates the specified input with a new description and definition.\n\naws iotevents update-input \\\n    --cli-input-json file://pressureInput.json\n\n\nContents of pressureInput.json:\n\n{\n    \"inputName\": \"PressureInput\",\n    \"inputDescription\": \"Pressure readings from a motor\",\n    \"inputDefinition\": {\n        \"attributes\": [\n            { \"jsonPath\": \"sensorData.pressure\" },\n            { \"jsonPath\": \"motorid\" }\n        ]\n    }\n}\n\n\nOutput:\n\n{\n    \"inputConfiguration\": {\n        \"status\": \"ACTIVE\",\n        \"inputArn\": \"arn:aws:iotevents:us-west-2:123456789012:input/PressureInput\",\n        \"lastUpdateTime\": 1560795976.458,\n        \"creationTime\": 1560795312.542,\n        \"inputName\": \"PressureInput\",\n        \"inputDescription\": \"Pressure readings from a motor\"\n    }\n}\n\n\nFor more information, see UpdateInput in the AWS IoT Events API Reference."
    }
  ],
  "service_description": "Description\n\nAWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions."
}