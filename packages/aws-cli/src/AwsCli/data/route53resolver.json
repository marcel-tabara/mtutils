{
  "service_name": "route53resolver",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/index.html",
  "service_commands": [
    {
      "command_name": "associate-firewall-rule-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/associate-firewall-rule-group.html",
      "command_description": "Description\n\nAssociates a FirewallRuleGroup with a VPC, to provide DNS filtering for the VPC.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-firewall-rule-group\n[--creator-request-id <value>]\n--firewall-rule-group-id <value>\n--vpc-id <value>\n--priority <value>\n--name <value>\n[--mutation-protection <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--creator-request-id <value>]",
        "--firewall-rule-group-id <value>",
        "--vpc-id <value>",
        "--priority <value>",
        "--name <value>",
        "[--mutation-protection <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.\n\n--firewall-rule-group-id (string)\n\nThe unique identifier of the firewall rule group.\n\n--vpc-id (string)\n\nThe unique identifier of the VPC that you want to associate with the rule group.\n\n--priority (integer)\n\nThe setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.\n\nYou must specify a unique priority for each rule group that you associate with a single VPC. To make it easier to insert rule groups later, leave space between the numbers, for example, use 101, 200, and so on. You can change the priority setting for a rule group association after you create it.\n\nThe allowed values for Priority are between 100 and 9900.\n\n--name (string)\n\nA name that lets you identify the association, to manage and use it.\n\n--mutation-protection (string)\n\nIf enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. When you create the association, the default setting is DISABLED .\n\nPossible values:\n\nENABLED\n\nDISABLED\n\n--tags (list)\n\nA list of the tag keys and values that you want to associate with the rule group association.\n\n(structure)\n\nOne tag that you want to add to the specified resource. A tag consists of a Key (a name for the tag) and a Value .\n\nKey -> (string)\n\nThe name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of Key might be account-id .\n\nValue -> (string)\n\nThe value for the tag. For example, if Key is account-id , then Value might be the ID of the customer account that you’re creating the resource for.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRuleGroupAssociation -> (structure)\n\nThe association that you just created. The association has an ID that you can use to identify it in other requests, like update and delete.\n\nId -> (string)\n\nThe identifier for the association.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall rule group association.\n\nFirewallRuleGroupId -> (string)\n\nThe unique identifier of the firewall rule group.\n\nVpcId -> (string)\n\nThe unique identifier of the VPC that is associated with the rule group.\n\nName -> (string)\n\nThe name of the association.\n\nPriority -> (integer)\n\nThe setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC. DNS Firewall filters VPC traffic starting from rule group with the lowest numeric priority setting.\n\nMutationProtection -> (string)\n\nIf enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections.\n\nManagedOwnerName -> (string)\n\nThe owner of the association, used only for associations that are not managed by you. If you use Firewall Manager to manage your DNS Firewalls, then this reports Firewall Manager as the managed owner.\n\nStatus -> (string)\n\nThe current status of the association.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the response, if available.\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the association was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the association was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo associate a firewall rule group with a VPC\n\nThe following associate-firewall-rule-group example associates a DNS Firewall rule group with an Amazon VPC.\n\naws route53resolver associate-firewall-rule-group \\\n    --name test-association \\\n    --firewall-rule-group-id rslvr-frg-47f93271fexample \\\n    --vpc-id vpc-31e92222 \\\n    --priority 101\n\n\nOutput:\n\n{\n    \"FirewallRuleGroupAssociation\": {\n        \"Id\": \"rslvr-frgassoc-57e8873d7example\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-rule-group-association/rslvr-frgassoc-57e8873d7example\",\n        \"FirewallRuleGroupId\": \"rslvr-frg-47f93271fexample\",\n        \"VpcId\": \"vpc-31e92222\",\n        \"Name\": \"test-association\",\n        \"Priority\": 101,\n        \"MutationProtection\": \"DISABLED\",\n        \"Status\": \"UPDATING\",\n        \"StatusMessage\": \"Creating Firewall Rule Group Association\",\n        \"CreatorRequestId\": \"2ca1a304-32b3-4f5f-bc4c-EXAMPLE11111\",\n        \"CreationTime\": \"2021-05-25T21:47:48.755768Z\",\n        \"ModificationTime\": \"2021-05-25T21:47:48.755768Z\"\n    }\n}\n\n\nFor more information, see Managing associations between your VPC and Route 53 Resolver DNS Firewall rule groups in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "associate-resolver-endpoint-ip-address",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/associate-resolver-endpoint-ip-address.html",
      "command_description": "Description\n\nAdds IP addresses to an inbound or an outbound Resolver endpoint. If you want to add more than one IP address, submit one AssociateResolverEndpointIpAddress request for each IP address.\n\nTo remove an IP address from an endpoint, see DisassociateResolverEndpointIpAddress .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-resolver-endpoint-ip-address\n--resolver-endpoint-id <value>\n--ip-address <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-endpoint-id <value>",
        "--ip-address <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-endpoint-id (string)\n\nThe ID of the Resolver endpoint that you want to associate IP addresses with.\n\n--ip-address (structure)\n\nEither the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.\n\nIpId -> (string)\n\nOnly when removing an IP address from a Resolver endpoint : The ID of the IP address that you want to remove. To get this ID, use GetResolverEndpoint .\n\nSubnetId -> (string)\n\nThe ID of the subnet that includes the IP address that you want to update. To get this ID, use GetResolverEndpoint .\n\nIp -> (string)\n\nThe new IP address.\n\nShorthand Syntax:\n\nIpId=string,SubnetId=string,Ip=string\n\n\nJSON Syntax:\n\n{\n  \"IpId\": \"string\",\n  \"SubnetId\": \"string\",\n  \"Ip\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverEndpoint -> (structure)\n\nThe response to an AssociateResolverEndpointIpAddress request.\n\nId -> (string)\n\nThe ID of the Resolver endpoint.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the Resolver endpoint. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver endpoint.\n\nName -> (string)\n\nThe name that you assigned to the Resolver endpoint when you submitted a CreateResolverEndpoint request.\n\nSecurityGroupIds -> (list)\n\nThe ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you’re using for DNS queries on your network.\n\n(string)\n\nDirection -> (string)\n\nIndicates whether the Resolver endpoint allows inbound or outbound DNS queries:\n\nINBOUND : allows DNS queries to your VPC from your network\n\nOUTBOUND : allows DNS queries from your VPC to your network\n\nIpAddressCount -> (integer)\n\nThe number of IP addresses that the Resolver endpoint can use for DNS queries.\n\nHostVPCId -> (string)\n\nThe ID of the VPC that you want to create the Resolver endpoint in.\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver endpoint. Valid values include the following:\n\nCREATING : Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.\n\nOPERATIONAL : The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.\n\nUPDATING : Resolver is associating or disassociating one or more network interfaces with this endpoint.\n\nAUTO_RECOVERING : Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see Limits on Route 53 Resolver .\n\nACTION_NEEDED : This endpoint is unhealthy, and Resolver can’t automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn’t available, add another IP address and then delete the IP address that isn’t available. (An endpoint must always include at least two IP addresses.) A status of ACTION_NEEDED can have a variety of causes. Here are two common causes:\n\nOne or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.\n\nThe network interface couldn’t be created for some reason that’s outside the control of Resolver.\n\nDELETING : Resolver is deleting this endpoint and the associated network interfaces.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the Resolver endpoint.\n\nCreationTime -> (string)\n\nThe date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo associate another IP address with a Resolver endpoint\n\nThe following associate-resolver-endpoint-ip-address example associates another IP address with an inbound Resolver endpoint. If you specify only a subnet ID and omit the IP address from the --ip-address parameter, Resolver chooses an IP address for you from among the available IP addresses in the specified subnet.\n\naws route53resolver associate-resolver-endpoint-ip-address \\\n    --resolver-endpoint-id rslvr-in-497098ad5example \\\n    --ip-address=\"SubnetId=subnet-12d8exam,Ip=192.0.2.118\"\n\n\nOutput:\n\n{\n    \"ResolverEndpoint\": {\n        \"Id\": \"rslvr-in-497098ad5example\",\n        \"CreatorRequestId\": \"AWSConsole.25.0123456789\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-endpoint/rslvr-in-497098ad5example\",\n        \"Name\": \"my-inbound-endpoint\",\n        \"SecurityGroupIds\": [\n            \"sg-05cd7b25d6example\"\n        ],\n        \"Direction\": \"INBOUND\",\n        \"IpAddressCount\": 3,\n        \"HostVPCId\": \"vpc-304bexam\",\n        \"Status\": \"UPDATING\",\n        \"StatusMessage\": \"Updating the Resolver Endpoint\",\n        \"CreationTime\": \"2020-01-02T23:25:45.538Z\",\n        \"ModificationTime\": \"2020-01-02T23:25:45.538Z\"\n    }\n}\n\n\nFor more information, see Values That You Specify When You Create or Edit Inbound Endpoints in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "associate-resolver-query-log-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/associate-resolver-query-log-config.html",
      "command_description": "Description\n\nAssociates an Amazon VPC with a specified query logging configuration. Route 53 Resolver logs DNS queries that originate in all of the Amazon VPCs that are associated with a specified query logging configuration. To associate more than one VPC with a configuration, submit one AssociateResolverQueryLogConfig request for each VPC.\n\nNote\n\nThe VPCs that you associate with a query logging configuration must be in the same Region as the configuration.\n\nTo remove a VPC from a query logging configuration, see DisassociateResolverQueryLogConfig .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-resolver-query-log-config\n--resolver-query-log-config-id <value>\n--resource-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-query-log-config-id <value>",
        "--resource-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-query-log-config-id (string)\n\nThe ID of the query logging configuration that you want to associate a VPC with.\n\n--resource-id (string)\n\nThe ID of an Amazon VPC that you want this query logging configuration to log queries for.\n\nNote\n\nThe VPCs and the query logging configuration must be in the same Region.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverQueryLogConfigAssociation -> (structure)\n\nA complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.\n\nId -> (string)\n\nThe ID of the query logging association.\n\nResolverQueryLogConfigId -> (string)\n\nThe ID of the query logging configuration that a VPC is associated with.\n\nResourceId -> (string)\n\nThe ID of the Amazon VPC that is associated with the query logging configuration.\n\nStatus -> (string)\n\nThe status of the specified query logging association. Valid values include the following:\n\nCREATING : Resolver is creating an association between an Amazon VPC and a query logging configuration.\n\nCREATED : The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n\nDELETING : Resolver is deleting this query logging association.\n\nFAILED : Resolver either couldn’t create or couldn’t delete the query logging association.\n\nError -> (string)\n\nIf the value of Status is FAILED , the value of Error indicates the cause:\n\nDESTINATION_NOT_FOUND : The specified destination (for example, an Amazon S3 bucket) was deleted.\n\nACCESS_DENIED : Permissions don’t allow sending logs to the destination.\n\nIf the value of Status is a value other than FAILED , Error is null.\n\nErrorMessage -> (string)\n\nContains additional information about the error. If the value or Error is null, the value of ErrorMessage also is null.\n\nCreationTime -> (string)\n\nThe date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC)."
    },
    {
      "command_name": "associate-resolver-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/associate-resolver-rule.html",
      "command_description": "Description\n\nAssociates a Resolver rule with a VPC. When you associate a rule with a VPC, Resolver forwards all DNS queries for the domain name that is specified in the rule and that originate in the VPC. The queries are forwarded to the IP addresses for the DNS resolvers that are specified in the rule. For more information about rules, see CreateResolverRule .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-resolver-rule\n--resolver-rule-id <value>\n[--name <value>]\n--vpc-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-rule-id <value>",
        "[--name <value>]",
        "--vpc-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-rule-id (string)\n\nThe ID of the Resolver rule that you want to associate with the VPC. To list the existing Resolver rules, use ListResolverRules .\n\n--name (string)\n\nA name for the association that you’re creating between a Resolver rule and a VPC.\n\n--vpc-id (string)\n\nThe ID of the VPC that you want to associate the Resolver rule with.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverRuleAssociation -> (structure)\n\nInformation about the AssociateResolverRule request, including the status of the request.\n\nId -> (string)\n\nThe ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an AssociateResolverRule request.\n\nResolverRuleId -> (string)\n\nThe ID of the Resolver rule that you associated with the VPC that is specified by VPCId .\n\nName -> (string)\n\nThe name of an association between a Resolver rule and a VPC.\n\nVPCId -> (string)\n\nThe ID of the VPC that you associated the Resolver rule with.\n\nStatus -> (string)\n\nA code that specifies the current status of the association between a Resolver rule and a VPC.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the association between a Resolver rule and a VPC.",
      "command_examples": "Examples\n\nTo associate a Resolver rule with a VPC\n\nThe following associate-resolver-rule example associates a Resolver rule with an Amazon VPC. After you run the command, Resolver starts to forward DNS queries to your network based on the settings in the rule, such as the domain name of the queries that are forwarded.\n\naws route53resolver associate-resolver-rule \\\n    --name my-resolver-rule-association \\\n    --resolver-rule-id rslvr-rr-42b60677c0example \\\n    --vpc-id vpc-304bexam\n\n\nOutput:\n\n{\n    \"ResolverRuleAssociation\": {\n        \"Id\": \"rslvr-rrassoc-d61cbb2c8bexample\",\n        \"ResolverRuleId\": \"rslvr-rr-42b60677c0example\",\n        \"Name\": \"my-resolver-rule-association\",\n        \"VPCId\": \"vpc-304bexam\",\n        \"Status\": \"CREATING\",\n        \"StatusMessage\": \"[Trace id: 1-5dc5a8fa-ec2cc480d2ef07617example] Creating the association.\"\n    }\n}\n\n\nFor more information, see Forwarding Outbound DNS Queries to Your Network in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "create-firewall-domain-list",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/create-firewall-domain-list.html",
      "command_description": "Description\n\nCreates an empty firewall domain list for use in DNS Firewall rules. You can populate the domains for the new list with a file, using ImportFirewallDomains , or with domain strings, using UpdateFirewallDomains .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-firewall-domain-list\n[--creator-request-id <value>]\n--name <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--creator-request-id <value>]",
        "--name <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows you to retry failed requests without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.\n\n--name (string)\n\nA name that lets you identify the domain list to manage and use it.\n\n--tags (list)\n\nA list of the tag keys and values that you want to associate with the domain list.\n\n(structure)\n\nOne tag that you want to add to the specified resource. A tag consists of a Key (a name for the tag) and a Value .\n\nKey -> (string)\n\nThe name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of Key might be account-id .\n\nValue -> (string)\n\nThe value for the tag. For example, if Key is account-id , then Value might be the ID of the customer account that you’re creating the resource for.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallDomainList -> (structure)\n\nThe domain list that you just created.\n\nId -> (string)\n\nThe ID of the domain list.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall domain list.\n\nName -> (string)\n\nThe name of the domain list.\n\nDomainCount -> (integer)\n\nThe number of domain names that are specified in the domain list.\n\nStatus -> (string)\n\nThe status of the domain list.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the list, if available.\n\nManagedOwnerName -> (string)\n\nThe owner of the list, used only for lists that are not managed by you. For example, the managed domain list AWSManagedDomainsMalwareDomainList has the managed owner name Route 53 Resolver DNS Firewall .\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the domain list was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the domain list was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo create a Route 53 Resolver DNS Firewall domain list\n\nThe following create-firewall-domain-list example creates a Route 53 Resolver DNS Firewall domain list, named test, in your AWS account.\n\naws route53resolver create-firewall-domain-list \\\n    --creator-request-id my-request-id \\\n    --name test\n\n\nOutput:\n\n{\n    \"FirewallDomainList\": {\n        \"Id\": \"rslvr-fdl-d61cbb2cbexample\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-domain-list/rslvr-fdl-d61cbb2cbexample\",\n        \"Name\": \"test\",\n        \"DomainCount\": 0,\n        \"Status\": \"COMPLETE\",\n        \"StatusMessage\": \"Created Firewall Domain List\",\n        \"CreatorRequestId\": \"my-request-id\",\n        \"CreationTime\": \"2021-05-25T15:55:51.115365Z\",\n        \"ModificationTime\": \"2021-05-25T15:55:51.115365Z\"\n    }\n}\n\n\nFor more information, see Managing your own domain lists in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "create-firewall-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/create-firewall-rule.html",
      "command_description": "Description\n\nCreates a single DNS Firewall rule in the specified rule group, using the specified domain list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-firewall-rule\n[--creator-request-id <value>]\n--firewall-rule-group-id <value>\n--firewall-domain-list-id <value>\n--priority <value>\n--action <value>\n[--block-response <value>]\n[--block-override-domain <value>]\n[--block-override-dns-type <value>]\n[--block-override-ttl <value>]\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--creator-request-id <value>]",
        "--firewall-rule-group-id <value>",
        "--firewall-domain-list-id <value>",
        "--priority <value>",
        "--action <value>",
        "[--block-response <value>]",
        "[--block-override-domain <value>]",
        "[--block-override-dns-type <value>]",
        "[--block-override-ttl <value>]",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows you to retry failed requests without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.\n\n--firewall-rule-group-id (string)\n\nThe unique identifier of the firewall rule group where you want to create the rule.\n\n--firewall-domain-list-id (string)\n\nThe ID of the domain list that you want to use in the rule.\n\n--priority (integer)\n\nThe setting that determines the processing order of the rule in the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.\n\nYou must specify a unique priority for each rule in a rule group. To make it easier to insert rules later, leave space between the numbers, for example, use 100, 200, and so on. You can change the priority setting for the rules in a rule group at any time.\n\n--action (string)\n\nThe action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule’s domain list:\n\nALLOW - Permit the request to go through.\n\nALERT - Permit the request and send metrics and logs to Cloud Watch.\n\nBLOCK - Disallow the request. This option requires additional details in the rule’s BlockResponse .\n\nPossible values:\n\nALLOW\n\nBLOCK\n\nALERT\n\n--block-response (string)\n\nThe way that you want DNS Firewall to block the request, used with the rule action setting BLOCK .\n\nNODATA - Respond indicating that the query was successful, but no response is available for it.\n\nNXDOMAIN - Respond indicating that the domain name that’s in the query doesn’t exist.\n\nOVERRIDE - Provide a custom override in the response. This option requires custom handling details in the rule’s BlockOverride* settings.\n\nThis setting is required if the rule action setting is BLOCK .\n\nPossible values:\n\nNODATA\n\nNXDOMAIN\n\nOVERRIDE\n\n--block-override-domain (string)\n\nThe custom DNS record to send back in response to the query. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nThis setting is required if the BlockResponse setting is OVERRIDE .\n\n--block-override-dns-type (string)\n\nThe DNS record’s type. This determines the format of the record value that you provided in BlockOverrideDomain . Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nThis setting is required if the BlockResponse setting is OVERRIDE .\n\nPossible values:\n\nCNAME\n\n--block-override-ttl (integer)\n\nThe recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nThis setting is required if the BlockResponse setting is OVERRIDE .\n\n--name (string)\n\nA name that lets you identify the rule in the rule group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRule -> (structure)\n\nThe firewall rule that you just created.\n\nFirewallRuleGroupId -> (string)\n\nThe unique identifier of the firewall rule group of the rule.\n\nFirewallDomainListId -> (string)\n\nThe ID of the domain list that’s used in the rule.\n\nName -> (string)\n\nThe name of the rule.\n\nPriority -> (integer)\n\nThe priority of the rule in the rule group. This value must be unique within the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.\n\nAction -> (string)\n\nThe action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule’s domain list:\n\nALLOW - Permit the request to go through.\n\nALERT - Permit the request to go through but send an alert to the logs.\n\nBLOCK - Disallow the request. If this is specified, additional handling details are provided in the rule’s BlockResponse setting.\n\nBlockResponse -> (string)\n\nThe way that you want DNS Firewall to block the request. Used for the rule action setting BLOCK .\n\nNODATA - Respond indicating that the query was successful, but no response is available for it.\n\nNXDOMAIN - Respond indicating that the domain name that’s in the query doesn’t exist.\n\nOVERRIDE - Provide a custom override in the response. This option requires custom handling details in the rule’s BlockOverride* settings.\n\nBlockOverrideDomain -> (string)\n\nThe custom DNS record to send back in response to the query. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nBlockOverrideDnsType -> (string)\n\nThe DNS record’s type. This determines the format of the record value that you provided in BlockOverrideDomain . Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nBlockOverrideTtl -> (integer)\n\nThe recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of executing the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the rule was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the rule was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo create a firewall rule\n\nThe following create-firewall-rule example creates a firewall rule in a DNS Firewall rule for domains listed in a DNS Firewall domain list.\n\naws route53resolver create-firewall-rule \\\n    --name allow-rule \\\n    --firewall-rule-group-id rslvr-frg-47f93271fexample \\\n    --firewall-domain-list-id rslvr-fdl-9e956e9ffexample \\\n    --priority 101 \\\n    --action ALLOW\n\n\nOutput:\n\n{\n    \"FirewallRule\": {\n        \"FirewallRuleGroupId\": \"rslvr-frg-47f93271fexample\",\n        \"FirewallDomainListId\": \"rslvr-fdl-9e956e9ffexample\",\n        \"Name\": \"allow-rule\",\n        \"Priority\": 101,\n        \"Action\": \"ALLOW\",\n        \"CreatorRequestId\": \"d81e3fb7-020b-415e-939f-EXAMPLE11111\",\n        \"CreationTime\": \"2021-05-25T21:44:00.346093Z\",\n        \"ModificationTime\": \"2021-05-25T21:44:00.346093Z\"\n    }\n}\n\n\nFor more information, see Managing rule groups and rules in DNS Firewall in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "create-firewall-rule-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/create-firewall-rule-group.html",
      "command_description": "Description\n\nCreates an empty DNS Firewall rule group for filtering DNS network traffic in a VPC. You can add rules to the new rule group by calling CreateFirewallRule .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-firewall-rule-group\n[--creator-request-id <value>]\n--name <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--creator-request-id <value>]",
        "--name <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--creator-request-id (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\n--name (string)\n\nA name that lets you identify the rule group, to manage and use it.\n\n--tags (list)\n\nA list of the tag keys and values that you want to associate with the rule group.\n\n(structure)\n\nOne tag that you want to add to the specified resource. A tag consists of a Key (a name for the tag) and a Value .\n\nKey -> (string)\n\nThe name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of Key might be account-id .\n\nValue -> (string)\n\nThe value for the tag. For example, if Key is account-id , then Value might be the ID of the customer account that you’re creating the resource for.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRuleGroup -> (structure)\n\nA collection of rules used to filter DNS network traffic.\n\nId -> (string)\n\nThe ID of the rule group.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) of the rule group.\n\nName -> (string)\n\nThe name of the rule group.\n\nRuleCount -> (integer)\n\nThe number of rules in the rule group.\n\nStatus -> (string)\n\nThe status of the domain list.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the rule group, if available.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID for the account that created the rule group. When a rule group is shared with your account, this is the account that has shared the rule group with you.\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nShareStatus -> (string)\n\nWhether the rule group is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Sharing is configured through Resource Access Manager (RAM).\n\nCreationTime -> (string)\n\nThe date and time that the rule group was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the rule group was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo create a Firewall rule group\n\nThe following create-firewall-rule-group example creates a DNS Firewall rule group.\n\naws route53resolver create-firewall-rule-group \\\n    --creator-request-id my-request-id \\\n    --name test\n\n\nOutput:\n\n{\n    \"FirewallRuleGroup\": {\n        \"Id\": \"rslvr-frg-47f93271fexample\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-rule-group/rslvr-frg-47f93271fexample\",\n        \"Name\": \"test\",\n        \"RuleCount\": 0,\n        \"Status\": \"COMPLETE\",\n        \"StatusMessage\": \"Created Firewall Rule Group\",\n        \"OwnerId\": \"123456789012\",\n        \"CreatorRequestId\": \"my-request-id\",\n        \"ShareStatus\": \"NOT_SHARED\",\n        \"CreationTime\": \"2021-05-25T18:59:26.490017Z\",\n        \"ModificationTime\": \"2021-05-25T18:59:26.490017Z\"\n    }\n}\n\n\nFor more information, see Managing rule groups and rules in DNS Firewall in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "create-resolver-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/create-resolver-endpoint.html",
      "command_description": "Description\n\nCreates a Resolver endpoint. There are two types of Resolver endpoints, inbound and outbound:\n\nAn inbound Resolver endpoint forwards DNS queries to the DNS service for a VPC from your network.\n\nAn outbound Resolver endpoint forwards DNS queries from the DNS service for a VPC to your network.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-resolver-endpoint\n--creator-request-id <value>\n[--name <value>]\n--security-group-ids <value>\n--direction <value>\n--ip-addresses <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--creator-request-id <value>",
        "[--name <value>]",
        "--security-group-ids <value>",
        "--direction <value>",
        "--ip-addresses <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.\n\n--name (string)\n\nA friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.\n\n--security-group-ids (list)\n\nThe ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you’re using for DNS queries on your network.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--direction (string)\n\nSpecify the applicable value:\n\nINBOUND : Resolver forwards DNS queries to the DNS service for a VPC from your network\n\nOUTBOUND : Resolver forwards DNS queries from the DNS service for a VPC to your network\n\nPossible values:\n\nINBOUND\n\nOUTBOUND\n\n--ip-addresses (list)\n\nThe subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.\n\n(structure)\n\nIn a CreateResolverEndpoint request, the IP address that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). IpAddressRequest also includes the ID of the subnet that contains the IP address.\n\nSubnetId -> (string)\n\nThe ID of the subnet that contains the IP address.\n\nIp -> (string)\n\nThe IP address that you want to use for DNS queries.\n\nShorthand Syntax:\n\nSubnetId=string,Ip=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"SubnetId\": \"string\",\n    \"Ip\": \"string\"\n  }\n  ...\n]\n\n\n--tags (list)\n\nA list of the tag keys and values that you want to associate with the endpoint.\n\n(structure)\n\nOne tag that you want to add to the specified resource. A tag consists of a Key (a name for the tag) and a Value .\n\nKey -> (string)\n\nThe name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of Key might be account-id .\n\nValue -> (string)\n\nThe value for the tag. For example, if Key is account-id , then Value might be the ID of the customer account that you’re creating the resource for.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverEndpoint -> (structure)\n\nInformation about the CreateResolverEndpoint request, including the status of the request.\n\nId -> (string)\n\nThe ID of the Resolver endpoint.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the Resolver endpoint. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver endpoint.\n\nName -> (string)\n\nThe name that you assigned to the Resolver endpoint when you submitted a CreateResolverEndpoint request.\n\nSecurityGroupIds -> (list)\n\nThe ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you’re using for DNS queries on your network.\n\n(string)\n\nDirection -> (string)\n\nIndicates whether the Resolver endpoint allows inbound or outbound DNS queries:\n\nINBOUND : allows DNS queries to your VPC from your network\n\nOUTBOUND : allows DNS queries from your VPC to your network\n\nIpAddressCount -> (integer)\n\nThe number of IP addresses that the Resolver endpoint can use for DNS queries.\n\nHostVPCId -> (string)\n\nThe ID of the VPC that you want to create the Resolver endpoint in.\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver endpoint. Valid values include the following:\n\nCREATING : Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.\n\nOPERATIONAL : The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.\n\nUPDATING : Resolver is associating or disassociating one or more network interfaces with this endpoint.\n\nAUTO_RECOVERING : Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see Limits on Route 53 Resolver .\n\nACTION_NEEDED : This endpoint is unhealthy, and Resolver can’t automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn’t available, add another IP address and then delete the IP address that isn’t available. (An endpoint must always include at least two IP addresses.) A status of ACTION_NEEDED can have a variety of causes. Here are two common causes:\n\nOne or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.\n\nThe network interface couldn’t be created for some reason that’s outside the control of Resolver.\n\nDELETING : Resolver is deleting this endpoint and the associated network interfaces.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the Resolver endpoint.\n\nCreationTime -> (string)\n\nThe date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo create an inbound Resolver endpoint\n\nThe following create-resolver-endpoint example creates an inbound Resolver endpoint. You can use the same command to create both inbound and outbound endpoints.\n\naws route53resolver create-resolver-endpoint\n\n–name my-inbound-endpoint –creator-request-id 2020-01-01-18:47 –security-group-ids “sg-f62bexam” –direction INBOUND –ip-addresses SubnetId=subnet-ba47exam,Ip=192.0.2.255 SubnetId=subnet-12d8exam,Ip=192.0.2.254\n\nOutput:\n\n{\n    \"ResolverEndpoint\": {\n        \"Id\": \"rslvr-in-f9ab8a03f1example\",\n        \"CreatorRequestId\": \"2020-01-01-18:47\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-endpoint/rslvr-in-f9ab8a03f1example\",\n        \"Name\": \"my-inbound-endpoint\",\n        \"SecurityGroupIds\": [\n            \"sg-f62bexam\"\n        ],\n        \"Direction\": \"INBOUND\",\n        \"IpAddressCount\": 2,\n        \"HostVPCId\": \"vpc-304examp\",\n        \"Status\": \"CREATING\",\n        \"StatusMessage\": \"[Trace id: 1-5dc1ff84-f3477826e4a190025example] Creating the Resolver Endpoint\",\n        \"CreationTime\": \"2020-01-01T23:02:29.583Z\",\n        \"ModificationTime\": \"2020-01-01T23:02:29.583Z\"\n    }\n}\n\n\nTo create an outbound Resolver endpoint\n\nThe following create-resolver-endpoint example creates an outbound resolver endpoint using the values in the JSON-formatted document create-outbound-resolver-endpoint.json.\n\naws route53resolver create-resolver-endpoint \\\n    --cli-input-json file://c:\\temp\\create-outbound-resolver-endpoint.json\n\n\nContents of create-outbound-resolver-endpoint.json:\n\n{\n   \"CreatorRequestId\": \"2020-01-01-18:47\",\n   \"Direction\": \"OUTBOUND\",\n   \"IpAddresses\": [\n      {\n         \"Ip\": \"192.0.2.255\",\n         \"SubnetId\": \"subnet-ba47exam\"\n      },\n      {\n         \"Ip\": \"192.0.2.254\",\n         \"SubnetId\": \"subnet-12d8exam\"\n      }\n   ],\n   \"Name\": \"my-outbound-endpoint\",\n   \"SecurityGroupIds\": [ \"sg-05cd7b25d6example\" ],\n   \"Tags\": [\n      {\n         \"Key\": \"my-key-name\",\n         \"Value\": \"my-key-value\"\n      }\n   ]\n}\n\n\nFor more information, see Resolving DNS Queries Between VPCs and Your Network in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "create-resolver-query-log-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/create-resolver-query-log-config.html",
      "command_description": "Description\n\nCreates a Resolver query logging configuration, which defines where you want Resolver to save DNS query logs that originate in your VPCs. Resolver can log queries only for VPCs that are in the same Region as the query logging configuration.\n\nTo specify which VPCs you want to log queries for, you use AssociateResolverQueryLogConfig . For more information, see AssociateResolverQueryLogConfig .\n\nYou can optionally use Resource Access Manager (RAM) to share a query logging configuration with other Amazon Web Services accounts. The other accounts can then associate VPCs with the configuration. The query logs that Resolver creates for a configuration include all DNS queries that originate in all VPCs that are associated with the configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-resolver-query-log-config\n--name <value>\n--destination-arn <value>\n[--creator-request-id <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--destination-arn <value>",
        "[--creator-request-id <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name that you want to give the query logging configuration.\n\n--destination-arn (string)\n\nThe ARN of the resource that you want Resolver to send query logs. You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream. Examples of valid values include the following:\n\nS3 bucket : arn:aws:s3:::examplebucket You can optionally append a file prefix to the end of the ARN. arn:aws:s3:::examplebucket/development/\n\nCloudWatch Logs log group : arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*\n\nKinesis Data Firehose delivery stream : arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.\n\n--tags (list)\n\nA list of the tag keys and values that you want to associate with the query logging configuration.\n\n(structure)\n\nOne tag that you want to add to the specified resource. A tag consists of a Key (a name for the tag) and a Value .\n\nKey -> (string)\n\nThe name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of Key might be account-id .\n\nValue -> (string)\n\nThe value for the tag. For example, if Key is account-id , then Value might be the ID of the customer account that you’re creating the resource for.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverQueryLogConfig -> (structure)\n\nInformation about the CreateResolverQueryLogConfig request, including the status of the request.\n\nId -> (string)\n\nThe ID for the query logging configuration.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID for the account that created the query logging configuration.\n\nStatus -> (string)\n\nThe status of the specified query logging configuration. Valid values include the following:\n\nCREATING : Resolver is creating the query logging configuration.\n\nCREATED : The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n\nDELETING : Resolver is deleting this query logging configuration.\n\nFAILED : Resolver can’t deliver logs to the location that is specified in the query logging configuration. Here are two common causes:\n\nThe specified destination (for example, an Amazon S3 bucket) was deleted.\n\nPermissions don’t allow sending logs to the destination.\n\nShareStatus -> (string)\n\nAn indication of whether the query logging configuration is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Sharing is configured through Resource Access Manager (RAM).\n\nAssociationCount -> (integer)\n\nThe number of VPCs that are associated with the query logging configuration.\n\nArn -> (string)\n\nThe ARN for the query logging configuration.\n\nName -> (string)\n\nThe name of the query logging configuration.\n\nDestinationArn -> (string)\n\nThe ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the query logging configuration. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nCreationTime -> (string)\n\nThe date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC)."
    },
    {
      "command_name": "create-resolver-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/create-resolver-rule.html",
      "command_description": "Description\n\nFor DNS queries that originate in your VPCs, specifies which Resolver endpoint the queries pass through, one domain name that you want to forward to your network, and the IP addresses of the DNS resolvers in your network.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-resolver-rule\n--creator-request-id <value>\n[--name <value>]\n--rule-type <value>\n--domain-name <value>\n[--target-ips <value>]\n[--resolver-endpoint-id <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--creator-request-id <value>",
        "[--name <value>]",
        "--rule-type <value>",
        "--domain-name <value>",
        "[--target-ips <value>]",
        "[--resolver-endpoint-id <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string, for example, a date/time stamp.\n\n--name (string)\n\nA friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.\n\n--rule-type (string)\n\nWhen you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD .\n\nWhen you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM .\n\nFor example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify FORWARD for RuleType . To then have Resolver process queries for apex.example.com, you create a rule and specify SYSTEM for RuleType .\n\nCurrently, only Resolver can create rules that have a value of RECURSIVE for RuleType .\n\nPossible values:\n\nFORWARD\n\nSYSTEM\n\nRECURSIVE\n\n--domain-name (string)\n\nDNS queries for this domain name are forwarded to the IP addresses that you specify in TargetIps . If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).\n\n--target-ips (list)\n\nThe IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a space.\n\nTargetIps is available only when the value of Rule type is FORWARD .\n\n(structure)\n\nIn a CreateResolverRule request, an array of the IPs that you want to forward DNS queries to.\n\nIp -> (string)\n\nOne IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n\nPort -> (integer)\n\nThe port at Ip that you want to forward DNS queries to.\n\nShorthand Syntax:\n\nIp=string,Port=integer ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Ip\": \"string\",\n    \"Port\": integer\n  }\n  ...\n]\n\n\n--resolver-endpoint-id (string)\n\nThe ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in TargetIps .\n\n--tags (list)\n\nA list of the tag keys and values that you want to associate with the endpoint.\n\n(structure)\n\nOne tag that you want to add to the specified resource. A tag consists of a Key (a name for the tag) and a Value .\n\nKey -> (string)\n\nThe name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of Key might be account-id .\n\nValue -> (string)\n\nThe value for the tag. For example, if Key is account-id , then Value might be the ID of the customer account that you’re creating the resource for.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverRule -> (structure)\n\nInformation about the CreateResolverRule request, including the status of the request.\n\nId -> (string)\n\nThe ID that Resolver assigned to the Resolver rule when you created it.\n\nCreatorRequestId -> (string)\n\nA unique string that you specified when you created the Resolver rule. CreatorRequestId identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver rule specified by Id .\n\nDomainName -> (string)\n\nDNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps . If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver rule.\n\nStatusMessage -> (string)\n\nA detailed description of the status of a Resolver rule.\n\nRuleType -> (string)\n\nWhen you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD .\n\nWhen you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM .\n\nFor example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify FORWARD for RuleType . To then have Resolver process queries for apex.example.com, you create a rule and specify SYSTEM for RuleType .\n\nCurrently, only Resolver can create rules that have a value of RECURSIVE for RuleType .\n\nName -> (string)\n\nThe name for the Resolver rule, which you specified when you created the Resolver rule.\n\nTargetIps -> (list)\n\nAn array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.\n\n(structure)\n\nIn a CreateResolverRule request, an array of the IPs that you want to forward DNS queries to.\n\nIp -> (string)\n\nOne IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n\nPort -> (integer)\n\nThe port at Ip that you want to forward DNS queries to.\n\nResolverEndpointId -> (string)\n\nThe ID of the endpoint that the rule is associated with.\n\nOwnerId -> (string)\n\nWhen a rule is shared with another Amazon Web Services account, the account ID of the account that the rule is shared with.\n\nShareStatus -> (string)\n\nWhether the rule is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n\nCreationTime -> (string)\n\nThe date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo create a Resolver rule\n\nThe following create-resolver-rule example creates a Resolver forwarding rule. The rule uses the outbound endpoint rslvr-out-d5e5920e37example to forward DNS queries for example.com to the IP address 192.0.2.44.\n\naws route53resolver create-resolver-rule \\\n    --creator-request-id 2020-01-02-18:47 \\\n    --domain-name example.com \\\n    --name my-rule \\\n    --resolver-endpoint-id rslvr-out-d5e5920e37example \\\n    --rule-type FORWARD \\\n    --target-ips=\"Ip=192.0.2.44\"\n\n\nOutput:\n\n{\n    \"ResolverRule\": {\n        \"Id\": \"rslvr-rr-42b60677c0example\",\n        \"CreatorRequestId\": \"2020-01-02-18:47\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-rule/rslvr-rr-42b60677c0example\",\n        \"DomainName\": \"example.com.\",\n        \"Status\": \"COMPLETE\",\n        \"StatusMessage\": \"[Trace id: 1-5dc4b177-ff1d9d001a0f80005example] Successfully created Resolver Rule.\",\n        \"RuleType\": \"FORWARD\",\n        \"Name\": \"my-rule\",\n        \"TargetIps\": [\n            {\n                \"Ip\": \"192.0.2.44\",\n                \"Port\": 53\n            }\n        ],\n        \"ResolverEndpointId\": \"rslvr-out-d5e5920e37example\",\n        \"OwnerId\": \"111122223333\",\n        \"ShareStatus\": \"NOT_SHARED\"\n    }\n}\n\n\nAlternatively, when you have complicated parameters with multiple values, you can choose to include the parameters in a JSON file and then specify the file when you call create-resolver-rule. Here’s the command, which includes a parameter that specifies the name and location of the JSON file.\n\naws route53resolver create-resolver-rule \\\n    --cli-input-json file://c:\\temp\\create-resolver-rule.json\n\n\nContents of create-resolver-rule.json:\n\n{\n    \"CreatorRequestId\": \"2020-01-02-18:47\",\n    \"Name\": \"my-rule\",\n    \"RuleType\": \"FORWARD\",\n    \"DomainName\": \"example.com\",\n    \"TargetIps\": [\n        {\n            \"Ip\": \"192.0.2.44\",\n            \"Port\": 53\n        }\n    ],\n    \"ResolverEndpointId\": \"rslvr-out-d5e5920e37example\",\n    \"Tags\": [\n        {\n            \"Key\": \"my-key\",\n            \"Value\": \"my-value\"\n        }\n    ]\n}\n\n\nFor more information about rules, see Managing Forwarding Rules in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "delete-firewall-domain-list",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/delete-firewall-domain-list.html",
      "command_description": "Description\n\nDeletes the specified domain list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-firewall-domain-list\n--firewall-domain-list-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-domain-list-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-domain-list-id (string)\n\nThe ID of the domain list that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallDomainList -> (structure)\n\nThe domain list that you just deleted.\n\nId -> (string)\n\nThe ID of the domain list.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall domain list.\n\nName -> (string)\n\nThe name of the domain list.\n\nDomainCount -> (integer)\n\nThe number of domain names that are specified in the domain list.\n\nStatus -> (string)\n\nThe status of the domain list.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the list, if available.\n\nManagedOwnerName -> (string)\n\nThe owner of the list, used only for lists that are not managed by you. For example, the managed domain list AWSManagedDomainsMalwareDomainList has the managed owner name Route 53 Resolver DNS Firewall .\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the domain list was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the domain list was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo delete a Route 53 Resolver DNS Firewall domain list\n\nThe following delete-firewall-domain-list example deletes a Route 53 Resolver DNS Firewall domain list, named test, in your AWS account.\n\naws route53resolver delete-firewall-domain-list \\\n    --firewall-domain-list-id rslvr-fdl-9e956e9ffexample\n\n\nOutput:\n\n{\n    \"FirewallDomainList\": {\n        \"Id\": \"rslvr-fdl-9e956e9ffexample\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-domain-list/rslvr-fdl-9e956e9ffexample\",\n        \"Name\": \"test\",\n        \"DomainCount\": 6,\n        \"Status\": \"DELETING\",\n        \"StatusMessage\": \"Deleting the Firewall Domain List\",\n        \"CreatorRequestId\": \"my-request-id\",\n        \"CreationTime\": \"2021-05-25T15:55:51.115365Z\",\n        \"ModificationTime\": \"2021-05-25T18:58:05.588024Z\"\n    }\n}\n\n\nFor more information, see Managing your own domain lists in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "delete-firewall-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/delete-firewall-rule.html",
      "command_description": "Description\n\nDeletes the specified firewall rule.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-firewall-rule\n--firewall-rule-group-id <value>\n--firewall-domain-list-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-rule-group-id <value>",
        "--firewall-domain-list-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-rule-group-id (string)\n\nThe unique identifier of the firewall rule group that you want to delete the rule from.\n\n--firewall-domain-list-id (string)\n\nThe ID of the domain list that’s used in the rule.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRule -> (structure)\n\nThe specification for the firewall rule that you just deleted.\n\nFirewallRuleGroupId -> (string)\n\nThe unique identifier of the firewall rule group of the rule.\n\nFirewallDomainListId -> (string)\n\nThe ID of the domain list that’s used in the rule.\n\nName -> (string)\n\nThe name of the rule.\n\nPriority -> (integer)\n\nThe priority of the rule in the rule group. This value must be unique within the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.\n\nAction -> (string)\n\nThe action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule’s domain list:\n\nALLOW - Permit the request to go through.\n\nALERT - Permit the request to go through but send an alert to the logs.\n\nBLOCK - Disallow the request. If this is specified, additional handling details are provided in the rule’s BlockResponse setting.\n\nBlockResponse -> (string)\n\nThe way that you want DNS Firewall to block the request. Used for the rule action setting BLOCK .\n\nNODATA - Respond indicating that the query was successful, but no response is available for it.\n\nNXDOMAIN - Respond indicating that the domain name that’s in the query doesn’t exist.\n\nOVERRIDE - Provide a custom override in the response. This option requires custom handling details in the rule’s BlockOverride* settings.\n\nBlockOverrideDomain -> (string)\n\nThe custom DNS record to send back in response to the query. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nBlockOverrideDnsType -> (string)\n\nThe DNS record’s type. This determines the format of the record value that you provided in BlockOverrideDomain . Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nBlockOverrideTtl -> (integer)\n\nThe recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of executing the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the rule was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the rule was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo delete a firewall rule\n\nThe following delete-firewall-rule example deletes a specified firewall rule.\n\naws route53resolver delete-firewall-rule \\\n    --firewall-rule-group-id rslvr-frg-47f93271fexample \\\n    --firewall-domain-list-id rslvr-fdl-9e956e9ffexample\n\n\nOutput:\n\n{\n    \"FirewallRule\": {\n        \"FirewallRuleGroupId\": \"rslvr-frg-47f93271fexample\",\n        \"FirewallDomainListId\": \"rslvr-fdl-9e956e9ffexample\",\n        \"Name\": \"allow-rule\",\n        \"Priority\": 102,\n        \"Action\": \"ALLOW\",\n        \"CreatorRequestId\": \"d81e3fb7-020b-415e-939f-EXAMPLE11111\",\n        \"CreationTime\": \"2021-05-25T21:44:00.346093Z\",\n        \"ModificationTime\": \"2021-05-25T21:45:59.611600Z\"\n    }\n}\n\n\nFor more information, see Managing rule groups and rules in DNS Firewall in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "delete-firewall-rule-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/delete-firewall-rule-group.html",
      "command_description": "Description\n\nDeletes the specified firewall rule group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-firewall-rule-group\n--firewall-rule-group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-rule-group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-rule-group-id (string)\n\nThe unique identifier of the firewall rule group that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRuleGroup -> (structure)\n\nA collection of rules used to filter DNS network traffic.\n\nId -> (string)\n\nThe ID of the rule group.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) of the rule group.\n\nName -> (string)\n\nThe name of the rule group.\n\nRuleCount -> (integer)\n\nThe number of rules in the rule group.\n\nStatus -> (string)\n\nThe status of the domain list.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the rule group, if available.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID for the account that created the rule group. When a rule group is shared with your account, this is the account that has shared the rule group with you.\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nShareStatus -> (string)\n\nWhether the rule group is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Sharing is configured through Resource Access Manager (RAM).\n\nCreationTime -> (string)\n\nThe date and time that the rule group was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the rule group was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo delete a firewall rule group\n\nThe following delete-firewall-rule-group example deletes a firewall rule group.\n\naws route53resolver delete-firewall-rule-group \\\n    --firewall-rule-group-id rslvr-frg-47f93271fexample\n\n\nOutput:\n\n{\n    \"FirewallRuleGroup\": {\n        \"Id\": \"rslvr-frg-47f93271fexample\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-rule-group/rslvr-frg-47f93271fexample\",\n        \"Name\": \"test\",\n        \"RuleCount\": 0,\n        \"Status\": \"UPDATING\",\n        \"StatusMessage\": \"Updating Firewall Rule Group\",\n        \"OwnerId\": \"123456789012\",\n        \"CreatorRequestId\": \"my-request-id\",\n        \"ShareStatus\": \"NOT_SHARED\",\n        \"CreationTime\": \"2021-05-25T18:59:26.490017Z\",\n        \"ModificationTime\": \"2021-05-25T21:51:53.028688Z\"\n    }\n}\n\n\nFor more information, see Managing rule groups and rules in DNS Firewall in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "delete-resolver-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/delete-resolver-endpoint.html",
      "command_description": "Description\n\nDeletes a Resolver endpoint. The effect of deleting a Resolver endpoint depends on whether it’s an inbound or an outbound Resolver endpoint:\n\nInbound : DNS queries from your network are no longer routed to the DNS service for the specified VPC.\n\nOutbound : DNS queries from a VPC are no longer routed to your network.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resolver-endpoint\n--resolver-endpoint-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-endpoint-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-endpoint-id (string)\n\nThe ID of the Resolver endpoint that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverEndpoint -> (structure)\n\nInformation about the DeleteResolverEndpoint request, including the status of the request.\n\nId -> (string)\n\nThe ID of the Resolver endpoint.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the Resolver endpoint. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver endpoint.\n\nName -> (string)\n\nThe name that you assigned to the Resolver endpoint when you submitted a CreateResolverEndpoint request.\n\nSecurityGroupIds -> (list)\n\nThe ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you’re using for DNS queries on your network.\n\n(string)\n\nDirection -> (string)\n\nIndicates whether the Resolver endpoint allows inbound or outbound DNS queries:\n\nINBOUND : allows DNS queries to your VPC from your network\n\nOUTBOUND : allows DNS queries from your VPC to your network\n\nIpAddressCount -> (integer)\n\nThe number of IP addresses that the Resolver endpoint can use for DNS queries.\n\nHostVPCId -> (string)\n\nThe ID of the VPC that you want to create the Resolver endpoint in.\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver endpoint. Valid values include the following:\n\nCREATING : Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.\n\nOPERATIONAL : The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.\n\nUPDATING : Resolver is associating or disassociating one or more network interfaces with this endpoint.\n\nAUTO_RECOVERING : Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see Limits on Route 53 Resolver .\n\nACTION_NEEDED : This endpoint is unhealthy, and Resolver can’t automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn’t available, add another IP address and then delete the IP address that isn’t available. (An endpoint must always include at least two IP addresses.) A status of ACTION_NEEDED can have a variety of causes. Here are two common causes:\n\nOne or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.\n\nThe network interface couldn’t be created for some reason that’s outside the control of Resolver.\n\nDELETING : Resolver is deleting this endpoint and the associated network interfaces.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the Resolver endpoint.\n\nCreationTime -> (string)\n\nThe date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo delete a Resolver endpoint\n\nThe following delete-resolver-endpoint example deletes the specified endpoint.\n\nImportant If you delete an inbound endpoint, DNS queries from your network are no longer forwarded to Resolver in the VPC that you specified in the endpoint. If you delete an outbound endpoint, Resolver stops forwarding DNS queries from your VPC to your network for rules that specify the deleted outbound endpoint.\n\naws route53resolver delete-resolver-endpoint \\\n    --resolver-endpoint-id rslvr-in-497098ad59example\n\n\nOutput:\n\n{\n    \"ResolverEndpoint\": {\n        \"Id\": \"rslvr-in-497098ad59example\",\n        \"CreatorRequestId\": \"AWSConsole.25.157290example\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-endpoint/rslvr-in-497098ad59example\",\n        \"Name\": \"my-inbound-endpoint\",\n        \"SecurityGroupIds\": [\n            \"sg-05cd7b25d6example\"\n        ],\n        \"Direction\": \"INBOUND\",\n        \"IpAddressCount\": 5,\n        \"HostVPCId\": \"vpc-304bexam\",\n        \"Status\": \"DELETING\",\n        \"StatusMessage\": \"[Trace id: 1-5dc5b658-811b5be0922bbc382example] Deleting ResolverEndpoint.\",\n        \"CreationTime\": \"2020-01-01T23:25:45.538Z\",\n        \"ModificationTime\": \"2020-01-02T23:25:45.538Z\"\n    }\n}\n"
    },
    {
      "command_name": "delete-resolver-query-log-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/delete-resolver-query-log-config.html",
      "command_description": "Description\n\nDeletes a query logging configuration. When you delete a configuration, Resolver stops logging DNS queries for all of the Amazon VPCs that are associated with the configuration. This also applies if the query logging configuration is shared with other Amazon Web Services accounts, and the other accounts have associated VPCs with the shared configuration.\n\nBefore you can delete a query logging configuration, you must first disassociate all VPCs from the configuration. See DisassociateResolverQueryLogConfig .\n\nIf you used Resource Access Manager (RAM) to share a query logging configuration with other accounts, you must stop sharing the configuration before you can delete a configuration. The accounts that you shared the configuration with can first disassociate VPCs that they associated with the configuration, but that’s not necessary. If you stop sharing the configuration, those VPCs are automatically disassociated from the configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resolver-query-log-config\n--resolver-query-log-config-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-query-log-config-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-query-log-config-id (string)\n\nThe ID of the query logging configuration that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverQueryLogConfig -> (structure)\n\nInformation about the query logging configuration that you deleted, including the status of the request.\n\nId -> (string)\n\nThe ID for the query logging configuration.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID for the account that created the query logging configuration.\n\nStatus -> (string)\n\nThe status of the specified query logging configuration. Valid values include the following:\n\nCREATING : Resolver is creating the query logging configuration.\n\nCREATED : The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n\nDELETING : Resolver is deleting this query logging configuration.\n\nFAILED : Resolver can’t deliver logs to the location that is specified in the query logging configuration. Here are two common causes:\n\nThe specified destination (for example, an Amazon S3 bucket) was deleted.\n\nPermissions don’t allow sending logs to the destination.\n\nShareStatus -> (string)\n\nAn indication of whether the query logging configuration is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Sharing is configured through Resource Access Manager (RAM).\n\nAssociationCount -> (integer)\n\nThe number of VPCs that are associated with the query logging configuration.\n\nArn -> (string)\n\nThe ARN for the query logging configuration.\n\nName -> (string)\n\nThe name of the query logging configuration.\n\nDestinationArn -> (string)\n\nThe ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the query logging configuration. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nCreationTime -> (string)\n\nThe date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC)."
    },
    {
      "command_name": "delete-resolver-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/delete-resolver-rule.html",
      "command_description": "Description\n\nDeletes a Resolver rule. Before you can delete a Resolver rule, you must disassociate it from all the VPCs that you associated the Resolver rule with. For more information, see DisassociateResolverRule .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resolver-rule\n--resolver-rule-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-rule-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-rule-id (string)\n\nThe ID of the Resolver rule that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverRule -> (structure)\n\nInformation about the DeleteResolverRule request, including the status of the request.\n\nId -> (string)\n\nThe ID that Resolver assigned to the Resolver rule when you created it.\n\nCreatorRequestId -> (string)\n\nA unique string that you specified when you created the Resolver rule. CreatorRequestId identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver rule specified by Id .\n\nDomainName -> (string)\n\nDNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps . If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver rule.\n\nStatusMessage -> (string)\n\nA detailed description of the status of a Resolver rule.\n\nRuleType -> (string)\n\nWhen you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD .\n\nWhen you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM .\n\nFor example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify FORWARD for RuleType . To then have Resolver process queries for apex.example.com, you create a rule and specify SYSTEM for RuleType .\n\nCurrently, only Resolver can create rules that have a value of RECURSIVE for RuleType .\n\nName -> (string)\n\nThe name for the Resolver rule, which you specified when you created the Resolver rule.\n\nTargetIps -> (list)\n\nAn array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.\n\n(structure)\n\nIn a CreateResolverRule request, an array of the IPs that you want to forward DNS queries to.\n\nIp -> (string)\n\nOne IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n\nPort -> (integer)\n\nThe port at Ip that you want to forward DNS queries to.\n\nResolverEndpointId -> (string)\n\nThe ID of the endpoint that the rule is associated with.\n\nOwnerId -> (string)\n\nWhen a rule is shared with another Amazon Web Services account, the account ID of the account that the rule is shared with.\n\nShareStatus -> (string)\n\nWhether the rule is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n\nCreationTime -> (string)\n\nThe date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo delete a Resolver rule\n\nThe following delete-resolver-rule example deletes the specified rule.\n\nNote If a rule is associated with any VPCs, you must first disassociate the rule from the VPCs before you can delete it.\n\naws route53resolver delete-resolver-rule \\\n    --resolver-rule-id rslvr-rr-5b3809426bexample\n\n\nOutput:\n\n{\n    \"ResolverRule\": {\n        \"Id\": \"rslvr-rr-5b3809426bexample\",\n        \"CreatorRequestId\": \"2020-01-03-18:47\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-rule/rslvr-rr-5b3809426bexample\",\n        \"DomainName\": \"zenith.example.com.\",\n        \"Status\": \"DELETING\",\n        \"StatusMessage\": \"[Trace id: 1-5dc5e05b-602e67b052cb74f05example] Deleting Resolver Rule.\",\n        \"RuleType\": \"FORWARD\",\n        \"Name\": \"my-resolver-rule\",\n        \"TargetIps\": [\n            {\n                \"Ip\": \"192.0.2.50\",\n                \"Port\": 53\n            }\n        ],\n        \"ResolverEndpointId\": \"rslvr-out-d5e5920e3example\",\n        \"OwnerId\": \"111122223333\",\n        \"ShareStatus\": \"NOT_SHARED\"\n    }\n}\n"
    },
    {
      "command_name": "disassociate-firewall-rule-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/disassociate-firewall-rule-group.html",
      "command_description": "Description\n\nDisassociates a FirewallRuleGroup from a VPC, to remove DNS filtering from the VPC.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-firewall-rule-group\n--firewall-rule-group-association-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-rule-group-association-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-rule-group-association-id (string)\n\nThe identifier of the FirewallRuleGroupAssociation .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRuleGroupAssociation -> (structure)\n\nThe firewall rule group association that you just removed.\n\nId -> (string)\n\nThe identifier for the association.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall rule group association.\n\nFirewallRuleGroupId -> (string)\n\nThe unique identifier of the firewall rule group.\n\nVpcId -> (string)\n\nThe unique identifier of the VPC that is associated with the rule group.\n\nName -> (string)\n\nThe name of the association.\n\nPriority -> (integer)\n\nThe setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC. DNS Firewall filters VPC traffic starting from rule group with the lowest numeric priority setting.\n\nMutationProtection -> (string)\n\nIf enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections.\n\nManagedOwnerName -> (string)\n\nThe owner of the association, used only for associations that are not managed by you. If you use Firewall Manager to manage your DNS Firewalls, then this reports Firewall Manager as the managed owner.\n\nStatus -> (string)\n\nThe current status of the association.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the response, if available.\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the association was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the association was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo disassociate a firewall rule group from a VPC\n\nThe following disassociate-firewall-rule-group example disassociates a DNS Firewall rule group from an Amazon VPC.\n\naws route53resolver disassociate-firewall-rule-group \\\n    --firewall-rule-group-association-id rslvr-frgassoc-57e8873d7example\n\n\nOutput:\n\n{\n    \"FirewallRuleGroupAssociation\": {\n        \"Id\": \"rslvr-frgassoc-57e8873d7example\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-rule-group-association/rslvr-frgassoc-57e8873d7example\",\n        \"FirewallRuleGroupId\": \"rslvr-frg-47f93271fexample\",\n        \"VpcId\": \"vpc-31e92222\",\n        \"Name\": \"test-association\",\n        \"Priority\": 103,\n        \"MutationProtection\": \"DISABLED\",\n        \"Status\": \"DELETING\",\n        \"StatusMessage\": \"Deleting the Firewall Rule Group Association\",\n        \"CreatorRequestId\": \"2ca1a304-32b3-4f5f-bc4c-EXAMPLE11111\",\n        \"CreationTime\": \"2021-05-25T21:47:48.755768Z\",\n        \"ModificationTime\": \"2021-05-25T21:51:02.377887Z\"\n    }\n}\n\n\nFor more information, see Managing associations between your VPC and Route 53 Resolver DNS Firewall rule groups in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "disassociate-resolver-endpoint-ip-address",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/disassociate-resolver-endpoint-ip-address.html",
      "command_description": "Description\n\nRemoves IP addresses from an inbound or an outbound Resolver endpoint. If you want to remove more than one IP address, submit one DisassociateResolverEndpointIpAddress request for each IP address.\n\nTo add an IP address to an endpoint, see AssociateResolverEndpointIpAddress .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-resolver-endpoint-ip-address\n--resolver-endpoint-id <value>\n--ip-address <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-endpoint-id <value>",
        "--ip-address <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-endpoint-id (string)\n\nThe ID of the Resolver endpoint that you want to disassociate an IP address from.\n\n--ip-address (structure)\n\nThe IPv4 address that you want to remove from a Resolver endpoint.\n\nIpId -> (string)\n\nOnly when removing an IP address from a Resolver endpoint : The ID of the IP address that you want to remove. To get this ID, use GetResolverEndpoint .\n\nSubnetId -> (string)\n\nThe ID of the subnet that includes the IP address that you want to update. To get this ID, use GetResolverEndpoint .\n\nIp -> (string)\n\nThe new IP address.\n\nShorthand Syntax:\n\nIpId=string,SubnetId=string,Ip=string\n\n\nJSON Syntax:\n\n{\n  \"IpId\": \"string\",\n  \"SubnetId\": \"string\",\n  \"Ip\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverEndpoint -> (structure)\n\nThe response to an DisassociateResolverEndpointIpAddress request.\n\nId -> (string)\n\nThe ID of the Resolver endpoint.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the Resolver endpoint. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver endpoint.\n\nName -> (string)\n\nThe name that you assigned to the Resolver endpoint when you submitted a CreateResolverEndpoint request.\n\nSecurityGroupIds -> (list)\n\nThe ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you’re using for DNS queries on your network.\n\n(string)\n\nDirection -> (string)\n\nIndicates whether the Resolver endpoint allows inbound or outbound DNS queries:\n\nINBOUND : allows DNS queries to your VPC from your network\n\nOUTBOUND : allows DNS queries from your VPC to your network\n\nIpAddressCount -> (integer)\n\nThe number of IP addresses that the Resolver endpoint can use for DNS queries.\n\nHostVPCId -> (string)\n\nThe ID of the VPC that you want to create the Resolver endpoint in.\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver endpoint. Valid values include the following:\n\nCREATING : Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.\n\nOPERATIONAL : The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.\n\nUPDATING : Resolver is associating or disassociating one or more network interfaces with this endpoint.\n\nAUTO_RECOVERING : Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see Limits on Route 53 Resolver .\n\nACTION_NEEDED : This endpoint is unhealthy, and Resolver can’t automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn’t available, add another IP address and then delete the IP address that isn’t available. (An endpoint must always include at least two IP addresses.) A status of ACTION_NEEDED can have a variety of causes. Here are two common causes:\n\nOne or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.\n\nThe network interface couldn’t be created for some reason that’s outside the control of Resolver.\n\nDELETING : Resolver is deleting this endpoint and the associated network interfaces.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the Resolver endpoint.\n\nCreationTime -> (string)\n\nThe date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo disassociate an IP address from a Resolver endpoint\n\nThe following disassociate-resolver-endpoint-ip-address example removes an IP address from a specified Resolver inbound or outbound endpoint.\n\nNote An endpoint must have at least two IP addresses. If an endpoint currently has only two IP addresses and you want to replace one address with another address, you must first use associate-resolver-endpoint-ip-address to associate the new IP address. Then you can disassociate one of the original IP addresses from the endpoint.\n\naws route53resolver disassociate-resolver-endpoint-ip-address \\\n    --resolver-endpoint-id rslvr-in-f9ab8a03f1example \\\n    --ip-address=\"SubnetId=subnet-12d8a459,Ip=172.31.40.121\"\n\n\nOutput:\n\n{\n    \"ResolverEndpoint\": {\n        \"Id\": \"rslvr-in-f9ab8a03f1example\",\n        \"CreatorRequestId\": \"2020-01-01-18:47\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-endpoint/rslvr-in-f9ab8a03f1example\",\n        \"Name\": \"my-inbound-endpoint\",\n        \"SecurityGroupIds\": [\n            \"sg-f62bexam\"\n        ],\n        \"Direction\": \"INBOUND\",\n        \"IpAddressCount\": 3,\n        \"HostVPCId\": \"vpc-304bexam\",\n        \"Status\": \"UPDATING\",\n        \"StatusMessage\": \"Updating the Resolver Endpoint\",\n        \"CreationTime\": \"2020-01-01T23:02:29.583Z\",\n        \"ModificationTime\": \"2020-01-05T23:02:29.583Z\"\n    }\n}\n"
    },
    {
      "command_name": "disassociate-resolver-query-log-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/disassociate-resolver-query-log-config.html",
      "command_description": "Description\n\nDisassociates a VPC from a query logging configuration.\n\nNote\n\nBefore you can delete a query logging configuration, you must first disassociate all VPCs from the configuration. If you used Resource Access Manager (RAM) to share a query logging configuration with other accounts, VPCs can be disassociated from the configuration in the following ways:\n\nThe accounts that you shared the configuration with can disassociate VPCs from the configuration.\n\nYou can stop sharing the configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-resolver-query-log-config\n--resolver-query-log-config-id <value>\n--resource-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-query-log-config-id <value>",
        "--resource-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-query-log-config-id (string)\n\nThe ID of the query logging configuration that you want to disassociate a specified VPC from.\n\n--resource-id (string)\n\nThe ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverQueryLogConfigAssociation -> (structure)\n\nA complex type that contains settings for the association that you deleted between an Amazon VPC and a query logging configuration.\n\nId -> (string)\n\nThe ID of the query logging association.\n\nResolverQueryLogConfigId -> (string)\n\nThe ID of the query logging configuration that a VPC is associated with.\n\nResourceId -> (string)\n\nThe ID of the Amazon VPC that is associated with the query logging configuration.\n\nStatus -> (string)\n\nThe status of the specified query logging association. Valid values include the following:\n\nCREATING : Resolver is creating an association between an Amazon VPC and a query logging configuration.\n\nCREATED : The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n\nDELETING : Resolver is deleting this query logging association.\n\nFAILED : Resolver either couldn’t create or couldn’t delete the query logging association.\n\nError -> (string)\n\nIf the value of Status is FAILED , the value of Error indicates the cause:\n\nDESTINATION_NOT_FOUND : The specified destination (for example, an Amazon S3 bucket) was deleted.\n\nACCESS_DENIED : Permissions don’t allow sending logs to the destination.\n\nIf the value of Status is a value other than FAILED , Error is null.\n\nErrorMessage -> (string)\n\nContains additional information about the error. If the value or Error is null, the value of ErrorMessage also is null.\n\nCreationTime -> (string)\n\nThe date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC)."
    },
    {
      "command_name": "disassociate-resolver-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/disassociate-resolver-rule.html",
      "command_description": "Description\n\nRemoves the association between a specified Resolver rule and a specified VPC.\n\nWarning\n\nIf you disassociate a Resolver rule from a VPC, Resolver stops forwarding DNS queries for the domain name that you specified in the Resolver rule.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-resolver-rule\n--vpc-id <value>\n--resolver-rule-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--vpc-id <value>",
        "--resolver-rule-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--vpc-id (string)\n\nThe ID of the VPC that you want to disassociate the Resolver rule from.\n\n--resolver-rule-id (string)\n\nThe ID of the Resolver rule that you want to disassociate from the specified VPC.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverRuleAssociation -> (structure)\n\nInformation about the DisassociateResolverRule request, including the status of the request.\n\nId -> (string)\n\nThe ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an AssociateResolverRule request.\n\nResolverRuleId -> (string)\n\nThe ID of the Resolver rule that you associated with the VPC that is specified by VPCId .\n\nName -> (string)\n\nThe name of an association between a Resolver rule and a VPC.\n\nVPCId -> (string)\n\nThe ID of the VPC that you associated the Resolver rule with.\n\nStatus -> (string)\n\nA code that specifies the current status of the association between a Resolver rule and a VPC.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the association between a Resolver rule and a VPC.",
      "command_examples": "Examples\n\nTo disassociate a Resolver rule from an Amazon VPC\n\nThe following disassociate-resolver-rule example removes the association between the specified Resolver rule and the specified VPC. You can disassociate a rule from a VPC in the following circumstances:\n\nFor DNS queries that originate in this VPC, you want Resolver to stop forwarding queries to your network for the domain name that is specified in the rule.\n\nYou want to delete the forwarding rule. If a rule is currently associated with one or more VPCs, you must disassociate the rule from all VPCs before you can delete it.\n\naws route53resolver disassociate-resolver-rule \\\n    --resolver-rule-id rslvr-rr-4955cb98ceexample \\\n    --vpc-id vpc-304bexam\n\n\nOutput:\n\n{\n    \"ResolverRuleAssociation\": {\n        \"Id\": \"rslvr-rrassoc-322f4e8b9cexample\",\n        \"ResolverRuleId\": \"rslvr-rr-4955cb98ceexample\",\n        \"Name\": \"my-resolver-rule-association\",\n        \"VPCId\": \"vpc-304bexam\",\n        \"Status\": \"DELETING\",\n        \"StatusMessage\": \"[Trace id: 1-5dc5ffa2-a26c38004c1f94006example] Deleting Association\"\n    }\n}\n"
    },
    {
      "command_name": "get-firewall-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-firewall-config.html",
      "command_description": "Description\n\nRetrieves the configuration of the firewall behavior provided by DNS Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon VPC).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-firewall-config\n--resource-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id (string)\n\nThe ID of the VPC from Amazon VPC that the configuration is for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallConfig -> (structure)\n\nConfiguration of the firewall behavior provided by DNS Firewall for a single VPC from AmazonVPC.\n\nId -> (string)\n\nThe ID of the firewall configuration.\n\nResourceId -> (string)\n\nThe ID of the VPC that this firewall configuration applies to.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID of the owner of the VPC that this firewall configuration applies to.\n\nFirewallFailOpen -> (string)\n\nDetermines how DNS Firewall operates during failures, for example when all traffic that is sent to DNS Firewall fails to receive a reply.\n\nBy default, fail open is disabled, which means the failure mode is closed. This approach favors security over availability. DNS Firewall returns a failure error when it is unable to properly evaluate a query.\n\nIf you enable this option, the failure mode is open. This approach favors availability over security. DNS Firewall allows queries to proceed if it is unable to properly evaluate them.\n\nThis behavior is only enforced for VPCs that have at least one DNS Firewall rule group association.",
      "command_examples": "Examples\n\nTo get a firewall config for a VPC\n\nThe following get-firewall-config example retrieves the DNS Firewall behavior for the specified VPC.\n\naws route53resolver get-firewall-config \\\n    --resource-id vpc-31e92222\n\n\nOutput:\n\n{\n    \"FirewallConfig\": {\n        \"Id\": \"rslvr-fc-86016850cexample\",\n        \"ResourceId\": \"vpc-31e9222\",\n        \"OwnerId\": \"123456789012\",\n        \"FirewallFailOpen\": \"DISABLED\"\n    }\n}\n\n\nFor more information, see DNS Firewall VPC configuration in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "get-firewall-domain-list",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-firewall-domain-list.html",
      "command_description": "Description\n\nRetrieves the specified firewall domain list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-firewall-domain-list\n--firewall-domain-list-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-domain-list-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-domain-list-id (string)\n\nThe ID of the domain list.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallDomainList -> (structure)\n\nThe domain list that you requested.\n\nId -> (string)\n\nThe ID of the domain list.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall domain list.\n\nName -> (string)\n\nThe name of the domain list.\n\nDomainCount -> (integer)\n\nThe number of domain names that are specified in the domain list.\n\nStatus -> (string)\n\nThe status of the domain list.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the list, if available.\n\nManagedOwnerName -> (string)\n\nThe owner of the list, used only for lists that are not managed by you. For example, the managed domain list AWSManagedDomainsMalwareDomainList has the managed owner name Route 53 Resolver DNS Firewall .\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the domain list was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the domain list was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo get a Route 53 Resolver DNS Firewall domain list\n\nThe following get-firewall-domain-list example retrieves the domain list with the ID you specify.\n\naws route53resolver get-firewall-domain-list \\\n    --firewall-domain-list-id rslvr-fdl-42b60677cexample\n\n\nOutput:\n\n{\n    \"FirewallDomainList\": {\n        \"Id\": \"rslvr-fdl-9e956e9ffexample\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:123457689012:firewall-domain-list/rslvr-fdl-42b60677cexample\",\n        \"Name\": \"test\",\n        \"DomainCount\": 0,\n        \"Status\": \"COMPLETE\",\n        \"StatusMessage\": \"Created Firewall Domain List\",\n        \"CreatorRequestId\": \"my-request-id\",\n        \"CreationTime\": \"2021-05-25T15:55:51.115365Z\",\n        \"ModificationTime\": \"2021-05-25T15:55:51.115365Z\"\n    }\n}\n\n\nFor more information, see Managing your own domain lists in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "get-firewall-rule-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-firewall-rule-group.html",
      "command_description": "Description\n\nRetrieves the specified firewall rule group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-firewall-rule-group\n--firewall-rule-group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-rule-group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-rule-group-id (string)\n\nThe unique identifier of the firewall rule group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRuleGroup -> (structure)\n\nA collection of rules used to filter DNS network traffic.\n\nId -> (string)\n\nThe ID of the rule group.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) of the rule group.\n\nName -> (string)\n\nThe name of the rule group.\n\nRuleCount -> (integer)\n\nThe number of rules in the rule group.\n\nStatus -> (string)\n\nThe status of the domain list.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the rule group, if available.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID for the account that created the rule group. When a rule group is shared with your account, this is the account that has shared the rule group with you.\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nShareStatus -> (string)\n\nWhether the rule group is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Sharing is configured through Resource Access Manager (RAM).\n\nCreationTime -> (string)\n\nThe date and time that the rule group was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the rule group was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo get a Firewall rule group\n\nThe following get-firewall-rule-group example retrieves information about a DNS Firewall rule group with the ID you provide.\n\naws route53resolver get-firewall-rule-group \\\n    --firewall-rule-group-id rslvr-frg-47f93271fexample\n\n\nOutput:\n\n{\n    \"FirewallRuleGroup\": {\n        \"Id\": \"rslvr-frg-47f93271fexample\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-rule-group/rslvr-frg-47f93271fexample\",\n        \"Name\": \"test\",\n        \"RuleCount\": 0,\n        \"Status\": \"COMPLETE\",\n        \"StatusMessage\": \"Created Firewall Rule Group\",\n        \"OwnerId\": \"123456789012\",\n        \"CreatorRequestId\": \"my-request-id\",\n        \"ShareStatus\": \"NOT_SHARED\",\n        \"CreationTime\": \"2021-05-25T18:59:26.490017Z\",\n        \"ModificationTime\": \"2021-05-25T18:59:26.490017Z\"\n    }\n}\n\n\nFor more information, see Managing rule groups and rules in DNS Firewall in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "get-firewall-rule-group-association",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-firewall-rule-group-association.html",
      "command_description": "Description\n\nRetrieves a firewall rule group association, which enables DNS filtering for a VPC with one rule group. A VPC can have more than one firewall rule group association, and a rule group can be associated with more than one VPC.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-firewall-rule-group-association\n--firewall-rule-group-association-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-rule-group-association-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-rule-group-association-id (string)\n\nThe identifier of the FirewallRuleGroupAssociation .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRuleGroupAssociation -> (structure)\n\nThe association that you requested.\n\nId -> (string)\n\nThe identifier for the association.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall rule group association.\n\nFirewallRuleGroupId -> (string)\n\nThe unique identifier of the firewall rule group.\n\nVpcId -> (string)\n\nThe unique identifier of the VPC that is associated with the rule group.\n\nName -> (string)\n\nThe name of the association.\n\nPriority -> (integer)\n\nThe setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC. DNS Firewall filters VPC traffic starting from rule group with the lowest numeric priority setting.\n\nMutationProtection -> (string)\n\nIf enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections.\n\nManagedOwnerName -> (string)\n\nThe owner of the association, used only for associations that are not managed by you. If you use Firewall Manager to manage your DNS Firewalls, then this reports Firewall Manager as the managed owner.\n\nStatus -> (string)\n\nThe current status of the association.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the response, if available.\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the association was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the association was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo get a firewall rule group association\n\nThe following get-firewall-rule-group-association example retrieves a firewall rule group association.\n\naws route53resolver get-firewall-rule-group-association \\\n    --firewall-rule-group-association-id rslvr-frgassoc-57e8873d7example\n\n\nOutput:\n\n{\n    \"FirewallRuleGroupAssociation\": {\n        \"Id\": \"rslvr-frgassoc-57e8873d7example\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-rule-group-association/rslvr-frgassoc-57e8873d7example\",\n        \"FirewallRuleGroupId\": \"rslvr-frg-47f93271fexample\",\n        \"VpcId\": \"vpc-31e92222\",\n        \"Name\": \"test-association\",\n        \"Priority\": 101,\n        \"MutationProtection\": \"DISABLED\",\n        \"Status\": \"COMPLETE\",\n        \"StatusMessage\": \"Finished rule group association update\",\n        \"CreatorRequestId\": \"2ca1a304-32b3-4f5f-bc4c-EXAMPLE11111\",\n        \"CreationTime\": \"2021-05-25T21:47:48.755768Z\",\n        \"ModificationTime\": \"2021-05-25T21:47:48.755768Z\"\n    }\n}\n\n\nFor more information, see Managing associations between your VPC and Route 53 Resolver DNS Firewall rule groups in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "get-firewall-rule-group-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-firewall-rule-group-policy.html",
      "command_description": "Description\n\nReturns the Identity and Access Management (Amazon Web Services IAM) policy for sharing the specified rule group. You can use the policy to share the rule group using Resource Access Manager (RAM).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-firewall-rule-group-policy\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN (Amazon Resource Name) for the rule group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRuleGroupPolicy -> (string)\n\nThe Identity and Access Management (Amazon Web Services IAM) policy for sharing the specified rule group. You can use the policy to share the rule group using Resource Access Manager (RAM).",
      "command_examples": "Examples\n\nTo get an AWS IAM policy\n\nThe following get-firewall-rule-group-policy example gets the AWS Identity and Access Management (AWS IAM) policy for sharing the specified rule group.\n\naws route53resolver get-firewall-rule-group-policy \\\n    --arn arn:aws:route53resolver:us-west-2:AWS_ACCOUNT_ID:firewall-rule-group/rslvr-frg-47f93271fexample\n\n\nOutput:\n\n{\n    \"FirewallRuleGroupPolicy\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"test\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::AWS_ACCOUNT_ID:root\\\"},\\\"Action\\\":[\\\"route53resolver:GetFirewallRuleGroup\\\",\\\"route53resolver:ListFirewallRuleGroups\\\"],\\\"Resource\\\":\\\"arn:aws:route53resolver:us-east-1:AWS_ACCOUNT_ID:firewall-rule-group/rslvr-frg-47f93271fexample\\\"}]}\"\n}\n\n\nFor more information, see Managing rule groups and rules in DNS Firewall in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "get-resolver-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-resolver-config.html",
      "command_description": "Description\n\nRetrieves the behavior configuration of Route 53 Resolver behavior for a single VPC from Amazon Virtual Private Cloud.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resolver-config\n--resource-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id (string)\n\nResource ID of the Amazon VPC that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverConfig -> (structure)\n\nInformation about the behavior configuration of Route 53 Resolver behavior for the VPC you specified in the GetResolverConfig request.\n\nId -> (string)\n\nID for the Resolver configuration.\n\nResourceId -> (string)\n\nThe ID of the Amazon Virtual Private Cloud VPC that you’re configuring Resolver for.\n\nOwnerId -> (string)\n\nThe owner account ID of the Amazon Virtual Private Cloud VPC.\n\nAutodefinedReverse -> (string)\n\nThe status of whether or not the Resolver will create autodefined rules for reverse DNS lookups. This is enabled by default. The status can be one of following:\n\nStatus of the rules generated by VPCs based on CIDR/Region for reverse DNS resolution. The status can be one of following:\n\nENABLING: Autodefined rules for reverse DNS lookups are being enabled but are not complete.\n\nENABLED: Autodefined rules for reverse DNS lookups are enabled.\n\nDISABLING: Autodefined rules for reverse DNS lookups are being disabled but are not complete.\n\nDISABLED: Autodefined rules for reverse DNS lookups are disabled."
    },
    {
      "command_name": "get-resolver-dnssec-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-resolver-dnssec-config.html",
      "command_description": "Description\n\nGets DNSSEC validation information for a specified resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resolver-dnssec-config\n--resource-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id (string)\n\nThe ID of the virtual private cloud (VPC) for the DNSSEC validation status.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverDNSSECConfig -> (structure)\n\nThe information about a configuration for DNSSEC validation.\n\nId -> (string)\n\nThe ID for a configuration for DNSSEC validation.\n\nOwnerId -> (string)\n\nThe owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.\n\nResourceId -> (string)\n\nThe ID of the virtual private cloud (VPC) that you’re configuring the DNSSEC validation status for.\n\nValidationStatus -> (string)\n\nThe validation status for a DNSSEC configuration. The status can be one of the following:\n\nENABLING: DNSSEC validation is being enabled but is not complete.\n\nENABLED: DNSSEC validation is enabled.\n\nDISABLING: DNSSEC validation is being disabled but is not complete.\n\nDISABLED DNSSEC validation is disabled."
    },
    {
      "command_name": "get-resolver-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-resolver-endpoint.html",
      "command_description": "Description\n\nGets information about a specified Resolver endpoint, such as whether it’s an inbound or an outbound Resolver endpoint, and the current status of the endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resolver-endpoint\n--resolver-endpoint-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-endpoint-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-endpoint-id (string)\n\nThe ID of the Resolver endpoint that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverEndpoint -> (structure)\n\nInformation about the Resolver endpoint that you specified in a GetResolverEndpoint request.\n\nId -> (string)\n\nThe ID of the Resolver endpoint.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the Resolver endpoint. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver endpoint.\n\nName -> (string)\n\nThe name that you assigned to the Resolver endpoint when you submitted a CreateResolverEndpoint request.\n\nSecurityGroupIds -> (list)\n\nThe ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you’re using for DNS queries on your network.\n\n(string)\n\nDirection -> (string)\n\nIndicates whether the Resolver endpoint allows inbound or outbound DNS queries:\n\nINBOUND : allows DNS queries to your VPC from your network\n\nOUTBOUND : allows DNS queries from your VPC to your network\n\nIpAddressCount -> (integer)\n\nThe number of IP addresses that the Resolver endpoint can use for DNS queries.\n\nHostVPCId -> (string)\n\nThe ID of the VPC that you want to create the Resolver endpoint in.\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver endpoint. Valid values include the following:\n\nCREATING : Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.\n\nOPERATIONAL : The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.\n\nUPDATING : Resolver is associating or disassociating one or more network interfaces with this endpoint.\n\nAUTO_RECOVERING : Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see Limits on Route 53 Resolver .\n\nACTION_NEEDED : This endpoint is unhealthy, and Resolver can’t automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn’t available, add another IP address and then delete the IP address that isn’t available. (An endpoint must always include at least two IP addresses.) A status of ACTION_NEEDED can have a variety of causes. Here are two common causes:\n\nOne or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.\n\nThe network interface couldn’t be created for some reason that’s outside the control of Resolver.\n\nDELETING : Resolver is deleting this endpoint and the associated network interfaces.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the Resolver endpoint.\n\nCreationTime -> (string)\n\nThe date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo get information about a Resolver endpoint\n\nThe following get-resolver-endpoint example displays details for the outbound specified endpoint. You can use get-resolver-endpoint for both inbound and outbound endpoints by specifying the applicable endpoint ID.\n\naws route53resolver get-resolver-endpoint \\\n    --resolver-endpoint-id rslvr-out-d5e5920e37example\n\n\nOutput:\n\n{\n    \"ResolverEndpoint\": {\n        \"Id\": \"rslvr-out-d5e5920e37example\",\n        \"CreatorRequestId\": \"2020-01-01-18:47\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-endpoint/rslvr-out-d5e5920e37example\",\n        \"Name\": \"my-outbound-endpoint\",\n        \"SecurityGroupIds\": [\n            \"sg-05cd7b25d6example\"\n        ],\n        \"Direction\": \"OUTBOUND\",\n        \"IpAddressCount\": 2,\n        \"HostVPCId\": \"vpc-304bexam\",\n        \"Status\": \"OPERATIONAL\",\n        \"StatusMessage\": \"This Resolver Endpoint is operational.\",\n        \"CreationTime\": \"2020-01-01T23:50:50.979Z\",\n        \"ModificationTime\": \"2020-01-02T23:50:50.979Z\"\n    }\n}\n\n\nFor more information, see Values That You Specify When You Create or Edit Inbound Endpoints in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "get-resolver-query-log-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-resolver-query-log-config.html",
      "command_description": "Description\n\nGets information about a specified Resolver query logging configuration, such as the number of VPCs that the configuration is logging queries for and the location that logs are sent to.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resolver-query-log-config\n--resolver-query-log-config-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-query-log-config-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-query-log-config-id (string)\n\nThe ID of the Resolver query logging configuration that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverQueryLogConfig -> (structure)\n\nInformation about the Resolver query logging configuration that you specified in a GetQueryLogConfig request.\n\nId -> (string)\n\nThe ID for the query logging configuration.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID for the account that created the query logging configuration.\n\nStatus -> (string)\n\nThe status of the specified query logging configuration. Valid values include the following:\n\nCREATING : Resolver is creating the query logging configuration.\n\nCREATED : The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n\nDELETING : Resolver is deleting this query logging configuration.\n\nFAILED : Resolver can’t deliver logs to the location that is specified in the query logging configuration. Here are two common causes:\n\nThe specified destination (for example, an Amazon S3 bucket) was deleted.\n\nPermissions don’t allow sending logs to the destination.\n\nShareStatus -> (string)\n\nAn indication of whether the query logging configuration is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Sharing is configured through Resource Access Manager (RAM).\n\nAssociationCount -> (integer)\n\nThe number of VPCs that are associated with the query logging configuration.\n\nArn -> (string)\n\nThe ARN for the query logging configuration.\n\nName -> (string)\n\nThe name of the query logging configuration.\n\nDestinationArn -> (string)\n\nThe ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the query logging configuration. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nCreationTime -> (string)\n\nThe date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC)."
    },
    {
      "command_name": "get-resolver-query-log-config-association",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-resolver-query-log-config-association.html",
      "command_description": "Description\n\nGets information about a specified association between a Resolver query logging configuration and an Amazon VPC. When you associate a VPC with a query logging configuration, Resolver logs DNS queries that originate in that VPC.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resolver-query-log-config-association\n--resolver-query-log-config-association-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-query-log-config-association-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-query-log-config-association-id (string)\n\nThe ID of the Resolver query logging configuration association that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverQueryLogConfigAssociation -> (structure)\n\nInformation about the Resolver query logging configuration association that you specified in a GetQueryLogConfigAssociation request.\n\nId -> (string)\n\nThe ID of the query logging association.\n\nResolverQueryLogConfigId -> (string)\n\nThe ID of the query logging configuration that a VPC is associated with.\n\nResourceId -> (string)\n\nThe ID of the Amazon VPC that is associated with the query logging configuration.\n\nStatus -> (string)\n\nThe status of the specified query logging association. Valid values include the following:\n\nCREATING : Resolver is creating an association between an Amazon VPC and a query logging configuration.\n\nCREATED : The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n\nDELETING : Resolver is deleting this query logging association.\n\nFAILED : Resolver either couldn’t create or couldn’t delete the query logging association.\n\nError -> (string)\n\nIf the value of Status is FAILED , the value of Error indicates the cause:\n\nDESTINATION_NOT_FOUND : The specified destination (for example, an Amazon S3 bucket) was deleted.\n\nACCESS_DENIED : Permissions don’t allow sending logs to the destination.\n\nIf the value of Status is a value other than FAILED , Error is null.\n\nErrorMessage -> (string)\n\nContains additional information about the error. If the value or Error is null, the value of ErrorMessage also is null.\n\nCreationTime -> (string)\n\nThe date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC)."
    },
    {
      "command_name": "get-resolver-query-log-config-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-resolver-query-log-config-policy.html",
      "command_description": "Description\n\nGets information about a query logging policy. A query logging policy specifies the Resolver query logging operations and resources that you want to allow another Amazon Web Services account to be able to use.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resolver-query-log-config-policy\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the query logging configuration that you want to get the query logging policy for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverQueryLogConfigPolicy -> (string)\n\nInformation about the query logging policy for the query logging configuration that you specified in a GetResolverQueryLogConfigPolicy request."
    },
    {
      "command_name": "get-resolver-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-resolver-rule.html",
      "command_description": "Description\n\nGets information about a specified Resolver rule, such as the domain name that the rule forwards DNS queries for and the ID of the outbound Resolver endpoint that the rule is associated with.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resolver-rule\n--resolver-rule-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-rule-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-rule-id (string)\n\nThe ID of the Resolver rule that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverRule -> (structure)\n\nInformation about the Resolver rule that you specified in a GetResolverRule request.\n\nId -> (string)\n\nThe ID that Resolver assigned to the Resolver rule when you created it.\n\nCreatorRequestId -> (string)\n\nA unique string that you specified when you created the Resolver rule. CreatorRequestId identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver rule specified by Id .\n\nDomainName -> (string)\n\nDNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps . If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver rule.\n\nStatusMessage -> (string)\n\nA detailed description of the status of a Resolver rule.\n\nRuleType -> (string)\n\nWhen you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD .\n\nWhen you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM .\n\nFor example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify FORWARD for RuleType . To then have Resolver process queries for apex.example.com, you create a rule and specify SYSTEM for RuleType .\n\nCurrently, only Resolver can create rules that have a value of RECURSIVE for RuleType .\n\nName -> (string)\n\nThe name for the Resolver rule, which you specified when you created the Resolver rule.\n\nTargetIps -> (list)\n\nAn array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.\n\n(structure)\n\nIn a CreateResolverRule request, an array of the IPs that you want to forward DNS queries to.\n\nIp -> (string)\n\nOne IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n\nPort -> (integer)\n\nThe port at Ip that you want to forward DNS queries to.\n\nResolverEndpointId -> (string)\n\nThe ID of the endpoint that the rule is associated with.\n\nOwnerId -> (string)\n\nWhen a rule is shared with another Amazon Web Services account, the account ID of the account that the rule is shared with.\n\nShareStatus -> (string)\n\nWhether the rule is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n\nCreationTime -> (string)\n\nThe date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo get information about a Resolver rule\n\nThe following get-resolver-rule example displays details about the specified Resolver rule, such as the domain name that the rule forwards DNS queries for and the ID of the outbound resolver endpoint that the rule is associated with.\n\naws route53resolver get-resolver-rule \\\n    --resolver-rule-id rslvr-rr-42b60677c0example\n\n\nOutput:\n\n{\n    \"ResolverRule\": {\n        \"Id\": \"rslvr-rr-42b60677c0example\",\n        \"CreatorRequestId\": \"2020-01-01-18:47\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-rule/rslvr-rr-42b60677c0example\",\n        \"DomainName\": \"example.com.\",\n        \"Status\": \"COMPLETE\",\n        \"StatusMessage\": \"[Trace id: 1-5dc4b177-ff1d9d001a0f80005example] Successfully created Resolver Rule.\",\n        \"RuleType\": \"FORWARD\",\n        \"Name\": \"my-rule\",\n        \"TargetIps\": [\n            {\n                \"Ip\": \"192.0.2.45\",\n                \"Port\": 53\n            }\n        ],\n        \"ResolverEndpointId\": \"rslvr-out-d5e5920e37example\",\n        \"OwnerId\": \"111122223333\",\n        \"ShareStatus\": \"NOT_SHARED\"\n    }\n}\n\n\nFor more information, see Values That You Specify When You Create or Edit Rules in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "get-resolver-rule-association",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-resolver-rule-association.html",
      "command_description": "Description\n\nGets information about an association between a specified Resolver rule and a VPC. You associate a Resolver rule and a VPC using AssociateResolverRule .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resolver-rule-association\n--resolver-rule-association-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-rule-association-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-rule-association-id (string)\n\nThe ID of the Resolver rule association that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverRuleAssociation -> (structure)\n\nInformation about the Resolver rule association that you specified in a GetResolverRuleAssociation request.\n\nId -> (string)\n\nThe ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an AssociateResolverRule request.\n\nResolverRuleId -> (string)\n\nThe ID of the Resolver rule that you associated with the VPC that is specified by VPCId .\n\nName -> (string)\n\nThe name of an association between a Resolver rule and a VPC.\n\nVPCId -> (string)\n\nThe ID of the VPC that you associated the Resolver rule with.\n\nStatus -> (string)\n\nA code that specifies the current status of the association between a Resolver rule and a VPC.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the association between a Resolver rule and a VPC.",
      "command_examples": "Examples\n\nTo get information about the association between a Resolver rule and a VPC\n\nThe following get-resolver-rule-association example displays details about the association between a specified Resolver rule and a VPC. You associate a resolver rule and a VPC using associate-resolver-rule.\n\naws route53resolver get-resolver-rule-association \\\n    --resolver-rule-association-id rslvr-rrassoc-d61cbb2c8bexample\n\n\nOutput:\n\n{\n    \"ResolverRuleAssociation\": {\n        \"Id\": \"rslvr-rrassoc-d61cbb2c8bexample\",\n        \"ResolverRuleId\": \"rslvr-rr-42b60677c0example\",\n        \"Name\": \"my-resolver-rule-association\",\n        \"VPCId\": \"vpc-304bexam\",\n        \"Status\": \"COMPLETE\",\n        \"StatusMessage\": \"\"\n    }\n}\n"
    },
    {
      "command_name": "get-resolver-rule-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/get-resolver-rule-policy.html",
      "command_description": "Description\n\nGets information about the Resolver rule policy for a specified rule. A Resolver rule policy includes the rule that you want to share with another account, the account that you want to share the rule with, and the Resolver operations that you want to allow the account to use.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resolver-rule-policy\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ID of the Resolver rule that you want to get the Resolver rule policy for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverRulePolicy -> (string)\n\nThe Resolver rule policy for the rule that you specified in a GetResolverRulePolicy request."
    },
    {
      "command_name": "import-firewall-domains",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/import-firewall-domains.html",
      "command_description": "Description\n\nImports domain names from a file into a domain list, for use in a DNS firewall rule group.\n\nEach domain specification in your domain list must satisfy the following requirements:\n\nIt can optionally start with * (asterisk).\n\nWith the exception of the optional starting asterisk, it must only contain the following characters: A-Z , a-z , 0-9 , - (hyphen).\n\nIt must be from 1-255 characters in length.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  import-firewall-domains\n--firewall-domain-list-id <value>\n--operation <value>\n--domain-file-url <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-domain-list-id <value>",
        "--operation <value>",
        "--domain-file-url <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-domain-list-id (string)\n\nThe ID of the domain list that you want to modify with the import operation.\n\n--operation (string)\n\nWhat you want DNS Firewall to do with the domains that are listed in the file. This must be set to REPLACE , which updates the domain list to exactly match the list in the file.\n\nPossible values:\n\nREPLACE\n\n--domain-file-url (string)\n\nThe fully qualified URL or URI of the file stored in Amazon Simple Storage Service (Amazon S3) that contains the list of domains to import.\n\nThe file must be in an S3 bucket that’s in the same Region as your DNS Firewall. The file must be a text file and must contain a single domain per line.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nId -> (string)\n\nThe Id of the firewall domain list that DNS Firewall just updated.\n\nName -> (string)\n\nThe name of the domain list.\n\nStatus -> (string)\n\nStatusMessage -> (string)\n\nAdditional information about the status of the list, if available.",
      "command_examples": "Examples\n\nTo import domains into a domain list\n\nThe following import-firewall-domains example imports a set of domains from a file into a DNS Firewall domain list that you specify.\n\naws route53resolver import-firewall-domains \\\n    --firewall-domain-list-id rslvr-fdl-d61cbb2cbexample \\\n    --operation REPLACE \\\n    --domain-file-url s3://PATH/TO/YOUR/FILE\n\n\nOutput:\n\n{\n    \"Id\": \"rslvr-fdl-d61cbb2cbexample\",\n    \"Name\": \"test\",\n    \"Status\": \"IMPORTING\",\n    \"StatusMessage\": \"Importing domains from provided file.\"\n}\n\n\nFor more information, see Managing your own domain lists in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-firewall-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-firewall-configs.html",
      "command_description": "Description\n\nRetrieves the firewall configurations that you have defined. DNS Firewall uses the configurations to manage firewall behavior for your VPCs.\n\nA single call might return only a partial list of the configurations. For information, see MaxResults .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-firewall-configs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FirewallConfigs",
      "command_synopsis": "Synopsis\n  list-firewall-configs\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf objects are still available for retrieval, Resolver returns this token in the response. To retrieve the next batch of objects, provide this token in your next request.\n\nFirewallConfigs -> (list)\n\nThe configurations for the firewall behavior provided by DNS Firewall for VPCs from Amazon Virtual Private Cloud (Amazon VPC).\n\n(structure)\n\nConfiguration of the firewall behavior provided by DNS Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon VPC).\n\nId -> (string)\n\nThe ID of the firewall configuration.\n\nResourceId -> (string)\n\nThe ID of the VPC that this firewall configuration applies to.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID of the owner of the VPC that this firewall configuration applies to.\n\nFirewallFailOpen -> (string)\n\nDetermines how DNS Firewall operates during failures, for example when all traffic that is sent to DNS Firewall fails to receive a reply.\n\nBy default, fail open is disabled, which means the failure mode is closed. This approach favors security over availability. DNS Firewall returns a failure error when it is unable to properly evaluate a query.\n\nIf you enable this option, the failure mode is open. This approach favors availability over security. DNS Firewall allows queries to proceed if it is unable to properly evaluate them.\n\nThis behavior is only enforced for VPCs that have at least one DNS Firewall rule group association.",
      "command_examples": "Examples\n\nTo list firewall configs\n\nThe following list-firewall-configs example lists your DNS Firewall configurations.\n\naws route53resolver list-firewall-configs\n\n\nOutput:\n\n{\n    \"FirewallConfigs\": [\n        {\n            \"Id\": \"rslvr-fc-86016850cexample\",\n            \"ResourceId\": \"vpc-31e92222\",\n            \"OwnerId\": \"123456789012\",\n            \"FirewallFailOpen\": \"DISABLED\"\n        }\n    ]\n}\n\n\nFor more information, see DNS Firewall VPC configuration in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-firewall-domain-lists",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-firewall-domain-lists.html",
      "command_description": "Description\n\nRetrieves the firewall domain lists that you have defined. For each firewall domain list, you can retrieve the domains that are defined for a list by calling ListFirewallDomains .\n\nA single call to this list operation might return only a partial list of the domain lists. For information, see MaxResults .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-firewall-domain-lists is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FirewallDomainLists",
      "command_synopsis": "Synopsis\n  list-firewall-domain-lists\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf objects are still available for retrieval, Resolver returns this token in the response. To retrieve the next batch of objects, provide this token in your next request.\n\nFirewallDomainLists -> (list)\n\nA list of the domain lists that you have defined.\n\nThis might be a partial list of the domain lists that you’ve defined. For information, see MaxResults .\n\n(structure)\n\nMinimal high-level information for a firewall domain list. The action ListFirewallDomainLists returns an array of these objects.\n\nTo retrieve full information for a firewall domain list, call GetFirewallDomainList and ListFirewallDomains .\n\nId -> (string)\n\nThe ID of the domain list.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall domain list metadata.\n\nName -> (string)\n\nThe name of the domain list.\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nManagedOwnerName -> (string)\n\nThe owner of the list, used only for lists that are not managed by you. For example, the managed domain list AWSManagedDomainsMalwareDomainList has the managed owner name Route 53 Resolver DNS Firewall .",
      "command_examples": "Examples\n\nTo list all of Route 53 Resolver DNS Firewall domain lists\n\nThe following list-firewall-domain-lists example lists all the domain lists.\n\naws route53resolver list-firewall-domain-lists\n\n\nOutput:\n\n{\n    \"FirewallDomainLists\": [\n        {\n            \"Id\": \"rslvr-fdl-2c46f2ecfexample\",\n            \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-domain-list/rslvr-fdl-2c46f2ecfexample\",\n            \"Name\": \"AWSManagedDomainsMalwareDomainList\",\n            \"CreatorRequestId\": \"AWSManagedDomainsMalwareDomainList\",\n            \"ManagedOwnerName\": \"Route 53 Resolver DNS Firewall\"\n        },\n        {\n            \"Id\": \"rslvr-fdl-aa970e9e1example\",\n            \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-domain-list/rslvr-fdl-aa970e9e1example\",\n            \"Name\": \"AWSManagedDomainsBotnetCommandandControl\",\n            \"CreatorRequestId\": \"AWSManagedDomainsBotnetCommandandControl\",\n            \"ManagedOwnerName\": \"Route 53 Resolver DNS Firewall\"\n        },\n        {\n            \"Id\": \"rslvr-fdl-42b60677cexample\",\n            \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789111:firewall-domain-list/rslvr-fdl-42b60677cexample\",\n            \"Name\": \"test\",\n            \"CreatorRequestId\": \"my-request-id\"\n        }\n    ]\n}\n\n\nFor more information, see Route 53 Resolver DNS Firewall domain lists in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-firewall-domains",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-firewall-domains.html",
      "command_description": "Description\n\nRetrieves the domains that you have defined for the specified firewall domain list.\n\nA single call might return only a partial list of the domains. For information, see MaxResults .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-firewall-domains is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Domains",
      "command_synopsis": "Synopsis\n  list-firewall-domains\n--firewall-domain-list-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-domain-list-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-domain-list-id (string)\n\nThe ID of the domain list whose domains you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf objects are still available for retrieval, Resolver returns this token in the response. To retrieve the next batch of objects, provide this token in your next request.\n\nDomains -> (list)\n\nA list of the domains in the firewall domain list.\n\nThis might be a partial list of the domains that you’ve defined in the domain list. For information, see MaxResults .\n\n(string)",
      "command_examples": "Examples\n\nTo list domains in a domain list\n\nThe following list-firewall-domains example lists the domains in a DNS Firewall domain list that you specify.\n\naws route53resolver list-firewall-domains \\\n    --firewall-domain-list-id rslvr-fdl-d61cbb2cbexample\n\n\nOutput:\n\n{\n    \"Domains\": [\n        \"test1.com.\",\n        \"test2.com.\",\n        \"test3.com.\"\n    ]\n}\n\n\nFor more information, see Managing your own domain lists in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-firewall-rule-group-associations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-firewall-rule-group-associations.html",
      "command_description": "Description\n\nRetrieves the firewall rule group associations that you have defined. Each association enables DNS filtering for a VPC with one rule group.\n\nA single call might return only a partial list of the associations. For information, see MaxResults .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-firewall-rule-group-associations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FirewallRuleGroupAssociations",
      "command_synopsis": "Synopsis\n  list-firewall-rule-group-associations\n[--firewall-rule-group-id <value>]\n[--vpc-id <value>]\n[--priority <value>]\n[--status <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--firewall-rule-group-id <value>]",
        "[--vpc-id <value>]",
        "[--priority <value>]",
        "[--status <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-rule-group-id (string)\n\nThe unique identifier of the firewall rule group that you want to retrieve the associations for. Leave this blank to retrieve associations for any rule group.\n\n--vpc-id (string)\n\nThe unique identifier of the VPC that you want to retrieve the associations for. Leave this blank to retrieve associations for any VPC.\n\n--priority (integer)\n\nThe setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.\n\n--status (string)\n\nThe association Status setting that you want DNS Firewall to filter on for the list. If you don’t specify this, then DNS Firewall returns all associations, regardless of status.\n\nPossible values:\n\nCOMPLETE\n\nDELETING\n\nUPDATING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf objects are still available for retrieval, Resolver returns this token in the response. To retrieve the next batch of objects, provide this token in your next request.\n\nFirewallRuleGroupAssociations -> (list)\n\nA list of your firewall rule group associations.\n\nThis might be a partial list of the associations that you have defined. For information, see MaxResults .\n\n(structure)\n\nAn association between a firewall rule group and a VPC, which enables DNS filtering for the VPC.\n\nId -> (string)\n\nThe identifier for the association.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall rule group association.\n\nFirewallRuleGroupId -> (string)\n\nThe unique identifier of the firewall rule group.\n\nVpcId -> (string)\n\nThe unique identifier of the VPC that is associated with the rule group.\n\nName -> (string)\n\nThe name of the association.\n\nPriority -> (integer)\n\nThe setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC. DNS Firewall filters VPC traffic starting from rule group with the lowest numeric priority setting.\n\nMutationProtection -> (string)\n\nIf enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections.\n\nManagedOwnerName -> (string)\n\nThe owner of the association, used only for associations that are not managed by you. If you use Firewall Manager to manage your DNS Firewalls, then this reports Firewall Manager as the managed owner.\n\nStatus -> (string)\n\nThe current status of the association.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the response, if available.\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the association was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the association was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo list DNS Firewall rule group associations\n\nThe following list-firewall-rule-group-associations example lists your DNS Firewall rule group associations with Amazon VPCs.\n\naws route53resolver list-firewall-rule-group-associations\n\n\nOutput:\n\n{\n    \"FirewallRuleGroupAssociations\": [\n        {\n            \"Id\": \"rslvr-frgassoc-57e8873d7example\",\n            \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-rule-group-association/rslvr-frgassoc-57e8873d7example\",\n            \"FirewallRuleGroupId\": \"rslvr-frg-47f93271fexample\",\n            \"VpcId\": \"vpc-31e92222\",\n            \"Name\": \"test-association\",\n            \"Priority\": 101,\n            \"MutationProtection\": \"DISABLED\",\n            \"Status\": \"UPDATING\",\n            \"StatusMessage\": \"Creating Firewall Rule Group Association\",\n            \"CreatorRequestId\": \"2ca1a304-32b3-4f5f-bc4c-EXAMPLE11111\",\n            \"CreationTime\": \"2021-05-25T21:47:48.755768Z\",\n            \"ModificationTime\": \"2021-05-25T21:47:48.755768Z\"\n        }\n    ]\n}\n\n\nFor more information, see Managing associations between your VPC and Route 53 Resolver DNS Firewall rule group in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-firewall-rule-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-firewall-rule-groups.html",
      "command_description": "Description\n\nRetrieves the minimal high-level information for the rule groups that you have defined.\n\nA single call might return only a partial list of the rule groups. For information, see MaxResults .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-firewall-rule-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FirewallRuleGroups",
      "command_synopsis": "Synopsis\n  list-firewall-rule-groups\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf objects are still available for retrieval, Resolver returns this token in the response. To retrieve the next batch of objects, provide this token in your next request.\n\nFirewallRuleGroups -> (list)\n\nA list of your firewall rule groups.\n\nThis might be a partial list of the rule groups that you have defined. For information, see MaxResults .\n\n(structure)\n\nMinimal high-level information for a firewall rule group. The action ListFirewallRuleGroups returns an array of these objects.\n\nTo retrieve full information for a firewall rule group, call GetFirewallRuleGroup and ListFirewallRules .\n\nId -> (string)\n\nThe ID of the rule group.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) of the rule group.\n\nName -> (string)\n\nThe name of the rule group.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID for the account that created the rule group. When a rule group is shared with your account, this is the account that has shared the rule group with you.\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nShareStatus -> (string)\n\nWhether the rule group is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Sharing is configured through Resource Access Manager (RAM).",
      "command_examples": "Examples\n\nTo get a list of your Firewall rule groups\n\nThe following list-firewall-rule-groups example lists your DNS Firewall rule groups.\n\naws route53resolver list-firewall-rule-groups\n\n\nOutput:\n\n{\n    \"FirewallRuleGroups\": [\n        {\n            \"Id\": \"rslvr-frg-47f93271fexample\",\n            \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-rule-group/rslvr-frg-47f93271fexample\",\n            \"Name\": \"test\",\n            \"OwnerId\": \"123456789012\",\n            \"CreatorRequestId\": \"my-request-id\",\n            \"ShareStatus\": \"NOT_SHARED\"\n        }\n    ]\n}\n\n\nFor more information, see Managing rule groups and rules in DNS Firewall in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-firewall-rules",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-firewall-rules.html",
      "command_description": "Description\n\nRetrieves the firewall rules that you have defined for the specified firewall rule group. DNS Firewall uses the rules in a rule group to filter DNS network traffic for a VPC.\n\nA single call might return only a partial list of the rules. For information, see MaxResults .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-firewall-rules is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FirewallRules",
      "command_synopsis": "Synopsis\n  list-firewall-rules\n--firewall-rule-group-id <value>\n[--priority <value>]\n[--action <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-rule-group-id <value>",
        "[--priority <value>]",
        "[--action <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-rule-group-id (string)\n\nThe unique identifier of the firewall rule group that you want to retrieve the rules for.\n\n--priority (integer)\n\nOptional additional filter for the rules to retrieve.\n\nThe setting that determines the processing order of the rules in a rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.\n\n--action (string)\n\nOptional additional filter for the rules to retrieve.\n\nThe action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule’s domain list:\n\nALLOW - Permit the request to go through.\n\nALERT - Permit the request to go through but send an alert to the logs.\n\nBLOCK - Disallow the request. If this is specified, additional handling details are provided in the rule’s BlockResponse setting.\n\nPossible values:\n\nALLOW\n\nBLOCK\n\nALERT\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf objects are still available for retrieval, Resolver returns this token in the response. To retrieve the next batch of objects, provide this token in your next request.\n\nFirewallRules -> (list)\n\nA list of the rules that you have defined.\n\nThis might be a partial list of the firewall rules that you’ve defined. For information, see MaxResults .\n\n(structure)\n\nA single firewall rule in a rule group.\n\nFirewallRuleGroupId -> (string)\n\nThe unique identifier of the firewall rule group of the rule.\n\nFirewallDomainListId -> (string)\n\nThe ID of the domain list that’s used in the rule.\n\nName -> (string)\n\nThe name of the rule.\n\nPriority -> (integer)\n\nThe priority of the rule in the rule group. This value must be unique within the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.\n\nAction -> (string)\n\nThe action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule’s domain list:\n\nALLOW - Permit the request to go through.\n\nALERT - Permit the request to go through but send an alert to the logs.\n\nBLOCK - Disallow the request. If this is specified, additional handling details are provided in the rule’s BlockResponse setting.\n\nBlockResponse -> (string)\n\nThe way that you want DNS Firewall to block the request. Used for the rule action setting BLOCK .\n\nNODATA - Respond indicating that the query was successful, but no response is available for it.\n\nNXDOMAIN - Respond indicating that the domain name that’s in the query doesn’t exist.\n\nOVERRIDE - Provide a custom override in the response. This option requires custom handling details in the rule’s BlockOverride* settings.\n\nBlockOverrideDomain -> (string)\n\nThe custom DNS record to send back in response to the query. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nBlockOverrideDnsType -> (string)\n\nThe DNS record’s type. This determines the format of the record value that you provided in BlockOverrideDomain . Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nBlockOverrideTtl -> (integer)\n\nThe recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of executing the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the rule was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the rule was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo list firewall rules\n\nThe following list-firewall-rules example list all of your DNS Firewall rules within a firewall rule group.\n\naws route53resolver list-firewall-rules \\\n    --firewall-rule-group-id rslvr-frg-47f93271fexample\n\n\nOutput:\n\n{\n    \"FirewallRules\": [\n        {\n            \"FirewallRuleGroupId\": \"rslvr-frg-47f93271fexample\",\n            \"FirewallDomainListId\": \"rslvr-fdl-9e956e9ffexample\",\n            \"Name\": \"allow-rule\",\n            \"Priority\": 101,\n            \"Action\": \"ALLOW\",\n            \"CreatorRequestId\": \"d81e3fb7-020b-415e-939f-EXAMPLE11111\",\n            \"CreationTime\": \"2021-05-25T21:44:00.346093Z\",\n            \"ModificationTime\": \"2021-05-25T21:44:00.346093Z\"\n        }\n    ]\n}\n\n\nFor more information, see Managing rule groups and rules in DNS Firewall in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-resolver-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-resolver-configs.html",
      "command_description": "Description\n\nRetrieves the Resolver configurations that you have defined. Route 53 Resolver uses the configurations to manage DNS resolution behavior for your VPCs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resolver-configs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResolverConfigs",
      "command_synopsis": "Synopsis\n  list-resolver-configs\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf a response includes the last of the Resolver configurations that are associated with the current Amazon Web Services account, NextToken doesn’t appear in the response.\n\nIf a response doesn’t include the last of the configurations, you can get more configurations by submitting another ListResolverConfigs request. Get the value of NextToken that Amazon Route 53 returned in the previous response and include it in NextToken in the next request.\n\nResolverConfigs -> (list)\n\nAn array that contains one ResolverConfigs element for each Resolver configuration that is associated with the current Amazon Web Services account.\n\n(structure)\n\nA complex type that contains information about a Resolver configuration for a VPC.\n\nId -> (string)\n\nID for the Resolver configuration.\n\nResourceId -> (string)\n\nThe ID of the Amazon Virtual Private Cloud VPC that you’re configuring Resolver for.\n\nOwnerId -> (string)\n\nThe owner account ID of the Amazon Virtual Private Cloud VPC.\n\nAutodefinedReverse -> (string)\n\nThe status of whether or not the Resolver will create autodefined rules for reverse DNS lookups. This is enabled by default. The status can be one of following:\n\nStatus of the rules generated by VPCs based on CIDR/Region for reverse DNS resolution. The status can be one of following:\n\nENABLING: Autodefined rules for reverse DNS lookups are being enabled but are not complete.\n\nENABLED: Autodefined rules for reverse DNS lookups are enabled.\n\nDISABLING: Autodefined rules for reverse DNS lookups are being disabled but are not complete.\n\nDISABLED: Autodefined rules for reverse DNS lookups are disabled."
    },
    {
      "command_name": "list-resolver-dnssec-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-resolver-dnssec-configs.html",
      "command_description": "Description\n\nLists the configurations for DNSSEC validation that are associated with the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resolver-dnssec-configs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResolverDnssecConfigs",
      "command_synopsis": "Synopsis\n  list-resolver-dnssec-configs\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn optional specification to return a subset of objects.\n\n(structure)\n\nFor Resolver list operations (ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , ListResolverQueryLogConfigAssociations ), and ListResolverDnssecConfigs ), an optional specification to return a subset of objects.\n\nTo filter objects, such as Resolver endpoints or Resolver rules, you specify Name and Values . For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\nName -> (string)\n\nThe name of the parameter that you want to use to filter objects.\n\nThe valid values for Name depend on the action that you’re including the filter in, ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , or ListResolverQueryLogConfigAssociations .\n\nNote\n\nIn early versions of Resolver, values for Name were listed as uppercase, with underscore (_) delimiters. For example, CreatorRequestId was originally listed as CREATOR_REQUEST_ID . Uppercase values for Name are still supported.\n\nListResolverEndpoints\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver endpoint.\n\nDirection : Whether you want to return inbound or outbound Resolver endpoints. If you specify DIRECTION for Name , specify INBOUND or OUTBOUND for Values .\n\nHostVPCId : The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a CreateResolverEndpoint request, SubnetId indirectly identifies the VPC. In a GetResolverEndpoint request, the VPC ID for a Resolver endpoint is returned in the HostVPCId element.\n\nIpAddressCount : The number of IP addresses that you have associated with the Resolver endpoint.\n\nName : The name of the Resolver endpoint.\n\nSecurityGroupIds : The IDs of the VPC security groups that you specified when you created the Resolver endpoint.\n\nStatus : The status of the Resolver endpoint. If you specify Status for Name , specify one of the following status codes for Values : CREATING , OPERATIONAL , UPDATING , AUTO_RECOVERING , ACTION_NEEDED , or DELETING . For more information, see Status in ResolverEndpoint .\n\nListResolverRules\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver rule.\n\nDomainName : The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for Values , include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the “.” after com : example.com.\n\nName : The name of the Resolver rule.\n\nResolverEndpointId : The ID of the Resolver endpoint that the Resolver rule is associated with.\n\nNote\n\nYou can filter on the Resolver endpoint only for rules that have a value of FORWARD for RuleType .\n\nStatus : The status of the Resolver rule. If you specify Status for Name , specify one of the following status codes for Values : COMPLETE , DELETING , UPDATING , or FAILED .\n\nType : The type of the Resolver rule. If you specify TYPE for Name , specify FORWARD or SYSTEM for Values .\n\nListResolverRuleAssociations\n\nValid values for Name include the following:\n\nName : The name of the Resolver rule association.\n\nResolverRuleId : The ID of the Resolver rule that is associated with one or more VPCs.\n\nStatus : The status of the Resolver rule association. If you specify Status for Name , specify one of the following status codes for Values : CREATING , COMPLETE , DELETING , or FAILED .\n\nVPCId : The ID of the VPC that the Resolver rule is associated with.\n\nListResolverQueryLogConfigs\n\nValid values for Name include the following:\n\nArn : The ARN for the query logging configuration.\n\nAssociationCount : The number of VPCs that are associated with the query logging configuration.\n\nCreationTime : The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).\n\nCreatorRequestId : A unique string that identifies the request that created the query logging configuration.\n\nDestination : The Amazon Web Services service that you want to forward query logs to. Valid values include the following:\n\nS3\n\nCloudWatchLogs\n\nKinesisFirehose\n\nDestinationArn : The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n\nId : The ID of the query logging configuration\n\nName : The name of the query logging configuration\n\nOwnerId : The Amazon Web Services account ID for the account that created the query logging configuration.\n\nShareStatus : An indication of whether the query logging configuration is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Valid values include: NOT_SHARED , SHARED_WITH_ME , or SHARED_BY_ME .\n\nStatus : The status of the query logging configuration. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nListResolverQueryLogConfigAssociations\n\nValid values for Name include the following:\n\nCreationTime : The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).\n\nError : If the value of Status is FAILED , specify the cause: DESTINATION_NOT_FOUND or ACCESS_DENIED .\n\nId : The ID of the query logging association.\n\nResolverQueryLogConfigId : The ID of the query logging configuration that a VPC is associated with.\n\nResourceId : The ID of the Amazon VPC that is associated with the query logging configuration.\n\nStatus : The status of the query logging association. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nValues -> (list)\n\nWhen you’re using a List operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf a response includes the last of the DNSSEC configurations that are associated with the current Amazon Web Services account, NextToken doesn’t appear in the response.\n\nIf a response doesn’t include the last of the configurations, you can get more configurations by submitting another ListResolverDnssecConfigs request. Get the value of NextToken that Amazon Route 53 returned in the previous response and include it in NextToken in the next request.\n\nResolverDnssecConfigs -> (list)\n\nAn array that contains one ResolverDnssecConfig element for each configuration for DNSSEC validation that is associated with the current Amazon Web Services account.\n\n(structure)\n\nA complex type that contains information about a configuration for DNSSEC validation.\n\nId -> (string)\n\nThe ID for a configuration for DNSSEC validation.\n\nOwnerId -> (string)\n\nThe owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.\n\nResourceId -> (string)\n\nThe ID of the virtual private cloud (VPC) that you’re configuring the DNSSEC validation status for.\n\nValidationStatus -> (string)\n\nThe validation status for a DNSSEC configuration. The status can be one of the following:\n\nENABLING: DNSSEC validation is being enabled but is not complete.\n\nENABLED: DNSSEC validation is enabled.\n\nDISABLING: DNSSEC validation is being disabled but is not complete.\n\nDISABLED DNSSEC validation is disabled."
    },
    {
      "command_name": "list-resolver-endpoint-ip-addresses",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-resolver-endpoint-ip-addresses.html",
      "command_description": "Description\n\nGets the IP addresses for a specified Resolver endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resolver-endpoint-ip-addresses is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: IpAddresses",
      "command_synopsis": "Synopsis\n  list-resolver-endpoint-ip-addresses\n--resolver-endpoint-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-endpoint-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-endpoint-id (string)\n\nThe ID of the Resolver endpoint that you want to get IP addresses for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf the specified endpoint has more than MaxResults IP addresses, you can submit another ListResolverEndpointIpAddresses request to get the next group of IP addresses. In the next request, specify the value of NextToken from the previous response.\n\nMaxResults -> (integer)\n\nThe value that you specified for MaxResults in the request.\n\nIpAddresses -> (list)\n\nInformation about the IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints).\n\n(structure)\n\nIn the response to a GetResolverEndpoint request, information about the IP addresses that the Resolver endpoint uses for DNS queries.\n\nIpId -> (string)\n\nThe ID of one IP address.\n\nSubnetId -> (string)\n\nThe ID of one subnet.\n\nIp -> (string)\n\nOne IP address that the Resolver endpoint uses for DNS queries.\n\nStatus -> (string)\n\nA status code that gives the current status of the request.\n\nStatusMessage -> (string)\n\nA message that provides additional information about the status of the request.\n\nCreationTime -> (string)\n\nThe date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo list IP addresses for a specified inbound or outbound endpoint\n\nThe following list-resolver-endpoint-ip-addresses example lists information about the IP addresses that are associated with the inbound endpoint rslvr-in-f9ab8a03f1example. You can also use list-resolver-endpoint-ip-addresses for outbound endpoints by specifying the applicable endpoint ID.\n\naws route53resolver list-resolver-endpoint-ip-addresses \\\n    --resolver-endpoint-id rslvr-in-f9ab8a03f1example\n\n\nOutput:\n\n{\n    \"MaxResults\": 10,\n    \"IpAddresses\": [\n        {\n            \"IpId\": \"rni-1de60cdbfeexample\",\n            \"SubnetId\": \"subnet-ba47exam\",\n            \"Ip\": \"192.0.2.44\",\n            \"Status\": \"ATTACHED\",\n            \"StatusMessage\": \"This IP address is operational.\",\n            \"CreationTime\": \"2020-01-03T23:02:29.587Z\",\n            \"ModificationTime\": \"2020-01-03T23:03:05.555Z\"\n        },\n        {\n            \"IpId\": \"rni-aac7085e38example\",\n            \"SubnetId\": \"subnet-12d8exam\",\n            \"Ip\": \"192.0.2.45\",\n            \"Status\": \"ATTACHED\",\n            \"StatusMessage\": \"This IP address is operational.\",\n            \"CreationTime\": \"2020-01-03T23:02:29.593Z\",\n            \"ModificationTime\": \"2020-01-03T23:02:55.060Z\"\n        }\n    ]\n}\n\n\nFor more information about the values in the output, see Values That You Specify When You Create or Edit Inbound Endpoints, and Values That You Specify When You Create or Edit Outbound Endpoints, both in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-resolver-endpoints",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-resolver-endpoints.html",
      "command_description": "Description\n\nLists all the Resolver endpoints that were created using the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resolver-endpoints is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResolverEndpoints",
      "command_synopsis": "Synopsis\n  list-resolver-endpoints\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn optional specification to return a subset of Resolver endpoints, such as all inbound Resolver endpoints.\n\nNote\n\nIf you submit a second or subsequent ListResolverEndpoints request and specify the NextToken parameter, you must use the same values for Filters , if any, as in the previous request.\n\n(structure)\n\nFor Resolver list operations (ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , ListResolverQueryLogConfigAssociations ), and ListResolverDnssecConfigs ), an optional specification to return a subset of objects.\n\nTo filter objects, such as Resolver endpoints or Resolver rules, you specify Name and Values . For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\nName -> (string)\n\nThe name of the parameter that you want to use to filter objects.\n\nThe valid values for Name depend on the action that you’re including the filter in, ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , or ListResolverQueryLogConfigAssociations .\n\nNote\n\nIn early versions of Resolver, values for Name were listed as uppercase, with underscore (_) delimiters. For example, CreatorRequestId was originally listed as CREATOR_REQUEST_ID . Uppercase values for Name are still supported.\n\nListResolverEndpoints\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver endpoint.\n\nDirection : Whether you want to return inbound or outbound Resolver endpoints. If you specify DIRECTION for Name , specify INBOUND or OUTBOUND for Values .\n\nHostVPCId : The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a CreateResolverEndpoint request, SubnetId indirectly identifies the VPC. In a GetResolverEndpoint request, the VPC ID for a Resolver endpoint is returned in the HostVPCId element.\n\nIpAddressCount : The number of IP addresses that you have associated with the Resolver endpoint.\n\nName : The name of the Resolver endpoint.\n\nSecurityGroupIds : The IDs of the VPC security groups that you specified when you created the Resolver endpoint.\n\nStatus : The status of the Resolver endpoint. If you specify Status for Name , specify one of the following status codes for Values : CREATING , OPERATIONAL , UPDATING , AUTO_RECOVERING , ACTION_NEEDED , or DELETING . For more information, see Status in ResolverEndpoint .\n\nListResolverRules\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver rule.\n\nDomainName : The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for Values , include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the “.” after com : example.com.\n\nName : The name of the Resolver rule.\n\nResolverEndpointId : The ID of the Resolver endpoint that the Resolver rule is associated with.\n\nNote\n\nYou can filter on the Resolver endpoint only for rules that have a value of FORWARD for RuleType .\n\nStatus : The status of the Resolver rule. If you specify Status for Name , specify one of the following status codes for Values : COMPLETE , DELETING , UPDATING , or FAILED .\n\nType : The type of the Resolver rule. If you specify TYPE for Name , specify FORWARD or SYSTEM for Values .\n\nListResolverRuleAssociations\n\nValid values for Name include the following:\n\nName : The name of the Resolver rule association.\n\nResolverRuleId : The ID of the Resolver rule that is associated with one or more VPCs.\n\nStatus : The status of the Resolver rule association. If you specify Status for Name , specify one of the following status codes for Values : CREATING , COMPLETE , DELETING , or FAILED .\n\nVPCId : The ID of the VPC that the Resolver rule is associated with.\n\nListResolverQueryLogConfigs\n\nValid values for Name include the following:\n\nArn : The ARN for the query logging configuration.\n\nAssociationCount : The number of VPCs that are associated with the query logging configuration.\n\nCreationTime : The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).\n\nCreatorRequestId : A unique string that identifies the request that created the query logging configuration.\n\nDestination : The Amazon Web Services service that you want to forward query logs to. Valid values include the following:\n\nS3\n\nCloudWatchLogs\n\nKinesisFirehose\n\nDestinationArn : The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n\nId : The ID of the query logging configuration\n\nName : The name of the query logging configuration\n\nOwnerId : The Amazon Web Services account ID for the account that created the query logging configuration.\n\nShareStatus : An indication of whether the query logging configuration is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Valid values include: NOT_SHARED , SHARED_WITH_ME , or SHARED_BY_ME .\n\nStatus : The status of the query logging configuration. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nListResolverQueryLogConfigAssociations\n\nValid values for Name include the following:\n\nCreationTime : The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).\n\nError : If the value of Status is FAILED , specify the cause: DESTINATION_NOT_FOUND or ACCESS_DENIED .\n\nId : The ID of the query logging association.\n\nResolverQueryLogConfigId : The ID of the query logging configuration that a VPC is associated with.\n\nResourceId : The ID of the Amazon VPC that is associated with the query logging configuration.\n\nStatus : The status of the query logging association. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nValues -> (list)\n\nWhen you’re using a List operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf more than MaxResults IP addresses match the specified criteria, you can submit another ListResolverEndpoint request to get the next group of results. In the next request, specify the value of NextToken from the previous response.\n\nMaxResults -> (integer)\n\nThe value that you specified for MaxResults in the request.\n\nResolverEndpoints -> (list)\n\nThe Resolver endpoints that were created by using the current Amazon Web Services account, and that match the specified filters, if any.\n\n(structure)\n\nIn the response to a CreateResolverEndpoint , DeleteResolverEndpoint , GetResolverEndpoint , ListResolverEndpoints , or UpdateResolverEndpoint request, a complex type that contains settings for an existing inbound or outbound Resolver endpoint.\n\nId -> (string)\n\nThe ID of the Resolver endpoint.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the Resolver endpoint. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver endpoint.\n\nName -> (string)\n\nThe name that you assigned to the Resolver endpoint when you submitted a CreateResolverEndpoint request.\n\nSecurityGroupIds -> (list)\n\nThe ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you’re using for DNS queries on your network.\n\n(string)\n\nDirection -> (string)\n\nIndicates whether the Resolver endpoint allows inbound or outbound DNS queries:\n\nINBOUND : allows DNS queries to your VPC from your network\n\nOUTBOUND : allows DNS queries from your VPC to your network\n\nIpAddressCount -> (integer)\n\nThe number of IP addresses that the Resolver endpoint can use for DNS queries.\n\nHostVPCId -> (string)\n\nThe ID of the VPC that you want to create the Resolver endpoint in.\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver endpoint. Valid values include the following:\n\nCREATING : Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.\n\nOPERATIONAL : The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.\n\nUPDATING : Resolver is associating or disassociating one or more network interfaces with this endpoint.\n\nAUTO_RECOVERING : Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see Limits on Route 53 Resolver .\n\nACTION_NEEDED : This endpoint is unhealthy, and Resolver can’t automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn’t available, add another IP address and then delete the IP address that isn’t available. (An endpoint must always include at least two IP addresses.) A status of ACTION_NEEDED can have a variety of causes. Here are two common causes:\n\nOne or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.\n\nThe network interface couldn’t be created for some reason that’s outside the control of Resolver.\n\nDELETING : Resolver is deleting this endpoint and the associated network interfaces.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the Resolver endpoint.\n\nCreationTime -> (string)\n\nThe date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo list Resolver endpoints in an AWS Region\n\nThe following list-resolver-endpoints example lists the inbound and outbound Resolver endpoints that exist in the current account.\n\naws route53resolver list-resolver-endpoints\n\n\nOutput:\n\n{\n    \"MaxResults\": 10,\n    \"ResolverEndpoints\": [\n        {\n            \"Id\": \"rslvr-in-497098ad59example\",\n            \"CreatorRequestId\": \"2020-01-01-18:47\",\n            \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-endpoint/rslvr-in-497098ad59example\",\n            \"Name\": \"my-inbound-endpoint\",\n            \"SecurityGroupIds\": [\n                \"sg-05cd7b25d6example\"\n            ],\n            \"Direction\": \"INBOUND\",\n            \"IpAddressCount\": 2,\n            \"HostVPCId\": \"vpc-304bexam\",\n            \"Status\": \"OPERATIONAL\",\n            \"StatusMessage\": \"This Resolver Endpoint is operational.\",\n            \"CreationTime\": \"2020-01-01T23:25:45.538Z\",\n            \"ModificationTime\": \"2020-01-01T23:25:45.538Z\"\n        },\n        {\n            \"Id\": \"rslvr-out-d5e5920e37example\",\n            \"CreatorRequestId\": \"2020-01-01-18:48\",\n            \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-endpoint/rslvr-out-d5e5920e37example\",\n            \"Name\": \"my-outbound-endpoint\",\n            \"SecurityGroupIds\": [\n                \"sg-05cd7b25d6example\"\n            ],\n            \"Direction\": \"OUTBOUND\",\n            \"IpAddressCount\": 2,\n            \"HostVPCId\": \"vpc-304bexam\",\n            \"Status\": \"OPERATIONAL\",\n            \"StatusMessage\": \"This Resolver Endpoint is operational.\",\n            \"CreationTime\": \"2020-01-01T23:50:50.979Z\",\n            \"ModificationTime\": \"2020-01-01T23:50:50.979Z\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-resolver-query-log-config-associations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-resolver-query-log-config-associations.html",
      "command_description": "Description\n\nLists information about associations between Amazon VPCs and query logging configurations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resolver-query-log-config-associations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResolverQueryLogConfigAssociations",
      "command_synopsis": "Synopsis\n  list-resolver-query-log-config-associations\n[--filters <value>]\n[--sort-by <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--sort-by <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn optional specification to return a subset of query logging associations.\n\nNote\n\nIf you submit a second or subsequent ListResolverQueryLogConfigAssociations request and specify the NextToken parameter, you must use the same values for Filters , if any, as in the previous request.\n\n(structure)\n\nFor Resolver list operations (ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , ListResolverQueryLogConfigAssociations ), and ListResolverDnssecConfigs ), an optional specification to return a subset of objects.\n\nTo filter objects, such as Resolver endpoints or Resolver rules, you specify Name and Values . For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\nName -> (string)\n\nThe name of the parameter that you want to use to filter objects.\n\nThe valid values for Name depend on the action that you’re including the filter in, ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , or ListResolverQueryLogConfigAssociations .\n\nNote\n\nIn early versions of Resolver, values for Name were listed as uppercase, with underscore (_) delimiters. For example, CreatorRequestId was originally listed as CREATOR_REQUEST_ID . Uppercase values for Name are still supported.\n\nListResolverEndpoints\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver endpoint.\n\nDirection : Whether you want to return inbound or outbound Resolver endpoints. If you specify DIRECTION for Name , specify INBOUND or OUTBOUND for Values .\n\nHostVPCId : The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a CreateResolverEndpoint request, SubnetId indirectly identifies the VPC. In a GetResolverEndpoint request, the VPC ID for a Resolver endpoint is returned in the HostVPCId element.\n\nIpAddressCount : The number of IP addresses that you have associated with the Resolver endpoint.\n\nName : The name of the Resolver endpoint.\n\nSecurityGroupIds : The IDs of the VPC security groups that you specified when you created the Resolver endpoint.\n\nStatus : The status of the Resolver endpoint. If you specify Status for Name , specify one of the following status codes for Values : CREATING , OPERATIONAL , UPDATING , AUTO_RECOVERING , ACTION_NEEDED , or DELETING . For more information, see Status in ResolverEndpoint .\n\nListResolverRules\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver rule.\n\nDomainName : The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for Values , include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the “.” after com : example.com.\n\nName : The name of the Resolver rule.\n\nResolverEndpointId : The ID of the Resolver endpoint that the Resolver rule is associated with.\n\nNote\n\nYou can filter on the Resolver endpoint only for rules that have a value of FORWARD for RuleType .\n\nStatus : The status of the Resolver rule. If you specify Status for Name , specify one of the following status codes for Values : COMPLETE , DELETING , UPDATING , or FAILED .\n\nType : The type of the Resolver rule. If you specify TYPE for Name , specify FORWARD or SYSTEM for Values .\n\nListResolverRuleAssociations\n\nValid values for Name include the following:\n\nName : The name of the Resolver rule association.\n\nResolverRuleId : The ID of the Resolver rule that is associated with one or more VPCs.\n\nStatus : The status of the Resolver rule association. If you specify Status for Name , specify one of the following status codes for Values : CREATING , COMPLETE , DELETING , or FAILED .\n\nVPCId : The ID of the VPC that the Resolver rule is associated with.\n\nListResolverQueryLogConfigs\n\nValid values for Name include the following:\n\nArn : The ARN for the query logging configuration.\n\nAssociationCount : The number of VPCs that are associated with the query logging configuration.\n\nCreationTime : The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).\n\nCreatorRequestId : A unique string that identifies the request that created the query logging configuration.\n\nDestination : The Amazon Web Services service that you want to forward query logs to. Valid values include the following:\n\nS3\n\nCloudWatchLogs\n\nKinesisFirehose\n\nDestinationArn : The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n\nId : The ID of the query logging configuration\n\nName : The name of the query logging configuration\n\nOwnerId : The Amazon Web Services account ID for the account that created the query logging configuration.\n\nShareStatus : An indication of whether the query logging configuration is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Valid values include: NOT_SHARED , SHARED_WITH_ME , or SHARED_BY_ME .\n\nStatus : The status of the query logging configuration. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nListResolverQueryLogConfigAssociations\n\nValid values for Name include the following:\n\nCreationTime : The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).\n\nError : If the value of Status is FAILED , specify the cause: DESTINATION_NOT_FOUND or ACCESS_DENIED .\n\nId : The ID of the query logging association.\n\nResolverQueryLogConfigId : The ID of the query logging configuration that a VPC is associated with.\n\nResourceId : The ID of the Amazon VPC that is associated with the query logging configuration.\n\nStatus : The status of the query logging association. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nValues -> (list)\n\nWhen you’re using a List operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--sort-by (string)\n\nThe element that you want Resolver to sort query logging associations by.\n\nNote\n\nIf you submit a second or subsequent ListResolverQueryLogConfigAssociations request and specify the NextToken parameter, you must use the same value for SortBy , if any, as in the previous request.\n\nValid values include the following elements:\n\nCreationTime : The ID of the query logging association.\n\nError : If the value of Status is FAILED , the value of Error indicates the cause:\n\nDESTINATION_NOT_FOUND : The specified destination (for example, an Amazon S3 bucket) was deleted.\n\nACCESS_DENIED : Permissions don’t allow sending logs to the destination.\n\nIf Status is a value other than FAILED , ERROR is null.\n\nId : The ID of the query logging association\n\nResolverQueryLogConfigId : The ID of the query logging configuration\n\nResourceId : The ID of the VPC that is associated with the query logging configuration\n\nStatus : The current status of the configuration. Valid values include the following:\n\nCREATING : Resolver is creating an association between an Amazon VPC and a query logging configuration.\n\nCREATED : The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n\nDELETING : Resolver is deleting this query logging association.\n\nFAILED : Resolver either couldn’t create or couldn’t delete the query logging association. Here are two common causes:\n\nThe specified destination (for example, an Amazon S3 bucket) was deleted.\n\nPermissions don’t allow sending logs to the destination.\n\n--sort-order (string)\n\nIf you specified a value for SortBy , the order that you want query logging associations to be listed in, ASCENDING or DESCENDING .\n\nNote\n\nIf you submit a second or subsequent ListResolverQueryLogConfigAssociations request and specify the NextToken parameter, you must use the same value for SortOrder , if any, as in the previous request.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf there are more than MaxResults query logging associations, you can submit another ListResolverQueryLogConfigAssociations request to get the next group of associations. In the next request, specify the value of NextToken from the previous response.\n\nTotalCount -> (integer)\n\nThe total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a ListResolverQueryLogConfigAssociations response, depending on the values that you specify in the request.\n\nTotalFilteredCount -> (integer)\n\nThe total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the ListResolverQueryLogConfigAssociations request. For the total number of associations that were created by the current account in the specified Region, see TotalCount .\n\nResolverQueryLogConfigAssociations -> (list)\n\nA list that contains one ResolverQueryLogConfigAssociations element for each query logging association that matches the values that you specified for Filter .\n\n(structure)\n\nIn the response to an AssociateResolverQueryLogConfig , DisassociateResolverQueryLogConfig , GetResolverQueryLogConfigAssociation , or ListResolverQueryLogConfigAssociations , request, a complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.\n\nId -> (string)\n\nThe ID of the query logging association.\n\nResolverQueryLogConfigId -> (string)\n\nThe ID of the query logging configuration that a VPC is associated with.\n\nResourceId -> (string)\n\nThe ID of the Amazon VPC that is associated with the query logging configuration.\n\nStatus -> (string)\n\nThe status of the specified query logging association. Valid values include the following:\n\nCREATING : Resolver is creating an association between an Amazon VPC and a query logging configuration.\n\nCREATED : The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n\nDELETING : Resolver is deleting this query logging association.\n\nFAILED : Resolver either couldn’t create or couldn’t delete the query logging association.\n\nError -> (string)\n\nIf the value of Status is FAILED , the value of Error indicates the cause:\n\nDESTINATION_NOT_FOUND : The specified destination (for example, an Amazon S3 bucket) was deleted.\n\nACCESS_DENIED : Permissions don’t allow sending logs to the destination.\n\nIf the value of Status is a value other than FAILED , Error is null.\n\nErrorMessage -> (string)\n\nContains additional information about the error. If the value or Error is null, the value of ErrorMessage also is null.\n\nCreationTime -> (string)\n\nThe date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC)."
    },
    {
      "command_name": "list-resolver-query-log-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-resolver-query-log-configs.html",
      "command_description": "Description\n\nLists information about the specified query logging configurations. Each configuration defines where you want Resolver to save DNS query logs and specifies the VPCs that you want to log queries for.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resolver-query-log-configs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResolverQueryLogConfigs",
      "command_synopsis": "Synopsis\n  list-resolver-query-log-configs\n[--filters <value>]\n[--sort-by <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--sort-by <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn optional specification to return a subset of query logging configurations.\n\nNote\n\nIf you submit a second or subsequent ListResolverQueryLogConfigs request and specify the NextToken parameter, you must use the same values for Filters , if any, as in the previous request.\n\n(structure)\n\nFor Resolver list operations (ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , ListResolverQueryLogConfigAssociations ), and ListResolverDnssecConfigs ), an optional specification to return a subset of objects.\n\nTo filter objects, such as Resolver endpoints or Resolver rules, you specify Name and Values . For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\nName -> (string)\n\nThe name of the parameter that you want to use to filter objects.\n\nThe valid values for Name depend on the action that you’re including the filter in, ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , or ListResolverQueryLogConfigAssociations .\n\nNote\n\nIn early versions of Resolver, values for Name were listed as uppercase, with underscore (_) delimiters. For example, CreatorRequestId was originally listed as CREATOR_REQUEST_ID . Uppercase values for Name are still supported.\n\nListResolverEndpoints\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver endpoint.\n\nDirection : Whether you want to return inbound or outbound Resolver endpoints. If you specify DIRECTION for Name , specify INBOUND or OUTBOUND for Values .\n\nHostVPCId : The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a CreateResolverEndpoint request, SubnetId indirectly identifies the VPC. In a GetResolverEndpoint request, the VPC ID for a Resolver endpoint is returned in the HostVPCId element.\n\nIpAddressCount : The number of IP addresses that you have associated with the Resolver endpoint.\n\nName : The name of the Resolver endpoint.\n\nSecurityGroupIds : The IDs of the VPC security groups that you specified when you created the Resolver endpoint.\n\nStatus : The status of the Resolver endpoint. If you specify Status for Name , specify one of the following status codes for Values : CREATING , OPERATIONAL , UPDATING , AUTO_RECOVERING , ACTION_NEEDED , or DELETING . For more information, see Status in ResolverEndpoint .\n\nListResolverRules\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver rule.\n\nDomainName : The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for Values , include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the “.” after com : example.com.\n\nName : The name of the Resolver rule.\n\nResolverEndpointId : The ID of the Resolver endpoint that the Resolver rule is associated with.\n\nNote\n\nYou can filter on the Resolver endpoint only for rules that have a value of FORWARD for RuleType .\n\nStatus : The status of the Resolver rule. If you specify Status for Name , specify one of the following status codes for Values : COMPLETE , DELETING , UPDATING , or FAILED .\n\nType : The type of the Resolver rule. If you specify TYPE for Name , specify FORWARD or SYSTEM for Values .\n\nListResolverRuleAssociations\n\nValid values for Name include the following:\n\nName : The name of the Resolver rule association.\n\nResolverRuleId : The ID of the Resolver rule that is associated with one or more VPCs.\n\nStatus : The status of the Resolver rule association. If you specify Status for Name , specify one of the following status codes for Values : CREATING , COMPLETE , DELETING , or FAILED .\n\nVPCId : The ID of the VPC that the Resolver rule is associated with.\n\nListResolverQueryLogConfigs\n\nValid values for Name include the following:\n\nArn : The ARN for the query logging configuration.\n\nAssociationCount : The number of VPCs that are associated with the query logging configuration.\n\nCreationTime : The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).\n\nCreatorRequestId : A unique string that identifies the request that created the query logging configuration.\n\nDestination : The Amazon Web Services service that you want to forward query logs to. Valid values include the following:\n\nS3\n\nCloudWatchLogs\n\nKinesisFirehose\n\nDestinationArn : The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n\nId : The ID of the query logging configuration\n\nName : The name of the query logging configuration\n\nOwnerId : The Amazon Web Services account ID for the account that created the query logging configuration.\n\nShareStatus : An indication of whether the query logging configuration is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Valid values include: NOT_SHARED , SHARED_WITH_ME , or SHARED_BY_ME .\n\nStatus : The status of the query logging configuration. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nListResolverQueryLogConfigAssociations\n\nValid values for Name include the following:\n\nCreationTime : The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).\n\nError : If the value of Status is FAILED , specify the cause: DESTINATION_NOT_FOUND or ACCESS_DENIED .\n\nId : The ID of the query logging association.\n\nResolverQueryLogConfigId : The ID of the query logging configuration that a VPC is associated with.\n\nResourceId : The ID of the Amazon VPC that is associated with the query logging configuration.\n\nStatus : The status of the query logging association. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nValues -> (list)\n\nWhen you’re using a List operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--sort-by (string)\n\nThe element that you want Resolver to sort query logging configurations by.\n\nNote\n\nIf you submit a second or subsequent ListResolverQueryLogConfigs request and specify the NextToken parameter, you must use the same value for SortBy , if any, as in the previous request.\n\nValid values include the following elements:\n\nArn : The ARN of the query logging configuration\n\nAssociationCount : The number of VPCs that are associated with the specified configuration\n\nCreationTime : The date and time that Resolver returned when the configuration was created\n\nCreatorRequestId : The value that was specified for CreatorRequestId when the configuration was created\n\nDestinationArn : The location that logs are sent to\n\nId : The ID of the configuration\n\nName : The name of the configuration\n\nOwnerId : The Amazon Web Services account number of the account that created the configuration\n\nShareStatus : Whether the configuration is shared with other Amazon Web Services accounts or shared with the current account by another Amazon Web Services account. Sharing is configured through Resource Access Manager (RAM).\n\nStatus : The current status of the configuration. Valid values include the following:\n\nCREATING : Resolver is creating the query logging configuration.\n\nCREATED : The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n\nDELETING : Resolver is deleting this query logging configuration.\n\nFAILED : Resolver either couldn’t create or couldn’t delete the query logging configuration. Here are two common causes:\n\nThe specified destination (for example, an Amazon S3 bucket) was deleted.\n\nPermissions don’t allow sending logs to the destination.\n\n--sort-order (string)\n\nIf you specified a value for SortBy , the order that you want query logging configurations to be listed in, ASCENDING or DESCENDING .\n\nNote\n\nIf you submit a second or subsequent ListResolverQueryLogConfigs request and specify the NextToken parameter, you must use the same value for SortOrder , if any, as in the previous request.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf there are more than MaxResults query logging configurations, you can submit another ListResolverQueryLogConfigs request to get the next group of configurations. In the next request, specify the value of NextToken from the previous response.\n\nTotalCount -> (integer)\n\nThe total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the number of query logging configurations that are returned in a ListResolverQueryLogConfigs response, depending on the values that you specify in the request.\n\nTotalFilteredCount -> (integer)\n\nThe total number of query logging configurations that were created by the current account in the specified Region and that match the filters that were specified in the ListResolverQueryLogConfigs request. For the total number of query logging configurations that were created by the current account in the specified Region, see TotalCount .\n\nResolverQueryLogConfigs -> (list)\n\nA list that contains one ResolverQueryLogConfig element for each query logging configuration that matches the values that you specified for Filter .\n\n(structure)\n\nIn the response to a CreateResolverQueryLogConfig , DeleteResolverQueryLogConfig , GetResolverQueryLogConfig , or ListResolverQueryLogConfigs request, a complex type that contains settings for one query logging configuration.\n\nId -> (string)\n\nThe ID for the query logging configuration.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID for the account that created the query logging configuration.\n\nStatus -> (string)\n\nThe status of the specified query logging configuration. Valid values include the following:\n\nCREATING : Resolver is creating the query logging configuration.\n\nCREATED : The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n\nDELETING : Resolver is deleting this query logging configuration.\n\nFAILED : Resolver can’t deliver logs to the location that is specified in the query logging configuration. Here are two common causes:\n\nThe specified destination (for example, an Amazon S3 bucket) was deleted.\n\nPermissions don’t allow sending logs to the destination.\n\nShareStatus -> (string)\n\nAn indication of whether the query logging configuration is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Sharing is configured through Resource Access Manager (RAM).\n\nAssociationCount -> (integer)\n\nThe number of VPCs that are associated with the query logging configuration.\n\nArn -> (string)\n\nThe ARN for the query logging configuration.\n\nName -> (string)\n\nThe name of the query logging configuration.\n\nDestinationArn -> (string)\n\nThe ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the query logging configuration. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nCreationTime -> (string)\n\nThe date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC)."
    },
    {
      "command_name": "list-resolver-rule-associations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-resolver-rule-associations.html",
      "command_description": "Description\n\nLists the associations that were created between Resolver rules and VPCs using the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resolver-rule-associations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResolverRuleAssociations",
      "command_synopsis": "Synopsis\n  list-resolver-rule-associations\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn optional specification to return a subset of Resolver rules, such as Resolver rules that are associated with the same VPC ID.\n\nNote\n\nIf you submit a second or subsequent ListResolverRuleAssociations request and specify the NextToken parameter, you must use the same values for Filters , if any, as in the previous request.\n\n(structure)\n\nFor Resolver list operations (ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , ListResolverQueryLogConfigAssociations ), and ListResolverDnssecConfigs ), an optional specification to return a subset of objects.\n\nTo filter objects, such as Resolver endpoints or Resolver rules, you specify Name and Values . For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\nName -> (string)\n\nThe name of the parameter that you want to use to filter objects.\n\nThe valid values for Name depend on the action that you’re including the filter in, ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , or ListResolverQueryLogConfigAssociations .\n\nNote\n\nIn early versions of Resolver, values for Name were listed as uppercase, with underscore (_) delimiters. For example, CreatorRequestId was originally listed as CREATOR_REQUEST_ID . Uppercase values for Name are still supported.\n\nListResolverEndpoints\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver endpoint.\n\nDirection : Whether you want to return inbound or outbound Resolver endpoints. If you specify DIRECTION for Name , specify INBOUND or OUTBOUND for Values .\n\nHostVPCId : The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a CreateResolverEndpoint request, SubnetId indirectly identifies the VPC. In a GetResolverEndpoint request, the VPC ID for a Resolver endpoint is returned in the HostVPCId element.\n\nIpAddressCount : The number of IP addresses that you have associated with the Resolver endpoint.\n\nName : The name of the Resolver endpoint.\n\nSecurityGroupIds : The IDs of the VPC security groups that you specified when you created the Resolver endpoint.\n\nStatus : The status of the Resolver endpoint. If you specify Status for Name , specify one of the following status codes for Values : CREATING , OPERATIONAL , UPDATING , AUTO_RECOVERING , ACTION_NEEDED , or DELETING . For more information, see Status in ResolverEndpoint .\n\nListResolverRules\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver rule.\n\nDomainName : The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for Values , include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the “.” after com : example.com.\n\nName : The name of the Resolver rule.\n\nResolverEndpointId : The ID of the Resolver endpoint that the Resolver rule is associated with.\n\nNote\n\nYou can filter on the Resolver endpoint only for rules that have a value of FORWARD for RuleType .\n\nStatus : The status of the Resolver rule. If you specify Status for Name , specify one of the following status codes for Values : COMPLETE , DELETING , UPDATING , or FAILED .\n\nType : The type of the Resolver rule. If you specify TYPE for Name , specify FORWARD or SYSTEM for Values .\n\nListResolverRuleAssociations\n\nValid values for Name include the following:\n\nName : The name of the Resolver rule association.\n\nResolverRuleId : The ID of the Resolver rule that is associated with one or more VPCs.\n\nStatus : The status of the Resolver rule association. If you specify Status for Name , specify one of the following status codes for Values : CREATING , COMPLETE , DELETING , or FAILED .\n\nVPCId : The ID of the VPC that the Resolver rule is associated with.\n\nListResolverQueryLogConfigs\n\nValid values for Name include the following:\n\nArn : The ARN for the query logging configuration.\n\nAssociationCount : The number of VPCs that are associated with the query logging configuration.\n\nCreationTime : The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).\n\nCreatorRequestId : A unique string that identifies the request that created the query logging configuration.\n\nDestination : The Amazon Web Services service that you want to forward query logs to. Valid values include the following:\n\nS3\n\nCloudWatchLogs\n\nKinesisFirehose\n\nDestinationArn : The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n\nId : The ID of the query logging configuration\n\nName : The name of the query logging configuration\n\nOwnerId : The Amazon Web Services account ID for the account that created the query logging configuration.\n\nShareStatus : An indication of whether the query logging configuration is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Valid values include: NOT_SHARED , SHARED_WITH_ME , or SHARED_BY_ME .\n\nStatus : The status of the query logging configuration. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nListResolverQueryLogConfigAssociations\n\nValid values for Name include the following:\n\nCreationTime : The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).\n\nError : If the value of Status is FAILED , specify the cause: DESTINATION_NOT_FOUND or ACCESS_DENIED .\n\nId : The ID of the query logging association.\n\nResolverQueryLogConfigId : The ID of the query logging configuration that a VPC is associated with.\n\nResourceId : The ID of the Amazon VPC that is associated with the query logging configuration.\n\nStatus : The status of the query logging association. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nValues -> (list)\n\nWhen you’re using a List operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf more than MaxResults rule associations match the specified criteria, you can submit another ListResolverRuleAssociation request to get the next group of results. In the next request, specify the value of NextToken from the previous response.\n\nMaxResults -> (integer)\n\nThe value that you specified for MaxResults in the request.\n\nResolverRuleAssociations -> (list)\n\nThe associations that were created between Resolver rules and VPCs using the current Amazon Web Services account, and that match the specified filters, if any.\n\n(structure)\n\nIn the response to an AssociateResolverRule , DisassociateResolverRule , or ListResolverRuleAssociations request, provides information about an association between a Resolver rule and a VPC. The association determines which DNS queries that originate in the VPC are forwarded to your network.\n\nId -> (string)\n\nThe ID of the association between a Resolver rule and a VPC. Resolver assigns this value when you submit an AssociateResolverRule request.\n\nResolverRuleId -> (string)\n\nThe ID of the Resolver rule that you associated with the VPC that is specified by VPCId .\n\nName -> (string)\n\nThe name of an association between a Resolver rule and a VPC.\n\nVPCId -> (string)\n\nThe ID of the VPC that you associated the Resolver rule with.\n\nStatus -> (string)\n\nA code that specifies the current status of the association between a Resolver rule and a VPC.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the association between a Resolver rule and a VPC.",
      "command_examples": "Examples\n\nTo list associations between Resolver rules and VPCs\n\nThe following list-resolver-rule-associations example lists the associations between resolver rules and VPCs in the current AWS account.\n\naws route53resolver list-resolver-rule-associations\n\n\nOutput:\n\n{\n    \"MaxResults\": 30,\n    \"ResolverRuleAssociations\": [\n        {\n            \"Id\": \"rslvr-autodefined-assoc-vpc-304bexam-internet-resolver\",\n            \"ResolverRuleId\": \"rslvr-autodefined-rr-internet-resolver\",\n            \"Name\": \"System Rule Association\",\n            \"VPCId\": \"vpc-304bexam\",\n            \"Status\": \"COMPLETE\",\n            \"StatusMessage\": \"\"\n        },\n        {\n            \"Id\": \"rslvr-rrassoc-d61cbb2c8bexample\",\n            \"ResolverRuleId\": \"rslvr-rr-42b60677c0example\",\n            \"Name\": \"my-resolver-rule-association\",\n            \"VPCId\": \"vpc-304bexam\",\n            \"Status\": \"COMPLETE\",\n            \"StatusMessage\": \"\"\n        }\n    ]\n}\n\n\nFor more information, see How Route 53 Resolver Forwards DNS Queries from Your VPCs to Your Network in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-resolver-rules",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-resolver-rules.html",
      "command_description": "Description\n\nLists the Resolver rules that were created using the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resolver-rules is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResolverRules",
      "command_synopsis": "Synopsis\n  list-resolver-rules\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn optional specification to return a subset of Resolver rules, such as all Resolver rules that are associated with the same Resolver endpoint.\n\nNote\n\nIf you submit a second or subsequent ListResolverRules request and specify the NextToken parameter, you must use the same values for Filters , if any, as in the previous request.\n\n(structure)\n\nFor Resolver list operations (ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , ListResolverQueryLogConfigAssociations ), and ListResolverDnssecConfigs ), an optional specification to return a subset of objects.\n\nTo filter objects, such as Resolver endpoints or Resolver rules, you specify Name and Values . For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\nName -> (string)\n\nThe name of the parameter that you want to use to filter objects.\n\nThe valid values for Name depend on the action that you’re including the filter in, ListResolverEndpoints , ListResolverRules , ListResolverRuleAssociations , ListResolverQueryLogConfigs , or ListResolverQueryLogConfigAssociations .\n\nNote\n\nIn early versions of Resolver, values for Name were listed as uppercase, with underscore (_) delimiters. For example, CreatorRequestId was originally listed as CREATOR_REQUEST_ID . Uppercase values for Name are still supported.\n\nListResolverEndpoints\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver endpoint.\n\nDirection : Whether you want to return inbound or outbound Resolver endpoints. If you specify DIRECTION for Name , specify INBOUND or OUTBOUND for Values .\n\nHostVPCId : The ID of the VPC that inbound DNS queries pass through on the way from your network to your VPCs in a region, or the VPC that outbound queries pass through on the way from your VPCs to your network. In a CreateResolverEndpoint request, SubnetId indirectly identifies the VPC. In a GetResolverEndpoint request, the VPC ID for a Resolver endpoint is returned in the HostVPCId element.\n\nIpAddressCount : The number of IP addresses that you have associated with the Resolver endpoint.\n\nName : The name of the Resolver endpoint.\n\nSecurityGroupIds : The IDs of the VPC security groups that you specified when you created the Resolver endpoint.\n\nStatus : The status of the Resolver endpoint. If you specify Status for Name , specify one of the following status codes for Values : CREATING , OPERATIONAL , UPDATING , AUTO_RECOVERING , ACTION_NEEDED , or DELETING . For more information, see Status in ResolverEndpoint .\n\nListResolverRules\n\nValid values for Name include the following:\n\nCreatorRequestId : The value that you specified when you created the Resolver rule.\n\nDomainName : The domain name for which Resolver is forwarding DNS queries to your network. In the value that you specify for Values , include a trailing dot (.) after the domain name. For example, if the domain name is example.com, specify the following value. Note the “.” after com : example.com.\n\nName : The name of the Resolver rule.\n\nResolverEndpointId : The ID of the Resolver endpoint that the Resolver rule is associated with.\n\nNote\n\nYou can filter on the Resolver endpoint only for rules that have a value of FORWARD for RuleType .\n\nStatus : The status of the Resolver rule. If you specify Status for Name , specify one of the following status codes for Values : COMPLETE , DELETING , UPDATING , or FAILED .\n\nType : The type of the Resolver rule. If you specify TYPE for Name , specify FORWARD or SYSTEM for Values .\n\nListResolverRuleAssociations\n\nValid values for Name include the following:\n\nName : The name of the Resolver rule association.\n\nResolverRuleId : The ID of the Resolver rule that is associated with one or more VPCs.\n\nStatus : The status of the Resolver rule association. If you specify Status for Name , specify one of the following status codes for Values : CREATING , COMPLETE , DELETING , or FAILED .\n\nVPCId : The ID of the VPC that the Resolver rule is associated with.\n\nListResolverQueryLogConfigs\n\nValid values for Name include the following:\n\nArn : The ARN for the query logging configuration.\n\nAssociationCount : The number of VPCs that are associated with the query logging configuration.\n\nCreationTime : The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).\n\nCreatorRequestId : A unique string that identifies the request that created the query logging configuration.\n\nDestination : The Amazon Web Services service that you want to forward query logs to. Valid values include the following:\n\nS3\n\nCloudWatchLogs\n\nKinesisFirehose\n\nDestinationArn : The ARN of the location that Resolver is sending query logs to. This value can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.\n\nId : The ID of the query logging configuration\n\nName : The name of the query logging configuration\n\nOwnerId : The Amazon Web Services account ID for the account that created the query logging configuration.\n\nShareStatus : An indication of whether the query logging configuration is shared with other Amazon Web Services accounts, or was shared with the current account by another Amazon Web Services account. Valid values include: NOT_SHARED , SHARED_WITH_ME , or SHARED_BY_ME .\n\nStatus : The status of the query logging configuration. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nListResolverQueryLogConfigAssociations\n\nValid values for Name include the following:\n\nCreationTime : The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).\n\nError : If the value of Status is FAILED , specify the cause: DESTINATION_NOT_FOUND or ACCESS_DENIED .\n\nId : The ID of the query logging association.\n\nResolverQueryLogConfigId : The ID of the query logging configuration that a VPC is associated with.\n\nResourceId : The ID of the Amazon VPC that is associated with the query logging configuration.\n\nStatus : The status of the query logging association. If you specify Status for Name , specify the applicable status code for Values : CREATING , CREATED , DELETING , or FAILED . For more information, see Status .\n\nValues -> (list)\n\nWhen you’re using a List operation and you want the operation to return a subset of objects, such as Resolver endpoints or Resolver rules, the value of the parameter that you want to use to filter objects. For example, to list only inbound Resolver endpoints, specify Direction for Name and specify INBOUND for Values .\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nIf more than MaxResults Resolver rules match the specified criteria, you can submit another ListResolverRules request to get the next group of results. In the next request, specify the value of NextToken from the previous response.\n\nMaxResults -> (integer)\n\nThe value that you specified for MaxResults in the request.\n\nResolverRules -> (list)\n\nThe Resolver rules that were created using the current Amazon Web Services account and that match the specified filters, if any.\n\n(structure)\n\nFor queries that originate in your VPC, detailed information about a Resolver rule, which specifies how to route DNS queries out of the VPC. The ResolverRule parameter appears in the response to a CreateResolverRule , DeleteResolverRule , GetResolverRule , ListResolverRules , or UpdateResolverRule request.\n\nId -> (string)\n\nThe ID that Resolver assigned to the Resolver rule when you created it.\n\nCreatorRequestId -> (string)\n\nA unique string that you specified when you created the Resolver rule. CreatorRequestId identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver rule specified by Id .\n\nDomainName -> (string)\n\nDNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps . If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver rule.\n\nStatusMessage -> (string)\n\nA detailed description of the status of a Resolver rule.\n\nRuleType -> (string)\n\nWhen you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD .\n\nWhen you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM .\n\nFor example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify FORWARD for RuleType . To then have Resolver process queries for apex.example.com, you create a rule and specify SYSTEM for RuleType .\n\nCurrently, only Resolver can create rules that have a value of RECURSIVE for RuleType .\n\nName -> (string)\n\nThe name for the Resolver rule, which you specified when you created the Resolver rule.\n\nTargetIps -> (list)\n\nAn array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.\n\n(structure)\n\nIn a CreateResolverRule request, an array of the IPs that you want to forward DNS queries to.\n\nIp -> (string)\n\nOne IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n\nPort -> (integer)\n\nThe port at Ip that you want to forward DNS queries to.\n\nResolverEndpointId -> (string)\n\nThe ID of the endpoint that the rule is associated with.\n\nOwnerId -> (string)\n\nWhen a rule is shared with another Amazon Web Services account, the account ID of the account that the rule is shared with.\n\nShareStatus -> (string)\n\nWhether the rule is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n\nCreationTime -> (string)\n\nThe date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo list Resolver rules\n\nThe following list-resolver-rules example lists all the Resolver rules in the current AWS account.\n\naws route53resolver list-resolver-rules\n\n\nOutput:\n\n{\n    \"MaxResults\": 30,\n    \"ResolverRules\": [\n        {\n            \"Id\": \"rslvr-autodefined-rr-internet-resolver\",\n            \"CreatorRequestId\": \"\",\n            \"Arn\": \"arn:aws:route53resolver:us-west-2::autodefined-rule/rslvr-autodefined-rr-internet-resolver\",\n            \"DomainName\": \".\",\n            \"Status\": \"COMPLETE\",\n            \"RuleType\": \"RECURSIVE\",\n            \"Name\": \"Internet Resolver\",\n            \"OwnerId\": \"Route 53 Resolver\",\n            \"ShareStatus\": \"NOT_SHARED\"\n        },\n        {\n            \"Id\": \"rslvr-rr-42b60677c0example\",\n            \"CreatorRequestId\": \"2020-01-01-18:47\",\n            \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-rule/rslvr-rr-42b60677c0bc4e299\",\n            \"DomainName\": \"example.com.\",\n            \"Status\": \"COMPLETE\",\n            \"StatusMessage\": \"[Trace id: 1-5dc4b177-ff1d9d001a0f80005example] Successfully created Resolver Rule.\",\n            \"RuleType\": \"FORWARD\",\n            \"Name\": \"my-rule\",\n            \"TargetIps\": [\n                {\n                    \"Ip\": \"192.0.2.45\",\n                    \"Port\": 53\n                }\n            ],\n            \"ResolverEndpointId\": \"rslvr-out-d5e5920e37example\",\n            \"OwnerId\": \"111122223333\",\n            \"ShareStatus\": \"NOT_SHARED\"\n        }\n    ]\n}\n\n\nFor more information, see How Route 53 Resolver Forwards DNS Queries from Your VPCs to Your Network in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/list-tags-for-resource.html",
      "command_description": "Description\n\nLists the tags that you associated with the specified resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-tags-for-resource is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Tags",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) for the resource that you want to list tags for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe tags that are associated with the resource that you specified in the ListTagsForResource request.\n\n(structure)\n\nOne tag that you want to add to the specified resource. A tag consists of a Key (a name for the tag) and a Value .\n\nKey -> (string)\n\nThe name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of Key might be account-id .\n\nValue -> (string)\n\nThe value for the tag. For example, if Key is account-id , then Value might be the ID of the customer account that you’re creating the resource for.\n\nNextToken -> (string)\n\nIf more than MaxResults tags match the specified criteria, you can submit another ListTagsForResource request to get the next group of results. In the next request, specify the value of NextToken from the previous response.",
      "command_examples": "Examples\n\nTo list the tags for a Resolver resource\n\nThe following list-tags-for-resource example lists the tags that are assigned to the specified Resolver rule.\n\naws route53resolver list-tags-for-resource \\\n    --resource-arn \"arn:aws:route53resolver:us-west-2:111122223333:resolver-rule/rslvr-rr-42b60677c0example\"\n\n\nOutput:\n\n{\n    \"Tags\": [\n        {\n            \"Key\": \"my-key-1\",\n            \"Value\": \"my-value-1\"\n        },\n        {\n            \"Key\": \"my-key-2\",\n            \"Value\": \"my-value-2\"\n        }\n    ]\n}\n\n\nFor information about using tags for cost allocation, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide."
    },
    {
      "command_name": "put-firewall-rule-group-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/put-firewall-rule-group-policy.html",
      "command_description": "Description\n\nAttaches an Identity and Access Management (Amazon Web Services IAM) policy for sharing the rule group. You can use the policy to share the rule group using Resource Access Manager (RAM).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-firewall-rule-group-policy\n--arn <value>\n--firewall-rule-group-policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "--firewall-rule-group-policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN (Amazon Resource Name) for the rule group that you want to share.\n\n--firewall-rule-group-policy (string)\n\nThe Identity and Access Management (Amazon Web Services IAM) policy to attach to the rule group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReturnValue -> (boolean)",
      "command_examples": "Examples\n\nTo attach an AWS IAM policy to share a Firewall rule group policy\n\nThe following put-firewall-rule-group-policy example attaches an AWS Identity and Access Management (AWS IAM) policy for sharing the rule group.\n\naws route53resolver put-firewall-rule-group-policy \\\n    --firewall-rule-group-policy \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"test\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"arn:aws:iam::AWS_ACCOUNT_ID:root\\\"},\\\"Action\\\":[\\\"route53resolver:GetFirewallRuleGroup\\\",\\\"route53resolver:ListFirewallRuleGroups\\\"],\\\"Resource\\\":\\\"arn:aws:route53resolver:us-east-1:AWS_ACCOUNT_ID:firewall-rule-group/rslvr-frg-47f93271fexample\\\"}]}\"\n\n\nOutput:\n\n{\n    \"ReturnValue\": true\n}\n\n\nFor more information, see Managing rule groups and rules in DNS Firewall in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "put-resolver-query-log-config-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/put-resolver-query-log-config-policy.html",
      "command_description": "Description\n\nSpecifies an Amazon Web Services account that you want to share a query logging configuration with, the query logging configuration that you want to share, and the operations that you want the account to be able to perform on the configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-resolver-query-log-config-policy\n--arn <value>\n--resolver-query-log-config-policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "--resolver-query-log-config-policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the account that you want to share rules with.\n\n--resolver-query-log-config-policy (string)\n\nAn Identity and Access Management policy statement that lists the query logging configurations that you want to share with another Amazon Web Services account and the operations that you want the account to be able to perform. You can specify the following operations in the Actions section of the statement:\n\nroute53resolver:AssociateResolverQueryLogConfig\n\nroute53resolver:DisassociateResolverQueryLogConfig\n\nroute53resolver:ListResolverQueryLogConfigAssociations\n\nroute53resolver:ListResolverQueryLogConfigs\n\nIn the Resource section of the statement, you specify the ARNs for the query logging configurations that you want to share with the account that you specified in Arn .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReturnValue -> (boolean)\n\nWhether the PutResolverQueryLogConfigPolicy request was successful."
    },
    {
      "command_name": "put-resolver-rule-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/put-resolver-rule-policy.html",
      "command_description": "Description\n\nSpecifies an Amazon Web Services rule that you want to share with another account, the account that you want to share the rule with, and the operations that you want the account to be able to perform on the rule.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-resolver-rule-policy\n--arn <value>\n--resolver-rule-policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "--resolver-rule-policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the rule that you want to share with another account.\n\n--resolver-rule-policy (string)\n\nAn Identity and Access Management policy statement that lists the rules that you want to share with another Amazon Web Services account and the operations that you want the account to be able to perform. You can specify the following operations in the Action section of the statement:\n\nroute53resolver:GetResolverRule\n\nroute53resolver:AssociateResolverRule\n\nroute53resolver:DisassociateResolverRule\n\nroute53resolver:ListResolverRules\n\nroute53resolver:ListResolverRuleAssociations\n\nIn the Resource section of the statement, specify the ARN for the rule that you want to share with another account. Specify the same ARN that you specified in Arn .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReturnValue -> (boolean)\n\nWhether the PutResolverRulePolicy request was successful.",
      "command_examples": "Examples\n\nTo share a Resolver rule with another AWS account\n\nThe following put-resolver-rule-policy example specifies a Resolver rule that you want to share with another AWS account, the account that you want to share the rule with, and the rule-related operations that you want the account to be able to perform on the rules.\n\nNote You must run this command using credentials from the same account that created the rule.\n\naws route53resolver put-resolver-rule-policy \\\n    --region us-east-1 \\\n    --arn \"arn:aws:route53resolver:us-east-1:111122223333:resolver-rule/rslvr-rr-42b60677c0example\" \\\n    --resolver-rule-policy \"{\\\"Version\\\": \\\"2012-10-17\\\", \\\n        \\\"Statement\\\": [ { \\\n        \\\"Effect\\\" : \\\"Allow\\\", \\\n        \\\"Principal\\\" : {\\\"AWS\\\" : \\\"444455556666\\\" }, \\\n        \\\"Action\\\" : [ \\\n            \\\"route53resolver:GetResolverRule\\\", \\\n            \\\"route53resolver:AssociateResolverRule\\\", \\\n            \\\"route53resolver:DisassociateResolverRule\\\", \\\n            \\\"route53resolver:ListResolverRules\\\", \\\n            \\\"route53resolver:ListResolverRuleAssociations\\\" ], \\\n        \\\"Resource\\\" : [ \\\"arn:aws:route53resolver:us-east-1:111122223333:resolver-rule/rslvr-rr-42b60677c0example\\\" ] } ] }\"\n\n\nOutput:\n\n{\n    \"ReturnValue\": true\n}\n\n\nAfter you run put-resolver-rule-policy, you can run the following two Resource Access Manager (RAM) commands. You must use the account that you want to share the rule with:\n\nget-resource-share-invitations returns the value resourceShareInvitationArn. You need this value to accept the invitation to use the shared rule.\n\naccept-resource-share-invitation accepts the invitation to use the shared rule.\n\nFor more information, see the following documentation:\n\nget-resource-share-invitations\n\naccept-resource-share-invitations\n\nSharing Forwarding Rules with Other AWS Accounts and Using Shared Rules in the Amazon Route 53 Developer Guide"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/tag-resource.html",
      "command_description": "Description\n\nAdds one or more tags to a specified resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable Get or List command:\n\nGetResolverEndpoint\n\nGetResolverRule\n\nGetResolverRuleAssociation\n\nListResolverEndpoints\n\nListResolverRuleAssociations\n\nListResolverRules\n\n--tags (list)\n\nThe tags that you want to add to the specified resource.\n\n(structure)\n\nOne tag that you want to add to the specified resource. A tag consists of a Key (a name for the tag) and a Value .\n\nKey -> (string)\n\nThe name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, the value of Key might be account-id .\n\nValue -> (string)\n\nThe value for the tag. For example, if Key is account-id , then Value might be the ID of the customer account that you’re creating the resource for.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo associate tags with a Resolver resource\n\nThe following tag-resource example associates two tag key/value pairs with the specified Resolver rule.\n\naws route53resolver tag-resource \\\n    --resource-arn \"arn:aws:route53resolver:us-west-2:111122223333:resolver-rule/rslvr-rr-42b60677c0example\" \\\n    --tags \"Key=my-key-1,Value=my-value-1\" \"Key=my-key-2,Value=my-value-2\"\n\n\nThis command produces no output.\n\nFor information about using tags for cost allocation, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/untag-resource.html",
      "command_description": "Description\n\nRemoves one or more tags from a specified resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable Get or List command:\n\nGetResolverEndpoint\n\nGetResolverRule\n\nGetResolverRuleAssociation\n\nListResolverEndpoints\n\nListResolverRuleAssociations\n\nListResolverRules\n\n--tag-keys (list)\n\nThe tags that you want to remove to the specified resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from a Resolver resource\n\nThe following untag-resource example removes two tags from the specified Resolver rule.\n\naws route53resolver untag-resource \\\n    --resource-arn \"arn:aws:route53resolver:us-west-2:111122223333:resolver-rule/rslvr-rr-42b60677c0example\" \\\n    --tag-keys my-key-1 my-key-2\n\n\nThis command produces no output. To confirm that the tags were removed, you can use list-tags-for-resource.\n\nFor information about using tags for cost allocation, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide."
    },
    {
      "command_name": "update-firewall-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/update-firewall-config.html",
      "command_description": "Description\n\nUpdates the configuration of the firewall behavior provided by DNS Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon VPC).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-firewall-config\n--resource-id <value>\n--firewall-fail-open <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id <value>",
        "--firewall-fail-open <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id (string)\n\nThe ID of the VPC that the configuration is for.\n\n--firewall-fail-open (string)\n\nDetermines how Route 53 Resolver handles queries during failures, for example when all traffic that is sent to DNS Firewall fails to receive a reply.\n\nBy default, fail open is disabled, which means the failure mode is closed. This approach favors security over availability. DNS Firewall blocks queries that it is unable to evaluate properly.\n\nIf you enable this option, the failure mode is open. This approach favors availability over security. DNS Firewall allows queries to proceed if it is unable to properly evaluate them.\n\nThis behavior is only enforced for VPCs that have at least one DNS Firewall rule group association.\n\nPossible values:\n\nENABLED\n\nDISABLED\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallConfig -> (structure)\n\nConfiguration of the firewall behavior provided by DNS Firewall for a single VPC.\n\nId -> (string)\n\nThe ID of the firewall configuration.\n\nResourceId -> (string)\n\nThe ID of the VPC that this firewall configuration applies to.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account ID of the owner of the VPC that this firewall configuration applies to.\n\nFirewallFailOpen -> (string)\n\nDetermines how DNS Firewall operates during failures, for example when all traffic that is sent to DNS Firewall fails to receive a reply.\n\nBy default, fail open is disabled, which means the failure mode is closed. This approach favors security over availability. DNS Firewall returns a failure error when it is unable to properly evaluate a query.\n\nIf you enable this option, the failure mode is open. This approach favors availability over security. DNS Firewall allows queries to proceed if it is unable to properly evaluate them.\n\nThis behavior is only enforced for VPCs that have at least one DNS Firewall rule group association.",
      "command_examples": "Examples\n\nTo update a firewall config\n\nThe following update-firewall-config example updates DNS Firewall configuration.\n\naws route53resolver update-firewall-config \\\n    --resource-id vpc-31e92222 \\\n    --firewall-fail-open DISABLED\n\n\nOutput:\n\n{\n    \"FirewallConfig\": {\n        \"Id\": \"rslvr-fc-86016850cexample\",\n        \"ResourceId\": \"vpc-31e92222\",\n        \"OwnerId\": \"123456789012\",\n        \"FirewallFailOpen\": \"DISABLED\"\n    }\n}\n\n\nFor more information, see DNS Firewall VPC configuration in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "update-firewall-domains",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/update-firewall-domains.html",
      "command_description": "Description\n\nUpdates the firewall domain list from an array of domain specifications.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-firewall-domains\n--firewall-domain-list-id <value>\n--operation <value>\n--domains <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-domain-list-id <value>",
        "--operation <value>",
        "--domains <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-domain-list-id (string)\n\nThe ID of the domain list whose domains you want to update.\n\n--operation (string)\n\nWhat you want DNS Firewall to do with the domains that you are providing:\n\nADD - Add the domains to the ones that are already in the domain list.\n\nREMOVE - Search the domain list for the domains and remove them from the list.\n\nREPLACE - Update the domain list to exactly match the list that you are providing.\n\nPossible values:\n\nADD\n\nREMOVE\n\nREPLACE\n\n--domains (list)\n\nA list of domains to use in the update operation.\n\nEach domain specification in your domain list must satisfy the following requirements:\n\nIt can optionally start with * (asterisk).\n\nWith the exception of the optional starting asterisk, it must only contain the following characters: A-Z , a-z , 0-9 , - (hyphen).\n\nIt must be from 1-255 characters in length.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nId -> (string)\n\nThe ID of the firewall domain list that DNS Firewall just updated.\n\nName -> (string)\n\nThe name of the domain list.\n\nStatus -> (string)\n\nStatusMessage -> (string)\n\nAdditional information about the status of the list, if available.",
      "command_examples": "Examples\n\nTo update a domain list\n\nThe following update-firewall-domains example adds the domains to a domain list with the ID you provide.\n\naws route53resolver update-firewall-domains \\\n    --firewall-domain-list-id rslvr-fdl-42b60677cexampleb \\\n    --operation ADD \\\n    --domains test1.com test2.com test3.com\n\n\nOutput:\n\n{\n    \"Id\": \"rslvr-fdl-42b60677cexample\",\n    \"Name\": \"test\",\n    \"Status\": \"UPDATING\",\n    \"StatusMessage\": \"Updating the Firewall Domain List\"\n}\n\n\nFor more information, see Managing your own domain lists in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "update-firewall-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/update-firewall-rule.html",
      "command_description": "Description\n\nUpdates the specified firewall rule.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-firewall-rule\n--firewall-rule-group-id <value>\n--firewall-domain-list-id <value>\n[--priority <value>]\n[--action <value>]\n[--block-response <value>]\n[--block-override-domain <value>]\n[--block-override-dns-type <value>]\n[--block-override-ttl <value>]\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-rule-group-id <value>",
        "--firewall-domain-list-id <value>",
        "[--priority <value>]",
        "[--action <value>]",
        "[--block-response <value>]",
        "[--block-override-domain <value>]",
        "[--block-override-dns-type <value>]",
        "[--block-override-ttl <value>]",
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-rule-group-id (string)\n\nThe unique identifier of the firewall rule group for the rule.\n\n--firewall-domain-list-id (string)\n\nThe ID of the domain list to use in the rule.\n\n--priority (integer)\n\nThe setting that determines the processing order of the rule in the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.\n\nYou must specify a unique priority for each rule in a rule group. To make it easier to insert rules later, leave space between the numbers, for example, use 100, 200, and so on. You can change the priority setting for the rules in a rule group at any time.\n\n--action (string)\n\nThe action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule’s domain list:\n\nALLOW - Permit the request to go through.\n\nALERT - Permit the request to go through but send an alert to the logs.\n\nBLOCK - Disallow the request. This option requires additional details in the rule’s BlockResponse .\n\nPossible values:\n\nALLOW\n\nBLOCK\n\nALERT\n\n--block-response (string)\n\nThe way that you want DNS Firewall to block the request. Used for the rule action setting BLOCK .\n\nNODATA - Respond indicating that the query was successful, but no response is available for it.\n\nNXDOMAIN - Respond indicating that the domain name that’s in the query doesn’t exist.\n\nOVERRIDE - Provide a custom override in the response. This option requires custom handling details in the rule’s BlockOverride* settings.\n\nPossible values:\n\nNODATA\n\nNXDOMAIN\n\nOVERRIDE\n\n--block-override-domain (string)\n\nThe custom DNS record to send back in response to the query. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\n--block-override-dns-type (string)\n\nThe DNS record’s type. This determines the format of the record value that you provided in BlockOverrideDomain . Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nPossible values:\n\nCNAME\n\n--block-override-ttl (integer)\n\nThe recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\n--name (string)\n\nThe name of the rule.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRule -> (structure)\n\nThe firewall rule that you just updated.\n\nFirewallRuleGroupId -> (string)\n\nThe unique identifier of the firewall rule group of the rule.\n\nFirewallDomainListId -> (string)\n\nThe ID of the domain list that’s used in the rule.\n\nName -> (string)\n\nThe name of the rule.\n\nPriority -> (integer)\n\nThe priority of the rule in the rule group. This value must be unique within the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.\n\nAction -> (string)\n\nThe action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule’s domain list:\n\nALLOW - Permit the request to go through.\n\nALERT - Permit the request to go through but send an alert to the logs.\n\nBLOCK - Disallow the request. If this is specified, additional handling details are provided in the rule’s BlockResponse setting.\n\nBlockResponse -> (string)\n\nThe way that you want DNS Firewall to block the request. Used for the rule action setting BLOCK .\n\nNODATA - Respond indicating that the query was successful, but no response is available for it.\n\nNXDOMAIN - Respond indicating that the domain name that’s in the query doesn’t exist.\n\nOVERRIDE - Provide a custom override in the response. This option requires custom handling details in the rule’s BlockOverride* settings.\n\nBlockOverrideDomain -> (string)\n\nThe custom DNS record to send back in response to the query. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nBlockOverrideDnsType -> (string)\n\nThe DNS record’s type. This determines the format of the record value that you provided in BlockOverrideDomain . Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nBlockOverrideTtl -> (integer)\n\nThe recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Used for the rule action BLOCK with a BlockResponse setting of OVERRIDE .\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of executing the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the rule was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the rule was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo update a firewall rule\n\nThe following update-firewall-rule example updates a firewall rule with the parameters you specify.\n\naws route53resolver update-firewall-rule \\\n    --firewall-rule-group-id rslvr-frg-47f93271fexample \\\n    --firewall-domain-list-id rslvr-fdl-9e956e9ffexample \\\n    --priority 102\n\n\nOutput:\n\n{\n    \"FirewallRule\": {\n        \"FirewallRuleGroupId\": \"rslvr-frg-47f93271fexample\",\n        \"FirewallDomainListId\": \"rslvr-fdl-9e956e9ffexample\",\n        \"Name\": \"allow-rule\",\n        \"Priority\": 102,\n        \"Action\": \"ALLOW\",\n        \"CreatorRequestId\": \"d81e3fb7-020b-415e-939f-EXAMPLE11111\",\n        \"CreationTime\": \"2021-05-25T21:44:00.346093Z\",\n        \"ModificationTime\": \"2021-05-25T21:45:59.611600Z\"\n    }\n}\n\n\nFor more information, see Managing rule groups and rules in DNS Firewall in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "update-firewall-rule-group-association",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/update-firewall-rule-group-association.html",
      "command_description": "Description\n\nChanges the association of a FirewallRuleGroup with a VPC. The association enables DNS filtering for the VPC.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-firewall-rule-group-association\n--firewall-rule-group-association-id <value>\n[--priority <value>]\n[--mutation-protection <value>]\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-rule-group-association-id <value>",
        "[--priority <value>]",
        "[--mutation-protection <value>]",
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-rule-group-association-id (string)\n\nThe identifier of the FirewallRuleGroupAssociation .\n\n--priority (integer)\n\nThe setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.\n\nYou must specify a unique priority for each rule group that you associate with a single VPC. To make it easier to insert rule groups later, leave space between the numbers, for example, use 100, 200, and so on. You can change the priority setting for a rule group association after you create it.\n\n--mutation-protection (string)\n\nIf enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections.\n\nPossible values:\n\nENABLED\n\nDISABLED\n\n--name (string)\n\nThe name of the rule group association.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallRuleGroupAssociation -> (structure)\n\nThe association that you just updated.\n\nId -> (string)\n\nThe identifier for the association.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall rule group association.\n\nFirewallRuleGroupId -> (string)\n\nThe unique identifier of the firewall rule group.\n\nVpcId -> (string)\n\nThe unique identifier of the VPC that is associated with the rule group.\n\nName -> (string)\n\nThe name of the association.\n\nPriority -> (integer)\n\nThe setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC. DNS Firewall filters VPC traffic starting from rule group with the lowest numeric priority setting.\n\nMutationProtection -> (string)\n\nIf enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections.\n\nManagedOwnerName -> (string)\n\nThe owner of the association, used only for associations that are not managed by you. If you use Firewall Manager to manage your DNS Firewalls, then this reports Firewall Manager as the managed owner.\n\nStatus -> (string)\n\nThe current status of the association.\n\nStatusMessage -> (string)\n\nAdditional information about the status of the response, if available.\n\nCreatorRequestId -> (string)\n\nA unique string defined by you to identify the request. This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.\n\nCreationTime -> (string)\n\nThe date and time that the association was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the association was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo update a firewall rule group association\n\nThe following update-firewall-rule-group-association example updates a firewall rule group association.\n\naws route53resolver update-firewall-rule-group-association \\\n    --firewall-rule-group-association-id rslvr-frgassoc-57e8873d7example \\\n    --priority 103\n\n\nOutput:\n\n{\n    \"FirewallRuleGroupAssociation\": {\n        \"Id\": \"rslvr-frgassoc-57e8873d7example\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:123456789012:firewall-rule-group-association/rslvr-frgassoc-57e8873d7example\",\n        \"FirewallRuleGroupId\": \"rslvr-frg-47f93271fexample\",\n        \"VpcId\": \"vpc-31e92222\",\n        \"Name\": \"test-association\",\n        \"Priority\": 103,\n        \"MutationProtection\": \"DISABLED\",\n        \"Status\": \"UPDATING\",\n        \"StatusMessage\": \"Updating the Firewall Rule Group Association Attributes\",\n        \"CreatorRequestId\": \"2ca1a304-32b3-4f5f-bc4c-EXAMPLE11111\",\n        \"CreationTime\": \"2021-05-25T21:47:48.755768Z\",\n        \"ModificationTime\": \"2021-05-25T21:50:09.272569Z\"\n    }\n}\n\n\nFor more information, see Managing associations between your VPC and Route 53 Resolver DNS Firewall rule group in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "update-resolver-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/update-resolver-config.html",
      "command_description": "Description\n\nUpdates the behavior configuration of Route 53 Resolver behavior for a single VPC from Amazon Virtual Private Cloud.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-resolver-config\n--resource-id <value>\n--autodefined-reverse-flag <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id <value>",
        "--autodefined-reverse-flag <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id (string)\n\nResource ID of the Amazon VPC that you want to update the Resolver configuration for.\n\n--autodefined-reverse-flag (string)\n\nIndicates whether or not the Resolver will create autodefined rules for reverse DNS lookups. This is enabled by default. Disabling this option will also affect EC2-Classic instances using ClassicLink. For more information, see ClassicLink in the Amazon EC2 guide .\n\nNote\n\nIt can take some time for the status change to be completed.\n\nPossible values:\n\nENABLE\n\nDISABLE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverConfig -> (structure)\n\nAn array that contains settings for the specified Resolver configuration.\n\nId -> (string)\n\nID for the Resolver configuration.\n\nResourceId -> (string)\n\nThe ID of the Amazon Virtual Private Cloud VPC that you’re configuring Resolver for.\n\nOwnerId -> (string)\n\nThe owner account ID of the Amazon Virtual Private Cloud VPC.\n\nAutodefinedReverse -> (string)\n\nThe status of whether or not the Resolver will create autodefined rules for reverse DNS lookups. This is enabled by default. The status can be one of following:\n\nStatus of the rules generated by VPCs based on CIDR/Region for reverse DNS resolution. The status can be one of following:\n\nENABLING: Autodefined rules for reverse DNS lookups are being enabled but are not complete.\n\nENABLED: Autodefined rules for reverse DNS lookups are enabled.\n\nDISABLING: Autodefined rules for reverse DNS lookups are being disabled but are not complete.\n\nDISABLED: Autodefined rules for reverse DNS lookups are disabled."
    },
    {
      "command_name": "update-resolver-dnssec-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/update-resolver-dnssec-config.html",
      "command_description": "Description\n\nUpdates an existing DNSSEC validation configuration. If there is no existing DNSSEC validation configuration, one is created.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-resolver-dnssec-config\n--resource-id <value>\n--validation <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id <value>",
        "--validation <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id (string)\n\nThe ID of the virtual private cloud (VPC) that you’re updating the DNSSEC validation status for.\n\n--validation (string)\n\nThe new value that you are specifying for DNSSEC validation for the VPC. The value can be ENABLE or DISABLE . Be aware that it can take time for a validation status change to be completed.\n\nPossible values:\n\nENABLE\n\nDISABLE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverDNSSECConfig -> (structure)\n\nA complex type that contains settings for the specified DNSSEC configuration.\n\nId -> (string)\n\nThe ID for a configuration for DNSSEC validation.\n\nOwnerId -> (string)\n\nThe owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.\n\nResourceId -> (string)\n\nThe ID of the virtual private cloud (VPC) that you’re configuring the DNSSEC validation status for.\n\nValidationStatus -> (string)\n\nThe validation status for a DNSSEC configuration. The status can be one of the following:\n\nENABLING: DNSSEC validation is being enabled but is not complete.\n\nENABLED: DNSSEC validation is enabled.\n\nDISABLING: DNSSEC validation is being disabled but is not complete.\n\nDISABLED DNSSEC validation is disabled."
    },
    {
      "command_name": "update-resolver-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/update-resolver-endpoint.html",
      "command_description": "Description\n\nUpdates the name of an inbound or an outbound Resolver endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-resolver-endpoint\n--resolver-endpoint-id <value>\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-endpoint-id <value>",
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-endpoint-id (string)\n\nThe ID of the Resolver endpoint that you want to update.\n\n--name (string)\n\nThe name of the Resolver endpoint that you want to update.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverEndpoint -> (structure)\n\nThe response to an UpdateResolverEndpoint request.\n\nId -> (string)\n\nThe ID of the Resolver endpoint.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request that created the Resolver endpoint. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver endpoint.\n\nName -> (string)\n\nThe name that you assigned to the Resolver endpoint when you submitted a CreateResolverEndpoint request.\n\nSecurityGroupIds -> (list)\n\nThe ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you’re using for DNS queries on your network.\n\n(string)\n\nDirection -> (string)\n\nIndicates whether the Resolver endpoint allows inbound or outbound DNS queries:\n\nINBOUND : allows DNS queries to your VPC from your network\n\nOUTBOUND : allows DNS queries from your VPC to your network\n\nIpAddressCount -> (integer)\n\nThe number of IP addresses that the Resolver endpoint can use for DNS queries.\n\nHostVPCId -> (string)\n\nThe ID of the VPC that you want to create the Resolver endpoint in.\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver endpoint. Valid values include the following:\n\nCREATING : Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint.\n\nOPERATIONAL : The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver.\n\nUPDATING : Resolver is associating or disassociating one or more network interfaces with this endpoint.\n\nAUTO_RECOVERING : Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see Limits on Route 53 Resolver .\n\nACTION_NEEDED : This endpoint is unhealthy, and Resolver can’t automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn’t available, add another IP address and then delete the IP address that isn’t available. (An endpoint must always include at least two IP addresses.) A status of ACTION_NEEDED can have a variety of causes. Here are two common causes:\n\nOne or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC.\n\nThe network interface couldn’t be created for some reason that’s outside the control of Resolver.\n\nDELETING : Resolver is deleting this endpoint and the associated network interfaces.\n\nStatusMessage -> (string)\n\nA detailed description of the status of the Resolver endpoint.\n\nCreationTime -> (string)\n\nThe date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nTo update the name of a Resolver endpoint\n\nThe following update-resolver-endpoint example updates the name of a Resolver endpoint. Updating other values isn’t supported.\n\naws route53resolver update-resolver-endpoint \\\n    --resolver-endpoint-id rslvr-in-b5d45e32bdc445f09 \\\n    --name my-renamed-inbound-endpoint\n\n\nOutput:\n\n{\n    \"ResolverEndpoint\": {\n        \"Id\": \"rslvr-in-b5d45e32bdexample\",\n        \"CreatorRequestId\": \"2020-01-02-18:48\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-endpoint/rslvr-in-b5d45e32bdexample\",\n        \"Name\": \"my-renamed-inbound-endpoint\",\n        \"SecurityGroupIds\": [\n            \"sg-f62bexam\"\n        ],\n        \"Direction\": \"INBOUND\",\n        \"IpAddressCount\": 2,\n        \"HostVPCId\": \"vpc-304bexam\",\n        \"Status\": \"OPERATIONAL\",\n        \"StatusMessage\": \"This Resolver Endpoint is operational.\",\n        \"CreationTime\": \"2020-01-01T18:33:59.265Z\",\n        \"ModificationTime\": \"2020-01-08T18:33:59.265Z\"\n    }\n}\n"
    },
    {
      "command_name": "update-resolver-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53resolver/update-resolver-rule.html",
      "command_description": "Description\n\nUpdates settings for a specified Resolver rule. ResolverRuleId is required, and all other parameters are optional. If you don’t specify a parameter, it retains its current value.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-resolver-rule\n--resolver-rule-id <value>\n--config <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resolver-rule-id <value>",
        "--config <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resolver-rule-id (string)\n\nThe ID of the Resolver rule that you want to update.\n\n--config (structure)\n\nThe new settings for the Resolver rule.\n\nName -> (string)\n\nThe new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console.\n\nTargetIps -> (list)\n\nFor DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.\n\n(structure)\n\nIn a CreateResolverRule request, an array of the IPs that you want to forward DNS queries to.\n\nIp -> (string)\n\nOne IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n\nPort -> (integer)\n\nThe port at Ip that you want to forward DNS queries to.\n\nResolverEndpointId -> (string)\n\nThe ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in TargetIps .\n\nShorthand Syntax:\n\nName=string,TargetIps=[{Ip=string,Port=integer},{Ip=string,Port=integer}],ResolverEndpointId=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"TargetIps\": [\n    {\n      \"Ip\": \"string\",\n      \"Port\": integer\n    }\n    ...\n  ],\n  \"ResolverEndpointId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResolverRule -> (structure)\n\nThe response to an UpdateResolverRule request.\n\nId -> (string)\n\nThe ID that Resolver assigned to the Resolver rule when you created it.\n\nCreatorRequestId -> (string)\n\nA unique string that you specified when you created the Resolver rule. CreatorRequestId identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n\nArn -> (string)\n\nThe ARN (Amazon Resource Name) for the Resolver rule specified by Id .\n\nDomainName -> (string)\n\nDNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps . If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).\n\nStatus -> (string)\n\nA code that specifies the current status of the Resolver rule.\n\nStatusMessage -> (string)\n\nA detailed description of the status of a Resolver rule.\n\nRuleType -> (string)\n\nWhen you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD .\n\nWhen you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM .\n\nFor example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify FORWARD for RuleType . To then have Resolver process queries for apex.example.com, you create a rule and specify SYSTEM for RuleType .\n\nCurrently, only Resolver can create rules that have a value of RECURSIVE for RuleType .\n\nName -> (string)\n\nThe name for the Resolver rule, which you specified when you created the Resolver rule.\n\nTargetIps -> (list)\n\nAn array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.\n\n(structure)\n\nIn a CreateResolverRule request, an array of the IPs that you want to forward DNS queries to.\n\nIp -> (string)\n\nOne IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.\n\nPort -> (integer)\n\nThe port at Ip that you want to forward DNS queries to.\n\nResolverEndpointId -> (string)\n\nThe ID of the endpoint that the rule is associated with.\n\nOwnerId -> (string)\n\nWhen a rule is shared with another Amazon Web Services account, the account ID of the account that the rule is shared with.\n\nShareStatus -> (string)\n\nWhether the rule is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\n\nCreationTime -> (string)\n\nThe date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).\n\nModificationTime -> (string)\n\nThe date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).",
      "command_examples": "Examples\n\nExample 1: To update settings Resolver endpoint\n\nThe following update-resolver-rule example updates the name of the rule, the IP addresses on your on-premises network that DNS queries are forwarded to, and the ID of the outbound Resolver endpoint that you’re using to forward queries to your network.\n\nNote Existing values for TargetIps are overwritten, so you must specify all the IP addresses that you want the rule to have after the update.\n\naws route53resolver update-resolver-rule \\\n    --resolver-rule-id rslvr-rr-1247fa64f3example \\\n    --config Name=\"my-2nd-rule\",TargetIps=[{Ip=192.0.2.45,Port=53},{Ip=192.0.2.46,Port=53}],ResolverEndpointId=rslvr-out-7b89ed0d25example\n\n\nOutput:\n\n{\n    \"ResolverRule\": {\n        \"Id\": \"rslvr-rr-1247fa64f3example\",\n        \"CreatorRequestId\": \"2020-01-02-18:47\",\n        \"Arn\": \"arn:aws:route53resolver:us-west-2:111122223333:resolver-rule/rslvr-rr-1247fa64f3example\",\n        \"DomainName\": \"www.example.com.\",\n        \"Status\": \"COMPLETE\",\n        \"StatusMessage\": \"[Trace id: 1-5dcc90b9-8a8ee860aba1ebd89example] Successfully updated Resolver Rule.\",\n        \"RuleType\": \"FORWARD\",\n        \"Name\": \"my-2nd-rule\",\n        \"TargetIps\": [\n            {\n                \"Ip\": \"192.0.2.45\",\n                \"Port\": 53\n            },\n            {\n                \"Ip\": \"192.0.2.46\",\n                \"Port\": 53\n            }\n        ],\n        \"ResolverEndpointId\": \"rslvr-out-7b89ed0d25example\",\n        \"OwnerId\": \"111122223333\",\n        \"ShareStatus\": \"NOT_SHARED\"\n    }\n}\n\n\nExample 2: To update settings Resolver endpoint using a file for ``config`` settings\n\nYou can alternatively include the config settings in a JSON file and then specify that file when you call update-resolver-rule.\n\naws route53resolver update-resolver-rule \\\n    --resolver-rule-id rslvr-rr-1247fa64f3example \\\n    --config file://c:\\temp\\update-resolver-rule.json\n\n\nContents of update-resolver-rule.json.\n\n{\n    \"Name\": \"my-2nd-rule\",\n    \"TargetIps\": [\n        {\n            \"Ip\": \"192.0.2.45\",\n            \"Port\": 53\n        },\n        {\n            \"Ip\": \"192.0.2.46\",\n            \"Port\": 53\n        }\n    ],\n    \"ResolverEndpointId\": \"rslvr-out-7b89ed0d25example\"\n}\n\n\nFor more information, see Values That You Specify When You Create or Edit Rules in the Amazon Route 53 Developer Guide."
    }
  ],
  "service_description": "Description\n\nWhen you create a VPC using Amazon VPC, you automatically get DNS resolution within the VPC from Route 53 Resolver. By default, Resolver answers DNS queries for VPC domain names such as domain names for EC2 instances or Elastic Load Balancing load balancers. Resolver performs recursive lookups against public name servers for all other domain names.\n\nYou can also configure DNS resolution between your VPC and your network over a Direct Connect or VPN connection:\n\nForward DNS queries from resolvers on your network to Route 53 Resolver\n\nDNS resolvers on your network can forward DNS queries to Resolver in a specified VPC. This allows your DNS resolvers to easily resolve domain names for Amazon Web Services resources such as EC2 instances or records in a Route 53 private hosted zone. For more information, see How DNS Resolvers on Your Network Forward DNS Queries to Route 53 Resolver in the Amazon Route 53 Developer Guide .\n\nConditionally forward queries from a VPC to resolvers on your network\n\nYou can configure Resolver to forward queries that it receives from EC2 instances in your VPCs to DNS resolvers on your network. To forward selected queries, you create Resolver rules that specify the domain names for the DNS queries that you want to forward (such as example.com), and the IP addresses of the DNS resolvers on your network that you want to forward the queries to. If a query matches multiple rules (example.com, acme.example.com), Resolver chooses the rule with the most specific match (acme.example.com) and forwards the query to the IP addresses that you specified in that rule. For more information, see How Route 53 Resolver Forwards DNS Queries from Your VPCs to Your Network in the Amazon Route 53 Developer Guide .\n\nLike Amazon VPC, Resolver is Regional. In each Region where you have VPCs, you can choose whether to forward queries from your VPCs to your network (outbound queries), from your network to your VPCs (inbound queries), or both."
}