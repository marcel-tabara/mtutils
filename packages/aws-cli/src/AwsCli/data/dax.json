{
  "service_name": "dax",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/index.html",
  "service_commands": [
    {
      "command_name": "create-cluster",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/create-cluster.html",
      "command_description": "Description\n\nCreates a DAX cluster. All nodes in the cluster run the same DAX caching software.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-cluster\n--cluster-name <value>\n--node-type <value>\n[--description <value>]\n--replication-factor <value>\n[--availability-zones <value>]\n[--subnet-group-name <value>]\n[--security-group-ids <value>]\n[--preferred-maintenance-window <value>]\n[--notification-topic-arn <value>]\n--iam-role-arn <value>\n[--parameter-group-name <value>]\n[--tags <value>]\n[--sse-specification <value>]\n[--cluster-endpoint-encryption-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cluster-name <value>",
        "--node-type <value>",
        "[--description <value>]",
        "--replication-factor <value>",
        "[--availability-zones <value>]",
        "[--subnet-group-name <value>]",
        "[--security-group-ids <value>]",
        "[--preferred-maintenance-window <value>]",
        "[--notification-topic-arn <value>]",
        "--iam-role-arn <value>",
        "[--parameter-group-name <value>]",
        "[--tags <value>]",
        "[--sse-specification <value>]",
        "[--cluster-endpoint-encryption-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cluster-name (string)\n\nThe cluster identifier. This parameter is stored as a lowercase string.\n\nConstraints:\n\nA name must contain from 1 to 20 alphanumeric characters or hyphens.\n\nThe first character must be a letter.\n\nA name cannot end with a hyphen or contain two consecutive hyphens.\n\n--node-type (string)\n\nThe compute and memory capacity of the nodes in the cluster.\n\n--description (string)\n\nA description of the cluster.\n\n--replication-factor (integer)\n\nThe number of nodes in the DAX cluster. A replication factor of 1 will create a single-node cluster, without any read replicas. For additional fault tolerance, you can create a multiple node cluster with one or more read replicas. To do this, set ReplicationFactor to a number between 3 (one primary and two read replicas) and 10 (one primary and nine read replicas). If the AvailabilityZones parameter is provided, its length must equal the ReplicationFactor .\n\nNote\n\nAWS recommends that you have at least two read replicas per cluster.\n\n--availability-zones (list)\n\nThe Availability Zones (AZs) in which the cluster nodes will reside after the cluster has been created or updated. If provided, the length of this list must equal the ReplicationFactor parameter. If you omit this parameter, DAX will spread the nodes across Availability Zones for the highest availability.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--subnet-group-name (string)\n\nThe name of the subnet group to be used for the replication group.\n\nWarning\n\nDAX clusters can only run in an Amazon VPC environment. All of the subnets that you specify in a subnet group must exist in the same VPC.\n\n--security-group-ids (list)\n\nA list of security group IDs to be assigned to each node in the DAX cluster. (Each of the security group ID is system-generated.)\n\nIf this parameter is not specified, DAX assigns the default VPC security group to each node.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--preferred-maintenance-window (string)\n\nSpecifies the weekly time range during which maintenance on the DAX cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for ddd are:\n\nsun\n\nmon\n\ntue\n\nwed\n\nthu\n\nfri\n\nsat\n\nExample: sun:05:00-sun:09:00\n\nNote\n\nIf you don’t specify a preferred maintenance window when you create or modify a cache cluster, DAX assigns a 60-minute maintenance window on a randomly selected day of the week.\n\n--notification-topic-arn (string)\n\nThe Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will be sent.\n\nNote\n\nThe Amazon SNS topic owner must be same as the DAX cluster owner.\n\n--iam-role-arn (string)\n\nA valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role’s permissions to access DynamoDB on your behalf.\n\n--parameter-group-name (string)\n\nThe parameter group to be associated with the DAX cluster.\n\n--tags (list)\n\nA set of tags to associate with the DAX cluster.\n\n(structure)\n\nA description of a tag. Every tag is a key-value pair. You can add up to 50 tags to a single DAX cluster.\n\nAWS-assigned tag names and values are automatically assigned the aws: prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix user: .\n\nYou cannot backdate the application of a tag.\n\nKey -> (string)\n\nThe key for the tag. Tag keys are case sensitive. Every DAX cluster can only have one tag with the same key. If you try to add an existing tag (same key), the existing tag value will be updated to the new value.\n\nValue -> (string)\n\nThe value of the tag. Tag values are case-sensitive and can be null.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--sse-specification (structure)\n\nRepresents the settings used to enable server-side encryption on the cluster.\n\nEnabled -> (boolean)\n\nIndicates whether server-side encryption is enabled (true) or disabled (false) on the cluster.\n\nShorthand Syntax:\n\nEnabled=boolean\n\n\nJSON Syntax:\n\n{\n  \"Enabled\": true|false\n}\n\n\n--cluster-endpoint-encryption-type (string)\n\nThe type of encryption the cluster’s endpoint should support. Values are:\n\nNONE for no encryption\n\nTLS for Transport Layer Security\n\nPossible values:\n\nNONE\n\nTLS\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCluster -> (structure)\n\nA description of the DAX cluster that you have created.\n\nClusterName -> (string)\n\nThe name of the DAX cluster.\n\nDescription -> (string)\n\nThe description of the cluster.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) that uniquely identifies the cluster.\n\nTotalNodes -> (integer)\n\nThe total number of nodes in the cluster.\n\nActiveNodes -> (integer)\n\nThe number of nodes in the cluster that are active (i.e., capable of serving requests).\n\nNodeType -> (string)\n\nThe node type for the nodes in the cluster. (All nodes in a DAX cluster are of the same type.)\n\nStatus -> (string)\n\nThe current status of the cluster.\n\nClusterDiscoveryEndpoint -> (structure)\n\nThe endpoint for this DAX cluster, consisting of a DNS name, a port number, and a URL. Applications should use the URL to configure the DAX client to find their cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeIdsToRemove -> (list)\n\nA list of nodes to be removed from the cluster.\n\n(string)\n\nNodes -> (list)\n\nA list of nodes that are currently in the cluster.\n\n(structure)\n\nRepresents an individual node within a DAX cluster.\n\nNodeId -> (string)\n\nA system-generated identifier for the node.\n\nEndpoint -> (structure)\n\nThe endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeCreateTime -> (timestamp)\n\nThe date and time (in UNIX epoch format) when the node was launched.\n\nAvailabilityZone -> (string)\n\nThe Availability Zone (AZ) in which the node has been deployed.\n\nNodeStatus -> (string)\n\nThe current status of the node. For example: available .\n\nParameterGroupStatus -> (string)\n\nThe status of the parameter group associated with this node. For example, in-sync .\n\nPreferredMaintenanceWindow -> (string)\n\nA range of time when maintenance of DAX cluster software will be performed. For example: sun:01:00-sun:09:00 . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.\n\nNotificationConfiguration -> (structure)\n\nDescribes a notification topic and its status. Notification topics are used for publishing DAX events to subscribers using Amazon Simple Notification Service (SNS).\n\nTopicArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the topic.\n\nTopicStatus -> (string)\n\nThe current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.\n\nSubnetGroup -> (string)\n\nThe subnet group where the DAX cluster is running.\n\nSecurityGroups -> (list)\n\nA list of security groups, and the status of each, for the nodes in the cluster.\n\n(structure)\n\nAn individual VPC security group and its status.\n\nSecurityGroupIdentifier -> (string)\n\nThe unique ID for this security group.\n\nStatus -> (string)\n\nThe status of this security group.\n\nIamRoleArn -> (string)\n\nA valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role’s permissions to access DynamoDB on your behalf.\n\nParameterGroup -> (structure)\n\nThe parameter group being used by nodes in the cluster.\n\nParameterGroupName -> (string)\n\nThe name of the parameter group.\n\nParameterApplyStatus -> (string)\n\nThe status of parameter updates.\n\nNodeIdsToReboot -> (list)\n\nThe node IDs of one or more nodes to be rebooted.\n\n(string)\n\nSSEDescription -> (structure)\n\nThe description of the server-side encryption status on the specified DAX cluster.\n\nStatus -> (string)\n\nThe current state of server-side encryption:\n\nENABLING - Server-side encryption is being enabled.\n\nENABLED - Server-side encryption is enabled.\n\nDISABLING - Server-side encryption is being disabled.\n\nDISABLED - Server-side encryption is disabled.\n\nClusterEndpointEncryptionType -> (string)\n\nThe type of encryption supported by the cluster’s endpoint. Values are:\n\nNONE for no encryption TLS for Transport Layer Security",
      "command_examples": "Examples\n\nTo create a DAX cluster\n\nThe following create-cluster example creates a DAX cluster with the specified settings.\n\naws dax create-cluster \\\n    --cluster-name daxcluster \\\n    --node-type dax.r4.large \\\n    --replication-factor 3 \\\n    --iam-role-arn roleARN  \\\n    --sse-specification Enabled=true\n\n\nOutput:\n\n{\n    \"Cluster\": {\n        \"ClusterName\": \"daxcluster\",\n        \"ClusterArn\": \"arn:aws:dax:us-west-2:123456789012:cache/daxcluster\",\n        \"TotalNodes\": 3,\n        \"ActiveNodes\": 0,\n        \"NodeType\": \"dax.r4.large\",\n        \"Status\": \"creating\",\n        \"ClusterDiscoveryEndpoint\": {\n            \"Port\": 8111\n        },\n        \"PreferredMaintenanceWindow\": \"thu:13:00-thu:14:00\",\n        \"SubnetGroup\": \"default\",\n        \"SecurityGroups\": [\n            {\n                \"SecurityGroupIdentifier\": \"sg-1af6e36e\",\n                \"Status\": \"active\"\n            }\n        ],\n        \"IamRoleArn\": \"arn:aws:iam::123456789012:role/DAXServiceRoleForDynamoDBAccess\",\n        \"ParameterGroup\": {\n            \"ParameterGroupName\": \"default.dax1.0\",\n            \"ParameterApplyStatus\": \"in-sync\",\n            \"NodeIdsToReboot\": []\n        },\n        \"SSEDescription\": {\n            \"Status\": \"ENABLED\"\n        }\n    }\n}\n\n\nFor more information, see Step 3: Create a DAX Cluster in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "create-parameter-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/create-parameter-group.html",
      "command_description": "Description\n\nCreates a new parameter group. A parameter group is a collection of parameters that you apply to all of the nodes in a DAX cluster.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-parameter-group\n--parameter-group-name <value>\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--parameter-group-name <value>",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--parameter-group-name (string)\n\nThe name of the parameter group to apply to all of the clusters in this replication group.\n\n--description (string)\n\nA description of the parameter group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nParameterGroup -> (structure)\n\nRepresents the output of a CreateParameterGroup action.\n\nParameterGroupName -> (string)\n\nThe name of the parameter group.\n\nDescription -> (string)\n\nA description of the parameter group.",
      "command_examples": "Examples\n\nTo create a parameter group\n\nThe following `` create-parameter-group`` example creates a parameter group with the specified settings.\n\naws dax create-parameter-group \\\n    --parameter-group-name daxparametergroup \\\n    --description \"A new parameter group\"\n\n\nOutput:\n\n{\n    \"ParameterGroup\": {\n        \"ParameterGroupName\": \"daxparametergroup\",\n        \"Description\": \"A new parameter group\"\n    }\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "create-subnet-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/create-subnet-group.html",
      "command_description": "Description\n\nCreates a new subnet group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-subnet-group\n--subnet-group-name <value>\n[--description <value>]\n--subnet-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--subnet-group-name <value>",
        "[--description <value>]",
        "--subnet-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--subnet-group-name (string)\n\nA name for the subnet group. This value is stored as a lowercase string.\n\n--description (string)\n\nA description for the subnet group\n\n--subnet-ids (list)\n\nA list of VPC subnet IDs for the subnet group.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSubnetGroup -> (structure)\n\nRepresents the output of a CreateSubnetGroup operation.\n\nSubnetGroupName -> (string)\n\nThe name of the subnet group.\n\nDescription -> (string)\n\nThe description of the subnet group.\n\nVpcId -> (string)\n\nThe Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.\n\nSubnets -> (list)\n\nA list of subnets associated with the subnet group.\n\n(structure)\n\nRepresents the subnet associated with a DAX cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with DAX.\n\nSubnetIdentifier -> (string)\n\nThe system-assigned identifier for the subnet.\n\nSubnetAvailabilityZone -> (string)\n\nThe Availability Zone (AZ) for the subnet.",
      "command_examples": "Examples\n\nTo create a DAX subnet group\n\nThe following create-subnet-group example creates a subnet group with the specified settings.\n\naws dax create-subnet-group \\\n    --subnet-group-name daxSubnetGroup \\\n    --subnet-ids subnet-11111111 subnet-22222222\n\n\nOutput:\n\n{\n    \"SubnetGroup\": {\n        \"SubnetGroupName\": \"daxSubnetGroup\",\n        \"VpcId\": \"vpc-05a1fa8e00c325226\",\n        \"Subnets\": [\n            {\n                \"SubnetIdentifier\": \"subnet-11111111\",\n                \"SubnetAvailabilityZone\": \"us-west-2b\"\n            },\n            {\n                \"SubnetIdentifier\": \"subnet-22222222\",\n                \"SubnetAvailabilityZone\": \"us-west-2c\"\n            }\n        ]\n    }\n}\n\n\nFor more information, see Step 2: Create a Subnet Group in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "decrease-replication-factor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/decrease-replication-factor.html",
      "command_description": "Description\n\nRemoves one or more nodes from a DAX cluster.\n\nNote\n\nYou cannot use DecreaseReplicationFactor to remove the last node in a DAX cluster. If you need to do this, use DeleteCluster instead.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  decrease-replication-factor\n--cluster-name <value>\n--new-replication-factor <value>\n[--availability-zones <value>]\n[--node-ids-to-remove <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cluster-name <value>",
        "--new-replication-factor <value>",
        "[--availability-zones <value>]",
        "[--node-ids-to-remove <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cluster-name (string)\n\nThe name of the DAX cluster from which you want to remove nodes.\n\n--new-replication-factor (integer)\n\nThe new number of nodes for the DAX cluster.\n\n--availability-zones (list)\n\nThe Availability Zone(s) from which to remove nodes.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--node-ids-to-remove (list)\n\nThe unique identifiers of the nodes to be removed from the cluster.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCluster -> (structure)\n\nA description of the DAX cluster, after you have decreased its replication factor.\n\nClusterName -> (string)\n\nThe name of the DAX cluster.\n\nDescription -> (string)\n\nThe description of the cluster.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) that uniquely identifies the cluster.\n\nTotalNodes -> (integer)\n\nThe total number of nodes in the cluster.\n\nActiveNodes -> (integer)\n\nThe number of nodes in the cluster that are active (i.e., capable of serving requests).\n\nNodeType -> (string)\n\nThe node type for the nodes in the cluster. (All nodes in a DAX cluster are of the same type.)\n\nStatus -> (string)\n\nThe current status of the cluster.\n\nClusterDiscoveryEndpoint -> (structure)\n\nThe endpoint for this DAX cluster, consisting of a DNS name, a port number, and a URL. Applications should use the URL to configure the DAX client to find their cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeIdsToRemove -> (list)\n\nA list of nodes to be removed from the cluster.\n\n(string)\n\nNodes -> (list)\n\nA list of nodes that are currently in the cluster.\n\n(structure)\n\nRepresents an individual node within a DAX cluster.\n\nNodeId -> (string)\n\nA system-generated identifier for the node.\n\nEndpoint -> (structure)\n\nThe endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeCreateTime -> (timestamp)\n\nThe date and time (in UNIX epoch format) when the node was launched.\n\nAvailabilityZone -> (string)\n\nThe Availability Zone (AZ) in which the node has been deployed.\n\nNodeStatus -> (string)\n\nThe current status of the node. For example: available .\n\nParameterGroupStatus -> (string)\n\nThe status of the parameter group associated with this node. For example, in-sync .\n\nPreferredMaintenanceWindow -> (string)\n\nA range of time when maintenance of DAX cluster software will be performed. For example: sun:01:00-sun:09:00 . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.\n\nNotificationConfiguration -> (structure)\n\nDescribes a notification topic and its status. Notification topics are used for publishing DAX events to subscribers using Amazon Simple Notification Service (SNS).\n\nTopicArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the topic.\n\nTopicStatus -> (string)\n\nThe current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.\n\nSubnetGroup -> (string)\n\nThe subnet group where the DAX cluster is running.\n\nSecurityGroups -> (list)\n\nA list of security groups, and the status of each, for the nodes in the cluster.\n\n(structure)\n\nAn individual VPC security group and its status.\n\nSecurityGroupIdentifier -> (string)\n\nThe unique ID for this security group.\n\nStatus -> (string)\n\nThe status of this security group.\n\nIamRoleArn -> (string)\n\nA valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role’s permissions to access DynamoDB on your behalf.\n\nParameterGroup -> (structure)\n\nThe parameter group being used by nodes in the cluster.\n\nParameterGroupName -> (string)\n\nThe name of the parameter group.\n\nParameterApplyStatus -> (string)\n\nThe status of parameter updates.\n\nNodeIdsToReboot -> (list)\n\nThe node IDs of one or more nodes to be rebooted.\n\n(string)\n\nSSEDescription -> (structure)\n\nThe description of the server-side encryption status on the specified DAX cluster.\n\nStatus -> (string)\n\nThe current state of server-side encryption:\n\nENABLING - Server-side encryption is being enabled.\n\nENABLED - Server-side encryption is enabled.\n\nDISABLING - Server-side encryption is being disabled.\n\nDISABLED - Server-side encryption is disabled.\n\nClusterEndpointEncryptionType -> (string)\n\nThe type of encryption supported by the cluster’s endpoint. Values are:\n\nNONE for no encryption TLS for Transport Layer Security",
      "command_examples": "Examples\n\nTo remove one or more nodes from the cluster\n\nThe following decrease-replication-factor example decreases the number of nodes in the specified DAX cluster to one.\n\naws dax decrease-replication-factor \\\n    --cluster-name daxcluster \\\n    --new-replication-factor 1\n\n\nOutput:\n\n{\n    \"Cluster\": {\n        \"ClusterName\": \"daxcluster\",\n        \"ClusterArn\": \"arn:aws:dax:us-west-2:123456789012:cache/daxcluster\",\n        \"TotalNodes\": 3,\n        \"ActiveNodes\": 3,\n        \"NodeType\": \"dax.r4.large\",\n        \"Status\": \"modifying\",\n        \"ClusterDiscoveryEndpoint\": {\n            \"Address\": \"daxcluster.ey3o9d.clustercfg.dax.usw2.cache.amazonaws.com\",\n            \"Port\": 8111\n        },\n        \"Nodes\": [\n            {\n                \"NodeId\": \"daxcluster-a\",\n                \"Endpoint\": {\n                    \"Address\": \"daxcluster-a.ey3o9d.0001.dax.usw2.cache.amazonaws.com\",\n                    \"Port\": 8111\n                },\n                \"NodeCreateTime\": 1576625059.509,\n                \"AvailabilityZone\": \"us-west-2c\",\n                \"NodeStatus\": \"available\",\n                \"ParameterGroupStatus\": \"in-sync\"\n            },\n            {\n                \"NodeId\": \"daxcluster-b\",\n                \"Endpoint\": {\n                    \"Address\": \"daxcluster-b.ey3o9d.0001.dax.usw2.cache.amazonaws.com\",\n                    \"Port\": 8111\n                },\n                \"NodeCreateTime\": 1576625059.509,\n                \"AvailabilityZone\": \"us-west-2a\",\n                \"NodeStatus\": \"available\",\n                \"ParameterGroupStatus\": \"in-sync\"\n            },\n            {\n                \"NodeId\": \"daxcluster-c\",\n                \"Endpoint\": {\n                    \"Address\": \"daxcluster-c.ey3o9d.0001.dax.usw2.cache.amazonaws.com\",\n                    \"Port\": 8111\n                },\n                \"NodeCreateTime\": 1576625059.509,\n                \"AvailabilityZone\": \"us-west-2b\",\n                \"NodeStatus\": \"available\",\n                \"ParameterGroupStatus\": \"in-sync\"\n            }\n        ],\n        \"PreferredMaintenanceWindow\": \"thu:13:00-thu:14:00\",\n        \"SubnetGroup\": \"default\",\n        \"SecurityGroups\": [\n            {\n                \"SecurityGroupIdentifier\": \"sg-1af6e36e\",\n                \"Status\": \"active\"\n            }\n        ],\n        \"IamRoleArn\": \"arn:aws:iam::123456789012:role/DAXServiceRoleForDynamoDBAccess\",\n        \"ParameterGroup\": {\n            \"ParameterGroupName\": \"default.dax1.0\",\n            \"ParameterApplyStatus\": \"in-sync\",\n            \"NodeIdsToReboot\": []\n        },\n        \"SSEDescription\": {\n            \"Status\": \"ENABLED\"\n        }\n    }\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "delete-cluster",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/delete-cluster.html",
      "command_description": "Description\n\nDeletes a previously provisioned DAX cluster. DeleteCluster deletes all associated nodes, node endpoints and the DAX cluster itself. When you receive a successful response from this action, DAX immediately begins deleting the cluster; you cannot cancel or revert this action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-cluster\n--cluster-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cluster-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cluster-name (string)\n\nThe name of the cluster to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCluster -> (structure)\n\nA description of the DAX cluster that is being deleted.\n\nClusterName -> (string)\n\nThe name of the DAX cluster.\n\nDescription -> (string)\n\nThe description of the cluster.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) that uniquely identifies the cluster.\n\nTotalNodes -> (integer)\n\nThe total number of nodes in the cluster.\n\nActiveNodes -> (integer)\n\nThe number of nodes in the cluster that are active (i.e., capable of serving requests).\n\nNodeType -> (string)\n\nThe node type for the nodes in the cluster. (All nodes in a DAX cluster are of the same type.)\n\nStatus -> (string)\n\nThe current status of the cluster.\n\nClusterDiscoveryEndpoint -> (structure)\n\nThe endpoint for this DAX cluster, consisting of a DNS name, a port number, and a URL. Applications should use the URL to configure the DAX client to find their cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeIdsToRemove -> (list)\n\nA list of nodes to be removed from the cluster.\n\n(string)\n\nNodes -> (list)\n\nA list of nodes that are currently in the cluster.\n\n(structure)\n\nRepresents an individual node within a DAX cluster.\n\nNodeId -> (string)\n\nA system-generated identifier for the node.\n\nEndpoint -> (structure)\n\nThe endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeCreateTime -> (timestamp)\n\nThe date and time (in UNIX epoch format) when the node was launched.\n\nAvailabilityZone -> (string)\n\nThe Availability Zone (AZ) in which the node has been deployed.\n\nNodeStatus -> (string)\n\nThe current status of the node. For example: available .\n\nParameterGroupStatus -> (string)\n\nThe status of the parameter group associated with this node. For example, in-sync .\n\nPreferredMaintenanceWindow -> (string)\n\nA range of time when maintenance of DAX cluster software will be performed. For example: sun:01:00-sun:09:00 . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.\n\nNotificationConfiguration -> (structure)\n\nDescribes a notification topic and its status. Notification topics are used for publishing DAX events to subscribers using Amazon Simple Notification Service (SNS).\n\nTopicArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the topic.\n\nTopicStatus -> (string)\n\nThe current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.\n\nSubnetGroup -> (string)\n\nThe subnet group where the DAX cluster is running.\n\nSecurityGroups -> (list)\n\nA list of security groups, and the status of each, for the nodes in the cluster.\n\n(structure)\n\nAn individual VPC security group and its status.\n\nSecurityGroupIdentifier -> (string)\n\nThe unique ID for this security group.\n\nStatus -> (string)\n\nThe status of this security group.\n\nIamRoleArn -> (string)\n\nA valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role’s permissions to access DynamoDB on your behalf.\n\nParameterGroup -> (structure)\n\nThe parameter group being used by nodes in the cluster.\n\nParameterGroupName -> (string)\n\nThe name of the parameter group.\n\nParameterApplyStatus -> (string)\n\nThe status of parameter updates.\n\nNodeIdsToReboot -> (list)\n\nThe node IDs of one or more nodes to be rebooted.\n\n(string)\n\nSSEDescription -> (structure)\n\nThe description of the server-side encryption status on the specified DAX cluster.\n\nStatus -> (string)\n\nThe current state of server-side encryption:\n\nENABLING - Server-side encryption is being enabled.\n\nENABLED - Server-side encryption is enabled.\n\nDISABLING - Server-side encryption is being disabled.\n\nDISABLED - Server-side encryption is disabled.\n\nClusterEndpointEncryptionType -> (string)\n\nThe type of encryption supported by the cluster’s endpoint. Values are:\n\nNONE for no encryption TLS for Transport Layer Security",
      "command_examples": "Examples\n\nTo delete a DAX cluster\n\nThe following delete-cluster example deletes the specified DAX cluster.\n\naws dax delete-cluster \\\n    --cluster-name daxcluster\n\n\nOutput:\n\n{\n    \"Cluster\": {\n        \"ClusterName\": \"daxcluster\",\n        \"ClusterArn\": \"arn:aws:dax:us-west-2:123456789012:cache/daxcluster\",\n        \"TotalNodes\": 3,\n        \"ActiveNodes\": 0,\n        \"NodeType\": \"dax.r4.large\",\n        \"Status\": \"deleting\",\n        \"ClusterDiscoveryEndpoint\": {\n            \"Address\": \"dd.ey3o9d.clustercfg.dax.usw2.cache.amazonaws.com\",\n            \"Port\": 8111\n        },\n        \"PreferredMaintenanceWindow\": \"fri:06:00-fri:07:00\",\n        \"SubnetGroup\": \"default\",\n        \"SecurityGroups\": [\n            {\n                \"SecurityGroupIdentifier\": \"sg-1af6e36e\",\n                \"Status\": \"active\"\n            }\n        ],\n        \"IamRoleArn\": \"arn:aws:iam::123456789012:role/DAXServiceRoleForDynamoDBAccess\",\n        \"ParameterGroup\": {\n            \"ParameterGroupName\": \"default.dax1.0\",\n            \"ParameterApplyStatus\": \"in-sync\",\n            \"NodeIdsToReboot\": []\n        },\n        \"SSEDescription\": {\n            \"Status\": \"ENABLED\"\n        }\n    }\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "delete-parameter-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/delete-parameter-group.html",
      "command_description": "Description\n\nDeletes the specified parameter group. You cannot delete a parameter group if it is associated with any DAX clusters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-parameter-group\n--parameter-group-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--parameter-group-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--parameter-group-name (string)\n\nThe name of the parameter group to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeletionMessage -> (string)\n\nA user-specified message for this action (i.e., a reason for deleting the parameter group).",
      "command_examples": "Examples\n\nTo delete a parameter group\n\nThe following delete-parameter-group example deletes the specified DAX parameter group.\n\naws dax  delete-parameter-group \\\n    --parameter-group-name daxparametergroup\n\n\nOutput:\n\n{\n    \"DeletionMessage\": \"Parameter group daxparametergroup has been deleted.\"\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "delete-subnet-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/delete-subnet-group.html",
      "command_description": "Description\n\nDeletes a subnet group.\n\nNote\n\nYou cannot delete a subnet group if it is associated with any DAX clusters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-subnet-group\n--subnet-group-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--subnet-group-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--subnet-group-name (string)\n\nThe name of the subnet group to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeletionMessage -> (string)\n\nA user-specified message for this action (i.e., a reason for deleting the subnet group).",
      "command_examples": "Examples\n\nTo delete a subnet group\n\nThe following delete-subnet-group example deletes the specified DAX subnet group.\n\naws dax delete-subnet-group \\\n    --subnet-group-name daxSubnetGroup\n\n\nOutput:\n\n{\n    \"DeletionMessage\": \"Subnet group daxSubnetGroup has been deleted.\"\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "describe-clusters",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/describe-clusters.html",
      "command_description": "Description\n\nReturns information about all provisioned DAX clusters if no cluster identifier is specified, or about a specific DAX cluster if a cluster identifier is supplied.\n\nIf the cluster is in the CREATING state, only cluster level information will be displayed until all of the nodes are successfully provisioned.\n\nIf the cluster is in the DELETING state, only cluster level information will be displayed.\n\nIf nodes are currently being added to the DAX cluster, node endpoint information and creation time for the additional nodes will not be displayed until they are completely provisioned. When the DAX cluster state is available , the cluster is ready for use.\n\nIf nodes are currently being removed from the DAX cluster, no endpoint information for the removed nodes is displayed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-clusters is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Clusters",
      "command_synopsis": "Synopsis\n  describe-clusters\n[--cluster-names <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cluster-names <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cluster-names (list)\n\nThe names of the DAX clusters being described.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nProvides an identifier to allow retrieval of paginated results.\n\nClusters -> (list)\n\nThe descriptions of your DAX clusters, in response to a DescribeClusters request.\n\n(structure)\n\nContains all of the attributes of a specific DAX cluster.\n\nClusterName -> (string)\n\nThe name of the DAX cluster.\n\nDescription -> (string)\n\nThe description of the cluster.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) that uniquely identifies the cluster.\n\nTotalNodes -> (integer)\n\nThe total number of nodes in the cluster.\n\nActiveNodes -> (integer)\n\nThe number of nodes in the cluster that are active (i.e., capable of serving requests).\n\nNodeType -> (string)\n\nThe node type for the nodes in the cluster. (All nodes in a DAX cluster are of the same type.)\n\nStatus -> (string)\n\nThe current status of the cluster.\n\nClusterDiscoveryEndpoint -> (structure)\n\nThe endpoint for this DAX cluster, consisting of a DNS name, a port number, and a URL. Applications should use the URL to configure the DAX client to find their cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeIdsToRemove -> (list)\n\nA list of nodes to be removed from the cluster.\n\n(string)\n\nNodes -> (list)\n\nA list of nodes that are currently in the cluster.\n\n(structure)\n\nRepresents an individual node within a DAX cluster.\n\nNodeId -> (string)\n\nA system-generated identifier for the node.\n\nEndpoint -> (structure)\n\nThe endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeCreateTime -> (timestamp)\n\nThe date and time (in UNIX epoch format) when the node was launched.\n\nAvailabilityZone -> (string)\n\nThe Availability Zone (AZ) in which the node has been deployed.\n\nNodeStatus -> (string)\n\nThe current status of the node. For example: available .\n\nParameterGroupStatus -> (string)\n\nThe status of the parameter group associated with this node. For example, in-sync .\n\nPreferredMaintenanceWindow -> (string)\n\nA range of time when maintenance of DAX cluster software will be performed. For example: sun:01:00-sun:09:00 . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.\n\nNotificationConfiguration -> (structure)\n\nDescribes a notification topic and its status. Notification topics are used for publishing DAX events to subscribers using Amazon Simple Notification Service (SNS).\n\nTopicArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the topic.\n\nTopicStatus -> (string)\n\nThe current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.\n\nSubnetGroup -> (string)\n\nThe subnet group where the DAX cluster is running.\n\nSecurityGroups -> (list)\n\nA list of security groups, and the status of each, for the nodes in the cluster.\n\n(structure)\n\nAn individual VPC security group and its status.\n\nSecurityGroupIdentifier -> (string)\n\nThe unique ID for this security group.\n\nStatus -> (string)\n\nThe status of this security group.\n\nIamRoleArn -> (string)\n\nA valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role’s permissions to access DynamoDB on your behalf.\n\nParameterGroup -> (structure)\n\nThe parameter group being used by nodes in the cluster.\n\nParameterGroupName -> (string)\n\nThe name of the parameter group.\n\nParameterApplyStatus -> (string)\n\nThe status of parameter updates.\n\nNodeIdsToReboot -> (list)\n\nThe node IDs of one or more nodes to be rebooted.\n\n(string)\n\nSSEDescription -> (structure)\n\nThe description of the server-side encryption status on the specified DAX cluster.\n\nStatus -> (string)\n\nThe current state of server-side encryption:\n\nENABLING - Server-side encryption is being enabled.\n\nENABLED - Server-side encryption is enabled.\n\nDISABLING - Server-side encryption is being disabled.\n\nDISABLED - Server-side encryption is disabled.\n\nClusterEndpointEncryptionType -> (string)\n\nThe type of encryption supported by the cluster’s endpoint. Values are:\n\nNONE for no encryption TLS for Transport Layer Security",
      "command_examples": "Examples\n\nTo return information about all provisioned DAX clusters\n\nThe following describe-clusters example displays details about all provisioned DAX clusters.\n\naws dax describe-clusters\n\n\nOutput:\n\n{\n    \"Clusters\": [\n        {\n            \"ClusterName\": \"daxcluster\",\n            \"ClusterArn\": \"arn:aws:dax:us-west-2:123456789012:cache/daxcluster\",\n            \"TotalNodes\": 1,\n            \"ActiveNodes\": 1,\n            \"NodeType\": \"dax.r4.large\",\n            \"Status\": \"available\",\n            \"ClusterDiscoveryEndpoint\": {\n                \"Address\": \"daxcluster.ey3o9d.clustercfg.dax.usw2.cache.amazonaws.com\",\n                \"Port\": 8111\n            },\n            \"Nodes\": [\n                {\n                    \"NodeId\": \"daxcluster-a\",\n                    \"Endpoint\": {\n                        \"Address\": \"daxcluster-a.ey3o9d.0001.dax.usw2.cache.amazonaws.com\",\n                        \"Port\": 8111\n                    },\n                    \"NodeCreateTime\": 1576625059.509,\n                    \"AvailabilityZone\": \"us-west-2c\",\n                    \"NodeStatus\": \"available\",\n                    \"ParameterGroupStatus\": \"in-sync\"\n                }\n            ],\n            \"PreferredMaintenanceWindow\": \"thu:13:00-thu:14:00\",\n            \"SubnetGroup\": \"default\",\n            \"SecurityGroups\": [\n                {\n                    \"SecurityGroupIdentifier\": \"sg-1af6e36e\",\n                    \"Status\": \"active\"\n                }\n            ],\n            \"IamRoleArn\": \"arn:aws:iam::123456789012:role/DAXServiceRoleForDynamoDBAccess\",\n            \"ParameterGroup\": {\n                \"ParameterGroupName\": \"default.dax1.0\",\n                \"ParameterApplyStatus\": \"in-sync\",\n                \"NodeIdsToReboot\": []\n            },\n            \"SSEDescription\": {\n                \"Status\": \"ENABLED\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "describe-default-parameters",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/describe-default-parameters.html",
      "command_description": "Description\n\nReturns the default system parameter information for the DAX caching software.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-default-parameters is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Parameters",
      "command_synopsis": "Synopsis\n  describe-default-parameters\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nProvides an identifier to allow retrieval of paginated results.\n\nParameters -> (list)\n\nA list of parameters. Each element in the list represents one parameter.\n\n(structure)\n\nDescribes an individual setting that controls some aspect of DAX behavior.\n\nParameterName -> (string)\n\nThe name of the parameter.\n\nParameterType -> (string)\n\nDetermines whether the parameter can be applied to any nodes, or only nodes of a particular type.\n\nParameterValue -> (string)\n\nThe value for the parameter.\n\nNodeTypeSpecificValues -> (list)\n\nA list of node types, and specific parameter values for each node.\n\n(structure)\n\nRepresents a parameter value that is applicable to a particular node type.\n\nNodeType -> (string)\n\nA node type to which the parameter value applies.\n\nValue -> (string)\n\nThe parameter value for this node type.\n\nDescription -> (string)\n\nA description of the parameter\n\nSource -> (string)\n\nHow the parameter is defined. For example, system denotes a system-defined parameter.\n\nDataType -> (string)\n\nThe data type of the parameter. For example, integer :\n\nAllowedValues -> (string)\n\nA range of values within which the parameter can be set.\n\nIsModifiable -> (string)\n\nWhether the customer is allowed to modify the parameter.\n\nChangeType -> (string)\n\nThe conditions under which changes to this parameter can be applied. For example, requires-reboot indicates that a new value for this parameter will only take effect if a node is rebooted.",
      "command_examples": "Examples\n\nTo return the default system parameter information for DAX\n\nThe following describe-default-parameters example displays the default system parameter information for DAX.\n\naws dax describe-default-parameters\n\n\nOutput:\n\n{\n    \"Parameters\": [\n        {\n            \"ParameterName\": \"query-ttl-millis\",\n            \"ParameterType\": \"DEFAULT\",\n            \"ParameterValue\": \"300000\",\n            \"NodeTypeSpecificValues\": [],\n            \"Description\": \"Duration in milliseconds for queries to remain cached\",\n            \"Source\": \"user\",\n            \"DataType\": \"integer\",\n            \"AllowedValues\": \"0-\",\n            \"IsModifiable\": \"TRUE\",\n            \"ChangeType\": \"IMMEDIATE\"\n        },\n        {\n            \"ParameterName\": \"record-ttl-millis\",\n            \"ParameterType\": \"DEFAULT\",\n            \"ParameterValue\": \"300000\",\n            \"NodeTypeSpecificValues\": [],\n            \"Description\": \"Duration in milliseconds for records to remain valid in cache (Default: 0 = infinite)\",\n            \"Source\": \"user\",\n            \"DataType\": \"integer\",\n            \"AllowedValues\": \"0-\",\n            \"IsModifiable\": \"TRUE\",\n            \"ChangeType\": \"IMMEDIATE\"\n        }\n    ]\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "describe-events",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/describe-events.html",
      "command_description": "Description\n\nReturns events related to DAX clusters and parameter groups. You can obtain events specific to a particular DAX cluster or parameter group by providing the name as a parameter.\n\nBy default, only the events occurring within the last 24 hours are returned; however, you can retrieve up to 14 days’ worth of events if necessary.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-events is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Events",
      "command_synopsis": "Synopsis\n  describe-events\n[--source-name <value>]\n[--source-type <value>]\n[--start-time <value>]\n[--end-time <value>]\n[--duration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--source-name <value>]",
        "[--source-type <value>]",
        "[--start-time <value>]",
        "[--end-time <value>]",
        "[--duration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--source-name (string)\n\nThe identifier of the event source for which events will be returned. If not specified, then all sources are included in the response.\n\n--source-type (string)\n\nThe event source to retrieve events for. If no value is specified, all events are returned.\n\nPossible values:\n\nCLUSTER\n\nPARAMETER_GROUP\n\nSUBNET_GROUP\n\n--start-time (timestamp)\n\nThe beginning of the time interval to retrieve events for, specified in ISO 8601 format.\n\n--end-time (timestamp)\n\nThe end of the time interval for which to retrieve events, specified in ISO 8601 format.\n\n--duration (integer)\n\nThe number of minutes’ worth of events to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nProvides an identifier to allow retrieval of paginated results.\n\nEvents -> (list)\n\nAn array of events. Each element in the array represents one event.\n\n(structure)\n\nRepresents a single occurrence of something interesting within the system. Some examples of events are creating a DAX cluster, adding or removing a node, or rebooting a node.\n\nSourceName -> (string)\n\nThe source of the event. For example, if the event occurred at the node level, the source would be the node ID.\n\nSourceType -> (string)\n\nSpecifies the origin of this event - a cluster, a parameter group, a node ID, etc.\n\nMessage -> (string)\n\nA user-defined message associated with the event.\n\nDate -> (timestamp)\n\nThe date and time when the event occurred.",
      "command_examples": "Examples\n\nTo return all events related to DAX clusters and parameter groups\n\nThe following describe-events example displays details of events that are related to DAX clusters and parameter groups.\n\naws dax describe-events\n\n\nOutput:\n\n{\n    \"Events\": [\n        {\n            \"SourceName\": \"daxcluster\",\n            \"SourceType\": \"CLUSTER\",\n            \"Message\": \"Cluster deleted.\",\n            \"Date\": 1576702736.706\n        },\n        {\n            \"SourceName\": \"daxcluster\",\n            \"SourceType\": \"CLUSTER\",\n            \"Message\": \"Removed node daxcluster-b.\",\n            \"Date\": 1576702691.738\n        },\n        {\n            \"SourceName\": \"daxcluster\",\n            \"SourceType\": \"CLUSTER\",\n            \"Message\": \"Removed node daxcluster-a.\",\n            \"Date\": 1576702633.498\n        },\n        {\n            \"SourceName\": \"daxcluster\",\n            \"SourceType\": \"CLUSTER\",\n            \"Message\": \"Removed node daxcluster-c.\",\n            \"Date\": 1576702631.329\n        },\n        {\n            \"SourceName\": \"daxcluster\",\n            \"SourceType\": \"CLUSTER\",\n            \"Message\": \"Cluster created.\",\n            \"Date\": 1576626560.057\n        }\n    ]\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "describe-parameter-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/describe-parameter-groups.html",
      "command_description": "Description\n\nReturns a list of parameter group descriptions. If a parameter group name is specified, the list will contain only the descriptions for that group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-parameter-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ParameterGroups",
      "command_synopsis": "Synopsis\n  describe-parameter-groups\n[--parameter-group-names <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--parameter-group-names <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--parameter-group-names (list)\n\nThe names of the parameter groups.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nProvides an identifier to allow retrieval of paginated results.\n\nParameterGroups -> (list)\n\nAn array of parameter groups. Each element in the array represents one parameter group.\n\n(structure)\n\nA named set of parameters that are applied to all of the nodes in a DAX cluster.\n\nParameterGroupName -> (string)\n\nThe name of the parameter group.\n\nDescription -> (string)\n\nA description of the parameter group.",
      "command_examples": "Examples\n\nTo describe the parameter groups defined in DAX\n\nThe following describe-parameter-groups example retrieves details about the parameter groups that are defined in DAX.\n\naws dax describe-parameter-groups\n\n\nOutput:\n\n{\n    \"ParameterGroups\": [\n        {\n            \"ParameterGroupName\": \"default.dax1.0\",\n            \"Description\": \"Default parameter group for dax1.0\"\n        }\n    ]\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "describe-parameters",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/describe-parameters.html",
      "command_description": "Description\n\nReturns the detailed parameter list for a particular parameter group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-parameters is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Parameters",
      "command_synopsis": "Synopsis\n  describe-parameters\n--parameter-group-name <value>\n[--source <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--parameter-group-name <value>",
        "[--source <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--parameter-group-name (string)\n\nThe name of the parameter group.\n\n--source (string)\n\nHow the parameter is defined. For example, system denotes a system-defined parameter.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nProvides an identifier to allow retrieval of paginated results.\n\nParameters -> (list)\n\nA list of parameters within a parameter group. Each element in the list represents one parameter.\n\n(structure)\n\nDescribes an individual setting that controls some aspect of DAX behavior.\n\nParameterName -> (string)\n\nThe name of the parameter.\n\nParameterType -> (string)\n\nDetermines whether the parameter can be applied to any nodes, or only nodes of a particular type.\n\nParameterValue -> (string)\n\nThe value for the parameter.\n\nNodeTypeSpecificValues -> (list)\n\nA list of node types, and specific parameter values for each node.\n\n(structure)\n\nRepresents a parameter value that is applicable to a particular node type.\n\nNodeType -> (string)\n\nA node type to which the parameter value applies.\n\nValue -> (string)\n\nThe parameter value for this node type.\n\nDescription -> (string)\n\nA description of the parameter\n\nSource -> (string)\n\nHow the parameter is defined. For example, system denotes a system-defined parameter.\n\nDataType -> (string)\n\nThe data type of the parameter. For example, integer :\n\nAllowedValues -> (string)\n\nA range of values within which the parameter can be set.\n\nIsModifiable -> (string)\n\nWhether the customer is allowed to modify the parameter.\n\nChangeType -> (string)\n\nThe conditions under which changes to this parameter can be applied. For example, requires-reboot indicates that a new value for this parameter will only take effect if a node is rebooted.",
      "command_examples": "Examples\n\nTo describe the parameters defined in a DAX parameter group\n\nThe following describe-parameters example retrieves details about the parameters that are defined in the specified DAX parameter group.\n\naws dax describe-parameters \\\n    --parameter-group-name default.dax1.0\n\n\nOutput:\n\n{\n    \"Parameters\": [\n        {\n            \"ParameterName\": \"query-ttl-millis\",\n            \"ParameterType\": \"DEFAULT\",\n            \"ParameterValue\": \"300000\",\n            \"NodeTypeSpecificValues\": [],\n            \"Description\": \"Duration in milliseconds for queries to remain cached\",\n            \"Source\": \"user\",\n            \"DataType\": \"integer\",\n            \"AllowedValues\": \"0-\",\n            \"IsModifiable\": \"TRUE\",\n            \"ChangeType\": \"IMMEDIATE\"\n        },\n        {\n            \"ParameterName\": \"record-ttl-millis\",\n            \"ParameterType\": \"DEFAULT\",\n            \"ParameterValue\": \"300000\",\n            \"NodeTypeSpecificValues\": [],\n            \"Description\": \"Duration in milliseconds for records to remain valid in cache (Default: 0 = infinite)\",\n            \"Source\": \"user\",\n            \"DataType\": \"integer\",\n            \"AllowedValues\": \"0-\",\n            \"IsModifiable\": \"TRUE\",\n            \"ChangeType\": \"IMMEDIATE\"\n        }\n    ]\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "describe-subnet-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/describe-subnet-groups.html",
      "command_description": "Description\n\nReturns a list of subnet group descriptions. If a subnet group name is specified, the list will contain only the description of that group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-subnet-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SubnetGroups",
      "command_synopsis": "Synopsis\n  describe-subnet-groups\n[--subnet-group-names <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--subnet-group-names <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--subnet-group-names (list)\n\nThe name of the subnet group.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nProvides an identifier to allow retrieval of paginated results.\n\nSubnetGroups -> (list)\n\nAn array of subnet groups. Each element in the array represents a single subnet group.\n\n(structure)\n\nRepresents the output of one of the following actions:\n\nCreateSubnetGroup\n\nModifySubnetGroup\n\nSubnetGroupName -> (string)\n\nThe name of the subnet group.\n\nDescription -> (string)\n\nThe description of the subnet group.\n\nVpcId -> (string)\n\nThe Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.\n\nSubnets -> (list)\n\nA list of subnets associated with the subnet group.\n\n(structure)\n\nRepresents the subnet associated with a DAX cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with DAX.\n\nSubnetIdentifier -> (string)\n\nThe system-assigned identifier for the subnet.\n\nSubnetAvailabilityZone -> (string)\n\nThe Availability Zone (AZ) for the subnet.",
      "command_examples": "Examples\n\nTo describe subnet groups defined in DAX\n\nThe following describe-subnet-groups example retrieves details for the subnet groups defined in DAX.\n\naws dax describe-subnet-groups\n\n\nOutput:\n\n{\n    \"SubnetGroups\": [\n        {\n            \"SubnetGroupName\": \"default\",\n            \"Description\": \"Default CacheSubnetGroup\",\n            \"VpcId\": \"vpc-ee70a196\",\n            \"Subnets\": [\n                {\n                    \"SubnetIdentifier\": \"subnet-874953af\",\n                    \"SubnetAvailabilityZone\": \"us-west-2d\"\n                },\n                {\n                    \"SubnetIdentifier\": \"subnet-bd3d1fc4\",\n                    \"SubnetAvailabilityZone\": \"us-west-2a\"\n                },\n                {\n                    \"SubnetIdentifier\": \"subnet-72c2ff28\",\n                    \"SubnetAvailabilityZone\": \"us-west-2c\"\n                },\n                {\n                    \"SubnetIdentifier\": \"subnet-09e6aa42\",\n                    \"SubnetAvailabilityZone\": \"us-west-2b\"\n                }\n            ]\n        }\n    ]\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "increase-replication-factor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/increase-replication-factor.html",
      "command_description": "Description\n\nAdds one or more nodes to a DAX cluster.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  increase-replication-factor\n--cluster-name <value>\n--new-replication-factor <value>\n[--availability-zones <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cluster-name <value>",
        "--new-replication-factor <value>",
        "[--availability-zones <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cluster-name (string)\n\nThe name of the DAX cluster that will receive additional nodes.\n\n--new-replication-factor (integer)\n\nThe new number of nodes for the DAX cluster.\n\n--availability-zones (list)\n\nThe Availability Zones (AZs) in which the cluster nodes will be created. All nodes belonging to the cluster are placed in these Availability Zones. Use this parameter if you want to distribute the nodes across multiple AZs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCluster -> (structure)\n\nA description of the DAX cluster. with its new replication factor.\n\nClusterName -> (string)\n\nThe name of the DAX cluster.\n\nDescription -> (string)\n\nThe description of the cluster.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) that uniquely identifies the cluster.\n\nTotalNodes -> (integer)\n\nThe total number of nodes in the cluster.\n\nActiveNodes -> (integer)\n\nThe number of nodes in the cluster that are active (i.e., capable of serving requests).\n\nNodeType -> (string)\n\nThe node type for the nodes in the cluster. (All nodes in a DAX cluster are of the same type.)\n\nStatus -> (string)\n\nThe current status of the cluster.\n\nClusterDiscoveryEndpoint -> (structure)\n\nThe endpoint for this DAX cluster, consisting of a DNS name, a port number, and a URL. Applications should use the URL to configure the DAX client to find their cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeIdsToRemove -> (list)\n\nA list of nodes to be removed from the cluster.\n\n(string)\n\nNodes -> (list)\n\nA list of nodes that are currently in the cluster.\n\n(structure)\n\nRepresents an individual node within a DAX cluster.\n\nNodeId -> (string)\n\nA system-generated identifier for the node.\n\nEndpoint -> (structure)\n\nThe endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeCreateTime -> (timestamp)\n\nThe date and time (in UNIX epoch format) when the node was launched.\n\nAvailabilityZone -> (string)\n\nThe Availability Zone (AZ) in which the node has been deployed.\n\nNodeStatus -> (string)\n\nThe current status of the node. For example: available .\n\nParameterGroupStatus -> (string)\n\nThe status of the parameter group associated with this node. For example, in-sync .\n\nPreferredMaintenanceWindow -> (string)\n\nA range of time when maintenance of DAX cluster software will be performed. For example: sun:01:00-sun:09:00 . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.\n\nNotificationConfiguration -> (structure)\n\nDescribes a notification topic and its status. Notification topics are used for publishing DAX events to subscribers using Amazon Simple Notification Service (SNS).\n\nTopicArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the topic.\n\nTopicStatus -> (string)\n\nThe current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.\n\nSubnetGroup -> (string)\n\nThe subnet group where the DAX cluster is running.\n\nSecurityGroups -> (list)\n\nA list of security groups, and the status of each, for the nodes in the cluster.\n\n(structure)\n\nAn individual VPC security group and its status.\n\nSecurityGroupIdentifier -> (string)\n\nThe unique ID for this security group.\n\nStatus -> (string)\n\nThe status of this security group.\n\nIamRoleArn -> (string)\n\nA valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role’s permissions to access DynamoDB on your behalf.\n\nParameterGroup -> (structure)\n\nThe parameter group being used by nodes in the cluster.\n\nParameterGroupName -> (string)\n\nThe name of the parameter group.\n\nParameterApplyStatus -> (string)\n\nThe status of parameter updates.\n\nNodeIdsToReboot -> (list)\n\nThe node IDs of one or more nodes to be rebooted.\n\n(string)\n\nSSEDescription -> (structure)\n\nThe description of the server-side encryption status on the specified DAX cluster.\n\nStatus -> (string)\n\nThe current state of server-side encryption:\n\nENABLING - Server-side encryption is being enabled.\n\nENABLED - Server-side encryption is enabled.\n\nDISABLING - Server-side encryption is being disabled.\n\nDISABLED - Server-side encryption is disabled.\n\nClusterEndpointEncryptionType -> (string)\n\nThe type of encryption supported by the cluster’s endpoint. Values are:\n\nNONE for no encryption TLS for Transport Layer Security",
      "command_examples": "Examples\n\nTo increase the replication factor for a DAX cluster\n\nThe following increase-replication-factor example increases the specified DAX cluster’s replication factor to 3.\n\naws dax increase-replication-factor \\\n    --cluster-name daxcluster \\\n    --new-replication-factor 3\n\n\nOutput:\n\n{\n    \"Cluster\": {\n        \"ClusterName\": \"daxcluster\",\n        \"ClusterArn\": \"arn:aws:dax:us-west-2:123456789012:cache/daxcluster\",\n        \"TotalNodes\": 3,\n        \"ActiveNodes\": 1,\n        \"NodeType\": \"dax.r4.large\",\n        \"Status\": \"modifying\",\n        \"ClusterDiscoveryEndpoint\": {\n            \"Address\": \"daxcluster.ey3o9d.clustercfg.dax.usw2.cache.amazonaws.com\",\n            \"Port\": 8111\n        },\n        \"Nodes\": [\n            {\n                \"NodeId\": \"daxcluster-a\",\n                \"Endpoint\": {\n                    \"Address\": \"daxcluster-a.ey3o9d.0001.dax.usw2.cache.amazonaws.com\",\n                    \"Port\": 8111\n                },\n                \"NodeCreateTime\": 1576625059.509,\n                \"AvailabilityZone\": \"us-west-2c\",\n                \"NodeStatus\": \"available\",\n                \"ParameterGroupStatus\": \"in-sync\"\n            },\n            {\n                \"NodeId\": \"daxcluster-b\",\n                \"NodeStatus\": \"creating\"\n            },\n            {\n                \"NodeId\": \"daxcluster-c\",\n                \"NodeStatus\": \"creating\"\n            }\n        ],\n        \"PreferredMaintenanceWindow\": \"thu:13:00-thu:14:00\",\n        \"SubnetGroup\": \"default\",\n        \"SecurityGroups\": [\n            {\n                \"SecurityGroupIdentifier\": \"sg-1af6e36e\",\n                \"Status\": \"active\"\n            }\n        ],\n        \"IamRoleArn\": \"arn:aws:iam::123456789012:role/DAXServiceRoleForDynamoDBAccess\",\n        \"ParameterGroup\": {\n            \"ParameterGroupName\": \"default.dax1.0\",\n            \"ParameterApplyStatus\": \"in-sync\",\n            \"NodeIdsToReboot\": []\n        },\n        \"SSEDescription\": {\n            \"Status\": \"ENABLED\"\n        }\n    }\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "list-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/list-tags.html",
      "command_description": "Description\n\nList all of the tags for a DAX cluster. You can call ListTags up to 10 times per second, per account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-tags is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Tags",
      "command_synopsis": "Synopsis\n  list-tags\n--resource-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-name (string)\n\nThe name of the DAX resource to which the tags belong.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nA list of tags currently associated with the DAX cluster.\n\n(structure)\n\nA description of a tag. Every tag is a key-value pair. You can add up to 50 tags to a single DAX cluster.\n\nAWS-assigned tag names and values are automatically assigned the aws: prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix user: .\n\nYou cannot backdate the application of a tag.\n\nKey -> (string)\n\nThe key for the tag. Tag keys are case sensitive. Every DAX cluster can only have one tag with the same key. If you try to add an existing tag (same key), the existing tag value will be updated to the new value.\n\nValue -> (string)\n\nThe value of the tag. Tag values are case-sensitive and can be null.\n\nNextToken -> (string)\n\nIf this value is present, there are additional results to be displayed. To retrieve them, call ListTags again, with NextToken set to this value.",
      "command_examples": "Examples\n\nTo list tags on a DAX resource\n\nThe following list-tags example lists the tag keys and values attached to the specified DAX cluster.\n\naws dax list-tags \\\n    --resource-name arn:aws:dax:us-west-2:123456789012:cache/daxcluster\n\n\nOutput:\n\n{\n    \"Tags\": [\n        {\n            \"Key\": \"ClusterUsage\",\n            \"Value\": \"prod\"\n        }\n    ]\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "reboot-node",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/reboot-node.html",
      "command_description": "Description\n\nReboots a single node of a DAX cluster. The reboot action takes place as soon as possible. During the reboot, the node status is set to REBOOTING.\n\nNote\n\nRebootNode restarts the DAX engine process and does not remove the contents of the cache.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  reboot-node\n--cluster-name <value>\n--node-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cluster-name <value>",
        "--node-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cluster-name (string)\n\nThe name of the DAX cluster containing the node to be rebooted.\n\n--node-id (string)\n\nThe system-assigned ID of the node to be rebooted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCluster -> (structure)\n\nA description of the DAX cluster after a node has been rebooted.\n\nClusterName -> (string)\n\nThe name of the DAX cluster.\n\nDescription -> (string)\n\nThe description of the cluster.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) that uniquely identifies the cluster.\n\nTotalNodes -> (integer)\n\nThe total number of nodes in the cluster.\n\nActiveNodes -> (integer)\n\nThe number of nodes in the cluster that are active (i.e., capable of serving requests).\n\nNodeType -> (string)\n\nThe node type for the nodes in the cluster. (All nodes in a DAX cluster are of the same type.)\n\nStatus -> (string)\n\nThe current status of the cluster.\n\nClusterDiscoveryEndpoint -> (structure)\n\nThe endpoint for this DAX cluster, consisting of a DNS name, a port number, and a URL. Applications should use the URL to configure the DAX client to find their cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeIdsToRemove -> (list)\n\nA list of nodes to be removed from the cluster.\n\n(string)\n\nNodes -> (list)\n\nA list of nodes that are currently in the cluster.\n\n(structure)\n\nRepresents an individual node within a DAX cluster.\n\nNodeId -> (string)\n\nA system-generated identifier for the node.\n\nEndpoint -> (structure)\n\nThe endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeCreateTime -> (timestamp)\n\nThe date and time (in UNIX epoch format) when the node was launched.\n\nAvailabilityZone -> (string)\n\nThe Availability Zone (AZ) in which the node has been deployed.\n\nNodeStatus -> (string)\n\nThe current status of the node. For example: available .\n\nParameterGroupStatus -> (string)\n\nThe status of the parameter group associated with this node. For example, in-sync .\n\nPreferredMaintenanceWindow -> (string)\n\nA range of time when maintenance of DAX cluster software will be performed. For example: sun:01:00-sun:09:00 . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.\n\nNotificationConfiguration -> (structure)\n\nDescribes a notification topic and its status. Notification topics are used for publishing DAX events to subscribers using Amazon Simple Notification Service (SNS).\n\nTopicArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the topic.\n\nTopicStatus -> (string)\n\nThe current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.\n\nSubnetGroup -> (string)\n\nThe subnet group where the DAX cluster is running.\n\nSecurityGroups -> (list)\n\nA list of security groups, and the status of each, for the nodes in the cluster.\n\n(structure)\n\nAn individual VPC security group and its status.\n\nSecurityGroupIdentifier -> (string)\n\nThe unique ID for this security group.\n\nStatus -> (string)\n\nThe status of this security group.\n\nIamRoleArn -> (string)\n\nA valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role’s permissions to access DynamoDB on your behalf.\n\nParameterGroup -> (structure)\n\nThe parameter group being used by nodes in the cluster.\n\nParameterGroupName -> (string)\n\nThe name of the parameter group.\n\nParameterApplyStatus -> (string)\n\nThe status of parameter updates.\n\nNodeIdsToReboot -> (list)\n\nThe node IDs of one or more nodes to be rebooted.\n\n(string)\n\nSSEDescription -> (structure)\n\nThe description of the server-side encryption status on the specified DAX cluster.\n\nStatus -> (string)\n\nThe current state of server-side encryption:\n\nENABLING - Server-side encryption is being enabled.\n\nENABLED - Server-side encryption is enabled.\n\nDISABLING - Server-side encryption is being disabled.\n\nDISABLED - Server-side encryption is disabled.\n\nClusterEndpointEncryptionType -> (string)\n\nThe type of encryption supported by the cluster’s endpoint. Values are:\n\nNONE for no encryption TLS for Transport Layer Security"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/tag-resource.html",
      "command_description": "Description\n\nAssociates a set of tags with a DAX resource. You can call TagResource up to 5 times per second, per account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-name <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-name <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-name (string)\n\nThe name of the DAX resource to which tags should be added.\n\n--tags (list)\n\nThe tags to be assigned to the DAX resource.\n\n(structure)\n\nA description of a tag. Every tag is a key-value pair. You can add up to 50 tags to a single DAX cluster.\n\nAWS-assigned tag names and values are automatically assigned the aws: prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix user: .\n\nYou cannot backdate the application of a tag.\n\nKey -> (string)\n\nThe key for the tag. Tag keys are case sensitive. Every DAX cluster can only have one tag with the same key. If you try to add an existing tag (same key), the existing tag value will be updated to the new value.\n\nValue -> (string)\n\nThe value of the tag. Tag values are case-sensitive and can be null.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tags that are associated with the DAX resource.\n\n(structure)\n\nA description of a tag. Every tag is a key-value pair. You can add up to 50 tags to a single DAX cluster.\n\nAWS-assigned tag names and values are automatically assigned the aws: prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix user: .\n\nYou cannot backdate the application of a tag.\n\nKey -> (string)\n\nThe key for the tag. Tag keys are case sensitive. Every DAX cluster can only have one tag with the same key. If you try to add an existing tag (same key), the existing tag value will be updated to the new value.\n\nValue -> (string)\n\nThe value of the tag. Tag values are case-sensitive and can be null.",
      "command_examples": "Examples\n\nTo tag a DAX resource\n\nThe following tag-resource example attaches the specified tag key name and associated value to the specified DAX cluster to describe the cluster usage.\n\naws dax tag-resource \\\n    --resource-name arn:aws:dax:us-west-2:123456789012:cache/daxcluster \\\n    --tags=\"Key=ClusterUsage,Value=prod\"\n\n\nOutput:\n\n{\n    \"Tags\": [\n        {\n            \"Key\": \"ClusterUsage\",\n            \"Value\": \"prod\"\n        }\n    ]\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/untag-resource.html",
      "command_description": "Description\n\nRemoves the association of tags from a DAX resource. You can call UntagResource up to 5 times per second, per account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-name <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-name <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-name (string)\n\nThe name of the DAX resource from which the tags should be removed.\n\n--tag-keys (list)\n\nA list of tag keys. If the DAX cluster has any tags with these keys, then the tags are removed from the cluster.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe tag keys that have been removed from the cluster.\n\n(structure)\n\nA description of a tag. Every tag is a key-value pair. You can add up to 50 tags to a single DAX cluster.\n\nAWS-assigned tag names and values are automatically assigned the aws: prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix user: .\n\nYou cannot backdate the application of a tag.\n\nKey -> (string)\n\nThe key for the tag. Tag keys are case sensitive. Every DAX cluster can only have one tag with the same key. If you try to add an existing tag (same key), the existing tag value will be updated to the new value.\n\nValue -> (string)\n\nThe value of the tag. Tag values are case-sensitive and can be null.",
      "command_examples": "Examples\n\nTo remove tags from a DAX resource\n\nThe following untag-resource example removes the tag with the specified key name from a DAX cluster.\n\naws dax untag-resource  \\\n    --resource-name arn:aws:dax:us-west-2:123456789012:cache/daxcluster \\\n    --tag-keys=\"ClusterUsage\"\n\n\nOutput:\n\n{\n    \"Tags\": []\n}\n\n\nFor more information, see Managing DAX Clusters in the Amazon DynamoDB Developer Guide."
    },
    {
      "command_name": "update-cluster",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/update-cluster.html",
      "command_description": "Description\n\nModifies the settings for a DAX cluster. You can use this action to change one or more cluster configuration parameters by specifying the parameters and the new values.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-cluster\n--cluster-name <value>\n[--description <value>]\n[--preferred-maintenance-window <value>]\n[--notification-topic-arn <value>]\n[--notification-topic-status <value>]\n[--parameter-group-name <value>]\n[--security-group-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cluster-name <value>",
        "[--description <value>]",
        "[--preferred-maintenance-window <value>]",
        "[--notification-topic-arn <value>]",
        "[--notification-topic-status <value>]",
        "[--parameter-group-name <value>]",
        "[--security-group-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cluster-name (string)\n\nThe name of the DAX cluster to be modified.\n\n--description (string)\n\nA description of the changes being made to the cluster.\n\n--preferred-maintenance-window (string)\n\nA range of time when maintenance of DAX cluster software will be performed. For example: sun:01:00-sun:09:00 . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.\n\n--notification-topic-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the topic.\n\n--notification-topic-status (string)\n\nThe current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.\n\n--parameter-group-name (string)\n\nThe name of a parameter group for this cluster.\n\n--security-group-ids (list)\n\nA list of user-specified security group IDs to be assigned to each node in the DAX cluster. If this parameter is not specified, DAX assigns the default VPC security group to each node.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCluster -> (structure)\n\nA description of the DAX cluster, after it has been modified.\n\nClusterName -> (string)\n\nThe name of the DAX cluster.\n\nDescription -> (string)\n\nThe description of the cluster.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) that uniquely identifies the cluster.\n\nTotalNodes -> (integer)\n\nThe total number of nodes in the cluster.\n\nActiveNodes -> (integer)\n\nThe number of nodes in the cluster that are active (i.e., capable of serving requests).\n\nNodeType -> (string)\n\nThe node type for the nodes in the cluster. (All nodes in a DAX cluster are of the same type.)\n\nStatus -> (string)\n\nThe current status of the cluster.\n\nClusterDiscoveryEndpoint -> (structure)\n\nThe endpoint for this DAX cluster, consisting of a DNS name, a port number, and a URL. Applications should use the URL to configure the DAX client to find their cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeIdsToRemove -> (list)\n\nA list of nodes to be removed from the cluster.\n\n(string)\n\nNodes -> (list)\n\nA list of nodes that are currently in the cluster.\n\n(structure)\n\nRepresents an individual node within a DAX cluster.\n\nNodeId -> (string)\n\nA system-generated identifier for the node.\n\nEndpoint -> (structure)\n\nThe endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses to nodes in the DAX cluster.\n\nAddress -> (string)\n\nThe DNS hostname of the endpoint.\n\nPort -> (integer)\n\nThe port number that applications should use to connect to the endpoint.\n\nURL -> (string)\n\nThe URL that applications should use to connect to the endpoint. The default ports are 8111 for the “dax” protocol and 9111 for the “daxs” protocol.\n\nNodeCreateTime -> (timestamp)\n\nThe date and time (in UNIX epoch format) when the node was launched.\n\nAvailabilityZone -> (string)\n\nThe Availability Zone (AZ) in which the node has been deployed.\n\nNodeStatus -> (string)\n\nThe current status of the node. For example: available .\n\nParameterGroupStatus -> (string)\n\nThe status of the parameter group associated with this node. For example, in-sync .\n\nPreferredMaintenanceWindow -> (string)\n\nA range of time when maintenance of DAX cluster software will be performed. For example: sun:01:00-sun:09:00 . Cluster maintenance normally takes less than 30 minutes, and is performed automatically within the maintenance window.\n\nNotificationConfiguration -> (structure)\n\nDescribes a notification topic and its status. Notification topics are used for publishing DAX events to subscribers using Amazon Simple Notification Service (SNS).\n\nTopicArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the topic.\n\nTopicStatus -> (string)\n\nThe current state of the topic. A value of “active” means that notifications will be sent to the topic. A value of “inactive” means that notifications will not be sent to the topic.\n\nSubnetGroup -> (string)\n\nThe subnet group where the DAX cluster is running.\n\nSecurityGroups -> (list)\n\nA list of security groups, and the status of each, for the nodes in the cluster.\n\n(structure)\n\nAn individual VPC security group and its status.\n\nSecurityGroupIdentifier -> (string)\n\nThe unique ID for this security group.\n\nStatus -> (string)\n\nThe status of this security group.\n\nIamRoleArn -> (string)\n\nA valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role’s permissions to access DynamoDB on your behalf.\n\nParameterGroup -> (structure)\n\nThe parameter group being used by nodes in the cluster.\n\nParameterGroupName -> (string)\n\nThe name of the parameter group.\n\nParameterApplyStatus -> (string)\n\nThe status of parameter updates.\n\nNodeIdsToReboot -> (list)\n\nThe node IDs of one or more nodes to be rebooted.\n\n(string)\n\nSSEDescription -> (structure)\n\nThe description of the server-side encryption status on the specified DAX cluster.\n\nStatus -> (string)\n\nThe current state of server-side encryption:\n\nENABLING - Server-side encryption is being enabled.\n\nENABLED - Server-side encryption is enabled.\n\nDISABLING - Server-side encryption is being disabled.\n\nDISABLED - Server-side encryption is disabled.\n\nClusterEndpointEncryptionType -> (string)\n\nThe type of encryption supported by the cluster’s endpoint. Values are:\n\nNONE for no encryption TLS for Transport Layer Security"
    },
    {
      "command_name": "update-parameter-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/update-parameter-group.html",
      "command_description": "Description\n\nModifies the parameters of a parameter group. You can modify up to 20 parameters in a single request by submitting a list parameter name and value pairs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-parameter-group\n--parameter-group-name <value>\n--parameter-name-values <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--parameter-group-name <value>",
        "--parameter-name-values <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--parameter-group-name (string)\n\nThe name of the parameter group.\n\n--parameter-name-values (list)\n\nAn array of name-value pairs for the parameters in the group. Each element in the array represents a single parameter.\n\nNote\n\nrecord-ttl-millis and query-ttl-millis are the only supported parameter names. For more details, see Configuring TTL Settings .\n\n(structure)\n\nAn individual DAX parameter.\n\nParameterName -> (string)\n\nThe name of the parameter.\n\nParameterValue -> (string)\n\nThe value of the parameter.\n\nShorthand Syntax:\n\nParameterName=string,ParameterValue=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"ParameterName\": \"string\",\n    \"ParameterValue\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nParameterGroup -> (structure)\n\nThe parameter group that has been modified.\n\nParameterGroupName -> (string)\n\nThe name of the parameter group.\n\nDescription -> (string)\n\nA description of the parameter group."
    },
    {
      "command_name": "update-subnet-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/dax/update-subnet-group.html",
      "command_description": "Description\n\nModifies an existing subnet group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-subnet-group\n--subnet-group-name <value>\n[--description <value>]\n[--subnet-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--subnet-group-name <value>",
        "[--description <value>]",
        "[--subnet-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--subnet-group-name (string)\n\nThe name of the subnet group.\n\n--description (string)\n\nA description of the subnet group.\n\n--subnet-ids (list)\n\nA list of subnet IDs in the subnet group.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSubnetGroup -> (structure)\n\nThe subnet group that has been modified.\n\nSubnetGroupName -> (string)\n\nThe name of the subnet group.\n\nDescription -> (string)\n\nThe description of the subnet group.\n\nVpcId -> (string)\n\nThe Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.\n\nSubnets -> (list)\n\nA list of subnets associated with the subnet group.\n\n(structure)\n\nRepresents the subnet associated with a DAX cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with DAX.\n\nSubnetIdentifier -> (string)\n\nThe system-assigned identifier for the subnet.\n\nSubnetAvailabilityZone -> (string)\n\nThe Availability Zone (AZ) for the subnet."
    }
  ],
  "service_description": "Description\n\nDAX is a managed caching service engineered for Amazon DynamoDB. DAX dramatically speeds up database reads by caching frequently-accessed data from DynamoDB, so applications can access that data with sub-millisecond latency. You can create a DAX cluster easily, using the AWS Management Console. With a few simple modifications to your code, your application can begin taking advantage of the DAX cluster and realize significant improvements in read performance."
}