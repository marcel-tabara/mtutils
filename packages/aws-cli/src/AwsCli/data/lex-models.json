{
  "service_name": "lex-models",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/index.html",
  "service_commands": [
    {
      "command_name": "create-bot-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/create-bot-version.html",
      "command_description": "Description\n\nCreates a new version of the bot based on the $LATEST version. If the $LATEST version of this resource hasn’t changed since you created the last version, Amazon Lex doesn’t create a new version. It returns the last created version.\n\nNote\n\nYou can update only the $LATEST version of the bot. You can’t update the numbered versions that you create with the CreateBotVersion operation.\n\nWhen you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent versions increment by 1. For more information, see versioning-intro .\n\nThis operation requires permission for the lex:CreateBotVersion action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-bot-version\n--name <value>\n[--checksum <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--checksum <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the bot that you want to create a new version of. The name is case sensitive.\n\n--checksum (string)\n\nIdentifies a specific revision of the $LATEST version of the bot. If you specify a checksum and the $LATEST version of the bot has a different checksum, a PreconditionFailedException exception is returned and Amazon Lex doesn’t publish a new version. If you don’t specify a checksum, Amazon Lex publishes the $LATEST version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the bot.\n\ndescription -> (string)\n\nA description of the bot.\n\nintents -> (list)\n\nAn array of Intent objects. For more information, see PutBot .\n\n(structure)\n\nIdentifies the specific version of an intent.\n\nintentName -> (string)\n\nThe name of the intent.\n\nintentVersion -> (string)\n\nThe version of the intent.\n\nclarificationPrompt -> (structure)\n\nThe message that Amazon Lex uses when it doesn’t understand the user’s request. For more information, see PutBot .\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nabortStatement -> (structure)\n\nThe message that Amazon Lex uses to cancel a conversation. For more information, see PutBot .\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nstatus -> (string)\n\nWhen you send a request to create or update a bot, Amazon Lex sets the status response element to BUILDING . After Amazon Lex builds the bot, it sets status to READY . If Amazon Lex can’t build the bot, it sets status to FAILED . Amazon Lex returns the reason for the failure in the failureReason response element.\n\nfailureReason -> (string)\n\nIf status is FAILED , Amazon Lex provides the reason that it failed to build the bot.\n\nlastUpdatedDate -> (timestamp)\n\nThe date when the $LATEST version of this bot was updated.\n\ncreatedDate -> (timestamp)\n\nThe date when the bot version was created.\n\nidleSessionTTLInSeconds -> (integer)\n\nThe maximum time in seconds that Amazon Lex retains the data gathered in a conversation. For more information, see PutBot .\n\nvoiceId -> (string)\n\nThe Amazon Polly voice ID that Amazon Lex uses for voice interactions with the user.\n\nchecksum -> (string)\n\nChecksum identifying the version of the bot that was created.\n\nversion -> (string)\n\nThe version of the bot.\n\nlocale -> (string)\n\nSpecifies the target locale for the bot.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.\n\nIf your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ.\n\nenableModelImprovements -> (boolean)\n\nIndicates whether the bot uses accuracy improvements. true indicates that the bot is using the improvements, otherwise, false .\n\ndetectSentiment -> (boolean)\n\nIndicates whether utterances entered by the user should be sent to Amazon Comprehend for sentiment analysis."
    },
    {
      "command_name": "create-intent-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/create-intent-version.html",
      "command_description": "Description\n\nCreates a new version of an intent based on the $LATEST version of the intent. If the $LATEST version of this intent hasn’t changed since you last updated it, Amazon Lex doesn’t create a new version. It returns the last version you created.\n\nNote\n\nYou can update only the $LATEST version of the intent. You can’t update the numbered versions that you create with the CreateIntentVersion operation.\n\nWhen you create a version of an intent, Amazon Lex sets the version to 1. Subsequent versions increment by 1. For more information, see versioning-intro .\n\nThis operation requires permissions to perform the lex:CreateIntentVersion action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-intent-version\n--name <value>\n[--checksum <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--checksum <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the intent that you want to create a new version of. The name is case sensitive.\n\n--checksum (string)\n\nChecksum of the $LATEST version of the intent that should be used to create the new version. If you specify a checksum and the $LATEST version of the intent has a different checksum, Amazon Lex returns a PreconditionFailedException exception and doesn’t publish a new version. If you don’t specify a checksum, Amazon Lex publishes the $LATEST version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the intent.\n\ndescription -> (string)\n\nA description of the intent.\n\nslots -> (list)\n\nAn array of slot types that defines the information required to fulfill the intent.\n\n(structure)\n\nIdentifies the version of a specific slot.\n\nname -> (string)\n\nThe name of the slot.\n\ndescription -> (string)\n\nA description of the slot.\n\nslotConstraint -> (string)\n\nSpecifies whether the slot is required or optional.\n\nslotType -> (string)\n\nThe type of the slot, either a custom slot type that you defined or one of the built-in slot types.\n\nslotTypeVersion -> (string)\n\nThe version of the slot type.\n\nvalueElicitationPrompt -> (structure)\n\nThe prompt that Amazon Lex uses to elicit the slot value from the user.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\npriority -> (integer)\n\nDirects Amazon Lex the order in which to elicit this slot value from the user. For example, if the intent has two slots with priorities 1 and 2, AWS Amazon Lex first elicits a value for the slot with priority 1.\n\nIf multiple slots share the same priority, the order in which Amazon Lex elicits values is arbitrary.\n\nsampleUtterances -> (list)\n\nIf you know a specific pattern with which users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.\n\n(string)\n\nresponseCard -> (string)\n\nA set of possible responses for the slot type used by text-based clients. A user chooses an option from the response card, instead of using text to reply.\n\nobfuscationSetting -> (string)\n\nDetermines whether a slot is obfuscated in conversation logs and stored utterances. When you obfuscate a slot, the value is replaced by the slot name in curly braces ({}). For example, if the slot name is “full_name”, obfuscated values are replaced with “{full_name}”. For more information, see Slot Obfuscation .\n\ndefaultValueSpec -> (structure)\n\nA list of default values for the slot. Default values are used when Amazon Lex hasn’t determined a value for a slot. You can specify default values from context variables, session attributes, and defined values.\n\ndefaultValueList -> (list)\n\nThe default values for a slot. You can specify more than one default. For example, you can specify a default value to use from a matching context variable, a session attribute, or a fixed value.\n\nThe default value chosen is selected based on the order that you specify them in the list. For example, if you specify a context variable and a fixed value in that order, Amazon Lex uses the context variable if it is available, else it uses the fixed value.\n\n(structure)\n\nA default value for a slot.\n\ndefaultValue -> (string)\n\nThe default value for the slot. You can specify one of the following:\n\n#context-name.slot-name - The slot value “slot-name” in the context “context-name.”\n\n{attribute} - The slot value of the session attribute “attribute.”\n\n'value' - The discrete value “value.”\n\nsampleUtterances -> (list)\n\nAn array of sample utterances configured for the intent.\n\n(string)\n\nconfirmationPrompt -> (structure)\n\nIf defined, the prompt that Amazon Lex uses to confirm the user’s intent before fulfilling it.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nrejectionStatement -> (structure)\n\nIf the user answers “no” to the question defined in confirmationPrompt , Amazon Lex responds with this statement to acknowledge that the intent was canceled.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nfollowUpPrompt -> (structure)\n\nIf defined, Amazon Lex uses this prompt to solicit additional user activity after the intent is fulfilled.\n\nprompt -> (structure)\n\nPrompts for information from the user.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nrejectionStatement -> (structure)\n\nIf the user answers “no” to the question defined in the prompt field, Amazon Lex responds with this statement to acknowledge that the intent was canceled.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nconclusionStatement -> (structure)\n\nAfter the Lambda function specified in the fulfillmentActivity field fulfills the intent, Amazon Lex conveys this statement to the user.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\ndialogCodeHook -> (structure)\n\nIf defined, Amazon Lex invokes this Lambda function for each user input.\n\nuri -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\nmessageVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see using-lambda .\n\nfulfillmentActivity -> (structure)\n\nDescribes how the intent is fulfilled.\n\ntype -> (string)\n\nHow the intent should be fulfilled, either by running a Lambda function or by returning the slot data to the client application.\n\ncodeHook -> (structure)\n\nA description of the Lambda function that is run to fulfill the intent.\n\nuri -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\nmessageVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see using-lambda .\n\nparentIntentSignature -> (string)\n\nA unique identifier for a built-in intent.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the intent was updated.\n\ncreatedDate -> (timestamp)\n\nThe date that the intent was created.\n\nversion -> (string)\n\nThe version number assigned to the new version of the intent.\n\nchecksum -> (string)\n\nChecksum of the intent version created.\n\nkendraConfiguration -> (structure)\n\nConfiguration information, if any, for connecting an Amazon Kendra index with the AMAZON.KendraSearchIntent intent.\n\nkendraIndex -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot. If the Amazon Kendra index does not exist, you get an exception when you call the PutIntent operation.\n\nqueryFilterString -> (string)\n\nA query filter that Amazon Lex sends to Amazon Kendra to filter the response from the query. The filter is in the format defined by Amazon Kendra. For more information, see Filtering queries .\n\nYou can override this filter string with a new filter string at runtime.\n\nrole -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that has permission to search the Amazon Kendra index. The role must be in the same account and Region as the Amazon Lex bot. If the role does not exist, you get an exception when you call the PutIntent operation.\n\ninputContexts -> (list)\n\nAn array of InputContext objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user.\n\n(structure)\n\nThe name of a context that must be active for an intent to be selected by Amazon Lex.\n\nname -> (string)\n\nThe name of the context.\n\noutputContexts -> (list)\n\nAn array of OutputContext objects that lists the contexts that the intent activates when the intent is fulfilled.\n\n(structure)\n\nThe specification of an output context that is set when an intent is fulfilled.\n\nname -> (string)\n\nThe name of the context.\n\ntimeToLiveInSeconds -> (integer)\n\nThe number of seconds that the context should be active after it is first sent in a PostContent or PostText response. You can set the value between 5 and 86,400 seconds (24 hours).\n\nturnsToLive -> (integer)\n\nThe number of conversation turns that the context should be active. A conversation turn is one PostContent or PostText request and the corresponding response from Amazon Lex."
    },
    {
      "command_name": "create-slot-type-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/create-slot-type-version.html",
      "command_description": "Description\n\nCreates a new version of a slot type based on the $LATEST version of the specified slot type. If the $LATEST version of this resource has not changed since the last version that you created, Amazon Lex doesn’t create a new version. It returns the last version that you created.\n\nNote\n\nYou can update only the $LATEST version of a slot type. You can’t update the numbered versions that you create with the CreateSlotTypeVersion operation.\n\nWhen you create a version of a slot type, Amazon Lex sets the version to 1. Subsequent versions increment by 1. For more information, see versioning-intro .\n\nThis operation requires permissions for the lex:CreateSlotTypeVersion action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-slot-type-version\n--name <value>\n[--checksum <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--checksum <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the slot type that you want to create a new version for. The name is case sensitive.\n\n--checksum (string)\n\nChecksum for the $LATEST version of the slot type that you want to publish. If you specify a checksum and the $LATEST version of the slot type has a different checksum, Amazon Lex returns a PreconditionFailedException exception and doesn’t publish the new version. If you don’t specify a checksum, Amazon Lex publishes the $LATEST version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the slot type.\n\ndescription -> (string)\n\nA description of the slot type.\n\nenumerationValues -> (list)\n\nA list of EnumerationValue objects that defines the values that the slot type can take.\n\n(structure)\n\nEach slot type can have a set of values. Each enumeration value represents a value the slot type can take.\n\nFor example, a pizza ordering bot could have a slot type that specifies the type of crust that the pizza should have. The slot type could include the values\n\nthick\n\nthin\n\nstuffed\n\nvalue -> (string)\n\nThe value of the slot type.\n\nsynonyms -> (list)\n\nAdditional values related to the slot type value.\n\n(string)\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the slot type was updated. When you create a resource, the creation date and last update date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the slot type was created.\n\nversion -> (string)\n\nThe version assigned to the new slot type version.\n\nchecksum -> (string)\n\nChecksum of the $LATEST version of the slot type.\n\nvalueSelectionStrategy -> (string)\n\nThe strategy that Amazon Lex uses to determine the value of the slot. For more information, see PutSlotType .\n\nparentSlotTypeSignature -> (string)\n\nThe built-in slot type used a the parent of the slot type.\n\nslotTypeConfigurations -> (list)\n\nConfiguration information that extends the parent built-in slot type.\n\n(structure)\n\nProvides configuration information for a slot type.\n\nregexConfiguration -> (structure)\n\nA regular expression used to validate the value of a slot.\n\npattern -> (string)\n\nA regular expression used to validate the value of a slot.\n\nUse a standard regular expression. Amazon Lex supports the following characters in the regular expression:\n\nA-Z, a-z\n\n0-9\n\nUnicode characters (“u<Unicode>”)\n\nRepresent Unicode characters with four digits, for example “u0041” or “u005A”.\n\nThe following regular expression operators are not supported:\n\nInfinite repeaters: *, +, or {x,} with no upper bound.\n\nWild card (.)"
    },
    {
      "command_name": "delete-bot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/delete-bot.html",
      "command_description": "Description\n\nDeletes all versions of the bot, including the $LATEST version. To delete a specific version of the bot, use the DeleteBotVersion operation. The DeleteBot operation doesn’t immediately remove the bot schema. Instead, it is marked for deletion and removed later.\n\nAmazon Lex stores utterances indefinitely for improving the ability of your bot to respond to user inputs. These utterances are not removed when the bot is deleted. To remove the utterances, use the DeleteUtterances operation.\n\nIf a bot has an alias, you can’t delete it. Instead, the DeleteBot operation returns a ResourceInUseException exception that includes a reference to the alias that refers to the bot. To remove the reference to the bot, delete the alias. If you get the same exception again, delete the referring alias until the DeleteBot operation is successful.\n\nThis operation requires permissions for the lex:DeleteBot action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-bot\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the bot. The name is case sensitive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-bot-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/delete-bot-alias.html",
      "command_description": "Description\n\nDeletes an alias for the specified bot.\n\nYou can’t delete an alias that is used in the association between a bot and a messaging channel. If an alias is used in a channel association, the DeleteBot operation returns a ResourceInUseException exception that includes a reference to the channel association that refers to the bot. You can remove the reference to the alias by deleting the channel association. If you get the same exception again, delete the referring association until the DeleteBotAlias operation is successful.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-bot-alias\n--name <value>\n--bot-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--bot-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the alias to delete. The name is case sensitive.\n\n--bot-name (string)\n\nThe name of the bot that the alias points to.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-bot-channel-association",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/delete-bot-channel-association.html",
      "command_description": "Description\n\nDeletes the association between an Amazon Lex bot and a messaging platform.\n\nThis operation requires permission for the lex:DeleteBotChannelAssociation action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-bot-channel-association\n--name <value>\n--bot-name <value>\n--bot-alias <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--bot-name <value>",
        "--bot-alias <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the association. The name is case sensitive.\n\n--bot-name (string)\n\nThe name of the Amazon Lex bot.\n\n--bot-alias (string)\n\nAn alias that points to the specific version of the Amazon Lex bot to which this association is being made.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-bot-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/delete-bot-version.html",
      "command_description": "Description\n\nDeletes a specific version of a bot. To delete all versions of a bot, use the DeleteBot operation.\n\nThis operation requires permissions for the lex:DeleteBotVersion action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-bot-version\n--name <value>\n--bot-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--bot-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the bot.\n\n--bot-version (string)\n\nThe version of the bot to delete. You cannot delete the $LATEST version of the bot. To delete the $LATEST version, use the DeleteBot operation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-intent",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/delete-intent.html",
      "command_description": "Description\n\nDeletes all versions of the intent, including the $LATEST version. To delete a specific version of the intent, use the DeleteIntentVersion operation.\n\nYou can delete a version of an intent only if it is not referenced. To delete an intent that is referred to in one or more bots (see how-it-works ), you must remove those references first.\n\nNote\n\nIf you get the ResourceInUseException exception, it provides an example reference that shows where the intent is referenced. To remove the reference to the intent, either update the bot or delete it. If you get the same exception when you attempt to delete the intent again, repeat until the intent has no references and the call to DeleteIntent is successful.\n\nThis operation requires permission for the lex:DeleteIntent action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-intent\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the intent. The name is case sensitive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-intent-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/delete-intent-version.html",
      "command_description": "Description\n\nDeletes a specific version of an intent. To delete all versions of a intent, use the DeleteIntent operation.\n\nThis operation requires permissions for the lex:DeleteIntentVersion action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-intent-version\n--name <value>\n--intent-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--intent-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the intent.\n\n--intent-version (string)\n\nThe version of the intent to delete. You cannot delete the $LATEST version of the intent. To delete the $LATEST version, use the DeleteIntent operation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-slot-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/delete-slot-type.html",
      "command_description": "Description\n\nDeletes all versions of the slot type, including the $LATEST version. To delete a specific version of the slot type, use the DeleteSlotTypeVersion operation.\n\nYou can delete a version of a slot type only if it is not referenced. To delete a slot type that is referred to in one or more intents, you must remove those references first.\n\nNote\n\nIf you get the ResourceInUseException exception, the exception provides an example reference that shows the intent where the slot type is referenced. To remove the reference to the slot type, either update the intent or delete it. If you get the same exception when you attempt to delete the slot type again, repeat until the slot type has no references and the DeleteSlotType call is successful.\n\nThis operation requires permission for the lex:DeleteSlotType action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-slot-type\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the slot type. The name is case sensitive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-slot-type-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/delete-slot-type-version.html",
      "command_description": "Description\n\nDeletes a specific version of a slot type. To delete all versions of a slot type, use the DeleteSlotType operation.\n\nThis operation requires permissions for the lex:DeleteSlotTypeVersion action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-slot-type-version\n--name <value>\n--slot-type-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--slot-type-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the slot type.\n\n--slot-type-version (string)\n\nThe version of the slot type to delete. You cannot delete the $LATEST version of the slot type. To delete the $LATEST version, use the DeleteSlotType operation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-utterances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/delete-utterances.html",
      "command_description": "Description\n\nDeletes stored utterances.\n\nAmazon Lex stores the utterances that users send to your bot. Utterances are stored for 15 days for use with the GetUtterancesView operation, and then stored indefinitely for use in improving the ability of your bot to respond to user input.\n\nUse the DeleteUtterances operation to manually delete stored utterances for a specific user. When you use the DeleteUtterances operation, utterances stored for improving your bot’s ability to respond to user input are deleted immediately. Utterances stored for use with the GetUtterancesView operation are deleted after 15 days.\n\nThis operation requires permissions for the lex:DeleteUtterances action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-utterances\n--bot-name <value>\n--user-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-name <value>",
        "--user-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-name (string)\n\nThe name of the bot that stored the utterances.\n\n--user-id (string)\n\nThe unique identifier for the user that made the utterances. This is the user ID that was sent in the PostContent or PostText operation request that contained the utterance.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "get-bot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-bot.html",
      "command_description": "Description\n\nReturns metadata information for a specific bot. You must provide the bot name and the bot version or alias.\n\nThis operation requires permissions for the lex:GetBot action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-bot\n--name <value>\n--version-or-alias <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--version-or-alias <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the bot. The name is case sensitive.\n\n--version-or-alias (string)\n\nThe version or alias of the bot.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the bot.\n\ndescription -> (string)\n\nA description of the bot.\n\nintents -> (list)\n\nAn array of intent objects. For more information, see PutBot .\n\n(structure)\n\nIdentifies the specific version of an intent.\n\nintentName -> (string)\n\nThe name of the intent.\n\nintentVersion -> (string)\n\nThe version of the intent.\n\nenableModelImprovements -> (boolean)\n\nIndicates whether the bot uses accuracy improvements. true indicates that the bot is using the improvements, otherwise, false .\n\nnluIntentConfidenceThreshold -> (double)\n\nThe score that determines where Amazon Lex inserts the AMAZON.FallbackIntent , AMAZON.KendraSearchIntent , or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent is inserted if the confidence score for all intents is below this value. AMAZON.KendraSearchIntent is only inserted if it is configured for the bot.\n\nclarificationPrompt -> (structure)\n\nThe message Amazon Lex uses when it doesn’t understand the user’s request. For more information, see PutBot .\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nabortStatement -> (structure)\n\nThe message that Amazon Lex returns when the user elects to end the conversation without completing it. For more information, see PutBot .\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nstatus -> (string)\n\nThe status of the bot.\n\nWhen the status is BUILDING Amazon Lex is building the bot for testing and use.\n\nIf the status of the bot is READY_BASIC_TESTING , you can test the bot using the exact utterances specified in the bot’s intents. When the bot is ready for full testing or to run, the status is READY .\n\nIf there was a problem with building the bot, the status is FAILED and the failureReason field explains why the bot did not build.\n\nIf the bot was saved but not built, the status is NOT_BUILT .\n\nfailureReason -> (string)\n\nIf status is FAILED , Amazon Lex explains why it failed to build the bot.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the bot was updated. When you create a resource, the creation date and last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the bot was created.\n\nidleSessionTTLInSeconds -> (integer)\n\nThe maximum time in seconds that Amazon Lex retains the data gathered in a conversation. For more information, see PutBot .\n\nvoiceId -> (string)\n\nThe Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user. For more information, see PutBot .\n\nchecksum -> (string)\n\nChecksum of the bot used to identify a specific revision of the bot’s $LATEST version.\n\nversion -> (string)\n\nThe version of the bot. For a new bot, the version is always $LATEST .\n\nlocale -> (string)\n\nThe target locale for the bot.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.\n\nIf your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ.\n\ndetectSentiment -> (boolean)\n\nIndicates whether user utterances should be sent to Amazon Comprehend for sentiment analysis."
    },
    {
      "command_name": "get-bot-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-bot-alias.html",
      "command_description": "Description\n\nReturns information about an Amazon Lex bot alias. For more information about aliases, see versioning-aliases .\n\nThis operation requires permissions for the lex:GetBotAlias action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-bot-alias\n--name <value>\n--bot-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--bot-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the bot alias. The name is case sensitive.\n\n--bot-name (string)\n\nThe name of the bot.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the bot alias.\n\ndescription -> (string)\n\nA description of the bot alias.\n\nbotVersion -> (string)\n\nThe version of the bot that the alias points to.\n\nbotName -> (string)\n\nThe name of the bot that the alias points to.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the bot alias was created.\n\nchecksum -> (string)\n\nChecksum of the bot alias.\n\nconversationLogs -> (structure)\n\nThe settings that determine how Amazon Lex uses conversation logs for the alias.\n\nlogSettings -> (list)\n\nThe settings for your conversation logs. You can log text, audio, or both.\n\n(structure)\n\nThe settings for conversation logs.\n\nlogType -> (string)\n\nThe type of logging that is enabled.\n\ndestination -> (string)\n\nThe destination where logs are delivered.\n\nkmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket.\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered.\n\nresourcePrefix -> (string)\n\nThe resource prefix is the first part of the S3 object key within the S3 bucket that you specified to contain audio logs. For CloudWatch Logs it is the prefix of the log stream name within the log group that you specified.\n\niamRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket."
    },
    {
      "command_name": "get-bot-aliases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-bot-aliases.html",
      "command_description": "Description\n\nReturns a list of aliases for a specified Amazon Lex bot.\n\nThis operation requires permissions for the lex:GetBotAliases action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-bot-aliases is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: BotAliases",
      "command_synopsis": "Synopsis\n  get-bot-aliases\n--bot-name <value>\n[--name-contains <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-name <value>",
        "[--name-contains <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-name (string)\n\nThe name of the bot.\n\n--name-contains (string)\n\nSubstring to match in bot alias names. An alias will be returned if any part of its name matches the substring. For example, “xyz” matches both “xyzabc” and “abcxyz.”\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBotAliases -> (list)\n\nAn array of BotAliasMetadata objects, each describing a bot alias.\n\n(structure)\n\nProvides information about a bot alias.\n\nname -> (string)\n\nThe name of the bot alias.\n\ndescription -> (string)\n\nA description of the bot alias.\n\nbotVersion -> (string)\n\nThe version of the Amazon Lex bot to which the alias points.\n\nbotName -> (string)\n\nThe name of the bot to which the alias points.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the bot alias was updated. When you create a resource, the creation date and last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the bot alias was created.\n\nchecksum -> (string)\n\nChecksum of the bot alias.\n\nconversationLogs -> (structure)\n\nSettings that determine how Amazon Lex uses conversation logs for the alias.\n\nlogSettings -> (list)\n\nThe settings for your conversation logs. You can log text, audio, or both.\n\n(structure)\n\nThe settings for conversation logs.\n\nlogType -> (string)\n\nThe type of logging that is enabled.\n\ndestination -> (string)\n\nThe destination where logs are delivered.\n\nkmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket.\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered.\n\nresourcePrefix -> (string)\n\nThe resource prefix is the first part of the S3 object key within the S3 bucket that you specified to contain audio logs. For CloudWatch Logs it is the prefix of the log stream name within the log group that you specified.\n\niamRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket.\n\nnextToken -> (string)\n\nA pagination token for fetching next page of aliases. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of aliases, specify the pagination token in the next request."
    },
    {
      "command_name": "get-bot-channel-association",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-bot-channel-association.html",
      "command_description": "Description\n\nReturns information about the association between an Amazon Lex bot and a messaging platform.\n\nThis operation requires permissions for the lex:GetBotChannelAssociation action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-bot-channel-association\n--name <value>\n--bot-name <value>\n--bot-alias <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--bot-name <value>",
        "--bot-alias <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the association between the bot and the channel. The name is case sensitive.\n\n--bot-name (string)\n\nThe name of the Amazon Lex bot.\n\n--bot-alias (string)\n\nAn alias pointing to the specific version of the Amazon Lex bot to which this association is being made.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the association between the bot and the channel.\n\ndescription -> (string)\n\nA description of the association between the bot and the channel.\n\nbotAlias -> (string)\n\nAn alias pointing to the specific version of the Amazon Lex bot to which this association is being made.\n\nbotName -> (string)\n\nThe name of the Amazon Lex bot.\n\ncreatedDate -> (timestamp)\n\nThe date that the association between the bot and the channel was created.\n\ntype -> (string)\n\nThe type of the messaging platform.\n\nbotConfiguration -> (map)\n\nProvides information that the messaging platform needs to communicate with the Amazon Lex bot.\n\nkey -> (string)\n\nvalue -> (string)\n\nstatus -> (string)\n\nThe status of the bot channel.\n\nCREATED - The channel has been created and is ready for use.\n\nIN_PROGRESS - Channel creation is in progress.\n\nFAILED - There was an error creating the channel. For information about the reason for the failure, see the failureReason field.\n\nfailureReason -> (string)\n\nIf status is FAILED , Amazon Lex provides the reason that it failed to create the association."
    },
    {
      "command_name": "get-bot-channel-associations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-bot-channel-associations.html",
      "command_description": "Description\n\nReturns a list of all of the channels associated with the specified bot.\n\nThe GetBotChannelAssociations operation requires permissions for the lex:GetBotChannelAssociations action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-bot-channel-associations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: botChannelAssociations",
      "command_synopsis": "Synopsis\n  get-bot-channel-associations\n--bot-name <value>\n--bot-alias <value>\n[--name-contains <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-name <value>",
        "--bot-alias <value>",
        "[--name-contains <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-name (string)\n\nThe name of the Amazon Lex bot in the association.\n\n--bot-alias (string)\n\nAn alias pointing to the specific version of the Amazon Lex bot to which this association is being made.\n\n--name-contains (string)\n\nSubstring to match in channel association names. An association will be returned if any part of its name matches the substring. For example, “xyz” matches both “xyzabc” and “abcxyz.” To return all bot channel associations, use a hyphen (“-“) as the nameContains parameter.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotChannelAssociations -> (list)\n\nAn array of objects, one for each association, that provides information about the Amazon Lex bot and its association with the channel.\n\n(structure)\n\nRepresents an association between an Amazon Lex bot and an external messaging platform.\n\nname -> (string)\n\nThe name of the association between the bot and the channel.\n\ndescription -> (string)\n\nA text description of the association you are creating.\n\nbotAlias -> (string)\n\nAn alias pointing to the specific version of the Amazon Lex bot to which this association is being made.\n\nbotName -> (string)\n\nThe name of the Amazon Lex bot to which this association is being made.\n\nNote\n\nCurrently, Amazon Lex supports associations with Facebook and Slack, and Twilio.\n\ncreatedDate -> (timestamp)\n\nThe date that the association between the Amazon Lex bot and the channel was created.\n\ntype -> (string)\n\nSpecifies the type of association by indicating the type of channel being established between the Amazon Lex bot and the external messaging platform.\n\nbotConfiguration -> (map)\n\nProvides information necessary to communicate with the messaging platform.\n\nkey -> (string)\n\nvalue -> (string)\n\nstatus -> (string)\n\nThe status of the bot channel.\n\nCREATED - The channel has been created and is ready for use.\n\nIN_PROGRESS - Channel creation is in progress.\n\nFAILED - There was an error creating the channel. For information about the reason for the failure, see the failureReason field.\n\nfailureReason -> (string)\n\nIf status is FAILED , Amazon Lex provides the reason that it failed to create the association.\n\nnextToken -> (string)\n\nA pagination token that fetches the next page of associations. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of associations, specify the pagination token in the next request."
    },
    {
      "command_name": "get-bot-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-bot-versions.html",
      "command_description": "Description\n\nGets information about all of the versions of a bot.\n\nThe GetBotVersions operation returns a BotMetadata object for each version of a bot. For example, if a bot has three numbered versions, the GetBotVersions operation returns four BotMetadata objects in the response, one for each numbered version and one for the $LATEST version.\n\nThe GetBotVersions operation always returns at least one version, the $LATEST version.\n\nThis operation requires permissions for the lex:GetBotVersions action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-bot-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: bots",
      "command_synopsis": "Synopsis\n  get-bot-versions\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the bot for which versions should be returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbots -> (list)\n\nAn array of BotMetadata objects, one for each numbered version of the bot plus one for the $LATEST version.\n\n(structure)\n\nProvides information about a bot. .\n\nname -> (string)\n\nThe name of the bot.\n\ndescription -> (string)\n\nA description of the bot.\n\nstatus -> (string)\n\nThe status of the bot.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the bot was updated. When you create a bot, the creation date and last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the bot was created.\n\nversion -> (string)\n\nThe version of the bot. For a new bot, the version is always $LATEST .\n\nnextToken -> (string)\n\nA pagination token for fetching the next page of bot versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request."
    },
    {
      "command_name": "get-bots",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-bots.html",
      "command_description": "Description\n\nReturns bot information as follows:\n\nIf you provide the nameContains field, the response includes information for the $LATEST version of all bots whose name contains the specified string.\n\nIf you don’t specify the nameContains field, the operation returns information about the $LATEST version of all of your bots.\n\nThis operation requires permission for the lex:GetBots action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-bots is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: bots",
      "command_synopsis": "Synopsis\n  get-bots\n[--name-contains <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name-contains <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-contains (string)\n\nSubstring to match in bot names. A bot will be returned if any part of its name matches the substring. For example, “xyz” matches both “xyzabc” and “abcxyz.”\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbots -> (list)\n\nAn array of botMetadata objects, with one entry for each bot.\n\n(structure)\n\nProvides information about a bot. .\n\nname -> (string)\n\nThe name of the bot.\n\ndescription -> (string)\n\nA description of the bot.\n\nstatus -> (string)\n\nThe status of the bot.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the bot was updated. When you create a bot, the creation date and last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the bot was created.\n\nversion -> (string)\n\nThe version of the bot. For a new bot, the version is always $LATEST .\n\nnextToken -> (string)\n\nIf the response is truncated, it includes a pagination token that you can specify in your next request to fetch the next page of bots."
    },
    {
      "command_name": "get-builtin-intent",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-builtin-intent.html",
      "command_description": "Description\n\nReturns information about a built-in intent.\n\nThis operation requires permission for the lex:GetBuiltinIntent action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-builtin-intent\n--signature <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--signature <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--signature (string)\n\nThe unique identifier for a built-in intent. To find the signature for an intent, see Standard Built-in Intents in the Alexa Skills Kit .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsignature -> (string)\n\nThe unique identifier for a built-in intent.\n\nsupportedLocales -> (list)\n\nA list of locales that the intent supports.\n\n(string)\n\nslots -> (list)\n\nAn array of BuiltinIntentSlot objects, one entry for each slot type in the intent.\n\n(structure)\n\nProvides information about a slot used in a built-in intent.\n\nname -> (string)\n\nA list of the slots defined for the intent."
    },
    {
      "command_name": "get-builtin-intents",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-builtin-intents.html",
      "command_description": "Description\n\nGets a list of built-in intents that meet the specified criteria.\n\nThis operation requires permission for the lex:GetBuiltinIntents action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-builtin-intents is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: intents",
      "command_synopsis": "Synopsis\n  get-builtin-intents\n[--locale <value>]\n[--signature-contains <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--locale <value>]",
        "[--signature-contains <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--locale (string)\n\nA list of locales that the intent supports.\n\nPossible values:\n\nde-DE\n\nen-AU\n\nen-GB\n\nen-IN\n\nen-US\n\nes-419\n\nes-ES\n\nes-US\n\nfr-FR\n\nfr-CA\n\nit-IT\n\nja-JP\n\nko-KR\n\n--signature-contains (string)\n\nSubstring to match in built-in intent signatures. An intent will be returned if any part of its signature matches the substring. For example, “xyz” matches both “xyzabc” and “abcxyz.” To find the signature for an intent, see Standard Built-in Intents in the Alexa Skills Kit .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nintents -> (list)\n\nAn array of builtinIntentMetadata objects, one for each intent in the response.\n\n(structure)\n\nProvides metadata for a built-in intent.\n\nsignature -> (string)\n\nA unique identifier for the built-in intent. To find the signature for an intent, see Standard Built-in Intents in the Alexa Skills Kit .\n\nsupportedLocales -> (list)\n\nA list of identifiers for the locales that the intent supports.\n\n(string)\n\nnextToken -> (string)\n\nA pagination token that fetches the next page of intents. If the response to this API call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of intents, specify the pagination token in the next request."
    },
    {
      "command_name": "get-builtin-slot-types",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-builtin-slot-types.html",
      "command_description": "Description\n\nGets a list of built-in slot types that meet the specified criteria.\n\nFor a list of built-in slot types, see Slot Type Reference in the Alexa Skills Kit .\n\nThis operation requires permission for the lex:GetBuiltInSlotTypes action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-builtin-slot-types is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: slotTypes",
      "command_synopsis": "Synopsis\n  get-builtin-slot-types\n[--locale <value>]\n[--signature-contains <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--locale <value>]",
        "[--signature-contains <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--locale (string)\n\nA list of locales that the slot type supports.\n\nPossible values:\n\nde-DE\n\nen-AU\n\nen-GB\n\nen-IN\n\nen-US\n\nes-419\n\nes-ES\n\nes-US\n\nfr-FR\n\nfr-CA\n\nit-IT\n\nja-JP\n\nko-KR\n\n--signature-contains (string)\n\nSubstring to match in built-in slot type signatures. A slot type will be returned if any part of its signature matches the substring. For example, “xyz” matches both “xyzabc” and “abcxyz.”\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nslotTypes -> (list)\n\nAn array of BuiltInSlotTypeMetadata objects, one entry for each slot type returned.\n\n(structure)\n\nProvides information about a built in slot type.\n\nsignature -> (string)\n\nA unique identifier for the built-in slot type. To find the signature for a slot type, see Slot Type Reference in the Alexa Skills Kit .\n\nsupportedLocales -> (list)\n\nA list of target locales for the slot.\n\n(string)\n\nnextToken -> (string)\n\nIf the response is truncated, the response includes a pagination token that you can use in your next request to fetch the next page of slot types."
    },
    {
      "command_name": "get-export",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-export.html",
      "command_description": "Description\n\nExports the contents of a Amazon Lex resource in a specified format.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-export\n--name <value>\n--resource-type <value>\n--export-type <value>\n--resource-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--resource-type <value>",
        "--export-type <value>",
        "--resource-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the bot to export.\n\n--resource-type (string)\n\nThe type of resource to export.\n\nPossible values:\n\nBOT\n\nINTENT\n\nSLOT_TYPE\n\n--export-type (string)\n\nThe format of the exported data.\n\nPossible values:\n\nALEXA_SKILLS_KIT\n\nLEX\n\n--resource-version (string)\n\nThe version of the bot to export.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the bot being exported.\n\nversion -> (string)\n\nThe version of the bot being exported.\n\nresourceType -> (string)\n\nThe type of the exported resource.\n\nexportType -> (string)\n\nThe format of the exported data.\n\nexportStatus -> (string)\n\nThe status of the export.\n\nIN_PROGRESS - The export is in progress.\n\nREADY - The export is complete.\n\nFAILED - The export could not be completed.\n\nfailureReason -> (string)\n\nIf status is FAILED , Amazon Lex provides the reason that it failed to export the resource.\n\nurl -> (string)\n\nAn S3 pre-signed URL that provides the location of the exported resource. The exported resource is a ZIP archive that contains the exported resource in JSON format. The structure of the archive may change. Your code should not rely on the archive structure."
    },
    {
      "command_name": "get-import",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-import.html",
      "command_description": "Description\n\nGets information about an import job started with the StartImport operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-import\n--import-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--import-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--import-id (string)\n\nThe identifier of the import job information to return.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name given to the import job.\n\nresourceType -> (string)\n\nThe type of resource imported.\n\nmergeStrategy -> (string)\n\nThe action taken when there was a conflict between an existing resource and a resource in the import file.\n\nimportId -> (string)\n\nThe identifier for the specific import job.\n\nimportStatus -> (string)\n\nThe status of the import job. If the status is FAILED , you can get the reason for the failure from the failureReason field.\n\nfailureReason -> (list)\n\nA string that describes why an import job failed to complete.\n\n(string)\n\ncreatedDate -> (timestamp)\n\nA timestamp for the date and time that the import job was created."
    },
    {
      "command_name": "get-intent",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-intent.html",
      "command_description": "Description\n\nReturns information about an intent. In addition to the intent name, you must specify the intent version.\n\nThis operation requires permissions to perform the lex:GetIntent action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-intent\n--name <value>\n--intent-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--intent-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the intent. The name is case sensitive.\n\n--intent-version (string)\n\nThe version of the intent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the intent.\n\ndescription -> (string)\n\nA description of the intent.\n\nslots -> (list)\n\nAn array of intent slots configured for the intent.\n\n(structure)\n\nIdentifies the version of a specific slot.\n\nname -> (string)\n\nThe name of the slot.\n\ndescription -> (string)\n\nA description of the slot.\n\nslotConstraint -> (string)\n\nSpecifies whether the slot is required or optional.\n\nslotType -> (string)\n\nThe type of the slot, either a custom slot type that you defined or one of the built-in slot types.\n\nslotTypeVersion -> (string)\n\nThe version of the slot type.\n\nvalueElicitationPrompt -> (structure)\n\nThe prompt that Amazon Lex uses to elicit the slot value from the user.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\npriority -> (integer)\n\nDirects Amazon Lex the order in which to elicit this slot value from the user. For example, if the intent has two slots with priorities 1 and 2, AWS Amazon Lex first elicits a value for the slot with priority 1.\n\nIf multiple slots share the same priority, the order in which Amazon Lex elicits values is arbitrary.\n\nsampleUtterances -> (list)\n\nIf you know a specific pattern with which users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.\n\n(string)\n\nresponseCard -> (string)\n\nA set of possible responses for the slot type used by text-based clients. A user chooses an option from the response card, instead of using text to reply.\n\nobfuscationSetting -> (string)\n\nDetermines whether a slot is obfuscated in conversation logs and stored utterances. When you obfuscate a slot, the value is replaced by the slot name in curly braces ({}). For example, if the slot name is “full_name”, obfuscated values are replaced with “{full_name}”. For more information, see Slot Obfuscation .\n\ndefaultValueSpec -> (structure)\n\nA list of default values for the slot. Default values are used when Amazon Lex hasn’t determined a value for a slot. You can specify default values from context variables, session attributes, and defined values.\n\ndefaultValueList -> (list)\n\nThe default values for a slot. You can specify more than one default. For example, you can specify a default value to use from a matching context variable, a session attribute, or a fixed value.\n\nThe default value chosen is selected based on the order that you specify them in the list. For example, if you specify a context variable and a fixed value in that order, Amazon Lex uses the context variable if it is available, else it uses the fixed value.\n\n(structure)\n\nA default value for a slot.\n\ndefaultValue -> (string)\n\nThe default value for the slot. You can specify one of the following:\n\n#context-name.slot-name - The slot value “slot-name” in the context “context-name.”\n\n{attribute} - The slot value of the session attribute “attribute.”\n\n'value' - The discrete value “value.”\n\nsampleUtterances -> (list)\n\nAn array of sample utterances configured for the intent.\n\n(string)\n\nconfirmationPrompt -> (structure)\n\nIf defined in the bot, Amazon Lex uses prompt to confirm the intent before fulfilling the user’s request. For more information, see PutIntent .\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nrejectionStatement -> (structure)\n\nIf the user answers “no” to the question defined in confirmationPrompt , Amazon Lex responds with this statement to acknowledge that the intent was canceled.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nfollowUpPrompt -> (structure)\n\nIf defined in the bot, Amazon Lex uses this prompt to solicit additional user activity after the intent is fulfilled. For more information, see PutIntent .\n\nprompt -> (structure)\n\nPrompts for information from the user.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nrejectionStatement -> (structure)\n\nIf the user answers “no” to the question defined in the prompt field, Amazon Lex responds with this statement to acknowledge that the intent was canceled.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nconclusionStatement -> (structure)\n\nAfter the Lambda function specified in the fulfillmentActivity element fulfills the intent, Amazon Lex conveys this statement to the user.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\ndialogCodeHook -> (structure)\n\nIf defined in the bot, Amazon Amazon Lex invokes this Lambda function for each user input. For more information, see PutIntent .\n\nuri -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\nmessageVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see using-lambda .\n\nfulfillmentActivity -> (structure)\n\nDescribes how the intent is fulfilled. For more information, see PutIntent .\n\ntype -> (string)\n\nHow the intent should be fulfilled, either by running a Lambda function or by returning the slot data to the client application.\n\ncodeHook -> (structure)\n\nA description of the Lambda function that is run to fulfill the intent.\n\nuri -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\nmessageVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see using-lambda .\n\nparentIntentSignature -> (string)\n\nA unique identifier for a built-in intent.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the intent was updated. When you create a resource, the creation date and the last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the intent was created.\n\nversion -> (string)\n\nThe version of the intent.\n\nchecksum -> (string)\n\nChecksum of the intent.\n\nkendraConfiguration -> (structure)\n\nConfiguration information, if any, to connect to an Amazon Kendra index with the AMAZON.KendraSearchIntent intent.\n\nkendraIndex -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot. If the Amazon Kendra index does not exist, you get an exception when you call the PutIntent operation.\n\nqueryFilterString -> (string)\n\nA query filter that Amazon Lex sends to Amazon Kendra to filter the response from the query. The filter is in the format defined by Amazon Kendra. For more information, see Filtering queries .\n\nYou can override this filter string with a new filter string at runtime.\n\nrole -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that has permission to search the Amazon Kendra index. The role must be in the same account and Region as the Amazon Lex bot. If the role does not exist, you get an exception when you call the PutIntent operation.\n\ninputContexts -> (list)\n\nAn array of InputContext objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user.\n\n(structure)\n\nThe name of a context that must be active for an intent to be selected by Amazon Lex.\n\nname -> (string)\n\nThe name of the context.\n\noutputContexts -> (list)\n\nAn array of OutputContext objects that lists the contexts that the intent activates when the intent is fulfilled.\n\n(structure)\n\nThe specification of an output context that is set when an intent is fulfilled.\n\nname -> (string)\n\nThe name of the context.\n\ntimeToLiveInSeconds -> (integer)\n\nThe number of seconds that the context should be active after it is first sent in a PostContent or PostText response. You can set the value between 5 and 86,400 seconds (24 hours).\n\nturnsToLive -> (integer)\n\nThe number of conversation turns that the context should be active. A conversation turn is one PostContent or PostText request and the corresponding response from Amazon Lex."
    },
    {
      "command_name": "get-intent-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-intent-versions.html",
      "command_description": "Description\n\nGets information about all of the versions of an intent.\n\nThe GetIntentVersions operation returns an IntentMetadata object for each version of an intent. For example, if an intent has three numbered versions, the GetIntentVersions operation returns four IntentMetadata objects in the response, one for each numbered version and one for the $LATEST version.\n\nThe GetIntentVersions operation always returns at least one version, the $LATEST version.\n\nThis operation requires permissions for the lex:GetIntentVersions action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-intent-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: intents",
      "command_synopsis": "Synopsis\n  get-intent-versions\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the intent for which versions should be returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nintents -> (list)\n\nAn array of IntentMetadata objects, one for each numbered version of the intent plus one for the $LATEST version.\n\n(structure)\n\nProvides information about an intent.\n\nname -> (string)\n\nThe name of the intent.\n\ndescription -> (string)\n\nA description of the intent.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the intent was updated. When you create an intent, the creation date and last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the intent was created.\n\nversion -> (string)\n\nThe version of the intent.\n\nnextToken -> (string)\n\nA pagination token for fetching the next page of intent versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request."
    },
    {
      "command_name": "get-intents",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-intents.html",
      "command_description": "Description\n\nReturns intent information as follows:\n\nIf you specify the nameContains field, returns the $LATEST version of all intents that contain the specified string.\n\nIf you don’t specify the nameContains field, returns information about the $LATEST version of all intents.\n\nThe operation requires permission for the lex:GetIntents action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-intents is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: intents",
      "command_synopsis": "Synopsis\n  get-intents\n[--name-contains <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name-contains <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-contains (string)\n\nSubstring to match in intent names. An intent will be returned if any part of its name matches the substring. For example, “xyz” matches both “xyzabc” and “abcxyz.”\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nintents -> (list)\n\nAn array of Intent objects. For more information, see PutBot .\n\n(structure)\n\nProvides information about an intent.\n\nname -> (string)\n\nThe name of the intent.\n\ndescription -> (string)\n\nA description of the intent.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the intent was updated. When you create an intent, the creation date and last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the intent was created.\n\nversion -> (string)\n\nThe version of the intent.\n\nnextToken -> (string)\n\nIf the response is truncated, the response includes a pagination token that you can specify in your next request to fetch the next page of intents."
    },
    {
      "command_name": "get-migration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-migration.html",
      "command_description": "Description\n\nProvides details about an ongoing or complete migration from an Amazon Lex V1 bot to an Amazon Lex V2 bot. Use this operation to view the migration alerts and warnings related to the migration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-migration\n--migration-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--migration-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--migration-id (string)\n\nThe unique identifier of the migration to view. The migrationID is returned by the operation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmigrationId -> (string)\n\nThe unique identifier of the migration. This is the same as the identifier used when calling the GetMigration operation.\n\nv1BotName -> (string)\n\nThe name of the Amazon Lex V1 bot migrated to Amazon Lex V2.\n\nv1BotVersion -> (string)\n\nThe version of the Amazon Lex V1 bot migrated to Amazon Lex V2.\n\nv1BotLocale -> (string)\n\nThe locale of the Amazon Lex V1 bot migrated to Amazon Lex V2.\n\nv2BotId -> (string)\n\nThe unique identifier of the Amazon Lex V2 bot that the Amazon Lex V1 is being migrated to.\n\nv2BotRole -> (string)\n\nThe IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.\n\nmigrationStatus -> (string)\n\nIndicates the status of the migration. When the status is COMPLETE the migration is finished and the bot is available in Amazon Lex V2. There may be alerts and warnings that need to be resolved to complete the migration.\n\nmigrationStrategy -> (string)\n\nThe strategy used to conduct the migration.\n\nCREATE_NEW - Creates a new Amazon Lex V2 bot and migrates the Amazon Lex V1 bot to the new bot.\n\nUPDATE_EXISTING - Overwrites the existing Amazon Lex V2 bot metadata and the locale being migrated. It doesn’t change any other locales in the Amazon Lex V2 bot. If the locale doesn’t exist, a new locale is created in the Amazon Lex V2 bot.\n\nmigrationTimestamp -> (timestamp)\n\nThe date and time that the migration started.\n\nalerts -> (list)\n\nA list of alerts and warnings that indicate issues with the migration for the Amazon Lex V1 bot to Amazon Lex V2. You receive a warning when an Amazon Lex V1 feature has a different implementation if Amazon Lex V2.\n\nFor more information, see Migrating a bot in the Amazon Lex V2 developer guide .\n\n(structure)\n\nProvides information about alerts and warnings that Amazon Lex sends during a migration. The alerts include information about how to resolve the issue.\n\ntype -> (string)\n\nThe type of alert. There are two kinds of alerts:\n\nERROR - There was an issue with the migration that can’t be resolved. The migration stops.\n\nWARN - There was an issue with the migration that requires manual changes to the new Amazon Lex V2 bot. The migration continues.\n\nmessage -> (string)\n\nA message that describes why the alert was issued.\n\ndetails -> (list)\n\nAdditional details about the alert.\n\n(string)\n\nreferenceURLs -> (list)\n\nA link to the Amazon Lex documentation that describes how to resolve the alert.\n\n(string)"
    },
    {
      "command_name": "get-migrations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-migrations.html",
      "command_description": "Description\n\nGets a list of migrations between Amazon Lex V1 and Amazon Lex V2.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-migrations\n[--sort-by-attribute <value>]\n[--sort-by-order <value>]\n[--v1-bot-name-contains <value>]\n[--migration-status-equals <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--sort-by-attribute <value>]",
        "[--sort-by-order <value>]",
        "[--v1-bot-name-contains <value>]",
        "[--migration-status-equals <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--sort-by-attribute (string)\n\nThe field to sort the list of migrations by. You can sort by the Amazon Lex V1 bot name or the date and time that the migration was started.\n\nPossible values:\n\nV1_BOT_NAME\n\nMIGRATION_DATE_TIME\n\n--sort-by-order (string)\n\nThe order so sort the list.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--v1-bot-name-contains (string)\n\nFilters the list to contain only bots whose name contains the specified string. The string is matched anywhere in bot name.\n\n--migration-status-equals (string)\n\nFilters the list to contain only migrations in the specified state.\n\nPossible values:\n\nIN_PROGRESS\n\nCOMPLETED\n\nFAILED\n\n--max-results (integer)\n\nThe maximum number of migrations to return in the response. The default is 10.\n\n--next-token (string)\n\nA pagination token that fetches the next page of migrations. If the response to this operation is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of migrations, specify the pagination token in the request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmigrationSummaries -> (list)\n\nAn array of summaries for migrations from Amazon Lex V1 to Amazon Lex V2. To see details of the migration, use the migrationId from the summary in a call to the operation.\n\n(structure)\n\nProvides information about migrating a bot from Amazon Lex V1 to Amazon Lex V2.\n\nmigrationId -> (string)\n\nThe unique identifier that Amazon Lex assigned to the migration.\n\nv1BotName -> (string)\n\nThe name of the Amazon Lex V1 bot that is the source of the migration.\n\nv1BotVersion -> (string)\n\nThe version of the Amazon Lex V1 bot that is the source of the migration.\n\nv1BotLocale -> (string)\n\nThe locale of the Amazon Lex V1 bot that is the source of the migration.\n\nv2BotId -> (string)\n\nThe unique identifier of the Amazon Lex V2 that is the destination of the migration.\n\nv2BotRole -> (string)\n\nThe IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.\n\nmigrationStatus -> (string)\n\nThe status of the operation. When the status is COMPLETE the bot is available in Amazon Lex V2. There may be alerts and warnings that need to be resolved to complete the migration.\n\nmigrationStrategy -> (string)\n\nThe strategy used to conduct the migration.\n\nmigrationTimestamp -> (timestamp)\n\nThe date and time that the migration started.\n\nnextToken -> (string)\n\nIf the response is truncated, it includes a pagination token that you can specify in your next request to fetch the next page of migrations."
    },
    {
      "command_name": "get-slot-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-slot-type.html",
      "command_description": "Description\n\nReturns information about a specific version of a slot type. In addition to specifying the slot type name, you must specify the slot type version.\n\nThis operation requires permissions for the lex:GetSlotType action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-slot-type\n--name <value>\n--slot-type-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--slot-type-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the slot type. The name is case sensitive.\n\n--slot-type-version (string)\n\nThe version of the slot type.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the slot type.\n\ndescription -> (string)\n\nA description of the slot type.\n\nenumerationValues -> (list)\n\nA list of EnumerationValue objects that defines the values that the slot type can take.\n\n(structure)\n\nEach slot type can have a set of values. Each enumeration value represents a value the slot type can take.\n\nFor example, a pizza ordering bot could have a slot type that specifies the type of crust that the pizza should have. The slot type could include the values\n\nthick\n\nthin\n\nstuffed\n\nvalue -> (string)\n\nThe value of the slot type.\n\nsynonyms -> (list)\n\nAdditional values related to the slot type value.\n\n(string)\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the slot type was updated. When you create a resource, the creation date and last update date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the slot type was created.\n\nversion -> (string)\n\nThe version of the slot type.\n\nchecksum -> (string)\n\nChecksum of the $LATEST version of the slot type.\n\nvalueSelectionStrategy -> (string)\n\nThe strategy that Amazon Lex uses to determine the value of the slot. For more information, see PutSlotType .\n\nparentSlotTypeSignature -> (string)\n\nThe built-in slot type used as a parent for the slot type.\n\nslotTypeConfigurations -> (list)\n\nConfiguration information that extends the parent built-in slot type.\n\n(structure)\n\nProvides configuration information for a slot type.\n\nregexConfiguration -> (structure)\n\nA regular expression used to validate the value of a slot.\n\npattern -> (string)\n\nA regular expression used to validate the value of a slot.\n\nUse a standard regular expression. Amazon Lex supports the following characters in the regular expression:\n\nA-Z, a-z\n\n0-9\n\nUnicode characters (“u<Unicode>”)\n\nRepresent Unicode characters with four digits, for example “u0041” or “u005A”.\n\nThe following regular expression operators are not supported:\n\nInfinite repeaters: *, +, or {x,} with no upper bound.\n\nWild card (.)"
    },
    {
      "command_name": "get-slot-type-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-slot-type-versions.html",
      "command_description": "Description\n\nGets information about all versions of a slot type.\n\nThe GetSlotTypeVersions operation returns a SlotTypeMetadata object for each version of a slot type. For example, if a slot type has three numbered versions, the GetSlotTypeVersions operation returns four SlotTypeMetadata objects in the response, one for each numbered version and one for the $LATEST version.\n\nThe GetSlotTypeVersions operation always returns at least one version, the $LATEST version.\n\nThis operation requires permissions for the lex:GetSlotTypeVersions action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-slot-type-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: slotTypes",
      "command_synopsis": "Synopsis\n  get-slot-type-versions\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the slot type for which versions should be returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nslotTypes -> (list)\n\nAn array of SlotTypeMetadata objects, one for each numbered version of the slot type plus one for the $LATEST version.\n\n(structure)\n\nProvides information about a slot type..\n\nname -> (string)\n\nThe name of the slot type.\n\ndescription -> (string)\n\nA description of the slot type.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the slot type was updated. When you create a resource, the creation date and last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the slot type was created.\n\nversion -> (string)\n\nThe version of the slot type.\n\nnextToken -> (string)\n\nA pagination token for fetching the next page of slot type versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request."
    },
    {
      "command_name": "get-slot-types",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-slot-types.html",
      "command_description": "Description\n\nReturns slot type information as follows:\n\nIf you specify the nameContains field, returns the $LATEST version of all slot types that contain the specified string.\n\nIf you don’t specify the nameContains field, returns information about the $LATEST version of all slot types.\n\nThe operation requires permission for the lex:GetSlotTypes action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-slot-types is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: slotTypes",
      "command_synopsis": "Synopsis\n  get-slot-types\n[--name-contains <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name-contains <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-contains (string)\n\nSubstring to match in slot type names. A slot type will be returned if any part of its name matches the substring. For example, “xyz” matches both “xyzabc” and “abcxyz.”\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nslotTypes -> (list)\n\nAn array of objects, one for each slot type, that provides information such as the name of the slot type, the version, and a description.\n\n(structure)\n\nProvides information about a slot type..\n\nname -> (string)\n\nThe name of the slot type.\n\ndescription -> (string)\n\nA description of the slot type.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the slot type was updated. When you create a resource, the creation date and last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the slot type was created.\n\nversion -> (string)\n\nThe version of the slot type.\n\nnextToken -> (string)\n\nIf the response is truncated, it includes a pagination token that you can specify in your next request to fetch the next page of slot types."
    },
    {
      "command_name": "get-utterances-view",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/get-utterances-view.html",
      "command_description": "Description\n\nUse the GetUtterancesView operation to get information about the utterances that your users have made to your bot. You can use this list to tune the utterances that your bot responds to.\n\nFor example, say that you have created a bot to order flowers. After your users have used your bot for a while, use the GetUtterancesView operation to see the requests that they have made and whether they have been successful. You might find that the utterance “I want flowers” is not being recognized. You could add this utterance to the OrderFlowers intent so that your bot recognizes that utterance.\n\nAfter you publish a new version of a bot, you can get information about the old version and the new so that you can compare the performance across the two versions.\n\nUtterance statistics are generated once a day. Data is available for the last 15 days. You can request information for up to 5 versions of your bot in each request. Amazon Lex returns the most frequent utterances received by the bot in the last 15 days. The response contains information about a maximum of 100 utterances for each version.\n\nIf you set childDirected field to true when you created your bot, if you are using slot obfuscation with one or more slots, or if you opted out of participating in improving Amazon Lex, utterances are not available.\n\nThis operation requires permissions for the lex:GetUtterancesView action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-utterances-view\n--bot-name <value>\n--bot-versions <value>\n--status-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-name <value>",
        "--bot-versions <value>",
        "--status-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-name (string)\n\nThe name of the bot for which utterance information should be returned.\n\n--bot-versions (list)\n\nAn array of bot versions for which utterance information should be returned. The limit is 5 versions per request.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--status-type (string)\n\nTo return utterances that were recognized and handled, use Detected . To return utterances that were not recognized, use Missed .\n\nPossible values:\n\nDetected\n\nMissed\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotName -> (string)\n\nThe name of the bot for which utterance information was returned.\n\nutterances -> (list)\n\nAn array of UtteranceList objects, each containing a list of UtteranceData objects describing the utterances that were processed by your bot. The response contains a maximum of 100 UtteranceData objects for each version. Amazon Lex returns the most frequent utterances received by the bot in the last 15 days.\n\n(structure)\n\nProvides a list of utterances that have been made to a specific version of your bot. The list contains a maximum of 100 utterances.\n\nbotVersion -> (string)\n\nThe version of the bot that processed the list.\n\nutterances -> (list)\n\nOne or more UtteranceData objects that contain information about the utterances that have been made to a bot. The maximum number of object is 100.\n\n(structure)\n\nProvides information about a single utterance that was made to your bot.\n\nutteranceString -> (string)\n\nThe text that was entered by the user or the text representation of an audio clip.\n\ncount -> (integer)\n\nThe number of times that the utterance was processed.\n\ndistinctUsers -> (integer)\n\nThe total number of individuals that used the utterance.\n\nfirstUtteredDate -> (timestamp)\n\nThe date that the utterance was first recorded.\n\nlastUtteredDate -> (timestamp)\n\nThe date that the utterance was last recorded."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/list-tags-for-resource.html",
      "command_description": "Description\n\nGets a list of tags associated with the specified resource. Only bots, bot aliases, and bot channels can have tags associated with them.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource to get a list of tags for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (list)\n\nThe tags associated with a resource.\n\n(structure)\n\nA list of key/value pairs that identify a bot, bot alias, or bot channel. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.\n\nkey -> (string)\n\nThe key for the tag. Keys are not case-sensitive and must be unique.\n\nvalue -> (string)\n\nThe value associated with a key. The value may be an empty string but it can’t be null."
    },
    {
      "command_name": "put-bot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/put-bot.html",
      "command_description": "Description\n\nCreates an Amazon Lex conversational bot or replaces an existing bot. When you create or update a bot you are only required to specify a name, a locale, and whether the bot is directed toward children under age 13. You can use this to add intents later, or to remove intents from an existing bot. When you create a bot with the minimum information, the bot is created or updated but Amazon Lex returns the response FAILED . You can build the bot after you add one or more intents. For more information about Amazon Lex bots, see how-it-works .\n\nIf you specify the name of an existing bot, the fields in the request replace the existing values in the $LATEST version of the bot. Amazon Lex removes any fields that you don’t provide values for in the request, except for the idleTTLInSeconds and privacySettings fields, which are set to their default values. If you don’t specify values for required fields, Amazon Lex throws an exception.\n\nThis operation requires permissions for the lex:PutBot action. For more information, see security-iam .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-bot\n--name <value>\n[--description <value>]\n[--intents <value>]\n[--enable-model-improvements | --no-enable-model-improvements]\n[--nlu-intent-confidence-threshold <value>]\n[--clarification-prompt <value>]\n[--abort-statement <value>]\n[--idle-session-ttl-in-seconds <value>]\n[--voice-id <value>]\n[--checksum <value>]\n[--process-behavior <value>]\n--locale <value>\n--child-directed | --no-child-directed\n[--detect-sentiment | --no-detect-sentiment]\n[--create-version | --no-create-version]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--intents <value>]",
        "[--enable-model-improvements | --no-enable-model-improvements]",
        "[--nlu-intent-confidence-threshold <value>]",
        "[--clarification-prompt <value>]",
        "[--abort-statement <value>]",
        "[--idle-session-ttl-in-seconds <value>]",
        "[--voice-id <value>]",
        "[--checksum <value>]",
        "[--process-behavior <value>]",
        "--locale <value>",
        "--child-directed | --no-child-directed",
        "[--detect-sentiment | --no-detect-sentiment]",
        "[--create-version | --no-create-version]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the bot. The name is not case sensitive.\n\n--description (string)\n\nA description of the bot.\n\n--intents (list)\n\nAn array of Intent objects. Each intent represents a command that a user can express. For example, a pizza ordering bot might support an OrderPizza intent. For more information, see how-it-works .\n\n(structure)\n\nIdentifies the specific version of an intent.\n\nintentName -> (string)\n\nThe name of the intent.\n\nintentVersion -> (string)\n\nThe version of the intent.\n\nShorthand Syntax:\n\nintentName=string,intentVersion=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"intentName\": \"string\",\n    \"intentVersion\": \"string\"\n  }\n  ...\n]\n\n\n--enable-model-improvements | --no-enable-model-improvements (boolean)\n\nSet to true to enable access to natural language understanding improvements.\n\nWhen you set the enableModelImprovements parameter to true you can use the nluIntentConfidenceThreshold parameter to configure confidence scores. For more information, see Confidence Scores .\n\nYou can only set the enableModelImprovements parameter in certain Regions. If you set the parameter to true , your bot has access to accuracy improvements.\n\nThe Regions where you can set the enableModelImprovements parameter to true are:\n\nUS East (N. Virginia) (us-east-1)\n\nUS West (Oregon) (us-west-2)\n\nAsia Pacific (Sydney) (ap-southeast-2)\n\nEU (Ireland) (eu-west-1)\n\nIn other Regions, the enableModelImprovements parameter is set to true by default. In these Regions setting the parameter to false throws a ValidationException exception.\n\n--nlu-intent-confidence-threshold (double)\n\nDetermines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent , AMAZON.KendraSearchIntent , or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot.\n\nYou must set the enableModelImprovements parameter to true to use confidence scores in the following regions.\n\nUS East (N. Virginia) (us-east-1)\n\nUS West (Oregon) (us-west-2)\n\nAsia Pacific (Sydney) (ap-southeast-2)\n\nEU (Ireland) (eu-west-1)\n\nIn other Regions, the enableModelImprovements parameter is set to true by default.\n\nFor example, suppose a bot is configured with the confidence threshold of 0.80 and the AMAZON.FallbackIntent . Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the PostText operation would be:\n\nAMAZON.FallbackIntent\n\nIntentA\n\nIntentB\n\nIntentC\n\n--clarification-prompt (structure)\n\nWhen Amazon Lex doesn’t understand the user’s intent, it uses this message to get clarification. To specify how many times Amazon Lex should repeat the clarification prompt, use the maxAttempts field. If Amazon Lex still doesn’t understand, it sends the message in the abortStatement field.\n\nWhen you create a clarification prompt, make sure that it suggests the correct response from the user. for example, for a bot that orders pizza and drinks, you might create this clarification prompt: “What would you like to do? You can say ‘Order a pizza’ or ‘Order a drink.’”\n\nIf you have defined a fallback intent, it will be invoked if the clarification prompt is repeated the number of times defined in the maxAttempts field. For more information, see AMAZON.FallbackIntent .\n\nIf you don’t define a clarification prompt, at runtime Amazon Lex will return a 400 Bad Request exception in three cases:\n\nFollow-up prompt - When the user responds to a follow-up prompt but does not provide an intent. For example, in response to a follow-up prompt that says “Would you like anything else today?” the user says “Yes.” Amazon Lex will return a 400 Bad Request exception because it does not have a clarification prompt to send to the user to get an intent.\n\nLambda function - When using a Lambda function, you return an ElicitIntent dialog type. Since Amazon Lex does not have a clarification prompt to get an intent from the user, it returns a 400 Bad Request exception.\n\nPutSession operation - When using the PutSession operation, you send an ElicitIntent dialog type. Since Amazon Lex does not have a clarification prompt to get an intent from the user, it returns a 400 Bad Request exception.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nShorthand Syntax:\n\nmessages=[{contentType=string,content=string,groupNumber=integer},{contentType=string,content=string,groupNumber=integer}],maxAttempts=integer,responseCard=string\n\n\nJSON Syntax:\n\n{\n  \"messages\": [\n    {\n      \"contentType\": \"PlainText\"|\"SSML\"|\"CustomPayload\",\n      \"content\": \"string\",\n      \"groupNumber\": integer\n    }\n    ...\n  ],\n  \"maxAttempts\": integer,\n  \"responseCard\": \"string\"\n}\n\n\n--abort-statement (structure)\n\nWhen Amazon Lex can’t understand the user’s input in context, it tries to elicit the information a few times. After that, Amazon Lex sends the message defined in abortStatement to the user, and then cancels the conversation. To set the number of retries, use the valueElicitationPrompt field for the slot type.\n\nFor example, in a pizza ordering bot, Amazon Lex might ask a user “What type of crust would you like?” If the user’s response is not one of the expected responses (for example, “thin crust, “deep dish,” etc.), Amazon Lex tries to elicit a correct response a few more times.\n\nFor example, in a pizza ordering application, OrderPizza might be one of the intents. This intent might require the CrustType slot. You specify the valueElicitationPrompt field when you create the CrustType slot.\n\nIf you have defined a fallback intent the cancel statement will not be sent to the user, the fallback intent is used instead. For more information, see AMAZON.FallbackIntent .\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nShorthand Syntax:\n\nmessages=[{contentType=string,content=string,groupNumber=integer},{contentType=string,content=string,groupNumber=integer}],responseCard=string\n\n\nJSON Syntax:\n\n{\n  \"messages\": [\n    {\n      \"contentType\": \"PlainText\"|\"SSML\"|\"CustomPayload\",\n      \"content\": \"string\",\n      \"groupNumber\": integer\n    }\n    ...\n  ],\n  \"responseCard\": \"string\"\n}\n\n\n--idle-session-ttl-in-seconds (integer)\n\nThe maximum time in seconds that Amazon Lex retains the data gathered in a conversation.\n\nA user interaction session remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\n\nFor example, suppose that a user chooses the OrderPizza intent, but gets sidetracked halfway through placing an order. If the user doesn’t complete the order within the specified time, Amazon Lex discards the slot information that it gathered, and the user must start over.\n\nIf you don’t include the idleSessionTTLInSeconds element in a PutBot operation request, Amazon Lex uses the default value. This is also true if the request replaces an existing bot.\n\nThe default is 300 seconds (5 minutes).\n\n--voice-id (string)\n\nThe Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see Voices in Amazon Polly in the Amazon Polly Developer Guide .\n\n--checksum (string)\n\nIdentifies a specific revision of the $LATEST version.\n\nWhen you create a new bot, leave the checksum field blank. If you specify a checksum you get a BadRequestException exception.\n\nWhen you want to update a bot, set the checksum field to the checksum of the most recent revision of the $LATEST version. If you don’t specify the checksum field, or if the checksum does not match the $LATEST version, you get a PreconditionFailedException exception.\n\n--process-behavior (string)\n\nIf you set the processBehavior element to BUILD , Amazon Lex builds the bot so that it can be run. If you set the element to SAVE Amazon Lex saves the bot, but doesn’t build it.\n\nIf you don’t specify this value, the default value is BUILD .\n\nPossible values:\n\nSAVE\n\nBUILD\n\n--locale (string)\n\nSpecifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot.\n\nThe default is en-US .\n\nPossible values:\n\nde-DE\n\nen-AU\n\nen-GB\n\nen-IN\n\nen-US\n\nes-419\n\nes-ES\n\nes-US\n\nfr-FR\n\nfr-CA\n\nit-IT\n\nja-JP\n\nko-KR\n\n--child-directed | --no-child-directed (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.\n\nIf your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ.\n\n--detect-sentiment | --no-detect-sentiment (boolean)\n\nWhen set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don’t specify detectSentiment , the default is false .\n\n--create-version | --no-create-version (boolean)\n\nWhen set to true a new numbered version of the bot is created. This is the same as calling the CreateBotVersion operation. If you don’t specify createVersion , the default is false .\n\n--tags (list)\n\nA list of tags to add to the bot. You can only add tags when you create a bot, you can’t use the PutBot operation to update the tags on a bot. To update tags, use the TagResource operation.\n\n(structure)\n\nA list of key/value pairs that identify a bot, bot alias, or bot channel. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.\n\nkey -> (string)\n\nThe key for the tag. Keys are not case-sensitive and must be unique.\n\nvalue -> (string)\n\nThe value associated with a key. The value may be an empty string but it can’t be null.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the bot.\n\ndescription -> (string)\n\nA description of the bot.\n\nintents -> (list)\n\nAn array of Intent objects. For more information, see PutBot .\n\n(structure)\n\nIdentifies the specific version of an intent.\n\nintentName -> (string)\n\nThe name of the intent.\n\nintentVersion -> (string)\n\nThe version of the intent.\n\nenableModelImprovements -> (boolean)\n\nIndicates whether the bot uses accuracy improvements. true indicates that the bot is using the improvements, otherwise, false .\n\nnluIntentConfidenceThreshold -> (double)\n\nThe score that determines where Amazon Lex inserts the AMAZON.FallbackIntent , AMAZON.KendraSearchIntent , or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent is inserted if the confidence score for all intents is below this value. AMAZON.KendraSearchIntent is only inserted if it is configured for the bot.\n\nclarificationPrompt -> (structure)\n\nThe prompts that Amazon Lex uses when it doesn’t understand the user’s intent. For more information, see PutBot .\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nabortStatement -> (structure)\n\nThe message that Amazon Lex uses to cancel a conversation. For more information, see PutBot .\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nstatus -> (string)\n\nWhen you send a request to create a bot with processBehavior set to BUILD , Amazon Lex sets the status response element to BUILDING .\n\nIn the READY_BASIC_TESTING state you can test the bot with user inputs that exactly match the utterances configured for the bot’s intents and values in the slot types.\n\nIf Amazon Lex can’t build the bot, Amazon Lex sets status to FAILED . Amazon Lex returns the reason for the failure in the failureReason response element.\n\nWhen you set processBehavior to SAVE , Amazon Lex sets the status code to NOT BUILT .\n\nWhen the bot is in the READY state you can test and publish the bot.\n\nfailureReason -> (string)\n\nIf status is FAILED , Amazon Lex provides the reason that it failed to build the bot.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the bot was updated. When you create a resource, the creation date and last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the bot was created.\n\nidleSessionTTLInSeconds -> (integer)\n\nThe maximum length of time that Amazon Lex retains the data gathered in a conversation. For more information, see PutBot .\n\nvoiceId -> (string)\n\nThe Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user. For more information, see PutBot .\n\nchecksum -> (string)\n\nChecksum of the bot that you created.\n\nversion -> (string)\n\nThe version of the bot. For a new bot, the version is always $LATEST .\n\nlocale -> (string)\n\nThe target locale for the bot.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.\n\nIf your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ.\n\ncreateVersion -> (boolean)\n\nTrue if a new version of the bot was created. If the createVersion field was not specified in the request, the createVersion field is set to false in the response.\n\ndetectSentiment -> (boolean)\n\ntrue if the bot is configured to send user utterances to Amazon Comprehend for sentiment analysis. If the detectSentiment field was not specified in the request, the detectSentiment field is false in the response.\n\ntags -> (list)\n\nA list of tags associated with the bot.\n\n(structure)\n\nA list of key/value pairs that identify a bot, bot alias, or bot channel. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.\n\nkey -> (string)\n\nThe key for the tag. Keys are not case-sensitive and must be unique.\n\nvalue -> (string)\n\nThe value associated with a key. The value may be an empty string but it can’t be null."
    },
    {
      "command_name": "put-bot-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/put-bot-alias.html",
      "command_description": "Description\n\nCreates an alias for the specified version of the bot or replaces an alias for the specified bot. To change the version of the bot that the alias points to, replace the alias. For more information about aliases, see versioning-aliases .\n\nThis operation requires permissions for the lex:PutBotAlias action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-bot-alias\n--name <value>\n[--description <value>]\n--bot-version <value>\n--bot-name <value>\n[--checksum <value>]\n[--conversation-logs <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--bot-version <value>",
        "--bot-name <value>",
        "[--checksum <value>]",
        "[--conversation-logs <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the alias. The name is not case sensitive.\n\n--description (string)\n\nA description of the alias.\n\n--bot-version (string)\n\nThe version of the bot.\n\n--bot-name (string)\n\nThe name of the bot.\n\n--checksum (string)\n\nIdentifies a specific revision of the $LATEST version.\n\nWhen you create a new bot alias, leave the checksum field blank. If you specify a checksum you get a BadRequestException exception.\n\nWhen you want to update a bot alias, set the checksum field to the checksum of the most recent revision of the $LATEST version. If you don’t specify the checksum field, or if the checksum does not match the $LATEST version, you get a PreconditionFailedException exception.\n\n--conversation-logs (structure)\n\nSettings for conversation logs for the alias.\n\nlogSettings -> (list)\n\nThe settings for your conversation logs. You can log the conversation text, conversation audio, or both.\n\n(structure)\n\nSettings used to configure delivery mode and destination for conversation logs.\n\nlogType -> (string)\n\nThe type of logging to enable. Text logs are delivered to a CloudWatch Logs log group. Audio logs are delivered to an S3 bucket.\n\ndestination -> (string)\n\nWhere the logs will be delivered. Text logs are delivered to a CloudWatch Logs log group. Audio logs are delivered to an S3 bucket.\n\nkmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS KMS customer managed key for encrypting audio logs delivered to an S3 bucket. The key does not apply to CloudWatch Logs and is optional for S3 buckets.\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs should be delivered.\n\niamRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role with permission to write to your CloudWatch Logs for text logs and your S3 bucket for audio logs. If audio encryption is enabled, this role also provides access permission for the AWS KMS key used for encrypting audio logs. For more information, see Creating an IAM Role and Policy for Conversation Logs .\n\nShorthand Syntax:\n\nlogSettings=[{logType=string,destination=string,kmsKeyArn=string,resourceArn=string},{logType=string,destination=string,kmsKeyArn=string,resourceArn=string}],iamRoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"logSettings\": [\n    {\n      \"logType\": \"AUDIO\"|\"TEXT\",\n      \"destination\": \"CLOUDWATCH_LOGS\"|\"S3\",\n      \"kmsKeyArn\": \"string\",\n      \"resourceArn\": \"string\"\n    }\n    ...\n  ],\n  \"iamRoleArn\": \"string\"\n}\n\n\n--tags (list)\n\nA list of tags to add to the bot alias. You can only add tags when you create an alias, you can’t use the PutBotAlias operation to update the tags on a bot alias. To update tags, use the TagResource operation.\n\n(structure)\n\nA list of key/value pairs that identify a bot, bot alias, or bot channel. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.\n\nkey -> (string)\n\nThe key for the tag. Keys are not case-sensitive and must be unique.\n\nvalue -> (string)\n\nThe value associated with a key. The value may be an empty string but it can’t be null.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the alias.\n\ndescription -> (string)\n\nA description of the alias.\n\nbotVersion -> (string)\n\nThe version of the bot that the alias points to.\n\nbotName -> (string)\n\nThe name of the bot that the alias points to.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the bot alias was created.\n\nchecksum -> (string)\n\nThe checksum for the current version of the alias.\n\nconversationLogs -> (structure)\n\nThe settings that determine how Amazon Lex uses conversation logs for the alias.\n\nlogSettings -> (list)\n\nThe settings for your conversation logs. You can log text, audio, or both.\n\n(structure)\n\nThe settings for conversation logs.\n\nlogType -> (string)\n\nThe type of logging that is enabled.\n\ndestination -> (string)\n\nThe destination where logs are delivered.\n\nkmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket.\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered.\n\nresourcePrefix -> (string)\n\nThe resource prefix is the first part of the S3 object key within the S3 bucket that you specified to contain audio logs. For CloudWatch Logs it is the prefix of the log stream name within the log group that you specified.\n\niamRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket.\n\ntags -> (list)\n\nA list of tags associated with a bot.\n\n(structure)\n\nA list of key/value pairs that identify a bot, bot alias, or bot channel. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.\n\nkey -> (string)\n\nThe key for the tag. Keys are not case-sensitive and must be unique.\n\nvalue -> (string)\n\nThe value associated with a key. The value may be an empty string but it can’t be null."
    },
    {
      "command_name": "put-intent",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/put-intent.html",
      "command_description": "Description\n\nCreates an intent or replaces an existing intent.\n\nTo define the interaction between the user and your bot, you use one or more intents. For a pizza ordering bot, for example, you would create an OrderPizza intent.\n\nTo create an intent or replace an existing intent, you must provide the following:\n\nIntent name. For example, OrderPizza .\n\nSample utterances. For example, “Can I order a pizza, please.” and “I want to order a pizza.”\n\nInformation to be gathered. You specify slot types for the information that your bot will request from the user. You can specify standard slot types, such as a date or a time, or custom slot types such as the size and crust of a pizza.\n\nHow the intent will be fulfilled. You can provide a Lambda function or configure the intent to return the intent information to the client application. If you use a Lambda function, when all of the intent information is available, Amazon Lex invokes your Lambda function. If you configure your intent to return the intent information to the client application.\n\nYou can specify other optional information in the request, such as:\n\nA confirmation prompt to ask the user to confirm an intent. For example, “Shall I order your pizza?”\n\nA conclusion statement to send to the user after the intent has been fulfilled. For example, “I placed your pizza order.”\n\nA follow-up prompt that asks the user for additional activity. For example, asking “Do you want to order a drink with your pizza?”\n\nIf you specify an existing intent name to update the intent, Amazon Lex replaces the values in the $LATEST version of the intent with the values in the request. Amazon Lex removes fields that you don’t provide in the request. If you don’t specify the required fields, Amazon Lex throws an exception. When you update the $LATEST version of an intent, the status field of any bot that uses the $LATEST version of the intent is set to NOT_BUILT .\n\nFor more information, see how-it-works .\n\nThis operation requires permissions for the lex:PutIntent action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-intent\n--name <value>\n[--description <value>]\n[--slots <value>]\n[--sample-utterances <value>]\n[--confirmation-prompt <value>]\n[--rejection-statement <value>]\n[--follow-up-prompt <value>]\n[--conclusion-statement <value>]\n[--dialog-code-hook <value>]\n[--fulfillment-activity <value>]\n[--parent-intent-signature <value>]\n[--checksum <value>]\n[--create-version | --no-create-version]\n[--kendra-configuration <value>]\n[--input-contexts <value>]\n[--output-contexts <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--slots <value>]",
        "[--sample-utterances <value>]",
        "[--confirmation-prompt <value>]",
        "[--rejection-statement <value>]",
        "[--follow-up-prompt <value>]",
        "[--conclusion-statement <value>]",
        "[--dialog-code-hook <value>]",
        "[--fulfillment-activity <value>]",
        "[--parent-intent-signature <value>]",
        "[--checksum <value>]",
        "[--create-version | --no-create-version]",
        "[--kendra-configuration <value>]",
        "[--input-contexts <value>]",
        "[--output-contexts <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the intent. The name is not case sensitive.\n\nThe name can’t match a built-in intent name, or a built-in intent name with “AMAZON.” removed. For example, because there is a built-in intent called AMAZON.HelpIntent , you can’t create a custom intent called HelpIntent .\n\nFor a list of built-in intents, see Standard Built-in Intents in the Alexa Skills Kit .\n\n--description (string)\n\nA description of the intent.\n\n--slots (list)\n\nAn array of intent slots. At runtime, Amazon Lex elicits required slot values from the user using prompts defined in the slots. For more information, see how-it-works .\n\n(structure)\n\nIdentifies the version of a specific slot.\n\nname -> (string)\n\nThe name of the slot.\n\ndescription -> (string)\n\nA description of the slot.\n\nslotConstraint -> (string)\n\nSpecifies whether the slot is required or optional.\n\nslotType -> (string)\n\nThe type of the slot, either a custom slot type that you defined or one of the built-in slot types.\n\nslotTypeVersion -> (string)\n\nThe version of the slot type.\n\nvalueElicitationPrompt -> (structure)\n\nThe prompt that Amazon Lex uses to elicit the slot value from the user.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\npriority -> (integer)\n\nDirects Amazon Lex the order in which to elicit this slot value from the user. For example, if the intent has two slots with priorities 1 and 2, AWS Amazon Lex first elicits a value for the slot with priority 1.\n\nIf multiple slots share the same priority, the order in which Amazon Lex elicits values is arbitrary.\n\nsampleUtterances -> (list)\n\nIf you know a specific pattern with which users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.\n\n(string)\n\nresponseCard -> (string)\n\nA set of possible responses for the slot type used by text-based clients. A user chooses an option from the response card, instead of using text to reply.\n\nobfuscationSetting -> (string)\n\nDetermines whether a slot is obfuscated in conversation logs and stored utterances. When you obfuscate a slot, the value is replaced by the slot name in curly braces ({}). For example, if the slot name is “full_name”, obfuscated values are replaced with “{full_name}”. For more information, see Slot Obfuscation .\n\ndefaultValueSpec -> (structure)\n\nA list of default values for the slot. Default values are used when Amazon Lex hasn’t determined a value for a slot. You can specify default values from context variables, session attributes, and defined values.\n\ndefaultValueList -> (list)\n\nThe default values for a slot. You can specify more than one default. For example, you can specify a default value to use from a matching context variable, a session attribute, or a fixed value.\n\nThe default value chosen is selected based on the order that you specify them in the list. For example, if you specify a context variable and a fixed value in that order, Amazon Lex uses the context variable if it is available, else it uses the fixed value.\n\n(structure)\n\nA default value for a slot.\n\ndefaultValue -> (string)\n\nThe default value for the slot. You can specify one of the following:\n\n#context-name.slot-name - The slot value “slot-name” in the context “context-name.”\n\n{attribute} - The slot value of the session attribute “attribute.”\n\n'value' - The discrete value “value.”\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"slotConstraint\": \"Required\"|\"Optional\",\n    \"slotType\": \"string\",\n    \"slotTypeVersion\": \"string\",\n    \"valueElicitationPrompt\": {\n      \"messages\": [\n        {\n          \"contentType\": \"PlainText\"|\"SSML\"|\"CustomPayload\",\n          \"content\": \"string\",\n          \"groupNumber\": integer\n        }\n        ...\n      ],\n      \"maxAttempts\": integer,\n      \"responseCard\": \"string\"\n    },\n    \"priority\": integer,\n    \"sampleUtterances\": [\"string\", ...],\n    \"responseCard\": \"string\",\n    \"obfuscationSetting\": \"NONE\"|\"DEFAULT_OBFUSCATION\",\n    \"defaultValueSpec\": {\n      \"defaultValueList\": [\n        {\n          \"defaultValue\": \"string\"\n        }\n        ...\n      ]\n    }\n  }\n  ...\n]\n\n\n--sample-utterances (list)\n\nAn array of utterances (strings) that a user might say to signal the intent. For example, “I want {PizzaSize} pizza”, “Order {Quantity} {PizzaSize} pizzas”.\n\nIn each utterance, a slot name is enclosed in curly braces.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--confirmation-prompt (structure)\n\nPrompts the user to confirm the intent. This question should have a yes or no answer.\n\nAmazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the OrderPizza intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information.\n\nNote\n\nYou you must provide both the rejectionStatement and the confirmationPrompt , or neither.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nShorthand Syntax:\n\nmessages=[{contentType=string,content=string,groupNumber=integer},{contentType=string,content=string,groupNumber=integer}],maxAttempts=integer,responseCard=string\n\n\nJSON Syntax:\n\n{\n  \"messages\": [\n    {\n      \"contentType\": \"PlainText\"|\"SSML\"|\"CustomPayload\",\n      \"content\": \"string\",\n      \"groupNumber\": integer\n    }\n    ...\n  ],\n  \"maxAttempts\": integer,\n  \"responseCard\": \"string\"\n}\n\n\n--rejection-statement (structure)\n\nWhen the user answers “no” to the question defined in confirmationPrompt , Amazon Lex responds with this statement to acknowledge that the intent was canceled.\n\nNote\n\nYou must provide both the rejectionStatement and the confirmationPrompt , or neither.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nShorthand Syntax:\n\nmessages=[{contentType=string,content=string,groupNumber=integer},{contentType=string,content=string,groupNumber=integer}],responseCard=string\n\n\nJSON Syntax:\n\n{\n  \"messages\": [\n    {\n      \"contentType\": \"PlainText\"|\"SSML\"|\"CustomPayload\",\n      \"content\": \"string\",\n      \"groupNumber\": integer\n    }\n    ...\n  ],\n  \"responseCard\": \"string\"\n}\n\n\n--follow-up-prompt (structure)\n\nAmazon Lex uses this prompt to solicit additional activity after fulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the user to order a drink.\n\nThe action that Amazon Lex takes depends on the user’s response, as follows:\n\nIf the user says “Yes” it responds with the clarification prompt that is configured for the bot.\n\nif the user says “Yes” and continues with an utterance that triggers an intent it starts a conversation for the intent.\n\nIf the user says “No” it responds with the rejection statement configured for the the follow-up prompt.\n\nIf it doesn’t recognize the utterance it repeats the follow-up prompt again.\n\nThe followUpPrompt field and the conclusionStatement field are mutually exclusive. You can specify only one.\n\nprompt -> (structure)\n\nPrompts for information from the user.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nrejectionStatement -> (structure)\n\nIf the user answers “no” to the question defined in the prompt field, Amazon Lex responds with this statement to acknowledge that the intent was canceled.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nJSON Syntax:\n\n{\n  \"prompt\": {\n    \"messages\": [\n      {\n        \"contentType\": \"PlainText\"|\"SSML\"|\"CustomPayload\",\n        \"content\": \"string\",\n        \"groupNumber\": integer\n      }\n      ...\n    ],\n    \"maxAttempts\": integer,\n    \"responseCard\": \"string\"\n  },\n  \"rejectionStatement\": {\n    \"messages\": [\n      {\n        \"contentType\": \"PlainText\"|\"SSML\"|\"CustomPayload\",\n        \"content\": \"string\",\n        \"groupNumber\": integer\n      }\n      ...\n    ],\n    \"responseCard\": \"string\"\n  }\n}\n\n\n--conclusion-statement (structure)\n\nThe statement that you want Amazon Lex to convey to the user after the intent is successfully fulfilled by the Lambda function.\n\nThis element is relevant only if you provide a Lambda function in the fulfillmentActivity . If you return the intent to the client application, you can’t specify this element.\n\nNote\n\nThe followUpPrompt and conclusionStatement are mutually exclusive. You can specify only one.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nShorthand Syntax:\n\nmessages=[{contentType=string,content=string,groupNumber=integer},{contentType=string,content=string,groupNumber=integer}],responseCard=string\n\n\nJSON Syntax:\n\n{\n  \"messages\": [\n    {\n      \"contentType\": \"PlainText\"|\"SSML\"|\"CustomPayload\",\n      \"content\": \"string\",\n      \"groupNumber\": integer\n    }\n    ...\n  ],\n  \"responseCard\": \"string\"\n}\n\n\n--dialog-code-hook (structure)\n\nSpecifies a Lambda function to invoke for each user input. You can invoke this Lambda function to personalize user interaction.\n\nFor example, suppose your bot determines that the user is John. Your Lambda function might retrieve John’s information from a backend database and prepopulate some of the values. For example, if you find that John is gluten intolerant, you might set the corresponding intent slot, GlutenIntolerant , to true. You might find John’s phone number and set the corresponding session attribute.\n\nuri -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\nmessageVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see using-lambda .\n\nShorthand Syntax:\n\nuri=string,messageVersion=string\n\n\nJSON Syntax:\n\n{\n  \"uri\": \"string\",\n  \"messageVersion\": \"string\"\n}\n\n\n--fulfillment-activity (structure)\n\nRequired. Describes how the intent is fulfilled. For example, after a user provides all of the information for a pizza order, fulfillmentActivity defines how the bot places an order with a local pizza store.\n\nYou might configure Amazon Lex to return all of the intent information to the client application, or direct it to invoke a Lambda function that can process the intent (for example, place an order with a pizzeria).\n\ntype -> (string)\n\nHow the intent should be fulfilled, either by running a Lambda function or by returning the slot data to the client application.\n\ncodeHook -> (structure)\n\nA description of the Lambda function that is run to fulfill the intent.\n\nuri -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\nmessageVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see using-lambda .\n\nShorthand Syntax:\n\ntype=string,codeHook={uri=string,messageVersion=string}\n\n\nJSON Syntax:\n\n{\n  \"type\": \"ReturnIntent\"|\"CodeHook\",\n  \"codeHook\": {\n    \"uri\": \"string\",\n    \"messageVersion\": \"string\"\n  }\n}\n\n\n--parent-intent-signature (string)\n\nA unique identifier for the built-in intent to base this intent on. To find the signature for an intent, see Standard Built-in Intents in the Alexa Skills Kit .\n\n--checksum (string)\n\nIdentifies a specific revision of the $LATEST version.\n\nWhen you create a new intent, leave the checksum field blank. If you specify a checksum you get a BadRequestException exception.\n\nWhen you want to update a intent, set the checksum field to the checksum of the most recent revision of the $LATEST version. If you don’t specify the checksum field, or if the checksum does not match the $LATEST version, you get a PreconditionFailedException exception.\n\n--create-version | --no-create-version (boolean)\n\nWhen set to true a new numbered version of the intent is created. This is the same as calling the CreateIntentVersion operation. If you do not specify createVersion , the default is false .\n\n--kendra-configuration (structure)\n\nConfiguration information required to use the AMAZON.KendraSearchIntent intent to connect to an Amazon Kendra index. For more information, see AMAZON.KendraSearchIntent .\n\nkendraIndex -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot. If the Amazon Kendra index does not exist, you get an exception when you call the PutIntent operation.\n\nqueryFilterString -> (string)\n\nA query filter that Amazon Lex sends to Amazon Kendra to filter the response from the query. The filter is in the format defined by Amazon Kendra. For more information, see Filtering queries .\n\nYou can override this filter string with a new filter string at runtime.\n\nrole -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that has permission to search the Amazon Kendra index. The role must be in the same account and Region as the Amazon Lex bot. If the role does not exist, you get an exception when you call the PutIntent operation.\n\nShorthand Syntax:\n\nkendraIndex=string,queryFilterString=string,role=string\n\n\nJSON Syntax:\n\n{\n  \"kendraIndex\": \"string\",\n  \"queryFilterString\": \"string\",\n  \"role\": \"string\"\n}\n\n\n--input-contexts (list)\n\nAn array of InputContext objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user.\n\n(structure)\n\nThe name of a context that must be active for an intent to be selected by Amazon Lex.\n\nname -> (string)\n\nThe name of the context.\n\nShorthand Syntax:\n\nname=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\"\n  }\n  ...\n]\n\n\n--output-contexts (list)\n\nAn array of OutputContext objects that lists the contexts that the intent activates when the intent is fulfilled.\n\n(structure)\n\nThe specification of an output context that is set when an intent is fulfilled.\n\nname -> (string)\n\nThe name of the context.\n\ntimeToLiveInSeconds -> (integer)\n\nThe number of seconds that the context should be active after it is first sent in a PostContent or PostText response. You can set the value between 5 and 86,400 seconds (24 hours).\n\nturnsToLive -> (integer)\n\nThe number of conversation turns that the context should be active. A conversation turn is one PostContent or PostText request and the corresponding response from Amazon Lex.\n\nShorthand Syntax:\n\nname=string,timeToLiveInSeconds=integer,turnsToLive=integer ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"timeToLiveInSeconds\": integer,\n    \"turnsToLive\": integer\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the intent.\n\ndescription -> (string)\n\nA description of the intent.\n\nslots -> (list)\n\nAn array of intent slots that are configured for the intent.\n\n(structure)\n\nIdentifies the version of a specific slot.\n\nname -> (string)\n\nThe name of the slot.\n\ndescription -> (string)\n\nA description of the slot.\n\nslotConstraint -> (string)\n\nSpecifies whether the slot is required or optional.\n\nslotType -> (string)\n\nThe type of the slot, either a custom slot type that you defined or one of the built-in slot types.\n\nslotTypeVersion -> (string)\n\nThe version of the slot type.\n\nvalueElicitationPrompt -> (structure)\n\nThe prompt that Amazon Lex uses to elicit the slot value from the user.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\npriority -> (integer)\n\nDirects Amazon Lex the order in which to elicit this slot value from the user. For example, if the intent has two slots with priorities 1 and 2, AWS Amazon Lex first elicits a value for the slot with priority 1.\n\nIf multiple slots share the same priority, the order in which Amazon Lex elicits values is arbitrary.\n\nsampleUtterances -> (list)\n\nIf you know a specific pattern with which users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.\n\n(string)\n\nresponseCard -> (string)\n\nA set of possible responses for the slot type used by text-based clients. A user chooses an option from the response card, instead of using text to reply.\n\nobfuscationSetting -> (string)\n\nDetermines whether a slot is obfuscated in conversation logs and stored utterances. When you obfuscate a slot, the value is replaced by the slot name in curly braces ({}). For example, if the slot name is “full_name”, obfuscated values are replaced with “{full_name}”. For more information, see Slot Obfuscation .\n\ndefaultValueSpec -> (structure)\n\nA list of default values for the slot. Default values are used when Amazon Lex hasn’t determined a value for a slot. You can specify default values from context variables, session attributes, and defined values.\n\ndefaultValueList -> (list)\n\nThe default values for a slot. You can specify more than one default. For example, you can specify a default value to use from a matching context variable, a session attribute, or a fixed value.\n\nThe default value chosen is selected based on the order that you specify them in the list. For example, if you specify a context variable and a fixed value in that order, Amazon Lex uses the context variable if it is available, else it uses the fixed value.\n\n(structure)\n\nA default value for a slot.\n\ndefaultValue -> (string)\n\nThe default value for the slot. You can specify one of the following:\n\n#context-name.slot-name - The slot value “slot-name” in the context “context-name.”\n\n{attribute} - The slot value of the session attribute “attribute.”\n\n'value' - The discrete value “value.”\n\nsampleUtterances -> (list)\n\nAn array of sample utterances that are configured for the intent.\n\n(string)\n\nconfirmationPrompt -> (structure)\n\nIf defined in the intent, Amazon Lex prompts the user to confirm the intent before fulfilling it.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nrejectionStatement -> (structure)\n\nIf the user answers “no” to the question defined in confirmationPrompt Amazon Lex responds with this statement to acknowledge that the intent was canceled.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nfollowUpPrompt -> (structure)\n\nIf defined in the intent, Amazon Lex uses this prompt to solicit additional user activity after the intent is fulfilled.\n\nprompt -> (structure)\n\nPrompts for information from the user.\n\nmessages -> (list)\n\nAn array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nmaxAttempts -> (integer)\n\nThe number of times to prompt the user for information.\n\nresponseCard -> (string)\n\nA response card. Amazon Lex uses this prompt at runtime, in the PostText API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see ex-resp-card .\n\nrejectionStatement -> (structure)\n\nIf the user answers “no” to the question defined in the prompt field, Amazon Lex responds with this statement to acknowledge that the intent was canceled.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\nconclusionStatement -> (structure)\n\nAfter the Lambda function specified in the``fulfillmentActivity`` intent fulfills the intent, Amazon Lex conveys this statement to the user.\n\nmessages -> (list)\n\nA collection of message objects.\n\n(structure)\n\nThe message object that provides the message text and its type.\n\ncontentType -> (string)\n\nThe content type of the message string.\n\ncontent -> (string)\n\nThe text of the message.\n\ngroupNumber -> (integer)\n\nIdentifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.\n\nresponseCard -> (string)\n\nAt runtime, if the client is using the PostText API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card.\n\ndialogCodeHook -> (structure)\n\nIf defined in the intent, Amazon Lex invokes this Lambda function for each user input.\n\nuri -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\nmessageVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see using-lambda .\n\nfulfillmentActivity -> (structure)\n\nIf defined in the intent, Amazon Lex invokes this Lambda function to fulfill the intent after the user provides all of the information required by the intent.\n\ntype -> (string)\n\nHow the intent should be fulfilled, either by running a Lambda function or by returning the slot data to the client application.\n\ncodeHook -> (structure)\n\nA description of the Lambda function that is run to fulfill the intent.\n\nuri -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\nmessageVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see using-lambda .\n\nparentIntentSignature -> (string)\n\nA unique identifier for the built-in intent that this intent is based on.\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the intent was updated. When you create a resource, the creation date and last update dates are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the intent was created.\n\nversion -> (string)\n\nThe version of the intent. For a new intent, the version is always $LATEST .\n\nchecksum -> (string)\n\nChecksum of the $LATEST version of the intent created or updated.\n\ncreateVersion -> (boolean)\n\nTrue if a new version of the intent was created. If the createVersion field was not specified in the request, the createVersion field is set to false in the response.\n\nkendraConfiguration -> (structure)\n\nConfiguration information, if any, required to connect to an Amazon Kendra index and use the AMAZON.KendraSearchIntent intent.\n\nkendraIndex -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot. If the Amazon Kendra index does not exist, you get an exception when you call the PutIntent operation.\n\nqueryFilterString -> (string)\n\nA query filter that Amazon Lex sends to Amazon Kendra to filter the response from the query. The filter is in the format defined by Amazon Kendra. For more information, see Filtering queries .\n\nYou can override this filter string with a new filter string at runtime.\n\nrole -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that has permission to search the Amazon Kendra index. The role must be in the same account and Region as the Amazon Lex bot. If the role does not exist, you get an exception when you call the PutIntent operation.\n\ninputContexts -> (list)\n\nAn array of InputContext objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user.\n\n(structure)\n\nThe name of a context that must be active for an intent to be selected by Amazon Lex.\n\nname -> (string)\n\nThe name of the context.\n\noutputContexts -> (list)\n\nAn array of OutputContext objects that lists the contexts that the intent activates when the intent is fulfilled.\n\n(structure)\n\nThe specification of an output context that is set when an intent is fulfilled.\n\nname -> (string)\n\nThe name of the context.\n\ntimeToLiveInSeconds -> (integer)\n\nThe number of seconds that the context should be active after it is first sent in a PostContent or PostText response. You can set the value between 5 and 86,400 seconds (24 hours).\n\nturnsToLive -> (integer)\n\nThe number of conversation turns that the context should be active. A conversation turn is one PostContent or PostText request and the corresponding response from Amazon Lex."
    },
    {
      "command_name": "put-slot-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/put-slot-type.html",
      "command_description": "Description\n\nCreates a custom slot type or replaces an existing custom slot type.\n\nTo create a custom slot type, specify a name for the slot type and a set of enumeration values, which are the values that a slot of this type can assume. For more information, see how-it-works .\n\nIf you specify the name of an existing slot type, the fields in the request replace the existing values in the $LATEST version of the slot type. Amazon Lex removes the fields that you don’t provide in the request. If you don’t specify required fields, Amazon Lex throws an exception. When you update the $LATEST version of a slot type, if a bot uses the $LATEST version of an intent that contains the slot type, the bot’s status field is set to NOT_BUILT .\n\nThis operation requires permissions for the lex:PutSlotType action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-slot-type\n--name <value>\n[--description <value>]\n[--enumeration-values <value>]\n[--checksum <value>]\n[--value-selection-strategy <value>]\n[--create-version | --no-create-version]\n[--parent-slot-type-signature <value>]\n[--slot-type-configurations <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--enumeration-values <value>]",
        "[--checksum <value>]",
        "[--value-selection-strategy <value>]",
        "[--create-version | --no-create-version]",
        "[--parent-slot-type-signature <value>]",
        "[--slot-type-configurations <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the slot type. The name is not case sensitive.\n\nThe name can’t match a built-in slot type name, or a built-in slot type name with “AMAZON.” removed. For example, because there is a built-in slot type called AMAZON.DATE , you can’t create a custom slot type called DATE .\n\nFor a list of built-in slot types, see Slot Type Reference in the Alexa Skills Kit .\n\n--description (string)\n\nA description of the slot type.\n\n--enumeration-values (list)\n\nA list of EnumerationValue objects that defines the values that the slot type can take. Each value can have a list of synonyms , which are additional values that help train the machine learning model about the values that it resolves for a slot.\n\nA regular expression slot type doesn’t require enumeration values. All other slot types require a list of enumeration values.\n\nWhen Amazon Lex resolves a slot value, it generates a resolution list that contains up to five possible values for the slot. If you are using a Lambda function, this resolution list is passed to the function. If you are not using a Lambda function you can choose to return the value that the user entered or the first value in the resolution list as the slot value. The valueSelectionStrategy field indicates the option to use.\n\n(structure)\n\nEach slot type can have a set of values. Each enumeration value represents a value the slot type can take.\n\nFor example, a pizza ordering bot could have a slot type that specifies the type of crust that the pizza should have. The slot type could include the values\n\nthick\n\nthin\n\nstuffed\n\nvalue -> (string)\n\nThe value of the slot type.\n\nsynonyms -> (list)\n\nAdditional values related to the slot type value.\n\n(string)\n\nShorthand Syntax:\n\nvalue=string,synonyms=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"value\": \"string\",\n    \"synonyms\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--checksum (string)\n\nIdentifies a specific revision of the $LATEST version.\n\nWhen you create a new slot type, leave the checksum field blank. If you specify a checksum you get a BadRequestException exception.\n\nWhen you want to update a slot type, set the checksum field to the checksum of the most recent revision of the $LATEST version. If you don’t specify the checksum field, or if the checksum does not match the $LATEST version, you get a PreconditionFailedException exception.\n\n--value-selection-strategy (string)\n\nDetermines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:\n\nORIGINAL_VALUE - Returns the value entered by the user, if the user value is similar to the slot value.\n\nTOP_RESOLUTION - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.\n\nIf you don’t specify the valueSelectionStrategy , the default is ORIGINAL_VALUE .\n\nPossible values:\n\nORIGINAL_VALUE\n\nTOP_RESOLUTION\n\n--create-version | --no-create-version (boolean)\n\nWhen set to true a new numbered version of the slot type is created. This is the same as calling the CreateSlotTypeVersion operation. If you do not specify createVersion , the default is false .\n\n--parent-slot-type-signature (string)\n\nThe built-in slot type used as the parent of the slot type. When you define a parent slot type, the new slot type has all of the same configuration as the parent.\n\nOnly AMAZON.AlphaNumeric is supported.\n\n--slot-type-configurations (list)\n\nConfiguration information that extends the parent built-in slot type. The configuration is added to the settings for the parent slot type.\n\n(structure)\n\nProvides configuration information for a slot type.\n\nregexConfiguration -> (structure)\n\nA regular expression used to validate the value of a slot.\n\npattern -> (string)\n\nA regular expression used to validate the value of a slot.\n\nUse a standard regular expression. Amazon Lex supports the following characters in the regular expression:\n\nA-Z, a-z\n\n0-9\n\nUnicode characters (“u<Unicode>”)\n\nRepresent Unicode characters with four digits, for example “u0041” or “u005A”.\n\nThe following regular expression operators are not supported:\n\nInfinite repeaters: *, +, or {x,} with no upper bound.\n\nWild card (.)\n\nShorthand Syntax:\n\nregexConfiguration={pattern=string} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"regexConfiguration\": {\n      \"pattern\": \"string\"\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the slot type.\n\ndescription -> (string)\n\nA description of the slot type.\n\nenumerationValues -> (list)\n\nA list of EnumerationValue objects that defines the values that the slot type can take.\n\n(structure)\n\nEach slot type can have a set of values. Each enumeration value represents a value the slot type can take.\n\nFor example, a pizza ordering bot could have a slot type that specifies the type of crust that the pizza should have. The slot type could include the values\n\nthick\n\nthin\n\nstuffed\n\nvalue -> (string)\n\nThe value of the slot type.\n\nsynonyms -> (list)\n\nAdditional values related to the slot type value.\n\n(string)\n\nlastUpdatedDate -> (timestamp)\n\nThe date that the slot type was updated. When you create a slot type, the creation date and last update date are the same.\n\ncreatedDate -> (timestamp)\n\nThe date that the slot type was created.\n\nversion -> (string)\n\nThe version of the slot type. For a new slot type, the version is always $LATEST .\n\nchecksum -> (string)\n\nChecksum of the $LATEST version of the slot type.\n\nvalueSelectionStrategy -> (string)\n\nThe slot resolution strategy that Amazon Lex uses to determine the value of the slot. For more information, see PutSlotType .\n\ncreateVersion -> (boolean)\n\nTrue if a new version of the slot type was created. If the createVersion field was not specified in the request, the createVersion field is set to false in the response.\n\nparentSlotTypeSignature -> (string)\n\nThe built-in slot type used as the parent of the slot type.\n\nslotTypeConfigurations -> (list)\n\nConfiguration information that extends the parent built-in slot type.\n\n(structure)\n\nProvides configuration information for a slot type.\n\nregexConfiguration -> (structure)\n\nA regular expression used to validate the value of a slot.\n\npattern -> (string)\n\nA regular expression used to validate the value of a slot.\n\nUse a standard regular expression. Amazon Lex supports the following characters in the regular expression:\n\nA-Z, a-z\n\n0-9\n\nUnicode characters (“u<Unicode>”)\n\nRepresent Unicode characters with four digits, for example “u0041” or “u005A”.\n\nThe following regular expression operators are not supported:\n\nInfinite repeaters: *, +, or {x,} with no upper bound.\n\nWild card (.)"
    },
    {
      "command_name": "start-import",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/start-import.html",
      "command_description": "Description\n\nStarts a job to import a resource to Amazon Lex.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-import\n--payload <value>\n--resource-type <value>\n--merge-strategy <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--payload <value>",
        "--resource-type <value>",
        "--merge-strategy <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--payload (blob)\n\nA zip archive in binary format. The archive should contain one file, a JSON file containing the resource to import. The resource should match the type specified in the resourceType field.\n\n--resource-type (string)\n\nSpecifies the type of resource to export. Each resource also exports any resources that it depends on.\n\nA bot exports dependent intents.\n\nAn intent exports dependent slot types.\n\nPossible values:\n\nBOT\n\nINTENT\n\nSLOT_TYPE\n\n--merge-strategy (string)\n\nSpecifies the action that the StartImport operation should take when there is an existing resource with the same name.\n\nFAIL_ON_CONFLICT - The import operation is stopped on the first conflict between a resource in the import file and an existing resource. The name of the resource causing the conflict is in the failureReason field of the response to the GetImport operation. OVERWRITE_LATEST - The import operation proceeds even if there is a conflict with an existing resource. The $LASTEST version of the existing resource is overwritten with the data from the import file.\n\nPossible values:\n\nOVERWRITE_LATEST\n\nFAIL_ON_CONFLICT\n\n--tags (list)\n\nA list of tags to add to the imported bot. You can only add tags when you import a bot, you can’t add tags to an intent or slot type.\n\n(structure)\n\nA list of key/value pairs that identify a bot, bot alias, or bot channel. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.\n\nkey -> (string)\n\nThe key for the tag. Keys are not case-sensitive and must be unique.\n\nvalue -> (string)\n\nThe value associated with a key. The value may be an empty string but it can’t be null.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name given to the import job.\n\nresourceType -> (string)\n\nThe type of resource to import.\n\nmergeStrategy -> (string)\n\nThe action to take when there is a merge conflict.\n\nimportId -> (string)\n\nThe identifier for the specific import job.\n\nimportStatus -> (string)\n\nThe status of the import job. If the status is FAILED , you can get the reason for the failure using the GetImport operation.\n\ntags -> (list)\n\nA list of tags added to the imported bot.\n\n(structure)\n\nA list of key/value pairs that identify a bot, bot alias, or bot channel. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.\n\nkey -> (string)\n\nThe key for the tag. Keys are not case-sensitive and must be unique.\n\nvalue -> (string)\n\nThe value associated with a key. The value may be an empty string but it can’t be null.\n\ncreatedDate -> (timestamp)\n\nA timestamp for the date and time that the import job was requested."
    },
    {
      "command_name": "start-migration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/start-migration.html",
      "command_description": "Description\n\nStarts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot when you want to take advantage of the new features of Amazon Lex V2.\n\nFor more information, see Migrating a bot in the Amazon Lex developer guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-migration\n--v1-bot-name <value>\n--v1-bot-version <value>\n--v2-bot-name <value>\n--v2-bot-role <value>\n--migration-strategy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--v1-bot-name <value>",
        "--v1-bot-version <value>",
        "--v2-bot-name <value>",
        "--v2-bot-role <value>",
        "--migration-strategy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--v1-bot-name (string)\n\nThe name of the Amazon Lex V1 bot that you are migrating to Amazon Lex V2.\n\n--v1-bot-version (string)\n\nThe version of the bot to migrate to Amazon Lex V2. You can migrate the $LATEST version as well as any numbered version.\n\n--v2-bot-name (string)\n\nThe name of the Amazon Lex V2 bot that you are migrating the Amazon Lex V1 bot to.\n\nIf the Amazon Lex V2 bot doesn’t exist, you must use the CREATE_NEW migration strategy.\n\nIf the Amazon Lex V2 bot exists, you must use the UPDATE_EXISTING migration strategy to change the contents of the Amazon Lex V2 bot.\n\n--v2-bot-role (string)\n\nThe IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.\n\n--migration-strategy (string)\n\nThe strategy used to conduct the migration.\n\nCREATE_NEW - Creates a new Amazon Lex V2 bot and migrates the Amazon Lex V1 bot to the new bot.\n\nUPDATE_EXISTING - Overwrites the existing Amazon Lex V2 bot metadata and the locale being migrated. It doesn’t change any other locales in the Amazon Lex V2 bot. If the locale doesn’t exist, a new locale is created in the Amazon Lex V2 bot.\n\nPossible values:\n\nCREATE_NEW\n\nUPDATE_EXISTING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nv1BotName -> (string)\n\nThe name of the Amazon Lex V1 bot that you are migrating to Amazon Lex V2.\n\nv1BotVersion -> (string)\n\nThe version of the bot to migrate to Amazon Lex V2.\n\nv1BotLocale -> (string)\n\nThe locale used for the Amazon Lex V1 bot.\n\nv2BotId -> (string)\n\nThe unique identifier for the Amazon Lex V2 bot.\n\nv2BotRole -> (string)\n\nThe IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.\n\nmigrationId -> (string)\n\nThe unique identifier that Amazon Lex assigned to the migration.\n\nmigrationStrategy -> (string)\n\nThe strategy used to conduct the migration.\n\nmigrationTimestamp -> (timestamp)\n\nThe date and time that the migration started."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/tag-resource.html",
      "command_description": "Description\n\nAdds the specified tags to the specified resource. If a tag key already exists, the existing value is replaced with the new value.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the bot, bot alias, or bot channel to tag.\n\n--tags (list)\n\nA list of tag keys to add to the resource. If a tag key already exists, the existing value is replaced with the new value.\n\n(structure)\n\nA list of key/value pairs that identify a bot, bot alias, or bot channel. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.\n\nkey -> (string)\n\nThe key for the tag. Keys are not case-sensitive and must be unique.\n\nvalue -> (string)\n\nThe value associated with a key. The value may be an empty string but it can’t be null.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lex-models/untag-resource.html",
      "command_description": "Description\n\nRemoves tags from a bot, bot alias or bot channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource to remove the tags from.\n\n--tag-keys (list)\n\nA list of tag keys to remove from the resource. If a tag key does not exist on the resource, it is ignored.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    }
  ],
  "service_description": "Description\n\nAmazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications."
}