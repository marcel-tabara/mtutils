{
  "service_name": "timestream-query",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-query/index.html",
  "service_commands": [
    {
      "command_name": "cancel-query",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-query/cancel-query.html",
      "command_description": "Description\n\nCancels a query that has been issued. Cancellation is guaranteed only if the query has not completed execution before the cancellation request was issued. Because cancellation is an idempotent operation, subsequent cancellation requests will return a CancellationMessage , indicating that the query has already been canceled.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-query\n--query-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--query-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--query-id (string)\n\nThe id of the query that needs to be cancelled. QueryID is returned as part of QueryResult.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCancellationMessage -> (string)\n\nA CancellationMessage is returned when a CancelQuery request for the query specified by QueryId has already been issued."
    },
    {
      "command_name": "describe-endpoints",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-query/describe-endpoints.html",
      "command_description": "Description\n\nDescribeEndpoints returns a list of available endpoints to make Timestream API calls against. This API is available through both Write and Query.\n\nBecause Timestream’s SDKs are designed to transparently work with the service’s architecture, including the management and mapping of the service endpoints, it is not recommended that you use this API unless :\n\nYour application uses a programming language that does not yet have SDK support\n\nYou require better control over the client-side implementation\n\nFor detailed information on how to use DescribeEndpoints, see The Endpoint Discovery Pattern and REST APIs .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-endpoints\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEndpoints -> (list)\n\nAn Endpoints object is returned when a DescribeEndpoints request is made.\n\n(structure)\n\nRepresents an available endpoint against which to make API calls agaisnt, as well as the TTL for that endpoint.\n\nAddress -> (string)\n\nAn endpoint address.\n\nCachePeriodInMinutes -> (long)\n\nThe TTL for the endpoint, in minutes."
    },
    {
      "command_name": "query",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/timestream-query/query.html",
      "command_description": "Description\n\nQuery is a synchronous operation that enables you to execute a query. Query will timeout after 60 seconds. You must update the default timeout in the SDK to support a timeout of 60 seconds. The result set will be truncated to 1MB. Service quotas apply. For more information, see Quotas in the Timestream Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nquery is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Rows",
      "command_synopsis": "Synopsis\n  query\n--query-string <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--query-string <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--query-string (string)\n\nThe query to be executed by Timestream.\n\n--client-token (string)\n\nUnique, case-sensitive string of up to 64 ASCII characters that you specify when you make a Query request. Providing a ClientToken makes the call to Query idempotent, meaning that multiple identical calls have the same effect as one single call.\n\nYour query request will fail in the following cases:\n\nIf you submit a request with the same client token outside the 5-minute idepotency window.\n\nIf you submit a request with the same client token but a change in other parameters within the 5-minute idempotency window.\n\nAfter 4 hours, any request with the same client token is treated as a new request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueryId -> (string)\n\nA unique ID for the given query.\n\nNextToken -> (string)\n\nA pagination token that can be used again on a Query call to get the next set of results.\n\nRows -> (list)\n\nThe result set rows returned by the query.\n\n(structure)\n\nRepresents a single row in the query results.\n\nData -> (list)\n\nList of data points in a single row of the result set.\n\n(structure)\n\nDatum represents a single data point in a query result.\n\nScalarValue -> (string)\n\nIndicates if the data point is a scalar value such as integer, string, double, or boolean.\n\nTimeSeriesValue -> (list)\n\nIndicates if the data point is of timeseries data type.\n\n(structure)\n\nThe timeseries datatype represents the values of a measure over time. A time series is an array of rows of timestamps and measure values, with rows sorted in ascending order of time. A TimeSeriesDataPoint is a single data point in the timeseries. It represents a tuple of (time, measure value) in a timeseries.\n\nTime -> (string)\n\nThe timestamp when the measure value was collected.\n\nValue -> (structure)\n\nThe measure value for the data point.\n\nScalarValue -> (string)\n\nIndicates if the data point is a scalar value such as integer, string, double, or boolean.\n\nTimeSeriesValue -> (list)\n\nIndicates if the data point is of timeseries data type.\n\n(structure)\n\nThe timeseries datatype represents the values of a measure over time. A time series is an array of rows of timestamps and measure values, with rows sorted in ascending order of time. A TimeSeriesDataPoint is a single data point in the timeseries. It represents a tuple of (time, measure value) in a timeseries.\n\nTime -> (string)\n\nThe timestamp when the measure value was collected.\n\n( … recursive … )\n\nArrayValue -> (list)\n\nIndicates if the data point is an array.\n\n( … recursive … )\n\nRowValue -> (structure)\n\nIndicates if the data point is a row.\n\nData -> (list)\n\nList of data points in a single row of the result set.\n\n( … recursive … )\n\nNullValue -> (boolean)\n\nIndicates if the data point is null.\n\nArrayValue -> (list)\n\nIndicates if the data point is an array.\n\n(structure)\n\nDatum represents a single data point in a query result.\n\nScalarValue -> (string)\n\nIndicates if the data point is a scalar value such as integer, string, double, or boolean.\n\nTimeSeriesValue -> (list)\n\nIndicates if the data point is of timeseries data type.\n\n(structure)\n\nThe timeseries datatype represents the values of a measure over time. A time series is an array of rows of timestamps and measure values, with rows sorted in ascending order of time. A TimeSeriesDataPoint is a single data point in the timeseries. It represents a tuple of (time, measure value) in a timeseries.\n\nTime -> (string)\n\nThe timestamp when the measure value was collected.\n\n( … recursive … )\n\nRowValue -> (structure)\n\nIndicates if the data point is a row.\n\nNullValue -> (boolean)\n\nIndicates if the data point is null.\n\nRowValue -> (structure)\n\nIndicates if the data point is a row.\n\nData -> (list)\n\nList of data points in a single row of the result set.\n\n(structure)\n\nDatum represents a single data point in a query result.\n\nScalarValue -> (string)\n\nIndicates if the data point is a scalar value such as integer, string, double, or boolean.\n\nTimeSeriesValue -> (list)\n\nIndicates if the data point is of timeseries data type.\n\n(structure)\n\nThe timeseries datatype represents the values of a measure over time. A time series is an array of rows of timestamps and measure values, with rows sorted in ascending order of time. A TimeSeriesDataPoint is a single data point in the timeseries. It represents a tuple of (time, measure value) in a timeseries.\n\nTime -> (string)\n\nThe timestamp when the measure value was collected.\n\n( … recursive … )\n\n( … recursive … )NullValue -> (boolean)\n\nIndicates if the data point is null.\n\nNullValue -> (boolean)\n\nIndicates if the data point is null.\n\nColumnInfo -> (list)\n\nThe column data types of the returned result set.\n\n(structure)\n\nContains the meta data for query results such as the column names, data types, and other attributes.\n\nName -> (string)\n\nThe name of the result set column. The name of the result set is available for columns of all data types except for arrays.\n\nType -> (structure)\n\nThe data type of the result set column. The data type can be a scalar or complex. Scalar data types are integers, strings, doubles, booleans, and others. Complex data types are types such as arrays, rows, and others.\n\nScalarType -> (string)\n\nIndicates if the column is of type string, integer, boolean, double, timestamp, date, time.\n\nArrayColumnInfo -> (structure)\n\nIndicates if the column is an array.\n\nName -> (string)\n\nThe name of the result set column. The name of the result set is available for columns of all data types except for arrays.\n\nType -> (structure)\n\nThe data type of the result set column. The data type can be a scalar or complex. Scalar data types are integers, strings, doubles, booleans, and others. Complex data types are types such as arrays, rows, and others.\n\nScalarType -> (string)\n\nIndicates if the column is of type string, integer, boolean, double, timestamp, date, time.\n\n( … recursive … )( … recursive … )RowColumnInfo -> (list)\n\nIndicates if the column is a row.\n\n( … recursive … )\n\nTimeSeriesMeasureValueColumnInfo -> (structure)\n\nIndicates if the column is a timeseries data type.\n\nName -> (string)\n\nThe name of the result set column. The name of the result set is available for columns of all data types except for arrays.\n\nType -> (structure)\n\nThe data type of the result set column. The data type can be a scalar or complex. Scalar data types are integers, strings, doubles, booleans, and others. Complex data types are types such as arrays, rows, and others.\n\nScalarType -> (string)\n\nIndicates if the column is of type string, integer, boolean, double, timestamp, date, time.\n\n( … recursive … )( … recursive … )RowColumnInfo -> (list)\n\nIndicates if the column is a row.\n\n( … recursive … )\n\nRowColumnInfo -> (list)\n\nIndicates if the column is a row.\n\n(structure)\n\nContains the meta data for query results such as the column names, data types, and other attributes.\n\nName -> (string)\n\nThe name of the result set column. The name of the result set is available for columns of all data types except for arrays.\n\nType -> (structure)\n\nThe data type of the result set column. The data type can be a scalar or complex. Scalar data types are integers, strings, doubles, booleans, and others. Complex data types are types such as arrays, rows, and others.\n\nScalarType -> (string)\n\nIndicates if the column is of type string, integer, boolean, double, timestamp, date, time.\n\n( … recursive … )( … recursive … )\n\nQueryStatus -> (structure)\n\nInformation about the status of the query, including progress and bytes scannned.\n\nProgressPercentage -> (double)\n\nThe progress of the query, expressed as a percentage.\n\nCumulativeBytesScanned -> (long)\n\nThe amount of data scanned by the query in bytes. This is a cumulative sum and represents the total amount of bytes scanned since the query was started.\n\nCumulativeBytesMetered -> (long)\n\nThe amount of data scanned by the query in bytes that you will be charged for. This is a cumulative sum and represents the total amount of data that you will be charged for since the query was started. The charge is applied only once and is either applied when the query completes execution or when the query is cancelled."
    }
  ],
  "service_description": "Description"
}