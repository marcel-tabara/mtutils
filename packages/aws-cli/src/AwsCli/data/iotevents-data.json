{
  "service_name": "iotevents-data",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/index.html",
  "service_commands": [
    {
      "command_name": "batch-acknowledge-alarm",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/batch-acknowledge-alarm.html",
      "command_description": "Description\n\nAcknowledges one or more alarms. The alarms change to the ACKNOWLEDGED state after you acknowledge them.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-acknowledge-alarm\n--acknowledge-action-requests <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--acknowledge-action-requests <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--acknowledge-action-requests (list)\n\nThe list of acknowledge action requests. You can specify up to 10 requests per operation.\n\n(structure)\n\nInformation needed to acknowledge the alarm.\n\nrequestId -> (string)\n\nThe request ID. Each ID must be unique within each batch.\n\nalarmModelName -> (string)\n\nThe name of the alarm model.\n\nkeyValue -> (string)\n\nThe value of the key used as a filter to select only the alarms associated with the key .\n\nnote -> (string)\n\nThe note that you can leave when you acknowledge the alarm.\n\nShorthand Syntax:\n\nrequestId=string,alarmModelName=string,keyValue=string,note=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"requestId\": \"string\",\n    \"alarmModelName\": \"string\",\n    \"keyValue\": \"string\",\n    \"note\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nerrorEntries -> (list)\n\nA list of errors associated with the request, or null if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.\n\n(structure)\n\nContains error messages associated with one of the following requests:\n\nBatchAcknowledgeAlarm\n\nBatchDisableAlarm\n\nBatchEnableAlarm\n\nBatchResetAlarm\n\nBatchSnoozeAlarm\n\nrequestId -> (string)\n\nThe request ID. Each ID must be unique within each batch.\n\nerrorCode -> (string)\n\nThe error code.\n\nerrorMessage -> (string)\n\nA message that describes the error."
    },
    {
      "command_name": "batch-disable-alarm",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/batch-disable-alarm.html",
      "command_description": "Description\n\nDisables one or more alarms. The alarms change to the DISABLED state after you disable them.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-disable-alarm\n--disable-action-requests <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--disable-action-requests <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--disable-action-requests (list)\n\nThe list of disable action requests. You can specify up to 10 requests per operation.\n\n(structure)\n\nInformation used to disable the alarm.\n\nrequestId -> (string)\n\nThe request ID. Each ID must be unique within each batch.\n\nalarmModelName -> (string)\n\nThe name of the alarm model.\n\nkeyValue -> (string)\n\nThe value of the key used as a filter to select only the alarms associated with the key .\n\nnote -> (string)\n\nThe note that you can leave when you disable the alarm.\n\nShorthand Syntax:\n\nrequestId=string,alarmModelName=string,keyValue=string,note=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"requestId\": \"string\",\n    \"alarmModelName\": \"string\",\n    \"keyValue\": \"string\",\n    \"note\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nerrorEntries -> (list)\n\nA list of errors associated with the request, or null if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.\n\n(structure)\n\nContains error messages associated with one of the following requests:\n\nBatchAcknowledgeAlarm\n\nBatchDisableAlarm\n\nBatchEnableAlarm\n\nBatchResetAlarm\n\nBatchSnoozeAlarm\n\nrequestId -> (string)\n\nThe request ID. Each ID must be unique within each batch.\n\nerrorCode -> (string)\n\nThe error code.\n\nerrorMessage -> (string)\n\nA message that describes the error."
    },
    {
      "command_name": "batch-enable-alarm",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/batch-enable-alarm.html",
      "command_description": "Description\n\nEnables one or more alarms. The alarms change to the NORMAL state after you enable them.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-enable-alarm\n--enable-action-requests <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--enable-action-requests <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--enable-action-requests (list)\n\nThe list of enable action requests. You can specify up to 10 requests per operation.\n\n(structure)\n\nInformation needed to enable the alarm.\n\nrequestId -> (string)\n\nThe request ID. Each ID must be unique within each batch.\n\nalarmModelName -> (string)\n\nThe name of the alarm model.\n\nkeyValue -> (string)\n\nThe value of the key used as a filter to select only the alarms associated with the key .\n\nnote -> (string)\n\nThe note that you can leave when you enable the alarm.\n\nShorthand Syntax:\n\nrequestId=string,alarmModelName=string,keyValue=string,note=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"requestId\": \"string\",\n    \"alarmModelName\": \"string\",\n    \"keyValue\": \"string\",\n    \"note\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nerrorEntries -> (list)\n\nA list of errors associated with the request, or null if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.\n\n(structure)\n\nContains error messages associated with one of the following requests:\n\nBatchAcknowledgeAlarm\n\nBatchDisableAlarm\n\nBatchEnableAlarm\n\nBatchResetAlarm\n\nBatchSnoozeAlarm\n\nrequestId -> (string)\n\nThe request ID. Each ID must be unique within each batch.\n\nerrorCode -> (string)\n\nThe error code.\n\nerrorMessage -> (string)\n\nA message that describes the error."
    },
    {
      "command_name": "batch-put-message",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/batch-put-message.html",
      "command_description": "Description\n\nSends a set of messages to the AWS IoT Events system. Each message payload is transformed into the input you specify (\"inputName\" ) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed isn’t guaranteed. To guarantee ordering, you must send messages one at a time and wait for a successful response.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-put-message\n--messages <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--messages <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--messages (list)\n\nThe list of messages to send. Each message has the following format: '{ \"messageId\": \"string\", \"inputName\": \"string\", \"payload\": \"string\"}'\n\n(structure)\n\nInformation about a message.\n\nmessageId -> (string)\n\nThe ID to assign to the message. Within each batch sent, each \"messageId\" must be unique.\n\ninputName -> (string)\n\nThe name of the input into which the message payload is transformed.\n\npayload -> (blob)\n\nThe payload of the message. This can be a JSON string or a Base-64-encoded string representing binary data (in which case you must decode it).\n\ntimestamp -> (structure)\n\nThe timestamp associated with the message.\n\ntimeInMillis -> (long)\n\nThe value of the timestamp, in the Unix epoch format.\n\nShorthand Syntax:\n\nmessageId=string,inputName=string,payload=blob,timestamp={timeInMillis=long} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"messageId\": \"string\",\n    \"inputName\": \"string\",\n    \"payload\": blob,\n    \"timestamp\": {\n      \"timeInMillis\": long\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBatchPutMessageErrorEntries -> (list)\n\nA list of any errors encountered when sending the messages.\n\n(structure)\n\nContains information about the errors encountered.\n\nmessageId -> (string)\n\nThe ID of the message that caused the error. (See the value corresponding to the \"messageId\" key in the \"message\" object.)\n\nerrorCode -> (string)\n\nThe error code.\n\nerrorMessage -> (string)\n\nA message that describes the error.",
      "command_examples": "Examples\n\nTo send messages (inputs) to AWS IoT Events\n\nThe following batch-put-message example sends a set of messages to the AWS IoT Events system. Each message payload is transformed into the input you specify ( inputName ) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed isn’t guaranteed. To guarantee ordering, you must send messages one at a time and wait for a successful response.\n\naws iotevents-data batch-put-message \\\n    --cli-input-json file://highPressureMessage.json\n\n\nContents of highPressureMessage.json:\n\n{\n    \"messages\": [\n        {\n            \"messageId\": \"00001\",\n            \"inputName\": \"PressureInput\",\n            \"payload\": \"{\\\"motorid\\\": \\\"Fulton-A32\\\", \\\"sensorData\\\": {\\\"pressure\\\": 80, \\\"temperature\\\": 39} }\"\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"BatchPutMessageErrorEntries\": []\n}\n\n\nFor more information, see BatchPutMessage in the AWS IoT Events Developer Guide*."
    },
    {
      "command_name": "batch-reset-alarm",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/batch-reset-alarm.html",
      "command_description": "Description\n\nResets one or more alarms. The alarms return to the NORMAL state after you reset them.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-reset-alarm\n--reset-action-requests <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--reset-action-requests <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--reset-action-requests (list)\n\nThe list of reset action requests. You can specify up to 10 requests per operation.\n\n(structure)\n\nInformation needed to reset the alarm.\n\nrequestId -> (string)\n\nThe request ID. Each ID must be unique within each batch.\n\nalarmModelName -> (string)\n\nThe name of the alarm model.\n\nkeyValue -> (string)\n\nThe value of the key used as a filter to select only the alarms associated with the key .\n\nnote -> (string)\n\nThe note that you can leave when you reset the alarm.\n\nShorthand Syntax:\n\nrequestId=string,alarmModelName=string,keyValue=string,note=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"requestId\": \"string\",\n    \"alarmModelName\": \"string\",\n    \"keyValue\": \"string\",\n    \"note\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nerrorEntries -> (list)\n\nA list of errors associated with the request, or null if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.\n\n(structure)\n\nContains error messages associated with one of the following requests:\n\nBatchAcknowledgeAlarm\n\nBatchDisableAlarm\n\nBatchEnableAlarm\n\nBatchResetAlarm\n\nBatchSnoozeAlarm\n\nrequestId -> (string)\n\nThe request ID. Each ID must be unique within each batch.\n\nerrorCode -> (string)\n\nThe error code.\n\nerrorMessage -> (string)\n\nA message that describes the error."
    },
    {
      "command_name": "batch-snooze-alarm",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/batch-snooze-alarm.html",
      "command_description": "Description\n\nChanges one or more alarms to the snooze mode. The alarms change to the SNOOZE_DISABLED state after you set them to the snooze mode.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-snooze-alarm\n--snooze-action-requests <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--snooze-action-requests <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--snooze-action-requests (list)\n\nThe list of snooze action requests. You can specify up to 10 requests per operation.\n\n(structure)\n\nInformation needed to snooze the alarm.\n\nrequestId -> (string)\n\nThe request ID. Each ID must be unique within each batch.\n\nalarmModelName -> (string)\n\nThe name of the alarm model.\n\nkeyValue -> (string)\n\nThe value of the key used as a filter to select only the alarms associated with the key .\n\nnote -> (string)\n\nThe note that you can leave when you snooze the alarm.\n\nsnoozeDuration -> (integer)\n\nThe snooze time in seconds. The alarm automatically changes to the NORMAL state after this duration.\n\nShorthand Syntax:\n\nrequestId=string,alarmModelName=string,keyValue=string,note=string,snoozeDuration=integer ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"requestId\": \"string\",\n    \"alarmModelName\": \"string\",\n    \"keyValue\": \"string\",\n    \"note\": \"string\",\n    \"snoozeDuration\": integer\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nerrorEntries -> (list)\n\nA list of errors associated with the request, or null if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.\n\n(structure)\n\nContains error messages associated with one of the following requests:\n\nBatchAcknowledgeAlarm\n\nBatchDisableAlarm\n\nBatchEnableAlarm\n\nBatchResetAlarm\n\nBatchSnoozeAlarm\n\nrequestId -> (string)\n\nThe request ID. Each ID must be unique within each batch.\n\nerrorCode -> (string)\n\nThe error code.\n\nerrorMessage -> (string)\n\nA message that describes the error."
    },
    {
      "command_name": "batch-update-detector",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/batch-update-detector.html",
      "command_description": "Description\n\nUpdates the state, variable values, and timer settings of one or more detectors (instances) of a specified detector model.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-update-detector\n--detectors <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--detectors <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--detectors (list)\n\nThe list of detectors (instances) to update, along with the values to update.\n\n(structure)\n\nInformation used to update the detector (instance).\n\nmessageId -> (string)\n\nThe ID to assign to the detector update \"message\" . Each \"messageId\" must be unique within each batch sent.\n\ndetectorModelName -> (string)\n\nThe name of the detector model that created the detectors (instances).\n\nkeyValue -> (string)\n\nThe value of the input key attribute (identifying the device or system) that caused the creation of this detector (instance).\n\nstate -> (structure)\n\nThe new state, variable values, and timer settings of the detector (instance).\n\nstateName -> (string)\n\nThe name of the new state of the detector (instance).\n\nvariables -> (list)\n\nThe new values of the detector’s variables. Any variable whose value isn’t specified is cleared.\n\n(structure)\n\nThe new value of the variable.\n\nname -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe new value of the variable.\n\ntimers -> (list)\n\nThe new values of the detector’s timers. Any timer whose value isn’t specified is cleared, and its timeout event won’t occur.\n\n(structure)\n\nThe new setting of a timer.\n\nname -> (string)\n\nThe name of the timer.\n\nseconds -> (integer)\n\nThe new setting of the timer (the number of seconds before the timer elapses).\n\nJSON Syntax:\n\n[\n  {\n    \"messageId\": \"string\",\n    \"detectorModelName\": \"string\",\n    \"keyValue\": \"string\",\n    \"state\": {\n      \"stateName\": \"string\",\n      \"variables\": [\n        {\n          \"name\": \"string\",\n          \"value\": \"string\"\n        }\n        ...\n      ],\n      \"timers\": [\n        {\n          \"name\": \"string\",\n          \"seconds\": integer\n        }\n        ...\n      ]\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbatchUpdateDetectorErrorEntries -> (list)\n\nA list of those detector updates that resulted in errors. (If an error is listed here, the specific update did not occur.)\n\n(structure)\n\nInformation about the error that occurred when attempting to update a detector.\n\nmessageId -> (string)\n\nThe \"messageId\" of the update request that caused the error. (The value of the \"messageId\" in the update request \"Detector\" object.)\n\nerrorCode -> (string)\n\nThe error code.\n\nerrorMessage -> (string)\n\nA message that describes the error.",
      "command_examples": "Examples\n\nTo update a detector (instance)\n\nThe following batch-update-detector example updates the state, variable values, and timer settings of one or more detectors (instances) of a specified detector model.\n\naws iotevents-data batch-update-detector \\\n    --cli-input-json file://budFulton-A32.json\n\n\nContents of budFulton-A32.json:\n\n{\n    \"detectors\": [\n        {\n            \"messageId\": \"00001\",\n            \"detectorModelName\": \"motorDetectorModel\",\n            \"keyValue\": \"Fulton-A32\",\n            \"state\": {\n                \"stateName\": \"Normal\",\n                \"variables\": [\n                    {\n                        \"name\": \"pressureThresholdBreached\",\n                        \"value\": \"0\"\n                    }\n                ],\n                \"timers\": [\n                ]\n            }\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"batchUpdateDetectorErrorEntries\": []\n}\n\n\nFor more information, see BatchUpdateDetector in the AWS IoT Events Developer Guide*."
    },
    {
      "command_name": "describe-alarm",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/describe-alarm.html",
      "command_description": "Description\n\nRetrieves information about an alarm.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-alarm\n--alarm-model-name <value>\n[--key-value <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--alarm-model-name <value>",
        "[--key-value <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--alarm-model-name (string)\n\nThe name of the alarm model.\n\n--key-value (string)\n\nThe value of the key used as a filter to select only the alarms associated with the key .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nalarm -> (structure)\n\nContains information about an alarm.\n\nalarmModelName -> (string)\n\nThe name of the alarm model.\n\nalarmModelVersion -> (string)\n\nThe version of the alarm model.\n\nkeyValue -> (string)\n\nThe value of the key used as a filter to select only the alarms associated with the key .\n\nalarmState -> (structure)\n\nContains information about the current state of the alarm.\n\nstateName -> (string)\n\nThe name of the alarm state. The state name can be one of the following values:\n\nDISABLED - When the alarm is in the DISABLED state, it isn’t ready to evaluate data. To enable the alarm, you must change the alarm to the NORMAL state.\n\nNORMAL - When the alarm is in the NORMAL state, it’s ready to evaluate data.\n\nACTIVE - If the alarm is in the ACTIVE state, the alarm is invoked.\n\nACKNOWLEDGED - When the alarm is in the ACKNOWLEDGED state, the alarm was invoked and you acknowledged the alarm.\n\nSNOOZE_DISABLED - When the alarm is in the SNOOZE_DISABLED state, the alarm is disabled for a specified period of time. After the snooze time, the alarm automatically changes to the NORMAL state.\n\nLATCHED - When the alarm is in the LATCHED state, the alarm was invoked. However, the data that the alarm is currently evaluating is within the specified range. To change the alarm to the NORMAL state, you must acknowledge the alarm.\n\nruleEvaluation -> (structure)\n\nInformation needed to evaluate data.\n\nsimpleRuleEvaluation -> (structure)\n\nInformation needed to compare two values with a comparison operator.\n\ninputPropertyValue -> (string)\n\nThe value of the input property, on the left side of the comparison operator.\n\noperator -> (string)\n\nThe comparison operator.\n\nthresholdValue -> (string)\n\nThe threshold value, on the right side of the comparison operator.\n\ncustomerAction -> (structure)\n\nContains information about the action that you can take to respond to the alarm.\n\nactionName -> (string)\n\nThe name of the action. The action name can be one of the following values:\n\nSNOOZE - When you snooze the alarm, the alarm state changes to SNOOZE_DISABLED .\n\nENABLE - When you enable the alarm, the alarm state changes to NORMAL .\n\nDISABLE - When you disable the alarm, the alarm state changes to DISABLED .\n\nACKNOWLEDGE - When you acknowledge the alarm, the alarm state changes to ACKNOWLEDGED .\n\nRESET - When you reset the alarm, the alarm state changes to NORMAL .\n\nFor more information, see the AlarmState API.\n\nsnoozeActionConfiguration -> (structure)\n\nContains the configuration information of a snooze action.\n\nsnoozeDuration -> (integer)\n\nThe snooze time in seconds. The alarm automatically changes to the NORMAL state after this duration.\n\nnote -> (string)\n\nThe note that you can leave when you snooze the alarm.\n\nenableActionConfiguration -> (structure)\n\nContains the configuration information of an enable action.\n\nnote -> (string)\n\nThe note that you can leave when you enable the alarm.\n\ndisableActionConfiguration -> (structure)\n\nContains the configuration information of a disable action.\n\nnote -> (string)\n\nThe note that you can leave when you disable the alarm.\n\nacknowledgeActionConfiguration -> (structure)\n\nContains the configuration information of an acknowledge action.\n\nnote -> (string)\n\nThe note that you can leave when you acknowledge the alarm.\n\nresetActionConfiguration -> (structure)\n\nContains the configuration information of a reset action.\n\nnote -> (string)\n\nThe note that you can leave when you reset the alarm.\n\nsystemEvent -> (structure)\n\nContains information about alarm state changes.\n\neventType -> (string)\n\nThe event type. If the value is STATE_CHANGE , the event contains information about alarm state changes.\n\nstateChangeConfiguration -> (structure)\n\nContains the configuration information of alarm state changes.\n\ntriggerType -> (string)\n\nThe trigger type. If the value is SNOOZE_TIMEOUT , the snooze duration ends and the alarm automatically changes to the NORMAL state.\n\nseverity -> (integer)\n\nA non-negative integer that reflects the severity level of the alarm.\n\ncreationTime -> (timestamp)\n\nThe time the alarm was created, in the Unix epoch format.\n\nlastUpdateTime -> (timestamp)\n\nThe time the alarm was last updated, in the Unix epoch format."
    },
    {
      "command_name": "describe-detector",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/describe-detector.html",
      "command_description": "Description\n\nReturns information about the specified detector (instance).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-detector\n--detector-model-name <value>\n[--key-value <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--detector-model-name <value>",
        "[--key-value <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--detector-model-name (string)\n\nThe name of the detector model whose detectors (instances) you want information about.\n\n--key-value (string)\n\nA filter used to limit results to detectors (instances) created because of the given key ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndetector -> (structure)\n\nInformation about the detector (instance).\n\ndetectorModelName -> (string)\n\nThe name of the detector model that created this detector (instance).\n\nkeyValue -> (string)\n\nThe value of the key (identifying the device or system) that caused the creation of this detector (instance).\n\ndetectorModelVersion -> (string)\n\nThe version of the detector model that created this detector (instance).\n\nstate -> (structure)\n\nThe current state of the detector (instance).\n\nstateName -> (string)\n\nThe name of the state.\n\nvariables -> (list)\n\nThe current values of the detector’s variables.\n\n(structure)\n\nThe current state of the variable.\n\nname -> (string)\n\nThe name of the variable.\n\nvalue -> (string)\n\nThe current value of the variable.\n\ntimers -> (list)\n\nThe current state of the detector’s timers.\n\n(structure)\n\nThe current state of a timer.\n\nname -> (string)\n\nThe name of the timer.\n\ntimestamp -> (timestamp)\n\nThe number of seconds which have elapsed on the timer.\n\ncreationTime -> (timestamp)\n\nThe time the detector (instance) was created.\n\nlastUpdateTime -> (timestamp)\n\nThe time the detector (instance) was last updated.",
      "command_examples": "Examples\n\nTo get information about a detector (instance)\n\nThe following describe-detector example returns information about the specified detector (instance).\n\naws iotevents-data describe-detector \\\n    --detector-model-name motorDetectorModel \\\n    --key-value \"Fulton-A32\"\n\n\nOutput:\n\n{\n    \"detector\": {\n        \"lastUpdateTime\": 1560797852.776,\n        \"creationTime\": 1560797852.775,\n        \"state\": {\n            \"variables\": [\n                {\n                    \"name\": \"pressureThresholdBreached\",\n                    \"value\": \"3\"\n                }\n            ],\n            \"stateName\": \"Dangerous\",\n            \"timers\": []\n        },\n        \"keyValue\": \"Fulton-A32\",\n        \"detectorModelName\": \"motorDetectorModel\",\n        \"detectorModelVersion\": \"1\"\n    }\n}\n\n\nFor more information, see DescribeDetector in the AWS IoT Events Developer Guide*."
    },
    {
      "command_name": "list-alarms",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/list-alarms.html",
      "command_description": "Description\n\nLists one or more alarms. The operation returns only the metadata associated with each alarm.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-alarms\n--alarm-model-name <value>\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--alarm-model-name <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--alarm-model-name (string)\n\nThe name of the alarm model.\n\n--next-token (string)\n\nThe token that you can use to return the next set of results.\n\n--max-results (integer)\n\nThe maximum number of results to be returned per request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nalarmSummaries -> (list)\n\nA list that summarizes each alarm.\n\n(structure)\n\nContains a summary of an alarm.\n\nalarmModelName -> (string)\n\nThe name of the alarm model.\n\nalarmModelVersion -> (string)\n\nThe version of the alarm model.\n\nkeyValue -> (string)\n\nThe value of the key used as a filter to select only the alarms associated with the key .\n\nstateName -> (string)\n\nThe name of the alarm state. The state name can be one of the following values:\n\nDISABLED - When the alarm is in the DISABLED state, it isn’t ready to evaluate data. To enable the alarm, you must change the alarm to the NORMAL state.\n\nNORMAL - When the alarm is in the NORMAL state, it’s ready to evaluate data.\n\nACTIVE - If the alarm is in the ACTIVE state, the alarm is invoked.\n\nACKNOWLEDGED - When the alarm is in the ACKNOWLEDGED state, the alarm was invoked and you acknowledged the alarm.\n\nSNOOZE_DISABLED - When the alarm is in the SNOOZE_DISABLED state, the alarm is disabled for a specified period of time. After the snooze time, the alarm automatically changes to the NORMAL state.\n\nLATCHED - When the alarm is in the LATCHED state, the alarm was invoked. However, the data that the alarm is currently evaluating is within the specified range. To change the alarm to the NORMAL state, you must acknowledge the alarm.\n\ncreationTime -> (timestamp)\n\nThe time the alarm was created, in the Unix epoch format.\n\nlastUpdateTime -> (timestamp)\n\nThe time the alarm was last updated, in the Unix epoch format.\n\nnextToken -> (string)\n\nThe token that you can use to return the next set of results, or null if there are no more results."
    },
    {
      "command_name": "list-detectors",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotevents-data/list-detectors.html",
      "command_description": "Description\n\nLists detectors (the instances of a detector model).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-detectors\n--detector-model-name <value>\n[--state-name <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--detector-model-name <value>",
        "[--state-name <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--detector-model-name (string)\n\nThe name of the detector model whose detectors (instances) are listed.\n\n--state-name (string)\n\nA filter that limits results to those detectors (instances) in the given state.\n\n--next-token (string)\n\nThe token that you can use to return the next set of results.\n\n--max-results (integer)\n\nThe maximum number of results to be returned per request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndetectorSummaries -> (list)\n\nA list of summary information about the detectors (instances).\n\n(structure)\n\nInformation about the detector (instance).\n\ndetectorModelName -> (string)\n\nThe name of the detector model that created this detector (instance).\n\nkeyValue -> (string)\n\nThe value of the key (identifying the device or system) that caused the creation of this detector (instance).\n\ndetectorModelVersion -> (string)\n\nThe version of the detector model that created this detector (instance).\n\nstate -> (structure)\n\nThe current state of the detector (instance).\n\nstateName -> (string)\n\nThe name of the state.\n\ncreationTime -> (timestamp)\n\nThe time the detector (instance) was created.\n\nlastUpdateTime -> (timestamp)\n\nThe time the detector (instance) was last updated.\n\nnextToken -> (string)\n\nThe token that you can use to return the next set of results, or null if there are no more results.",
      "command_examples": "Examples\n\nTo get a list of detectors for a detector model\n\nThe following list-detectors example lists detectors (the instances of a detector model).\n\naws iotevents-data list-detectors \\\n    --detector-model-name motorDetectorModel\n\n\nOutput:\n\n{\n    \"detectorSummaries\": [\n        {\n            \"lastUpdateTime\": 1558129925.2,\n            \"creationTime\": 1552073155.527,\n            \"state\": {\n                \"stateName\": \"Normal\"\n            },\n            \"keyValue\": \"Fulton-A32\",\n            \"detectorModelName\": \"motorDetectorModel\",\n            \"detectorModelVersion\": \"1\"\n        }\n    ]\n}\n\n\nFor more information, see ListDetectors in the AWS IoT Events Developer Guide*."
    }
  ],
  "service_description": "Description\n\nAWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events Data API commands to send inputs to detectors, list detectors, and view or update a detector’s status.\n\nFor more information, see What is AWS IoT Events? in the AWS IoT Events Developer Guide ."
}