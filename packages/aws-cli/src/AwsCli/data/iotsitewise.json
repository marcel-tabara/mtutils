{
  "service_name": "iotsitewise",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/index.html",
  "service_commands": [
    {
      "command_name": "associate-assets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/associate-assets.html",
      "command_description": "Description\n\nAssociates a child asset with the given parent asset through a hierarchy defined in the parent asset’s model. For more information, see Associating assets in the IoT SiteWise User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-assets\n--asset-id <value>\n--hierarchy-id <value>\n--child-asset-id <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-id <value>",
        "--hierarchy-id <value>",
        "--child-asset-id <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the parent asset.\n\n--hierarchy-id (string)\n\nThe ID of a hierarchy in the parent asset’s model. Hierarchies allow different groupings of assets to be formed that all come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\n--child-asset-id (string)\n\nThe ID of the child asset to be associated.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo associate a child asset to a parent asset\n\nThe following associate-assets example associates a wind turbine asset to a wind farm asset, where the wind turbine asset model exists as a hierarchy in the wind farm asset model.\n\naws iotsitewise associate-assets \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-44444EXAMPLE \\\n    --hierarchy-id a1b2c3d4-5678-90ab-cdef-77777EXAMPLE \\\n    --child-asset-id a1b2c3d4-5678-90ab-cdef-33333EXAMPLE\n\n\nThis command produces no output.\n\nFor more information, see Associating assets in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "batch-associate-project-assets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/batch-associate-project-assets.html",
      "command_description": "Description\n\nAssociates a group (batch) of assets with an IoT SiteWise Monitor project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-associate-project-assets\n--project-id <value>\n--asset-ids <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-id <value>",
        "--asset-ids <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-id (string)\n\nThe ID of the project to which to associate the assets.\n\n--asset-ids (list)\n\nThe IDs of the assets to be associated to the project.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nerrors -> (list)\n\nA list of associated error information, if any.\n\n(structure)\n\nContains error details for the requested associate project asset action.\n\nassetId -> (string)\n\nThe ID of the asset.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo associate an asset to a project\n\nThe following batch-associate-project-assets example associates a wind farm asset to a project.\n\naws iotsitewise batch-associate-project-assets \\\n    --project-id a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE \\\n    --asset-ids a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\n\n\nThis command produces no output.\n\nFor more information, see Adding assets to projects in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "batch-disassociate-project-assets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/batch-disassociate-project-assets.html",
      "command_description": "Description\n\nDisassociates a group (batch) of assets from an IoT SiteWise Monitor project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-disassociate-project-assets\n--project-id <value>\n--asset-ids <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-id <value>",
        "--asset-ids <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-id (string)\n\nThe ID of the project from which to disassociate the assets.\n\n--asset-ids (list)\n\nThe IDs of the assets to be disassociated from the project.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nerrors -> (list)\n\nA list of associated error information, if any.\n\n(structure)\n\nContains error details for the requested associate project asset action.\n\nassetId -> (string)\n\nThe ID of the asset.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo disassociate an asset from a project\n\nThe following batch-disassociate-project-assets example disassociates a wind farm asset from a project.\n\naws iotsitewise batch-disassociate-project-assets \\\n    --project-id a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE \\\n    --asset-ids a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\n\n\nThis command produces no output.\n\nFor more information, see Adding assets to projects in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "batch-put-asset-property-value",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/batch-put-asset-property-value.html",
      "command_description": "Description\n\nSends a list of asset property values to IoT SiteWise. Each value is a timestamp-quality-value (TQV) data point. For more information, see Ingesting data using the API in the IoT SiteWise User Guide .\n\nTo identify an asset property, you must specify one of the following:\n\nThe assetId and propertyId of an asset property.\n\nA propertyAlias , which is a data stream alias (for example, /company/windfarm/3/turbine/7/temperature ). To define an asset property’s alias, see UpdateAssetProperty .\n\nWarning\n\nWith respect to Unix epoch time, IoT SiteWise accepts only TQVs that have a timestamp of no more than 7 days in the past and no more than 10 minutes in the future. IoT SiteWise rejects timestamps outside of the inclusive range of [-7 days, +10 minutes] and returns a TimestampOutOfRangeException error.\n\nFor each asset property, IoT SiteWise overwrites TQVs with duplicate timestamps unless the newer TQV has a different quality. For example, if you store a TQV {T1, GOOD, V1} , then storing {T1, GOOD, V2} replaces the existing TQV.\n\nIoT SiteWise authorizes access to each BatchPutAssetPropertyValue entry individually. For more information, see BatchPutAssetPropertyValue authorization in the IoT SiteWise User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-put-asset-property-value\n--entries <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--entries <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--entries (list)\n\nThe list of asset property value entries for the batch put request. You can specify up to 10 entries per request.\n\n(structure)\n\nContains a list of value updates for an asset property in the list of asset entries consumed by the BatchPutAssetPropertyValue API operation.\n\nentryId -> (string)\n\nThe user specified ID for the entry. You can use this ID to identify which entries failed.\n\nassetId -> (string)\n\nThe ID of the asset to update.\n\npropertyId -> (string)\n\nThe ID of the asset property for this entry.\n\npropertyAlias -> (string)\n\nThe alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature ). For more information, see Mapping industrial data streams to asset properties in the IoT SiteWise User Guide .\n\npropertyValues -> (list)\n\nThe list of property values to upload. You can specify up to 10 propertyValues array elements.\n\n(structure)\n\nContains asset property value information.\n\nvalue -> (structure)\n\nThe value of the asset property (see Variant ).\n\nstringValue -> (string)\n\nAsset property data of type string (sequence of characters).\n\nintegerValue -> (integer)\n\nAsset property data of type integer (whole number).\n\ndoubleValue -> (double)\n\nAsset property data of type double (floating point number).\n\nbooleanValue -> (boolean)\n\nAsset property data of type Boolean (true or false).\n\ntimestamp -> (structure)\n\nThe timestamp of the asset property value.\n\ntimeInSeconds -> (long)\n\nThe timestamp date, in seconds, in the Unix epoch format. Fractional nanosecond data is provided by offsetInNanos .\n\noffsetInNanos -> (integer)\n\nThe nanosecond offset from timeInSeconds .\n\nquality -> (string)\n\nThe quality of the asset property value.\n\nJSON Syntax:\n\n[\n  {\n    \"entryId\": \"string\",\n    \"assetId\": \"string\",\n    \"propertyId\": \"string\",\n    \"propertyAlias\": \"string\",\n    \"propertyValues\": [\n      {\n        \"value\": {\n          \"stringValue\": \"string\",\n          \"integerValue\": integer,\n          \"doubleValue\": double,\n          \"booleanValue\": true|false\n        },\n        \"timestamp\": {\n          \"timeInSeconds\": long,\n          \"offsetInNanos\": integer\n        },\n        \"quality\": \"GOOD\"|\"BAD\"|\"UNCERTAIN\"\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nerrorEntries -> (list)\n\nA list of the errors (if any) associated with the batch put request. Each error entry contains the entryId of the entry that failed.\n\n(structure)\n\nContains error information for asset property value entries that are associated with the BatchPutAssetPropertyValue API.\n\nentryId -> (string)\n\nThe ID of the failed entry.\n\nerrors -> (list)\n\nThe list of update property value errors.\n\n(structure)\n\nContains error information from updating a batch of asset property values.\n\nerrorCode -> (string)\n\nThe error code.\n\nerrorMessage -> (string)\n\nThe associated error message.\n\ntimestamps -> (list)\n\nA list of timestamps for each error, if any.\n\n(structure)\n\nContains a timestamp with optional nanosecond granularity.\n\ntimeInSeconds -> (long)\n\nThe timestamp date, in seconds, in the Unix epoch format. Fractional nanosecond data is provided by offsetInNanos .\n\noffsetInNanos -> (integer)\n\nThe nanosecond offset from timeInSeconds .",
      "command_examples": "Examples\n\nTo send data to asset properties\n\nThe following batch-put-asset-property-value example sends power and temperature data to the asset properties identified by property aliases.\n\naws iotsitewise batch-put-asset-property-value \\\n    --cli-input-json file://batch-put-asset-property-value.json\n\n\nContents of batch-put-asset-property-value.json:\n\n{\n    \"entries\": [\n        {\n            \"entryId\": \"1575691200./company/windfarm/3/turbine/7/power\",\n            \"propertyAlias\": \"/company/windfarm/3/turbine/7/power\",\n            \"propertyValues\": [\n                {\n                    \"value\": {\n                        \"doubleValue\": 4.92\n                    },\n                    \"timestamp\": {\n                        \"timeInSeconds\": 1575691200\n                    },\n                    \"quality\": \"GOOD\"\n                }\n            ]\n        },\n        {\n            \"entryId\": \"1575691200./company/windfarm/3/turbine/7/temperature\",\n            \"propertyAlias\": \"/company/windfarm/3/turbine/7/temperature\",\n            \"propertyValues\": [\n                {\n                    \"value\": {\n                        \"integerValue\": 38\n                    },\n                    \"timestamp\": {\n                        \"timeInSeconds\": 1575691200\n                    }\n                }\n            ]\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"errorEntries\": []\n}\n\n\nFor more information, see Ingesting data using the AWS IoT SiteWise API in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "create-access-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/create-access-policy.html",
      "command_description": "Description\n\nCreates an access policy that grants the specified identity (Amazon Web Services SSO user, Amazon Web Services SSO group, or IAM user) access to the specified IoT SiteWise Monitor portal or project resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-access-policy\n--access-policy-identity <value>\n--access-policy-resource <value>\n--access-policy-permission <value>\n[--client-token <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--access-policy-identity <value>",
        "--access-policy-resource <value>",
        "--access-policy-permission <value>",
        "[--client-token <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--access-policy-identity (structure)\n\nThe identity for this access policy. Choose an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user.\n\nuser -> (structure)\n\nAn Amazon Web Services SSO user identity.\n\nid -> (string)\n\nThe Amazon Web Services SSO ID of the user.\n\ngroup -> (structure)\n\nAn Amazon Web Services SSO group identity.\n\nid -> (string)\n\nThe Amazon Web Services SSO ID of the group.\n\niamUser -> (structure)\n\nAn IAM user identity.\n\narn -> (string)\n\nThe ARN of the IAM user. For more information, see IAM ARNs in the IAM User Guide .\n\nNote\n\nIf you delete the IAM user, access policies that contain this identity include an empty arn . You can delete the access policy for the IAM user that no longer exists.\n\niamRole -> (structure)\n\nAn IAM role identity.\n\narn -> (string)\n\nThe ARN of the IAM role. For more information, see IAM ARNs in the IAM User Guide .\n\nShorthand Syntax:\n\nuser={id=string},group={id=string},iamUser={arn=string},iamRole={arn=string}\n\n\nJSON Syntax:\n\n{\n  \"user\": {\n    \"id\": \"string\"\n  },\n  \"group\": {\n    \"id\": \"string\"\n  },\n  \"iamUser\": {\n    \"arn\": \"string\"\n  },\n  \"iamRole\": {\n    \"arn\": \"string\"\n  }\n}\n\n\n--access-policy-resource (structure)\n\nThe IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.\n\nportal -> (structure)\n\nA portal resource.\n\nid -> (string)\n\nThe ID of the portal.\n\nproject -> (structure)\n\nA project resource.\n\nid -> (string)\n\nThe ID of the project.\n\nShorthand Syntax:\n\nportal={id=string},project={id=string}\n\n\nJSON Syntax:\n\n{\n  \"portal\": {\n    \"id\": \"string\"\n  },\n  \"project\": {\n    \"id\": \"string\"\n  }\n}\n\n\n--access-policy-permission (string)\n\nThe permission level for this access policy. Note that a project ADMINISTRATOR is also known as a project owner.\n\nPossible values:\n\nADMINISTRATOR\n\nVIEWER\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--tags (map)\n\nA list of key-value pairs that contain metadata for the access policy. For more information, see Tagging your IoT SiteWise resources in the IoT SiteWise User Guide .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\naccessPolicyId -> (string)\n\nThe ID of the access policy.\n\naccessPolicyArn -> (string)\n\nThe ARN of the access policy, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}",
      "command_examples": "Examples\n\nExample 1: To grant a user administrative access to a portal\n\nThe following create-access-policy example creates an access policy that grants a user administrative access to a web portal for a wind farm company.\n\naws iotsitewise create-access-policy \\\n    --cli-input-json file://create-portal-administrator-access-policy.json\n\n\nContents of create-portal-administrator-access-policy.json:\n\n{\n    \"accessPolicyIdentity\": {\n        \"user\": {\n            \"id\": \"a1b2c3d4e5-a1b2c3d4-5678-90ab-cdef-bbbbbEXAMPLE\"\n        }\n    },\n    \"accessPolicyPermission\": \"ADMINISTRATOR\",\n    \"accessPolicyResource\": {\n        \"portal\": {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\"\n        }\n    }\n}\n\n\nOutput:\n\n{\n    \"accessPolicyId\": \"a1b2c3d4-5678-90ab-cdef-cccccEXAMPLE\",\n    \"accessPolicyArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:access-policy/a1b2c3d4-5678-90ab-cdef-cccccEXAMPLE\"\n}\n\n\nFor more information, see Adding or removing portal administrators in the AWS IoT SiteWise User Guide.\n\nExample 2: To grant a user read-only access to a project\n\nThe following create-access-policy example creates an access policy that grants a user read-only access to a wind farm project.\n\naws iotsitewise create-access-policy \\\n    --cli-input-json file://create-project-viewer-access-policy.json\n\n\nContents of create-project-viewer-access-policy.json:\n\n{\n    \"accessPolicyIdentity\": {\n        \"user\": {\n            \"id\": \"a1b2c3d4e5-a1b2c3d4-5678-90ab-cdef-bbbbbEXAMPLE\"\n        }\n    },\n    \"accessPolicyPermission\": \"VIEWER\",\n    \"accessPolicyResource\": {\n        \"project\": {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\"\n        }\n    }\n}\n\n\nOutput:\n\n{\n    \"accessPolicyId\": \"a1b2c3d4-5678-90ab-cdef-dddddEXAMPLE\",\n    \"accessPolicyArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:access-policy/a1b2c3d4-5678-90ab-cdef-dddddEXAMPLE\"\n}\n\n\nFor more information, see Assigning project viewers in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "create-asset",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/create-asset.html",
      "command_description": "Description\n\nCreates an asset from an existing asset model. For more information, see Creating assets in the IoT SiteWise User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-asset\n--asset-name <value>\n--asset-model-id <value>\n[--client-token <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-name <value>",
        "--asset-model-id <value>",
        "[--client-token <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-name (string)\n\nA unique, friendly name for the asset.\n\n--asset-model-id (string)\n\nThe ID of the asset model from which to create the asset.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--tags (map)\n\nA list of key-value pairs that contain metadata for the asset. For more information, see Tagging your IoT SiteWise resources in the IoT SiteWise User Guide .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetId -> (string)\n\nThe ID of the asset. This ID uniquely identifies the asset within IoT SiteWise and can be used with other IoT SiteWise APIs.\n\nassetArn -> (string)\n\nThe ARN of the asset, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}\n\nassetStatus -> (structure)\n\nThe status of the asset, which contains a state (CREATING after successfully calling this operation) and any error message.\n\nstate -> (string)\n\nThe current status of the asset.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo create an asset\n\nThe following create-asset example creates a wind turbine asset from a wind turbine asset model.\n\naws iotsitewise create-asset \\\n    --asset-model-id a1b2c3d4-5678-90ab-cdef-11111EXAMPLE \\\n    --asset-name \"Wind Turbine 1\"\n\n\nOutput:\n\n{\n    \"assetId\": \"a1b2c3d4-5678-90ab-cdef-33333EXAMPLE\",\n    \"assetArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:asset/a1b2c3d4-5678-90ab-cdef-33333EXAMPLE\",\n    \"assetStatus\": {\n        \"state\": \"CREATING\"\n    }\n}\n\n\nFor more information, see Creating assets in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "create-asset-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/create-asset-model.html",
      "command_description": "Description\n\nCreates an asset model from specified property and hierarchy definitions. You create assets from asset models. With asset models, you can easily create assets of the same type that have standardized definitions. Each asset created from a model inherits the asset model’s property and hierarchy definitions. For more information, see Defining asset models in the IoT SiteWise User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-asset-model\n--asset-model-name <value>\n[--asset-model-description <value>]\n[--asset-model-properties <value>]\n[--asset-model-hierarchies <value>]\n[--asset-model-composite-models <value>]\n[--client-token <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-model-name <value>",
        "[--asset-model-description <value>]",
        "[--asset-model-properties <value>]",
        "[--asset-model-hierarchies <value>]",
        "[--asset-model-composite-models <value>]",
        "[--client-token <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-model-name (string)\n\nA unique, friendly name for the asset model.\n\n--asset-model-description (string)\n\nA description for the asset model.\n\n--asset-model-properties (list)\n\nThe property definitions of the asset model. For more information, see Asset properties in the IoT SiteWise User Guide .\n\nYou can specify up to 200 properties per asset model. For more information, see Quotas in the IoT SiteWise User Guide .\n\n(structure)\n\nContains an asset model property definition. This property definition is applied to all assets created from the asset model.\n\nname -> (string)\n\nThe name of the property definition.\n\ndataType -> (string)\n\nThe data type of the property definition.\n\nIf you specify STRUCT , you must also specify dataTypeSpec to identify the type of the structure for this property.\n\ndataTypeSpec -> (string)\n\nThe data type of the structure for this property. This parameter is required on properties that have the STRUCT data type.\n\nThe options for this parameter depend on the type of the composite model in which you define this property. Use AWS/ALARM_STATE for alarm state in alarm composite models.\n\nunit -> (string)\n\nThe unit of the property definition, such as Newtons or RPM .\n\ntype -> (structure)\n\nThe property definition type (see PropertyType ). You can only specify one type in a property definition.\n\nattribute -> (structure)\n\nSpecifies an asset attribute property. An attribute generally contains static information, such as the serial number of an IIoT wind turbine.\n\ndefaultValue -> (string)\n\nThe default value of the asset model property attribute. All assets that you create from the asset model contain this attribute value. You can update an attribute’s value after you create an asset. For more information, see Updating attribute values in the IoT SiteWise User Guide .\n\nmeasurement -> (structure)\n\nSpecifies an asset measurement property. A measurement represents a device’s raw sensor data stream, such as timestamped temperature values or timestamped power values.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for the given measurement property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\ntransform -> (structure)\n\nSpecifies an asset transform property. A transform contains a mathematical expression that maps a property’s data points from one form to another, such as a unit conversion from Celsius to Fahrenheit.\n\nexpression -> (string)\n\nThe mathematical expression that defines the transformation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given transform property.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for a given property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\nmetric -> (structure)\n\nSpecifies an asset metric property. A metric contains a mathematical expression that uses aggregate functions to process all input data points over a time interval and output a single data point, such as to calculate the average hourly temperature.\n\nexpression -> (string)\n\nThe mathematical expression that defines the metric aggregation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nwindow -> (structure)\n\nThe window (time interval) over which IoT SiteWise computes the metric’s aggregation expression. IoT SiteWise computes one data point per window .\n\ntumbling -> (structure)\n\nThe tumbling time interval window.\n\ninterval -> (string)\n\nThe time interval for the tumbling window. The interval time must be between 1 minute and 1 week.\n\nIoT SiteWise computes the 1w interval the end of Sunday at midnight each week (UTC), the 1d interval at the end of each day at midnight (UTC), the 1h interval at the end of each hour, and so on.\n\nWhen IoT SiteWise aggregates data points for metric computations, the start of each interval is exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at the end of the interval.\n\noffset -> (string)\n\nThe offset for the tumbling window. The offset parameter accepts the following:\n\nThe offset time. For example, if you specify 18h for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe ISO 8601 format. For example, if you specify PT18H for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe 24-hour clock. For example, if you specify 00:03:00 for offset and 5m for interval , and you create the metric at 2 PM (UTC), you get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC).\n\nThe offset time zone. For example, if you specify 2021-07-23T18:00-08 for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) the next day.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given metric property.\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"dataType\": \"STRING\"|\"INTEGER\"|\"DOUBLE\"|\"BOOLEAN\"|\"STRUCT\",\n    \"dataTypeSpec\": \"string\",\n    \"unit\": \"string\",\n    \"type\": {\n      \"attribute\": {\n        \"defaultValue\": \"string\"\n      },\n      \"measurement\": {\n        \"processingConfig\": {\n          \"forwardingConfig\": {\n            \"state\": \"DISABLED\"|\"ENABLED\"\n          }\n        }\n      },\n      \"transform\": {\n        \"expression\": \"string\",\n        \"variables\": [\n          {\n            \"name\": \"string\",\n            \"value\": {\n              \"propertyId\": \"string\",\n              \"hierarchyId\": \"string\"\n            }\n          }\n          ...\n        ],\n        \"processingConfig\": {\n          \"computeLocation\": \"EDGE\"|\"CLOUD\",\n          \"forwardingConfig\": {\n            \"state\": \"DISABLED\"|\"ENABLED\"\n          }\n        }\n      },\n      \"metric\": {\n        \"expression\": \"string\",\n        \"variables\": [\n          {\n            \"name\": \"string\",\n            \"value\": {\n              \"propertyId\": \"string\",\n              \"hierarchyId\": \"string\"\n            }\n          }\n          ...\n        ],\n        \"window\": {\n          \"tumbling\": {\n            \"interval\": \"string\",\n            \"offset\": \"string\"\n          }\n        },\n        \"processingConfig\": {\n          \"computeLocation\": \"EDGE\"|\"CLOUD\"\n        }\n      }\n    }\n  }\n  ...\n]\n\n\n--asset-model-hierarchies (list)\n\nThe hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nYou can specify up to 10 hierarchies per asset model. For more information, see Quotas in the IoT SiteWise User Guide .\n\n(structure)\n\nContains an asset model hierarchy used in asset model creation. An asset model hierarchy determines the kind (or type) of asset that can belong to a hierarchy.\n\nname -> (string)\n\nThe name of the asset model hierarchy definition (as specified in the CreateAssetModel or UpdateAssetModel API operation).\n\nchildAssetModelId -> (string)\n\nThe ID of an asset model for this hierarchy.\n\nShorthand Syntax:\n\nname=string,childAssetModelId=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"childAssetModelId\": \"string\"\n  }\n  ...\n]\n\n\n--asset-model-composite-models (list)\n\nThe composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.\n\n(structure)\n\nContains a composite model definition in an asset model. This composite model definition is applied to all assets created from the asset model.\n\nname -> (string)\n\nThe name of the composite model.\n\ndescription -> (string)\n\nThe description of the composite model.\n\ntype -> (string)\n\nThe type of the composite model. For alarm composite models, this type is AWS/ALARM .\n\nproperties -> (list)\n\nThe asset property definitions for this composite model.\n\n(structure)\n\nContains an asset model property definition. This property definition is applied to all assets created from the asset model.\n\nname -> (string)\n\nThe name of the property definition.\n\ndataType -> (string)\n\nThe data type of the property definition.\n\nIf you specify STRUCT , you must also specify dataTypeSpec to identify the type of the structure for this property.\n\ndataTypeSpec -> (string)\n\nThe data type of the structure for this property. This parameter is required on properties that have the STRUCT data type.\n\nThe options for this parameter depend on the type of the composite model in which you define this property. Use AWS/ALARM_STATE for alarm state in alarm composite models.\n\nunit -> (string)\n\nThe unit of the property definition, such as Newtons or RPM .\n\ntype -> (structure)\n\nThe property definition type (see PropertyType ). You can only specify one type in a property definition.\n\nattribute -> (structure)\n\nSpecifies an asset attribute property. An attribute generally contains static information, such as the serial number of an IIoT wind turbine.\n\ndefaultValue -> (string)\n\nThe default value of the asset model property attribute. All assets that you create from the asset model contain this attribute value. You can update an attribute’s value after you create an asset. For more information, see Updating attribute values in the IoT SiteWise User Guide .\n\nmeasurement -> (structure)\n\nSpecifies an asset measurement property. A measurement represents a device’s raw sensor data stream, such as timestamped temperature values or timestamped power values.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for the given measurement property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\ntransform -> (structure)\n\nSpecifies an asset transform property. A transform contains a mathematical expression that maps a property’s data points from one form to another, such as a unit conversion from Celsius to Fahrenheit.\n\nexpression -> (string)\n\nThe mathematical expression that defines the transformation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given transform property.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for a given property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\nmetric -> (structure)\n\nSpecifies an asset metric property. A metric contains a mathematical expression that uses aggregate functions to process all input data points over a time interval and output a single data point, such as to calculate the average hourly temperature.\n\nexpression -> (string)\n\nThe mathematical expression that defines the metric aggregation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nwindow -> (structure)\n\nThe window (time interval) over which IoT SiteWise computes the metric’s aggregation expression. IoT SiteWise computes one data point per window .\n\ntumbling -> (structure)\n\nThe tumbling time interval window.\n\ninterval -> (string)\n\nThe time interval for the tumbling window. The interval time must be between 1 minute and 1 week.\n\nIoT SiteWise computes the 1w interval the end of Sunday at midnight each week (UTC), the 1d interval at the end of each day at midnight (UTC), the 1h interval at the end of each hour, and so on.\n\nWhen IoT SiteWise aggregates data points for metric computations, the start of each interval is exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at the end of the interval.\n\noffset -> (string)\n\nThe offset for the tumbling window. The offset parameter accepts the following:\n\nThe offset time. For example, if you specify 18h for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe ISO 8601 format. For example, if you specify PT18H for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe 24-hour clock. For example, if you specify 00:03:00 for offset and 5m for interval , and you create the metric at 2 PM (UTC), you get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC).\n\nThe offset time zone. For example, if you specify 2021-07-23T18:00-08 for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) the next day.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given metric property.\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"type\": \"string\",\n    \"properties\": [\n      {\n        \"name\": \"string\",\n        \"dataType\": \"STRING\"|\"INTEGER\"|\"DOUBLE\"|\"BOOLEAN\"|\"STRUCT\",\n        \"dataTypeSpec\": \"string\",\n        \"unit\": \"string\",\n        \"type\": {\n          \"attribute\": {\n            \"defaultValue\": \"string\"\n          },\n          \"measurement\": {\n            \"processingConfig\": {\n              \"forwardingConfig\": {\n                \"state\": \"DISABLED\"|\"ENABLED\"\n              }\n            }\n          },\n          \"transform\": {\n            \"expression\": \"string\",\n            \"variables\": [\n              {\n                \"name\": \"string\",\n                \"value\": {\n                  \"propertyId\": \"string\",\n                  \"hierarchyId\": \"string\"\n                }\n              }\n              ...\n            ],\n            \"processingConfig\": {\n              \"computeLocation\": \"EDGE\"|\"CLOUD\",\n              \"forwardingConfig\": {\n                \"state\": \"DISABLED\"|\"ENABLED\"\n              }\n            }\n          },\n          \"metric\": {\n            \"expression\": \"string\",\n            \"variables\": [\n              {\n                \"name\": \"string\",\n                \"value\": {\n                  \"propertyId\": \"string\",\n                  \"hierarchyId\": \"string\"\n                }\n              }\n              ...\n            ],\n            \"window\": {\n              \"tumbling\": {\n                \"interval\": \"string\",\n                \"offset\": \"string\"\n              }\n            },\n            \"processingConfig\": {\n              \"computeLocation\": \"EDGE\"|\"CLOUD\"\n            }\n          }\n        }\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--tags (map)\n\nA list of key-value pairs that contain metadata for the asset model. For more information, see Tagging your IoT SiteWise resources in the IoT SiteWise User Guide .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetModelId -> (string)\n\nThe ID of the asset model. You can use this ID when you call other IoT SiteWise APIs.\n\nassetModelArn -> (string)\n\nThe ARN of the asset model, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}\n\nassetModelStatus -> (structure)\n\nThe status of the asset model, which contains a state (CREATING after successfully calling this operation) and any error message.\n\nstate -> (string)\n\nThe current state of the asset model.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo create an asset model\n\nThe following create-asset-model example creates an asset model that defines a wind turbine with the following properties:\n\nSerial number - The serial number of a wind turbine\n\nGenerated power - The generated power data stream from a wind turbine\n\nTemperature C - The temperature data stream from a wind turbine in Celsius\n\nTemperature F - The mapped temperature data points from Celsius to Fahrenheit\n\naws iotsitewise create-asset-model \\\n    --cli-input-json file://create-wind-turbine-model.json\n\n\nContents of create-wind-turbine-model.json:\n\n{\n    \"assetModelName\": \"Wind Turbine Model\",\n    \"assetModelDescription\": \"Represents a wind turbine\",\n    \"assetModelProperties\": [\n        {\n            \"name\": \"Serial Number\",\n            \"dataType\": \"STRING\",\n            \"type\": {\n                \"attribute\": {}\n            }\n        },\n        {\n            \"name\": \"Generated Power\",\n            \"dataType\": \"DOUBLE\",\n            \"unit\": \"kW\",\n            \"type\": {\n                \"measurement\": {}\n            }\n        },\n        {\n            \"name\": \"Temperature C\",\n            \"dataType\": \"DOUBLE\",\n            \"unit\": \"Celsius\",\n            \"type\": {\n                \"measurement\": {}\n            }\n        },\n        {\n            \"name\": \"Temperature F\",\n            \"dataType\": \"DOUBLE\",\n            \"unit\": \"Fahrenheit\",\n            \"type\": {\n                \"transform\": {\n                    \"expression\": \"temp_c * 9 / 5 + 32\",\n                    \"variables\": [\n                        {\n                            \"name\": \"temp_c\",\n                            \"value\": {\n                                \"propertyId\": \"Temperature C\"\n                            }\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"name\": \"Total Generated Power\",\n            \"dataType\": \"DOUBLE\",\n            \"unit\": \"kW\",\n            \"type\": {\n                \"metric\": {\n                    \"expression\": \"sum(power)\",\n                    \"variables\": [\n                        {\n                            \"name\": \"power\",\n                            \"value\": {\n                                \"propertyId\": \"Generated Power\"\n                            }\n                        }\n                    ],\n                    \"window\": {\n                        \"tumbling\": {\n                            \"interval\": \"1h\"\n                        }\n                    }\n                }\n            }\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"assetModelId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n    \"assetModelArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:asset-model/a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n    \"assetModelStatus\": {\n        \"state\": \"CREATING\"\n    }\n}\n\n\nFor more information, see Defining asset models in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "create-dashboard",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/create-dashboard.html",
      "command_description": "Description\n\nCreates a dashboard in an IoT SiteWise Monitor project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-dashboard\n--project-id <value>\n--dashboard-name <value>\n[--dashboard-description <value>]\n--dashboard-definition <value>\n[--client-token <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-id <value>",
        "--dashboard-name <value>",
        "[--dashboard-description <value>]",
        "--dashboard-definition <value>",
        "[--client-token <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-id (string)\n\nThe ID of the project in which to create the dashboard.\n\n--dashboard-name (string)\n\nA friendly name for the dashboard.\n\n--dashboard-description (string)\n\nA description for the dashboard.\n\n--dashboard-definition (string)\n\nThe dashboard definition specified in a JSON literal. For detailed information, see Creating dashboards (CLI) in the IoT SiteWise User Guide .\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--tags (map)\n\nA list of key-value pairs that contain metadata for the dashboard. For more information, see Tagging your IoT SiteWise resources in the IoT SiteWise User Guide .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndashboardId -> (string)\n\nThe ID of the dashboard.\n\ndashboardArn -> (string)\n\nThe ARN of the dashboard, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}",
      "command_examples": "Examples\n\nTo create a dashboard\n\nThe following create-dashboard example creates a dashboard with a line chart that displays total generated power for a wind farm.\n\naws iotsitewise create-dashboard \\\n    --project-id a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE \\\n    --dashboard-name \"Wind Farm\" \\\n    --dashboard-definition file://create-wind-farm-dashboard.json\n\n\nContents of create-wind-farm-dashboard.json:\n\n{\n    \"widgets\": [\n        {\n            \"type\": \"monitor-line-chart\",\n            \"title\": \"Generated Power\",\n            \"x\": 0,\n            \"y\": 0,\n            \"height\": 3,\n            \"width\": 3,\n            \"metrics\": [\n                {\n                    \"label\": \"Power\",\n                    \"type\": \"iotsitewise\",\n                    \"assetId\": \"a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\",\n                    \"propertyId\": \"a1b2c3d4-5678-90ab-cdef-99999EXAMPLE\"\n                }\n            ]\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"dashboardId\": \"a1b2c3d4-5678-90ab-cdef-fffffEXAMPLE\",\n    \"dashboardArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:dashboard/a1b2c3d4-5678-90ab-cdef-fffffEXAMPLE\"\n}\n\n\nFor more information, see Creating dashboards (CLI) in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "create-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/create-gateway.html",
      "command_description": "Description\n\nCreates a gateway, which is a virtual or edge device that delivers industrial data streams from local servers to IoT SiteWise. For more information, see Ingesting data using a gateway in the IoT SiteWise User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-gateway\n--gateway-name <value>\n--gateway-platform <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--gateway-name <value>",
        "--gateway-platform <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--gateway-name (string)\n\nA unique, friendly name for the gateway.\n\n--gateway-platform (structure)\n\nThe gateway’s platform. You can only specify one platform in a gateway.\n\ngreengrass -> (structure)\n\nA gateway that runs on IoT Greengrass.\n\ngroupArn -> (string)\n\nThe ARN of the Greengrass group. For more information about how to find a group’s ARN, see ListGroups and GetGroup in the IoT Greengrass API Reference .\n\ngreengrassV2 -> (structure)\n\nA gateway that runs on IoT Greengrass V2.\n\ncoreDeviceThingName -> (string)\n\nThe name of the IoT thing for your IoT Greengrass V2 core device.\n\nShorthand Syntax:\n\ngreengrass={groupArn=string},greengrassV2={coreDeviceThingName=string}\n\n\nJSON Syntax:\n\n{\n  \"greengrass\": {\n    \"groupArn\": \"string\"\n  },\n  \"greengrassV2\": {\n    \"coreDeviceThingName\": \"string\"\n  }\n}\n\n\n--tags (map)\n\nA list of key-value pairs that contain metadata for the gateway. For more information, see Tagging your IoT SiteWise resources in the IoT SiteWise User Guide .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngatewayId -> (string)\n\nThe ID of the gateway device. You can use this ID when you call other IoT SiteWise APIs.\n\ngatewayArn -> (string)\n\nThe ARN of the gateway, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}",
      "command_examples": "Examples\n\nTo create a gateway\n\nThe following create-gateway example creates a gateway that runs on AWS IoT Greengrass.\n\naws iotsitewise create-gateway \\\n    --gateway-name ExampleCorpGateway \\\n    --gateway-platform greengrass={groupArn=arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/a1b2c3d4-5678-90ab-cdef-1b1b1EXAMPLE}\n\n\nOutput:\n\n{\n    \"gatewayId\": \"a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE\",\n    \"gatewayArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:gateway/a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE\"\n}\n\n\nFor more information, see Configuring a gateway in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "create-portal",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/create-portal.html",
      "command_description": "Description\n\nCreates a portal, which can contain projects and dashboards. IoT SiteWise Monitor uses Amazon Web Services SSO or IAM to authenticate portal users and manage user permissions.\n\nNote\n\nBefore you can sign in to a new portal, you must add at least one identity to that portal. For more information, see Adding or removing portal administrators in the IoT SiteWise User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-portal\n--portal-name <value>\n[--portal-description <value>]\n--portal-contact-email <value>\n[--client-token <value>]\n[--portal-logo-image-file <value>]\n--role-arn <value>\n[--tags <value>]\n[--portal-auth-mode <value>]\n[--notification-sender-email <value>]\n[--alarms <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--portal-name <value>",
        "[--portal-description <value>]",
        "--portal-contact-email <value>",
        "[--client-token <value>]",
        "[--portal-logo-image-file <value>]",
        "--role-arn <value>",
        "[--tags <value>]",
        "[--portal-auth-mode <value>]",
        "[--notification-sender-email <value>]",
        "[--alarms <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--portal-name (string)\n\nA friendly name for the portal.\n\n--portal-description (string)\n\nA description for the portal.\n\n--portal-contact-email (string)\n\nThe Amazon Web Services administrator’s contact email address.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--portal-logo-image-file (structure)\n\nA logo image to display in the portal. Upload a square, high-resolution image. The image is displayed on a dark background.\n\ndata -> (blob)\n\nThe image file contents, represented as a base64-encoded string. The file size must be less than 1 MB.\n\ntype -> (string)\n\nThe file type of the image.\n\nShorthand Syntax:\n\ndata=blob,type=string\n\n\nJSON Syntax:\n\n{\n  \"data\": blob,\n  \"type\": \"PNG\"\n}\n\n\n--role-arn (string)\n\nThe ARN of a service role that allows the portal’s users to access your IoT SiteWise resources on your behalf. For more information, see Using service roles for IoT SiteWise Monitor in the IoT SiteWise User Guide .\n\n--tags (map)\n\nA list of key-value pairs that contain metadata for the portal. For more information, see Tagging your IoT SiteWise resources in the IoT SiteWise User Guide .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--portal-auth-mode (string)\n\nThe service to use to authenticate users to the portal. Choose from the following options:\n\nSSO – The portal uses Amazon Web Services Single Sign On to authenticate users and manage user permissions. Before you can create a portal that uses Amazon Web Services SSO, you must enable Amazon Web Services SSO. For more information, see Enabling Amazon Web Services SSO in the IoT SiteWise User Guide . This option is only available in Amazon Web Services Regions other than the China Regions.\n\nIAM – The portal uses Identity and Access Management to authenticate users and manage user permissions. This option is only available in the China Regions.\n\nYou can’t change this value after you create a portal.\n\nDefault: SSO\n\nPossible values:\n\nIAM\n\nSSO\n\n--notification-sender-email (string)\n\nThe email address that sends alarm notifications.\n\nWarning\n\nIf you use the IoT Events managed Lambda function to manage your emails, you must verify the sender email address in Amazon SES .\n\n--alarms (structure)\n\nContains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see Monitoring with alarms in the IoT SiteWise Application Guide .\n\nalarmRoleArn -> (string)\n\nThe ARN of the IAM role that allows the alarm to perform actions and access Amazon Web Services resources and services, such as IoT Events.\n\nnotificationLambdaArn -> (string)\n\nThe ARN of the Lambda function that manages alarm notifications. For more information, see Managing alarm notifications in the IoT Events Developer Guide .\n\nShorthand Syntax:\n\nalarmRoleArn=string,notificationLambdaArn=string\n\n\nJSON Syntax:\n\n{\n  \"alarmRoleArn\": \"string\",\n  \"notificationLambdaArn\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nportalId -> (string)\n\nThe ID of the created portal.\n\nportalArn -> (string)\n\nThe ARN of the portal, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}\n\nportalStartUrl -> (string)\n\nThe URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use Amazon Web Services SSO for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.\n\nportalStatus -> (structure)\n\nThe status of the portal, which contains a state (CREATING after successfully calling this operation) and any error message.\n\nstate -> (string)\n\nThe current state of the portal.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\nssoApplicationId -> (string)\n\nThe associated Amazon Web Services SSO application ID, if the portal uses Amazon Web Services SSO.",
      "command_examples": "Examples\n\nTo create a portal\n\nThe following create-portal example creates a web portal for a wind farm company. You can create portals only in the same Region where you enabled AWS Single Sign-On.\n\naws iotsitewise create-portal \\\n    --portal-name WindFarmPortal \\\n    --portal-description \"A portal that contains wind farm projects for Example Corp.\" \\\n    --portal-contact-email support@example.com \\\n    --role-arn arn:aws:iam::123456789012:role/service-role/MySiteWiseMonitorServiceRole\n\n\nOutput:\n\n{\n    \"portalId\": \"a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\",\n    \"portalArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:portal/a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\",\n    \"portalStartUrl\": \"https://a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE.app.iotsitewise.aws\",\n    \"portalStatus\": {\n        \"state\": \"CREATING\"\n    },\n    \"ssoApplicationId\": \"ins-a1b2c3d4-EXAMPLE\"\n}\n\n\nFor more information, see Getting started with AWS IoT SiteWise Monitor in the AWS IoT SiteWise User Guide and Enabling AWS SSO in the AWS IoT SiteWise User Guide.."
    },
    {
      "command_name": "create-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/create-project.html",
      "command_description": "Description\n\nCreates a project in the specified portal.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-project\n--portal-id <value>\n--project-name <value>\n[--project-description <value>]\n[--client-token <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--portal-id <value>",
        "--project-name <value>",
        "[--project-description <value>]",
        "[--client-token <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--portal-id (string)\n\nThe ID of the portal in which to create the project.\n\n--project-name (string)\n\nA friendly name for the project.\n\n--project-description (string)\n\nA description for the project.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--tags (map)\n\nA list of key-value pairs that contain metadata for the project. For more information, see Tagging your IoT SiteWise resources in the IoT SiteWise User Guide .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nprojectId -> (string)\n\nThe ID of the project.\n\nprojectArn -> (string)\n\nThe ARN of the project, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}",
      "command_examples": "Examples\n\nTo create a project\n\nThe following create-project example creates a wind farm project.\n\naws iotsitewise create-project \\\n    --portal-id a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE \\\n    --project-name \"Wind Farm 1\" \\\n    --project-description \"Contains asset visualizations for Wind Farm #1 for Example Corp.\"\n\n\nOutput:\n\n{\n    \"projectId\": \"a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\",\n    \"projectArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:project/a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\"\n}\n\n\nFor more information, see Creating projects in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "delete-access-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/delete-access-policy.html",
      "command_description": "Description\n\nDeletes an access policy that grants the specified identity access to the specified IoT SiteWise Monitor resource. You can use this operation to revoke access to an IoT SiteWise Monitor resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-access-policy\n--access-policy-id <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--access-policy-id <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--access-policy-id (string)\n\nThe ID of the access policy to be deleted.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo revoke a user’s access to a project or portal\n\nThe following delete-access-policy example deletes an access policy that grants a user administrative access to a portal.\n\naws iotsitewise delete-access-policy \\\n    --access-policy-id a1b2c3d4-5678-90ab-cdef-cccccEXAMPLE\n\n\nThis command produces no output.\n\nFor more information, see Adding or removing portal administrators in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "delete-asset",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/delete-asset.html",
      "command_description": "Description\n\nDeletes an asset. This action can’t be undone. For more information, see Deleting assets and models in the IoT SiteWise User Guide .\n\nNote\n\nYou can’t delete an asset that’s associated to another asset. For more information, see DisassociateAssets .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-asset\n--asset-id <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-id <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset to delete.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetStatus -> (structure)\n\nThe status of the asset, which contains a state (DELETING after successfully calling this operation) and any error message.\n\nstate -> (string)\n\nThe current status of the asset.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo delete an asset\n\nThe following delete-asset example deletes a wind turbine asset.\n\naws iotsitewise delete-asset \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-33333EXAMPLE\n\n\nOutput:\n\n{\n    \"assetStatus\": {\n        \"state\": \"DELETING\"\n    }\n}\n\n\nFor more information, see Deleting assets in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "delete-asset-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/delete-asset-model.html",
      "command_description": "Description\n\nDeletes an asset model. This action can’t be undone. You must delete all assets created from an asset model before you can delete the model. Also, you can’t delete an asset model if a parent asset model exists that contains a property formula expression that depends on the asset model that you want to delete. For more information, see Deleting assets and models in the IoT SiteWise User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-asset-model\n--asset-model-id <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-model-id <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-model-id (string)\n\nThe ID of the asset model to delete.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetModelStatus -> (structure)\n\nThe status of the asset model, which contains a state (DELETING after successfully calling this operation) and any error message.\n\nstate -> (string)\n\nThe current state of the asset model.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo delete an asset model\n\nThe following delete-asset-model example deletes a wind turbine asset model.\n\naws iotsitewise delete-asset-model \\\n    --asset-model-id a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\n\n\nOutput:\n\n{\n    \"assetModelStatus\": {\n        \"state\": \"DELETING\"\n    }\n}\n\n\nFor more information, see Deleting asset models in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "delete-dashboard",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/delete-dashboard.html",
      "command_description": "Description\n\nDeletes a dashboard from IoT SiteWise Monitor.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-dashboard\n--dashboard-id <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dashboard-id <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dashboard-id (string)\n\nThe ID of the dashboard to delete.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a dashboard\n\nThe following delete-dashboard example deletes a wind turbine dashboard.\n\naws iotsitewise delete-dashboard \\\n    --dashboard-id a1b2c3d4-5678-90ab-cdef-fffffEXAMPLE\n\n\nThis command produces no output.\n\nFor more information, see Deleting dashboards in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "delete-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/delete-gateway.html",
      "command_description": "Description\n\nDeletes a gateway from IoT SiteWise. When you delete a gateway, some of the gateway’s files remain in your gateway’s file system.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-gateway\n--gateway-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--gateway-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--gateway-id (string)\n\nThe ID of the gateway to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a gateway\n\nThe following delete-gateway example deletes a gateway.\n\naws iotsitewise delete-gateway \\\n    --gateway-id a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE\n\n\nThis command produces no output.\n\nFor more information, see Ingesting data using a gateway in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "delete-portal",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/delete-portal.html",
      "command_description": "Description\n\nDeletes a portal from IoT SiteWise Monitor.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-portal\n--portal-id <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--portal-id <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--portal-id (string)\n\nThe ID of the portal to delete.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nportalStatus -> (structure)\n\nThe status of the portal, which contains a state (DELETING after successfully calling this operation) and any error message.\n\nstate -> (string)\n\nThe current state of the portal.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo delete a portal\n\nThe following delete-portal example deletes a web portal for a wind farm company.\n\naws iotsitewise delete-portal \\\n    --portal-id a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\n\n\nOutput:\n\n{\n    \"portalStatus\": {\n        \"state\": \"DELETING\"\n    }\n}\n\n\nFor more information, see Deleting a portal in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "delete-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/delete-project.html",
      "command_description": "Description\n\nDeletes a project from IoT SiteWise Monitor.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-project\n--project-id <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-id <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-id (string)\n\nThe ID of the project.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a project\n\nThe following delete-project example deletes a wind farm project.\n\naws iotsitewise delete-project \\\n    --project-id a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\n\n\nThis command produces no output.\n\nFor more information, see Deleting projects in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "describe-access-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-access-policy.html",
      "command_description": "Description\n\nDescribes an access policy, which specifies an identity’s access to an IoT SiteWise Monitor portal or project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-access-policy\n--access-policy-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--access-policy-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--access-policy-id (string)\n\nThe ID of the access policy.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\naccessPolicyId -> (string)\n\nThe ID of the access policy.\n\naccessPolicyArn -> (string)\n\nThe ARN of the access policy, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}\n\naccessPolicyIdentity -> (structure)\n\nThe identity (Amazon Web Services SSO user, Amazon Web Services SSO group, or IAM user) to which this access policy applies.\n\nuser -> (structure)\n\nAn Amazon Web Services SSO user identity.\n\nid -> (string)\n\nThe Amazon Web Services SSO ID of the user.\n\ngroup -> (structure)\n\nAn Amazon Web Services SSO group identity.\n\nid -> (string)\n\nThe Amazon Web Services SSO ID of the group.\n\niamUser -> (structure)\n\nAn IAM user identity.\n\narn -> (string)\n\nThe ARN of the IAM user. For more information, see IAM ARNs in the IAM User Guide .\n\nNote\n\nIf you delete the IAM user, access policies that contain this identity include an empty arn . You can delete the access policy for the IAM user that no longer exists.\n\niamRole -> (structure)\n\nAn IAM role identity.\n\narn -> (string)\n\nThe ARN of the IAM role. For more information, see IAM ARNs in the IAM User Guide .\n\naccessPolicyResource -> (structure)\n\nThe IoT SiteWise Monitor resource (portal or project) to which this access policy provides access.\n\nportal -> (structure)\n\nA portal resource.\n\nid -> (string)\n\nThe ID of the portal.\n\nproject -> (structure)\n\nA project resource.\n\nid -> (string)\n\nThe ID of the project.\n\naccessPolicyPermission -> (string)\n\nThe access policy permission. Note that a project ADMINISTRATOR is also known as a project owner.\n\naccessPolicyCreationDate -> (timestamp)\n\nThe date the access policy was created, in Unix epoch time.\n\naccessPolicyLastUpdateDate -> (timestamp)\n\nThe date the access policy was last updated, in Unix epoch time.",
      "command_examples": "Examples\n\nTo describe an access policy\n\nThe following describe-access-policy example describes an access policy that grants a user administrative access to a web portal for a wind farm company.\n\naws iotsitewise describe-access-policy \\\n    --access-policy-id a1b2c3d4-5678-90ab-cdef-cccccEXAMPLE\n\n\nOutput:\n\n{\n    \"accessPolicyId\": \"a1b2c3d4-5678-90ab-cdef-cccccEXAMPLE\",\n    \"accessPolicyArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:access-policy/a1b2c3d4-5678-90ab-cdef-cccccEXAMPLE\",\n    \"accessPolicyIdentity\": {\n        \"user\": {\n            \"id\": \"a1b2c3d4e5-a1b2c3d4-5678-90ab-cdef-bbbbbEXAMPLE\"\n        }\n    },\n    \"accessPolicyResource\": {\n        \"portal\": {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\"\n        }\n    },\n    \"accessPolicyPermission\": \"ADMINISTRATOR\",\n    \"accessPolicyCreationDate\": \"2020-02-20T22:35:15.552880124Z\",\n    \"accessPolicyLastUpdateDate\": \"2020-02-20T22:35:15.552880124Z\"\n}\n\n\nFor more information, see Adding or removing portal administrators in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "describe-asset",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-asset.html",
      "command_description": "Description\n\nRetrieves information about an asset.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-asset\n--asset-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetId -> (string)\n\nThe ID of the asset.\n\nassetArn -> (string)\n\nThe ARN of the asset, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}\n\nassetName -> (string)\n\nThe name of the asset.\n\nassetModelId -> (string)\n\nThe ID of the asset model that was used to create the asset.\n\nassetProperties -> (list)\n\nThe list of asset properties for the asset.\n\nThis object doesn’t include properties that you define in composite models. You can find composite model properties in the assetCompositeModels object.\n\n(structure)\n\nContains asset property information.\n\nid -> (string)\n\nThe ID of the asset property.\n\nname -> (string)\n\nThe name of the property.\n\nalias -> (string)\n\nThe alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature ). For more information, see Mapping industrial data streams to asset properties in the IoT SiteWise User Guide .\n\nnotification -> (structure)\n\nThe asset property’s notification topic and state. For more information, see UpdateAssetProperty .\n\ntopic -> (string)\n\nThe MQTT topic to which IoT SiteWise publishes property value update notifications.\n\nstate -> (string)\n\nThe current notification state.\n\ndataType -> (string)\n\nThe data type of the asset property.\n\ndataTypeSpec -> (string)\n\nThe data type of the structure for this property. This parameter exists on properties that have the STRUCT data type.\n\nunit -> (string)\n\nThe unit (such as Newtons or RPM ) of the asset property.\n\nassetHierarchies -> (list)\n\nA list of asset hierarchies that each contain a hierarchyId . A hierarchy specifies allowed parent/child asset relationships.\n\n(structure)\n\nDescribes an asset hierarchy that contains a hierarchy’s name and ID.\n\nid -> (string)\n\nThe ID of the hierarchy. This ID is a hierarchyId .\n\nname -> (string)\n\nThe hierarchy name provided in the CreateAssetModel or UpdateAssetModel API operation.\n\nassetCompositeModels -> (list)\n\nThe composite models for the asset.\n\n(structure)\n\nContains information about a composite model in an asset. This object contains the asset’s properties that you define in the composite model.\n\nname -> (string)\n\nThe name of the composite model.\n\ndescription -> (string)\n\nThe description of the composite model.\n\ntype -> (string)\n\nThe type of the composite model. For alarm composite models, this type is AWS/ALARM .\n\nproperties -> (list)\n\nThe asset properties that this composite model defines.\n\n(structure)\n\nContains asset property information.\n\nid -> (string)\n\nThe ID of the asset property.\n\nname -> (string)\n\nThe name of the property.\n\nalias -> (string)\n\nThe alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature ). For more information, see Mapping industrial data streams to asset properties in the IoT SiteWise User Guide .\n\nnotification -> (structure)\n\nThe asset property’s notification topic and state. For more information, see UpdateAssetProperty .\n\ntopic -> (string)\n\nThe MQTT topic to which IoT SiteWise publishes property value update notifications.\n\nstate -> (string)\n\nThe current notification state.\n\ndataType -> (string)\n\nThe data type of the asset property.\n\ndataTypeSpec -> (string)\n\nThe data type of the structure for this property. This parameter exists on properties that have the STRUCT data type.\n\nunit -> (string)\n\nThe unit (such as Newtons or RPM ) of the asset property.\n\nassetCreationDate -> (timestamp)\n\nThe date the asset was created, in Unix epoch time.\n\nassetLastUpdateDate -> (timestamp)\n\nThe date the asset was last updated, in Unix epoch time.\n\nassetStatus -> (structure)\n\nThe current status of the asset, which contains a state and any error message.\n\nstate -> (string)\n\nThe current status of the asset.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo describe an asset\n\nThe following describe-asset example describes a wind farm asset.\n\naws iotsitewise describe-asset \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\n\n\nOutput:\n\n{\n    \"assetId\": \"a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\",\n    \"assetArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:asset/a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\",\n    \"assetName\": \"Wind Farm 1\",\n    \"assetModelId\": \"a1b2c3d4-5678-90ab-cdef-22222EXAMPLE\",\n    \"assetProperties\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-88888EXAMPLE\",\n            \"name\": \"Region\",\n            \"dataType\": \"STRING\"\n        },\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-99999EXAMPLE\",\n            \"name\": \"Total Generated Power\",\n            \"dataType\": \"DOUBLE\",\n            \"unit\": \"kW\"\n        }\n    ],\n    \"assetHierarchies\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-77777EXAMPLE\",\n            \"name\": \"Wind Turbines\"\n        }\n    ],\n    \"assetCreationDate\": 1575672453.0,\n    \"assetLastUpdateDate\": 1575672453.0,\n    \"assetStatus\": {\n        \"state\": \"ACTIVE\"\n    }\n}\n\n\nFor more information, see Describing a specific asset in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "describe-asset-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-asset-model.html",
      "command_description": "Description\n\nRetrieves information about an asset model.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-asset-model\n--asset-model-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-model-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-model-id (string)\n\nThe ID of the asset model.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetModelId -> (string)\n\nThe ID of the asset model.\n\nassetModelArn -> (string)\n\nThe ARN of the asset model, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}\n\nassetModelName -> (string)\n\nThe name of the asset model.\n\nassetModelDescription -> (string)\n\nThe asset model’s description.\n\nassetModelProperties -> (list)\n\nThe list of asset properties for the asset model.\n\nThis object doesn’t include properties that you define in composite models. You can find composite model properties in the assetModelCompositeModels object.\n\n(structure)\n\nContains information about an asset model property.\n\nid -> (string)\n\nThe ID of the asset model property.\n\nname -> (string)\n\nThe name of the asset model property.\n\ndataType -> (string)\n\nThe data type of the asset model property.\n\ndataTypeSpec -> (string)\n\nThe data type of the structure for this property. This parameter exists on properties that have the STRUCT data type.\n\nunit -> (string)\n\nThe unit of the asset model property, such as Newtons or RPM .\n\ntype -> (structure)\n\nThe property type (see PropertyType ).\n\nattribute -> (structure)\n\nSpecifies an asset attribute property. An attribute generally contains static information, such as the serial number of an IIoT wind turbine.\n\ndefaultValue -> (string)\n\nThe default value of the asset model property attribute. All assets that you create from the asset model contain this attribute value. You can update an attribute’s value after you create an asset. For more information, see Updating attribute values in the IoT SiteWise User Guide .\n\nmeasurement -> (structure)\n\nSpecifies an asset measurement property. A measurement represents a device’s raw sensor data stream, such as timestamped temperature values or timestamped power values.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for the given measurement property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\ntransform -> (structure)\n\nSpecifies an asset transform property. A transform contains a mathematical expression that maps a property’s data points from one form to another, such as a unit conversion from Celsius to Fahrenheit.\n\nexpression -> (string)\n\nThe mathematical expression that defines the transformation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given transform property.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for a given property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\nmetric -> (structure)\n\nSpecifies an asset metric property. A metric contains a mathematical expression that uses aggregate functions to process all input data points over a time interval and output a single data point, such as to calculate the average hourly temperature.\n\nexpression -> (string)\n\nThe mathematical expression that defines the metric aggregation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nwindow -> (structure)\n\nThe window (time interval) over which IoT SiteWise computes the metric’s aggregation expression. IoT SiteWise computes one data point per window .\n\ntumbling -> (structure)\n\nThe tumbling time interval window.\n\ninterval -> (string)\n\nThe time interval for the tumbling window. The interval time must be between 1 minute and 1 week.\n\nIoT SiteWise computes the 1w interval the end of Sunday at midnight each week (UTC), the 1d interval at the end of each day at midnight (UTC), the 1h interval at the end of each hour, and so on.\n\nWhen IoT SiteWise aggregates data points for metric computations, the start of each interval is exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at the end of the interval.\n\noffset -> (string)\n\nThe offset for the tumbling window. The offset parameter accepts the following:\n\nThe offset time. For example, if you specify 18h for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe ISO 8601 format. For example, if you specify PT18H for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe 24-hour clock. For example, if you specify 00:03:00 for offset and 5m for interval , and you create the metric at 2 PM (UTC), you get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC).\n\nThe offset time zone. For example, if you specify 2021-07-23T18:00-08 for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) the next day.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given metric property.\n\nassetModelHierarchies -> (list)\n\nA list of asset model hierarchies that each contain a childAssetModelId and a hierarchyId (named id ). A hierarchy specifies allowed parent/child asset relationships for an asset model.\n\n(structure)\n\nDescribes an asset hierarchy that contains a hierarchy’s name, ID, and child asset model ID that specifies the type of asset that can be in this hierarchy.\n\nid -> (string)\n\nThe ID of the asset model hierarchy. This ID is a hierarchyId .\n\nname -> (string)\n\nThe name of the asset model hierarchy that you specify by using the CreateAssetModel or UpdateAssetModel API operation.\n\nchildAssetModelId -> (string)\n\nThe ID of the asset model. All assets in this hierarchy must be instances of the childAssetModelId asset model.\n\nassetModelCompositeModels -> (list)\n\nThe list of composite asset models for the asset model.\n\n(structure)\n\nContains information about a composite model in an asset model. This object contains the asset property definitions that you define in the composite model.\n\nname -> (string)\n\nThe name of the composite model.\n\ndescription -> (string)\n\nThe description of the composite model.\n\ntype -> (string)\n\nThe type of the composite model. For alarm composite models, this type is AWS/ALARM .\n\nproperties -> (list)\n\nThe asset property definitions for this composite model.\n\n(structure)\n\nContains information about an asset model property.\n\nid -> (string)\n\nThe ID of the asset model property.\n\nname -> (string)\n\nThe name of the asset model property.\n\ndataType -> (string)\n\nThe data type of the asset model property.\n\ndataTypeSpec -> (string)\n\nThe data type of the structure for this property. This parameter exists on properties that have the STRUCT data type.\n\nunit -> (string)\n\nThe unit of the asset model property, such as Newtons or RPM .\n\ntype -> (structure)\n\nThe property type (see PropertyType ).\n\nattribute -> (structure)\n\nSpecifies an asset attribute property. An attribute generally contains static information, such as the serial number of an IIoT wind turbine.\n\ndefaultValue -> (string)\n\nThe default value of the asset model property attribute. All assets that you create from the asset model contain this attribute value. You can update an attribute’s value after you create an asset. For more information, see Updating attribute values in the IoT SiteWise User Guide .\n\nmeasurement -> (structure)\n\nSpecifies an asset measurement property. A measurement represents a device’s raw sensor data stream, such as timestamped temperature values or timestamped power values.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for the given measurement property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\ntransform -> (structure)\n\nSpecifies an asset transform property. A transform contains a mathematical expression that maps a property’s data points from one form to another, such as a unit conversion from Celsius to Fahrenheit.\n\nexpression -> (string)\n\nThe mathematical expression that defines the transformation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given transform property.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for a given property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\nmetric -> (structure)\n\nSpecifies an asset metric property. A metric contains a mathematical expression that uses aggregate functions to process all input data points over a time interval and output a single data point, such as to calculate the average hourly temperature.\n\nexpression -> (string)\n\nThe mathematical expression that defines the metric aggregation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nwindow -> (structure)\n\nThe window (time interval) over which IoT SiteWise computes the metric’s aggregation expression. IoT SiteWise computes one data point per window .\n\ntumbling -> (structure)\n\nThe tumbling time interval window.\n\ninterval -> (string)\n\nThe time interval for the tumbling window. The interval time must be between 1 minute and 1 week.\n\nIoT SiteWise computes the 1w interval the end of Sunday at midnight each week (UTC), the 1d interval at the end of each day at midnight (UTC), the 1h interval at the end of each hour, and so on.\n\nWhen IoT SiteWise aggregates data points for metric computations, the start of each interval is exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at the end of the interval.\n\noffset -> (string)\n\nThe offset for the tumbling window. The offset parameter accepts the following:\n\nThe offset time. For example, if you specify 18h for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe ISO 8601 format. For example, if you specify PT18H for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe 24-hour clock. For example, if you specify 00:03:00 for offset and 5m for interval , and you create the metric at 2 PM (UTC), you get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC).\n\nThe offset time zone. For example, if you specify 2021-07-23T18:00-08 for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) the next day.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given metric property.\n\nassetModelCreationDate -> (timestamp)\n\nThe date the asset model was created, in Unix epoch time.\n\nassetModelLastUpdateDate -> (timestamp)\n\nThe date the asset model was last updated, in Unix epoch time.\n\nassetModelStatus -> (structure)\n\nThe current status of the asset model, which contains a state and any error message.\n\nstate -> (string)\n\nThe current state of the asset model.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo describe an asset model\n\nThe following describe-asset-model example describes a wind farm asset model.\n\naws iotsitewise describe-asset-model \\\n    --asset-model-id a1b2c3d4-5678-90ab-cdef-22222EXAMPLE\n\n\nOutput:\n\n{\n    \"assetModelId\": \"a1b2c3d4-5678-90ab-cdef-22222EXAMPLE\",\n    \"assetModelArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:asset-model/a1b2c3d4-5678-90ab-cdef-22222EXAMPLE\",\n    \"assetModelName\": \"Wind Farm Model\",\n    \"assetModelDescription\": \"Represents a wind farm that comprises many wind turbines\",\n    \"assetModelProperties\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-99999EXAMPLE\",\n            \"name\": \"Total Generated Power\",\n            \"dataType\": \"DOUBLE\",\n            \"unit\": \"kW\",\n            \"type\": {\n                \"metric\": {\n                    \"expression\": \"sum(power)\",\n                    \"variables\": [\n                        {\n                            \"name\": \"power\",\n                            \"value\": {\n                                \"propertyId\": \"a1b2c3d4-5678-90ab-cdef-66666EXAMPLE\",\n                                \"hierarchyId\": \"a1b2c3d4-5678-90ab-cdef-77777EXAMPLE\"\n                            }\n                        }\n                    ],\n                    \"window\": {\n                        \"tumbling\": {\n                            \"interval\": \"1h\"\n                        }\n                    }\n                }\n            }\n        },\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-88888EXAMPLE\",\n            \"name\": \"Region\",\n            \"dataType\": \"STRING\",\n            \"type\": {\n                \"attribute\": {\n                    \"defaultValue\": \" \"\n                }\n            }\n        }\n    ],\n    \"assetModelHierarchies\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-77777EXAMPLE\",\n            \"name\": \"Wind Turbines\",\n            \"childAssetModelId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\"\n        }\n    ],\n    \"assetModelCreationDate\": 1575671284.0,\n    \"assetModelLastUpdateDate\": 1575671988.0,\n    \"assetModelStatus\": {\n        \"state\": \"ACTIVE\"\n    }\n}\n\n\nFor more information, see Describing a specific asset model in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "describe-asset-property",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-asset-property.html",
      "command_description": "Description\n\nRetrieves information about an asset property.\n\nNote\n\nWhen you call this operation for an attribute property, this response includes the default attribute value that you define in the asset model. If you update the default value in the model, this operation’s response includes the new default value.\n\nThis operation doesn’t return the value of the asset property. To get the value of an asset property, use GetAssetPropertyValue .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-asset-property\n--asset-id <value>\n--property-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-id <value>",
        "--property-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset.\n\n--property-id (string)\n\nThe ID of the asset property.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetId -> (string)\n\nThe ID of the asset.\n\nassetName -> (string)\n\nThe name of the asset.\n\nassetModelId -> (string)\n\nThe ID of the asset model.\n\nassetProperty -> (structure)\n\nThe asset property’s definition, alias, and notification state.\n\nThis response includes this object for normal asset properties. If you describe an asset property in a composite model, this response includes the asset property information in compositeModel .\n\nid -> (string)\n\nThe ID of the asset property.\n\nname -> (string)\n\nThe name of the property.\n\nalias -> (string)\n\nThe alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature ). For more information, see Mapping industrial data streams to asset properties in the IoT SiteWise User Guide .\n\nnotification -> (structure)\n\nThe asset property’s notification topic and state. For more information, see UpdateAssetProperty .\n\ntopic -> (string)\n\nThe MQTT topic to which IoT SiteWise publishes property value update notifications.\n\nstate -> (string)\n\nThe current notification state.\n\ndataType -> (string)\n\nThe property data type.\n\nunit -> (string)\n\nThe unit (such as Newtons or RPM ) of the asset property.\n\ntype -> (structure)\n\nThe property type (see PropertyType ). A property contains one type.\n\nattribute -> (structure)\n\nSpecifies an asset attribute property. An attribute generally contains static information, such as the serial number of an IIoT wind turbine.\n\ndefaultValue -> (string)\n\nThe default value of the asset model property attribute. All assets that you create from the asset model contain this attribute value. You can update an attribute’s value after you create an asset. For more information, see Updating attribute values in the IoT SiteWise User Guide .\n\nmeasurement -> (structure)\n\nSpecifies an asset measurement property. A measurement represents a device’s raw sensor data stream, such as timestamped temperature values or timestamped power values.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for the given measurement property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\ntransform -> (structure)\n\nSpecifies an asset transform property. A transform contains a mathematical expression that maps a property’s data points from one form to another, such as a unit conversion from Celsius to Fahrenheit.\n\nexpression -> (string)\n\nThe mathematical expression that defines the transformation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given transform property.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for a given property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\nmetric -> (structure)\n\nSpecifies an asset metric property. A metric contains a mathematical expression that uses aggregate functions to process all input data points over a time interval and output a single data point, such as to calculate the average hourly temperature.\n\nexpression -> (string)\n\nThe mathematical expression that defines the metric aggregation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nwindow -> (structure)\n\nThe window (time interval) over which IoT SiteWise computes the metric’s aggregation expression. IoT SiteWise computes one data point per window .\n\ntumbling -> (structure)\n\nThe tumbling time interval window.\n\ninterval -> (string)\n\nThe time interval for the tumbling window. The interval time must be between 1 minute and 1 week.\n\nIoT SiteWise computes the 1w interval the end of Sunday at midnight each week (UTC), the 1d interval at the end of each day at midnight (UTC), the 1h interval at the end of each hour, and so on.\n\nWhen IoT SiteWise aggregates data points for metric computations, the start of each interval is exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at the end of the interval.\n\noffset -> (string)\n\nThe offset for the tumbling window. The offset parameter accepts the following:\n\nThe offset time. For example, if you specify 18h for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe ISO 8601 format. For example, if you specify PT18H for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe 24-hour clock. For example, if you specify 00:03:00 for offset and 5m for interval , and you create the metric at 2 PM (UTC), you get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC).\n\nThe offset time zone. For example, if you specify 2021-07-23T18:00-08 for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) the next day.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given metric property.\n\ncompositeModel -> (structure)\n\nThe composite asset model that declares this asset property, if this asset property exists in a composite model.\n\nname -> (string)\n\nThe name of the property.\n\ntype -> (string)\n\nThe type of the composite model that defines this property.\n\nassetProperty -> (structure)\n\nContains asset property information.\n\nid -> (string)\n\nThe ID of the asset property.\n\nname -> (string)\n\nThe name of the property.\n\nalias -> (string)\n\nThe alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature ). For more information, see Mapping industrial data streams to asset properties in the IoT SiteWise User Guide .\n\nnotification -> (structure)\n\nThe asset property’s notification topic and state. For more information, see UpdateAssetProperty .\n\ntopic -> (string)\n\nThe MQTT topic to which IoT SiteWise publishes property value update notifications.\n\nstate -> (string)\n\nThe current notification state.\n\ndataType -> (string)\n\nThe property data type.\n\nunit -> (string)\n\nThe unit (such as Newtons or RPM ) of the asset property.\n\ntype -> (structure)\n\nThe property type (see PropertyType ). A property contains one type.\n\nattribute -> (structure)\n\nSpecifies an asset attribute property. An attribute generally contains static information, such as the serial number of an IIoT wind turbine.\n\ndefaultValue -> (string)\n\nThe default value of the asset model property attribute. All assets that you create from the asset model contain this attribute value. You can update an attribute’s value after you create an asset. For more information, see Updating attribute values in the IoT SiteWise User Guide .\n\nmeasurement -> (structure)\n\nSpecifies an asset measurement property. A measurement represents a device’s raw sensor data stream, such as timestamped temperature values or timestamped power values.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for the given measurement property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\ntransform -> (structure)\n\nSpecifies an asset transform property. A transform contains a mathematical expression that maps a property’s data points from one form to another, such as a unit conversion from Celsius to Fahrenheit.\n\nexpression -> (string)\n\nThe mathematical expression that defines the transformation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given transform property.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for a given property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\nmetric -> (structure)\n\nSpecifies an asset metric property. A metric contains a mathematical expression that uses aggregate functions to process all input data points over a time interval and output a single data point, such as to calculate the average hourly temperature.\n\nexpression -> (string)\n\nThe mathematical expression that defines the metric aggregation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nwindow -> (structure)\n\nThe window (time interval) over which IoT SiteWise computes the metric’s aggregation expression. IoT SiteWise computes one data point per window .\n\ntumbling -> (structure)\n\nThe tumbling time interval window.\n\ninterval -> (string)\n\nThe time interval for the tumbling window. The interval time must be between 1 minute and 1 week.\n\nIoT SiteWise computes the 1w interval the end of Sunday at midnight each week (UTC), the 1d interval at the end of each day at midnight (UTC), the 1h interval at the end of each hour, and so on.\n\nWhen IoT SiteWise aggregates data points for metric computations, the start of each interval is exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at the end of the interval.\n\noffset -> (string)\n\nThe offset for the tumbling window. The offset parameter accepts the following:\n\nThe offset time. For example, if you specify 18h for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe ISO 8601 format. For example, if you specify PT18H for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe 24-hour clock. For example, if you specify 00:03:00 for offset and 5m for interval , and you create the metric at 2 PM (UTC), you get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC).\n\nThe offset time zone. For example, if you specify 2021-07-23T18:00-08 for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) the next day.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given metric property.",
      "command_examples": "Examples\n\nTo describe an asset property\n\nThe following describe-asset-property example describes a wind farm asset’s total generated power property.\n\naws iotsitewise describe-asset-property \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-44444EXAMPLE \\\n    --property-id a1b2c3d4-5678-90ab-cdef-99999EXAMPLE\n\n\nOutput:\n\n{\n    \"assetId\": \"a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\",\n    \"assetName\": \"Wind Farm 1\",\n    \"assetModelId\": \"a1b2c3d4-5678-90ab-cdef-22222EXAMPLE\",\n    \"assetProperty\": {\n        \"id\": \"a1b2c3d4-5678-90ab-cdef-99999EXAMPLE\",\n        \"name\": \"Total Generated Power\",\n        \"notification\": {\n            \"topic\": \"$aws/sitewise/asset-models/a1b2c3d4-5678-90ab-cdef-22222EXAMPLE/assets/a1b2c3d4-5678-90ab-cdef-44444EXAMPLE/properties/a1b2c3d4-5678-90ab-cdef-99999EXAMPLE\",\n            \"state\": \"DISABLED\"\n        },\n        \"dataType\": \"DOUBLE\",\n        \"unit\": \"kW\",\n        \"type\": {\n            \"metric\": {\n                \"expression\": \"sum(power)\",\n                \"variables\": [\n                    {\n                        \"name\": \"power\",\n                        \"value\": {\n                            \"propertyId\": \"a1b2c3d4-5678-90ab-cdef-66666EXAMPLE\",\n                            \"hierarchyId\": \"a1b2c3d4-5678-90ab-cdef-77777EXAMPLE\"\n                        }\n                    }\n                ],\n                \"window\": {\n                    \"tumbling\": {\n                        \"interval\": \"1h\"\n                    }\n                }\n            }\n        }\n    }\n}\n\n\nFor more information, see Describing a specific asset property in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "describe-dashboard",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-dashboard.html",
      "command_description": "Description\n\nRetrieves information about a dashboard.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-dashboard\n--dashboard-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dashboard-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dashboard-id (string)\n\nThe ID of the dashboard.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndashboardId -> (string)\n\nThe ID of the dashboard.\n\ndashboardArn -> (string)\n\nThe ARN of the dashboard, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}\n\ndashboardName -> (string)\n\nThe name of the dashboard.\n\nprojectId -> (string)\n\nThe ID of the project that the dashboard is in.\n\ndashboardDescription -> (string)\n\nThe dashboard’s description.\n\ndashboardDefinition -> (string)\n\nThe dashboard’s definition JSON literal. For detailed information, see Creating dashboards (CLI) in the IoT SiteWise User Guide .\n\ndashboardCreationDate -> (timestamp)\n\nThe date the dashboard was created, in Unix epoch time.\n\ndashboardLastUpdateDate -> (timestamp)\n\nThe date the dashboard was last updated, in Unix epoch time.",
      "command_examples": "Examples\n\nTo describe a dashboard\n\nThe following describe-dashboard example describes the specified wind farm dashboard.\n\naws iotsitewise describe-dashboard \\\n    --dashboard-id a1b2c3d4-5678-90ab-cdef-fffffEXAMPLE\n\n\nOutput:\n\n{\n    \"dashboardId\": \"a1b2c3d4-5678-90ab-cdef-fffffEXAMPLE\",\n    \"dashboardArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:dashboard/a1b2c3d4-5678-90ab-cdef-fffffEXAMPLE\",\n    \"dashboardName\": \"Wind Farm\",\n    \"projectId\": \"a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\",\n    \"dashboardDefinition\": \"{\\\"widgets\\\":[{\\\"type\\\":\\\"monitor-line-chart\\\",\\\"title\\\":\\\"Generated Power\\\",\\\"x\\\":0,\\\"y\\\":0,\\\"height\\\":3,\\\"width\\\":3,\\\"metrics\\\":[{\\\"label\\\":\\\"Power\\\",\\\"type\\\":\\\"iotsitewise\\\",\\\"assetId\\\":\\\"a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\\\",\\\"propertyId\\\":\\\"a1b2c3d4-5678-90ab-cdef-99999EXAMPLE\\\"}]}]}\",\n    \"dashboardCreationDate\": \"2020-05-01T20:32:12.228476348Z\",\n    \"dashboardLastUpdateDate\": \"2020-05-01T20:32:12.228476348Z\"\n}\n\n\nFor more information, see Viewing dashboards in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "describe-default-encryption-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-default-encryption-configuration.html",
      "command_description": "Description\n\nRetrieves information about the default encryption configuration for the Amazon Web Services account in the default or specified Region. For more information, see Key management in the IoT SiteWise User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-default-encryption-configuration\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nencryptionType -> (string)\n\nThe type of encryption used for the encryption configuration.\n\nkmsKeyArn -> (string)\n\nThe key ARN of the customer managed customer master key (CMK) used for KMS encryption if you use KMS_BASED_ENCRYPTION .\n\nconfigurationStatus -> (structure)\n\nThe status of the account configuration. This contains the ConfigurationState . If there’s an error, it also contains the ErrorDetails .\n\nstate -> (string)\n\nThe current state of the configuration.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message."
    },
    {
      "command_name": "describe-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-gateway.html",
      "command_description": "Description\n\nRetrieves information about a gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-gateway\n--gateway-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--gateway-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--gateway-id (string)\n\nThe ID of the gateway device.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngatewayId -> (string)\n\nThe ID of the gateway device.\n\ngatewayName -> (string)\n\nThe name of the gateway.\n\ngatewayArn -> (string)\n\nThe ARN of the gateway, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}\n\ngatewayPlatform -> (structure)\n\nThe gateway’s platform.\n\ngreengrass -> (structure)\n\nA gateway that runs on IoT Greengrass.\n\ngroupArn -> (string)\n\nThe ARN of the Greengrass group. For more information about how to find a group’s ARN, see ListGroups and GetGroup in the IoT Greengrass API Reference .\n\ngreengrassV2 -> (structure)\n\nA gateway that runs on IoT Greengrass V2.\n\ncoreDeviceThingName -> (string)\n\nThe name of the IoT thing for your IoT Greengrass V2 core device.\n\ngatewayCapabilitySummaries -> (list)\n\nA list of gateway capability summaries that each contain a namespace and status. Each gateway capability defines data sources for the gateway. To retrieve a capability configuration’s definition, use DescribeGatewayCapabilityConfiguration .\n\n(structure)\n\nContains a summary of a gateway capability configuration.\n\ncapabilityNamespace -> (string)\n\nThe namespace of the capability configuration. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace iotsitewise:opcuacollector:version , where version is a number such as 1 .\n\ncapabilitySyncStatus -> (string)\n\nThe synchronization status of the capability configuration. The sync status can be one of the following:\n\nIN_SYNC – The gateway is running the capability configuration.\n\nOUT_OF_SYNC – The gateway hasn’t received the capability configuration.\n\nSYNC_FAILED – The gateway rejected the capability configuration.\n\ncreationDate -> (timestamp)\n\nThe date the gateway was created, in Unix epoch time.\n\nlastUpdateDate -> (timestamp)\n\nThe date the gateway was last updated, in Unix epoch time.",
      "command_examples": "Examples\n\nTo describe a gateway\n\nThe following describe-gateway example describes a gateway.\n\naws iotsitewise describe-gateway \\\n    --gateway-id a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE\n\n\nOutput:\n\n{\n    \"gatewayId\": \"a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE\",\n    \"gatewayName\": \"ExampleCorpGateway\",\n    \"gatewayArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:gateway/a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE\",\n    \"gatewayPlatform\": {\n        \"greengrass\": {\n            \"groupArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/a1b2c3d4-5678-90ab-cdef-1b1b1EXAMPLE\"\n        }\n    },\n    \"gatewayCapabilitySummaries\": [\n        {\n            \"capabilityNamespace\": \"iotsitewise:opcuacollector:1\",\n            \"capabilitySyncStatus\": \"IN_SYNC\"\n        }\n    ],\n    \"creationDate\": 1588369971.457,\n    \"lastUpdateDate\": 1588369971.457\n}\n\n\nFor more information, see Ingesting data using a gateway in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "describe-gateway-capability-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-gateway-capability-configuration.html",
      "command_description": "Description\n\nRetrieves information about a gateway capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC-UA sources for a gateway in the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use DescribeGateway .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-gateway-capability-configuration\n--gateway-id <value>\n--capability-namespace <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--gateway-id <value>",
        "--capability-namespace <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--gateway-id (string)\n\nThe ID of the gateway that defines the capability configuration.\n\n--capability-namespace (string)\n\nThe namespace of the capability configuration. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace iotsitewise:opcuacollector:version , where version is a number such as 1 .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngatewayId -> (string)\n\nThe ID of the gateway that defines the capability configuration.\n\ncapabilityNamespace -> (string)\n\nThe namespace of the gateway capability.\n\ncapabilityConfiguration -> (string)\n\nThe JSON document that defines the gateway capability’s configuration. For more information, see Configuring data sources (CLI) in the IoT SiteWise User Guide .\n\ncapabilitySyncStatus -> (string)\n\nThe synchronization status of the capability configuration. The sync status can be one of the following:\n\nIN_SYNC – The gateway is running the capability configuration.\n\nOUT_OF_SYNC – The gateway hasn’t received the capability configuration.\n\nSYNC_FAILED – The gateway rejected the capability configuration.",
      "command_examples": "Examples\n\nTo describe a gateway capability\n\nThe following describe-gateway-capability-configuration example describes an OPC-UA source capability.\n\naws iotsitewise describe-gateway-capability-configuration \\\n    --gateway-id a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE \\\n    --capability-namespace \"iotsitewise:opcuacollector:1\"\n\n\nOutput:\n\n{\n    \"gatewayId\": \"a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE\",\n    \"capabilityNamespace\": \"iotsitewise:opcuacollector:1\",\n    \"capabilityConfiguration\": \"{\\\"sources\\\":[{\\\"name\\\":\\\"Wind Farm #1\\\",\\\"endpoint\\\":{\\\"certificateTrust\\\":{\\\"type\\\":\\\"TrustAny\\\"},\\\"endpointUri\\\":\\\"opc.tcp://203.0.113.0:49320\\\",\\\"securityPolicy\\\":\\\"BASIC256\\\",\\\"messageSecurityMode\\\":\\\"SIGN_AND_ENCRYPT\\\",\\\"identityProvider\\\":{\\\"type\\\":\\\"Username\\\",\\\"usernameSecretArn\\\":\\\"arn:aws:secretsmanager:us-east-1:123456789012:secret:greengrass-factory1-auth-3QNDmM\\\"},\\\"nodeFilterRules\\\":[]},\\\"measurementDataStreamPrefix\\\":\\\"\\\"}]}\",\n    \"capabilitySyncStatus\": \"IN_SYNC\"\n}\n\n\nFor more information, see Configuring data sources in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "describe-logging-options",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-logging-options.html",
      "command_description": "Description\n\nRetrieves the current IoT SiteWise logging options.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-logging-options\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nloggingOptions -> (structure)\n\nThe current logging options.\n\nlevel -> (string)\n\nThe IoT SiteWise logging verbosity level.",
      "command_examples": "Examples\n\nTo retrieve the current AWS IoT SiteWise logging options\n\nThe following describe-logging-options example retrieves the current AWS IoT SiteWise logging options for your AWS account in the current Region.\n\naws iotsitewise describe-logging-options\n\n\nOutput:\n\n{\n    \"loggingOptions\": {\n        \"level\": \"INFO\"\n    }\n}\n\n\nFor more information, see Monitoring AWS IoT SiteWise with Amazon CloudWatch Logs in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "describe-portal",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-portal.html",
      "command_description": "Description\n\nRetrieves information about a portal.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-portal\n--portal-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--portal-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--portal-id (string)\n\nThe ID of the portal.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nportalId -> (string)\n\nThe ID of the portal.\n\nportalArn -> (string)\n\nThe ARN of the portal, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}\n\nportalName -> (string)\n\nThe name of the portal.\n\nportalDescription -> (string)\n\nThe portal’s description.\n\nportalClientId -> (string)\n\nThe Amazon Web Services SSO application generated client ID (used with Amazon Web Services SSO APIs). IoT SiteWise includes portalClientId for only portals that use Amazon Web Services SSO to authenticate users.\n\nportalStartUrl -> (string)\n\nThe URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use Amazon Web Services SSO for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.\n\nportalContactEmail -> (string)\n\nThe Amazon Web Services administrator’s contact email address.\n\nportalStatus -> (structure)\n\nThe current status of the portal, which contains a state and any error message.\n\nstate -> (string)\n\nThe current state of the portal.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\nportalCreationDate -> (timestamp)\n\nThe date the portal was created, in Unix epoch time.\n\nportalLastUpdateDate -> (timestamp)\n\nThe date the portal was last updated, in Unix epoch time.\n\nportalLogoImageLocation -> (structure)\n\nThe portal’s logo image, which is available at a URL.\n\nid -> (string)\n\nThe ID of the image.\n\nurl -> (string)\n\nThe URL where the image is available. The URL is valid for 15 minutes so that you can view and download the image\n\nroleArn -> (string)\n\nThe ARN of the service role that allows the portal’s users to access your IoT SiteWise resources on your behalf. For more information, see Using service roles for IoT SiteWise Monitor in the IoT SiteWise User Guide .\n\nportalAuthMode -> (string)\n\nThe service to use to authenticate users to the portal.\n\nnotificationSenderEmail -> (string)\n\nThe email address that sends alarm notifications.\n\nalarms -> (structure)\n\nContains the configuration information of an alarm created in an IoT SiteWise Monitor portal.\n\nalarmRoleArn -> (string)\n\nThe ARN of the IAM role that allows the alarm to perform actions and access Amazon Web Services resources and services, such as IoT Events.\n\nnotificationLambdaArn -> (string)\n\nThe ARN of the Lambda function that manages alarm notifications. For more information, see Managing alarm notifications in the IoT Events Developer Guide .",
      "command_examples": "Examples\n\nTo describe a portal\n\nThe following describe-portal example describes a web portal for a wind farm company.\n\naws iotsitewise describe-portal \\\n    --portal-id a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\n\n\nOutput:\n\n{\n    \"portalId\": \"a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\",\n    \"portalArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:portal/a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\",\n    \"portalName\": \"WindFarmPortal\",\n    \"portalDescription\": \"A portal that contains wind farm projects for Example Corp.\",\n    \"portalClientId\": \"E-a1b2c3d4e5f6_a1b2c3d4e5f6EXAMPLE\",\n    \"portalStartUrl\": \"https://a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE.app.iotsitewise.aws\",\n    \"portalContactEmail\": \"support@example.com\",\n    \"portalStatus\": {\n        \"state\": \"ACTIVE\"\n    },\n    \"portalCreationDate\": \"2020-02-04T23:01:52.90248068Z\",\n    \"portalLastUpdateDate\": \"2020-02-04T23:01:52.90248078Z\",\n    \"roleArn\": \"arn:aws:iam::123456789012:role/MySiteWiseMonitorServiceRole\"\n}\n\n\nFor more information, see Administering your portals in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "describe-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-project.html",
      "command_description": "Description\n\nRetrieves information about a project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-project\n--project-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-id (string)\n\nThe ID of the project.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nprojectId -> (string)\n\nThe ID of the project.\n\nprojectArn -> (string)\n\nThe ARN of the project, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}\n\nprojectName -> (string)\n\nThe name of the project.\n\nportalId -> (string)\n\nThe ID of the portal that the project is in.\n\nprojectDescription -> (string)\n\nThe project’s description.\n\nprojectCreationDate -> (timestamp)\n\nThe date the project was created, in Unix epoch time.\n\nprojectLastUpdateDate -> (timestamp)\n\nThe date the project was last updated, in Unix epoch time.",
      "command_examples": "Examples\n\nTo describe a project\n\nThe following describe-project example describes a wind farm project.\n\naws iotsitewise describe-project \\\n    --project-id a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\n\n\nOutput:\n\n{\n    \"projectId\": \"a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\",\n    \"projectArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:project/a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\",\n    \"projectName\": \"Wind Farm 1\",\n    \"portalId\": \"a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\",\n    \"projectDescription\": \"Contains asset visualizations for Wind Farm #1 for Example Corp.\",\n    \"projectCreationDate\": \"2020-02-20T21:58:43.362246001Z\",\n    \"projectLastUpdateDate\": \"2020-02-20T21:58:43.362246095Z\"\n}\n\n\nFor more information, see Viewing project details in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "describe-storage-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/describe-storage-configuration.html",
      "command_description": "Description\n\nRetrieves information about the storage configuration for IoT SiteWise.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-storage-configuration\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstorageType -> (string)\n\nThe type of storage that you specified for your data. The storage type can be one of the following values:\n\nSITEWISE_DEFAULT_STORAGE – IoT SiteWise replicates your data into a service managed database.\n\nMULTI_LAYER_STORAGE – IoT SiteWise replicates your data into a service managed database and saves a copy of your raw data and metadata in an Amazon S3 object that you specified.\n\nmultiLayerStorage -> (structure)\n\nContains information about the storage destination.\n\ncustomerManagedS3Storage -> (structure)\n\nContains information about a customer managed Amazon S3 bucket.\n\ns3ResourceArn -> (string)\n\nThe ARN of the Amazon S3 object. For more information about how to find the ARN for an Amazon S3 object, see Amazon S3 resources in the Amazon Simple Storage Service User Guide .\n\nroleArn -> (string)\n\nThe ARN of the Identity and Access Management role that allows IoT SiteWise to send data to Amazon S3.\n\nconfigurationStatus -> (structure)\n\nContains current status information for the configuration.\n\nstate -> (string)\n\nThe current state of the configuration.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\nlastUpdateDate -> (timestamp)\n\nThe date the storage configuration was last updated, in Unix epoch time."
    },
    {
      "command_name": "disassociate-assets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/disassociate-assets.html",
      "command_description": "Description\n\nDisassociates a child asset from the given parent asset through a hierarchy defined in the parent asset’s model.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-assets\n--asset-id <value>\n--hierarchy-id <value>\n--child-asset-id <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-id <value>",
        "--hierarchy-id <value>",
        "--child-asset-id <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the parent asset from which to disassociate the child asset.\n\n--hierarchy-id (string)\n\nThe ID of a hierarchy in the parent asset’s model. Hierarchies allow different groupings of assets to be formed that all come from the same asset model. You can use the hierarchy ID to identify the correct asset to disassociate. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\n--child-asset-id (string)\n\nThe ID of the child asset to disassociate.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo disassociate a child asset from a parent asset\n\nThe following disassociate-assets example disassociates a wind turbine asset from a wind farm asset.\n\naws iotsitewise disassociate-assets \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-44444EXAMPLE \\\n    --hierarchy-id a1b2c3d4-5678-90ab-cdef-77777EXAMPLE \\\n    --child-asset-id a1b2c3d4-5678-90ab-cdef-33333EXAMPLE\n\n\nThis command produces no output.\n\nFor more information, see Associating assets in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "get-asset-property-aggregates",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/get-asset-property-aggregates.html",
      "command_description": "Description\n\nGets aggregated values for an asset property. For more information, see Querying aggregates in the IoT SiteWise User Guide .\n\nTo identify an asset property, you must specify one of the following:\n\nThe assetId and propertyId of an asset property.\n\nA propertyAlias , which is a data stream alias (for example, /company/windfarm/3/turbine/7/temperature ). To define an asset property’s alias, see UpdateAssetProperty .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-asset-property-aggregates is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: aggregatedValues",
      "command_synopsis": "Synopsis\n  get-asset-property-aggregates\n[--asset-id <value>]\n[--property-id <value>]\n[--property-alias <value>]\n--aggregate-types <value>\n--resolution <value>\n[--qualities <value>]\n--start-date <value>\n--end-date <value>\n[--time-ordering <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--asset-id <value>]",
        "[--property-id <value>]",
        "[--property-alias <value>]",
        "--aggregate-types <value>",
        "--resolution <value>",
        "[--qualities <value>]",
        "--start-date <value>",
        "--end-date <value>",
        "[--time-ordering <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset.\n\n--property-id (string)\n\nThe ID of the asset property.\n\n--property-alias (string)\n\nThe alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature ). For more information, see Mapping industrial data streams to asset properties in the IoT SiteWise User Guide .\n\n--aggregate-types (list)\n\nThe data aggregating function.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  AVERAGE\n  COUNT\n  MAXIMUM\n  MINIMUM\n  SUM\n  STANDARD_DEVIATION\n\n\n--resolution (string)\n\nThe time interval over which to aggregate data.\n\n--qualities (list)\n\nThe quality by which to filter asset data.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  GOOD\n  BAD\n  UNCERTAIN\n\n\n--start-date (timestamp)\n\nThe exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.\n\n--end-date (timestamp)\n\nThe inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.\n\n--time-ordering (string)\n\nThe chronological sorting order of the requested information.\n\nDefault: ASCENDING\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\naggregatedValues -> (list)\n\nThe requested aggregated values.\n\n(structure)\n\nContains aggregated asset property values (for example, average, minimum, and maximum).\n\ntimestamp -> (timestamp)\n\nThe date the aggregating computations occurred, in Unix epoch time.\n\nquality -> (string)\n\nThe quality of the aggregated data.\n\nvalue -> (structure)\n\nThe value of the aggregates.\n\naverage -> (double)\n\nThe average (mean) value of the time series over a time interval window.\n\ncount -> (double)\n\nThe count of data points in the time series over a time interval window.\n\nmaximum -> (double)\n\nThe maximum value of the time series over a time interval window.\n\nminimum -> (double)\n\nThe minimum value of the time series over a time interval window.\n\nsum -> (double)\n\nThe sum of the time series over a time interval window.\n\nstandardDeviation -> (double)\n\nThe standard deviation of the time series over a time interval window.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nTo retrieve an asset property’s aggregated average and count values\n\nThe following get-asset-property-aggregates example retrieves a wind turbine asset’s average total power and count of total power data points for a 1 hour period in time.\n\naws iotsitewise get-asset-property-aggregates \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-33333EXAMPLE \\\n    --property-id a1b2c3d4-5678-90ab-cdef-66666EXAMPLE \\\n    --start-date 1580849400 \\\n    --end-date 1580853000 \\\n    --aggregate-types AVERAGE COUNT \\\n    --resolution 1h\n\n\nOutput:\n\n{\n    \"aggregatedValues\": [\n        {\n            \"timestamp\": 1580850000.0,\n            \"quality\": \"GOOD\",\n            \"value\": {\n                \"average\": 8723.46538886233,\n                \"count\": 12.0\n            }\n        }\n    ]\n}\n\n\nFor more information, see Querying asset property aggregates in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "get-asset-property-value",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/get-asset-property-value.html",
      "command_description": "Description\n\nGets an asset property’s current value. For more information, see Querying current values in the IoT SiteWise User Guide .\n\nTo identify an asset property, you must specify one of the following:\n\nThe assetId and propertyId of an asset property.\n\nA propertyAlias , which is a data stream alias (for example, /company/windfarm/3/turbine/7/temperature ). To define an asset property’s alias, see UpdateAssetProperty .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-asset-property-value\n[--asset-id <value>]\n[--property-id <value>]\n[--property-alias <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--asset-id <value>]",
        "[--property-id <value>]",
        "[--property-alias <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset.\n\n--property-id (string)\n\nThe ID of the asset property.\n\n--property-alias (string)\n\nThe alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature ). For more information, see Mapping industrial data streams to asset properties in the IoT SiteWise User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npropertyValue -> (structure)\n\nThe current asset property value.\n\nvalue -> (structure)\n\nThe value of the asset property (see Variant ).\n\nstringValue -> (string)\n\nAsset property data of type string (sequence of characters).\n\nintegerValue -> (integer)\n\nAsset property data of type integer (whole number).\n\ndoubleValue -> (double)\n\nAsset property data of type double (floating point number).\n\nbooleanValue -> (boolean)\n\nAsset property data of type Boolean (true or false).\n\ntimestamp -> (structure)\n\nThe timestamp of the asset property value.\n\ntimeInSeconds -> (long)\n\nThe timestamp date, in seconds, in the Unix epoch format. Fractional nanosecond data is provided by offsetInNanos .\n\noffsetInNanos -> (integer)\n\nThe nanosecond offset from timeInSeconds .\n\nquality -> (string)\n\nThe quality of the asset property value.",
      "command_examples": "Examples\n\nTo retrieve an asset property’s current value\n\nThe following get-asset-property-value example retrieves a wind turbine asset’s current total power.\n\naws iotsitewise get-asset-property-value \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-33333EXAMPLE \\\n    --property-id a1b2c3d4-5678-90ab-cdef-66666EXAMPLE\n\n\nOutput:\n\n{\n    \"propertyValue\": {\n        \"value\": {\n            \"doubleValue\": 6890.8677520453875\n        },\n        \"timestamp\": {\n            \"timeInSeconds\": 1580853000,\n            \"offsetInNanos\": 0\n        },\n        \"quality\": \"GOOD\"\n    }\n}\n\n\nFor more information, see Querying current asset property values in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "get-asset-property-value-history",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/get-asset-property-value-history.html",
      "command_description": "Description\n\nGets the history of an asset property’s values. For more information, see Querying historical values in the IoT SiteWise User Guide .\n\nTo identify an asset property, you must specify one of the following:\n\nThe assetId and propertyId of an asset property.\n\nA propertyAlias , which is a data stream alias (for example, /company/windfarm/3/turbine/7/temperature ). To define an asset property’s alias, see UpdateAssetProperty .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-asset-property-value-history is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: assetPropertyValueHistory",
      "command_synopsis": "Synopsis\n  get-asset-property-value-history\n[--asset-id <value>]\n[--property-id <value>]\n[--property-alias <value>]\n[--start-date <value>]\n[--end-date <value>]\n[--qualities <value>]\n[--time-ordering <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--asset-id <value>]",
        "[--property-id <value>]",
        "[--property-alias <value>]",
        "[--start-date <value>]",
        "[--end-date <value>]",
        "[--qualities <value>]",
        "[--time-ordering <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset.\n\n--property-id (string)\n\nThe ID of the asset property.\n\n--property-alias (string)\n\nThe alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature ). For more information, see Mapping industrial data streams to asset properties in the IoT SiteWise User Guide .\n\n--start-date (timestamp)\n\nThe exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.\n\n--end-date (timestamp)\n\nThe inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.\n\n--qualities (list)\n\nThe quality by which to filter asset data.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  GOOD\n  BAD\n  UNCERTAIN\n\n\n--time-ordering (string)\n\nThe chronological sorting order of the requested information.\n\nDefault: ASCENDING\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetPropertyValueHistory -> (list)\n\nThe asset property’s value history.\n\n(structure)\n\nContains asset property value information.\n\nvalue -> (structure)\n\nThe value of the asset property (see Variant ).\n\nstringValue -> (string)\n\nAsset property data of type string (sequence of characters).\n\nintegerValue -> (integer)\n\nAsset property data of type integer (whole number).\n\ndoubleValue -> (double)\n\nAsset property data of type double (floating point number).\n\nbooleanValue -> (boolean)\n\nAsset property data of type Boolean (true or false).\n\ntimestamp -> (structure)\n\nThe timestamp of the asset property value.\n\ntimeInSeconds -> (long)\n\nThe timestamp date, in seconds, in the Unix epoch format. Fractional nanosecond data is provided by offsetInNanos .\n\noffsetInNanos -> (integer)\n\nThe nanosecond offset from timeInSeconds .\n\nquality -> (string)\n\nThe quality of the asset property value.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nTo retrieve an asset property’s historical values\n\nThe following get-asset-property-value-history example retrieves a wind turbine asset’s total power values for a 20 minute period in time.\n\naws iotsitewise get-asset-property-value-history \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-33333EXAMPLE \\\n    --property-id a1b2c3d4-5678-90ab-cdef-66666EXAMPLE \\\n    --start-date 1580851800 \\\n    --end-date 1580853000\n\n\nOutput:\n\n{\n    \"assetPropertyValueHistory\": [\n        {\n            \"value\": {\n                \"doubleValue\": 7217.787046814844\n            },\n            \"timestamp\": {\n                \"timeInSeconds\": 1580852100,\n                \"offsetInNanos\": 0\n            },\n            \"quality\": \"GOOD\"\n        },\n        {\n            \"value\": {\n                \"doubleValue\": 6941.242811875451\n            },\n            \"timestamp\": {\n                \"timeInSeconds\": 1580852400,\n                \"offsetInNanos\": 0\n            },\n            \"quality\": \"GOOD\"\n        },\n        {\n            \"value\": {\n                \"doubleValue\": 6976.797662266717\n            },\n            \"timestamp\": {\n                \"timeInSeconds\": 1580852700,\n                \"offsetInNanos\": 0\n            },\n            \"quality\": \"GOOD\"\n        },\n        {\n            \"value\": {\n                \"doubleValue\": 6890.8677520453875\n            },\n            \"timestamp\": {\n                \"timeInSeconds\": 1580853000,\n                \"offsetInNanos\": 0\n            },\n            \"quality\": \"GOOD\"\n        }\n    ]\n}\n\n\nFor more information, see Querying historical asset property values in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "get-interpolated-asset-property-values",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/get-interpolated-asset-property-values.html",
      "command_description": "Description\n\nGet interpolated values for an asset property for a specified time interval, during a period of time. If your time series is missing data points during the specified time interval, you can use interpolation to estimate the missing data.\n\nFor example, you can use this operation to return the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days.\n\nTo identify an asset property, you must specify one of the following:\n\nThe assetId and propertyId of an asset property.\n\nA propertyAlias , which is a data stream alias (for example, /company/windfarm/3/turbine/7/temperature ). To define an asset property’s alias, see UpdateAssetProperty .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-interpolated-asset-property-values is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: interpolatedAssetPropertyValues",
      "command_synopsis": "Synopsis\n  get-interpolated-asset-property-values\n[--asset-id <value>]\n[--property-id <value>]\n[--property-alias <value>]\n--start-time-in-seconds <value>\n[--start-time-offset-in-nanos <value>]\n--end-time-in-seconds <value>\n[--end-time-offset-in-nanos <value>]\n--quality <value>\n--interval-in-seconds <value>\n--type <value>\n[--interval-window-in-seconds <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--asset-id <value>]",
        "[--property-id <value>]",
        "[--property-alias <value>]",
        "--start-time-in-seconds <value>",
        "[--start-time-offset-in-nanos <value>]",
        "--end-time-in-seconds <value>",
        "[--end-time-offset-in-nanos <value>]",
        "--quality <value>",
        "--interval-in-seconds <value>",
        "--type <value>",
        "[--interval-window-in-seconds <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset.\n\n--property-id (string)\n\nThe ID of the asset property.\n\n--property-alias (string)\n\nThe alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature ). For more information, see Mapping industrial data streams to asset properties in the IoT SiteWise User Guide .\n\n--start-time-in-seconds (long)\n\nThe exclusive start of the range from which to interpolate data, expressed in seconds in Unix epoch time.\n\n--start-time-offset-in-nanos (integer)\n\nThe nanosecond offset converted from startTimeInSeconds .\n\n--end-time-in-seconds (long)\n\nThe inclusive end of the range from which to interpolate data, expressed in seconds in Unix epoch time.\n\n--end-time-offset-in-nanos (integer)\n\nThe nanosecond offset converted from endTimeInSeconds .\n\n--quality (string)\n\nThe quality of the asset property value. You can use this parameter as a filter to choose only the asset property values that have a specific quality.\n\nPossible values:\n\nGOOD\n\nBAD\n\nUNCERTAIN\n\n--interval-in-seconds (long)\n\nThe time interval in seconds over which to interpolate data. Each interval starts when the previous one ends.\n\n--type (string)\n\nThe interpolation type.\n\nValid values: LINEAR_INTERPOLATION | LOCF_INTERPOLATION\n\nLINEAR_INTERPOLATION – Estimates missing data using linear interpolation . For example, you can use this operation to return the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days. If the interpolation starts on July 1, 2021, at 9 AM, IoT SiteWise returns the first interpolated value on July 2, 2021, at 9 AM, the second interpolated value on July 3, 2021, at 9 AM, and so on.\n\nLOCF_INTERPOLATION – Estimates missing data using last observation carried forward interpolation If no data point is found for an interval, IoT SiteWise returns the last observed data point for the previous interval and carries forward this interpolated value until a new data point is found. For example, you can get the state of an on-off valve every 24 hours over a duration of 7 days. If the interpolation starts on July 1, 2021, at 9 AM, IoT SiteWise returns the last observed data point between July 1, 2021, at 9 AM and July 2, 2021, at 9 AM as the first interpolated value. If no data point is found after 9 AM on July 2, 2021, IoT SiteWise uses the same interpolated value for the rest of the days.\n\n--interval-window-in-seconds (long)\n\nThe query interval for the window in seconds. IoT SiteWise computes each interpolated value by using data points from the timestamp of each interval minus the window to the timestamp of each interval plus the window. If not specified, the window is between the start time minus the interval and the end time plus the interval.\n\nNote\n\nIf you specify a value for the intervalWindowInSeconds parameter, the type parameter must be LINEAR_INTERPOLATION .\n\nIf no data point is found during the specified query window, IoT SiteWise won’t return an interpolated value for the interval. This indicates that there’s a gap in the ingested data points.\n\nFor example, you can get the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days. If the interpolation starts on July 1, 2021, at 9 AM with a window of 2 hours, IoT SiteWise uses the data points from 7 AM (9 AM - 2 hours) to 11 AM (9 AM + 2 hours) on July 2, 2021 to compute the first interpolated value, uses the data points from 7 AM (9 AM - 2 hours) to 11 AM (9 AM + 2 hours) on July 3, 2021 to compute the second interpolated value, and so on.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninterpolatedAssetPropertyValues -> (list)\n\nThe requested interpolated values.\n\n(structure)\n\nContains information about an interpolated asset property value.\n\ntimestamp -> (structure)\n\nContains a timestamp with optional nanosecond granularity.\n\ntimeInSeconds -> (long)\n\nThe timestamp date, in seconds, in the Unix epoch format. Fractional nanosecond data is provided by offsetInNanos .\n\noffsetInNanos -> (integer)\n\nThe nanosecond offset from timeInSeconds .\n\nvalue -> (structure)\n\nContains an asset property value (of a single type only).\n\nstringValue -> (string)\n\nAsset property data of type string (sequence of characters).\n\nintegerValue -> (integer)\n\nAsset property data of type integer (whole number).\n\ndoubleValue -> (double)\n\nAsset property data of type double (floating point number).\n\nbooleanValue -> (boolean)\n\nAsset property data of type Boolean (true or false).\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results."
    },
    {
      "command_name": "list-access-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-access-policies.html",
      "command_description": "Description\n\nRetrieves a paginated list of access policies for an identity (an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user) or an IoT SiteWise Monitor resource (a portal or project).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-access-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: accessPolicySummaries",
      "command_synopsis": "Synopsis\n  list-access-policies\n[--identity-type <value>]\n[--identity-id <value>]\n[--resource-type <value>]\n[--resource-id <value>]\n[--iam-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--identity-type <value>]",
        "[--identity-id <value>]",
        "[--resource-type <value>]",
        "[--resource-id <value>]",
        "[--iam-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--identity-type (string)\n\nThe type of identity (Amazon Web Services SSO user, Amazon Web Services SSO group, or IAM user). This parameter is required if you specify identityId .\n\nPossible values:\n\nUSER\n\nGROUP\n\nIAM\n\n--identity-id (string)\n\nThe ID of the identity. This parameter is required if you specify USER or GROUP for identityType .\n\n--resource-type (string)\n\nThe type of resource (portal or project). This parameter is required if you specify resourceId .\n\nPossible values:\n\nPORTAL\n\nPROJECT\n\n--resource-id (string)\n\nThe ID of the resource. This parameter is required if you specify resourceType .\n\n--iam-arn (string)\n\nThe ARN of the IAM user. For more information, see IAM ARNs in the IAM User Guide . This parameter is required if you specify IAM for identityType .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\naccessPolicySummaries -> (list)\n\nA list that summarizes each access policy.\n\n(structure)\n\nContains an access policy that defines an identity’s access to an IoT SiteWise Monitor resource.\n\nid -> (string)\n\nThe ID of the access policy.\n\nidentity -> (structure)\n\nThe identity (an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user).\n\nuser -> (structure)\n\nAn Amazon Web Services SSO user identity.\n\nid -> (string)\n\nThe Amazon Web Services SSO ID of the user.\n\ngroup -> (structure)\n\nAn Amazon Web Services SSO group identity.\n\nid -> (string)\n\nThe Amazon Web Services SSO ID of the group.\n\niamUser -> (structure)\n\nAn IAM user identity.\n\narn -> (string)\n\nThe ARN of the IAM user. For more information, see IAM ARNs in the IAM User Guide .\n\nNote\n\nIf you delete the IAM user, access policies that contain this identity include an empty arn . You can delete the access policy for the IAM user that no longer exists.\n\niamRole -> (structure)\n\nAn IAM role identity.\n\narn -> (string)\n\nThe ARN of the IAM role. For more information, see IAM ARNs in the IAM User Guide .\n\nresource -> (structure)\n\nThe IoT SiteWise Monitor resource (a portal or project).\n\nportal -> (structure)\n\nA portal resource.\n\nid -> (string)\n\nThe ID of the portal.\n\nproject -> (structure)\n\nA project resource.\n\nid -> (string)\n\nThe ID of the project.\n\npermission -> (string)\n\nThe permissions for the access policy. Note that a project ADMINISTRATOR is also known as a project owner.\n\ncreationDate -> (timestamp)\n\nThe date the access policy was created, in Unix epoch time.\n\nlastUpdateDate -> (timestamp)\n\nThe date the access policy was last updated, in Unix epoch time.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nTo list all access policies\n\nThe following list-access-policies example lists all access policies for a user who is a portal administrator.\n\naws iotsitewise list-access-policies \\\n    --identity-type USER \\\n    --identity-id a1b2c3d4e5-a1b2c3d4-5678-90ab-cdef-bbbbbEXAMPLE\n\n\nOutput:\n\n{\n    \"accessPolicySummaries\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-cccccEXAMPLE\",\n            \"identity\": {\n                \"user\": {\n                    \"id\": \"a1b2c3d4e5-a1b2c3d4-5678-90ab-cdef-bbbbbEXAMPLE\"\n                }\n            },\n            \"resource\": {\n                \"portal\": {\n                    \"id\": \"a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\"\n                }\n            },\n            \"permission\": \"ADMINISTRATOR\"\n        }\n    ]\n}\n\n\nFor more information, see Administering your portals in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "list-asset-models",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-asset-models.html",
      "command_description": "Description\n\nRetrieves a paginated list of summaries of all asset models.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-asset-models is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: assetModelSummaries",
      "command_synopsis": "Synopsis\n  list-asset-models\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetModelSummaries -> (list)\n\nA list that summarizes each asset model.\n\n(structure)\n\nContains a summary of an asset model.\n\nid -> (string)\n\nThe ID of the asset model (used with IoT SiteWise APIs).\n\narn -> (string)\n\nThe ARN of the asset model, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}\n\nname -> (string)\n\nThe name of the asset model.\n\ndescription -> (string)\n\nThe asset model description.\n\ncreationDate -> (timestamp)\n\nThe date the asset model was created, in Unix epoch time.\n\nlastUpdateDate -> (timestamp)\n\nThe date the asset model was last updated, in Unix epoch time.\n\nstatus -> (structure)\n\nThe current status of the asset model.\n\nstate -> (string)\n\nThe current state of the asset model.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nTo list all asset models\n\nThe following list-asset-models example lists all asset models that are defined in your AWS account in the current Region.\n\naws iotsitewise list-asset-models\n\n\nOutput:\n\n{\n    \"assetModelSummaries\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-22222EXAMPLE\",\n            \"arn\": \"arn:aws:iotsitewise:us-west-2:123456789012:asset-model/a1b2c3d4-5678-90ab-cdef-22222EXAMPLE\",\n            \"name\": \"Wind Farm Model\",\n            \"description\": \"Represents a wind farm that comprises many wind turbines\",\n            \"creationDate\": 1575671284.0,\n            \"lastUpdateDate\": 1575671988.0,\n            \"status\": {\n                \"state\": \"ACTIVE\"\n            }\n        },\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"arn\": \"arn:aws:iotsitewise:us-west-2:123456789012:asset-model/a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"name\": \"Wind Turbine Model\",\n            \"description\": \"Represents a wind turbine manufactured by Example Corp\",\n            \"creationDate\": 1575671207.0,\n            \"lastUpdateDate\": 1575686273.0,\n            \"status\": {\n                \"state\": \"ACTIVE\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see Listing all asset models in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "list-asset-relationships",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-asset-relationships.html",
      "command_description": "Description\n\nRetrieves a paginated list of asset relationships for an asset. You can use this operation to identify an asset’s root asset and all associated assets between that asset and its root.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-asset-relationships is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: assetRelationshipSummaries",
      "command_synopsis": "Synopsis\n  list-asset-relationships\n--asset-id <value>\n--traversal-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-id <value>",
        "--traversal-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset.\n\n--traversal-type (string)\n\nThe type of traversal to use to identify asset relationships. Choose the following option:\n\nPATH_TO_ROOT – Identify the asset’s parent assets up to the root asset. The asset that you specify in assetId is the first result in the list of assetRelationshipSummaries , and the root asset is the last result.\n\nPossible values:\n\nPATH_TO_ROOT\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetRelationshipSummaries -> (list)\n\nA list that summarizes each asset relationship.\n\n(structure)\n\nContains information about assets that are related to one another.\n\nhierarchyInfo -> (structure)\n\nThe assets that are related through an asset hierarchy.\n\nThis object is present if the relationshipType is HIERARCHY .\n\nparentAssetId -> (string)\n\nThe ID of the parent asset in this asset relationship.\n\nchildAssetId -> (string)\n\nThe ID of the child asset in this asset relationship.\n\nrelationshipType -> (string)\n\nThe relationship type of the assets in this relationship. This value is one of the following:\n\nHIERARCHY – The assets are related through an asset hierarchy. If you specify this relationship type, this asset relationship includes the hierarchyInfo object.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results."
    },
    {
      "command_name": "list-assets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-assets.html",
      "command_description": "Description\n\nRetrieves a paginated list of asset summaries.\n\nYou can use this operation to do the following:\n\nList assets based on a specific asset model.\n\nList top-level assets.\n\nYou can’t use this operation to list all assets. To retrieve summaries for all of your assets, use ListAssetModels to get all of your asset model IDs. Then, use ListAssets to get all assets for each asset model.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-assets is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: assetSummaries",
      "command_synopsis": "Synopsis\n  list-assets\n[--asset-model-id <value>]\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--asset-model-id <value>]",
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-model-id (string)\n\nThe ID of the asset model by which to filter the list of assets. This parameter is required if you choose ALL for filter .\n\n--filter (string)\n\nThe filter for the requested list of assets. Choose one of the following options:\n\nALL – The list includes all assets for a given asset model ID. The assetModelId parameter is required if you filter by ALL .\n\nTOP_LEVEL – The list includes only top-level assets in the asset hierarchy tree.\n\nDefault: ALL\n\nPossible values:\n\nALL\n\nTOP_LEVEL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetSummaries -> (list)\n\nA list that summarizes each asset.\n\n(structure)\n\nContains a summary of an asset.\n\nid -> (string)\n\nThe ID of the asset.\n\narn -> (string)\n\nThe ARN of the asset, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}\n\nname -> (string)\n\nThe name of the asset.\n\nassetModelId -> (string)\n\nThe ID of the asset model used to create this asset.\n\ncreationDate -> (timestamp)\n\nThe date the asset was created, in Unix epoch time.\n\nlastUpdateDate -> (timestamp)\n\nThe date the asset was last updated, in Unix epoch time.\n\nstatus -> (structure)\n\nThe current status of the asset.\n\nstate -> (string)\n\nThe current status of the asset.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\nhierarchies -> (list)\n\nA list of asset hierarchies that each contain a hierarchyId . A hierarchy specifies allowed parent/child asset relationships.\n\n(structure)\n\nDescribes an asset hierarchy that contains a hierarchy’s name and ID.\n\nid -> (string)\n\nThe ID of the hierarchy. This ID is a hierarchyId .\n\nname -> (string)\n\nThe hierarchy name provided in the CreateAssetModel or UpdateAssetModel API operation.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nExample 1: To list all top-level assets\n\nThe following list-assets example lists all assets that are top-level in the asset hierarchy tree and defined in your AWS account in the current Region.\n\naws iotsitewise list-assets \\\n    --filter TOP_LEVEL\n\n\nOutput:\n\n{\n    \"assetSummaries\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\",\n            \"arn\": \"arn:aws:iotsitewise:us-west-2:123456789012:asset/a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\",\n            \"name\": \"Wind Farm 1\",\n            \"assetModelId\": \"a1b2c3d4-5678-90ab-cdef-22222EXAMPLE\",\n            \"creationDate\": 1575672453.0,\n            \"lastUpdateDate\": 1575672453.0,\n            \"status\": {\n                \"state\": \"ACTIVE\"\n            },\n            \"hierarchies\": [\n                {\n                    \"id\": \"a1b2c3d4-5678-90ab-cdef-77777EXAMPLE\",\n                    \"name\": \"Wind Turbines\"\n                }\n            ]\n        }\n    ]\n}\n\n\nFor more information, see Listing assets in the AWS IoT SiteWise User Guide.\n\nExample 2: To list all assets based on an asset model\n\nThe following list-assets example lists all assets based on an asset model and defined in your AWS account in the current Region.\n\naws iotsitewise list-assets \\\n    --asset-model-id a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\n\n\nOutput:\n\n{\n    \"assetSummaries\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-33333EXAMPLE\",\n            \"arn\": \"arn:aws:iotsitewise:us-west-2:123456789012:asset/a1b2c3d4-5678-90ab-cdef-33333EXAMPLE\",\n            \"name\": \"Wind Turbine 1\",\n            \"assetModelId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"creationDate\": 1575671550.0,\n            \"lastUpdateDate\": 1575686308.0,\n            \"status\": {\n                \"state\": \"ACTIVE\"\n            },\n            \"hierarchies\": []\n        }\n    ]\n}\n\n\nFor more information, see Listing assets in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "list-associated-assets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-associated-assets.html",
      "command_description": "Description\n\nRetrieves a paginated list of associated assets.\n\nYou can use this operation to do the following:\n\nList child assets associated to a parent asset by a hierarchy that you specify.\n\nList an asset’s parent asset.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-associated-assets is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: assetSummaries",
      "command_synopsis": "Synopsis\n  list-associated-assets\n--asset-id <value>\n[--hierarchy-id <value>]\n[--traversal-direction <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-id <value>",
        "[--hierarchy-id <value>]",
        "[--traversal-direction <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset to query.\n\n--hierarchy-id (string)\n\nThe ID of the hierarchy by which child assets are associated to the asset. To find a hierarchy ID, use the DescribeAsset or DescribeAssetModel operations. This parameter is required if you choose CHILD for traversalDirection .\n\nFor more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\n--traversal-direction (string)\n\nThe direction to list associated assets. Choose one of the following options:\n\nCHILD – The list includes all child assets associated to the asset. The hierarchyId parameter is required if you choose CHILD .\n\nPARENT – The list includes the asset’s parent asset.\n\nDefault: CHILD\n\nPossible values:\n\nPARENT\n\nCHILD\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetSummaries -> (list)\n\nA list that summarizes the associated assets.\n\n(structure)\n\nContains a summary of an associated asset.\n\nid -> (string)\n\nThe ID of the asset.\n\narn -> (string)\n\nThe ARN of the asset, which has the following format.\n\narn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}\n\nname -> (string)\n\nThe name of the asset.\n\nassetModelId -> (string)\n\nThe ID of the asset model used to create the asset.\n\ncreationDate -> (timestamp)\n\nThe date the asset was created, in Unix epoch time.\n\nlastUpdateDate -> (timestamp)\n\nThe date the asset was last updated, in Unix epoch time.\n\nstatus -> (structure)\n\nThe current status of the asset.\n\nstate -> (string)\n\nThe current status of the asset.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\nhierarchies -> (list)\n\nA list of asset hierarchies that each contain a hierarchyId . A hierarchy specifies allowed parent/child asset relationships.\n\n(structure)\n\nDescribes an asset hierarchy that contains a hierarchy’s name and ID.\n\nid -> (string)\n\nThe ID of the hierarchy. This ID is a hierarchyId .\n\nname -> (string)\n\nThe hierarchy name provided in the CreateAssetModel or UpdateAssetModel API operation.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nTo list all assets associated to an asset in a specific hierarchy\n\nThe following list-associated-assets example lists all wind turbine assets associated to the specified wind farm asset.\n\naws iotsitewise list-associated-assets \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-44444EXAMPLE \\\n    --hierarchy-id a1b2c3d4-5678-90ab-cdef-77777EXAMPLE\n\n\nOutput:\n\n{\n    \"assetSummaries\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-33333EXAMPLE\",\n            \"arn\": \"arn:aws:iotsitewise:us-west-2:123456789012:asset/a1b2c3d4-5678-90ab-cdef-33333EXAMPLE\",\n            \"name\": \"Wind Turbine 1\",\n            \"assetModelId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n            \"creationDate\": 1575671550.0,\n            \"lastUpdateDate\": 1575686308.0,\n            \"status\": {\n                \"state\": \"ACTIVE\"\n            },\n            \"hierarchies\": []\n        }\n    ]\n}\n\n\nFor more information, see Listing assets associated to a specific asset in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "list-dashboards",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-dashboards.html",
      "command_description": "Description\n\nRetrieves a paginated list of dashboards for an IoT SiteWise Monitor project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-dashboards is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: dashboardSummaries",
      "command_synopsis": "Synopsis\n  list-dashboards\n--project-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-id (string)\n\nThe ID of the project.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndashboardSummaries -> (list)\n\nA list that summarizes each dashboard in the project.\n\n(structure)\n\nContains a dashboard summary.\n\nid -> (string)\n\nThe ID of the dashboard.\n\nname -> (string)\n\nThe name of the dashboard\n\ndescription -> (string)\n\nThe dashboard’s description.\n\ncreationDate -> (timestamp)\n\nThe date the dashboard was created, in Unix epoch time.\n\nlastUpdateDate -> (timestamp)\n\nThe date the dashboard was last updated, in Unix epoch time.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nTo list all dashboards in a project\n\nThe following list-dashboards example lists all dashboards that are defined in a project.\n\naws iotsitewise list-dashboards \\\n    --project-id a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\n\n\nOutput:\n\n{\n    \"dashboardSummaries\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-fffffEXAMPLE\",\n            \"name\": \"Wind Farm\",\n            \"creationDate\": \"2020-05-01T20:32:12.228476348Z\",\n            \"lastUpdateDate\": \"2020-05-01T20:32:12.228476348Z\"\n        }\n    ]\n}\n\n\nFor more information, see Viewing dashboards in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "list-gateways",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-gateways.html",
      "command_description": "Description\n\nRetrieves a paginated list of gateways.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-gateways is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: gatewaySummaries",
      "command_synopsis": "Synopsis\n  list-gateways\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngatewaySummaries -> (list)\n\nA list that summarizes each gateway.\n\n(structure)\n\nContains a summary of a gateway.\n\ngatewayId -> (string)\n\nThe ID of the gateway device.\n\ngatewayName -> (string)\n\nThe name of the asset.\n\ngatewayPlatform -> (structure)\n\nContains a gateway’s platform information.\n\ngreengrass -> (structure)\n\nA gateway that runs on IoT Greengrass.\n\ngroupArn -> (string)\n\nThe ARN of the Greengrass group. For more information about how to find a group’s ARN, see ListGroups and GetGroup in the IoT Greengrass API Reference .\n\ngreengrassV2 -> (structure)\n\nA gateway that runs on IoT Greengrass V2.\n\ncoreDeviceThingName -> (string)\n\nThe name of the IoT thing for your IoT Greengrass V2 core device.\n\ngatewayCapabilitySummaries -> (list)\n\nA list of gateway capability summaries that each contain a namespace and status. Each gateway capability defines data sources for the gateway. To retrieve a capability configuration’s definition, use DescribeGatewayCapabilityConfiguration .\n\n(structure)\n\nContains a summary of a gateway capability configuration.\n\ncapabilityNamespace -> (string)\n\nThe namespace of the capability configuration. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace iotsitewise:opcuacollector:version , where version is a number such as 1 .\n\ncapabilitySyncStatus -> (string)\n\nThe synchronization status of the capability configuration. The sync status can be one of the following:\n\nIN_SYNC – The gateway is running the capability configuration.\n\nOUT_OF_SYNC – The gateway hasn’t received the capability configuration.\n\nSYNC_FAILED – The gateway rejected the capability configuration.\n\ncreationDate -> (timestamp)\n\nThe date the gateway was created, in Unix epoch time.\n\nlastUpdateDate -> (timestamp)\n\nThe date the gateway was last updated, in Unix epoch time.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nTo list all gateways\n\nThe following list-gateways example lists all gateways that are defined in your AWS account in the current Region.\n\naws iotsitewise list-gateways\n\n\nOutput:\n\n{\n    \"gatewaySummaries\": [\n        {\n            \"gatewayId\": \"a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE\",\n            \"gatewayName\": \"ExampleCorpGateway\",\n            \"gatewayCapabilitySummaries\": [\n                {\n                    \"capabilityNamespace\": \"iotsitewise:opcuacollector:1\",\n                    \"capabilitySyncStatus\": \"IN_SYNC\"\n                }\n            ],\n            \"creationDate\": 1588369971.457,\n            \"lastUpdateDate\": 1588369971.457\n        }\n    ]\n}\n\n\nFor more information, see Ingesting data using a gateway in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "list-portals",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-portals.html",
      "command_description": "Description\n\nRetrieves a paginated list of IoT SiteWise Monitor portals.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-portals is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: portalSummaries",
      "command_synopsis": "Synopsis\n  list-portals\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nportalSummaries -> (list)\n\nA list that summarizes each portal.\n\n(structure)\n\nContains a portal summary.\n\nid -> (string)\n\nThe ID of the portal.\n\nname -> (string)\n\nThe name of the portal.\n\ndescription -> (string)\n\nThe portal’s description.\n\nstartUrl -> (string)\n\nThe URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use Amazon Web Services SSO for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.\n\ncreationDate -> (timestamp)\n\nThe date the portal was created, in Unix epoch time.\n\nlastUpdateDate -> (timestamp)\n\nThe date the portal was last updated, in Unix epoch time.\n\nroleArn -> (string)\n\nThe ARN of the service role that allows the portal’s users to access your IoT SiteWise resources on your behalf. For more information, see Using service roles for IoT SiteWise Monitor in the IoT SiteWise User Guide .\n\nstatus -> (structure)\n\nContains information about the current status of a portal.\n\nstate -> (string)\n\nThe current state of the portal.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nTo list all portals\n\nThe following list-portals example lists all portals that are defined in your AWS account in the current Region.\n\naws iotsitewise list-portals\n\n\nOutput:\n\n{\n    \"portalSummaries\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\",\n            \"name\": \"WindFarmPortal\",\n            \"description\": \"A portal that contains wind farm projects for Example Corp.\",\n            \"startUrl\": \"https://a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE.app.iotsitewise.aws\",\n            \"creationDate\": \"2020-02-04T23:01:52.90248068Z\",\n            \"lastUpdateDate\": \"2020-02-04T23:01:52.90248078Z\",\n            \"roleArn\": \"arn:aws:iam::123456789012:role/service-role/MySiteWiseMonitorServiceRole\"\n        }\n    ]\n}\n\n\nFor more information, see Administering your portals in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "list-project-assets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-project-assets.html",
      "command_description": "Description\n\nRetrieves a paginated list of assets associated with an IoT SiteWise Monitor project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-project-assets is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: assetIds",
      "command_synopsis": "Synopsis\n  list-project-assets\n--project-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-id (string)\n\nThe ID of the project.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetIds -> (list)\n\nA list that contains the IDs of each asset associated with the project.\n\n(string)\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nTo list all assets associated to a project\n\nThe following list-project-assets example lists all assets that are associated to a wind farm project.\n\naws iotsitewise list-projects \\\n    --project-id a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\n\n\nOutput:\n\n{\n    \"assetIds\": [\n        \"a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\"\n    ]\n}\n\n\nFor more information, see Adding assets to projects in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "list-projects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-projects.html",
      "command_description": "Description\n\nRetrieves a paginated list of projects for an IoT SiteWise Monitor portal.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-projects is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: projectSummaries",
      "command_synopsis": "Synopsis\n  list-projects\n--portal-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--portal-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--portal-id (string)\n\nThe ID of the portal.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nprojectSummaries -> (list)\n\nA list that summarizes each project in the portal.\n\n(structure)\n\nContains project summary information.\n\nid -> (string)\n\nThe ID of the project.\n\nname -> (string)\n\nThe name of the project.\n\ndescription -> (string)\n\nThe project’s description.\n\ncreationDate -> (timestamp)\n\nThe date the project was created, in Unix epoch time.\n\nlastUpdateDate -> (timestamp)\n\nThe date the project was last updated, in Unix epoch time.\n\nnextToken -> (string)\n\nThe token for the next set of results, or null if there are no additional results.",
      "command_examples": "Examples\n\nTo list all projects in a portal\n\nThe following list-projects example lists all projects that are defined in a portal.\n\naws iotsitewise list-projects \\\n    --portal-id a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE\n\n\nOutput:\n\n{\n    \"projectSummaries\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\",\n            \"name\": \"Wind Farm 1\",\n            \"description\": \"Contains asset visualizations for Wind Farm #1 for Example Corp.\",\n            \"creationDate\": \"2020-02-20T21:58:43.362246001Z\",\n            \"lastUpdateDate\": \"2020-02-20T21:58:43.362246095Z\"\n        }\n    ]\n}\n\n\nFor more information, see Viewing project details in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/list-tags-for-resource.html",
      "command_description": "Description\n\nRetrieves the list of tags for an IoT SiteWise resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (map)\n\nThe list of key-value pairs that contain metadata for the resource. For more information, see Tagging your IoT SiteWise resources in the IoT SiteWise User Guide .\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo list all tags for a resource\n\nThe following list-tags-for-resource example lists all tags for a wind turbine asset.\n\naws iotsitewise list-tags-for-resource \\\n    --resource-arn arn:aws:iotsitewise:us-west-2:123456789012:asset/a1b2c3d4-5678-90ab-cdef-33333EXAMPLE\n\n\nOutput:\n\n{\n    \"tags\": {\n        \"Owner\": \"richard-roe\"\n    }\n}\n\n\nFor more information, see Tagging your resources in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "put-default-encryption-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/put-default-encryption-configuration.html",
      "command_description": "Description\n\nSets the default encryption configuration for the Amazon Web Services account. For more information, see Key management in the IoT SiteWise User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-default-encryption-configuration\n--encryption-type <value>\n[--kms-key-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--encryption-type <value>",
        "[--kms-key-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--encryption-type (string)\n\nThe type of encryption used for the encryption configuration.\n\nPossible values:\n\nSITEWISE_DEFAULT_ENCRYPTION\n\nKMS_BASED_ENCRYPTION\n\n--kms-key-id (string)\n\nThe Key ID of the customer managed customer master key (CMK) used for KMS encryption. This is required if you use KMS_BASED_ENCRYPTION .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nencryptionType -> (string)\n\nThe type of encryption used for the encryption configuration.\n\nkmsKeyArn -> (string)\n\nThe Key ARN of the KMS CMK used for KMS encryption if you use KMS_BASED_ENCRYPTION .\n\nconfigurationStatus -> (structure)\n\nThe status of the account configuration. This contains the ConfigurationState . If there is an error, it also contains the ErrorDetails .\n\nstate -> (string)\n\nThe current state of the configuration.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message."
    },
    {
      "command_name": "put-logging-options",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/put-logging-options.html",
      "command_description": "Description\n\nSets logging options for IoT SiteWise.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-logging-options\n--logging-options <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--logging-options <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--logging-options (structure)\n\nThe logging options to set.\n\nlevel -> (string)\n\nThe IoT SiteWise logging verbosity level.\n\nShorthand Syntax:\n\nlevel=string\n\n\nJSON Syntax:\n\n{\n  \"level\": \"ERROR\"|\"INFO\"|\"OFF\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo specify the level of logging\n\nThe following put-logging-options example enables INFO level logging in AWS IoT SiteWise. Other levels include DEBUG and OFF.\n\naws iotsitewise put-logging-options \\\n    --logging-options level=INFO\n\n\nThis command produces no output.\n\nFor more information, see Monitoring AWS IoT SiteWise with Amazon CloudWatch Logs in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "put-storage-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/put-storage-configuration.html",
      "command_description": "Description\n\nConfigures storage settings for IoT SiteWise.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-storage-configuration\n--storage-type <value>\n[--multi-layer-storage <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--storage-type <value>",
        "[--multi-layer-storage <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--storage-type (string)\n\nThe type of storage that you specified for your data. The storage type can be one of the following values:\n\nSITEWISE_DEFAULT_STORAGE – IoT SiteWise replicates your data into a service managed database.\n\nMULTI_LAYER_STORAGE – IoT SiteWise replicates your data into a service managed database and saves a copy of your raw data and metadata in an Amazon S3 object that you specified.\n\nPossible values:\n\nSITEWISE_DEFAULT_STORAGE\n\nMULTI_LAYER_STORAGE\n\n--multi-layer-storage (structure)\n\nIdentifies a storage destination. If you specified MULTI_LAYER_STORAGE for the storage type, you must specify a MultiLayerStorage object.\n\ncustomerManagedS3Storage -> (structure)\n\nContains information about a customer managed Amazon S3 bucket.\n\ns3ResourceArn -> (string)\n\nThe ARN of the Amazon S3 object. For more information about how to find the ARN for an Amazon S3 object, see Amazon S3 resources in the Amazon Simple Storage Service User Guide .\n\nroleArn -> (string)\n\nThe ARN of the Identity and Access Management role that allows IoT SiteWise to send data to Amazon S3.\n\nShorthand Syntax:\n\ncustomerManagedS3Storage={s3ResourceArn=string,roleArn=string}\n\n\nJSON Syntax:\n\n{\n  \"customerManagedS3Storage\": {\n    \"s3ResourceArn\": \"string\",\n    \"roleArn\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstorageType -> (string)\n\nThe type of storage that you specified for your data. The storage type can be one of the following values:\n\nSITEWISE_DEFAULT_STORAGE – IoT SiteWise replicates your data into a service managed database.\n\nMULTI_LAYER_STORAGE – IoT SiteWise replicates your data into a service managed database and saves a copy of your raw data and metadata in an Amazon S3 object that you specified.\n\nmultiLayerStorage -> (structure)\n\nContains information about the storage destination.\n\ncustomerManagedS3Storage -> (structure)\n\nContains information about a customer managed Amazon S3 bucket.\n\ns3ResourceArn -> (string)\n\nThe ARN of the Amazon S3 object. For more information about how to find the ARN for an Amazon S3 object, see Amazon S3 resources in the Amazon Simple Storage Service User Guide .\n\nroleArn -> (string)\n\nThe ARN of the Identity and Access Management role that allows IoT SiteWise to send data to Amazon S3.\n\nconfigurationStatus -> (structure)\n\nContains current status information for the configuration.\n\nstate -> (string)\n\nThe current state of the configuration.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/tag-resource.html",
      "command_description": "Description\n\nAdds tags to an IoT SiteWise resource. If a tag already exists for the resource, this operation updates the tag’s value.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource to tag.\n\n--tags (map)\n\nA list of key-value pairs that contain metadata for the resource. For more information, see Tagging your IoT SiteWise resources in the IoT SiteWise User Guide .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a tag to a resource\n\nThe following tag-resource example adds an owner tag to a wind turbine asset. This lets you control access to the asset based on who owns it.\n\naws iotsitewise tag-resource \\\n    --resource-arn arn:aws:iotsitewise:us-west-2:123456789012:asset/a1b2c3d4-5678-90ab-cdef-33333EXAMPLE \\\n    --tags Owner=richard-roe\n\n\nThis command produces no output.\n\nFor more information, see Tagging your resources in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/untag-resource.html",
      "command_description": "Description\n\nRemoves a tag from an IoT SiteWise resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource to untag.\n\n--tag-keys (list)\n\nA list of keys for tags to remove from the resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a tag from a resource\n\nThe following untag-resource example removes an owner tag from a wind turbine asset.\n\naws iotsitewise untag-resource \\\n    --resource-arn arn:aws:iotsitewise:us-west-2:123456789012:asset/a1b2c3d4-5678-90ab-cdef-33333EXAMPLE \\\n    --tag-keys Owner\n\n\nThis command produces no output.\n\nFor more information, see Tagging your resources in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "update-access-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/update-access-policy.html",
      "command_description": "Description\n\nUpdates an existing access policy that specifies an identity’s access to an IoT SiteWise Monitor portal or project resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-access-policy\n--access-policy-id <value>\n--access-policy-identity <value>\n--access-policy-resource <value>\n--access-policy-permission <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--access-policy-id <value>",
        "--access-policy-identity <value>",
        "--access-policy-resource <value>",
        "--access-policy-permission <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--access-policy-id (string)\n\nThe ID of the access policy.\n\n--access-policy-identity (structure)\n\nThe identity for this access policy. Choose an Amazon Web Services SSO user, an Amazon Web Services SSO group, or an IAM user.\n\nuser -> (structure)\n\nAn Amazon Web Services SSO user identity.\n\nid -> (string)\n\nThe Amazon Web Services SSO ID of the user.\n\ngroup -> (structure)\n\nAn Amazon Web Services SSO group identity.\n\nid -> (string)\n\nThe Amazon Web Services SSO ID of the group.\n\niamUser -> (structure)\n\nAn IAM user identity.\n\narn -> (string)\n\nThe ARN of the IAM user. For more information, see IAM ARNs in the IAM User Guide .\n\nNote\n\nIf you delete the IAM user, access policies that contain this identity include an empty arn . You can delete the access policy for the IAM user that no longer exists.\n\niamRole -> (structure)\n\nAn IAM role identity.\n\narn -> (string)\n\nThe ARN of the IAM role. For more information, see IAM ARNs in the IAM User Guide .\n\nShorthand Syntax:\n\nuser={id=string},group={id=string},iamUser={arn=string},iamRole={arn=string}\n\n\nJSON Syntax:\n\n{\n  \"user\": {\n    \"id\": \"string\"\n  },\n  \"group\": {\n    \"id\": \"string\"\n  },\n  \"iamUser\": {\n    \"arn\": \"string\"\n  },\n  \"iamRole\": {\n    \"arn\": \"string\"\n  }\n}\n\n\n--access-policy-resource (structure)\n\nThe IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.\n\nportal -> (structure)\n\nA portal resource.\n\nid -> (string)\n\nThe ID of the portal.\n\nproject -> (structure)\n\nA project resource.\n\nid -> (string)\n\nThe ID of the project.\n\nShorthand Syntax:\n\nportal={id=string},project={id=string}\n\n\nJSON Syntax:\n\n{\n  \"portal\": {\n    \"id\": \"string\"\n  },\n  \"project\": {\n    \"id\": \"string\"\n  }\n}\n\n\n--access-policy-permission (string)\n\nThe permission level for this access policy. Note that a project ADMINISTRATOR is also known as a project owner.\n\nPossible values:\n\nADMINISTRATOR\n\nVIEWER\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo grant a project viewer ownership of a project\n\nThe following update-access-policy example updates an access policy that grants a project viewer ownership of a project.\n\naws iotsitewise update-access-policy \\\n    --access-policy-id a1b2c3d4-5678-90ab-cdef-dddddEXAMPLE \\\n    --cli-input-json file://update-project-viewer-access-policy.json\n\n\nContents of update-project-viewer-access-policy.json:\n\n{\n    \"accessPolicyIdentity\": {\n        \"user\": {\n            \"id\": \"a1b2c3d4e5-a1b2c3d4-5678-90ab-cdef-bbbbbEXAMPLE\"\n        }\n    },\n    \"accessPolicyPermission\": \"ADMINISTRATOR\",\n    \"accessPolicyResource\": {\n        \"project\": {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE\"\n        }\n    }\n}\n\n\nThis command produces no output.\n\nFor more information, see Assigning project owners in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "update-asset",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/update-asset.html",
      "command_description": "Description\n\nUpdates an asset’s name. For more information, see Updating assets and models in the IoT SiteWise User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-asset\n--asset-id <value>\n--asset-name <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-id <value>",
        "--asset-name <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset to update.\n\n--asset-name (string)\n\nA unique, friendly name for the asset.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetStatus -> (structure)\n\nThe status of the asset, which contains a state (UPDATING after successfully calling this operation) and any error message.\n\nstate -> (string)\n\nThe current status of the asset.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo update an asset’s name\n\nThe following update-asset example updates a wind turbine asset’s name.\n\naws iotsitewise update-asset \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-33333EXAMPLE \\\n    --asset-name \"Wind Turbine 2\"\n\n\nOutput:\n\n{\n    \"assetStatus\": {\n        \"state\": \"UPDATING\"\n    }\n}\n\n\nFor more information, see Updating assets in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "update-asset-model",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/update-asset-model.html",
      "command_description": "Description\n\nUpdates an asset model and all of the assets that were created from the model. Each asset created from the model inherits the updated asset model’s property and hierarchy definitions. For more information, see Updating assets and models in the IoT SiteWise User Guide .\n\nWarning\n\nThis operation overwrites the existing model with the provided model. To avoid deleting your asset model’s properties or hierarchies, you must include their IDs and definitions in the updated asset model payload. For more information, see DescribeAssetModel .\n\nIf you remove a property from an asset model, IoT SiteWise deletes all previous data for that property. If you remove a hierarchy definition from an asset model, IoT SiteWise disassociates every asset associated with that hierarchy. You can’t change the type or data type of an existing property.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-asset-model\n--asset-model-id <value>\n--asset-model-name <value>\n[--asset-model-description <value>]\n[--asset-model-properties <value>]\n[--asset-model-hierarchies <value>]\n[--asset-model-composite-models <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-model-id <value>",
        "--asset-model-name <value>",
        "[--asset-model-description <value>]",
        "[--asset-model-properties <value>]",
        "[--asset-model-hierarchies <value>]",
        "[--asset-model-composite-models <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-model-id (string)\n\nThe ID of the asset model to update.\n\n--asset-model-name (string)\n\nA unique, friendly name for the asset model.\n\n--asset-model-description (string)\n\nA description for the asset model.\n\n--asset-model-properties (list)\n\nThe updated property definitions of the asset model. For more information, see Asset properties in the IoT SiteWise User Guide .\n\nYou can specify up to 200 properties per asset model. For more information, see Quotas in the IoT SiteWise User Guide .\n\n(structure)\n\nContains information about an asset model property.\n\nid -> (string)\n\nThe ID of the asset model property.\n\nname -> (string)\n\nThe name of the asset model property.\n\ndataType -> (string)\n\nThe data type of the asset model property.\n\ndataTypeSpec -> (string)\n\nThe data type of the structure for this property. This parameter exists on properties that have the STRUCT data type.\n\nunit -> (string)\n\nThe unit of the asset model property, such as Newtons or RPM .\n\ntype -> (structure)\n\nThe property type (see PropertyType ).\n\nattribute -> (structure)\n\nSpecifies an asset attribute property. An attribute generally contains static information, such as the serial number of an IIoT wind turbine.\n\ndefaultValue -> (string)\n\nThe default value of the asset model property attribute. All assets that you create from the asset model contain this attribute value. You can update an attribute’s value after you create an asset. For more information, see Updating attribute values in the IoT SiteWise User Guide .\n\nmeasurement -> (structure)\n\nSpecifies an asset measurement property. A measurement represents a device’s raw sensor data stream, such as timestamped temperature values or timestamped power values.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for the given measurement property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\ntransform -> (structure)\n\nSpecifies an asset transform property. A transform contains a mathematical expression that maps a property’s data points from one form to another, such as a unit conversion from Celsius to Fahrenheit.\n\nexpression -> (string)\n\nThe mathematical expression that defines the transformation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given transform property.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for a given property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\nmetric -> (structure)\n\nSpecifies an asset metric property. A metric contains a mathematical expression that uses aggregate functions to process all input data points over a time interval and output a single data point, such as to calculate the average hourly temperature.\n\nexpression -> (string)\n\nThe mathematical expression that defines the metric aggregation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nwindow -> (structure)\n\nThe window (time interval) over which IoT SiteWise computes the metric’s aggregation expression. IoT SiteWise computes one data point per window .\n\ntumbling -> (structure)\n\nThe tumbling time interval window.\n\ninterval -> (string)\n\nThe time interval for the tumbling window. The interval time must be between 1 minute and 1 week.\n\nIoT SiteWise computes the 1w interval the end of Sunday at midnight each week (UTC), the 1d interval at the end of each day at midnight (UTC), the 1h interval at the end of each hour, and so on.\n\nWhen IoT SiteWise aggregates data points for metric computations, the start of each interval is exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at the end of the interval.\n\noffset -> (string)\n\nThe offset for the tumbling window. The offset parameter accepts the following:\n\nThe offset time. For example, if you specify 18h for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe ISO 8601 format. For example, if you specify PT18H for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe 24-hour clock. For example, if you specify 00:03:00 for offset and 5m for interval , and you create the metric at 2 PM (UTC), you get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC).\n\nThe offset time zone. For example, if you specify 2021-07-23T18:00-08 for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) the next day.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given metric property.\n\nJSON Syntax:\n\n[\n  {\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"dataType\": \"STRING\"|\"INTEGER\"|\"DOUBLE\"|\"BOOLEAN\"|\"STRUCT\",\n    \"dataTypeSpec\": \"string\",\n    \"unit\": \"string\",\n    \"type\": {\n      \"attribute\": {\n        \"defaultValue\": \"string\"\n      },\n      \"measurement\": {\n        \"processingConfig\": {\n          \"forwardingConfig\": {\n            \"state\": \"DISABLED\"|\"ENABLED\"\n          }\n        }\n      },\n      \"transform\": {\n        \"expression\": \"string\",\n        \"variables\": [\n          {\n            \"name\": \"string\",\n            \"value\": {\n              \"propertyId\": \"string\",\n              \"hierarchyId\": \"string\"\n            }\n          }\n          ...\n        ],\n        \"processingConfig\": {\n          \"computeLocation\": \"EDGE\"|\"CLOUD\",\n          \"forwardingConfig\": {\n            \"state\": \"DISABLED\"|\"ENABLED\"\n          }\n        }\n      },\n      \"metric\": {\n        \"expression\": \"string\",\n        \"variables\": [\n          {\n            \"name\": \"string\",\n            \"value\": {\n              \"propertyId\": \"string\",\n              \"hierarchyId\": \"string\"\n            }\n          }\n          ...\n        ],\n        \"window\": {\n          \"tumbling\": {\n            \"interval\": \"string\",\n            \"offset\": \"string\"\n          }\n        },\n        \"processingConfig\": {\n          \"computeLocation\": \"EDGE\"|\"CLOUD\"\n        }\n      }\n    }\n  }\n  ...\n]\n\n\n--asset-model-hierarchies (list)\n\nThe updated hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nYou can specify up to 10 hierarchies per asset model. For more information, see Quotas in the IoT SiteWise User Guide .\n\n(structure)\n\nDescribes an asset hierarchy that contains a hierarchy’s name, ID, and child asset model ID that specifies the type of asset that can be in this hierarchy.\n\nid -> (string)\n\nThe ID of the asset model hierarchy. This ID is a hierarchyId .\n\nname -> (string)\n\nThe name of the asset model hierarchy that you specify by using the CreateAssetModel or UpdateAssetModel API operation.\n\nchildAssetModelId -> (string)\n\nThe ID of the asset model. All assets in this hierarchy must be instances of the childAssetModelId asset model.\n\nShorthand Syntax:\n\nid=string,name=string,childAssetModelId=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"childAssetModelId\": \"string\"\n  }\n  ...\n]\n\n\n--asset-model-composite-models (list)\n\nThe composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.\n\n(structure)\n\nContains information about a composite model in an asset model. This object contains the asset property definitions that you define in the composite model.\n\nname -> (string)\n\nThe name of the composite model.\n\ndescription -> (string)\n\nThe description of the composite model.\n\ntype -> (string)\n\nThe type of the composite model. For alarm composite models, this type is AWS/ALARM .\n\nproperties -> (list)\n\nThe asset property definitions for this composite model.\n\n(structure)\n\nContains information about an asset model property.\n\nid -> (string)\n\nThe ID of the asset model property.\n\nname -> (string)\n\nThe name of the asset model property.\n\ndataType -> (string)\n\nThe data type of the asset model property.\n\ndataTypeSpec -> (string)\n\nThe data type of the structure for this property. This parameter exists on properties that have the STRUCT data type.\n\nunit -> (string)\n\nThe unit of the asset model property, such as Newtons or RPM .\n\ntype -> (structure)\n\nThe property type (see PropertyType ).\n\nattribute -> (structure)\n\nSpecifies an asset attribute property. An attribute generally contains static information, such as the serial number of an IIoT wind turbine.\n\ndefaultValue -> (string)\n\nThe default value of the asset model property attribute. All assets that you create from the asset model contain this attribute value. You can update an attribute’s value after you create an asset. For more information, see Updating attribute values in the IoT SiteWise User Guide .\n\nmeasurement -> (structure)\n\nSpecifies an asset measurement property. A measurement represents a device’s raw sensor data stream, such as timestamped temperature values or timestamped power values.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for the given measurement property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\ntransform -> (structure)\n\nSpecifies an asset transform property. A transform contains a mathematical expression that maps a property’s data points from one form to another, such as a unit conversion from Celsius to Fahrenheit.\n\nexpression -> (string)\n\nThe mathematical expression that defines the transformation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given transform property.\n\nforwardingConfig -> (structure)\n\nThe forwarding configuration for a given property.\n\nstate -> (string)\n\nThe forwarding state for the given property.\n\nmetric -> (structure)\n\nSpecifies an asset metric property. A metric contains a mathematical expression that uses aggregate functions to process all input data points over a time interval and output a single data point, such as to calculate the average hourly temperature.\n\nexpression -> (string)\n\nThe mathematical expression that defines the metric aggregation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression.\n\nFor more information, see Quotas in the IoT SiteWise User Guide .\n\nvariables -> (list)\n\nThe list of variables used in the expression.\n\n(structure)\n\nContains expression variable information.\n\nname -> (string)\n\nThe friendly name of the variable to be used in the expression.\n\nvalue -> (structure)\n\nThe variable that identifies an asset property from which to use values.\n\npropertyId -> (string)\n\nThe ID of the property to use as the variable. You can use the property name if it’s from the same asset model.\n\nhierarchyId -> (string)\n\nThe ID of the hierarchy to query for the property ID. You can use the hierarchy’s name instead of the hierarchy’s ID.\n\nYou use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same propertyId . For example, you might have separately grouped assets that come from the same asset model. For more information, see Asset hierarchies in the IoT SiteWise User Guide .\n\nwindow -> (structure)\n\nThe window (time interval) over which IoT SiteWise computes the metric’s aggregation expression. IoT SiteWise computes one data point per window .\n\ntumbling -> (structure)\n\nThe tumbling time interval window.\n\ninterval -> (string)\n\nThe time interval for the tumbling window. The interval time must be between 1 minute and 1 week.\n\nIoT SiteWise computes the 1w interval the end of Sunday at midnight each week (UTC), the 1d interval at the end of each day at midnight (UTC), the 1h interval at the end of each hour, and so on.\n\nWhen IoT SiteWise aggregates data points for metric computations, the start of each interval is exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at the end of the interval.\n\noffset -> (string)\n\nThe offset for the tumbling window. The offset parameter accepts the following:\n\nThe offset time. For example, if you specify 18h for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe ISO 8601 format. For example, if you specify PT18H for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.\n\nThe 24-hour clock. For example, if you specify 00:03:00 for offset and 5m for interval , and you create the metric at 2 PM (UTC), you get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC).\n\nThe offset time zone. For example, if you specify 2021-07-23T18:00-08 for offset and 1d for interval , IoT SiteWise aggregates data in one of the following ways:\n\nIf you create the metric before or at 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) on the day when you create the metric.\n\nIf you create the metric after 6:00 PM (PST), you get the first aggregation result at 6 PM (PST) the next day.\n\nprocessingConfig -> (structure)\n\nThe processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.\n\ncomputeLocation -> (string)\n\nThe compute location for the given metric property.\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"type\": \"string\",\n    \"properties\": [\n      {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"dataType\": \"STRING\"|\"INTEGER\"|\"DOUBLE\"|\"BOOLEAN\"|\"STRUCT\",\n        \"dataTypeSpec\": \"string\",\n        \"unit\": \"string\",\n        \"type\": {\n          \"attribute\": {\n            \"defaultValue\": \"string\"\n          },\n          \"measurement\": {\n            \"processingConfig\": {\n              \"forwardingConfig\": {\n                \"state\": \"DISABLED\"|\"ENABLED\"\n              }\n            }\n          },\n          \"transform\": {\n            \"expression\": \"string\",\n            \"variables\": [\n              {\n                \"name\": \"string\",\n                \"value\": {\n                  \"propertyId\": \"string\",\n                  \"hierarchyId\": \"string\"\n                }\n              }\n              ...\n            ],\n            \"processingConfig\": {\n              \"computeLocation\": \"EDGE\"|\"CLOUD\",\n              \"forwardingConfig\": {\n                \"state\": \"DISABLED\"|\"ENABLED\"\n              }\n            }\n          },\n          \"metric\": {\n            \"expression\": \"string\",\n            \"variables\": [\n              {\n                \"name\": \"string\",\n                \"value\": {\n                  \"propertyId\": \"string\",\n                  \"hierarchyId\": \"string\"\n                }\n              }\n              ...\n            ],\n            \"window\": {\n              \"tumbling\": {\n                \"interval\": \"string\",\n                \"offset\": \"string\"\n              }\n            },\n            \"processingConfig\": {\n              \"computeLocation\": \"EDGE\"|\"CLOUD\"\n            }\n          }\n        }\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nassetModelStatus -> (structure)\n\nThe status of the asset model, which contains a state (UPDATING after successfully calling this operation) and any error message.\n\nstate -> (string)\n\nThe current state of the asset model.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.\n\ndetails -> (list)\n\nA list of detailed errors.\n\n(structure)\n\nContains detailed error information.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo update an asset model\n\nThe following update-asset-model example updates a wind farm asset model’s description. This example includes the model’s existing IDs and definitions, because update-asset-model overwrites the existing model with the new model.\n\naws iotsitewise update-asset-model \\\n    --cli-input-json file://update-wind-farm-model.json\n\n\nContents of update-wind-farm-model.json:\n\n{\n    \"assetModelName\": \"Wind Farm Model\",\n    \"assetModelDescription\": \"Represents a wind farm that comprises many wind turbines\",\n    \"assetModelProperties\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-88888EXAMPLE\",\n            \"name\": \"Region\",\n            \"dataType\": \"STRING\",\n            \"type\": {\n                \"attribute\": {}\n            }\n        },\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-99999EXAMPLE\",\n            \"name\": \"Total Generated Power\",\n            \"dataType\": \"DOUBLE\",\n            \"unit\": \"kW\",\n            \"type\": {\n                \"metric\": {\n                    \"expression\": \"sum(power)\",\n                    \"variables\": [\n                        {\n                            \"name\": \"power\",\n                            \"value\": {\n                                \"hierarchyId\": \"a1b2c3d4-5678-90ab-cdef-77777EXAMPLE\",\n                                \"propertyId\": \"a1b2c3d4-5678-90ab-cdef-66666EXAMPLE\"\n                            }\n                        }\n                    ],\n                    \"window\": {\n                        \"tumbling\": {\n                            \"interval\": \"1h\"\n                        }\n                    }\n                }\n            }\n        }\n    ],\n    \"assetModelHierarchies\": [\n        {\n            \"id\": \"a1b2c3d4-5678-90ab-cdef-77777EXAMPLE\",\n            \"name\": \"Wind Turbines\",\n            \"childAssetModelId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\"\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"assetModelId\": \"a1b2c3d4-5678-90ab-cdef-22222EXAMPLE\",\n    \"assetModelArn\": \"arn:aws:iotsitewise:us-west-2:123456789012:asset-model/a1b2c3d4-5678-90ab-cdef-22222EXAMPLE\",\n    \"assetModelStatus\": {\n        \"state\": \"CREATING\"\n    }\n}\n\n\nFor more information, see Updating asset models in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "update-asset-property",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/update-asset-property.html",
      "command_description": "Description\n\nUpdates an asset property’s alias and notification state.\n\nWarning\n\nThis operation overwrites the property’s existing alias and notification state. To keep your existing property’s alias or notification state, you must include the existing values in the UpdateAssetProperty request. For more information, see DescribeAssetProperty .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-asset-property\n--asset-id <value>\n--property-id <value>\n[--property-alias <value>]\n[--property-notification-state <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--asset-id <value>",
        "--property-id <value>",
        "[--property-alias <value>]",
        "[--property-notification-state <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--asset-id (string)\n\nThe ID of the asset to be updated.\n\n--property-id (string)\n\nThe ID of the asset property to be updated.\n\n--property-alias (string)\n\nThe alias that identifies the property, such as an OPC-UA server data stream path (for example, /company/windfarm/3/turbine/7/temperature ). For more information, see Mapping industrial data streams to asset properties in the IoT SiteWise User Guide .\n\nIf you omit this parameter, the alias is removed from the property.\n\n--property-notification-state (string)\n\nThe MQTT notification state (enabled or disabled) for this asset property. When the notification state is enabled, IoT SiteWise publishes property value updates to a unique MQTT topic. For more information, see Interacting with other services in the IoT SiteWise User Guide .\n\nIf you omit this parameter, the notification state is set to DISABLED .\n\nPossible values:\n\nENABLED\n\nDISABLED\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nExample 1: To update an asset property’s alias\n\nThe following update-asset-property example updates a wind turbine asset’s power property alias.\n\naws iotsitewise update-asset-property \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-33333EXAMPLE \\\n    --property-id a1b2c3d4-5678-90ab-cdef-55555EXAMPLE \\\n    --property-alias \"/examplecorp/windfarm/1/turbine/1/power\" \\\n    --property-notification-state DISABLED\n\n\nThis command produces no output.\n\nFor more information, see Mapping industrial data streams to asset properties in the AWS IoT SiteWise User Guide.\n\nExample 2: To enable asset property notifications\n\nThe following update-asset-property example enables asset property update notifications for a wind turbine asset’s power property. Property value updates are published to the MQTT topic $aws/sitewise/asset-models/<assetModelId>/assets/<assetId>/properties/<propertyId>, where each ID is replaced by the property, asset, and model ID of the asset property.\n\naws iotsitewise update-asset-property \\\n    --asset-id a1b2c3d4-5678-90ab-cdef-33333EXAMPLE \\\n    --property-id a1b2c3d4-5678-90ab-cdef-66666EXAMPLE \\\n    --property-notification-state ENABLED \\\n    --property-alias \"/examplecorp/windfarm/1/turbine/1/power\"\n\n\nThis command produces no output.\n\nFor more information, see Interacting with other services in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "update-dashboard",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/update-dashboard.html",
      "command_description": "Description\n\nUpdates an IoT SiteWise Monitor dashboard.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-dashboard\n--dashboard-id <value>\n--dashboard-name <value>\n[--dashboard-description <value>]\n--dashboard-definition <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dashboard-id <value>",
        "--dashboard-name <value>",
        "[--dashboard-description <value>]",
        "--dashboard-definition <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dashboard-id (string)\n\nThe ID of the dashboard to update.\n\n--dashboard-name (string)\n\nA new friendly name for the dashboard.\n\n--dashboard-description (string)\n\nA new description for the dashboard.\n\n--dashboard-definition (string)\n\nThe new dashboard definition, as specified in a JSON literal. For detailed information, see Creating dashboards (CLI) in the IoT SiteWise User Guide .\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a dashboard\n\nThe following update-dashboard example changes the title of a dashboard’s line chart that displays total generated power for a wind farm.\n\naws iotsitewise update-dashboard \\\n    --project-id a1b2c3d4-5678-90ab-cdef-fffffEXAMPLE \\\n    --dashboard-name \"Wind Farm\" \\\n    --dashboard-definition file://update-wind-farm-dashboard.json\n\n\nContents of update-wind-farm-dashboard.json:\n\n{\n    \"widgets\": [\n        {\n            \"type\": \"monitor-line-chart\",\n            \"title\": \"Total Generated Power\",\n            \"x\": 0,\n            \"y\": 0,\n            \"height\": 3,\n            \"width\": 3,\n            \"metrics\": [\n                {\n                    \"label\": \"Power\",\n                    \"type\": \"iotsitewise\",\n                    \"assetId\": \"a1b2c3d4-5678-90ab-cdef-44444EXAMPLE\",\n                    \"propertyId\": \"a1b2c3d4-5678-90ab-cdef-99999EXAMPLE\"\n                }\n            ]\n        }\n    ]\n}\n\n\nThis command produces no output.\n\nFor more information, see Creating dashboards (CLI) in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "update-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/update-gateway.html",
      "command_description": "Description\n\nUpdates a gateway’s name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-gateway\n--gateway-id <value>\n--gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--gateway-id <value>",
        "--gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--gateway-id (string)\n\nThe ID of the gateway to update.\n\n--gateway-name (string)\n\nA unique, friendly name for the gateway.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a gateway’s name\n\nThe following update-gateway example updates a gateway’s name.\n\naws iotsitewise update-gateway \\\n    --gateway-id a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE \\\n    --gateway-name ExampleCorpGateway1\n\n\nThis command produces no output.\n\nFor more information, see Ingesting data using a gateway in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "update-gateway-capability-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/update-gateway-capability-configuration.html",
      "command_description": "Description\n\nUpdates a gateway capability configuration or defines a new capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC-UA sources for a gateway in the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use DescribeGateway .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-gateway-capability-configuration\n--gateway-id <value>\n--capability-namespace <value>\n--capability-configuration <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--gateway-id <value>",
        "--capability-namespace <value>",
        "--capability-configuration <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--gateway-id (string)\n\nThe ID of the gateway to be updated.\n\n--capability-namespace (string)\n\nThe namespace of the gateway capability configuration to be updated. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace iotsitewise:opcuacollector:version , where version is a number such as 1 .\n\n--capability-configuration (string)\n\nThe JSON document that defines the configuration for the gateway capability. For more information, see Configuring data sources (CLI) in the IoT SiteWise User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncapabilityNamespace -> (string)\n\nThe namespace of the gateway capability.\n\ncapabilitySyncStatus -> (string)\n\nThe synchronization status of the capability configuration. The sync status can be one of the following:\n\nIN_SYNC – The gateway is running the capability configuration.\n\nOUT_OF_SYNC – The gateway hasn’t received the capability configuration.\n\nSYNC_FAILED – The gateway rejected the capability configuration.\n\nAfter you update a capability configuration, its sync status is OUT_OF_SYNC until the gateway receives and applies or rejects the updated configuration.",
      "command_examples": "Examples\n\nTo update a gateway capability\n\nThe following update-gateway-capability-configuration example configures an OPC-UA source with the following properties:\n\nTrusts any certificate.\n\nUses the Basic256 algorithm to secure messages.\n\nUses the SignAndEncrypt mode to secure connections.\n\nUses authentication credentials stored in an AWS Secrets Manager secret.\n\naws iotsitewise update-gateway-capability-configuration \\\n    --gateway-id a1b2c3d4-5678-90ab-cdef-1a1a1EXAMPLE \\\n    --capability-namespace \"iotsitewise:opcuacollector:1\" \\\n    --capability-configuration file://opc-ua-capability-configuration.json\n\n\nContents of opc-ua-capability-configuration.json:\n\n{\n    \"sources\": [\n        {\n            \"name\": \"Wind Farm #1\",\n            \"endpoint\": {\n                \"certificateTrust\": {\n                    \"type\": \"TrustAny\"\n                },\n                \"endpointUri\": \"opc.tcp://203.0.113.0:49320\",\n                \"securityPolicy\": \"BASIC256\",\n                \"messageSecurityMode\": \"SIGN_AND_ENCRYPT\",\n                \"identityProvider\": {\n                    \"type\": \"Username\",\n                    \"usernameSecretArn\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:greengrass-windfarm1-auth-1ABCDE\"\n                },\n                \"nodeFilterRules\": []\n            },\n            \"measurementDataStreamPrefix\": \"\"\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"capabilityNamespace\": \"iotsitewise:opcuacollector:1\",\n    \"capabilitySyncStatus\": \"OUT_OF_SYNC\"\n}\n\n\nFor more information, see Configuring data sources in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "update-portal",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/update-portal.html",
      "command_description": "Description\n\nUpdates an IoT SiteWise Monitor portal.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-portal\n--portal-id <value>\n--portal-name <value>\n[--portal-description <value>]\n--portal-contact-email <value>\n[--portal-logo-image <value>]\n--role-arn <value>\n[--client-token <value>]\n[--notification-sender-email <value>]\n[--alarms <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--portal-id <value>",
        "--portal-name <value>",
        "[--portal-description <value>]",
        "--portal-contact-email <value>",
        "[--portal-logo-image <value>]",
        "--role-arn <value>",
        "[--client-token <value>]",
        "[--notification-sender-email <value>]",
        "[--alarms <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--portal-id (string)\n\nThe ID of the portal to update.\n\n--portal-name (string)\n\nA new friendly name for the portal.\n\n--portal-description (string)\n\nA new description for the portal.\n\n--portal-contact-email (string)\n\nThe Amazon Web Services administrator’s contact email address.\n\n--portal-logo-image (structure)\n\nContains an image that is one of the following:\n\nAn image file. Choose this option to upload a new image.\n\nThe ID of an existing image. Choose this option to keep an existing image.\n\nid -> (string)\n\nThe ID of an existing image. Specify this parameter to keep an existing image.\n\nfile -> (structure)\n\nContains an image file.\n\ndata -> (blob)\n\nThe image file contents, represented as a base64-encoded string. The file size must be less than 1 MB.\n\ntype -> (string)\n\nThe file type of the image.\n\nShorthand Syntax:\n\nid=string,file={data=blob,type=string}\n\n\nJSON Syntax:\n\n{\n  \"id\": \"string\",\n  \"file\": {\n    \"data\": blob,\n    \"type\": \"PNG\"\n  }\n}\n\n\n--role-arn (string)\n\nThe ARN of a service role that allows the portal’s users to access your IoT SiteWise resources on your behalf. For more information, see Using service roles for IoT SiteWise Monitor in the IoT SiteWise User Guide .\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--notification-sender-email (string)\n\nThe email address that sends alarm notifications.\n\n--alarms (structure)\n\nContains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see Monitoring with alarms in the IoT SiteWise Application Guide .\n\nalarmRoleArn -> (string)\n\nThe ARN of the IAM role that allows the alarm to perform actions and access Amazon Web Services resources and services, such as IoT Events.\n\nnotificationLambdaArn -> (string)\n\nThe ARN of the Lambda function that manages alarm notifications. For more information, see Managing alarm notifications in the IoT Events Developer Guide .\n\nShorthand Syntax:\n\nalarmRoleArn=string,notificationLambdaArn=string\n\n\nJSON Syntax:\n\n{\n  \"alarmRoleArn\": \"string\",\n  \"notificationLambdaArn\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nportalStatus -> (structure)\n\nThe status of the portal, which contains a state (UPDATING after successfully calling this operation) and any error message.\n\nstate -> (string)\n\nThe current state of the portal.\n\nerror -> (structure)\n\nContains associated error information, if any.\n\ncode -> (string)\n\nThe error code.\n\nmessage -> (string)\n\nThe error message.",
      "command_examples": "Examples\n\nTo update a portal’s details\n\nThe following update-portal example updates a web portal for a wind farm company.\n\naws iotsitewise update-portal \\\n    --portal-id a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE \\\n    --portal-name WindFarmPortal \\\n    --portal-description \"A portal that contains wind farm projects for Example Corp.\" \\\n    --portal-contact-email support@example.com \\\n    --role-arn arn:aws:iam::123456789012:role/MySiteWiseMonitorServiceRole\n\n\nOutput:\n\n{\n    \"portalStatus\": {\n        \"state\": \"UPDATING\"\n    }\n}\n\n\nFor more information, see Administering your portals in the AWS IoT SiteWise User Guide."
    },
    {
      "command_name": "update-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/update-project.html",
      "command_description": "Description\n\nUpdates an IoT SiteWise Monitor project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-project\n--project-id <value>\n--project-name <value>\n[--project-description <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-id <value>",
        "--project-name <value>",
        "[--project-description <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-id (string)\n\nThe ID of the project to update.\n\n--project-name (string)\n\nA new friendly name for the project.\n\n--project-description (string)\n\nA new description for the project.\n\n--client-token (string)\n\nA unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don’t reuse this client token if a new idempotent request is required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a project’s details\n\nThe following update-project example updates a wind farm project.\n\naws iotsitewise update-project \\\n    --project-id a1b2c3d4-5678-90ab-cdef-eeeeeEXAMPLE \\\n    --project-name \"Wind Farm 1\" \\\n    --project-description \"Contains asset visualizations for Wind Farm #1 for Example Corp.\"\n\n\nThis command produces no output.\n\nFor more information, see Changing project details in the AWS IoT SiteWise Monitor Application Guide."
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iotsitewise/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description\n\nWelcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects Industrial Internet of Things (IIoT) devices to the power of the Amazon Web Services Cloud. For more information, see the IoT SiteWise User Guide . For information about IoT SiteWise quotas, see Quotas in the IoT SiteWise User Guide ."
}