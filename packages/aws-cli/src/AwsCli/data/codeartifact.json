{
  "service_name": "codeartifact",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/index.html",
  "service_commands": [
    {
      "command_name": "associate-external-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/associate-external-connection.html",
      "command_description": "Description\n\nAdds an existing external connection to a repository. One external connection is allowed per repository.\n\nNote\n\nA repository can have one or more upstream repositories, or an external connection.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-external-connection\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--external-connection <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--external-connection <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository to which the external connection is added.\n\n--external-connection (string)\n\nThe name of the external connection to add to the repository. The following values are supported:\n\npublic:npmjs - for the npm public repository.\n\npublic:pypi - for the Python Package Index.\n\npublic:maven-central - for Maven Central.\n\npublic:maven-googleandroid - for the Google Android repository.\n\npublic:maven-gradleplugins - for the Gradle plugins repository.\n\npublic:maven-commonsware - for the CommonsWare Android repository.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepository -> (structure)\n\nInformation about the connected repository after processing the request.\n\nname -> (string)\n\nThe name of the repository.\n\nadministratorAccount -> (string)\n\nThe 12-digit account number of the AWS account that manages the repository.\n\ndomainName -> (string)\n\nThe name of the domain that contains the repository.\n\ndomainOwner -> (string)\n\nThe 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the repository.\n\ndescription -> (string)\n\nA text description of the repository.\n\nupstreams -> (list)\n\nA list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see Working with upstream repositories .\n\n(structure)\n\nInformation about an upstream repository.\n\nrepositoryName -> (string)\n\nThe name of an upstream repository.\n\nexternalConnections -> (list)\n\nAn array of external connections associated with the repository.\n\n(structure)\n\nContains information about the external connection of a repository.\n\nexternalConnectionName -> (string)\n\nThe name of the external connection associated with a repository.\n\npackageFormat -> (string)\n\nThe package format associated with a repository’s external connection. The valid package formats are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nstatus -> (string)\n\nThe status of the external connection of a repository. There is one valid value, Available .",
      "command_examples": "Examples\n\nTo add an external connection to a repository\n\nThe following associate-external-connection example adds an external connection to npmjs.com to a repository named test-repo.\n\naws codeartifact associate-external-connection \\\n    --repository test-repo \\\n    --domain test-domain \\\n    --external-connection public:npmjs\n\n\nOutput:\n\n{\n    \"repository\": {\n        \"name\": \"test-repo\",\n        \"administratorAccount\": \"111122223333\",\n        \"domainName\": \"test-domain\",\n        \"domainOwner\": \"111122223333\",\n        \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/test-domain/test-repo\",\n        \"upstreams\": [],\n        \"externalConnections\": [\n            {\n                \"externalConnectionName\": \"public:npmjs\",\n                \"packageFormat\": \"npm\",\n                \"status\": \"AVAILABLE\"\n            }\n        ]\n    }\n}\n\n\nFor more information, see Add an external connection in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "copy-package-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/copy-package-versions.html",
      "command_description": "Description\n\nCopies package versions from one repository to another repository in the same domain.\n\nNote\n\nYou must specify versions or versionRevisions . You cannot specify both.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  copy-package-versions\n--domain <value>\n[--domain-owner <value>]\n--source-repository <value>\n--destination-repository <value>\n--format <value>\n[--namespace <value>]\n--package <value>\n[--versions <value>]\n[--version-revisions <value>]\n[--allow-overwrite | --no-allow-overwrite]\n[--include-from-upstream | --no-include-from-upstream]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--source-repository <value>",
        "--destination-repository <value>",
        "--format <value>",
        "[--namespace <value>]",
        "--package <value>",
        "[--versions <value>]",
        "[--version-revisions <value>]",
        "[--allow-overwrite | --no-allow-overwrite]",
        "[--include-from-upstream | --no-include-from-upstream]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the source and destination repositories.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--source-repository (string)\n\nThe name of the repository that contains the package versions to copy.\n\n--destination-repository (string)\n\nThe name of the repository into which package versions are copied.\n\n--format (string)\n\nThe format of the package that is copied. The valid package types are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package (string)\n\nThe name of the package that is copied.\n\n--versions (list)\n\nThe versions of the package to copy.\n\nNote\n\nYou must specify versions or versionRevisions . You cannot specify both.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--version-revisions (map)\n\nA list of key-value pairs. The keys are package versions and the values are package version revisions. A CopyPackageVersion operation succeeds if the specified versions in the source repository match the specified package version revision.\n\nNote\n\nYou must specify versions or versionRevisions . You cannot specify both.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--allow-overwrite | --no-allow-overwrite (boolean)\n\nSet to true to overwrite a package version that already exists in the destination repository. If set to false and the package version already exists in the destination repository, the package version is returned in the failedVersions field of the response with an ALREADY_EXISTS error code.\n\n--include-from-upstream | --no-include-from-upstream (boolean)\n\nSet to true to copy packages from repositories that are upstream from the source repository to the destination repository. The default setting is false. For more information, see Working with upstream repositories .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsuccessfulVersions -> (map)\n\nA list of the package versions that were successfully copied to your repository.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains the revision and status of a package version.\n\nrevision -> (string)\n\nThe revision of a package version.\n\nstatus -> (string)\n\nThe status of a package version. Valid statuses are:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nfailedVersions -> (map)\n\nA map of package versions that failed to copy and their error codes. The possible error codes are in the PackageVersionError data type. They are:\n\nALREADY_EXISTS\n\nMISMATCHED_REVISION\n\nMISMATCHED_STATUS\n\nNOT_ALLOWED\n\nNOT_FOUND\n\nSKIPPED\n\nkey -> (string)\n\nvalue -> (structure)\n\nAn error associated with package.\n\nerrorCode -> (string)\n\nThe error code associated with the error. Valid error codes are:\n\nALREADY_EXISTS\n\nMISMATCHED_REVISION\n\nMISMATCHED_STATUS\n\nNOT_ALLOWED\n\nNOT_FOUND\n\nSKIPPED\n\nerrorMessage -> (string)\n\nThe error message associated with the error.",
      "command_examples": "Examples\n\nTo copy package versions from one repository to another\n\nThe following copy-package-versions moves versions 4.0.0 and 5.0.0 of a package named test-package from my-repo to test-repo.\n\naws codeartifact copy-package-versions \\\n    --domain test-domain \\\n    --source-repository my-repo \\\n    --destination-repository test-repo \\\n    --format npm \\\n    --package test-package \\\n    --versions '[\"4.0.0\", \"5.0.0\"]'\n\n\nOutput:\n\n{\n    \"format\": \"npm\",\n    \"package\": \"test-package\",\n    \"versions\": [\n        {\n        \"version\": \"5.0.0\",\n        \"revision\": \"REVISION-1-SAMPLE-6C81EFF7DA55CC\",\n        \"status\": \"Published\"\n        },\n        {\n        \"version\": \"4.0.0\",\n        \"revision\": \"REVISION-2-SAMPLE-55C752BEE772FC\",\n        \"status\": \"Published\"\n        }\n    ]\n}\n\n\nFor more information, see Copy packages between repositories in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "create-domain",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/create-domain.html",
      "command_description": "Description\n\nCreates a domain. CodeArtifact domains make it easier to manage multiple repositories across an organization. You can use a domain to apply permissions across many repositories owned by different AWS accounts. An asset is stored only once in a domain, even if it’s in multiple repositories.\n\nAlthough you can have multiple domains, we recommend a single production domain that contains all published artifacts so that your development teams can find and share packages. You can use a second pre-production domain to test changes to the production domain configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-domain\n--domain <value>\n[--encryption-key <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--encryption-key <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable.\n\n--encryption-key (string)\n\nThe encryption key for the domain. This is used to encrypt content stored in a domain. An encryption key can be a key ID, a key Amazon Resource Name (ARN), a key alias, or a key alias ARN. To specify an encryptionKey , your IAM role must have kms:DescribeKey and kms:CreateGrant permissions on the encryption key that is used. For more information, see DescribeKey in the AWS Key Management Service API Reference and AWS KMS API Permissions Reference in the AWS Key Management Service Developer Guide .\n\nWarning\n\nCodeArtifact supports only symmetric CMKs. Do not associate an asymmetric CMK with your domain. For more information, see Using symmetric and asymmetric keys in the AWS Key Management Service Developer Guide .\n\n--tags (list)\n\nOne or more tag key-value pairs for the domain.\n\n(structure)\n\nA tag is a key-value pair that can be used to manage, search for, or filter resources in AWS CodeArtifact.\n\nkey -> (string)\n\nThe tag key.\n\nvalue -> (string)\n\nThe tag value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndomain -> (structure)\n\nContains information about the created domain after processing the request.\n\nname -> (string)\n\nThe name of the domain.\n\nowner -> (string)\n\nThe AWS account ID that owns the domain.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the domain.\n\nstatus -> (string)\n\nThe current status of a domain. The valid values are\n\nActive\n\nDeleted\n\ncreatedTime -> (timestamp)\n\nA timestamp that represents the date and time the domain was created.\n\nencryptionKey -> (string)\n\nThe ARN of an AWS Key Management Service (AWS KMS) key associated with a domain.\n\nrepositoryCount -> (integer)\n\nThe number of repositories in the domain.\n\nassetSizeBytes -> (long)\n\nThe total size of all assets in the domain.\n\ns3BucketArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to store package assets in the domain.",
      "command_examples": "Examples\n\nTo create a domain\n\nThe following create-domain example creates a domain named test-domain.\n\naws codeartifact create-domain \\\n    --domain test-domain\n\n\nOutput:\n\n{\n    \"domain\": {\n        \"name\": \"test-domain\",\n        \"owner\": \"111122223333\",\n        \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:domain/test-domain\",\n        \"status\": \"Active\",\n        \"createdTime\": \"2020-10-20T13:16:48.559000-04:00\",\n        \"encryptionKey\": \"arn:aws:kms:us-west-2:111122223333:key/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n        \"repositoryCount\": 0,\n        \"assetSizeBytes\": 0\n    }\n}\n\n\nFor more information, see Create a domain in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "create-repository",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/create-repository.html",
      "command_description": "Description\n\nCreates a repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-repository\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n[--description <value>]\n[--upstreams <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "[--description <value>]",
        "[--upstreams <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the created repository.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository to create.\n\n--description (string)\n\nA description of the created repository.\n\n--upstreams (list)\n\nA list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see Working with upstream repositories .\n\n(structure)\n\nInformation about an upstream repository. A list of UpstreamRepository objects is an input parameter to CreateRepository and UpdateRepository .\n\nrepositoryName -> (string)\n\nThe name of an upstream repository.\n\nShorthand Syntax:\n\nrepositoryName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"repositoryName\": \"string\"\n  }\n  ...\n]\n\n\n--tags (list)\n\nOne or more tag key-value pairs for the repository.\n\n(structure)\n\nA tag is a key-value pair that can be used to manage, search for, or filter resources in AWS CodeArtifact.\n\nkey -> (string)\n\nThe tag key.\n\nvalue -> (string)\n\nThe tag value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepository -> (structure)\n\nInformation about the created repository after processing the request.\n\nname -> (string)\n\nThe name of the repository.\n\nadministratorAccount -> (string)\n\nThe 12-digit account number of the AWS account that manages the repository.\n\ndomainName -> (string)\n\nThe name of the domain that contains the repository.\n\ndomainOwner -> (string)\n\nThe 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the repository.\n\ndescription -> (string)\n\nA text description of the repository.\n\nupstreams -> (list)\n\nA list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see Working with upstream repositories .\n\n(structure)\n\nInformation about an upstream repository.\n\nrepositoryName -> (string)\n\nThe name of an upstream repository.\n\nexternalConnections -> (list)\n\nAn array of external connections associated with the repository.\n\n(structure)\n\nContains information about the external connection of a repository.\n\nexternalConnectionName -> (string)\n\nThe name of the external connection associated with a repository.\n\npackageFormat -> (string)\n\nThe package format associated with a repository’s external connection. The valid package formats are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nstatus -> (string)\n\nThe status of the external connection of a repository. There is one valid value, Available .",
      "command_examples": "Examples\n\nTo create a repository\n\nThe following create-repository example creates a repository named test-repo inside a domain named test-domain.\n\naws codeartifact create-repository \\\n    --domain test-domain \\\n    --domain-owner 111122223333 \\\n    --repository test-repo \\\n    --description \"This is a test repository.\"\n\n\nOutput:\n\n{\n    \"repository\": {\n        \"name\": \"test-repo\",\n        \"administratorAccount\": \"111122223333\",\n        \"domainName\": \"test-domain\",\n        \"domainOwner\": \"111122223333\",\n        \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/test-domain/test-repo\",\n        \"description\": \"This is a test repository.\",\n        \"upstreams\": [],\n        \"externalConnections\": []\n    }\n}\n\n\nFor more information, see Create a domain in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "delete-domain",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/delete-domain.html",
      "command_description": "Description\n\nDeletes a domain. You cannot delete a domain that contains repositories. If you want to delete a domain with repositories, first delete its repositories.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-domain\n--domain <value>\n[--domain-owner <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain to delete.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndomain -> (structure)\n\nContains information about the deleted domain after processing the request.\n\nname -> (string)\n\nThe name of the domain.\n\nowner -> (string)\n\nThe AWS account ID that owns the domain.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the domain.\n\nstatus -> (string)\n\nThe current status of a domain. The valid values are\n\nActive\n\nDeleted\n\ncreatedTime -> (timestamp)\n\nA timestamp that represents the date and time the domain was created.\n\nencryptionKey -> (string)\n\nThe ARN of an AWS Key Management Service (AWS KMS) key associated with a domain.\n\nrepositoryCount -> (integer)\n\nThe number of repositories in the domain.\n\nassetSizeBytes -> (long)\n\nThe total size of all assets in the domain.\n\ns3BucketArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to store package assets in the domain.",
      "command_examples": "Examples\n\nTo delete a domain\n\nThe following delete-domain example deletes a domain named test-domain.\n\naws codeartifact delete-domain \\\n    --domain test-domain\n\n\nOutput:\n\n{\n    \"domain\": {\n        \"name\": \"test-domain\",\n        \"owner\": \"417498243647\",\n        \"arn\": \"arn:aws:codeartifact:us-west-2:417498243647:domain/test-domain\",\n        \"status\": \"Deleted\",\n        \"createdTime\": \"2020-10-20T13:16:48.559000-04:00\",\n        \"encryptionKey\": \"arn:aws:kms:us-west-2:417498243647:key/c9fe2447-0795-4fda-afbe-8464574ae162\",\n        \"repositoryCount\": 0,\n        \"assetSizeBytes\": 0\n    }\n}\n\n\nFor more information, see Delete a domain in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "delete-domain-permissions-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/delete-domain-permissions-policy.html",
      "command_description": "Description\n\nDeletes the resource policy set on a domain.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-domain-permissions-policy\n--domain <value>\n[--domain-owner <value>]\n[--policy-revision <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "[--policy-revision <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain associated with the resource policy to be deleted.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--policy-revision (string)\n\nThe current revision of the resource policy to be deleted. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain’s resource policy.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npolicy -> (structure)\n\nInformation about the deleted resource policy after processing the request.\n\nresourceArn -> (string)\n\nThe ARN of the resource associated with the resource policy\n\nrevision -> (string)\n\nThe current revision of the resource policy.\n\ndocument -> (string)\n\nThe resource policy formatted in JSON.",
      "command_examples": "Examples\n\nTo delete the permissions policy document from a domain\n\nThe following delete-domain-permissions-policy example deletes the permission policy from a domain named test-domain.\n\naws codeartifact delete-domain-permissions-policy \\\n    --domain test-domain\n\n\nOutput:\n\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"BasicDomainPolicy\",\n            \"Action\": [\n                \"codeartifact:GetDomainPermissionsPolicy\",\n                \"codeartifact:ListRepositoriesInDomain\",\n                \"codeartifact:GetAuthorizationToken\",\n                \"codeartifact:CreateRepository\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\",\n            \"Principal\": {\n                \"AWS\": \"arn:aws:iam::111122223333:root\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see Delete a domain policy in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "delete-package-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/delete-package-versions.html",
      "command_description": "Description\n\nDeletes one or more versions of a package. A deleted package version cannot be restored in your repository. If you want to remove a package version from your repository and be able to restore it later, set its status to Archived . Archived packages cannot be downloaded from a repository and don’t show up with list package APIs (for example, ListackageVersions ), but you can restore them using UpdatePackageVersionsStatus .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-package-versions\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--format <value>\n[--namespace <value>]\n--package <value>\n--versions <value>\n[--expected-status <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--format <value>",
        "[--namespace <value>]",
        "--package <value>",
        "--versions <value>",
        "[--expected-status <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the package to delete.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository that contains the package versions to delete.\n\n--format (string)\n\nThe format of the package versions to delete. The valid values are:\n\nnpm\n\npypi\n\nmaven\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package (string)\n\nThe name of the package with the versions to delete.\n\n--versions (list)\n\nAn array of strings that specify the versions of the package to delete.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--expected-status (string)\n\nThe expected status of the package version to delete. Valid values are:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nPossible values:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nDeleted\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsuccessfulVersions -> (map)\n\nA list of the package versions that were successfully deleted.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains the revision and status of a package version.\n\nrevision -> (string)\n\nThe revision of a package version.\n\nstatus -> (string)\n\nThe status of a package version. Valid statuses are:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nfailedVersions -> (map)\n\nA PackageVersionError object that contains a map of errors codes for the deleted package that failed. The possible error codes are:\n\nALREADY_EXISTS\n\nMISMATCHED_REVISION\n\nMISMATCHED_STATUS\n\nNOT_ALLOWED\n\nNOT_FOUND\n\nSKIPPED\n\nkey -> (string)\n\nvalue -> (structure)\n\nAn error associated with package.\n\nerrorCode -> (string)\n\nThe error code associated with the error. Valid error codes are:\n\nALREADY_EXISTS\n\nMISMATCHED_REVISION\n\nMISMATCHED_STATUS\n\nNOT_ALLOWED\n\nNOT_FOUND\n\nSKIPPED\n\nerrorMessage -> (string)\n\nThe error message associated with the error.",
      "command_examples": "Examples\n\nTo delete package versions\n\nThe following delete-package-versions example deletes version 4.0.0 of a package named test-package.\n\naws codeartifact delete-package-versions \\\n    --domain test-domain \\\n    --repo test-repo \\\n    --format npm \\\n    --package test-package \\\n    --versions 4.0.0\n\n\nOutput:\n\n{\n    \"successfulVersions\": {\n        \"4.0.0\": {\n            \"revision\": \"Ciqe5/9yicvkJT13b5/LdLpCyE6fqA7poa9qp+FilPs=\",\n            \"status\": \"Deleted\"\n        }\n    },\n    \"failedVersions\": {}\n}\n\n\nFor more information, see Delete a package version in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "delete-repository",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/delete-repository.html",
      "command_description": "Description\n\nDeletes a repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-repository\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository to delete.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepository -> (structure)\n\nInformation about the deleted repository after processing the request.\n\nname -> (string)\n\nThe name of the repository.\n\nadministratorAccount -> (string)\n\nThe 12-digit account number of the AWS account that manages the repository.\n\ndomainName -> (string)\n\nThe name of the domain that contains the repository.\n\ndomainOwner -> (string)\n\nThe 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the repository.\n\ndescription -> (string)\n\nA text description of the repository.\n\nupstreams -> (list)\n\nA list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see Working with upstream repositories .\n\n(structure)\n\nInformation about an upstream repository.\n\nrepositoryName -> (string)\n\nThe name of an upstream repository.\n\nexternalConnections -> (list)\n\nAn array of external connections associated with the repository.\n\n(structure)\n\nContains information about the external connection of a repository.\n\nexternalConnectionName -> (string)\n\nThe name of the external connection associated with a repository.\n\npackageFormat -> (string)\n\nThe package format associated with a repository’s external connection. The valid package formats are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nstatus -> (string)\n\nThe status of the external connection of a repository. There is one valid value, Available .",
      "command_examples": "Examples\n\nTo delete a repository\n\nThe following delete-repository example deletes a repository named test-repo in a domain named test-domain.\n\naws codeartifact delete-repository \\\n    --domain test-domain \\\n    --repository test-repo\n\n\nOutput:\n\n{\n    \"repository\": {\n        \"name\": \"test-repo\",\n        \"administratorAccount\": \"111122223333\",\n        \"domainName\": \"test-domain\",\n        \"domainOwner\": \"111122223333\",\n        \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/test-domain/test-repo\",\n        \"description\": \"This is a test repository\",\n        \"upstreams\": [],\n        \"externalConnections\": []\n    }\n}\n\n\nFor more information, see Delete a repository in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "delete-repository-permissions-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/delete-repository-permissions-policy.html",
      "command_description": "Description\n\nDeletes the resource policy that is set on a repository. After a resource policy is deleted, the permissions allowed and denied by the deleted policy are removed. The effect of deleting a resource policy might not be immediate.\n\nWarning\n\nUse DeleteRepositoryPermissionsPolicy with caution. After a policy is deleted, AWS users, roles, and accounts lose permissions to perform the repository actions granted by the deleted policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-repository-permissions-policy\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n[--policy-revision <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "[--policy-revision <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository associated with the resource policy to be deleted.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository that is associated with the resource policy to be deleted\n\n--policy-revision (string)\n\nThe revision of the repository’s resource policy to be deleted. This revision is used for optimistic locking, which prevents others from accidentally overwriting your changes to the repository’s resource policy.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npolicy -> (structure)\n\nInformation about the deleted policy after processing the request.\n\nresourceArn -> (string)\n\nThe ARN of the resource associated with the resource policy\n\nrevision -> (string)\n\nThe current revision of the resource policy.\n\ndocument -> (string)\n\nThe resource policy formatted in JSON.",
      "command_examples": "Examples\n\nTo delete a permissions policy from a repository\n\nThe following delete-repository-permissions-policy example deletes the permission policy from a repository named test-repo.\n\naws codeartifact delete-repository-permissions-policy \\\n    --domain test-domain \\\n    --repository test-repo\n\n\nOutput:\n\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"AWS\": \"arn:aws:iam::111122223333:root\"\n            },\n            \"Action\": [\n                \"codeartifact:DescribePackageVersion\",\n                \"codeartifact:DescribeRepository\",\n                \"codeartifact:GetPackageVersionReadme\",\n                \"codeartifact:GetRepositoryEndpoint\",\n                \"codeartifact:ListPackages\",\n                \"codeartifact:ListPackageVersions\",\n                \"codeartifact:ListPackageVersionAssets\",\n                \"codeartifact:ListPackageVersionDependencies\",\n                \"codeartifact:ReadFromRepository\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n\n\nFor more information, see Delete a policy in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "describe-domain",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/describe-domain.html",
      "command_description": "Description\n\nReturns a DomainDescription object that contains information about the requested domain.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-domain\n--domain <value>\n[--domain-owner <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nA string that specifies the name of the requested domain.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndomain -> (structure)\n\nInformation about a domain. A domain is a container for repositories. When you create a domain, it is empty until you add one or more repositories.\n\nname -> (string)\n\nThe name of the domain.\n\nowner -> (string)\n\nThe AWS account ID that owns the domain.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the domain.\n\nstatus -> (string)\n\nThe current status of a domain. The valid values are\n\nActive\n\nDeleted\n\ncreatedTime -> (timestamp)\n\nA timestamp that represents the date and time the domain was created.\n\nencryptionKey -> (string)\n\nThe ARN of an AWS Key Management Service (AWS KMS) key associated with a domain.\n\nrepositoryCount -> (integer)\n\nThe number of repositories in the domain.\n\nassetSizeBytes -> (long)\n\nThe total size of all assets in the domain.\n\ns3BucketArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to store package assets in the domain.",
      "command_examples": "Examples\n\nTo get information about a domain\n\nThe following describe-domain example returns a DomainDescription object for a domain named test-domain.\n\naws codeartifact create-domain \\\n    --domain test-domain\n\n\nOutput:\n\n{\n    \"domain\": {\n        \"name\": \"test-domain\",\n        \"owner\": \"111122223333\",\n        \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:domain/test-domain\",\n        \"status\": \"Active\",\n        \"createdTime\": \"2020-10-20T13:16:48.559000-04:00\",\n        \"encryptionKey\": \"arn:aws:kms:us-west-2:111122223333:key/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n        \"repositoryCount\": 2,\n        \"assetSizeBytes\": 0\n    }\n}\n\n\nFor more information, see Domain overview in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "describe-package-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/describe-package-version.html",
      "command_description": "Description\n\nReturns a PackageVersionDescription object that contains information about the requested package version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-package-version\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--format <value>\n[--namespace <value>]\n--package <value>\n--package-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--format <value>",
        "[--namespace <value>]",
        "--package <value>",
        "--package-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository that contains the package version.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository that contains the package version.\n\n--format (string)\n\nA format that specifies the type of the requested package version. The valid values are:\n\nnpm\n\npypi\n\nmaven\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package (string)\n\nThe name of the requested package version.\n\n--package-version (string)\n\nA string that contains the package version (for example, 3.5.2 ).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npackageVersion -> (structure)\n\nA PackageVersionDescription object that contains information about the requested package version.\n\nformat -> (string)\n\nThe format of the package version. The valid package formats are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nnamespace -> (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\npackageName -> (string)\n\nThe name of the requested package.\n\ndisplayName -> (string)\n\nThe name of the package that is displayed. The displayName varies depending on the package version’s format. For example, if an npm package is named ui , is in the namespace vue , and has the format npm , then the displayName is @vue/ui .\n\nversion -> (string)\n\nThe version of the package.\n\nsummary -> (string)\n\nA summary of the package version. The summary is extracted from the package. The information in and detail level of the summary depends on the package version’s format.\n\nhomePage -> (string)\n\nThe homepage associated with the package.\n\nsourceCodeRepository -> (string)\n\nThe repository for the source code in the package version, or the source code used to build it.\n\npublishedTime -> (timestamp)\n\nA timestamp that contains the date and time the package version was published.\n\nlicenses -> (list)\n\nInformation about licenses associated with the package version.\n\n(structure)\n\nDetails of the license data.\n\nname -> (string)\n\nName of the license.\n\nurl -> (string)\n\nThe URL for license data.\n\nrevision -> (string)\n\nThe revision of the package version.\n\nstatus -> (string)\n\nA string that contains the status of the package version. It can be one of the following:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed"
    },
    {
      "command_name": "describe-repository",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/describe-repository.html",
      "command_description": "Description\n\nReturns a RepositoryDescription object that contains detailed information about the requested repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-repository\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository to describe.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nA string that specifies the name of the requested repository.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepository -> (structure)\n\nA RepositoryDescription object that contains the requested repository information.\n\nname -> (string)\n\nThe name of the repository.\n\nadministratorAccount -> (string)\n\nThe 12-digit account number of the AWS account that manages the repository.\n\ndomainName -> (string)\n\nThe name of the domain that contains the repository.\n\ndomainOwner -> (string)\n\nThe 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the repository.\n\ndescription -> (string)\n\nA text description of the repository.\n\nupstreams -> (list)\n\nA list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see Working with upstream repositories .\n\n(structure)\n\nInformation about an upstream repository.\n\nrepositoryName -> (string)\n\nThe name of an upstream repository.\n\nexternalConnections -> (list)\n\nAn array of external connections associated with the repository.\n\n(structure)\n\nContains information about the external connection of a repository.\n\nexternalConnectionName -> (string)\n\nThe name of the external connection associated with a repository.\n\npackageFormat -> (string)\n\nThe package format associated with a repository’s external connection. The valid package formats are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nstatus -> (string)\n\nThe status of the external connection of a repository. There is one valid value, Available .",
      "command_examples": "Examples\n\nTo get information about a repository\n\nThe following describe-repository example returns a RepositoryDescription object for a repository named test-repo.\n\naws codeartifact describe-repository \\\n    --domain test-domain \\\n    --repository test-repo\n\n\nOutput:\n\n{\n    \"repository\": {\n        \"name\": \"test-repo\",\n        \"administratorAccount\": \"111122223333\",\n        \"domainName\": \"test-domain\",\n        \"domainOwner\": \"111122223333\",\n        \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/test-domain/test-repo\",\n        \"description\": \"This is a test repository.\",\n        \"upstreams\": [],\n        \"externalConnections\": []\n    }\n}\n\n\nFor more information, see Create a domain in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "disassociate-external-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/disassociate-external-connection.html",
      "command_description": "Description\n\nRemoves an existing external connection from a repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-external-connection\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--external-connection <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--external-connection <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository from which to remove the external repository.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository from which the external connection will be removed.\n\n--external-connection (string)\n\nThe name of the external connection to be removed from the repository.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepository -> (structure)\n\nThe repository associated with the removed external connection.\n\nname -> (string)\n\nThe name of the repository.\n\nadministratorAccount -> (string)\n\nThe 12-digit account number of the AWS account that manages the repository.\n\ndomainName -> (string)\n\nThe name of the domain that contains the repository.\n\ndomainOwner -> (string)\n\nThe 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the repository.\n\ndescription -> (string)\n\nA text description of the repository.\n\nupstreams -> (list)\n\nA list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see Working with upstream repositories .\n\n(structure)\n\nInformation about an upstream repository.\n\nrepositoryName -> (string)\n\nThe name of an upstream repository.\n\nexternalConnections -> (list)\n\nAn array of external connections associated with the repository.\n\n(structure)\n\nContains information about the external connection of a repository.\n\nexternalConnectionName -> (string)\n\nThe name of the external connection associated with a repository.\n\npackageFormat -> (string)\n\nThe package format associated with a repository’s external connection. The valid package formats are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nstatus -> (string)\n\nThe status of the external connection of a repository. There is one valid value, Available .",
      "command_examples": "Examples\n\nTo remove an external connection from a repository\n\nThe following disassociate-external-connection example removes an external connection to npmjs.com from a repository named test-repo.\n\naws codeartifact disassociate-external-connection \\\n    --repository test-repo \\\n    --domain test-domain \\\n    --external-connection public:npmjs\n\n\nOutput:\n\n{\n    \"repository\": {\n        \"name\": \"test-repo\",\n        \"administratorAccount\": \"111122223333\",\n        \"domainName\": \"test-domain\",\n        \"domainOwner\": \"111122223333\",\n        \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/test-domain/test-repo\",\n        \"upstreams\": [],\n        \"externalConnections\": []\n    }\n}\n\n\nFor more information, see Remove an external connection in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "dispose-package-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/dispose-package-versions.html",
      "command_description": "Description\n\nDeletes the assets in package versions and sets the package versions’ status to Disposed . A disposed package version cannot be restored in your repository because its assets are deleted.\n\nTo view all disposed package versions in a repository, use ListPackageVersions and set the status parameter to Disposed .\n\nTo view information about a disposed package version, use DescribePackageVersion .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  dispose-package-versions\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--format <value>\n[--namespace <value>]\n--package <value>\n--versions <value>\n[--version-revisions <value>]\n[--expected-status <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--format <value>",
        "[--namespace <value>]",
        "--package <value>",
        "--versions <value>",
        "[--version-revisions <value>]",
        "[--expected-status <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository you want to dispose.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository that contains the package versions you want to dispose.\n\n--format (string)\n\nA format that specifies the type of package versions you want to dispose. The valid values are:\n\nnpm\n\npypi\n\nmaven\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package (string)\n\nThe name of the package with the versions you want to dispose.\n\n--versions (list)\n\nThe versions of the package you want to dispose.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--version-revisions (map)\n\nThe revisions of the package versions you want to dispose.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--expected-status (string)\n\nThe expected status of the package version to dispose. Valid values are:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nPossible values:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nDeleted\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsuccessfulVersions -> (map)\n\nA list of the package versions that were successfully disposed.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains the revision and status of a package version.\n\nrevision -> (string)\n\nThe revision of a package version.\n\nstatus -> (string)\n\nThe status of a package version. Valid statuses are:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nfailedVersions -> (map)\n\nA PackageVersionError object that contains a map of errors codes for the disposed package versions that failed. The possible error codes are:\n\nALREADY_EXISTS\n\nMISMATCHED_REVISION\n\nMISMATCHED_STATUS\n\nNOT_ALLOWED\n\nNOT_FOUND\n\nSKIPPED\n\nkey -> (string)\n\nvalue -> (structure)\n\nAn error associated with package.\n\nerrorCode -> (string)\n\nThe error code associated with the error. Valid error codes are:\n\nALREADY_EXISTS\n\nMISMATCHED_REVISION\n\nMISMATCHED_STATUS\n\nNOT_ALLOWED\n\nNOT_FOUND\n\nSKIPPED\n\nerrorMessage -> (string)\n\nThe error message associated with the error.",
      "command_examples": "Examples\n\nTo delete a package version’s assets and set its status to Disposed\n\nThe following dispose-package-versions example deletes the assets of test-package version 4.0.0 and sets its status to Disposed.\n\naws codeartifact dispose-package-versions \\\n    --domain test-domain \\\n    --repo test-repo \\\n    --format npm \\\n    --package test-package \\\n    --versions 4.0.0\n\n\nOutput:\n\n{\n    \"successfulVersions\": {\n        \"4.0.0\": {\n            \"revision\": \"Ciqe5/9yicvkJT13b5/LdLpCyE6fqA7poa9qp+FilPs=\",\n            \"status\": \"Disposed\"\n        }\n    },\n    \"failedVersions\": {}\n}\n\n\nFor more information, see Working with packages in CodeArtifact in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "get-authorization-token",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/get-authorization-token.html",
      "command_description": "Description\n\nGenerates a temporary authorization token for accessing repositories in the domain. This API requires the codeartifact:GetAuthorizationToken and sts:GetServiceBearerToken permissions. For more information about authorization tokens, see AWS CodeArtifact authentication and tokens .\n\nNote\n\nCodeArtifact authorization tokens are valid for a period of 12 hours when created with the login command. You can call login periodically to refresh the token. When you create an authorization token with the GetAuthorizationToken API, you can set a custom authorization period, up to a maximum of 12 hours, with the durationSeconds parameter.\n\nThe authorization period begins after login or GetAuthorizationToken is called. If login or GetAuthorizationToken is called while assuming a role, the token lifetime is independent of the maximum session duration of the role. For example, if you call sts assume-role and specify a session duration of 15 minutes, then generate a CodeArtifact authorization token, the token will be valid for the full authorization period even though this is longer than the 15-minute session duration.\n\nSee Using IAM Roles for more information on controlling session duration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-authorization-token\n--domain <value>\n[--domain-owner <value>]\n[--duration-seconds <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "[--duration-seconds <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that is in scope for the generated authorization token.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--duration-seconds (long)\n\nThe time, in seconds, that the generated authorization token is valid. Valid values are 0 and any number between 900 (15 minutes) and 43200 (12 hours). A value of 0 will set the expiration of the authorization token to the same expiration of the user’s role’s temporary credentials.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nauthorizationToken -> (string)\n\nThe returned authentication token.\n\nexpiration -> (timestamp)\n\nA timestamp that specifies the date and time the authorization token expires.",
      "command_examples": "Examples\n\nTo get an authorization token\n\nThe following get-authorization-token example retrieves a CodeArtifact authorization token.\n\naws codeartifact get-authorization-token \\\n    --domain test-domain \\\n    --query authorizationToken \\\n    --output text\n\n\nOutput:\n\nThis command will return the authorization token. You can store the output in an environment variable when calling the command.\n\n\nFor more information, see Configure pip without the login command in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "get-domain-permissions-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/get-domain-permissions-policy.html",
      "command_description": "Description\n\nReturns the resource policy attached to the specified domain.\n\nNote\n\nThe policy is a resource-based policy, not an identity-based policy. For more information, see Identity-based policies and resource-based policies in the AWS Identity and Access Management User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-domain-permissions-policy\n--domain <value>\n[--domain-owner <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain to which the resource policy is attached.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npolicy -> (structure)\n\nThe returned resource policy.\n\nresourceArn -> (string)\n\nThe ARN of the resource associated with the resource policy\n\nrevision -> (string)\n\nThe current revision of the resource policy.\n\ndocument -> (string)\n\nThe resource policy formatted in JSON.",
      "command_examples": "Examples\n\nTo get the permissions policy document for a domain\n\nThe following get-domain-permissions-policy example gets the permission policy attached to a domain named test-domain.\n\naws codeartifact get-domain-permissions-policy \\\n    --domain test-domain\n\n\nOutput:\n\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"BasicDomainPolicy\",\n            \"Action\": [\n                \"codeartifact:GetDomainPermissionsPolicy\",\n                \"codeartifact:ListRepositoriesInDomain\",\n                \"codeartifact:GetAuthorizationToken\",\n                \"codeartifact:CreateRepository\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\",\n            \"Principal\": {\n                \"AWS\": \"arn:aws:iam::111122223333:root\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see Read a domain policy in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "get-package-version-asset",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/get-package-version-asset.html",
      "command_description": "Description\n\nReturns an asset (or file) that is in a package. For example, for a Maven package version, use GetPackageVersionAsset to download a JAR file, a POM file, or any other assets in the package version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-package-version-asset\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--format <value>\n[--namespace <value>]\n--package <value>\n--package-version <value>\n--asset <value>\n[--package-version-revision <value>]\n<outfile>\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--format <value>",
        "[--namespace <value>]",
        "--package <value>",
        "--package-version <value>",
        "--asset <value>",
        "[--package-version-revision <value>]",
        "<outfile>"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository that contains the package version with the requested asset.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe repository that contains the package version with the requested asset.\n\n--format (string)\n\nA format that specifies the type of the package version with the requested asset file. The valid values are:\n\nnpm\n\npypi\n\nmaven\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package (string)\n\nThe name of the package that contains the requested asset.\n\n--package-version (string)\n\nA string that contains the package version (for example, 3.5.2 ).\n\n--asset (string)\n\nThe name of the requested asset.\n\n--package-version-revision (string)\n\nThe name of the package version revision that contains the requested asset.\n\noutfile (string) Filename where the content will be saved\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nasset -> (blob)\n\nThe binary file, or asset, that is downloaded.\n\nassetName -> (string)\n\nThe name of the asset that is downloaded.\n\npackageVersion -> (string)\n\nA string that contains the package version (for example, 3.5.2 ).\n\npackageVersionRevision -> (string)\n\nThe name of the package version revision that contains the downloaded asset.",
      "command_examples": "Examples\n\nTo get an asset from a package version\n\nThe following get-package-version-asset example retrieves the package.tgz asset for version 4.0.0 of an npm package named test-package.\n\naws codeartifact get-package-version-asset \\\n    --domain test-domain \\\n    --repository test-repo \\\n    --format npm \\\n    --package test-package \\\n    --package-version 4.0.0 \\\n    --asset 'package.tgz' \\\n    outfileName\n\n\nOutput:\n\nThe output for this command will also store the raw asset in the file provided in place of outfileName.\n\n{\n    \"assetName\": \"package.tgz\",\n    \"packageVersion\": \"4.0.0\",\n    \"packageVersionRevision\": \"Ciqe5/9yicvkJT13b5/LdLpCyE6fqA7poa9qp+FilPs=\"\n}\n\n\nFor more information, see List package version assets in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "get-package-version-readme",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/get-package-version-readme.html",
      "command_description": "Description\n\nGets the readme file or descriptive text for a package version. For packages that do not contain a readme file, CodeArtifact extracts a description from a metadata file. For example, from the <description> element in the pom.xml file of a Maven package.\n\nThe returned text might contain formatting. For example, it might contain formatting for Markdown or reStructuredText.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-package-version-readme\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--format <value>\n[--namespace <value>]\n--package <value>\n--package-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--format <value>",
        "[--namespace <value>]",
        "--package <value>",
        "--package-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository that contains the package version with the requested readme file.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe repository that contains the package with the requested readme file.\n\n--format (string)\n\nA format that specifies the type of the package version with the requested readme file. The valid values are:\n\nnpm\n\npypi\n\nmaven\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package (string)\n\nThe name of the package version that contains the requested readme file.\n\n--package-version (string)\n\nA string that contains the package version (for example, 3.5.2 ).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nformat -> (string)\n\nThe format of the package with the requested readme file. Valid format types are:\n\nnpm\n\npypi\n\nmaven\n\nnamespace -> (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\npackage -> (string)\n\nThe name of the package that contains the returned readme file.\n\nversion -> (string)\n\nThe version of the package with the requested readme file.\n\nversionRevision -> (string)\n\nThe current revision associated with the package version.\n\nreadme -> (string)\n\nThe text of the returned readme file.",
      "command_examples": "Examples\n\nTo get a package version’s readme file\n\nThe following get-package-version-readme example retrieves the readme file for version 4.0.0 of an npm package named test-package.\n\naws codeartifact get-package-version-readme \\\n    --domain test-domain \\\n    --repo test-repo \\\n    --format npm \\\n    --package test-package \\\n    --package-version 4.0.0\n\n\nOutput:\n\n{\n    \"format\": \"npm\",\n    \"package\": \"test-package\",\n    \"version\": \"4.0.0\",\n    \"readme\": \"<div align=\\\"center\\\">\\n   <a href=\\https://github.com/test-package/testpack\\\"> ... more content ... \\n\",\n    \"versionRevision\": \"Ciqe5/9yicvkJT13b5/LdLpCyE6fqA7poa9qp+FilPs=\"\n}\n\n\nFor more information, see View package version readme file in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "get-repository-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/get-repository-endpoint.html",
      "command_description": "Description\n\nReturns the endpoint of a repository for a specific package format. A repository has one endpoint for each package format:\n\nnpm\n\npypi\n\nmaven\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-repository-endpoint\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--format <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--format <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository.\n\n--format (string)\n\nReturns which endpoint of a repository to return. A repository has one endpoint for each package format:\n\nnpm\n\npypi\n\nmaven\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepositoryEndpoint -> (string)\n\nA string that specifies the URL of the returned endpoint.",
      "command_examples": "Examples\n\nTo get a repository’s URL endpoint\n\nThe following get-repository-endpoint example returns the npm endpoint for the test-repo repository.\n\naws codeartifact get-repository-endpoint \\\n    --domain test-domain \\\n    --repository test-repo \\\n    --format npm\n\n\nOutput:\n\n{\n    \"repositoryEndpoint\": \"https://test-domain-111122223333.d.codeartifact.us-west-2.amazonaws.com/npm/test-repo/\"\n}\n\n\nFor more information, see Connect to a repository in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "get-repository-permissions-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/get-repository-permissions-policy.html",
      "command_description": "Description\n\nReturns the resource policy that is set on a repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-repository-permissions-policy\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain containing the repository whose associated resource policy is to be retrieved.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository whose associated resource policy is to be retrieved.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npolicy -> (structure)\n\nThe returned resource policy.\n\nresourceArn -> (string)\n\nThe ARN of the resource associated with the resource policy\n\nrevision -> (string)\n\nThe current revision of the resource policy.\n\ndocument -> (string)\n\nThe resource policy formatted in JSON.",
      "command_examples": "Examples\n\nTo get the permissions policy document for a repository\n\nThe following get-repository-permissions-policy example gets the permission policy attached to a repository named test-repo.\n\naws codeartifact get-repository-permissions-policy \\\n    --domain test-domain \\\n    --repository test-repo\n\n\nOutput:\n\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"AWS\": \"arn:aws:iam::111122223333:root\"\n            },\n            \"Action\": [\n                \"codeartifact:DescribePackageVersion\",\n                \"codeartifact:DescribeRepository\",\n                \"codeartifact:GetPackageVersionReadme\",\n                \"codeartifact:GetRepositoryEndpoint\",\n                \"codeartifact:ListPackages\",\n                \"codeartifact:ListPackageVersions\",\n                \"codeartifact:ListPackageVersionAssets\",\n                \"codeartifact:ListPackageVersionDependencies\",\n                \"codeartifact:ReadFromRepository\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n\n\nFor more information, see Read a policy in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "list-domains",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/list-domains.html",
      "command_description": "Description\n\nReturns a list of DomainSummary objects for all domains owned by the AWS account that makes this call. Each returned DomainSummary object contains information about a domain.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-domains is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: domains",
      "command_synopsis": "Synopsis\n  list-domains\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndomains -> (list)\n\nThe returned list of DomainSummary objects.\n\n(structure)\n\nInformation about a domain, including its name, Amazon Resource Name (ARN), and status. The ListDomains operation returns a list of DomainSummary objects.\n\nname -> (string)\n\nThe name of the domain.\n\nowner -> (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\narn -> (string)\n\nThe ARN of the domain.\n\nstatus -> (string)\n\nA string that contains the status of the domain. The valid values are:\n\nActive\n\nDeleted\n\ncreatedTime -> (timestamp)\n\nA timestamp that contains the date and time the domain was created.\n\nencryptionKey -> (string)\n\nThe key used to encrypt the domain.\n\nnextToken -> (string)\n\nThe token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
      "command_examples": "Examples\n\nTo list domains\n\nThe following list-domains example returns a summary of all domains owned by the AWS account that makes the call.\n\naws codeartifact list-domains\n\n\nOutput:\n\n{\n    \"domains\": [\n        {\n            \"name\": \"my-domain\",\n            \"owner\": \"111122223333\",\n            \"status\": \"Active\",\n            \"encryptionKey\": \"arn:aws:kms:us-west-2:111122223333:key/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\"\n        },\n        {\n            \"name\": \"test-domain\",\n            \"owner\": \"111122223333\",\n            \"status\": \"Active\",\n            \"encryptionKey\": \"arn:aws:kms:us-west-2:111122223333:key/a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\"\n        }\n    ]\n}\n\n\nFor more information, see Working with domains in CodeArtifact in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "list-package-version-assets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/list-package-version-assets.html",
      "command_description": "Description\n\nReturns a list of AssetSummary objects for assets in a package version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-package-version-assets is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: assets",
      "command_synopsis": "Synopsis\n  list-package-version-assets\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--format <value>\n[--namespace <value>]\n--package <value>\n--package-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--format <value>",
        "[--namespace <value>]",
        "--package <value>",
        "--package-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository associated with the package version assets.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository that contains the package that contains the returned package version assets.\n\n--format (string)\n\nThe format of the package that contains the returned package version assets. The valid package types are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package (string)\n\nThe name of the package that contains the returned package version assets.\n\n--package-version (string)\n\nA string that contains the package version (for example, 3.5.2 ).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nformat -> (string)\n\nThe format of the package that contains the returned package version assets.\n\nnamespace -> (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\npackage -> (string)\n\nThe name of the package that contains the returned package version assets.\n\nversion -> (string)\n\nThe version of the package associated with the returned assets.\n\nversionRevision -> (string)\n\nThe current revision associated with the package version.\n\nnextToken -> (string)\n\nIf there are additional results, this is the token for the next set of results.\n\nassets -> (list)\n\nThe returned list of AssetSummary objects.\n\n(structure)\n\nContains details about a package version asset.\n\nname -> (string)\n\nThe name of the asset.\n\nsize -> (long)\n\nThe size of the asset.\n\nhashes -> (map)\n\nThe hashes of the asset.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo view a package version’s assets\n\nThe following list-package-version-assets example retrieves the assets for version 4.0.0 of an npm package named test-package.\n\naws codeartifact list-package-version-assets \\\n    --domain test-domain \\\n    --repo test-repo \\\n    --format npm \\\n    --package test-package \\\n    --package-version 4.0.0\n\n\nOutput:\n\n{\n    \"format\": \"npm\",\n    \"package\": \"test-package\",\n    \"version\": \"4.0.0\",\n    \"versionRevision\": \"Ciqe5/9yicvkJT13b5/LdLpCyE6fqA7poa9qp+FilPs=\",\n    \"assets\": [\n        {\n            \"name\": \"package.tgz\",\n            \"size\": 316680,\n            \"hashes\": {\n                \"MD5\": \"60078ec6d9e76b89fb55c860832742b2\",\n                \"SHA-1\": \"b44a9b6297bcb698f1c51a3545a2b3b368d59c52\",\n                \"SHA-256\": \"d2aa8c6afc3c8591765785a37d1c5acae482a8eb3ab9729ed28922692454f2e2\",\n                \"SHA-512\": \"3e585d15c8a594e20d7de57b362ea81754c011acb2641a19f1b72c8531ea39825896bab344ae616a0a5a824cb9a381df0b3cddd534645cf305aba70a93dac698\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see List package version assets in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "list-package-version-dependencies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/list-package-version-dependencies.html",
      "command_description": "Description\n\nReturns the direct dependencies for a package version. The dependencies are returned as PackageDependency objects. CodeArtifact extracts the dependencies for a package version from the metadata file for the package format (for example, the package.json file for npm packages and the pom.xml file for Maven). Any package version dependencies that are not listed in the configuration file are not returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-package-version-dependencies\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--format <value>\n[--namespace <value>]\n--package <value>\n--package-version <value>\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--format <value>",
        "[--namespace <value>]",
        "--package <value>",
        "--package-version <value>",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository that contains the requested package version dependencies.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository that contains the requested package version.\n\n--format (string)\n\nThe format of the package with the requested dependencies. The valid package types are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package (string)\n\nThe name of the package versions’ package.\n\n--package-version (string)\n\nA string that contains the package version (for example, 3.5.2 ).\n\n--next-token (string)\n\nThe token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nformat -> (string)\n\nA format that specifies the type of the package that contains the returned dependencies. The valid values are:\n\nnpm\n\npypi\n\nmaven\n\nnamespace -> (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\npackage -> (string)\n\nThe name of the package that contains the returned package versions dependencies.\n\nversion -> (string)\n\nThe version of the package that is specified in the request.\n\nversionRevision -> (string)\n\nThe current revision associated with the package version.\n\nnextToken -> (string)\n\nThe token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.\n\ndependencies -> (list)\n\nThe returned list of PackageDependency objects.\n\n(structure)\n\nDetails about a package dependency.\n\nnamespace -> (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\npackage -> (string)\n\nThe name of the package that this package depends on.\n\ndependencyType -> (string)\n\nThe type of a package dependency. The possible values depend on the package type. Example types are compile , runtime , and test for Maven packages, and dev , prod , and optional for npm packages.\n\nversionRequirement -> (string)\n\nThe required version, or version range, of the package that this package depends on. The version format is specific to the package type. For example, the following are possible valid required versions: 1.2.3 , ^2.3.4 , or 4.x .",
      "command_examples": "Examples\n\nTo view a package version’s dependencies\n\nThe following list-package-version-dependencies example retrieves the dependencies for version 4.0.0 of an npm package named test-package.\n\naws codeartifact list-package-version-dependencies \\\n    --domain test-domain \\\n    --repo test-repo \\\n    --format npm \\\n    --package test-package \\\n    --package-version 4.0.0\n\n\nOutput:\n\n{\n    \"format\": \"npm\",\n    \"package\": \"test-package\",\n    \"version\": \"4.0.0\",\n    \"versionRevision\": \"Ciqe5/9yicvkJT13b5/LdLpCyE6fqA7poa9qp+FilPs=\",\n    \"dependencies\": [\n        {\n            \"namespace\": \"testns\",\n            \"package\": \"testdep1\",\n            \"dependencyType\": \"regular\",\n            \"versionRequirement\": \"1.8.5\"\n        },\n        {\n            \"namespace\": \"testns\",\n            \"package\": \"testdep2\",\n            \"dependencyType\": \"regular\",\n            \"versionRequirement\": \"1.8.5\"\n        }\n    ]\n}\n\n\nFor more information, see View and update package version details and dependencies in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "list-package-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/list-package-versions.html",
      "command_description": "Description\n\nReturns a list of PackageVersionSummary objects for package versions in a repository that match the request parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-package-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: versions",
      "command_synopsis": "Synopsis\n  list-package-versions\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--format <value>\n[--namespace <value>]\n--package <value>\n[--status <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--format <value>",
        "[--namespace <value>]",
        "--package <value>",
        "[--status <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository that contains the returned package versions.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository that contains the package.\n\n--format (string)\n\nThe format of the returned packages. The valid package types are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package (string)\n\nThe name of the package for which you want to return a list of package versions.\n\n--status (string)\n\nA string that specifies the status of the package versions to include in the returned list. It can be one of the following:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nPossible values:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nDeleted\n\n--sort-by (string)\n\nHow to sort the returned list of package versions.\n\nPossible values:\n\nPUBLISHED_TIME\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndefaultDisplayVersion -> (string)\n\nThe default package version to display. This depends on the package format:\n\nFor Maven and PyPI packages, it’s the most recently published package version.\n\nFor npm packages, it’s the version referenced by the latest tag. If the latest tag is not set, it’s the most recently published package version.\n\nformat -> (string)\n\nA format of the package. Valid package format values are:\n\nnpm\n\npypi\n\nmaven\n\nnamespace -> (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\npackage -> (string)\n\nThe name of the package.\n\nversions -> (list)\n\nThe returned list of PackageVersionSummary objects.\n\n(structure)\n\nDetails about a package version, including its status, version, and revision. The ListPackageVersions operation returns a list of PackageVersionSummary objects.\n\nversion -> (string)\n\nInformation about a package version.\n\nrevision -> (string)\n\nThe revision associated with a package version.\n\nstatus -> (string)\n\nA string that contains the status of the package version. It can be one of the following:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nnextToken -> (string)\n\nIf there are additional results, this is the token for the next set of results.",
      "command_examples": "Examples\n\nTo list package versions for a package\n\nThe following list-package-versions example returns a list of package versions for a package named kind-of.\n\naws codeartifact list-package-versions \\\n    --package kind-of \\\n    --domain test-domain \\\n    --repository test-repo \\\n    --format npm\n\n\nOutput:\n\n{\n    \"defaultDisplayVersion\": \"1.0.1\",\n    \"format\": \"npm\",\n    \"package\": \"kind-of\",\n    \"versions\": [\n        {\n            \"version\": \"1.0.1\",\n            \"revision\": \"REVISION-SAMPLE-1-C7F4S5E9B772FC\",\n            \"status\": \"Published\"\n        },\n        {\n            \"version\": \"1.0.0\",\n            \"revision\": \"REVISION-SAMPLE-2-C752BEEF6D2CFC\",\n            \"status\": \"Published\"\n        },\n        {\n            \"version\": \"0.1.2\",\n            \"revision\": \"REVISION-SAMPLE-3-654S65A5C5E1FC\",\n            \"status\": \"Published\"\n        },\n        {\n            \"version\": \"0.1.1\",\n            \"revision\": \"REVISION-SAMPLE-1-C7F4S5E9B772FC\"\",\n            \"status\": \"Published\"\n        },\n        {\n            \"version\": \"0.1.0\",\n            \"revision\": \"REVISION-SAMPLE-4-AF669139B772FC\",\n            \"status\": \"Published\"\n        }\n    ]\n}\n\n\nFor more information, see List package versions in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "list-packages",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/list-packages.html",
      "command_description": "Description\n\nReturns a list of PackageSummary objects for packages in a repository that match the request parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-packages is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: packages",
      "command_synopsis": "Synopsis\n  list-packages\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n[--format <value>]\n[--namespace <value>]\n[--package-prefix <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "[--format <value>]",
        "[--namespace <value>]",
        "[--package-prefix <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository that contains the requested list of packages.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository from which packages are to be listed.\n\n--format (string)\n\nThe format of the packages. The valid package types are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package-prefix (string)\n\nA prefix used to filter returned packages. Only packages with names that start with packagePrefix are returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npackages -> (list)\n\nThe list of returned PackageSummary objects.\n\n(structure)\n\nDetails about a package, including its format, namespace, and name. The ListPackages operation returns a list of PackageSummary objects.\n\nformat -> (string)\n\nThe format of the package. Valid values are:\n\nnpm\n\npypi\n\nmaven\n\nnamespace -> (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\npackage -> (string)\n\nThe name of the package.\n\nnextToken -> (string)\n\nIf there are additional results, this is the token for the next set of results.",
      "command_examples": "Examples\n\nTo list packages in a repository\n\nThe following list-packages example list packages in a repository named test-repo in a domain named test-domain.\n\naws codeartifact list-packages \\\n    --domain test-domain \\\n    --repository test-repo\n\n\nOutput:\n\n{\n    \"packages\": [\n        {\n            \"format\": \"npm\",\n            \"package\": \"lodash\"\n        }\n        {\n            \"format\": \"python\",\n            \"package\": \"test-package\"\n        }\n    ]\n}\n\n\nFor more information, see List package names in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "list-repositories",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/list-repositories.html",
      "command_description": "Description\n\nReturns a list of RepositorySummary objects. Each RepositorySummary contains information about a repository in the specified AWS account and that matches the input parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-repositories is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: repositories",
      "command_synopsis": "Synopsis\n  list-repositories\n[--repository-prefix <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--repository-prefix <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--repository-prefix (string)\n\nA prefix used to filter returned repositories. Only repositories with names that start with repositoryPrefix are returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepositories -> (list)\n\nThe returned list of RepositorySummary objects.\n\n(structure)\n\nDetails about a repository, including its Amazon Resource Name (ARN), description, and domain information. The ListRepositories operation returns a list of RepositorySummary objects.\n\nname -> (string)\n\nThe name of the repository.\n\nadministratorAccount -> (string)\n\nThe AWS account ID that manages the repository.\n\ndomainName -> (string)\n\nThe name of the domain that contains the repository.\n\ndomainOwner -> (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\narn -> (string)\n\nThe ARN of the repository.\n\ndescription -> (string)\n\nThe description of the repository.\n\nnextToken -> (string)\n\nIf there are additional results, this is the token for the next set of results.",
      "command_examples": "Examples\n\nTo list repositories\n\nThe following list-repositories example returns a summary of all repositories in domain owned by the AWS account that makes the call.\n\naws codeartifact list-repositories\n\n\nOutput:\n\n{\n    \"repositories\": [\n        {\n            \"name\": \"npm-store\",\n            \"administratorAccount\": \"111122223333\",\n            \"domainName\": \"my-domain\",\n            \"domainOwner\": \"111122223333\",\n            \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/my-domain/npm-store\",\n            \"description\": \"Provides npm artifacts from npm, Inc.\"\n        },\n        {\n            \"name\": \"target-repo\",\n            \"administratorAccount\": \"111122223333\",\n            \"domainName\": \"my-domain\",\n            \"domainOwner\": \"111122223333\",\n            \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/my-domain/target-repo\",\n            \"description\": \"test target repo\"\n        },\n        {\n            \"name\": \"test-repo2\",\n            \"administratorAccount\": \"111122223333\",\n            \"domainName\": \"test-domain\",\n            \"domainOwner\": \"111122223333\",\n            \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/test-domain/test-repo2\",\n            \"description\": \"This is a test repository.\"\n        }\n    ]\n}\n\n\nFor more information, see List repositories in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "list-repositories-in-domain",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/list-repositories-in-domain.html",
      "command_description": "Description\n\nReturns a list of RepositorySummary objects. Each RepositorySummary contains information about a repository in the specified domain and that matches the input parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-repositories-in-domain is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: repositories",
      "command_synopsis": "Synopsis\n  list-repositories-in-domain\n--domain <value>\n[--domain-owner <value>]\n[--administrator-account <value>]\n[--repository-prefix <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "[--administrator-account <value>]",
        "[--repository-prefix <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the returned list of repositories.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--administrator-account (string)\n\nFilter the list of repositories to only include those that are managed by the AWS account ID.\n\n--repository-prefix (string)\n\nA prefix used to filter returned repositories. Only repositories with names that start with repositoryPrefix are returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepositories -> (list)\n\nThe returned list of repositories.\n\n(structure)\n\nDetails about a repository, including its Amazon Resource Name (ARN), description, and domain information. The ListRepositories operation returns a list of RepositorySummary objects.\n\nname -> (string)\n\nThe name of the repository.\n\nadministratorAccount -> (string)\n\nThe AWS account ID that manages the repository.\n\ndomainName -> (string)\n\nThe name of the domain that contains the repository.\n\ndomainOwner -> (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\narn -> (string)\n\nThe ARN of the repository.\n\ndescription -> (string)\n\nThe description of the repository.\n\nnextToken -> (string)\n\nIf there are additional results, this is the token for the next set of results.",
      "command_examples": "Examples\n\nTo list repositories in a domain\n\nThe following list-repositories-in-domain example returns a summary of all repositories in the test-domain domain.\n\naws codeartifact list-repositories-in-domain \\\n    --domain test-domain\n\n\nOutput:\n\n{\n    \"repositories\": [\n        {\n            \"name\": \"test-repo\",\n            \"administratorAccount\": \"111122223333\",\n            \"domainName\": \"test-domain\",\n            \"domainOwner\": \"111122223333\",\n            \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/test-domain/test-repo\",\n            \"description\": \"This is a test repository.\"\n        },\n        {\n            \"name\": \"test-repo2\",\n            \"administratorAccount\": \"111122223333\",\n            \"domainName\": \"test-domain\",\n            \"domainOwner\": \"111122223333\",\n            \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/test-domain/test-repo2\",\n            \"description\": \"This is a test repository.\"\n        }\n    ]\n}\n\n\nFor more information, see List repositories in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/list-tags-for-resource.html",
      "command_description": "Description\n\nGets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS CodeArtifact.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource to get tags for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (list)\n\nA list of tag key and value pairs associated with the specified resource.\n\n(structure)\n\nA tag is a key-value pair that can be used to manage, search for, or filter resources in AWS CodeArtifact.\n\nkey -> (string)\n\nThe tag key.\n\nvalue -> (string)\n\nThe tag value."
    },
    {
      "command_name": "login",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/login.html",
      "command_description": "Description\n\nSets up the idiomatic tool for your package format to use your CodeArtifact repository. Your login information is valid for up to 12 hours after which you must login again.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  login\n--tool <value>\n--domain <value>\n[--domain-owner <value>]\n[--namespace <value>]\n[--duration-seconds <value>]\n--repository <value>\n[--dry-run]\n",
      "command_options": [
        "--tool <value>",
        "--domain <value>",
        "[--domain-owner <value>]",
        "[--namespace <value>]",
        "[--duration-seconds <value>]",
        "--repository <value>",
        "[--dry-run]"
      ],
      "command_options_description": "Options\n\n--tool (string) The tool you want to connect with your repository\n\n--domain (string) Your CodeArtifact domain name\n\n--domain-owner (string) The AWS account ID that owns your CodeArtifact domain\n\n--namespace (string) Associates a namespace with your repository tool\n\n--duration-seconds (integer) The time, in seconds, that the login information is valid\n\n--repository (string) Your CodeArtifact repository name\n\n--dry-run (boolean) Only print the commands that would be executed to connect your tool with your repository without making any changes to your configuration\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_examples": "Examples\n\nTo configure authentication to your repository with the login command\n\nThe following login example configures the npm package manager with a repository named test-repo in a domain named test-domain.\n\naws codeartifact login \\\n    --domain test-domain \\\n    --repository test-repo \\\n    --tool npm\n\n\nOutput:\n\nSuccessfully configured npm to use AWS CodeArtifact repository https://test-domain-111122223333.d.codeartifact.us-west-2.amazonaws.com/npm/test-repo/\nLogin expires in 12 hours at 2020-11-12 01:53:16-05:00\n\n\nFor more information, see Getting started with the AWS CLI in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "put-domain-permissions-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/put-domain-permissions-policy.html",
      "command_description": "Description\n\nSets a resource policy on a domain that specifies permissions to access it.\n\nWhen you call PutDomainPermissionsPolicy , the resource policy on the domain is ignored when evaluting permissions. This ensures that the owner of a domain cannot lock themselves out of the domain, which would prevent them from being able to update the resource policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-domain-permissions-policy\n--domain <value>\n[--domain-owner <value>]\n[--policy-revision <value>]\n--policy-document <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "[--policy-revision <value>]",
        "--policy-document <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain on which to set the resource policy.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--policy-revision (string)\n\nThe current revision of the resource policy to be set. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain’s resource policy.\n\n--policy-document (string)\n\nA valid displayable JSON Aspen policy string to be set as the access control resource policy on the provided domain.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npolicy -> (structure)\n\nThe resource policy that was set after processing the request.\n\nresourceArn -> (string)\n\nThe ARN of the resource associated with the resource policy\n\nrevision -> (string)\n\nThe current revision of the resource policy.\n\ndocument -> (string)\n\nThe resource policy formatted in JSON.",
      "command_examples": "Examples\n\nTo attach a permissions policy to a domain\n\nThe following put-domain-permissions-policy example attaches a permission policy that is defined in the policy.json file to a domain named test-domain.\n\naws codeartifact put-domain-permissions-policy \\\n    --domain test-domain \\\n    --policy-document file://PATH/TO/policy.json\n\n\nOutput:\n\n{\n    \"policy\": {\n        \"resourceArn\": \"arn:aws:codeartifact:region-id:111122223333:domain/test-domain\",\n        \"document\": \"{ ...policy document content...}\",\n        \"revision\": \"MQlyyTQRASRU3HB58gBtSDHXG7Q3hvxxxxxxx=\"\n    }\n}\n\n\nFor more information, see Set a domain policy in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "put-repository-permissions-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/put-repository-permissions-policy.html",
      "command_description": "Description\n\nSets the resource policy on a repository that specifies permissions to access it.\n\nWhen you call PutRepositoryPermissionsPolicy , the resource policy on the repository is ignored when evaluting permissions. This ensures that the owner of a repository cannot lock themselves out of the repository, which would prevent them from being able to update the resource policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-repository-permissions-policy\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n[--policy-revision <value>]\n--policy-document <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "[--policy-revision <value>]",
        "--policy-document <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain containing the repository to set the resource policy on.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository to set the resource policy on.\n\n--policy-revision (string)\n\nSets the revision of the resource policy that specifies permissions to access the repository. This revision is used for optimistic locking, which prevents others from overwriting your changes to the repository’s resource policy.\n\n--policy-document (string)\n\nA valid displayable JSON Aspen policy string to be set as the access control resource policy on the provided repository.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npolicy -> (structure)\n\nThe resource policy that was set after processing the request.\n\nresourceArn -> (string)\n\nThe ARN of the resource associated with the resource policy\n\nrevision -> (string)\n\nThe current revision of the resource policy.\n\ndocument -> (string)\n\nThe resource policy formatted in JSON.",
      "command_examples": "Examples\n\nTo attach a permissions policy to a repository\n\nThe following put-repository-permissions-policy example attaches a permission policy that is defined in the policy.json file to a repository named test-repo.\n\naws codeartifact put-repository-permissions-policy \\\n    --domain test-domain \\\n    --repository test-repo \\\n    --policy-document file://PATH/TO/policy.json\n\n\nOutput:\n\n{\n    \"policy\": {\n        \"resourceArn\": \"arn:aws:codeartifact:region-id:111122223333:repository/test-domain/test-repo\",\n        \"document\": \"{ ...policy document content...}\",\n        \"revision\": \"MQlyyTQRASRU3HB58gBtSDHXG7Q3hvxxxxxxx=\"\n    }\n}\n\n\nFor more information, see Set a policy in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/tag-resource.html",
      "command_description": "Description\n\nAdds or updates tags for a resource in AWS CodeArtifact.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource that you want to add or update tags for.\n\n--tags (list)\n\nThe tags you want to modify or add to the resource.\n\n(structure)\n\nA tag is a key-value pair that can be used to manage, search for, or filter resources in AWS CodeArtifact.\n\nkey -> (string)\n\nThe tag key.\n\nvalue -> (string)\n\nThe tag value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/untag-resource.html",
      "command_description": "Description\n\nRemoves tags from a resource in AWS CodeArtifact.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource that you want to remove tags from.\n\n--tag-keys (list)\n\nThe tag key for each tag that you want to remove from the resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-package-versions-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/update-package-versions-status.html",
      "command_description": "Description\n\nUpdates the status of one or more versions of a package.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-package-versions-status\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n--format <value>\n[--namespace <value>]\n--package <value>\n--versions <value>\n[--version-revisions <value>]\n[--expected-status <value>]\n--target-status <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "--format <value>",
        "[--namespace <value>]",
        "--package <value>",
        "--versions <value>",
        "[--version-revisions <value>]",
        "[--expected-status <value>]",
        "--target-status <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain that contains the repository that contains the package versions with a status to be updated.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe repository that contains the package versions with the status you want to update.\n\n--format (string)\n\nA format that specifies the type of the package with the statuses to update. The valid values are:\n\nnpm\n\npypi\n\nmaven\n\nPossible values:\n\nnpm\n\npypi\n\nmaven\n\nnuget\n\n--namespace (string)\n\nThe namespace of the package. The package component that specifies its namespace depends on its type. For example:\n\nThe namespace of a Maven package is its groupId .\n\nThe namespace of an npm package is its scope .\n\nA Python package does not contain a corresponding component, so Python packages do not have a namespace.\n\n--package (string)\n\nThe name of the package with the version statuses to update.\n\n--versions (list)\n\nAn array of strings that specify the versions of the package with the statuses to update.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--version-revisions (map)\n\nA map of package versions and package version revisions. The map key is the package version (for example, 3.5.2 ), and the map value is the package version revision.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--expected-status (string)\n\nThe package version’s expected status before it is updated. If expectedStatus is provided, the package version’s status is updated only if its status at the time UpdatePackageVersionsStatus is called matches expectedStatus .\n\nPossible values:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nDeleted\n\n--target-status (string)\n\nThe status you want to change the package version status to.\n\nPossible values:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nDeleted\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsuccessfulVersions -> (map)\n\nA list of PackageVersionError objects, one for each package version with a status that failed to update.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains the revision and status of a package version.\n\nrevision -> (string)\n\nThe revision of a package version.\n\nstatus -> (string)\n\nThe status of a package version. Valid statuses are:\n\nPublished\n\nUnfinished\n\nUnlisted\n\nArchived\n\nDisposed\n\nfailedVersions -> (map)\n\nA list of SuccessfulPackageVersionInfo objects, one for each package version with a status that successfully updated.\n\nkey -> (string)\n\nvalue -> (structure)\n\nAn error associated with package.\n\nerrorCode -> (string)\n\nThe error code associated with the error. Valid error codes are:\n\nALREADY_EXISTS\n\nMISMATCHED_REVISION\n\nMISMATCHED_STATUS\n\nNOT_ALLOWED\n\nNOT_FOUND\n\nSKIPPED\n\nerrorMessage -> (string)\n\nThe error message associated with the error.",
      "command_examples": "Examples\n\nTo update package version status\n\nThe following update-package-versions-status example updates the status of version 4.0.0 of the test-package package to Archived.\n\naws codeartifact update-package-versions-status \\\n    --domain test-domain \\\n    --repo test-repo \\\n    --format npm \\\n    --package test-package \\\n    --versions 4.0.0 \\\n    --target-status Archived\n\n\nOutput:\n\n{\n    \"successfulVersions\": {\n        \"4.0.0\": {\n            \"revision\": \"Ciqe5/9yicvkJT13b5/LdLpCyE6fqA7poa9qp+FilPs=\",\n            \"status\": \"Archived\"\n        }\n    },\n    \"failedVersions\": {}\n}\n\n\nFor more information, see Update package version status in the AWS CodeArtifact User Guide."
    },
    {
      "command_name": "update-repository",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codeartifact/update-repository.html",
      "command_description": "Description\n\nUpdate the properties of a repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-repository\n--domain <value>\n[--domain-owner <value>]\n--repository <value>\n[--description <value>]\n[--upstreams <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain <value>",
        "[--domain-owner <value>]",
        "--repository <value>",
        "[--description <value>]",
        "[--upstreams <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain (string)\n\nThe name of the domain associated with the repository to update.\n\n--domain-owner (string)\n\nThe 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces.\n\n--repository (string)\n\nThe name of the repository to update.\n\n--description (string)\n\nAn updated repository description.\n\n--upstreams (list)\n\nA list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see Working with upstream repositories .\n\n(structure)\n\nInformation about an upstream repository. A list of UpstreamRepository objects is an input parameter to CreateRepository and UpdateRepository .\n\nrepositoryName -> (string)\n\nThe name of an upstream repository.\n\nShorthand Syntax:\n\nrepositoryName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"repositoryName\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrepository -> (structure)\n\nThe updated repository.\n\nname -> (string)\n\nThe name of the repository.\n\nadministratorAccount -> (string)\n\nThe 12-digit account number of the AWS account that manages the repository.\n\ndomainName -> (string)\n\nThe name of the domain that contains the repository.\n\ndomainOwner -> (string)\n\nThe 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the repository.\n\ndescription -> (string)\n\nA text description of the repository.\n\nupstreams -> (list)\n\nA list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see Working with upstream repositories .\n\n(structure)\n\nInformation about an upstream repository.\n\nrepositoryName -> (string)\n\nThe name of an upstream repository.\n\nexternalConnections -> (list)\n\nAn array of external connections associated with the repository.\n\n(structure)\n\nContains information about the external connection of a repository.\n\nexternalConnectionName -> (string)\n\nThe name of the external connection associated with a repository.\n\npackageFormat -> (string)\n\nThe package format associated with a repository’s external connection. The valid package formats are:\n\nnpm : A Node Package Manager (npm) package.\n\npypi : A Python Package Index (PyPI) package.\n\nmaven : A Maven package that contains compiled code in a distributable format, such as a JAR file.\n\nstatus -> (string)\n\nThe status of the external connection of a repository. There is one valid value, Available .",
      "command_examples": "Examples\n\nTo update a repository\n\nThe following update-repository example updates the description of a repo named test-repo in a domain named test-domain to “this is an updated description”.\n\naws codeartifact update-repository \\\n    --domain test-domain \\\n    --repository test-repo \\\n    --description \"this is an updated description\"\n\n\nOutput:\n\n{\n    \"repository\": {\n        \"name\": \"test-repo\",\n        \"administratorAccount\": \"111122223333\",\n        \"domainName\": \"test-domain\",\n        \"domainOwner\": \"111122223333\",\n        \"arn\": \"arn:aws:codeartifact:us-west-2:111122223333:repository/test-domain/test-repo\",\n        \"description\": \"this is an updated description\",\n        \"upstreams\": [],\n        \"externalConnections\": []\n    }\n}\n\n\nFor more information, see View or modify a repository configuration in the AWS CodeArtifact User Guide."
    }
  ],
  "service_description": "Description\n\nAWS CodeArtifact is a fully managed artifact repository compatible with language-native package managers and build tools such as npm, Apache Maven, and pip. You can use CodeArtifact to share packages with development teams and pull packages. Packages can be pulled from both public and CodeArtifact repositories. You can also create an upstream relationship between a CodeArtifact repository and another repository, which effectively merges their contents from the point of view of a package manager client.\n\nAWS CodeArtifact Components\n\nUse the information in this guide to help you work with the following CodeArtifact components:\n\nRepository : A CodeArtifact repository contains a set of package versions , each of which maps to a set of assets, or files. Repositories are polyglot, so a single repository can contain packages of any supported type. Each repository exposes endpoints for fetching and publishing packages using tools like the ** npm ** CLI, the Maven CLI (** mvn ** ), and ** pip ** .\n\nDomain : Repositories are aggregated into a higher-level entity known as a domain . All package assets and metadata are stored in the domain, but are consumed through repositories. A given package asset, such as a Maven JAR file, is stored once per domain, no matter how many repositories it’s present in. All of the assets and metadata in a domain are encrypted with the same customer master key (CMK) stored in AWS Key Management Service (AWS KMS). Each repository is a member of a single domain and can’t be moved to a different domain. The domain allows organizational policy to be applied across multiple repositories, such as which accounts can access repositories in the domain, and which public repositories can be used as sources of packages. Although an organization can have multiple domains, we recommend a single production domain that contains all published artifacts so that teams can find and share packages across their organization.\n\nPackage : A package is a bundle of software and the metadata required to resolve dependencies and install the software. CodeArtifact supports npm , PyPI , and Maven package formats. In CodeArtifact, a package consists of:\n\nA name (for example, webpack is the name of a popular npm package)\n\nAn optional namespace (for example, @types in @types/node )\n\nA set of versions (for example, 1.0.0 , 1.0.1 , 1.0.2 , etc.)\n\nPackage-level metadata (for example, npm tags)\n\nPackage version : A version of a package, such as @types/node 12.6.9 . The version number format and semantics vary for different package formats. For example, npm package versions must conform to the Semantic Versioning specification . In CodeArtifact, a package version consists of the version identifier, metadata at the package version level, and a set of assets.\n\nUpstream repository : One repository is upstream of another when the package versions in it can be accessed from the repository endpoint of the downstream repository, effectively merging the contents of the two repositories from the point of view of a client. CodeArtifact allows creating an upstream relationship between two repositories.\n\nAsset : An individual file stored in CodeArtifact associated with a package version, such as an npm .tgz file or Maven POM and JAR files.\n\nCodeArtifact supports these operations:\n\nAssociateExternalConnection : Adds an existing external connection to a repository.\n\nCopyPackageVersions : Copies package versions from one repository to another repository in the same domain.\n\nCreateDomain : Creates a domain\n\nCreateRepository : Creates a CodeArtifact repository in a domain.\n\nDeleteDomain : Deletes a domain. You cannot delete a domain that contains repositories.\n\nDeleteDomainPermissionsPolicy : Deletes the resource policy that is set on a domain.\n\nDeletePackageVersions : Deletes versions of a package. After a package has been deleted, it can be republished, but its assets and metadata cannot be restored because they have been permanently removed from storage.\n\nDeleteRepository : Deletes a repository.\n\nDeleteRepositoryPermissionsPolicy : Deletes the resource policy that is set on a repository.\n\nDescribeDomain : Returns a DomainDescription object that contains information about the requested domain.\n\nDescribePackageVersion : Returns a PackageVersionDescription object that contains details about a package version.\n\nDescribeRepository : Returns a RepositoryDescription object that contains detailed information about the requested repository.\n\nDisposePackageVersions : Disposes versions of a package. A package version with the status Disposed cannot be restored because they have been permanently removed from storage.\n\nDisassociateExternalConnection : Removes an existing external connection from a repository.\n\nGetAuthorizationToken : Generates a temporary authorization token for accessing repositories in the domain. The token expires the authorization period has passed. The default authorization period is 12 hours and can be customized to any length with a maximum of 12 hours.\n\nGetDomainPermissionsPolicy : Returns the policy of a resource that is attached to the specified domain.\n\nGetPackageVersionAsset : Returns the contents of an asset that is in a package version.\n\nGetPackageVersionReadme : Gets the readme file or descriptive text for a package version.\n\nGetRepositoryEndpoint : Returns the endpoint of a repository for a specific package format. A repository has one endpoint for each package format:\n\nnpm\n\npypi\n\nmaven\n\nGetRepositoryPermissionsPolicy : Returns the resource policy that is set on a repository.\n\nListDomains : Returns a list of DomainSummary objects. Each returned DomainSummary object contains information about a domain.\n\nListPackages : Lists the packages in a repository.\n\nListPackageVersionAssets : Lists the assets for a given package version.\n\nListPackageVersionDependencies : Returns a list of the direct dependencies for a package version.\n\nListPackageVersions : Returns a list of package versions for a specified package in a repository.\n\nListRepositories : Returns a list of repositories owned by the AWS account that called this method.\n\nListRepositoriesInDomain : Returns a list of the repositories in a domain.\n\nPutDomainPermissionsPolicy : Attaches a resource policy to a domain.\n\nPutRepositoryPermissionsPolicy : Sets the resource policy on a repository that specifies permissions to access it.\n\nUpdatePackageVersionsStatus : Updates the status of one or more versions of a package.\n\nUpdateRepository : Updates the properties of a repository."
}