{
  "service_name": "sqs",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/index.html",
  "service_commands": [
    {
      "command_name": "add-permission",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/add-permission.html",
      "command_description": "Description\n\nAdds a permission to a queue for a specific principal . This allows sharing access to the queue.\n\nWhen you create a queue, you have full control access rights for the queue. Only you, the owner of the queue, can grant or deny permissions to the queue. For more information about these permissions, see Allow Developers to Write Messages to a Shared Queue in the Amazon SQS Developer Guide .\n\nNote\n\nAddPermission generates a policy for you. You can use `` SetQueueAttributes `` to upload your policy. For more information, see Using Custom Policies with the Amazon SQS Access Policy Language in the Amazon SQS Developer Guide .\n\nAn Amazon SQS policy can have a maximum of 7 actions.\n\nTo remove the ability to change queue permissions, you must deny permission to the AddPermission , RemovePermission , and SetQueueAttributes actions in your IAM policy.\n\nSome actions take lists of parameters. These lists are specified using the param.n notation. Values of n are integers starting from 1. For example, a parameter list with two elements looks like this:\n\n&AttributeName.1=first\n\n&AttributeName.2=second\n\nNote\n\nCross-account permissions don’t apply to this action. For more information, see Grant cross-account permissions to a role and a user name in the Amazon SQS Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-permission\n--queue-url <value>\n--label <value>\n--aws-account-ids <value>\n--actions <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--label <value>",
        "--aws-account-ids <value>",
        "--actions <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue to which permissions are added.\n\nQueue URLs and names are case-sensitive.\n\n--label (string)\n\nThe unique identification of the permission you’re setting (for example, AliceSendMessage ). Maximum 80 characters. Allowed characters include alphanumeric characters, hyphens (- ), and underscores (_ ).\n\n--aws-account-ids (list)\n\nThe account numbers of the principals who are to receive permission. For information about locating the account identification, see Your Amazon Web Services Identifiers in the Amazon SQS Developer Guide .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--actions (list)\n\nThe action the client wants to allow for the specified principal. Valid values: the name of any action or * .\n\nFor more information about these actions, see Overview of Managing Access Permissions to Your Amazon Simple Queue Service Resource in the Amazon SQS Developer Guide .\n\nSpecifying SendMessage , DeleteMessage , or ChangeMessageVisibility for ActionName.n also grants permissions for the corresponding batch versions of those actions: SendMessageBatch , DeleteMessageBatch , and ChangeMessageVisibilityBatch .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a permission to a queue\n\nThis example enables the specified AWS account to send messages to the specified queue.\n\nCommand:\n\naws sqs add-permission --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --label SendMessagesFromMyQueue --aws-account-ids 12345EXAMPLE --actions SendMessage\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "change-message-visibility",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/change-message-visibility.html",
      "command_description": "Description\n\nChanges the visibility timeout of a specified message in a queue to a new value. The default visibility timeout for a message is 30 seconds. The minimum is 0 seconds. The maximum is 12 hours. For more information, see Visibility Timeout in the Amazon SQS Developer Guide .\n\nFor example, you have a message with a visibility timeout of 5 minutes. After 3 minutes, you call ChangeMessageVisibility with a timeout of 10 minutes. You can continue to call ChangeMessageVisibility to extend the visibility timeout to the maximum allowed time. If you try to extend the visibility timeout beyond the maximum, your request is rejected.\n\nAn Amazon SQS message has three basic states:\n\nSent to a queue by a producer.\n\nReceived from the queue by a consumer.\n\nDeleted from the queue.\n\nA message is considered to be stored after it is sent to a queue by a producer, but not yet received from the queue by a consumer (that is, between states 1 and 2). There is no limit to the number of stored messages. A message is considered to be in flight after it is received from a queue by a consumer, but not yet deleted from the queue (that is, between states 2 and 3). There is a limit to the number of inflight messages.\n\nLimits that apply to inflight messages are unrelated to the unlimited number of stored messages.\n\nFor most standard queues (depending on queue traffic and message backlog), there can be a maximum of approximately 120,000 inflight messages (received from a queue by a consumer, but not yet deleted from the queue). If you reach this limit, Amazon SQS returns the OverLimit error message. To avoid reaching the limit, you should delete messages from the queue after they’re processed. You can also increase the number of queues you use to process your messages. To request a limit increase, file a support request .\n\nFor FIFO queues, there can be a maximum of 20,000 inflight messages (received from a queue by a consumer, but not yet deleted from the queue). If you reach this limit, Amazon SQS returns no error messages.\n\nWarning\n\nIf you attempt to set the VisibilityTimeout to a value greater than the maximum time left, Amazon SQS returns an error. Amazon SQS doesn’t automatically recalculate and increase the timeout to the maximum remaining time.\n\nUnlike with a queue, when you change the visibility timeout for a specific message the timeout value is applied immediately but isn’t saved in memory for that message. If you don’t delete a message after it is received, the visibility timeout for the message reverts to the original timeout value (not to the value you set using the ChangeMessageVisibility action) the next time the message is received.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  change-message-visibility\n--queue-url <value>\n--receipt-handle <value>\n--visibility-timeout <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--receipt-handle <value>",
        "--visibility-timeout <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue whose message’s visibility is changed.\n\nQueue URLs and names are case-sensitive.\n\n--receipt-handle (string)\n\nThe receipt handle associated with the message whose visibility timeout is changed. This parameter is returned by the `` ReceiveMessage `` action.\n\n--visibility-timeout (integer)\n\nThe new value for the message’s visibility timeout (in seconds). Values range: 0 to 43200 . Maximum: 12 hours.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo change a message’s timeout visibility\n\nThis example changes the specified message’s timeout visibility to 10 hours (10 hours * 60 minutes * 60 seconds).\n\nCommand:\n\naws sqs change-message-visibility --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --receipt-handle AQEBTpyI...t6HyQg== --visibility-timeout 36000\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "change-message-visibility-batch",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/change-message-visibility-batch.html",
      "command_description": "Description\n\nChanges the visibility timeout of multiple messages. This is a batch version of `` ChangeMessageVisibility .`` The result of the action on each message is reported individually in the response. You can send up to 10 `` ChangeMessageVisibility `` requests with each ChangeMessageVisibilityBatch action.\n\nWarning\n\nBecause the batch request can result in a combination of successful and unsuccessful actions, you should check for batch errors even when the call returns an HTTP status code of 200 .\n\nSome actions take lists of parameters. These lists are specified using the param.n notation. Values of n are integers starting from 1. For example, a parameter list with two elements looks like this:\n\n&AttributeName.1=first\n\n&AttributeName.2=second\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  change-message-visibility-batch\n--queue-url <value>\n--entries <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--entries <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue whose messages’ visibility is changed.\n\nQueue URLs and names are case-sensitive.\n\n--entries (list)\n\nA list of receipt handles of the messages for which the visibility timeout must be changed.\n\n(structure)\n\nEncloses a receipt handle and an entry id for each message in `` ChangeMessageVisibilityBatch .``\n\nWarning\n\nAll of the following list parameters must be prefixed with ChangeMessageVisibilityBatchRequestEntry.n , where n is an integer value starting with 1 . For example, a parameter list for this action might look like this:\n\n&ChangeMessageVisibilityBatchRequestEntry.1.Id=change_visibility_msg_2\n\n&ChangeMessageVisibilityBatchRequestEntry.1.ReceiptHandle=your_receipt_handle\n\n&ChangeMessageVisibilityBatchRequestEntry.1.VisibilityTimeout=45\n\nId -> (string)\n\nAn identifier for this particular receipt handle used to communicate the result.\n\nNote\n\nThe Id s of a batch request need to be unique within a request.\n\nThis identifier can have up to 80 characters. The following characters are accepted: alphanumeric characters, hyphens(-), and underscores (_).\n\nReceiptHandle -> (string)\n\nA receipt handle.\n\nVisibilityTimeout -> (integer)\n\nThe new value (in seconds) for the message’s visibility timeout.\n\nShorthand Syntax:\n\nId=string,ReceiptHandle=string,VisibilityTimeout=integer ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Id\": \"string\",\n    \"ReceiptHandle\": \"string\",\n    \"VisibilityTimeout\": integer\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSuccessful -> (list)\n\nA list of `` ChangeMessageVisibilityBatchResultEntry `` items.\n\n(structure)\n\nEncloses the Id of an entry in `` ChangeMessageVisibilityBatch .``\n\nId -> (string)\n\nRepresents a message whose visibility timeout has been changed successfully.\n\nFailed -> (list)\n\nA list of `` BatchResultErrorEntry `` items.\n\n(structure)\n\nGives a detailed description of the result of an action on each entry in the request.\n\nId -> (string)\n\nThe Id of an entry in a batch request.\n\nSenderFault -> (boolean)\n\nSpecifies whether the error happened due to the caller of the batch API action.\n\nCode -> (string)\n\nAn error code representing why the action failed on this entry.\n\nMessage -> (string)\n\nA message explaining why the action failed on this entry.",
      "command_examples": "Examples\n\nTo change multiple messages’ timeout visibilities as a batch\n\nThis example changes the 2 specified messages’ timeout visibilities to 10 hours (10 hours * 60 minutes * 60 seconds).\n\nCommand:\n\naws sqs change-message-visibility-batch --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --entries file://change-message-visibility-batch.json\n\n\nInput file (change-message-visibility-batch.json):\n\n[\n  {\n    \"Id\": \"FirstMessage\",\n        \"ReceiptHandle\": \"AQEBhz2q...Jf3kaw==\",\n        \"VisibilityTimeout\": 36000\n  },\n  {\n    \"Id\": \"SecondMessage\",\n        \"ReceiptHandle\": \"AQEBkTUH...HifSnw==\",\n        \"VisibilityTimeout\": 36000\n  }\n]\n\n\nOutput:\n\n{\n  \"Successful\": [\n    {\n      \"Id\": \"SecondMessage\"\n    },\n    {\n      \"Id\": \"FirstMessage\"\n    }\n  ]\n}\n"
    },
    {
      "command_name": "create-queue",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/create-queue.html",
      "command_description": "Description\n\nCreates a new standard or FIFO queue. You can pass one or more attributes in the request. Keep the following in mind:\n\nIf you don’t specify the FifoQueue attribute, Amazon SQS creates a standard queue.\n\nNote\n\nYou can’t change the queue type after you create it and you can’t convert an existing standard queue into a FIFO queue. You must either create a new FIFO queue for your application or delete your existing standard queue and recreate it as a FIFO queue. For more information, see Moving From a Standard Queue to a FIFO Queue in the Amazon SQS Developer Guide .\n\nIf you don’t provide a value for an attribute, the queue is created with the default value for the attribute.\n\nIf you delete a queue, you must wait at least 60 seconds before creating a queue with the same name.\n\nTo successfully create a new queue, you must provide a queue name that adheres to the limits related to queues and is unique within the scope of your queues.\n\nNote\n\nAfter you create a queue, you must wait at least one second after the queue is created to be able to use the queue.\n\nTo get the queue URL, use the `` GetQueueUrl `` action. `` GetQueueUrl `` requires only the QueueName parameter. be aware of existing queue names:\n\nIf you provide the name of an existing queue along with the exact names and values of all the queue’s attributes, CreateQueue returns the queue URL for the existing queue.\n\nIf the queue name, attribute names, or attribute values don’t match an existing queue, CreateQueue returns an error.\n\nSome actions take lists of parameters. These lists are specified using the param.n notation. Values of n are integers starting from 1. For example, a parameter list with two elements looks like this:\n\n&AttributeName.1=first\n\n&AttributeName.2=second\n\nNote\n\nCross-account permissions don’t apply to this action. For more information, see Grant cross-account permissions to a role and a user name in the Amazon SQS Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-queue\n--queue-name <value>\n[--attributes <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-name <value>",
        "[--attributes <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-name (string)\n\nThe name of the new queue. The following limits apply to this name:\n\nA queue name can have up to 80 characters.\n\nValid values: alphanumeric characters, hyphens (- ), and underscores (_ ).\n\nA FIFO queue name must end with the .fifo suffix.\n\nQueue URLs and names are case-sensitive.\n\n--attributes (map)\n\nA map of attributes with their corresponding values.\n\nThe following lists the names, descriptions, and values of the special request parameters that the CreateQueue action uses:\n\nDelaySeconds – The length of time, in seconds, for which the delivery of all messages in the queue is delayed. Valid values: An integer from 0 to 900 seconds (15 minutes). Default: 0.\n\nMaximumMessageSize – The limit of how many bytes a message can contain before Amazon SQS rejects it. Valid values: An integer from 1,024 bytes (1 KiB) to 262,144 bytes (256 KiB). Default: 262,144 (256 KiB).\n\nMessageRetentionPeriod – The length of time, in seconds, for which Amazon SQS retains a message. Valid values: An integer from 60 seconds (1 minute) to 1,209,600 seconds (14 days). Default: 345,600 (4 days).\n\nPolicy – The queue’s policy. A valid Amazon Web Services policy. For more information about policy structure, see Overview of Amazon Web Services IAM Policies in the Amazon IAM User Guide .\n\nReceiveMessageWaitTimeSeconds – The length of time, in seconds, for which a `` ReceiveMessage `` action waits for a message to arrive. Valid values: An integer from 0 to 20 (seconds). Default: 0.\n\nVisibilityTimeout – The visibility timeout for the queue, in seconds. Valid values: An integer from 0 to 43,200 (12 hours). Default: 30. For more information about the visibility timeout, see Visibility Timeout in the Amazon SQS Developer Guide .\n\nThe following attributes apply only to dead-letter queues:\n\nRedrivePolicy – The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object. The parameters are as follows:\n\ndeadLetterTargetArn – The Amazon Resource Name (ARN) of the dead-letter queue to which Amazon SQS moves messages after the value of maxReceiveCount is exceeded.\n\nmaxReceiveCount – The number of times a message is delivered to the source queue before being moved to the dead-letter queue. When the ReceiveCount for a message exceeds the maxReceiveCount for a queue, Amazon SQS moves the message to the dead-letter-queue.\n\nRedriveAllowPolicy – The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object. The parameters are as follows:\n\nredrivePermission – The permission type that defines which source queues can specify the current queue as the dead-letter queue. Valid values are:\n\nallowAll – (Default) Any source queues in this Amazon Web Services account in the same Region can specify this queue as the dead-letter queue.\n\ndenyAll – No source queues can specify this queue as the dead-letter queue.\n\nbyQueue – Only queues specified by the sourceQueueArns parameter can specify this queue as the dead-letter queue.\n\nsourceQueueArns – The Amazon Resource Names (ARN)s of the source queues that can specify this queue as the dead-letter queue and redrive messages. You can specify this parameter only when the redrivePermission parameter is set to byQueue . You can specify up to 10 source queue ARNs. To allow more than 10 source queues to specify dead-letter queues, set the redrivePermission parameter to allowAll .\n\nNote\n\nThe dead-letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead-letter queue of a standard queue must also be a standard queue.\n\nThe following attributes apply only to server-side-encryption :\n\nKmsMasterKeyId – The ID of an Amazon Web Services managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see Key Terms . While the alias of the Amazon Web Services managed CMK for Amazon SQS is always alias/aws/sqs , the alias of a custom CMK can, for example, be ``alias/MyAlias `` . For more examples, see KeyId in the Key Management Service API Reference .\n\nKmsDataKeyReusePeriodSeconds – The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). Default: 300 (5 minutes). A shorter time period provides better security but results in more calls to KMS which might incur charges after Free Tier. For more information, see How Does the Data Key Reuse Period Work? .\n\nThe following attributes apply only to FIFO (first-in-first-out) queues :\n\nFifoQueue – Designates a queue as FIFO. Valid values are true and false . If you don’t specify the FifoQueue attribute, Amazon SQS creates a standard queue. You can provide this attribute only during queue creation. You can’t change it for an existing queue. When you set this attribute, you must also provide the MessageGroupId for your messages explicitly. For more information, see FIFO queue logic in the Amazon SQS Developer Guide .\n\nContentBasedDeduplication – Enables content-based deduplication. Valid values are true and false . For more information, see Exactly-once processing in the Amazon SQS Developer Guide . Note the following:\n\nEvery message must have a unique MessageDeduplicationId .\n\nYou may provide a MessageDeduplicationId explicitly.\n\nIf you aren’t able to provide a MessageDeduplicationId and you enable ContentBasedDeduplication for your queue, Amazon SQS uses a SHA-256 hash to generate the MessageDeduplicationId using the body of the message (but not the attributes of the message).\n\nIf you don’t provide a MessageDeduplicationId and the queue doesn’t have ContentBasedDeduplication set, the action fails with an error.\n\nIf the queue has ContentBasedDeduplication set, your MessageDeduplicationId overrides the generated one.\n\nWhen ContentBasedDeduplication is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered.\n\nIf you send one message with ContentBasedDeduplication enabled and then another message with a MessageDeduplicationId that is the same as the one generated for the first MessageDeduplicationId , the two messages are treated as duplicates and only one copy of the message is delivered.\n\nThe following attributes apply only to high throughput for FIFO queues :\n\nDeduplicationScope – Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue .\n\nFifoThroughputLimit – Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue and perMessageGroupId . The perMessageGroupId value is allowed only when the value for DeduplicationScope is messageGroup .\n\nTo enable high throughput for FIFO queues, do the following:\n\nSet DeduplicationScope to messageGroup .\n\nSet FifoThroughputLimit to perMessageGroupId .\n\nIf you set these attributes to anything other than the values shown for enabling high throughput, normal throughput is in effect and deduplication occurs as specified.\n\nFor information on throughput quotas, see Quotas related to messages in the Amazon SQS Developer Guide .\n\nName -> (string)\n\nValue -> (string)\n\nShorthand Syntax:\n\n  KeyName1=string,KeyName2=string\n\nWhere valid key names are:\n  All\n  Policy\n  VisibilityTimeout\n  MaximumMessageSize\n  MessageRetentionPeriod\n  ApproximateNumberOfMessages\n  ApproximateNumberOfMessagesNotVisible\n  CreatedTimestamp\n  LastModifiedTimestamp\n  QueueArn\n  ApproximateNumberOfMessagesDelayed\n  DelaySeconds\n  ReceiveMessageWaitTimeSeconds\n  RedrivePolicy\n  FifoQueue\n  ContentBasedDeduplication\n  KmsMasterKeyId\n  KmsDataKeyReusePeriodSeconds\n  DeduplicationScope\n  FifoThroughputLimit\n  RedriveAllowPolicy\n\n\nJSON Syntax:\n\n{\"All\"|\"Policy\"|\"VisibilityTimeout\"|\"MaximumMessageSize\"|\"MessageRetentionPeriod\"|\"ApproximateNumberOfMessages\"|\"ApproximateNumberOfMessagesNotVisible\"|\"CreatedTimestamp\"|\"LastModifiedTimestamp\"|\"QueueArn\"|\"ApproximateNumberOfMessagesDelayed\"|\"DelaySeconds\"|\"ReceiveMessageWaitTimeSeconds\"|\"RedrivePolicy\"|\"FifoQueue\"|\"ContentBasedDeduplication\"|\"KmsMasterKeyId\"|\"KmsDataKeyReusePeriodSeconds\"|\"DeduplicationScope\"|\"FifoThroughputLimit\"|\"RedriveAllowPolicy\": \"string\"\n  ...}\n\n\n--tags (map)\n\nAdd cost allocation tags to the specified Amazon SQS queue. For an overview, see Tagging Your Amazon SQS Queues in the Amazon SQS Developer Guide .\n\nWhen you use queue tags, keep the following guidelines in mind:\n\nAdding more than 50 tags to a queue isn’t recommended.\n\nTags don’t have any semantic meaning. Amazon SQS interprets tags as character strings.\n\nTags are case-sensitive.\n\nA new tag with a key identical to that of an existing tag overwrites the existing tag.\n\nFor a full list of tag restrictions, see Quotas related to queues in the Amazon SQS Developer Guide .\n\nNote\n\nTo be able to tag a queue on creation, you must have the sqs:CreateQueue and sqs:TagQueue permissions.\n\nCross-account permissions don’t apply to this action. For more information, see Grant cross-account permissions to a role and a user name in the Amazon SQS Developer Guide .\n\nKey -> (string)\n\nValue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueueUrl -> (string)\n\nThe URL of the created Amazon SQS queue.",
      "command_examples": "Examples\n\nTo create a queue\n\nThis example creates a queue with the specified name, sets the message retention period to 3 days (3 days * 24 hours * 60 minutes * 60 seconds), and sets the queue’s dead letter queue to the specified queue with a maximum receive count of 1,000 messages.\n\nCommand:\n\naws sqs create-queue --queue-name MyQueue --attributes file://create-queue.json\n\n\nInput file (create-queue.json):\n\n{\n  \"RedrivePolicy\": \"{\\\"deadLetterTargetArn\\\":\\\"arn:aws:sqs:us-east-1:80398EXAMPLE:MyDeadLetterQueue\\\",\\\"maxReceiveCount\\\":\\\"1000\\\"}\",\n  \"MessageRetentionPeriod\": \"259200\"\n}\n\n\nOutput:\n\n{\n  \"QueueUrl\": \"https://queue.amazonaws.com/80398EXAMPLE/MyQueue\"\n}\n"
    },
    {
      "command_name": "delete-message",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/delete-message.html",
      "command_description": "Description\n\nDeletes the specified message from the specified queue. To select the message to delete, use the ReceiptHandle of the message (not the MessageId which you receive when you send the message). Amazon SQS can delete a message from a queue even if a visibility timeout setting causes the message to be locked by another consumer. Amazon SQS automatically deletes messages left in a queue longer than the retention period configured for the queue.\n\nNote\n\nThe ReceiptHandle is associated with a specific instance of receiving a message. If you receive a message more than once, the ReceiptHandle is different each time you receive a message. When you use the DeleteMessage action, you must provide the most recently received ReceiptHandle for the message (otherwise, the request succeeds, but the message might not be deleted).\n\nFor standard queues, it is possible to receive a message even after you delete it. This might happen on rare occasions if one of the servers which stores a copy of the message is unavailable when you send the request to delete the message. The copy remains on the server and might be returned to you during a subsequent receive request. You should ensure that your application is idempotent, so that receiving a message more than once does not cause issues.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-message\n--queue-url <value>\n--receipt-handle <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--receipt-handle <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue from which messages are deleted.\n\nQueue URLs and names are case-sensitive.\n\n--receipt-handle (string)\n\nThe receipt handle associated with the message to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a message\n\nThis example deletes the specified message.\n\nCommand:\n\naws sqs delete-message --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --receipt-handle AQEBRXTo...q2doVA==\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "delete-message-batch",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/delete-message-batch.html",
      "command_description": "Description\n\nDeletes up to ten messages from the specified queue. This is a batch version of `` DeleteMessage .`` The result of the action on each message is reported individually in the response.\n\nWarning\n\nBecause the batch request can result in a combination of successful and unsuccessful actions, you should check for batch errors even when the call returns an HTTP status code of 200 .\n\nSome actions take lists of parameters. These lists are specified using the param.n notation. Values of n are integers starting from 1. For example, a parameter list with two elements looks like this:\n\n&AttributeName.1=first\n\n&AttributeName.2=second\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-message-batch\n--queue-url <value>\n--entries <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--entries <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue from which messages are deleted.\n\nQueue URLs and names are case-sensitive.\n\n--entries (list)\n\nA list of receipt handles for the messages to be deleted.\n\n(structure)\n\nEncloses a receipt handle and an identifier for it.\n\nId -> (string)\n\nAn identifier for this particular receipt handle. This is used to communicate the result.\n\nNote\n\nThe Id s of a batch request need to be unique within a request.\n\nThis identifier can have up to 80 characters. The following characters are accepted: alphanumeric characters, hyphens(-), and underscores (_).\n\nReceiptHandle -> (string)\n\nA receipt handle.\n\nShorthand Syntax:\n\nId=string,ReceiptHandle=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Id\": \"string\",\n    \"ReceiptHandle\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSuccessful -> (list)\n\nA list of `` DeleteMessageBatchResultEntry `` items.\n\n(structure)\n\nEncloses the Id of an entry in `` DeleteMessageBatch .``\n\nId -> (string)\n\nRepresents a successfully deleted message.\n\nFailed -> (list)\n\nA list of `` BatchResultErrorEntry `` items.\n\n(structure)\n\nGives a detailed description of the result of an action on each entry in the request.\n\nId -> (string)\n\nThe Id of an entry in a batch request.\n\nSenderFault -> (boolean)\n\nSpecifies whether the error happened due to the caller of the batch API action.\n\nCode -> (string)\n\nAn error code representing why the action failed on this entry.\n\nMessage -> (string)\n\nA message explaining why the action failed on this entry.",
      "command_examples": "Examples\n\nTo delete multiple messages as a batch\n\nThis example deletes the specified messages.\n\nCommand:\n\naws sqs delete-message-batch --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --entries file://delete-message-batch.json\n\n\nInput file (delete-message-batch.json):\n\n[\n  {\n        \"Id\": \"FirstMessage\",\n        \"ReceiptHandle\": \"AQEB1mgl...Z4GuLw==\"\n  },\n  {\n    \"Id\": \"SecondMessage\",\n        \"ReceiptHandle\": \"AQEBLsYM...VQubAA==\"\n  }\n]\n\n\nOutput:\n\n{\n  \"Successful\": [\n    {\n      \"Id\": \"FirstMessage\"\n    },\n    {\n      \"Id\": \"SecondMessage\"\n    }\n  ]\n}\n"
    },
    {
      "command_name": "delete-queue",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/delete-queue.html",
      "command_description": "Description\n\nDeletes the queue specified by the QueueUrl , regardless of the queue’s contents.\n\nWarning\n\nBe careful with the DeleteQueue action: When you delete a queue, any messages in the queue are no longer available.\n\nWhen you delete a queue, the deletion process takes up to 60 seconds. Requests you send involving that queue during the 60 seconds might succeed. For example, a `` SendMessage `` request might succeed, but after 60 seconds the queue and the message you sent no longer exist.\n\nWhen you delete a queue, you must wait at least 60 seconds before creating a queue with the same name.\n\nNote\n\nCross-account permissions don’t apply to this action. For more information, see Grant cross-account permissions to a role and a user name in the Amazon SQS Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-queue\n--queue-url <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue to delete.\n\nQueue URLs and names are case-sensitive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a queue\n\nThis example deletes the specified queue.\n\nCommand:\n\naws sqs delete-queue --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyNewerQueue\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "get-queue-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/get-queue-attributes.html",
      "command_description": "Description\n\nGets attributes for the specified queue.\n\nNote\n\nTo determine whether a queue is FIFO , you can check whether QueueName ends with the .fifo suffix.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-queue-attributes\n--queue-url <value>\n[--attribute-names <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "[--attribute-names <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue whose attribute information is retrieved.\n\nQueue URLs and names are case-sensitive.\n\n--attribute-names (list)\n\nA list of attributes for which to retrieve information.\n\nThe AttributeName.N parameter is optional, but if you don’t specify values for this parameter, the request returns empty results.\n\nNote\n\nIn the future, new attributes might be added. If you write code that calls this action, we recommend that you structure your code so that it can handle new attributes gracefully.\n\nThe following attributes are supported:\n\nWarning\n\nThe ApproximateNumberOfMessagesDelayed , ApproximateNumberOfMessagesNotVisible , and ApproximateNumberOfMessagesVisible metrics may not achieve consistency until at least 1 minute after the producers stop sending messages. This period is required for the queue metadata to reach eventual consistency.\n\nAll – Returns all values.\n\nApproximateNumberOfMessages – Returns the approximate number of messages available for retrieval from the queue.\n\nApproximateNumberOfMessagesDelayed – Returns the approximate number of messages in the queue that are delayed and not available for reading immediately. This can happen when the queue is configured as a delay queue or when a message has been sent with a delay parameter.\n\nApproximateNumberOfMessagesNotVisible – Returns the approximate number of messages that are in flight. Messages are considered to be in flight if they have been sent to a client but have not yet been deleted or have not yet reached the end of their visibility window.\n\nCreatedTimestamp – Returns the time when the queue was created in seconds (epoch time ).\n\nDelaySeconds – Returns the default delay on the queue in seconds.\n\nLastModifiedTimestamp – Returns the time when the queue was last changed in seconds (epoch time ).\n\nMaximumMessageSize – Returns the limit of how many bytes a message can contain before Amazon SQS rejects it.\n\nMessageRetentionPeriod – Returns the length of time, in seconds, for which Amazon SQS retains a message.\n\nPolicy – Returns the policy of the queue.\n\nQueueArn – Returns the Amazon resource name (ARN) of the queue.\n\nReceiveMessageWaitTimeSeconds – Returns the length of time, in seconds, for which the ReceiveMessage action waits for a message to arrive.\n\nVisibilityTimeout – Returns the visibility timeout for the queue. For more information about the visibility timeout, see Visibility Timeout in the Amazon SQS Developer Guide .\n\nThe following attributes apply only to dead-letter queues:\n\nRedrivePolicy – The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object. The parameters are as follows:\n\ndeadLetterTargetArn – The Amazon Resource Name (ARN) of the dead-letter queue to which Amazon SQS moves messages after the value of maxReceiveCount is exceeded.\n\nmaxReceiveCount – The number of times a message is delivered to the source queue before being moved to the dead-letter queue. When the ReceiveCount for a message exceeds the maxReceiveCount for a queue, Amazon SQS moves the message to the dead-letter-queue.\n\nRedriveAllowPolicy – The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object. The parameters are as follows:\n\nredrivePermission – The permission type that defines which source queues can specify the current queue as the dead-letter queue. Valid values are:\n\nallowAll – (Default) Any source queues in this Amazon Web Services account in the same Region can specify this queue as the dead-letter queue.\n\ndenyAll – No source queues can specify this queue as the dead-letter queue.\n\nbyQueue – Only queues specified by the sourceQueueArns parameter can specify this queue as the dead-letter queue.\n\nsourceQueueArns – The Amazon Resource Names (ARN)s of the source queues that can specify this queue as the dead-letter queue and redrive messages. You can specify this parameter only when the redrivePermission parameter is set to byQueue . You can specify up to 10 source queue ARNs. To allow more than 10 source queues to specify dead-letter queues, set the redrivePermission parameter to allowAll .\n\nNote\n\nThe dead-letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead-letter queue of a standard queue must also be a standard queue.\n\nThe following attributes apply only to server-side-encryption :\n\nKmsMasterKeyId – Returns the ID of an Amazon Web Services managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see Key Terms .\n\nKmsDataKeyReusePeriodSeconds – Returns the length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling KMS again. For more information, see How Does the Data Key Reuse Period Work? .\n\nThe following attributes apply only to FIFO (first-in-first-out) queues :\n\nFifoQueue – Returns information about whether the queue is FIFO. For more information, see FIFO queue logic in the Amazon SQS Developer Guide .\n\nNote\n\nTo determine whether a queue is FIFO , you can check whether QueueName ends with the .fifo suffix.\n\nContentBasedDeduplication – Returns whether content-based deduplication is enabled for the queue. For more information, see Exactly-once processing in the Amazon SQS Developer Guide .\n\nThe following attributes apply only to high throughput for FIFO queues :\n\nDeduplicationScope – Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue .\n\nFifoThroughputLimit – Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue and perMessageGroupId . The perMessageGroupId value is allowed only when the value for DeduplicationScope is messageGroup .\n\nTo enable high throughput for FIFO queues, do the following:\n\nSet DeduplicationScope to messageGroup .\n\nSet FifoThroughputLimit to perMessageGroupId .\n\nIf you set these attributes to anything other than the values shown for enabling high throughput, normal throughput is in effect and deduplication occurs as specified.\n\nFor information on throughput quotas, see Quotas related to messages in the Amazon SQS Developer Guide .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  All\n  Policy\n  VisibilityTimeout\n  MaximumMessageSize\n  MessageRetentionPeriod\n  ApproximateNumberOfMessages\n  ApproximateNumberOfMessagesNotVisible\n  CreatedTimestamp\n  LastModifiedTimestamp\n  QueueArn\n  ApproximateNumberOfMessagesDelayed\n  DelaySeconds\n  ReceiveMessageWaitTimeSeconds\n  RedrivePolicy\n  FifoQueue\n  ContentBasedDeduplication\n  KmsMasterKeyId\n  KmsDataKeyReusePeriodSeconds\n  DeduplicationScope\n  FifoThroughputLimit\n  RedriveAllowPolicy\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttributes -> (map)\n\nA map of attributes to their respective values.\n\nName -> (string)\n\nValue -> (string)",
      "command_examples": "Examples\n\nTo get a queue’s attributes\n\nThis example gets all of the specified queue’s attributes.\n\nCommand:\n\naws sqs get-queue-attributes --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --attribute-names All\n\n\nOutput:\n\n{\n  \"Attributes\": {\n    \"ApproximateNumberOfMessagesNotVisible\": \"0\",\n    \"RedrivePolicy\": \"{\\\"deadLetterTargetArn\\\":\\\"arn:aws:sqs:us-east-1:80398EXAMPLE:MyDeadLetterQueue\\\",\\\"maxReceiveCount\\\":1000}\",\n    \"MessageRetentionPeriod\": \"345600\",\n    \"ApproximateNumberOfMessagesDelayed\": \"0\",\n    \"MaximumMessageSize\": \"262144\",\n    \"CreatedTimestamp\": \"1442426968\",\n    \"ApproximateNumberOfMessages\": \"0\",\n    \"ReceiveMessageWaitTimeSeconds\": \"0\",\n    \"DelaySeconds\": \"0\",\n    \"VisibilityTimeout\": \"30\",\n    \"LastModifiedTimestamp\": \"1442426968\",\n    \"QueueArn\": \"arn:aws:sqs:us-east-1:80398EXAMPLE:MyNewQueue\"\n  }\n}\n\n\nThis example gets only the specified queue’s maximum message size and visibility timeout attributes.\n\nCommand:\n\naws sqs get-queue-attributes --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyNewQueue --attribute-names MaximumMessageSize VisibilityTimeout\n\n\nOutput:\n\n{\n  \"Attributes\": {\n    \"VisibilityTimeout\": \"30\",\n    \"MaximumMessageSize\": \"262144\"\n  }\n}\n"
    },
    {
      "command_name": "get-queue-url",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/get-queue-url.html",
      "command_description": "Description\n\nReturns the URL of an existing Amazon SQS queue.\n\nTo access a queue that belongs to another AWS account, use the QueueOwnerAWSAccountId parameter to specify the account ID of the queue’s owner. The queue’s owner must grant you permission to access the queue. For more information about shared queue access, see `` AddPermission `` or see Allow Developers to Write Messages to a Shared Queue in the Amazon SQS Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-queue-url\n--queue-name <value>\n[--queue-owner-aws-account-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-name <value>",
        "[--queue-owner-aws-account-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-name (string)\n\nThe name of the queue whose URL must be fetched. Maximum 80 characters. Valid values: alphanumeric characters, hyphens (- ), and underscores (_ ).\n\nQueue URLs and names are case-sensitive.\n\n--queue-owner-aws-account-id (string)\n\nThe account ID of the account that created the queue.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueueUrl -> (string)\n\nThe URL of the queue.",
      "command_examples": "Examples\n\nTo get a queue URL\n\nThis example gets the specified queue’s URL.\n\nCommand:\n\naws sqs get-queue-url --queue-name MyQueue\n\n\nOutput:\n\n{\n  \"QueueUrl\": \"https://queue.amazonaws.com/80398EXAMPLE/MyQueue\"\n}\n"
    },
    {
      "command_name": "list-dead-letter-source-queues",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/list-dead-letter-source-queues.html",
      "command_description": "Description\n\nReturns a list of your queues that have the RedrivePolicy queue attribute configured with a dead-letter queue.\n\nThe ListDeadLetterSourceQueues methods supports pagination. Set parameter MaxResults in the request to specify the maximum number of results to be returned in the response. If you do not set MaxResults , the response includes a maximum of 1,000 results. If you set MaxResults and there are additional results to display, the response includes a value for NextToken . Use NextToken as a parameter in your next request to ListDeadLetterSourceQueues to receive the next page of results.\n\nFor more information about using dead-letter queues, see Using Amazon SQS Dead-Letter Queues in the Amazon SQS Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-dead-letter-source-queues is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: queueUrls",
      "command_synopsis": "Synopsis\n  list-dead-letter-source-queues\n--queue-url <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of a dead-letter queue.\n\nQueue URLs and names are case-sensitive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nqueueUrls -> (list)\n\nA list of source queue URLs that have the RedrivePolicy queue attribute configured with a dead-letter queue.\n\n(string)\n\nNextToken -> (string)\n\nPagination token to include in the next request. Token value is null if there are no additional results to request, or if you did not set MaxResults in the request.",
      "command_examples": "Examples\n\nTo list dead letter source queues\n\nThis example lists the queues that are associated with the specified dead letter source queue.\n\nCommand:\n\naws sqs list-dead-letter-source-queues --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyDeadLetterQueue\n\n\nOutput:\n\n{\n  \"queueUrls\": [\n    \"https://queue.amazonaws.com/80398EXAMPLE/MyQueue\",\n    \"https://queue.amazonaws.com/80398EXAMPLE/MyOtherQueue\"\n  ]\n}\n"
    },
    {
      "command_name": "list-queue-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/list-queue-tags.html",
      "command_description": "Description\n\nList all cost allocation tags added to the specified Amazon SQS queue. For an overview, see Tagging Your Amazon SQS Queues in the Amazon SQS Developer Guide .\n\nNote\n\nCross-account permissions don’t apply to this action. For more information, see Grant cross-account permissions to a role and a user name in the Amazon SQS Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-queue-tags\n--queue-url <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the queue.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (map)\n\nThe list of all tags added to the specified queue.\n\nKey -> (string)\n\nValue -> (string)",
      "command_examples": "Examples\n\nTo list all cost allocation tags for a queue\n\nThe following list-queue-tags example displays all of the cost allocation tags associated with the specified queue.\n\naws sqs list-queue-tags \\\n    --queue-url https://sqs.us-west-2.amazonaws.com/123456789012/MyQueue\n\n\nOutput:\n\n{\n    \"Tags\": {\n        \"Team\": \"Alpha\"\n    }\n}\n\n\nFor more information, see Listing Cost Allocation Tags in the Amazon Simple Queue Service Developer Guide."
    },
    {
      "command_name": "list-queues",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/list-queues.html",
      "command_description": "Description\n\nReturns a list of your queues in the current region. The response includes a maximum of 1,000 results. If you specify a value for the optional QueueNamePrefix parameter, only queues with a name that begins with the specified value are returned.\n\nThe listQueues methods supports pagination. Set parameter MaxResults in the request to specify the maximum number of results to be returned in the response. If you do not set MaxResults , the response includes a maximum of 1,000 results. If you set MaxResults and there are additional results to display, the response includes a value for NextToken . Use NextToken as a parameter in your next request to listQueues to receive the next page of results.\n\nNote\n\nCross-account permissions don’t apply to this action. For more information, see Grant cross-account permissions to a role and a user name in the Amazon SQS Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-queues is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: QueueUrls",
      "command_synopsis": "Synopsis\n  list-queues\n[--queue-name-prefix <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--queue-name-prefix <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-name-prefix (string)\n\nA string to use for filtering the list results. Only those queues whose name begins with the specified string are returned.\n\nQueue URLs and names are case-sensitive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueueUrls -> (list)\n\nA list of queue URLs, up to 1,000 entries, or the value of MaxResults that you sent in the request.\n\n(string)\n\nNextToken -> (string)\n\nPagination token to include in the next request. Token value is null if there are no additional results to request, or if you did not set MaxResults in the request.",
      "command_examples": "Examples\n\nTo list queues\n\nThis example lists all queues.\n\nCommand:\n\naws sqs list-queues\n\n\nOutput:\n\n{\n  \"QueueUrls\": [\n    \"https://queue.amazonaws.com/80398EXAMPLE/MyDeadLetterQueue\",\n    \"https://queue.amazonaws.com/80398EXAMPLE/MyQueue\",\n    \"https://queue.amazonaws.com/80398EXAMPLE/MyOtherQueue\",\n    \"https://queue.amazonaws.com/80398EXAMPLE/TestQueue1\",\n        \"https://queue.amazonaws.com/80398EXAMPLE/TestQueue2\"\n  ]\n}\n\n\nThis example lists only queues that start with “My”.\n\nCommand:\n\naws sqs list-queues --queue-name-prefix My\n\n\nOutput:\n\n{\n  \"QueueUrls\": [\n    \"https://queue.amazonaws.com/80398EXAMPLE/MyDeadLetterQueue\",\n    \"https://queue.amazonaws.com/80398EXAMPLE/MyQueue\",\n    \"https://queue.amazonaws.com/80398EXAMPLE/MyOtherQueue\"\n  ]\n}\n"
    },
    {
      "command_name": "purge-queue",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/purge-queue.html",
      "command_description": "Description\n\nDeletes the messages in a queue specified by the QueueURL parameter.\n\nWarning\n\nWhen you use the PurgeQueue action, you can’t retrieve any messages deleted from a queue.\n\nThe message deletion process takes up to 60 seconds. We recommend waiting for 60 seconds regardless of your queue’s size.\n\nMessages sent to the queue before you call PurgeQueue might be received but are deleted within the next minute.\n\nMessages sent to the queue after you call PurgeQueue might be deleted while the queue is being purged.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  purge-queue\n--queue-url <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the queue from which the PurgeQueue action deletes messages.\n\nQueue URLs and names are case-sensitive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo purge a queue\n\nThis example deletes all messages in the specified queue.\n\nCommand:\n\naws sqs purge-queue --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyNewQueue\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "receive-message",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/receive-message.html",
      "command_description": "Description\n\nRetrieves one or more messages (up to 10), from the specified queue. Using the WaitTimeSeconds parameter enables long-poll support. For more information, see Amazon SQS Long Polling in the Amazon SQS Developer Guide .\n\nShort poll is the default behavior where a weighted random set of machines is sampled on a ReceiveMessage call. Thus, only the messages on the sampled machines are returned. If the number of messages in the queue is small (fewer than 1,000), you most likely get fewer messages than you requested per ReceiveMessage call. If the number of messages in the queue is extremely small, you might not receive any messages in a particular ReceiveMessage response. If this happens, repeat the request.\n\nFor each message returned, the response includes the following:\n\nThe message body.\n\nAn MD5 digest of the message body. For information about MD5, see RFC1321 .\n\nThe MessageId you received when you sent the message to the queue.\n\nThe receipt handle.\n\nThe message attributes.\n\nAn MD5 digest of the message attributes.\n\nThe receipt handle is the identifier you must provide when deleting the message. For more information, see Queue and Message Identifiers in the Amazon SQS Developer Guide .\n\nYou can provide the VisibilityTimeout parameter in your request. The parameter is applied to the messages that Amazon SQS returns in the response. If you don’t include the parameter, the overall visibility timeout for the queue is used for the returned messages. For more information, see Visibility Timeout in the Amazon SQS Developer Guide .\n\nA message that isn’t deleted or a message whose visibility isn’t extended before the visibility timeout expires counts as a failed receive. Depending on the configuration of the queue, the message might be sent to the dead-letter queue.\n\nNote\n\nIn the future, new attributes might be added. If you write code that calls this action, we recommend that you structure your code so that it can handle new attributes gracefully.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  receive-message\n--queue-url <value>\n[--attribute-names <value>]\n[--message-attribute-names <value>]\n[--max-number-of-messages <value>]\n[--visibility-timeout <value>]\n[--wait-time-seconds <value>]\n[--receive-request-attempt-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "[--attribute-names <value>]",
        "[--message-attribute-names <value>]",
        "[--max-number-of-messages <value>]",
        "[--visibility-timeout <value>]",
        "[--wait-time-seconds <value>]",
        "[--receive-request-attempt-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue from which messages are received.\n\nQueue URLs and names are case-sensitive.\n\n--attribute-names (list)\n\nA list of attributes that need to be returned along with each message. These attributes include:\n\nAll – Returns all values.\n\nApproximateFirstReceiveTimestamp – Returns the time the message was first received from the queue (epoch time in milliseconds).\n\nApproximateReceiveCount – Returns the number of times a message has been received across all queues but not deleted.\n\nAWSTraceHeader – Returns the X-Ray trace header string.\n\nSenderId\n\nFor an IAM user, returns the IAM user ID, for example ABCDEFGHI1JKLMNOPQ23R .\n\nFor an IAM role, returns the IAM role ID, for example ABCDE1F2GH3I4JK5LMNOP:i-a123b456 .\n\nSentTimestamp – Returns the time the message was sent to the queue (epoch time in milliseconds).\n\nMessageDeduplicationId – Returns the value provided by the producer that calls the `` SendMessage `` action.\n\nMessageGroupId – Returns the value provided by the producer that calls the `` SendMessage `` action. Messages with the same MessageGroupId are returned in sequence.\n\nSequenceNumber – Returns the value provided by Amazon SQS.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  All\n  Policy\n  VisibilityTimeout\n  MaximumMessageSize\n  MessageRetentionPeriod\n  ApproximateNumberOfMessages\n  ApproximateNumberOfMessagesNotVisible\n  CreatedTimestamp\n  LastModifiedTimestamp\n  QueueArn\n  ApproximateNumberOfMessagesDelayed\n  DelaySeconds\n  ReceiveMessageWaitTimeSeconds\n  RedrivePolicy\n  FifoQueue\n  ContentBasedDeduplication\n  KmsMasterKeyId\n  KmsDataKeyReusePeriodSeconds\n  DeduplicationScope\n  FifoThroughputLimit\n  RedriveAllowPolicy\n\n\n--message-attribute-names (list)\n\nThe name of the message attribute, where N is the index.\n\nThe name can contain alphanumeric characters and the underscore (_ ), hyphen (- ), and period (. ).\n\nThe name is case-sensitive and must be unique among all attribute names for the message.\n\nThe name must not start with AWS-reserved prefixes such as AWS. or Amazon. (or any casing variants).\n\nThe name must not start or end with a period (. ), and it should not have periods in succession (.. ).\n\nThe name can be up to 256 characters long.\n\nWhen using ReceiveMessage , you can send a list of attribute names to receive, or you can return all of the attributes by specifying All or .* in your request. You can also use all message attributes starting with a prefix, for example bar.* .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--max-number-of-messages (integer)\n\nThe maximum number of messages to return. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10. Default: 1.\n\n--visibility-timeout (integer)\n\nThe duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a ReceiveMessage request.\n\n--wait-time-seconds (integer)\n\nThe duration (in seconds) for which the call waits for a message to arrive in the queue before returning. If a message is available, the call returns sooner than WaitTimeSeconds . If no messages are available and the wait time expires, the call returns successfully with an empty list of messages.\n\nWarning\n\nTo avoid HTTP errors, ensure that the HTTP response timeout for ReceiveMessage requests is longer than the WaitTimeSeconds parameter. For example, with the Java SDK, you can set HTTP transport settings using the NettyNioAsyncHttpClient for asynchronous clients, or the ApacheHttpClient for synchronous clients.\n\n--receive-request-attempt-id (string)\n\nThis parameter applies only to FIFO (first-in-first-out) queues.\n\nThe token used for deduplication of ReceiveMessage calls. If a networking issue occurs after a ReceiveMessage action, and instead of a response you receive a generic error, it is possible to retry the same action with an identical ReceiveRequestAttemptId to retrieve the same set of messages, even if their visibility timeout has not yet expired.\n\nYou can use ReceiveRequestAttemptId only for 5 minutes after a ReceiveMessage action.\n\nWhen you set FifoQueue , a caller of the ReceiveMessage action can provide a ReceiveRequestAttemptId explicitly.\n\nIf a caller of the ReceiveMessage action doesn’t provide a ReceiveRequestAttemptId , Amazon SQS generates a ReceiveRequestAttemptId .\n\nIt is possible to retry the ReceiveMessage action with the same ReceiveRequestAttemptId if none of the messages have been modified (deleted or had their visibility changes).\n\nDuring a visibility timeout, subsequent calls with the same ReceiveRequestAttemptId return the same messages and receipt handles. If a retry occurs within the deduplication interval, it resets the visibility timeout. For more information, see Visibility Timeout in the Amazon SQS Developer Guide .\n\nWarning\n\nIf a caller of the ReceiveMessage action still processes messages when the visibility timeout expires and messages become visible, another worker consuming from the same queue can receive the same messages and therefore process duplicates. Also, if a consumer whose message processing time is longer than the visibility timeout tries to delete the processed messages, the action fails with an error. To mitigate this effect, ensure that your application observes a safe threshold before the visibility timeout expires and extend the visibility timeout as necessary.\n\nWhile messages with a particular MessageGroupId are invisible, no more messages belonging to the same MessageGroupId are returned until the visibility timeout expires. You can still receive messages with another MessageGroupId as long as it is also visible.\n\nIf a caller of ReceiveMessage can’t track the ReceiveRequestAttemptId , no retries work until the original visibility timeout expires. As a result, delays might occur but the messages in the queue remain in a strict order.\n\nThe maximum length of ReceiveRequestAttemptId is 128 characters. ReceiveRequestAttemptId can contain alphanumeric characters (a-z , A-Z , 0-9 ) and punctuation (!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ ).\n\nFor best practices of using ReceiveRequestAttemptId , see Using the ReceiveRequestAttemptId Request Parameter in the Amazon SQS Developer Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMessages -> (list)\n\nA list of messages.\n\n(structure)\n\nAn Amazon SQS message.\n\nMessageId -> (string)\n\nA unique identifier for the message. A MessageId is considered unique across all accounts for an extended period of time.\n\nReceiptHandle -> (string)\n\nAn identifier associated with the act of receiving the message. A new receipt handle is returned every time you receive a message. When deleting a message, you provide the last received receipt handle to delete the message.\n\nMD5OfBody -> (string)\n\nAn MD5 digest of the non-URL-encoded message body string.\n\nBody -> (string)\n\nThe message’s contents (not URL-encoded).\n\nAttributes -> (map)\n\nA map of the attributes requested in `` ReceiveMessage `` to their respective values. Supported attributes:\n\nApproximateReceiveCount\n\nApproximateFirstReceiveTimestamp\n\nMessageDeduplicationId\n\nMessageGroupId\n\nSenderId\n\nSentTimestamp\n\nSequenceNumber\n\nApproximateFirstReceiveTimestamp and SentTimestamp are each returned as an integer representing the epoch time in milliseconds.\n\nName -> (string)\n\nValue -> (string)\n\nMD5OfMessageAttributes -> (string)\n\nAn MD5 digest of the non-URL-encoded message attribute string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest. For information about MD5, see RFC1321 .\n\nMessageAttributes -> (map)\n\nEach message attribute consists of a Name , Type , and Value . For more information, see Amazon SQS message attributes in the Amazon SQS Developer Guide .\n\nName -> (string)\n\nValue -> (structure)\n\nThe user-specified message attribute value. For string data types, the Value attribute has the same restrictions on the content as the message body. For more information, see `` SendMessage .``\n\nName , type , value and the message body must not be empty or null. All parts of the message attribute, including Name , Type , and Value , are part of the message size restriction (256 KB or 262,144 bytes).\n\nStringValue -> (string)\n\nStrings are Unicode with UTF-8 binary encoding. For a list of code values, see ASCII Printable Characters .\n\nBinaryValue -> (blob)\n\nBinary type attributes can store any binary data, such as compressed data, encrypted data, or images.\n\nStringListValues -> (list)\n\nNot implemented. Reserved for future use.\n\n(string)\n\nBinaryListValues -> (list)\n\nNot implemented. Reserved for future use.\n\n(blob)\n\nDataType -> (string)\n\nAmazon SQS supports the following logical data types: String , Number , and Binary . For the Number data type, you must use StringValue .\n\nYou can also append custom labels. For more information, see Amazon SQS Message Attributes in the Amazon SQS Developer Guide .",
      "command_examples": "Examples\n\nTo receive a message\n\nThis example receives up to 10 available messages, returning all available attributes.\n\nCommand:\n\naws sqs receive-message --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --attribute-names All --message-attribute-names All --max-number-of-messages 10\n\n\nOutput:\n\n{\n  \"Messages\": [\n    {\n      \"Body\": \"My first message.\",\n      \"ReceiptHandle\": \"AQEBzbVv...fqNzFw==\",\n      \"MD5OfBody\": \"1000f835...a35411fa\",\n      \"MD5OfMessageAttributes\": \"9424c491...26bc3ae7\",\n      \"MessageId\": \"d6790f8d-d575-4f01-bc51-40122EXAMPLE\",\n      \"Attributes\": {\n        \"ApproximateFirstReceiveTimestamp\": \"1442428276921\",\n        \"SenderId\": \"AIDAIAZKMSNQ7TEXAMPLE\",\n        \"ApproximateReceiveCount\": \"5\",\n        \"SentTimestamp\": \"1442428276921\"\n      },\n      \"MessageAttributes\": {\n        \"PostalCode\": {\n          \"DataType\": \"String\",\n          \"StringValue\": \"ABC123\"\n        },\n        \"City\": {\n          \"DataType\": \"String\",\n          \"StringValue\": \"Any City\"\n        }\n      }\n    }\n  ]\n}\n\n\nThis example receives the next available message, returning only the SenderId and SentTimestamp attributes as well as the PostalCode message attribute.\n\nCommand:\n\naws sqs receive-message --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --attribute-names SenderId SentTimestamp --message-attribute-names PostalCode\n\n\nOutput:\n\n{\n  \"Messages\": [\n    {\n      \"Body\": \"My first message.\",\n      \"ReceiptHandle\": \"AQEB6nR4...HzlvZQ==\",\n      \"MD5OfBody\": \"1000f835...a35411fa\",\n      \"MD5OfMessageAttributes\": \"b8e89563...e088e74f\",\n      \"MessageId\": \"d6790f8d-d575-4f01-bc51-40122EXAMPLE\",\n      \"Attributes\": {\n        \"SenderId\": \"AIDAIAZKMSNQ7TEXAMPLE\",\n        \"SentTimestamp\": \"1442428276921\"\n      },\n      \"MessageAttributes\": {\n        \"PostalCode\": {\n          \"DataType\": \"String\",\n          \"StringValue\": \"ABC123\"\n        }\n      }\n    }\n  ]\n}\n"
    },
    {
      "command_name": "remove-permission",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/remove-permission.html",
      "command_description": "Description\n\nRevokes any permissions in the queue policy that matches the specified Label parameter.\n\nNote\n\nOnly the owner of a queue can remove permissions from it.\n\nCross-account permissions don’t apply to this action. For more information, see Grant cross-account permissions to a role and a user name in the Amazon SQS Developer Guide .\n\nTo remove the ability to change queue permissions, you must deny permission to the AddPermission , RemovePermission , and SetQueueAttributes actions in your IAM policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-permission\n--queue-url <value>\n--label <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--label <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue from which permissions are removed.\n\nQueue URLs and names are case-sensitive.\n\n--label (string)\n\nThe identification of the permission to remove. This is the label added using the `` AddPermission `` action.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a permission\n\nThis example removes the permission with the specified label from the specified queue.\n\nCommand:\n\naws sqs remove-permission --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --label SendMessagesFromMyQueue\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "send-message",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/send-message.html",
      "command_description": "Description\n\nDelivers a message to the specified queue.\n\nWarning\n\nA message can include only XML, JSON, and unformatted text. The following Unicode characters are allowed:\n\n#x9 | #xA | #xD | #x20 to #xD7FF | #xE000 to #xFFFD | #x10000 to #x10FFFF\n\nAny characters not included in this list will be rejected. For more information, see the W3C specification for characters .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  send-message\n--queue-url <value>\n--message-body <value>\n[--delay-seconds <value>]\n[--message-attributes <value>]\n[--message-system-attributes <value>]\n[--message-deduplication-id <value>]\n[--message-group-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--message-body <value>",
        "[--delay-seconds <value>]",
        "[--message-attributes <value>]",
        "[--message-system-attributes <value>]",
        "[--message-deduplication-id <value>]",
        "[--message-group-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue to which a message is sent.\n\nQueue URLs and names are case-sensitive.\n\n--message-body (string)\n\nThe message to send. The minimum size is one character. The maximum size is 256 KB.\n\nWarning\n\nA message can include only XML, JSON, and unformatted text. The following Unicode characters are allowed:\n\n#x9 | #xA | #xD | #x20 to #xD7FF | #xE000 to #xFFFD | #x10000 to #x10FFFF\n\nAny characters not included in this list will be rejected. For more information, see the W3C specification for characters .\n\n--delay-seconds (integer)\n\nThe length of time, in seconds, for which to delay a specific message. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a positive DelaySeconds value become available for processing after the delay period is finished. If you don’t specify a value, the default value for the queue applies.\n\nNote\n\nWhen you set FifoQueue , you can’t set DelaySeconds per message. You can set this parameter only on a queue level.\n\n--message-attributes (map)\n\nEach message attribute consists of a Name , Type , and Value . For more information, see Amazon SQS message attributes in the Amazon SQS Developer Guide .\n\nName -> (string)\n\nValue -> (structure)\n\nThe user-specified message attribute value. For string data types, the Value attribute has the same restrictions on the content as the message body. For more information, see `` SendMessage .``\n\nName , type , value and the message body must not be empty or null. All parts of the message attribute, including Name , Type , and Value , are part of the message size restriction (256 KB or 262,144 bytes).\n\nStringValue -> (string)\n\nStrings are Unicode with UTF-8 binary encoding. For a list of code values, see ASCII Printable Characters .\n\nBinaryValue -> (blob)\n\nBinary type attributes can store any binary data, such as compressed data, encrypted data, or images.\n\nStringListValues -> (list)\n\nNot implemented. Reserved for future use.\n\n(string)\n\nBinaryListValues -> (list)\n\nNot implemented. Reserved for future use.\n\n(blob)\n\nDataType -> (string)\n\nAmazon SQS supports the following logical data types: String , Number , and Binary . For the Number data type, you must use StringValue .\n\nYou can also append custom labels. For more information, see Amazon SQS Message Attributes in the Amazon SQS Developer Guide .\n\nShorthand Syntax:\n\nKeyName1=StringValue=string,BinaryValue=blob,StringListValues=string,string,BinaryListValues=blob,blob,DataType=string,KeyName2=StringValue=string,BinaryValue=blob,StringListValues=string,string,BinaryListValues=blob,blob,DataType=string\n\n\nJSON Syntax:\n\n{\"string\": {\n      \"StringValue\": \"string\",\n      \"BinaryValue\": blob,\n      \"StringListValues\": [\"string\", ...],\n      \"BinaryListValues\": [blob, ...],\n      \"DataType\": \"string\"\n    }\n  ...}\n\n\n--message-system-attributes (map)\n\nThe message system attribute to send. Each message system attribute consists of a Name , Type , and Value .\n\nWarning\n\nCurrently, the only supported message system attribute is AWSTraceHeader . Its type must be String and its value must be a correctly formatted X-Ray trace header string.\n\nThe size of a message system attribute doesn’t count towards the total size of a message.\n\nName -> (string)\n\nValue -> (structure)\n\nThe user-specified message system attribute value. For string data types, the Value attribute has the same restrictions on the content as the message body. For more information, see `` SendMessage .``\n\nName , type , value and the message body must not be empty or null.\n\nStringValue -> (string)\n\nStrings are Unicode with UTF-8 binary encoding. For a list of code values, see ASCII Printable Characters .\n\nBinaryValue -> (blob)\n\nBinary type attributes can store any binary data, such as compressed data, encrypted data, or images.\n\nStringListValues -> (list)\n\nNot implemented. Reserved for future use.\n\n(string)\n\nBinaryListValues -> (list)\n\nNot implemented. Reserved for future use.\n\n(blob)\n\nDataType -> (string)\n\nAmazon SQS supports the following logical data types: String , Number , and Binary . For the Number data type, you must use StringValue .\n\nYou can also append custom labels. For more information, see Amazon SQS Message Attributes in the Amazon SQS Developer Guide .\n\nShorthand Syntax:\n\n  KeyName1=StringValue=string,BinaryValue=blob,StringListValues=string,string,BinaryListValues=blob,blob,DataType=string,KeyName2=StringValue=string,BinaryValue=blob,StringListValues=string,string,BinaryListValues=blob,blob,DataType=string\n\nWhere valid key names are:\n  AWSTraceHeader\n\n\nJSON Syntax:\n\n{\"AWSTraceHeader\": {\n      \"StringValue\": \"string\",\n      \"BinaryValue\": blob,\n      \"StringListValues\": [\"string\", ...],\n      \"BinaryListValues\": [blob, ...],\n      \"DataType\": \"string\"\n    }\n  ...}\n\n\n--message-deduplication-id (string)\n\nThis parameter applies only to FIFO (first-in-first-out) queues.\n\nThe token used for deduplication of sent messages. If a message with a particular MessageDeduplicationId is sent successfully, any messages sent with the same MessageDeduplicationId are accepted successfully but aren’t delivered during the 5-minute deduplication interval. For more information, see Exactly-once processing in the Amazon SQS Developer Guide .\n\nEvery message must have a unique MessageDeduplicationId ,\n\nYou may provide a MessageDeduplicationId explicitly.\n\nIf you aren’t able to provide a MessageDeduplicationId and you enable ContentBasedDeduplication for your queue, Amazon SQS uses a SHA-256 hash to generate the MessageDeduplicationId using the body of the message (but not the attributes of the message).\n\nIf you don’t provide a MessageDeduplicationId and the queue doesn’t have ContentBasedDeduplication set, the action fails with an error.\n\nIf the queue has ContentBasedDeduplication set, your MessageDeduplicationId overrides the generated one.\n\nWhen ContentBasedDeduplication is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered.\n\nIf you send one message with ContentBasedDeduplication enabled and then another message with a MessageDeduplicationId that is the same as the one generated for the first MessageDeduplicationId , the two messages are treated as duplicates and only one copy of the message is delivered.\n\nNote\n\nThe MessageDeduplicationId is available to the consumer of the message (this can be useful for troubleshooting delivery issues).\n\nIf a message is sent successfully but the acknowledgement is lost and the message is resent with the same MessageDeduplicationId after the deduplication interval, Amazon SQS can’t detect duplicate messages.\n\nAmazon SQS continues to keep track of the message deduplication ID even after the message is received and deleted.\n\nThe maximum length of MessageDeduplicationId is 128 characters. MessageDeduplicationId can contain alphanumeric characters (a-z , A-Z , 0-9 ) and punctuation (!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ ).\n\nFor best practices of using MessageDeduplicationId , see Using the MessageDeduplicationId Property in the Amazon SQS Developer Guide .\n\n--message-group-id (string)\n\nThis parameter applies only to FIFO (first-in-first-out) queues.\n\nThe tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner (however, messages in different message groups might be processed out of order). To interleave multiple ordered streams within a single queue, use MessageGroupId values (for example, session data for multiple users). In this scenario, multiple consumers can process the queue, but the session data of each user is processed in a FIFO fashion.\n\nYou must associate a non-empty MessageGroupId with a message. If you don’t provide a MessageGroupId , the action fails.\n\nReceiveMessage might return messages with multiple MessageGroupId values. For each MessageGroupId , the messages are sorted by time sent. The caller can’t specify a MessageGroupId .\n\nThe length of MessageGroupId is 128 characters. Valid values: alphanumeric characters and punctuation (!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~) .\n\nFor best practices of using MessageGroupId , see Using the MessageGroupId Property in the Amazon SQS Developer Guide .\n\nWarning\n\nMessageGroupId is required for FIFO queues. You can’t use it for Standard queues.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMD5OfMessageBody -> (string)\n\nAn MD5 digest of the non-URL-encoded message body string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest. For information about MD5, see RFC1321 .\n\nMD5OfMessageAttributes -> (string)\n\nAn MD5 digest of the non-URL-encoded message attribute string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest. For information about MD5, see RFC1321 .\n\nMD5OfMessageSystemAttributes -> (string)\n\nAn MD5 digest of the non-URL-encoded message system attribute string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest.\n\nMessageId -> (string)\n\nAn attribute containing the MessageId of the message sent to the queue. For more information, see Queue and Message Identifiers in the Amazon SQS Developer Guide .\n\nSequenceNumber -> (string)\n\nThis parameter applies only to FIFO (first-in-first-out) queues.\n\nThe large, non-consecutive number that Amazon SQS assigns to each message.\n\nThe length of SequenceNumber is 128 bits. SequenceNumber continues to increase for a particular MessageGroupId .",
      "command_examples": "Examples\n\nTo send a message\n\nThis example sends a message with the specified message body, delay period, and message attributes, to the specified queue.\n\nCommand:\n\naws sqs send-message --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --message-body \"Information about the largest city in Any Region.\" --delay-seconds 10 --message-attributes file://send-message.json\n\n\nInput file (send-message.json):\n\n{\n  \"City\": {\n    \"DataType\": \"String\",\n    \"StringValue\": \"Any City\"\n  },\n  \"Greeting\": {\n    \"DataType\": \"Binary\",\n    \"BinaryValue\": \"Hello, World!\"\n  },\n  \"Population\": {\n    \"DataType\": \"Number\",\n    \"StringValue\": \"1250800\"\n  }\n}\n\n\nOutput:\n\n{\n  \"MD5OfMessageBody\": \"51b0a325...39163aa0\",\n  \"MD5OfMessageAttributes\": \"00484c68...59e48f06\",\n  \"MessageId\": \"da68f62c-0c07-4bee-bf5f-7e856EXAMPLE\"\n}\n"
    },
    {
      "command_name": "send-message-batch",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/send-message-batch.html",
      "command_description": "Description\n\nDelivers up to ten messages to the specified queue. This is a batch version of `` SendMessage .`` For a FIFO queue, multiple messages within a single batch are enqueued in the order they are sent.\n\nThe result of sending each message is reported individually in the response. Because the batch request can result in a combination of successful and unsuccessful actions, you should check for batch errors even when the call returns an HTTP status code of 200 .\n\nThe maximum allowed individual message size and the maximum total payload size (the sum of the individual lengths of all of the batched messages) are both 256 KB (262,144 bytes).\n\nWarning\n\nA message can include only XML, JSON, and unformatted text. The following Unicode characters are allowed:\n\n#x9 | #xA | #xD | #x20 to #xD7FF | #xE000 to #xFFFD | #x10000 to #x10FFFF\n\nAny characters not included in this list will be rejected. For more information, see the W3C specification for characters .\n\nIf you don’t specify the DelaySeconds parameter for an entry, Amazon SQS uses the default value for the queue.\n\nSome actions take lists of parameters. These lists are specified using the param.n notation. Values of n are integers starting from 1. For example, a parameter list with two elements looks like this:\n\n&AttributeName.1=first\n\n&AttributeName.2=second\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  send-message-batch\n--queue-url <value>\n--entries <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--entries <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue to which batched messages are sent.\n\nQueue URLs and names are case-sensitive.\n\n--entries (list)\n\nA list of `` SendMessageBatchRequestEntry `` items.\n\n(structure)\n\nContains the details of a single Amazon SQS message along with an Id .\n\nId -> (string)\n\nAn identifier for a message in this batch used to communicate the result.\n\nNote\n\nThe Id s of a batch request need to be unique within a request.\n\nThis identifier can have up to 80 characters. The following characters are accepted: alphanumeric characters, hyphens(-), and underscores (_).\n\nMessageBody -> (string)\n\nThe body of the message.\n\nDelaySeconds -> (integer)\n\nThe length of time, in seconds, for which a specific message is delayed. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a positive DelaySeconds value become available for processing after the delay period is finished. If you don’t specify a value, the default value for the queue is applied.\n\nNote\n\nWhen you set FifoQueue , you can’t set DelaySeconds per message. You can set this parameter only on a queue level.\n\nMessageAttributes -> (map)\n\nEach message attribute consists of a Name , Type , and Value . For more information, see Amazon SQS message attributes in the Amazon SQS Developer Guide .\n\nName -> (string)\n\nValue -> (structure)\n\nThe user-specified message attribute value. For string data types, the Value attribute has the same restrictions on the content as the message body. For more information, see `` SendMessage .``\n\nName , type , value and the message body must not be empty or null. All parts of the message attribute, including Name , Type , and Value , are part of the message size restriction (256 KB or 262,144 bytes).\n\nStringValue -> (string)\n\nStrings are Unicode with UTF-8 binary encoding. For a list of code values, see ASCII Printable Characters .\n\nBinaryValue -> (blob)\n\nBinary type attributes can store any binary data, such as compressed data, encrypted data, or images.\n\nStringListValues -> (list)\n\nNot implemented. Reserved for future use.\n\n(string)\n\nBinaryListValues -> (list)\n\nNot implemented. Reserved for future use.\n\n(blob)\n\nDataType -> (string)\n\nAmazon SQS supports the following logical data types: String , Number , and Binary . For the Number data type, you must use StringValue .\n\nYou can also append custom labels. For more information, see Amazon SQS Message Attributes in the Amazon SQS Developer Guide .\n\nMessageSystemAttributes -> (map)\n\nThe message system attribute to send Each message system attribute consists of a Name , Type , and Value .\n\nWarning\n\nCurrently, the only supported message system attribute is AWSTraceHeader . Its type must be String and its value must be a correctly formatted X-Ray trace header string.\n\nThe size of a message system attribute doesn’t count towards the total size of a message.\n\nName -> (string)\n\nValue -> (structure)\n\nThe user-specified message system attribute value. For string data types, the Value attribute has the same restrictions on the content as the message body. For more information, see `` SendMessage .``\n\nName , type , value and the message body must not be empty or null.\n\nStringValue -> (string)\n\nStrings are Unicode with UTF-8 binary encoding. For a list of code values, see ASCII Printable Characters .\n\nBinaryValue -> (blob)\n\nBinary type attributes can store any binary data, such as compressed data, encrypted data, or images.\n\nStringListValues -> (list)\n\nNot implemented. Reserved for future use.\n\n(string)\n\nBinaryListValues -> (list)\n\nNot implemented. Reserved for future use.\n\n(blob)\n\nDataType -> (string)\n\nAmazon SQS supports the following logical data types: String , Number , and Binary . For the Number data type, you must use StringValue .\n\nYou can also append custom labels. For more information, see Amazon SQS Message Attributes in the Amazon SQS Developer Guide .\n\nMessageDeduplicationId -> (string)\n\nThis parameter applies only to FIFO (first-in-first-out) queues.\n\nThe token used for deduplication of messages within a 5-minute minimum deduplication interval. If a message with a particular MessageDeduplicationId is sent successfully, subsequent messages with the same MessageDeduplicationId are accepted successfully but aren’t delivered. For more information, see Exactly-once processing in the Amazon SQS Developer Guide .\n\nEvery message must have a unique MessageDeduplicationId ,\n\nYou may provide a MessageDeduplicationId explicitly.\n\nIf you aren’t able to provide a MessageDeduplicationId and you enable ContentBasedDeduplication for your queue, Amazon SQS uses a SHA-256 hash to generate the MessageDeduplicationId using the body of the message (but not the attributes of the message).\n\nIf you don’t provide a MessageDeduplicationId and the queue doesn’t have ContentBasedDeduplication set, the action fails with an error.\n\nIf the queue has ContentBasedDeduplication set, your MessageDeduplicationId overrides the generated one.\n\nWhen ContentBasedDeduplication is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered.\n\nIf you send one message with ContentBasedDeduplication enabled and then another message with a MessageDeduplicationId that is the same as the one generated for the first MessageDeduplicationId , the two messages are treated as duplicates and only one copy of the message is delivered.\n\nNote\n\nThe MessageDeduplicationId is available to the consumer of the message (this can be useful for troubleshooting delivery issues).\n\nIf a message is sent successfully but the acknowledgement is lost and the message is resent with the same MessageDeduplicationId after the deduplication interval, Amazon SQS can’t detect duplicate messages.\n\nAmazon SQS continues to keep track of the message deduplication ID even after the message is received and deleted.\n\nThe length of MessageDeduplicationId is 128 characters. MessageDeduplicationId can contain alphanumeric characters (a-z , A-Z , 0-9 ) and punctuation (!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ ).\n\nFor best practices of using MessageDeduplicationId , see Using the MessageDeduplicationId Property in the Amazon SQS Developer Guide .\n\nMessageGroupId -> (string)\n\nThis parameter applies only to FIFO (first-in-first-out) queues.\n\nThe tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner (however, messages in different message groups might be processed out of order). To interleave multiple ordered streams within a single queue, use MessageGroupId values (for example, session data for multiple users). In this scenario, multiple consumers can process the queue, but the session data of each user is processed in a FIFO fashion.\n\nYou must associate a non-empty MessageGroupId with a message. If you don’t provide a MessageGroupId , the action fails.\n\nReceiveMessage might return messages with multiple MessageGroupId values. For each MessageGroupId , the messages are sorted by time sent. The caller can’t specify a MessageGroupId .\n\nThe length of MessageGroupId is 128 characters. Valid values: alphanumeric characters and punctuation (!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~) .\n\nFor best practices of using MessageGroupId , see Using the MessageGroupId Property in the Amazon SQS Developer Guide .\n\nWarning\n\nMessageGroupId is required for FIFO queues. You can’t use it for Standard queues.\n\nShorthand Syntax:\n\nId=string,MessageBody=string,DelaySeconds=integer,MessageAttributes={KeyName1={StringValue=string,BinaryValue=blob,StringListValues=[string,string],BinaryListValues=[blob,blob],DataType=string},KeyName2={StringValue=string,BinaryValue=blob,StringListValues=[string,string],BinaryListValues=[blob,blob],DataType=string}},MessageSystemAttributes={KeyName1={StringValue=string,BinaryValue=blob,StringListValues=[string,string],BinaryListValues=[blob,blob],DataType=string},KeyName2={StringValue=string,BinaryValue=blob,StringListValues=[string,string],BinaryListValues=[blob,blob],DataType=string}},MessageDeduplicationId=string,MessageGroupId=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Id\": \"string\",\n    \"MessageBody\": \"string\",\n    \"DelaySeconds\": integer,\n    \"MessageAttributes\": {\"string\": {\n          \"StringValue\": \"string\",\n          \"BinaryValue\": blob,\n          \"StringListValues\": [\"string\", ...],\n          \"BinaryListValues\": [blob, ...],\n          \"DataType\": \"string\"\n        }\n      ...},\n    \"MessageSystemAttributes\": {\"AWSTraceHeader\": {\n          \"StringValue\": \"string\",\n          \"BinaryValue\": blob,\n          \"StringListValues\": [\"string\", ...],\n          \"BinaryListValues\": [blob, ...],\n          \"DataType\": \"string\"\n        }\n      ...},\n    \"MessageDeduplicationId\": \"string\",\n    \"MessageGroupId\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSuccessful -> (list)\n\nA list of `` SendMessageBatchResultEntry `` items.\n\n(structure)\n\nEncloses a MessageId for a successfully-enqueued message in a `` SendMessageBatch .``\n\nId -> (string)\n\nAn identifier for the message in this batch.\n\nMessageId -> (string)\n\nAn identifier for the message.\n\nMD5OfMessageBody -> (string)\n\nAn MD5 digest of the non-URL-encoded message body string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest. For information about MD5, see RFC1321 .\n\nMD5OfMessageAttributes -> (string)\n\nAn MD5 digest of the non-URL-encoded message attribute string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest. For information about MD5, see RFC1321 .\n\nMD5OfMessageSystemAttributes -> (string)\n\nAn MD5 digest of the non-URL-encoded message system attribute string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest. For information about MD5, see RFC1321 .\n\nSequenceNumber -> (string)\n\nThis parameter applies only to FIFO (first-in-first-out) queues.\n\nThe large, non-consecutive number that Amazon SQS assigns to each message.\n\nThe length of SequenceNumber is 128 bits. As SequenceNumber continues to increase for a particular MessageGroupId .\n\nFailed -> (list)\n\nA list of `` BatchResultErrorEntry `` items with error details about each message that can’t be enqueued.\n\n(structure)\n\nGives a detailed description of the result of an action on each entry in the request.\n\nId -> (string)\n\nThe Id of an entry in a batch request.\n\nSenderFault -> (boolean)\n\nSpecifies whether the error happened due to the caller of the batch API action.\n\nCode -> (string)\n\nAn error code representing why the action failed on this entry.\n\nMessage -> (string)\n\nA message explaining why the action failed on this entry.",
      "command_examples": "Examples\n\nTo send multiple messages as a batch\n\nThis example sends 2 messages with the specified message bodies, delay periods, and message attributes, to the specified queue.\n\nCommand:\n\naws sqs send-message-batch --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyQueue --entries file://send-message-batch.json\n\n\nInput file (send-message-batch.json):\n\n[\n  {\n    \"Id\": \"FuelReport-0001-2015-09-16T140731Z\",\n        \"MessageBody\": \"Fuel report for account 0001 on 2015-09-16 at 02:07:31 PM.\",\n        \"DelaySeconds\": 10,\n        \"MessageAttributes\": {\n          \"SellerName\": {\n            \"DataType\": \"String\",\n                \"StringValue\": \"Example Store\"\n      },\n          \"City\": {\n        \"DataType\": \"String\",\n        \"StringValue\": \"Any City\"\n      },\n          \"Region\": {\n            \"DataType\": \"String\",\n                \"StringValue\": \"WA\"\n      },\n          \"PostalCode\": {\n            \"DataType\": \"String\",\n                \"StringValue\": \"99065\"\n          },\n          \"PricePerGallon\": {\n            \"DataType\": \"Number\",\n                \"StringValue\": \"1.99\"\n      }\n        }\n  },\n  {\n    \"Id\": \"FuelReport-0002-2015-09-16T140930Z\",\n        \"MessageBody\": \"Fuel report for account 0002 on 2015-09-16 at 02:09:30 PM.\",\n        \"DelaySeconds\": 10,\n        \"MessageAttributes\": {\n          \"SellerName\": {\n            \"DataType\": \"String\",\n                \"StringValue\": \"Example Fuels\"\n      },\n          \"City\": {\n        \"DataType\": \"String\",\n        \"StringValue\": \"North Town\"\n      },\n          \"Region\": {\n            \"DataType\": \"String\",\n                \"StringValue\": \"WA\"\n      },\n          \"PostalCode\": {\n            \"DataType\": \"String\",\n                \"StringValue\": \"99123\"\n          },\n          \"PricePerGallon\": {\n            \"DataType\": \"Number\",\n                \"StringValue\": \"1.87\"\n      }\n        }\n  }\n]\n\n\nOutput:\n\n{\n  \"Successful\": [\n    {\n      \"MD5OfMessageBody\": \"203c4a38...7943237e\",\n      \"MD5OfMessageAttributes\": \"10809b55...baf283ef\",\n      \"Id\": \"FuelReport-0001-2015-09-16T140731Z\",\n      \"MessageId\": \"d175070c-d6b8-4101-861d-adeb3EXAMPLE\"\n    },\n    {\n      \"MD5OfMessageBody\": \"2cf0159a...c1980595\",\n      \"MD5OfMessageAttributes\": \"55623928...ae354a25\",\n      \"Id\": \"FuelReport-0002-2015-09-16T140930Z\",\n      \"MessageId\": \"f9b7d55d-0570-413e-b9c5-a9264EXAMPLE\"\n    }\n  ]\n}\n"
    },
    {
      "command_name": "set-queue-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/set-queue-attributes.html",
      "command_description": "Description\n\nSets the value of one or more queue attributes. When you change a queue’s attributes, the change can take up to 60 seconds for most of the attributes to propagate throughout the Amazon SQS system. Changes made to the MessageRetentionPeriod attribute can take up to 15 minutes.\n\nNote\n\nIn the future, new attributes might be added. If you write code that calls this action, we recommend that you structure your code so that it can handle new attributes gracefully.\n\nCross-account permissions don’t apply to this action. For more information, see Grant cross-account permissions to a role and a user name in the Amazon SQS Developer Guide .\n\nTo remove the ability to change queue permissions, you must deny permission to the AddPermission , RemovePermission , and SetQueueAttributes actions in your IAM policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-queue-attributes\n--queue-url <value>\n--attributes <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--attributes <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the Amazon SQS queue whose attributes are set.\n\nQueue URLs and names are case-sensitive.\n\n--attributes (map)\n\nA map of attributes to set.\n\nThe following lists the names, descriptions, and values of the special request parameters that the SetQueueAttributes action uses:\n\nDelaySeconds – The length of time, in seconds, for which the delivery of all messages in the queue is delayed. Valid values: An integer from 0 to 900 (15 minutes). Default: 0.\n\nMaximumMessageSize – The limit of how many bytes a message can contain before Amazon SQS rejects it. Valid values: An integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB). Default: 262,144 (256 KiB).\n\nMessageRetentionPeriod – The length of time, in seconds, for which Amazon SQS retains a message. Valid values: An integer representing seconds, from 60 (1 minute) to 1,209,600 (14 days). Default: 345,600 (4 days).\n\nPolicy – The queue’s policy. A valid Amazon Web Services policy. For more information about policy structure, see Overview of Amazon Web Services IAM Policies in the Identity and Access Management User Guide .\n\nReceiveMessageWaitTimeSeconds – The length of time, in seconds, for which a `` ReceiveMessage `` action waits for a message to arrive. Valid values: An integer from 0 to 20 (seconds). Default: 0.\n\nVisibilityTimeout – The visibility timeout for the queue, in seconds. Valid values: An integer from 0 to 43,200 (12 hours). Default: 30. For more information about the visibility timeout, see Visibility Timeout in the Amazon SQS Developer Guide .\n\nThe following attributes apply only to dead-letter queues:\n\nRedrivePolicy – The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object. The parameters are as follows:\n\ndeadLetterTargetArn – The Amazon Resource Name (ARN) of the dead-letter queue to which Amazon SQS moves messages after the value of maxReceiveCount is exceeded.\n\nmaxReceiveCount – The number of times a message is delivered to the source queue before being moved to the dead-letter queue. When the ReceiveCount for a message exceeds the maxReceiveCount for a queue, Amazon SQS moves the message to the dead-letter-queue.\n\nRedriveAllowPolicy – The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object. The parameters are as follows:\n\nredrivePermission – The permission type that defines which source queues can specify the current queue as the dead-letter queue. Valid values are:\n\nallowAll – (Default) Any source queues in this Amazon Web Services account in the same Region can specify this queue as the dead-letter queue.\n\ndenyAll – No source queues can specify this queue as the dead-letter queue.\n\nbyQueue – Only queues specified by the sourceQueueArns parameter can specify this queue as the dead-letter queue.\n\nsourceQueueArns – The Amazon Resource Names (ARN)s of the source queues that can specify this queue as the dead-letter queue and redrive messages. You can specify this parameter only when the redrivePermission parameter is set to byQueue . You can specify up to 10 source queue ARNs. To allow more than 10 source queues to specify dead-letter queues, set the redrivePermission parameter to allowAll .\n\nNote\n\nThe dead-letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead-letter queue of a standard queue must also be a standard queue.\n\nThe following attributes apply only to server-side-encryption :\n\nKmsMasterKeyId – The ID of an Amazon Web Services managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see Key Terms . While the alias of the AWS-managed CMK for Amazon SQS is always alias/aws/sqs , the alias of a custom CMK can, for example, be ``alias/MyAlias `` . For more examples, see KeyId in the Key Management Service API Reference .\n\nKmsDataKeyReusePeriodSeconds – The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). Default: 300 (5 minutes). A shorter time period provides better security but results in more calls to KMS which might incur charges after Free Tier. For more information, see How Does the Data Key Reuse Period Work? .\n\nThe following attribute applies only to FIFO (first-in-first-out) queues :\n\nContentBasedDeduplication – Enables content-based deduplication. For more information, see Exactly-once processing in the Amazon SQS Developer Guide . Note the following:\n\nEvery message must have a unique MessageDeduplicationId .\n\nYou may provide a MessageDeduplicationId explicitly.\n\nIf you aren’t able to provide a MessageDeduplicationId and you enable ContentBasedDeduplication for your queue, Amazon SQS uses a SHA-256 hash to generate the MessageDeduplicationId using the body of the message (but not the attributes of the message).\n\nIf you don’t provide a MessageDeduplicationId and the queue doesn’t have ContentBasedDeduplication set, the action fails with an error.\n\nIf the queue has ContentBasedDeduplication set, your MessageDeduplicationId overrides the generated one.\n\nWhen ContentBasedDeduplication is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered.\n\nIf you send one message with ContentBasedDeduplication enabled and then another message with a MessageDeduplicationId that is the same as the one generated for the first MessageDeduplicationId , the two messages are treated as duplicates and only one copy of the message is delivered.\n\nThe following attributes apply only to high throughput for FIFO queues :\n\nDeduplicationScope – Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue .\n\nFifoThroughputLimit – Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue and perMessageGroupId . The perMessageGroupId value is allowed only when the value for DeduplicationScope is messageGroup .\n\nTo enable high throughput for FIFO queues, do the following:\n\nSet DeduplicationScope to messageGroup .\n\nSet FifoThroughputLimit to perMessageGroupId .\n\nIf you set these attributes to anything other than the values shown for enabling high throughput, normal throughput is in effect and deduplication occurs as specified.\n\nFor information on throughput quotas, see Quotas related to messages in the Amazon SQS Developer Guide .\n\nName -> (string)\n\nValue -> (string)\n\nShorthand Syntax:\n\n  KeyName1=string,KeyName2=string\n\nWhere valid key names are:\n  All\n  Policy\n  VisibilityTimeout\n  MaximumMessageSize\n  MessageRetentionPeriod\n  ApproximateNumberOfMessages\n  ApproximateNumberOfMessagesNotVisible\n  CreatedTimestamp\n  LastModifiedTimestamp\n  QueueArn\n  ApproximateNumberOfMessagesDelayed\n  DelaySeconds\n  ReceiveMessageWaitTimeSeconds\n  RedrivePolicy\n  FifoQueue\n  ContentBasedDeduplication\n  KmsMasterKeyId\n  KmsDataKeyReusePeriodSeconds\n  DeduplicationScope\n  FifoThroughputLimit\n  RedriveAllowPolicy\n\n\nJSON Syntax:\n\n{\"All\"|\"Policy\"|\"VisibilityTimeout\"|\"MaximumMessageSize\"|\"MessageRetentionPeriod\"|\"ApproximateNumberOfMessages\"|\"ApproximateNumberOfMessagesNotVisible\"|\"CreatedTimestamp\"|\"LastModifiedTimestamp\"|\"QueueArn\"|\"ApproximateNumberOfMessagesDelayed\"|\"DelaySeconds\"|\"ReceiveMessageWaitTimeSeconds\"|\"RedrivePolicy\"|\"FifoQueue\"|\"ContentBasedDeduplication\"|\"KmsMasterKeyId\"|\"KmsDataKeyReusePeriodSeconds\"|\"DeduplicationScope\"|\"FifoThroughputLimit\"|\"RedriveAllowPolicy\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo set queue attributes\n\nThis example sets the specified queue to a delivery delay of 10 seconds, a maximum message size of 128 KB (128 KB * 1,024 bytes), a message retention period of 3 days (3 days * 24 hours * 60 minutes * 60 seconds), a receive message wait time of 20 seconds, and a default visibility timeout of 60 seconds. This example also associates the specified dead letter queue with a maximum receive count of 1,000 messages.\n\nCommand:\n\naws sqs set-queue-attributes --queue-url https://sqs.us-east-1.amazonaws.com/80398EXAMPLE/MyNewQueue --attributes file://set-queue-attributes.json\n\n\nInput file (set-queue-attributes.json):\n\n{\n  \"DelaySeconds\": \"10\",\n  \"MaximumMessageSize\": \"131072\",\n  \"MessageRetentionPeriod\": \"259200\",\n  \"ReceiveMessageWaitTimeSeconds\": \"20\",\n  \"RedrivePolicy\": \"{\\\"deadLetterTargetArn\\\":\\\"arn:aws:sqs:us-east-1:80398EXAMPLE:MyDeadLetterQueue\\\",\\\"maxReceiveCount\\\":\\\"1000\\\"}\",\n  \"VisibilityTimeout\": \"60\"\n}\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "tag-queue",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/tag-queue.html",
      "command_description": "Description\n\nAdd cost allocation tags to the specified Amazon SQS queue. For an overview, see Tagging Your Amazon SQS Queues in the Amazon SQS Developer Guide .\n\nWhen you use queue tags, keep the following guidelines in mind:\n\nAdding more than 50 tags to a queue isn’t recommended.\n\nTags don’t have any semantic meaning. Amazon SQS interprets tags as character strings.\n\nTags are case-sensitive.\n\nA new tag with a key identical to that of an existing tag overwrites the existing tag.\n\nFor a full list of tag restrictions, see Quotas related to queues in the Amazon SQS Developer Guide .\n\nNote\n\nCross-account permissions don’t apply to this action. For more information, see Grant cross-account permissions to a role and a user name in the Amazon SQS Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-queue\n--queue-url <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the queue.\n\n--tags (map)\n\nThe list of tags to be added to the specified queue.\n\nKey -> (string)\n\nValue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add cost allocation tags to a queue\n\nThe following tag-queue example adds a cost allocation tag to the specified Amazon SQS queue.\n\naws sqs tag-queue \\\n    --queue-url https://sqs.us-west-2.amazonaws.com/123456789012/MyQueue \\\n    --tags Priority=Highest\n\n\nThis command produces no output.\n\nFor more information, see Adding Cost Allocation Tags in the Amazon Simple Queue Service Developer Guide."
    },
    {
      "command_name": "untag-queue",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sqs/untag-queue.html",
      "command_description": "Description\n\nRemove cost allocation tags from the specified Amazon SQS queue. For an overview, see Tagging Your Amazon SQS Queues in the Amazon SQS Developer Guide .\n\nNote\n\nCross-account permissions don’t apply to this action. For more information, see Grant cross-account permissions to a role and a user name in the Amazon SQS Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-queue\n--queue-url <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--queue-url <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--queue-url (string)\n\nThe URL of the queue.\n\n--tag-keys (list)\n\nThe list of tags to be removed from the specified queue.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove cost allocation tags from a queue\n\nThe following untag-queue example removes a cost allocation tag from the specified Amazon SQS queue.\n\naws sqs untag-queue \\\n    --queue-url https://sqs.us-west-2.amazonaws.com/123456789012/MyQueue \\\n    --tag-keys \"Priority\"\n\n\nThis command produces no output.\n\nFor more information, see Adding Cost Allocation Tags in the Amazon Simple Queue Service Developer Guide."
    }
  ],
  "service_description": "Description\n\nWelcome to the Amazon SQS API Reference .\n\nAmazon SQS is a reliable, highly-scalable hosted queue for storing messages as they travel between applications or microservices. Amazon SQS moves data between distributed application components and helps you decouple these components.\n\nFor information on the permissions you need to use this API, see Identity and access management in the Amazon SQS Developer Guide.\n\nYou can use Amazon Web Services SDKs to access Amazon SQS using your favorite programming language. The SDKs perform tasks such as the following automatically:\n\nCryptographically sign your service requests\n\nRetry requests\n\nHandle error responses\n\nAdditional information\n\nAmazon SQS Product Page\n\nAmazon SQS Developer Guide\n\nMaking API Requests\n\nAmazon SQS Message Attributes\n\nAmazon SQS Dead-Letter Queues\n\n`Amazon SQS in the *Command Line Interface* http://docs.aws.amazon.com/cli/latest/reference/sqs/index.html`__\n\nAmazon Web Services General Reference\n\nRegions and Endpoints"
}