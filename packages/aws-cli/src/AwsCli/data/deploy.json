{
  "service_name": "deploy",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/index.html",
  "service_commands": [
    {
      "command_name": "add-tags-to-on-premises-instances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/add-tags-to-on-premises-instances.html",
      "command_description": "Description\n\nAdds tags to on-premises instances.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-tags-to-on-premises-instances\n--tags <value>\n--instance-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--tags <value>",
        "--instance-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--tags (list)\n\nThe tag key-value pairs to add to the on-premises instances.\n\nKeys and values are both required. Keys cannot be null or empty strings. Value-only tags are not allowed.\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe tag’s key.\n\nValue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--instance-names (list)\n\nThe names of the on-premises instances to which to add tags.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add tags to on-premises instances\n\nThe follwoing add-tags-to-on-premises-instances example associates in AWS CodeDeploy the same on-premises instance tag to two on-premises instances. It does not register the on-premises instances with AWS CodeDeploy.\n\naws deploy add-tags-to-on-premises-instances \\\n    --instance-names AssetTag12010298EX AssetTag23121309EX \\\n    --tags Key=Name,Value=CodeDeployDemo-OnPrem\n\n\nThis command produces no output."
    },
    {
      "command_name": "batch-get-application-revisions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/batch-get-application-revisions.html",
      "command_description": "Description\n\nGets information about one or more application revisions. The maximum number of application revisions that can be returned is 25.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-application-revisions\n--application-name <value>\n--revisions <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--revisions <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application about which to get revision information.\n\n--revisions (list)\n\nAn array of RevisionLocation objects that specify information to get about the application revisions, including type and location. The maximum number of RevisionLocation objects you can specify is 25.\n\n(structure)\n\nInformation about the location of an application revision.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nShorthand Syntax:\n\nrevisionType=string,s3Location={bucket=string,key=string,bundleType=string,version=string,eTag=string},gitHubLocation={repository=string,commitId=string},string={content=string,sha256=string},appSpecContent={content=string,sha256=string} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"revisionType\": \"S3\"|\"GitHub\"|\"String\"|\"AppSpecContent\",\n    \"s3Location\": {\n      \"bucket\": \"string\",\n      \"key\": \"string\",\n      \"bundleType\": \"tar\"|\"tgz\"|\"zip\"|\"YAML\"|\"JSON\",\n      \"version\": \"string\",\n      \"eTag\": \"string\"\n    },\n    \"gitHubLocation\": {\n      \"repository\": \"string\",\n      \"commitId\": \"string\"\n    },\n    \"string\": {\n      \"content\": \"string\",\n      \"sha256\": \"string\"\n    },\n    \"appSpecContent\": {\n      \"content\": \"string\",\n      \"sha256\": \"string\"\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napplicationName -> (string)\n\nThe name of the application that corresponds to the revisions.\n\nerrorMessage -> (string)\n\nInformation about errors that might have occurred during the API call.\n\nrevisions -> (list)\n\nAdditional information about the revisions, including the type and location.\n\n(structure)\n\nInformation about an application revision.\n\nrevisionLocation -> (structure)\n\nInformation about the location and type of an application revision.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\ngenericRevisionInfo -> (structure)\n\nInformation about an application revision, including usage details and associated deployment groups.\n\ndescription -> (string)\n\nA comment about the revision.\n\ndeploymentGroups -> (list)\n\nThe deployment groups for which this is the current target revision.\n\n(string)\n\nfirstUsedTime -> (timestamp)\n\nWhen the revision was first used by AWS CodeDeploy.\n\nlastUsedTime -> (timestamp)\n\nWhen the revision was last used by AWS CodeDeploy.\n\nregisterTime -> (timestamp)\n\nWhen the revision was registered with AWS CodeDeploy.",
      "command_examples": "Examples\n\nTo retrieve information about application revisions\n\nThe following batch-get-application-revisions example retrieves information about the specified revision stored in a GitHub repository.\n\naws deploy batch-get-application-revisions \\\n    --application-name my-codedeploy-application \\\n    --revisions \"[{\\\"gitHubLocation\\\": {\\\"commitId\\\": \\\"fa85936EXAMPLEa31736c051f10d77297EXAMPLE\\\",\\\"repository\\\": \\\"my-github-token/my-repository\\\"},\\\"revisionType\\\": \\\"GitHub\\\"}]\"\n\n\nOutput:\n\n{\n    \"revisions\": [\n        {\n            \"genericRevisionInfo\": {\n                \"description\": \"Application revision registered by Deployment ID: d-A1B2C3111\",\n                \"lastUsedTime\": 1556912355.884,\n                \"registerTime\": 1556912355.884,\n                \"firstUsedTime\": 1556912355.884,\n                \"deploymentGroups\": []\n            },\n            \"revisionLocation\": {\n                \"revisionType\": \"GitHub\",\n                \"gitHubLocation\": {\n                    \"commitId\": \"fa85936EXAMPLEa31736c051f10d77297EXAMPLE\",\n                    \"repository\": \"my-github-token/my-repository\"\n                }\n            }\n        }\n    ],\n    \"applicationName\": \"my-codedeploy-application\",\n    \"errorMessage\": \"\"\n}\n\n\nFor more information, see BatchGetApplicationRevisions in the AWS CodeDeploy API Reference."
    },
    {
      "command_name": "batch-get-applications",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/batch-get-applications.html",
      "command_description": "Description\n\nGets information about one or more applications. The maximum number of applications that can be returned is 100.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-applications\n--application-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-names (list)\n\nA list of application names separated by spaces. The maximum number of application names you can specify is 100.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napplicationsInfo -> (list)\n\nInformation about the applications.\n\n(structure)\n\nInformation about an application.\n\napplicationId -> (string)\n\nThe application ID.\n\napplicationName -> (string)\n\nThe application name.\n\ncreateTime -> (timestamp)\n\nThe time at which the application was created.\n\nlinkedToGitHub -> (boolean)\n\nTrue if the user has authenticated with GitHub for the specified application. Otherwise, false.\n\ngitHubAccountName -> (string)\n\nThe name for a connection to a GitHub account.\n\ncomputePlatform -> (string)\n\nThe destination platform type for deployment of the application (Lambda or Server ).",
      "command_examples": "Examples\n\nTo get information about multiple applications\n\nThe following batch-get-applications example displays information about multiple applications that are associated with the user’s AWS account.\n\naws deploy batch-get-applications --application-names WordPress_App MyOther_App\n\n\nOutput:\n\n{\n    \"applicationsInfo\": [\n        {\n            \"applicationName\": \"WordPress_App\",\n            \"applicationId\": \"d9dd6993-f171-44fa-a811-211e4EXAMPLE\",\n            \"createTime\": 1407878168.078,\n            \"linkedToGitHub\": false\n        },\n        {\n            \"applicationName\": \"MyOther_App\",\n            \"applicationId\": \"8ca57519-31da-42b2-9194-8bb16EXAMPLE\",\n            \"createTime\": 1407453571.63,\n            \"linkedToGitHub\": false\n        }\n    ]\n}\n"
    },
    {
      "command_name": "batch-get-deployment-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/batch-get-deployment-groups.html",
      "command_description": "Description\n\nGets information about one or more deployment groups.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-deployment-groups\n--application-name <value>\n--deployment-group-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--deployment-group-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.\n\n--deployment-group-names (list)\n\nThe names of the deployment groups.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentGroupsInfo -> (list)\n\nInformation about the deployment groups.\n\n(structure)\n\nInformation about a deployment group.\n\napplicationName -> (string)\n\nThe application name.\n\ndeploymentGroupId -> (string)\n\nThe deployment group ID.\n\ndeploymentGroupName -> (string)\n\nThe deployment group name.\n\ndeploymentConfigName -> (string)\n\nThe deployment configuration name.\n\nec2TagFilters -> (list)\n\nThe Amazon EC2 tags on which to filter. The deployment group includes EC2 instances with any of the specified tags.\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nonPremisesInstanceTagFilters -> (list)\n\nThe on-premises instance tags on which to filter. The deployment group includes on-premises instances with any of the specified tags.\n\n(structure)\n\nInformation about an on-premises instance tag filter.\n\nKey -> (string)\n\nThe on-premises instance tag filter key.\n\nValue -> (string)\n\nThe on-premises instance tag filter value.\n\nType -> (string)\n\nThe on-premises instance tag filter type:\n\nKEY_ONLY: Key only.\n\nVALUE_ONLY: Value only.\n\nKEY_AND_VALUE: Key and value.\n\nautoScalingGroups -> (list)\n\nA list of associated Auto Scaling groups.\n\n(structure)\n\nInformation about an Auto Scaling group.\n\nname -> (string)\n\nThe Auto Scaling group name.\n\nhook -> (string)\n\nAn Auto Scaling lifecycle event hook name.\n\nserviceRoleArn -> (string)\n\nA service role Amazon Resource Name (ARN) that grants CodeDeploy permission to make calls to AWS services on your behalf. For more information, see Create a Service Role for AWS CodeDeploy in the AWS CodeDeploy User Guide .\n\ntargetRevision -> (structure)\n\nInformation about the deployment group’s target revision, including type and location.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\ntriggerConfigurations -> (list)\n\nInformation about triggers associated with the deployment group.\n\n(structure)\n\nInformation about notification triggers for the deployment group.\n\ntriggerName -> (string)\n\nThe name of the notification trigger.\n\ntriggerTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Simple Notification Service topic through which notifications about deployment or instance events are sent.\n\ntriggerEvents -> (list)\n\nThe event type or types for which notifications are triggered.\n\n(string)\n\nalarmConfiguration -> (structure)\n\nA list of alarms associated with the deployment group.\n\nenabled -> (boolean)\n\nIndicates whether the alarm configuration is enabled.\n\nignorePollAlarmFailure -> (boolean)\n\nIndicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from Amazon CloudWatch. The default value is false.\n\ntrue : The deployment proceeds even if alarm status information can’t be retrieved from Amazon CloudWatch.\n\nfalse : The deployment stops if alarm status information can’t be retrieved from Amazon CloudWatch.\n\nalarms -> (list)\n\nA list of alarms configured for the deployment group. A maximum of 10 alarms can be added to a deployment group.\n\n(structure)\n\nInformation about an alarm.\n\nname -> (string)\n\nThe name of the alarm. Maximum length is 255 characters. Each alarm name can be used only once in a list of alarms.\n\nautoRollbackConfiguration -> (structure)\n\nInformation about the automatic rollback configuration associated with the deployment group.\n\nenabled -> (boolean)\n\nIndicates whether a defined automatic rollback configuration is currently enabled.\n\nevents -> (list)\n\nThe event type or types that trigger a rollback.\n\n(string)\n\ndeploymentStyle -> (structure)\n\nInformation about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.\n\ndeploymentType -> (string)\n\nIndicates whether to run an in-place deployment or a blue/green deployment.\n\ndeploymentOption -> (string)\n\nIndicates whether to route deployment traffic behind a load balancer.\n\noutdatedInstancesStrategy -> (string)\n\nIndicates what happens when new EC2 instances are launched mid-deployment and do not receive the deployed application revision.\n\nIf this option is set to UPDATE or is unspecified, CodeDeploy initiates one or more ‘auto-update outdated instances’ deployments to apply the deployed application revision to the new EC2 instances.\n\nIf this option is set to IGNORE , CodeDeploy does not initiate a deployment to update the new EC2 instances. This may result in instances having different revisions.\n\nblueGreenDeploymentConfiguration -> (structure)\n\nInformation about blue/green deployment options for a deployment group.\n\nterminateBlueInstancesOnDeploymentSuccess -> (structure)\n\nInformation about whether to terminate instances in the original fleet during a blue/green deployment.\n\naction -> (string)\n\nThe action to take on instances in the original environment after a successful blue/green deployment.\n\nTERMINATE : Instances are terminated after a specified wait time.\n\nKEEP_ALIVE : Instances are left running after they are deregistered from the load balancer and removed from the deployment group.\n\nterminationWaitTimeInMinutes -> (integer)\n\nFor an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.\n\nFor an Amazon ECS deployment, the number of minutes before deleting the original (blue) task set. During an Amazon ECS deployment, CodeDeploy shifts traffic from the original (blue) task set to a replacement (green) task set.\n\nThe maximum setting is 2880 minutes (2 days).\n\ndeploymentReadyOption -> (structure)\n\nInformation about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment.\n\nactionOnTimeout -> (string)\n\nInformation about when to reroute traffic from an original environment to a replacement environment in a blue/green deployment.\n\nCONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.\n\nSTOP_DEPLOYMENT: Do not register new instances with a load balancer unless traffic rerouting is started using ContinueDeployment . If traffic rerouting is not started before the end of the specified wait period, the deployment status is changed to Stopped.\n\nwaitTimeInMinutes -> (integer)\n\nThe number of minutes to wait before the status of a blue/green deployment is changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for actionOnTimeout .\n\ngreenFleetProvisioningOption -> (structure)\n\nInformation about how instances are provisioned for a replacement environment in a blue/green deployment.\n\naction -> (string)\n\nThe method used to add instances to a replacement environment.\n\nDISCOVER_EXISTING : Use instances that already exist or will be created manually.\n\nCOPY_AUTO_SCALING_GROUP : Use settings from a specified Auto Scaling group to define and create instances in a new Auto Scaling group.\n\nloadBalancerInfo -> (structure)\n\nInformation about the load balancer to use in a deployment.\n\nelbInfoList -> (list)\n\nAn array that contains information about the load balancer to use for load balancing in a deployment. In Elastic Load Balancing, load balancers are used with Classic Load Balancers.\n\nNote\n\nAdding more than one load balancer to the array is not supported.\n\n(structure)\n\nInformation about a load balancer in Elastic Load Balancing to use in a deployment. Instances are registered directly with a load balancer, and traffic is routed to the load balancer.\n\nname -> (string)\n\nFor blue/green deployments, the name of the load balancer that is used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupInfoList -> (list)\n\nAn array that contains information about the target group to use for load balancing in a deployment. In Elastic Load Balancing, target groups are used with Application Load Balancers.\n\nNote\n\nAdding more than one target group to the array is not supported.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupPairInfoList -> (list)\n\nThe target group pair information. This is an array of TargeGroupPairInfo objects with a maximum size of one.\n\n(structure)\n\nInformation about two target groups and how traffic is routed during an Amazon ECS deployment. An optional test traffic route can be specified.\n\ntargetGroups -> (list)\n\nOne pair of target groups. One is associated with the original task set. The second is associated with the task set that serves traffic after the deployment is complete.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\nprodTrafficRoute -> (structure)\n\nThe path used by a load balancer to route production traffic when an Amazon ECS deployment is complete.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\ntestTrafficRoute -> (structure)\n\nAn optional path used by a load balancer to route test traffic after an Amazon ECS deployment. Validation can occur while test traffic is served during a deployment.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\nlastSuccessfulDeployment -> (structure)\n\nInformation about the most recent successful deployment to the deployment group.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\nstatus -> (string)\n\nThe status of the most recent deployment.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the most recent deployment to the deployment group was complete.\n\ncreateTime -> (timestamp)\n\nA timestamp that indicates when the most recent deployment to the deployment group started.\n\nlastAttemptedDeployment -> (structure)\n\nInformation about the most recent attempted deployment to the deployment group.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\nstatus -> (string)\n\nThe status of the most recent deployment.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the most recent deployment to the deployment group was complete.\n\ncreateTime -> (timestamp)\n\nA timestamp that indicates when the most recent deployment to the deployment group started.\n\nec2TagSet -> (structure)\n\nInformation about groups of tags applied to an EC2 instance. The deployment group includes only EC2 instances identified by all of the tag groups. Cannot be used in the same call as ec2TagFilters.\n\nec2TagSetList -> (list)\n\nA list that contains other lists of EC2 instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nonPremisesTagSet -> (structure)\n\nInformation about groups of tags applied to an on-premises instance. The deployment group includes only on-premises instances identified by all the tag groups. Cannot be used in the same call as onPremisesInstanceTagFilters.\n\nonPremisesTagSetList -> (list)\n\nA list that contains other lists of on-premises instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an on-premises instance tag filter.\n\nKey -> (string)\n\nThe on-premises instance tag filter key.\n\nValue -> (string)\n\nThe on-premises instance tag filter value.\n\nType -> (string)\n\nThe on-premises instance tag filter type:\n\nKEY_ONLY: Key only.\n\nVALUE_ONLY: Value only.\n\nKEY_AND_VALUE: Key and value.\n\ncomputePlatform -> (string)\n\nThe destination platform type for the deployment (Lambda , Server , or ECS ).\n\necsServices -> (list)\n\nThe target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format <clustername>:<servicename> .\n\n(structure)\n\nContains the service and cluster names used to identify an Amazon ECS deployment’s target.\n\nserviceName -> (string)\n\nThe name of the target Amazon ECS service.\n\nclusterName -> (string)\n\nThe name of the cluster that the Amazon ECS service is associated with.\n\nerrorMessage -> (string)\n\nInformation about errors that might have occurred during the API call.",
      "command_examples": "Examples\n\nTo retrieve information about one or more deployment groups\n\nThe following batch-get-deployment-groups example retrieves information about two of the deployment groups that are associated with the specified CodeDeploy application.\n\naws deploy batch-get-deployment-groups \\\n    --application-name my-codedeploy-application \\\n    --deployment-group-names \"[\\\"my-deployment-group-1\\\",\\\"my-deployment-group-2\\\"]\"\n\n\nOutput:\n\n{\n    \"deploymentGroupsInfo\": [\n        {\n            \"deploymentStyle\": {\n                \"deploymentOption\": \"WITHOUT_TRAFFIC_CONTROL\",\n                \"deploymentType\": \"IN_PLACE\"\n            },\n            \"autoRollbackConfiguration\": {\n                \"enabled\": false\n            },\n            \"onPremisesTagSet\": {\n                \"onPremisesTagSetList\": []\n            },\n            \"serviceRoleArn\": \"arn:aws:iam::123456789012:role/CodeDeloyServiceRole\",\n            \"lastAttemptedDeployment\": {\n                \"endTime\": 1556912366.415,\n                \"status\": \"Failed\",\n                \"createTime\": 1556912355.884,\n                \"deploymentId\": \"d-A1B2C3111\"\n            },\n            \"autoScalingGroups\": [],\n            \"deploymentGroupName\": \"my-deployment-group-1\",\n            \"ec2TagSet\": {\n                \"ec2TagSetList\": [\n                    [\n                        {\n                            \"Type\": \"KEY_AND_VALUE\",\n                            \"Value\": \"my-EC2-instance\",\n                            \"Key\": \"Name\"\n                        }\n                    ]\n                ]\n            },\n            \"deploymentGroupId\": \"a1b2c3d4-5678-90ab-cdef-11111example\",\n            \"triggerConfigurations\": [],\n            \"applicationName\": \"my-codedeploy-application\",\n            \"computePlatform\": \"Server\",\n            \"deploymentConfigName\": \"CodeDeployDefault.AllAtOnce\"\n        },\n        {\n            \"deploymentStyle\": {\n                \"deploymentOption\": \"WITHOUT_TRAFFIC_CONTROL\",\n                \"deploymentType\": \"IN_PLACE\"\n            },\n            \"autoRollbackConfiguration\": {\n                \"enabled\": false\n            },\n            \"onPremisesTagSet\": {\n                \"onPremisesTagSetList\": []\n            },\n            \"serviceRoleArn\": \"arn:aws:iam::123456789012:role/CodeDeloyServiceRole\",\n            \"autoScalingGroups\": [],\n            \"deploymentGroupName\": \"my-deployment-group-2\",\n            \"ec2TagSet\": {\n                \"ec2TagSetList\": [\n                    [\n                        {\n                            \"Type\": \"KEY_AND_VALUE\",\n                            \"Value\": \"my-EC2-instance\",\n                            \"Key\": \"Name\"\n                            }\n                    ]\n                ]\n            },\n            \"deploymentGroupId\": \"a1b2c3d4-5678-90ab-cdef-22222example\",\n            \"triggerConfigurations\": [],\n            \"applicationName\": \"my-codedeploy-application\",\n            \"computePlatform\": \"Server\",\n            \"deploymentConfigName\": \"CodeDeployDefault.AllAtOnce\"\n        }\n    ],\n    \"errorMessage\": \"\"\n}\n\n\nFor more information, see BatchGetDeploymentGroups in the AWS CodeDeploy API Reference."
    },
    {
      "command_name": "batch-get-deployment-targets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/batch-get-deployment-targets.html",
      "command_description": "Description\n\nReturns an array of one or more targets associated with a deployment. This method works with all compute types and should be used instead of the deprecated BatchGetDeploymentInstances . The maximum number of targets that can be returned is 25.\n\nThe type of targets returned depends on the deployment’s compute platform or deployment method:\n\nEC2/On-premises : Information about EC2 instance targets.\n\nAWS Lambda : Information about Lambda functions targets.\n\nAmazon ECS : Information about Amazon ECS service targets.\n\nCloudFormation : Information about targets of blue/green deployments initiated by a CloudFormation stack update.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-deployment-targets\n[--deployment-id <value>]\n[--target-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--deployment-id <value>]",
        "[--target-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-id (string)\n\nThe unique ID of a deployment.\n\n--target-ids (list)\n\nThe unique IDs of the deployment targets. The compute platform of the deployment determines the type of the targets and their formats. The maximum number of deployment target IDs you can specify is 25.\n\nFor deployments that use the EC2/On-premises compute platform, the target IDs are EC2 or on-premises instances IDs, and their target type is instanceTarget .\n\nFor deployments that use the AWS Lambda compute platform, the target IDs are the names of Lambda functions, and their target type is instanceTarget .\n\nFor deployments that use the Amazon ECS compute platform, the target IDs are pairs of Amazon ECS clusters and services specified using the format <clustername>:<servicename> . Their target type is ecsTarget .\n\nFor deployments that are deployed with AWS CloudFormation, the target IDs are CloudFormation stack IDs. Their target type is cloudFormationTarget .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentTargets -> (list)\n\nA list of target objects for a deployment. Each target object contains details about the target, such as its status and lifecycle events. The type of the target objects depends on the deployment’ compute platform.\n\nEC2/On-premises : Each target object is an EC2 or on-premises instance.\n\nAWS Lambda : The target object is a specific version of an AWS Lambda function.\n\nAmazon ECS : The target object is an Amazon ECS service.\n\nCloudFormation : The target object is an AWS CloudFormation blue/green deployment.\n\n(structure)\n\nInformation about the deployment target.\n\ndeploymentTargetType -> (string)\n\nThe deployment type that is specific to the deployment’s compute platform or deployments initiated by a CloudFormation stack update.\n\ninstanceTarget -> (structure)\n\nInformation about the target for a deployment that uses the EC2/On-premises compute platform.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\ntargetId -> (string)\n\nThe unique ID of a deployment target that has a type of instanceTarget .\n\ntargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the target.\n\nstatus -> (string)\n\nThe status an EC2/On-premises deployment’s target instance.\n\nlastUpdatedAt -> (timestamp)\n\nThe date and time when the target instance was updated by a deployment.\n\nlifecycleEvents -> (list)\n\nThe lifecycle events of the deployment to this target instance.\n\n(structure)\n\nInformation about a deployment lifecycle event.\n\nlifecycleEventName -> (string)\n\nThe deployment lifecycle event name, such as ApplicationStop , BeforeInstall , AfterInstall , ApplicationStart , or ValidateService .\n\ndiagnostics -> (structure)\n\nDiagnostic information about the deployment lifecycle event.\n\nerrorCode -> (string)\n\nThe associated error code:\n\nSuccess: The specified script ran.\n\nScriptMissing: The specified script was not found in the specified location.\n\nScriptNotExecutable: The specified script is not a recognized executable file type.\n\nScriptTimedOut: The specified script did not finish running in the specified time period.\n\nScriptFailed: The specified script failed to run as expected.\n\nUnknownError: The specified script did not run for an unknown reason.\n\nscriptName -> (string)\n\nThe name of the script.\n\nmessage -> (string)\n\nThe message associated with the error.\n\nlogTail -> (string)\n\nThe last portion of the diagnostic log.\n\nIf available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.\n\nstartTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event started.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event ended.\n\nstatus -> (string)\n\nThe deployment lifecycle event status:\n\nPending: The deployment lifecycle event is pending.\n\nInProgress: The deployment lifecycle event is in progress.\n\nSucceeded: The deployment lifecycle event ran successfully.\n\nFailed: The deployment lifecycle event has failed.\n\nSkipped: The deployment lifecycle event has been skipped.\n\nUnknown: The deployment lifecycle event is unknown.\n\ninstanceLabel -> (string)\n\nA label that identifies whether the instance is an original target (BLUE ) or a replacement target (GREEN ).\n\nlambdaTarget -> (structure)\n\nInformation about the target for a deployment that uses the AWS Lambda compute platform.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\ntargetId -> (string)\n\nThe unique ID of a deployment target that has a type of lambdaTarget .\n\ntargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the target.\n\nstatus -> (string)\n\nThe status an AWS Lambda deployment’s target Lambda function.\n\nlastUpdatedAt -> (timestamp)\n\nThe date and time when the target Lambda function was updated by a deployment.\n\nlifecycleEvents -> (list)\n\nThe lifecycle events of the deployment to this target Lambda function.\n\n(structure)\n\nInformation about a deployment lifecycle event.\n\nlifecycleEventName -> (string)\n\nThe deployment lifecycle event name, such as ApplicationStop , BeforeInstall , AfterInstall , ApplicationStart , or ValidateService .\n\ndiagnostics -> (structure)\n\nDiagnostic information about the deployment lifecycle event.\n\nerrorCode -> (string)\n\nThe associated error code:\n\nSuccess: The specified script ran.\n\nScriptMissing: The specified script was not found in the specified location.\n\nScriptNotExecutable: The specified script is not a recognized executable file type.\n\nScriptTimedOut: The specified script did not finish running in the specified time period.\n\nScriptFailed: The specified script failed to run as expected.\n\nUnknownError: The specified script did not run for an unknown reason.\n\nscriptName -> (string)\n\nThe name of the script.\n\nmessage -> (string)\n\nThe message associated with the error.\n\nlogTail -> (string)\n\nThe last portion of the diagnostic log.\n\nIf available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.\n\nstartTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event started.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event ended.\n\nstatus -> (string)\n\nThe deployment lifecycle event status:\n\nPending: The deployment lifecycle event is pending.\n\nInProgress: The deployment lifecycle event is in progress.\n\nSucceeded: The deployment lifecycle event ran successfully.\n\nFailed: The deployment lifecycle event has failed.\n\nSkipped: The deployment lifecycle event has been skipped.\n\nUnknown: The deployment lifecycle event is unknown.\n\nlambdaFunctionInfo -> (structure)\n\nA LambdaFunctionInfo object that describes a target Lambda function.\n\nfunctionName -> (string)\n\nThe name of a Lambda function.\n\nfunctionAlias -> (string)\n\nThe alias of a Lambda function. For more information, see AWS Lambda Function Aliases in the AWS Lambda Developer Guide .\n\ncurrentVersion -> (string)\n\nThe version of a Lambda function that production traffic points to.\n\ntargetVersion -> (string)\n\nThe version of a Lambda function that production traffic points to after the Lambda function is deployed.\n\ntargetVersionWeight -> (double)\n\nThe percentage of production traffic that the target version of a Lambda function receives.\n\necsTarget -> (structure)\n\nInformation about the target for a deployment that uses the Amazon ECS compute platform.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\ntargetId -> (string)\n\nThe unique ID of a deployment target that has a type of ecsTarget .\n\ntargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the target.\n\nlastUpdatedAt -> (timestamp)\n\nThe date and time when the target Amazon ECS application was updated by a deployment.\n\nlifecycleEvents -> (list)\n\nThe lifecycle events of the deployment to this target Amazon ECS application.\n\n(structure)\n\nInformation about a deployment lifecycle event.\n\nlifecycleEventName -> (string)\n\nThe deployment lifecycle event name, such as ApplicationStop , BeforeInstall , AfterInstall , ApplicationStart , or ValidateService .\n\ndiagnostics -> (structure)\n\nDiagnostic information about the deployment lifecycle event.\n\nerrorCode -> (string)\n\nThe associated error code:\n\nSuccess: The specified script ran.\n\nScriptMissing: The specified script was not found in the specified location.\n\nScriptNotExecutable: The specified script is not a recognized executable file type.\n\nScriptTimedOut: The specified script did not finish running in the specified time period.\n\nScriptFailed: The specified script failed to run as expected.\n\nUnknownError: The specified script did not run for an unknown reason.\n\nscriptName -> (string)\n\nThe name of the script.\n\nmessage -> (string)\n\nThe message associated with the error.\n\nlogTail -> (string)\n\nThe last portion of the diagnostic log.\n\nIf available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.\n\nstartTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event started.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event ended.\n\nstatus -> (string)\n\nThe deployment lifecycle event status:\n\nPending: The deployment lifecycle event is pending.\n\nInProgress: The deployment lifecycle event is in progress.\n\nSucceeded: The deployment lifecycle event ran successfully.\n\nFailed: The deployment lifecycle event has failed.\n\nSkipped: The deployment lifecycle event has been skipped.\n\nUnknown: The deployment lifecycle event is unknown.\n\nstatus -> (string)\n\nThe status an Amazon ECS deployment’s target ECS application.\n\ntaskSetsInfo -> (list)\n\nThe ECSTaskSet objects associated with the ECS target.\n\n(structure)\n\nInformation about a set of Amazon ECS tasks in an AWS CodeDeploy deployment. An Amazon ECS task set includes details such as the desired number of tasks, how many tasks are running, and whether the task set serves production traffic. An AWS CodeDeploy application that uses the Amazon ECS compute platform deploys a containerized application in an Amazon ECS service as a task set.\n\nidentifer -> (string)\n\nA unique ID of an ECSTaskSet .\n\ndesiredCount -> (long)\n\nThe number of tasks in a task set. During a deployment that uses the Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a new task set and uses this value to determine how many tasks to create. After the updated task set is created, CodeDeploy shifts traffic to the new task set.\n\npendingCount -> (long)\n\nThe number of tasks in the task set that are in the PENDING status during an Amazon ECS deployment. A task in the PENDING state is preparing to enter the RUNNING state. A task set enters the PENDING status when it launches for the first time, or when it is restarted after being in the STOPPED state.\n\nrunningCount -> (long)\n\nThe number of tasks in the task set that are in the RUNNING status during an Amazon ECS deployment. A task in the RUNNING state is running and ready for use.\n\nstatus -> (string)\n\nThe status of the task set. There are three valid task set statuses:\n\nPRIMARY : Indicates the task set is serving production traffic.\n\nACTIVE : Indicates the task set is not serving production traffic.\n\nDRAINING : Indicates the tasks in the task set are being stopped and their corresponding targets are being deregistered from their target group.\n\ntrafficWeight -> (double)\n\nThe percentage of traffic served by this task set.\n\ntargetGroup -> (structure)\n\nThe target group associated with the task set. The target group is used by AWS CodeDeploy to manage traffic to a task set.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntaskSetLabel -> (string)\n\nA label that identifies whether the ECS task set is an original target (BLUE ) or a replacement target (GREEN ).\n\ncloudFormationTarget -> (structure)\n\nInformation about the target to be updated by an AWS CloudFormation blue/green deployment. This target type is used for all deployments initiated by a CloudFormation stack update.\n\ndeploymentId -> (string)\n\nThe unique ID of an AWS CloudFormation blue/green deployment.\n\ntargetId -> (string)\n\nThe unique ID of a deployment target that has a type of CloudFormationTarget .\n\nlastUpdatedAt -> (timestamp)\n\nThe date and time when the target application was updated by an AWS CloudFormation blue/green deployment.\n\nlifecycleEvents -> (list)\n\nThe lifecycle events of the AWS CloudFormation blue/green deployment to this target application.\n\n(structure)\n\nInformation about a deployment lifecycle event.\n\nlifecycleEventName -> (string)\n\nThe deployment lifecycle event name, such as ApplicationStop , BeforeInstall , AfterInstall , ApplicationStart , or ValidateService .\n\ndiagnostics -> (structure)\n\nDiagnostic information about the deployment lifecycle event.\n\nerrorCode -> (string)\n\nThe associated error code:\n\nSuccess: The specified script ran.\n\nScriptMissing: The specified script was not found in the specified location.\n\nScriptNotExecutable: The specified script is not a recognized executable file type.\n\nScriptTimedOut: The specified script did not finish running in the specified time period.\n\nScriptFailed: The specified script failed to run as expected.\n\nUnknownError: The specified script did not run for an unknown reason.\n\nscriptName -> (string)\n\nThe name of the script.\n\nmessage -> (string)\n\nThe message associated with the error.\n\nlogTail -> (string)\n\nThe last portion of the diagnostic log.\n\nIf available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.\n\nstartTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event started.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event ended.\n\nstatus -> (string)\n\nThe deployment lifecycle event status:\n\nPending: The deployment lifecycle event is pending.\n\nInProgress: The deployment lifecycle event is in progress.\n\nSucceeded: The deployment lifecycle event ran successfully.\n\nFailed: The deployment lifecycle event has failed.\n\nSkipped: The deployment lifecycle event has been skipped.\n\nUnknown: The deployment lifecycle event is unknown.\n\nstatus -> (string)\n\nThe status of an AWS CloudFormation blue/green deployment’s target application.\n\nresourceType -> (string)\n\nThe resource type for the AWS CloudFormation blue/green deployment.\n\ntargetVersionWeight -> (double)\n\nThe percentage of production traffic that the target version of an AWS CloudFormation blue/green deployment receives.",
      "command_examples": "Examples\n\nTo retrieve the targets associated with a deployment\n\nThe following batch-get-deployment-targets example returns information about one of the targets associated with the specified deployment.\n\naws deploy batch-get-deployment-targets \\\n    --deployment-id \"d-1A2B3C4D5\" \\\n    --target-ids \"i-01a2b3c4d5e6f1111\"\n\n\nOutput:\n\n{\n    \"deploymentTargets\": [\n        {\n            \"deploymentTargetType\": \"InstanceTarget\",\n            \"instanceTarget\": {\n                \"lifecycleEvents\": [\n                    {\n                        \"startTime\": 1556918592.162,\n                        \"lifecycleEventName\": \"ApplicationStop\",\n                        \"status\": \"Succeeded\",\n                        \"endTime\": 1556918592.247,\n                        \"diagnostics\": {\n                            \"scriptName\": \"\",\n                            \"errorCode\": \"Success\",\n                            \"logTail\": \"\",\n                            \"message\": \"Succeeded\"\n                        }\n                    },\n                    {\n                        \"startTime\": 1556918593.193,\n                        \"lifecycleEventName\": \"DownloadBundle\",\n                        \"status\": \"Succeeded\",\n                        \"endTime\": 1556918593.981,\n                        \"diagnostics\": {\n                            \"scriptName\": \"\",\n                            \"errorCode\": \"Success\",\n                            \"logTail\": \"\",\n                            \"message\": \"Succeeded\"\n                        }\n                    },\n                    {\n                        \"startTime\": 1556918594.805,\n                        \"lifecycleEventName\": \"BeforeInstall\",\n                        \"status\": \"Succeeded\",\n                        \"endTime\": 1556918681.807,\n                        \"diagnostics\": {\n                            \"scriptName\": \"\",\n                            \"errorCode\": \"Success\",\n                            \"logTail\": \"\",\n                            \"message\": \"Succeeded\"\n                        }\n                    }\n                ],\n                \"targetArn\": \"arn:aws:ec2:us-west-2:123456789012:instance/i-01a2b3c4d5e6f1111\",\n                \"deploymentId\": \"d-1A2B3C4D5\",\n                \"lastUpdatedAt\": 1556918687.504,\n                \"targetId\": \"i-01a2b3c4d5e6f1111\",\n                \"status\": \"Succeeded\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see BatchGetDeploymentTargets in the AWS CodeDeploy API Reference."
    },
    {
      "command_name": "batch-get-deployments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/batch-get-deployments.html",
      "command_description": "Description\n\nGets information about one or more deployments. The maximum number of deployments that can be returned is 25.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-deployments\n--deployment-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deployment-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-ids (list)\n\nA list of deployment IDs, separated by spaces. The maximum number of deployment IDs you can specify is 25.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentsInfo -> (list)\n\nInformation about the deployments.\n\n(structure)\n\nInformation about a deployment.\n\napplicationName -> (string)\n\nThe application name.\n\ndeploymentGroupName -> (string)\n\nThe deployment group name.\n\ndeploymentConfigName -> (string)\n\nThe deployment configuration name.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\npreviousRevision -> (structure)\n\nInformation about the application revision that was deployed to the deployment group before the most recent successful deployment.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nrevision -> (structure)\n\nInformation about the location of stored application artifacts and the service from which to retrieve them.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nstatus -> (string)\n\nThe current state of the deployment as a whole.\n\nerrorInformation -> (structure)\n\nInformation about any error associated with this deployment.\n\ncode -> (string)\n\nFor more information, see Error Codes for AWS CodeDeploy in the AWS CodeDeploy User Guide .\n\nThe error code:\n\nAPPLICATION_MISSING: The application was missing. This error code is most likely raised if the application is deleted after the deployment is created, but before it is started.\n\nDEPLOYMENT_GROUP_MISSING: The deployment group was missing. This error code is most likely raised if the deployment group is deleted after the deployment is created, but before it is started.\n\nHEALTH_CONSTRAINTS: The deployment failed on too many instances to be successfully deployed within the instance health constraints specified.\n\nHEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully deployed within the instance health constraints specified.\n\nIAM_ROLE_MISSING: The service role cannot be accessed.\n\nIAM_ROLE_PERMISSIONS: The service role does not have the correct permissions.\n\nINTERNAL_ERROR: There was an internal error.\n\nNO_EC2_SUBSCRIPTION: The calling account is not subscribed to Amazon EC2.\n\nNO_INSTANCES: No instances were specified, or no instances can be found.\n\nOVER_MAX_INSTANCES: The maximum number of instances was exceeded.\n\nTHROTTLED: The operation was throttled because the calling account exceeded the throttling limits of one or more AWS services.\n\nTIMEOUT: The deployment has timed out.\n\nREVISION_MISSING: The revision ID was missing. This error code is most likely raised if the revision is deleted after the deployment is created, but before it is started.\n\nmessage -> (string)\n\nAn accompanying error message.\n\ncreateTime -> (timestamp)\n\nA timestamp that indicates when the deployment was created.\n\nstartTime -> (timestamp)\n\nA timestamp that indicates when the deployment was deployed to the deployment group.\n\nIn some cases, the reported value of the start time might be later than the complete time. This is due to differences in the clock settings of backend servers that participate in the deployment process.\n\ncompleteTime -> (timestamp)\n\nA timestamp that indicates when the deployment was complete.\n\ndeploymentOverview -> (structure)\n\nA summary of the deployment status of the instances in the deployment.\n\nPending -> (long)\n\nThe number of instances in the deployment in a pending state.\n\nInProgress -> (long)\n\nThe number of instances in which the deployment is in progress.\n\nSucceeded -> (long)\n\nThe number of instances in the deployment to which revisions have been successfully deployed.\n\nFailed -> (long)\n\nThe number of instances in the deployment in a failed state.\n\nSkipped -> (long)\n\nThe number of instances in the deployment in a skipped state.\n\nReady -> (long)\n\nThe number of instances in a replacement environment ready to receive traffic in a blue/green deployment.\n\ndescription -> (string)\n\nA comment about the deployment.\n\ncreator -> (string)\n\nThe means by which the deployment was created:\n\nuser : A user created the deployment.\n\nautoscaling : Amazon EC2 Auto Scaling created the deployment.\n\ncodeDeployRollback : A rollback process created the deployment.\n\nCodeDeployAutoUpdate : An auto-update process created the deployment when it detected outdated EC2 instances.\n\nignoreApplicationStopFailures -> (boolean)\n\nIf true, then if an ApplicationStop , BeforeBlockTraffic , or AfterBlockTraffic deployment lifecycle event to an instance fails, then the deployment continues to the next deployment lifecycle event. For example, if ApplicationStop fails, the deployment continues with DownloadBundle. If BeforeBlockTraffic fails, the deployment continues with BlockTraffic . If AfterBlockTraffic fails, the deployment continues with ApplicationStop .\n\nIf false or not specified, then if a lifecycle event fails during a deployment to an instance, that deployment fails. If deployment to that instance is part of an overall deployment and the number of healthy hosts is not less than the minimum number of healthy hosts, then a deployment to the next instance is attempted.\n\nDuring a deployment, the AWS CodeDeploy agent runs the scripts specified for ApplicationStop , BeforeBlockTraffic , and AfterBlockTraffic in the AppSpec file from the previous successful deployment. (All other scripts are run from the AppSpec file in the current deployment.) If one of these scripts contains an error and does not run successfully, the deployment can fail.\n\nIf the cause of the failure is a script from the last successful deployment that will never run successfully, create a new deployment and use ignoreApplicationStopFailures to specify that the ApplicationStop , BeforeBlockTraffic , and AfterBlockTraffic failures should be ignored.\n\nautoRollbackConfiguration -> (structure)\n\nInformation about the automatic rollback configuration associated with the deployment.\n\nenabled -> (boolean)\n\nIndicates whether a defined automatic rollback configuration is currently enabled.\n\nevents -> (list)\n\nThe event type or types that trigger a rollback.\n\n(string)\n\nupdateOutdatedInstancesOnly -> (boolean)\n\nIndicates whether only instances that are not running the latest application revision are to be deployed to.\n\nrollbackInfo -> (structure)\n\nInformation about a deployment rollback.\n\nrollbackDeploymentId -> (string)\n\nThe ID of the deployment rollback.\n\nrollbackTriggeringDeploymentId -> (string)\n\nThe deployment ID of the deployment that was underway and triggered a rollback deployment because it failed or was stopped.\n\nrollbackMessage -> (string)\n\nInformation that describes the status of a deployment rollback (for example, whether the deployment can’t be rolled back, is in progress, failed, or succeeded).\n\ndeploymentStyle -> (structure)\n\nInformation about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.\n\ndeploymentType -> (string)\n\nIndicates whether to run an in-place deployment or a blue/green deployment.\n\ndeploymentOption -> (string)\n\nIndicates whether to route deployment traffic behind a load balancer.\n\ntargetInstances -> (structure)\n\nInformation about the instances that belong to the replacement environment in a blue/green deployment.\n\ntagFilters -> (list)\n\nThe tag filter key, type, and value used to identify Amazon EC2 instances in a replacement environment for a blue/green deployment. Cannot be used in the same call as ec2TagSet .\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nautoScalingGroups -> (list)\n\nThe names of one or more Auto Scaling groups to identify a replacement environment for a blue/green deployment.\n\n(string)\n\nec2TagSet -> (structure)\n\nInformation about the groups of EC2 instance tags that an instance must be identified by in order for it to be included in the replacement environment for a blue/green deployment. Cannot be used in the same call as tagFilters .\n\nec2TagSetList -> (list)\n\nA list that contains other lists of EC2 instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\ninstanceTerminationWaitTimeStarted -> (boolean)\n\nIndicates whether the wait period set for the termination of instances in the original environment has started. Status is ‘false’ if the KEEP_ALIVE option is specified. Otherwise, ‘true’ as soon as the termination wait period starts.\n\nblueGreenDeploymentConfiguration -> (structure)\n\nInformation about blue/green deployment options for this deployment.\n\nterminateBlueInstancesOnDeploymentSuccess -> (structure)\n\nInformation about whether to terminate instances in the original fleet during a blue/green deployment.\n\naction -> (string)\n\nThe action to take on instances in the original environment after a successful blue/green deployment.\n\nTERMINATE : Instances are terminated after a specified wait time.\n\nKEEP_ALIVE : Instances are left running after they are deregistered from the load balancer and removed from the deployment group.\n\nterminationWaitTimeInMinutes -> (integer)\n\nFor an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.\n\nFor an Amazon ECS deployment, the number of minutes before deleting the original (blue) task set. During an Amazon ECS deployment, CodeDeploy shifts traffic from the original (blue) task set to a replacement (green) task set.\n\nThe maximum setting is 2880 minutes (2 days).\n\ndeploymentReadyOption -> (structure)\n\nInformation about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment.\n\nactionOnTimeout -> (string)\n\nInformation about when to reroute traffic from an original environment to a replacement environment in a blue/green deployment.\n\nCONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.\n\nSTOP_DEPLOYMENT: Do not register new instances with a load balancer unless traffic rerouting is started using ContinueDeployment . If traffic rerouting is not started before the end of the specified wait period, the deployment status is changed to Stopped.\n\nwaitTimeInMinutes -> (integer)\n\nThe number of minutes to wait before the status of a blue/green deployment is changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for actionOnTimeout .\n\ngreenFleetProvisioningOption -> (structure)\n\nInformation about how instances are provisioned for a replacement environment in a blue/green deployment.\n\naction -> (string)\n\nThe method used to add instances to a replacement environment.\n\nDISCOVER_EXISTING : Use instances that already exist or will be created manually.\n\nCOPY_AUTO_SCALING_GROUP : Use settings from a specified Auto Scaling group to define and create instances in a new Auto Scaling group.\n\nloadBalancerInfo -> (structure)\n\nInformation about the load balancer used in the deployment.\n\nelbInfoList -> (list)\n\nAn array that contains information about the load balancer to use for load balancing in a deployment. In Elastic Load Balancing, load balancers are used with Classic Load Balancers.\n\nNote\n\nAdding more than one load balancer to the array is not supported.\n\n(structure)\n\nInformation about a load balancer in Elastic Load Balancing to use in a deployment. Instances are registered directly with a load balancer, and traffic is routed to the load balancer.\n\nname -> (string)\n\nFor blue/green deployments, the name of the load balancer that is used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupInfoList -> (list)\n\nAn array that contains information about the target group to use for load balancing in a deployment. In Elastic Load Balancing, target groups are used with Application Load Balancers.\n\nNote\n\nAdding more than one target group to the array is not supported.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupPairInfoList -> (list)\n\nThe target group pair information. This is an array of TargeGroupPairInfo objects with a maximum size of one.\n\n(structure)\n\nInformation about two target groups and how traffic is routed during an Amazon ECS deployment. An optional test traffic route can be specified.\n\ntargetGroups -> (list)\n\nOne pair of target groups. One is associated with the original task set. The second is associated with the task set that serves traffic after the deployment is complete.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\nprodTrafficRoute -> (structure)\n\nThe path used by a load balancer to route production traffic when an Amazon ECS deployment is complete.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\ntestTrafficRoute -> (structure)\n\nAn optional path used by a load balancer to route test traffic after an Amazon ECS deployment. Validation can occur while test traffic is served during a deployment.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\nadditionalDeploymentStatusInfo -> (string)\n\nProvides information about the results of a deployment, such as whether instances in the original environment in a blue/green deployment were not terminated.\n\nfileExistsBehavior -> (string)\n\nInformation about how AWS CodeDeploy handles files that already exist in a deployment target location but weren’t part of the previous successful deployment.\n\nDISALLOW : The deployment fails. This is also the default behavior if no option is specified.\n\nOVERWRITE : The version of the file from the application revision currently being deployed replaces the version already on the instance.\n\nRETAIN : The version of the file already on the instance is kept and used as part of the new deployment.\n\ndeploymentStatusMessages -> (list)\n\nMessages that contain information about the status of a deployment.\n\n(string)\n\ncomputePlatform -> (string)\n\nThe destination platform type for the deployment (Lambda , Server , or ECS ).\n\nexternalId -> (string)\n\nThe unique ID for an external resource (for example, a CloudFormation stack ID) that is linked to this deployment.\n\nrelatedDeployments -> (structure)\n\nInformation about deployments related to the specified deployment.\n\nautoUpdateOutdatedInstancesRootDeploymentId -> (string)\n\nThe deployment ID of the root deployment that triggered this deployment.\n\nautoUpdateOutdatedInstancesDeploymentIds -> (list)\n\nThe deployment IDs of ‘auto-update outdated instances’ deployments triggered by this deployment.\n\n(string)",
      "command_examples": "Examples\n\nTo get information about multiple deployments\n\nThe following batch-get-deployments example displays information about multiple deployments that are associated with the user’s AWS account.\n\naws deploy batch-get-deployments --deployment-ids d-A1B2C3111 d-A1B2C3222\n\n\nOutput:\n\n{\n    \"deploymentsInfo\": [\n        {\n            \"applicationName\": \"WordPress_App\",\n            \"status\": \"Failed\",\n            \"deploymentOverview\": {\n                \"Failed\": 0,\n                \"InProgress\": 0,\n                \"Skipped\": 0,\n                \"Succeeded\": 1,\n                \"Pending\": 0\n            },\n            \"deploymentConfigName\": \"CodeDeployDefault.OneAtATime\",\n            \"creator\": \"user\",\n            \"deploymentGroupName\": \"WordPress_DG\",\n            \"revision\": {\n                \"revisionType\": \"S3\",\n                \"s3Location\": {\n                \"bundleType\": \"zip\",\n                \"version\": \"uTecLusEXAMPLEFXtfUcyfV8bEXAMPLE\",\n                \"bucket\": \"CodeDeployDemoBucket\",\n                \"key\": \"WordPressApp.zip\"\n                }\n            },\n            \"deploymentId\": \"d-A1B2C3111\",\n            \"createTime\": 1408480721.9,\n            \"completeTime\": 1408480741.822\n        },\n        {\n            \"applicationName\": \"MyOther_App\",\n            \"status\": \"Failed\",\n            \"deploymentOverview\": {\n                \"Failed\": 1,\n                \"InProgress\": 0,\n                \"Skipped\": 0,\n                \"Succeeded\": 0,\n                \"Pending\": 0\n            },\n            \"deploymentConfigName\": \"CodeDeployDefault.OneAtATime\",\n            \"creator\": \"user\",\n            \"errorInformation\": {\n                \"message\": \"Deployment failed: Constraint default violated: No hosts succeeded.\",\n                \"code\": \"HEALTH_CONSTRAINTS\"\n            },\n            \"deploymentGroupName\": \"MyOther_DG\",\n            \"revision\": {\n                \"revisionType\": \"S3\",\n                \"s3Location\": {\n                \"bundleType\": \"zip\",\n                \"eTag\": \"\\\"dd56cfdEXAMPLE8e768f9d77fEXAMPLE\\\"\",\n                \"bucket\": \"CodeDeployDemoBucket\",\n                \"key\": \"MyOtherApp.zip\"\n                }\n            },\n            \"deploymentId\": \"d-A1B2C3222\",\n            \"createTime\": 1409764576.589,\n            \"completeTime\": 1409764596.101\n        }\n    ]\n}\n"
    },
    {
      "command_name": "batch-get-on-premises-instances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/batch-get-on-premises-instances.html",
      "command_description": "Description\n\nGets information about one or more on-premises instances. The maximum number of on-premises instances that can be returned is 25.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-on-premises-instances\n--instance-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-names (list)\n\nThe names of the on-premises instances about which to get information. The maximum number of instance names you can specify is 25.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninstanceInfos -> (list)\n\nInformation about the on-premises instances.\n\n(structure)\n\nInformation about an on-premises instance.\n\ninstanceName -> (string)\n\nThe name of the on-premises instance.\n\niamSessionArn -> (string)\n\nThe ARN of the IAM session associated with the on-premises instance.\n\niamUserArn -> (string)\n\nThe IAM user ARN associated with the on-premises instance.\n\ninstanceArn -> (string)\n\nThe ARN of the on-premises instance.\n\nregisterTime -> (timestamp)\n\nThe time at which the on-premises instance was registered.\n\nderegisterTime -> (timestamp)\n\nIf the on-premises instance was deregistered, the time at which the on-premises instance was deregistered.\n\ntags -> (list)\n\nThe tags currently associated with the on-premises instance.\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe tag’s key.\n\nValue -> (string)\n\nThe tag’s value.",
      "command_examples": "Examples\n\nTo get information about one or more on-premises instances\n\nThe follwoing batch-get-on-premises-instances example gets information about two on-premises instances.\n\naws deploy batch-get-on-premises-instances --instance-names AssetTag12010298EX AssetTag23121309EX\n\n\nOutput:\n\n{\n    \"instanceInfos\": [\n        {\n            \"iamUserArn\": \"arn:aws:iam::123456789012:user/AWS/CodeDeploy/AssetTag12010298EX\",\n            \"tags\": [\n                {\n                    \"Value\": \"CodeDeployDemo-OnPrem\",\n                    \"Key\": \"Name\"\n                }\n            ],\n            \"instanceName\": \"AssetTag12010298EX\",\n            \"registerTime\": 1425579465.228,\n            \"instanceArn\": \"arn:aws:codedeploy:us-west-2:123456789012:instance/AssetTag12010298EX_4IwLNI2Alh\"\n        },\n        {\n            \"iamUserArn\": \"arn:aws:iam::123456789012:user/AWS/CodeDeploy/AssetTag23121309EX\",\n            \"tags\": [\n                {\n                    \"Value\": \"CodeDeployDemo-OnPrem\",\n                    \"Key\": \"Name\"\n                }\n            ],\n            \"instanceName\": \"AssetTag23121309EX\",\n            \"registerTime\": 1425595585.988,\n            \"instanceArn\": \"arn:aws:codedeploy:us-west-2:80398EXAMPLE:instance/AssetTag23121309EX_PomUy64Was\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "continue-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/continue-deployment.html",
      "command_description": "Description\n\nFor a blue/green deployment, starts the process of rerouting traffic from instances in the original environment to instances in the replacement environment without waiting for a specified wait time to elapse. (Traffic rerouting, which is achieved by registering instances in the replacement environment with the load balancer, can start as soon as all instances have a status of Ready.)\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  continue-deployment\n[--deployment-id <value>]\n[--deployment-wait-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--deployment-id <value>]",
        "[--deployment-wait-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-id (string)\n\nThe unique ID of a blue/green deployment for which you want to start rerouting traffic to the replacement environment.\n\n--deployment-wait-type (string)\n\nThe status of the deployment’s waiting period. READY_WAIT indicates that the deployment is ready to start shifting traffic. TERMINATION_WAIT indicates that the traffic is shifted, but the original target is not terminated.\n\nPossible values:\n\nREADY_WAIT\n\nTERMINATION_WAIT\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo start rerouting traffic without waiting for a specified wait time to elapse.\n\nThe following continue-deployment example starts rerouting traffic from instances in the original environment that are ready to start shifting traffic to instances in the replacement environment.\n\naws deploy continue-deployment \\\n    --deployment-d \"d-A1B2C3111\" \\\n    --deployment-wait-type \"READY_WAIT\"\n\n\nThis command produces no output.\n\nFor more information, see ContinueDeployment in the AWS CodeDeploy API Reference."
    },
    {
      "command_name": "create-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/create-application.html",
      "command_description": "Description\n\nCreates an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-application\n--application-name <value>\n[--compute-platform <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--compute-platform <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of the application. This name must be unique with the applicable IAM user or AWS account.\n\n--compute-platform (string)\n\nThe destination platform type for the deployment (Lambda , Server , or ECS ).\n\nPossible values:\n\nServer\n\nLambda\n\nECS\n\n--tags (list)\n\nThe metadata that you apply to CodeDeploy applications to help you organize and categorize them. Each tag consists of a key and an optional value, both of which you define.\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe tag’s key.\n\nValue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napplicationId -> (string)\n\nA unique application ID.",
      "command_examples": "Examples\n\nTo create an application\n\nThe following create-application example creates an application and associates it with the user’s AWS account.\n\naws deploy create-application --application-name MyOther_App\n\n\nOutput:\n\n{\n    \"applicationId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\"\n}\n"
    },
    {
      "command_name": "create-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/create-deployment.html",
      "command_description": "Description\n\nDeploys an application revision through the specified deployment group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-deployment\n--application-name <value>\n[--deployment-group-name <value>]\n[--revision <value>]\n[--deployment-config-name <value>]\n[--description <value>]\n[--ignore-application-stop-failures | --no-ignore-application-stop-failures]\n[--target-instances <value>]\n[--auto-rollback-configuration <value>]\n[--update-outdated-instances-only | --no-update-outdated-instances-only]\n[--file-exists-behavior <value>]\n[--s3-location <value>]\n[--github-location <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--deployment-group-name <value>]",
        "[--revision <value>]",
        "[--deployment-config-name <value>]",
        "[--description <value>]",
        "[--ignore-application-stop-failures | --no-ignore-application-stop-failures]",
        "[--target-instances <value>]",
        "[--auto-rollback-configuration <value>]",
        "[--update-outdated-instances-only | --no-update-outdated-instances-only]",
        "[--file-exists-behavior <value>]",
        "[--s3-location <value>]",
        "[--github-location <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n\n--deployment-group-name (string)\n\nThe name of the deployment group.\n\n--revision (structure)\n\nThe type and location of the revision to deploy.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nShorthand Syntax:\n\nrevisionType=string,s3Location={bucket=string,key=string,bundleType=string,version=string,eTag=string},gitHubLocation={repository=string,commitId=string},string={content=string,sha256=string},appSpecContent={content=string,sha256=string}\n\n\nJSON Syntax:\n\n{\n  \"revisionType\": \"S3\"|\"GitHub\"|\"String\"|\"AppSpecContent\",\n  \"s3Location\": {\n    \"bucket\": \"string\",\n    \"key\": \"string\",\n    \"bundleType\": \"tar\"|\"tgz\"|\"zip\"|\"YAML\"|\"JSON\",\n    \"version\": \"string\",\n    \"eTag\": \"string\"\n  },\n  \"gitHubLocation\": {\n    \"repository\": \"string\",\n    \"commitId\": \"string\"\n  },\n  \"string\": {\n    \"content\": \"string\",\n    \"sha256\": \"string\"\n  },\n  \"appSpecContent\": {\n    \"content\": \"string\",\n    \"sha256\": \"string\"\n  }\n}\n\n\n--deployment-config-name (string)\n\nThe name of a deployment configuration associated with the IAM user or AWS account.\n\nIf not specified, the value configured in the deployment group is used as the default. If the deployment group does not have a deployment configuration associated with it, CodeDeployDefault .``OneAtATime`` is used by default.\n\n--description (string)\n\nA comment about the deployment.\n\n--ignore-application-stop-failures | --no-ignore-application-stop-failures (boolean)\n\nIf true, then if an ApplicationStop , BeforeBlockTraffic , or AfterBlockTraffic deployment lifecycle event to an instance fails, then the deployment continues to the next deployment lifecycle event. For example, if ApplicationStop fails, the deployment continues with DownloadBundle . If BeforeBlockTraffic fails, the deployment continues with BlockTraffic . If AfterBlockTraffic fails, the deployment continues with ApplicationStop .\n\nIf false or not specified, then if a lifecycle event fails during a deployment to an instance, that deployment fails. If deployment to that instance is part of an overall deployment and the number of healthy hosts is not less than the minimum number of healthy hosts, then a deployment to the next instance is attempted.\n\nDuring a deployment, the AWS CodeDeploy agent runs the scripts specified for ApplicationStop , BeforeBlockTraffic , and AfterBlockTraffic in the AppSpec file from the previous successful deployment. (All other scripts are run from the AppSpec file in the current deployment.) If one of these scripts contains an error and does not run successfully, the deployment can fail.\n\nIf the cause of the failure is a script from the last successful deployment that will never run successfully, create a new deployment and use ignoreApplicationStopFailures to specify that the ApplicationStop , BeforeBlockTraffic , and AfterBlockTraffic failures should be ignored.\n\n--target-instances (structure)\n\nInformation about the instances that belong to the replacement environment in a blue/green deployment.\n\ntagFilters -> (list)\n\nThe tag filter key, type, and value used to identify Amazon EC2 instances in a replacement environment for a blue/green deployment. Cannot be used in the same call as ec2TagSet .\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nautoScalingGroups -> (list)\n\nThe names of one or more Auto Scaling groups to identify a replacement environment for a blue/green deployment.\n\n(string)\n\nec2TagSet -> (structure)\n\nInformation about the groups of EC2 instance tags that an instance must be identified by in order for it to be included in the replacement environment for a blue/green deployment. Cannot be used in the same call as tagFilters .\n\nec2TagSetList -> (list)\n\nA list that contains other lists of EC2 instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nJSON Syntax:\n\n{\n  \"tagFilters\": [\n    {\n      \"Key\": \"string\",\n      \"Value\": \"string\",\n      \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n    }\n    ...\n  ],\n  \"autoScalingGroups\": [\"string\", ...],\n  \"ec2TagSet\": {\n    \"ec2TagSetList\": [\n      [\n        {\n          \"Key\": \"string\",\n          \"Value\": \"string\",\n          \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n        }\n        ...\n      ]\n      ...\n    ]\n  }\n}\n\n\n--auto-rollback-configuration (structure)\n\nConfiguration information for an automatic rollback that is added when a deployment is created.\n\nenabled -> (boolean)\n\nIndicates whether a defined automatic rollback configuration is currently enabled.\n\nevents -> (list)\n\nThe event type or types that trigger a rollback.\n\n(string)\n\nShorthand Syntax:\n\nenabled=boolean,events=string,string\n\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false,\n  \"events\": [\"DEPLOYMENT_FAILURE\"|\"DEPLOYMENT_STOP_ON_ALARM\"|\"DEPLOYMENT_STOP_ON_REQUEST\", ...]\n}\n\n\n--update-outdated-instances-only | --no-update-outdated-instances-only (boolean)\n\nIndicates whether to deploy to all instances or only to instances that are not running the latest application revision.\n\n--file-exists-behavior (string)\n\nInformation about how AWS CodeDeploy handles files that already exist in a deployment target location but weren’t part of the previous successful deployment.\n\nThe fileExistsBehavior parameter takes any of the following values:\n\nDISALLOW: The deployment fails. This is also the default behavior if no option is specified.\n\nOVERWRITE: The version of the file from the application revision currently being deployed replaces the version already on the instance.\n\nRETAIN: The version of the file already on the instance is kept and used as part of the new deployment.\n\nPossible values:\n\nDISALLOW\n\nOVERWRITE\n\nRETAIN\n\n--s3-location (structure) Information about the location of the application revision in Amazon S3. You must specify the bucket, the key, and bundleType. Optionally, you can also specify an eTag and version.bucket -> (string)\n\nThe Amazon S3 bucket name.\n\nkey -> (string)\n\nThe Amazon S3 object key name.\n\nbundleType -> (string)\n\nThe format of the bundle stored in Amazon S3.\n\neTag -> (string)\n\nThe Amazon S3 object eTag.\n\nversion -> (string)\n\nThe Amazon S3 object version.\n\nShorthand Syntax:\n\nbucket=string,key=string,bundleType=string,eTag=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"bucket\": \"string\",\n  \"key\": \"string\",\n  \"bundleType\": \"tar\"|\"tgz\"|\"zip\",\n  \"eTag\": \"string\",\n  \"version\": \"string\"\n}\n\n\n--github-location (structure) Information about the location of the application revision in GitHub. You must specify the repository and commit ID that references the application revision. For the repository, use the format GitHub-account/repository-name or GitHub-org/repository-name. For the commit ID, use the SHA1 Git commit reference.repository -> (string)\n\nThe GitHub account or organization and repository. Specify as GitHub-account/repository or GitHub-org/repository.\n\ncommitId -> (string)\n\nThe SHA1 Git commit reference.\n\nShorthand Syntax:\n\nrepository=string,commitId=string\n\n\nJSON Syntax:\n\n{\n  \"repository\": \"string\",\n  \"commitId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.",
      "command_examples": "Examples\n\nExample 1: To create a CodeDeploy deployment using the EC2/On-premises compute platform\n\nThe following create-deployment example creates a deployment and associates it with the user’s AWS account.\n\naws deploy create-deployment \\\n    --application-name WordPress_App \\\n    --deployment-config-name CodeDeployDefault.OneAtATime \\\n    --deployment-group-name WordPress_DG \\\n    --description \"My demo deployment\" \\\n    --s3-location bucket=CodeDeployDemoBucket,bundleType=zip,eTag=dd56cfdEXAMPLE8e768f9d77fEXAMPLE,key=WordPressApp.zip\n\n\nOutput:\n\n{\n    \"deploymentId\": \"d-A1B2C3111\"\n}\n\n\nExample 2: To create a CodeDeploy deployment using the Amazon ECS compute platform\n\nThe following create-deployment example uses the following two files to deploy an Amazon ECS service.\n\nContents of create-deployment.json file:\n\n{\n    \"applicationName\": \"ecs-deployment\",\n    \"deploymentGroupName\": \"ecs-deployment-dg\",\n    \"revision\": {\n        \"revisionType\": \"S3\",\n        \"s3Location\": {\n            \"bucket\": \"ecs-deployment-bucket\",\n            \"key\": \"appspec.yaml\",\n            \"bundleType\": \"YAML\"\n        }\n    }\n}\n\n\nThat file, in turn, retrieves the following file appspec.yaml from an S3 bucket called ecs-deployment-bucket.\n\nversion: 0.0\nResources:\n  - TargetService:\n      Type: AWS::ECS::Service\n      Properties:\n        TaskDefinition: \"arn:aws:ecs:region:123456789012:task-definition/ecs-task-def:2\"\n        LoadBalancerInfo:\n          ContainerName: \"sample-app\"\n          ContainerPort: 80\n        PlatformVersion: \"LATEST\"\n\n\nCommand:\n\naws deploy create-deployment \\\n    --cli-input-json file://create-deployment.json \\\n    --region us-east-1\n\n\nOutput:\n\n{\n    \"deploymentId\": \"d-1234ABCDE\"\n}\n\n\nFor more information, see CreateDeployment in the AWS CodeDeploy API Reference."
    },
    {
      "command_name": "create-deployment-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/create-deployment-config.html",
      "command_description": "Description\n\nCreates a deployment configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-deployment-config\n--deployment-config-name <value>\n[--minimum-healthy-hosts <value>]\n[--traffic-routing-config <value>]\n[--compute-platform <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deployment-config-name <value>",
        "[--minimum-healthy-hosts <value>]",
        "[--traffic-routing-config <value>]",
        "[--compute-platform <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-config-name (string)\n\nThe name of the deployment configuration to create.\n\n--minimum-healthy-hosts (structure)\n\nThe minimum number of healthy instances that should be available at any time during the deployment. There are two parameters expected in the input: type and value.\n\nThe type parameter takes either of the following values:\n\nHOST_COUNT: The value parameter represents the minimum number of healthy instances as an absolute value.\n\nFLEET_PERCENT: The value parameter represents the minimum number of healthy instances as a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the deployment, AWS CodeDeploy converts the percentage to the equivalent number of instances and rounds up fractional instances.\n\nThe value parameter takes an integer.\n\nFor example, to set a minimum of 95% healthy instance, specify a type of FLEET_PERCENT and a value of 95.\n\ntype -> (string)\n\nThe minimum healthy instance type:\n\nHOST_COUNT : The minimum number of healthy instances as an absolute value.\n\nFLEET_PERCENT : The minimum number of healthy instances as a percentage of the total number of instances in the deployment.\n\nIn an example of nine instances, if a HOST_COUNT of six is specified, deploy to up to three instances at a time. The deployment is successful if six or more instances are deployed to successfully. Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is specified, deploy to up to five instances at a time. The deployment is successful if four or more instances are deployed to successfully. Otherwise, the deployment fails.\n\nNote\n\nIn a call to the GetDeploymentConfig , CodeDeployDefault.OneAtATime returns a minimum healthy instance type of MOST_CONCURRENCY and a value of 1. This means a deployment to only one instance at a time. (You cannot set the type to MOST_CONCURRENCY, only to HOST_COUNT or FLEET_PERCENT.) In addition, with CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that all instances but one are kept in a healthy state during the deployment. Although this allows one instance at a time to be taken offline for a new deployment, it also means that if the deployment to the last instance fails, the overall deployment is still successful.\n\nFor more information, see AWS CodeDeploy Instance Health in the AWS CodeDeploy User Guide .\n\nvalue -> (integer)\n\nThe minimum healthy instance value.\n\nShorthand Syntax:\n\ntype=string,value=integer\n\n\nJSON Syntax:\n\n{\n  \"type\": \"HOST_COUNT\"|\"FLEET_PERCENT\",\n  \"value\": integer\n}\n\n\n--traffic-routing-config (structure)\n\nThe configuration that specifies how the deployment traffic is routed.\n\ntype -> (string)\n\nThe type of traffic shifting (TimeBasedCanary or TimeBasedLinear ) used by a deployment configuration.\n\ntimeBasedCanary -> (structure)\n\nA configuration that shifts traffic from one version of a Lambda function or ECS task set to another in two increments. The original and target Lambda function versions or ECS task sets are specified in the deployment’s AppSpec file.\n\ncanaryPercentage -> (integer)\n\nThe percentage of traffic to shift in the first increment of a TimeBasedCanary deployment.\n\ncanaryInterval -> (integer)\n\nThe number of minutes between the first and second traffic shifts of a TimeBasedCanary deployment.\n\ntimeBasedLinear -> (structure)\n\nA configuration that shifts traffic from one version of a Lambda function or ECS task set to another in equal increments, with an equal number of minutes between each increment. The original and target Lambda function versions or ECS task sets are specified in the deployment’s AppSpec file.\n\nlinearPercentage -> (integer)\n\nThe percentage of traffic that is shifted at the start of each increment of a TimeBasedLinear deployment.\n\nlinearInterval -> (integer)\n\nThe number of minutes between each incremental traffic shift of a TimeBasedLinear deployment.\n\nShorthand Syntax:\n\ntype=string,timeBasedCanary={canaryPercentage=integer,canaryInterval=integer},timeBasedLinear={linearPercentage=integer,linearInterval=integer}\n\n\nJSON Syntax:\n\n{\n  \"type\": \"TimeBasedCanary\"|\"TimeBasedLinear\"|\"AllAtOnce\",\n  \"timeBasedCanary\": {\n    \"canaryPercentage\": integer,\n    \"canaryInterval\": integer\n  },\n  \"timeBasedLinear\": {\n    \"linearPercentage\": integer,\n    \"linearInterval\": integer\n  }\n}\n\n\n--compute-platform (string)\n\nThe destination platform type for the deployment (Lambda , Server , or ECS ).\n\nPossible values:\n\nServer\n\nLambda\n\nECS\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentConfigId -> (string)\n\nA unique deployment configuration ID.",
      "command_examples": "Examples\n\nTo create a custom deployment configuration\n\nThe following create-deployment-config example creates a custom deployment configuration and associates it with the user’s AWS account.\n\naws deploy create-deployment-config \\\n    --deployment-config-name ThreeQuartersHealthy \\\n    --minimum-healthy-hosts type=FLEET_PERCENT,value=75\n\n\nOutput:\n\n{\n    \"deploymentConfigId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\"\n}\n"
    },
    {
      "command_name": "create-deployment-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/create-deployment-group.html",
      "command_description": "Description\n\nCreates a deployment group to which application revisions are deployed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-deployment-group\n--application-name <value>\n--deployment-group-name <value>\n[--deployment-config-name <value>]\n[--ec2-tag-filters <value>]\n[--on-premises-instance-tag-filters <value>]\n[--auto-scaling-groups <value>]\n--service-role-arn <value>\n[--trigger-configurations <value>]\n[--alarm-configuration <value>]\n[--auto-rollback-configuration <value>]\n[--outdated-instances-strategy <value>]\n[--deployment-style <value>]\n[--blue-green-deployment-configuration <value>]\n[--load-balancer-info <value>]\n[--ec2-tag-set <value>]\n[--ecs-services <value>]\n[--on-premises-tag-set <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--deployment-group-name <value>",
        "[--deployment-config-name <value>]",
        "[--ec2-tag-filters <value>]",
        "[--on-premises-instance-tag-filters <value>]",
        "[--auto-scaling-groups <value>]",
        "--service-role-arn <value>",
        "[--trigger-configurations <value>]",
        "[--alarm-configuration <value>]",
        "[--auto-rollback-configuration <value>]",
        "[--outdated-instances-strategy <value>]",
        "[--deployment-style <value>]",
        "[--blue-green-deployment-configuration <value>]",
        "[--load-balancer-info <value>]",
        "[--ec2-tag-set <value>]",
        "[--ecs-services <value>]",
        "[--on-premises-tag-set <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n\n--deployment-group-name (string)\n\nThe name of a new deployment group for the specified application.\n\n--deployment-config-name (string)\n\nIf specified, the deployment configuration name can be either one of the predefined configurations provided with AWS CodeDeploy or a custom deployment configuration that you create by calling the create deployment configuration operation.\n\nCodeDeployDefault.OneAtATime is the default deployment configuration. It is used if a configuration isn’t specified for the deployment or deployment group.\n\nFor more information about the predefined deployment configurations in AWS CodeDeploy, see Working with Deployment Configurations in CodeDeploy in the AWS CodeDeploy User Guide .\n\n--ec2-tag-filters (list)\n\nThe Amazon EC2 tags on which to filter. The deployment group includes EC2 instances with any of the specified tags. Cannot be used in the same call as ec2TagSet.\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nShorthand Syntax:\n\nKey=string,Value=string,Type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n  }\n  ...\n]\n\n\n--on-premises-instance-tag-filters (list)\n\nThe on-premises instance tags on which to filter. The deployment group includes on-premises instances with any of the specified tags. Cannot be used in the same call as OnPremisesTagSet .\n\n(structure)\n\nInformation about an on-premises instance tag filter.\n\nKey -> (string)\n\nThe on-premises instance tag filter key.\n\nValue -> (string)\n\nThe on-premises instance tag filter value.\n\nType -> (string)\n\nThe on-premises instance tag filter type:\n\nKEY_ONLY: Key only.\n\nVALUE_ONLY: Value only.\n\nKEY_AND_VALUE: Key and value.\n\nShorthand Syntax:\n\nKey=string,Value=string,Type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n  }\n  ...\n]\n\n\n--auto-scaling-groups (list)\n\nA list of associated Amazon EC2 Auto Scaling groups.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--service-role-arn (string)\n\nA service role Amazon Resource Name (ARN) that allows AWS CodeDeploy to act on the user’s behalf when interacting with AWS services.\n\n--trigger-configurations (list)\n\nInformation about triggers to create when the deployment group is created. For examples, see Create a Trigger for an AWS CodeDeploy Event in the AWS CodeDeploy User Guide .\n\n(structure)\n\nInformation about notification triggers for the deployment group.\n\ntriggerName -> (string)\n\nThe name of the notification trigger.\n\ntriggerTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Simple Notification Service topic through which notifications about deployment or instance events are sent.\n\ntriggerEvents -> (list)\n\nThe event type or types for which notifications are triggered.\n\n(string)\n\nShorthand Syntax:\n\ntriggerName=string,triggerTargetArn=string,triggerEvents=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"triggerName\": \"string\",\n    \"triggerTargetArn\": \"string\",\n    \"triggerEvents\": [\"DeploymentStart\"|\"DeploymentSuccess\"|\"DeploymentFailure\"|\"DeploymentStop\"|\"DeploymentRollback\"|\"DeploymentReady\"|\"InstanceStart\"|\"InstanceSuccess\"|\"InstanceFailure\"|\"InstanceReady\", ...]\n  }\n  ...\n]\n\n\n--alarm-configuration (structure)\n\nInformation to add about Amazon CloudWatch alarms when the deployment group is created.\n\nenabled -> (boolean)\n\nIndicates whether the alarm configuration is enabled.\n\nignorePollAlarmFailure -> (boolean)\n\nIndicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from Amazon CloudWatch. The default value is false.\n\ntrue : The deployment proceeds even if alarm status information can’t be retrieved from Amazon CloudWatch.\n\nfalse : The deployment stops if alarm status information can’t be retrieved from Amazon CloudWatch.\n\nalarms -> (list)\n\nA list of alarms configured for the deployment group. A maximum of 10 alarms can be added to a deployment group.\n\n(structure)\n\nInformation about an alarm.\n\nname -> (string)\n\nThe name of the alarm. Maximum length is 255 characters. Each alarm name can be used only once in a list of alarms.\n\nShorthand Syntax:\n\nenabled=boolean,ignorePollAlarmFailure=boolean,alarms=[{name=string},{name=string}]\n\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false,\n  \"ignorePollAlarmFailure\": true|false,\n  \"alarms\": [\n    {\n      \"name\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--auto-rollback-configuration (structure)\n\nConfiguration information for an automatic rollback that is added when a deployment group is created.\n\nenabled -> (boolean)\n\nIndicates whether a defined automatic rollback configuration is currently enabled.\n\nevents -> (list)\n\nThe event type or types that trigger a rollback.\n\n(string)\n\nShorthand Syntax:\n\nenabled=boolean,events=string,string\n\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false,\n  \"events\": [\"DEPLOYMENT_FAILURE\"|\"DEPLOYMENT_STOP_ON_ALARM\"|\"DEPLOYMENT_STOP_ON_REQUEST\", ...]\n}\n\n\n--outdated-instances-strategy (string)\n\nIndicates what happens when new EC2 instances are launched mid-deployment and do not receive the deployed application revision.\n\nIf this option is set to UPDATE or is unspecified, CodeDeploy initiates one or more ‘auto-update outdated instances’ deployments to apply the deployed application revision to the new EC2 instances.\n\nIf this option is set to IGNORE , CodeDeploy does not initiate a deployment to update the new EC2 instances. This may result in instances having different revisions.\n\nPossible values:\n\nUPDATE\n\nIGNORE\n\n--deployment-style (structure)\n\nInformation about the type of deployment, in-place or blue/green, that you want to run and whether to route deployment traffic behind a load balancer.\n\ndeploymentType -> (string)\n\nIndicates whether to run an in-place deployment or a blue/green deployment.\n\ndeploymentOption -> (string)\n\nIndicates whether to route deployment traffic behind a load balancer.\n\nShorthand Syntax:\n\ndeploymentType=string,deploymentOption=string\n\n\nJSON Syntax:\n\n{\n  \"deploymentType\": \"IN_PLACE\"|\"BLUE_GREEN\",\n  \"deploymentOption\": \"WITH_TRAFFIC_CONTROL\"|\"WITHOUT_TRAFFIC_CONTROL\"\n}\n\n\n--blue-green-deployment-configuration (structure)\n\nInformation about blue/green deployment options for a deployment group.\n\nterminateBlueInstancesOnDeploymentSuccess -> (structure)\n\nInformation about whether to terminate instances in the original fleet during a blue/green deployment.\n\naction -> (string)\n\nThe action to take on instances in the original environment after a successful blue/green deployment.\n\nTERMINATE : Instances are terminated after a specified wait time.\n\nKEEP_ALIVE : Instances are left running after they are deregistered from the load balancer and removed from the deployment group.\n\nterminationWaitTimeInMinutes -> (integer)\n\nFor an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.\n\nFor an Amazon ECS deployment, the number of minutes before deleting the original (blue) task set. During an Amazon ECS deployment, CodeDeploy shifts traffic from the original (blue) task set to a replacement (green) task set.\n\nThe maximum setting is 2880 minutes (2 days).\n\ndeploymentReadyOption -> (structure)\n\nInformation about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment.\n\nactionOnTimeout -> (string)\n\nInformation about when to reroute traffic from an original environment to a replacement environment in a blue/green deployment.\n\nCONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.\n\nSTOP_DEPLOYMENT: Do not register new instances with a load balancer unless traffic rerouting is started using ContinueDeployment . If traffic rerouting is not started before the end of the specified wait period, the deployment status is changed to Stopped.\n\nwaitTimeInMinutes -> (integer)\n\nThe number of minutes to wait before the status of a blue/green deployment is changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for actionOnTimeout .\n\ngreenFleetProvisioningOption -> (structure)\n\nInformation about how instances are provisioned for a replacement environment in a blue/green deployment.\n\naction -> (string)\n\nThe method used to add instances to a replacement environment.\n\nDISCOVER_EXISTING : Use instances that already exist or will be created manually.\n\nCOPY_AUTO_SCALING_GROUP : Use settings from a specified Auto Scaling group to define and create instances in a new Auto Scaling group.\n\nShorthand Syntax:\n\nterminateBlueInstancesOnDeploymentSuccess={action=string,terminationWaitTimeInMinutes=integer},deploymentReadyOption={actionOnTimeout=string,waitTimeInMinutes=integer},greenFleetProvisioningOption={action=string}\n\n\nJSON Syntax:\n\n{\n  \"terminateBlueInstancesOnDeploymentSuccess\": {\n    \"action\": \"TERMINATE\"|\"KEEP_ALIVE\",\n    \"terminationWaitTimeInMinutes\": integer\n  },\n  \"deploymentReadyOption\": {\n    \"actionOnTimeout\": \"CONTINUE_DEPLOYMENT\"|\"STOP_DEPLOYMENT\",\n    \"waitTimeInMinutes\": integer\n  },\n  \"greenFleetProvisioningOption\": {\n    \"action\": \"DISCOVER_EXISTING\"|\"COPY_AUTO_SCALING_GROUP\"\n  }\n}\n\n\n--load-balancer-info (structure)\n\nInformation about the load balancer used in a deployment.\n\nelbInfoList -> (list)\n\nAn array that contains information about the load balancer to use for load balancing in a deployment. In Elastic Load Balancing, load balancers are used with Classic Load Balancers.\n\nNote\n\nAdding more than one load balancer to the array is not supported.\n\n(structure)\n\nInformation about a load balancer in Elastic Load Balancing to use in a deployment. Instances are registered directly with a load balancer, and traffic is routed to the load balancer.\n\nname -> (string)\n\nFor blue/green deployments, the name of the load balancer that is used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupInfoList -> (list)\n\nAn array that contains information about the target group to use for load balancing in a deployment. In Elastic Load Balancing, target groups are used with Application Load Balancers.\n\nNote\n\nAdding more than one target group to the array is not supported.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupPairInfoList -> (list)\n\nThe target group pair information. This is an array of TargeGroupPairInfo objects with a maximum size of one.\n\n(structure)\n\nInformation about two target groups and how traffic is routed during an Amazon ECS deployment. An optional test traffic route can be specified.\n\ntargetGroups -> (list)\n\nOne pair of target groups. One is associated with the original task set. The second is associated with the task set that serves traffic after the deployment is complete.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\nprodTrafficRoute -> (structure)\n\nThe path used by a load balancer to route production traffic when an Amazon ECS deployment is complete.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\ntestTrafficRoute -> (structure)\n\nAn optional path used by a load balancer to route test traffic after an Amazon ECS deployment. Validation can occur while test traffic is served during a deployment.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"elbInfoList\": [\n    {\n      \"name\": \"string\"\n    }\n    ...\n  ],\n  \"targetGroupInfoList\": [\n    {\n      \"name\": \"string\"\n    }\n    ...\n  ],\n  \"targetGroupPairInfoList\": [\n    {\n      \"targetGroups\": [\n        {\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"prodTrafficRoute\": {\n        \"listenerArns\": [\"string\", ...]\n      },\n      \"testTrafficRoute\": {\n        \"listenerArns\": [\"string\", ...]\n      }\n    }\n    ...\n  ]\n}\n\n\n--ec2-tag-set (structure)\n\nInformation about groups of tags applied to EC2 instances. The deployment group includes only EC2 instances identified by all the tag groups. Cannot be used in the same call as ec2TagFilters .\n\nec2TagSetList -> (list)\n\nA list that contains other lists of EC2 instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nJSON Syntax:\n\n{\n  \"ec2TagSetList\": [\n    [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\",\n        \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n      }\n      ...\n    ]\n    ...\n  ]\n}\n\n\n--ecs-services (list)\n\nThe target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format <clustername>:<servicename> .\n\n(structure)\n\nContains the service and cluster names used to identify an Amazon ECS deployment’s target.\n\nserviceName -> (string)\n\nThe name of the target Amazon ECS service.\n\nclusterName -> (string)\n\nThe name of the cluster that the Amazon ECS service is associated with.\n\nShorthand Syntax:\n\nserviceName=string,clusterName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"serviceName\": \"string\",\n    \"clusterName\": \"string\"\n  }\n  ...\n]\n\n\n--on-premises-tag-set (structure)\n\nInformation about groups of tags applied to on-premises instances. The deployment group includes only on-premises instances identified by all of the tag groups. Cannot be used in the same call as onPremisesInstanceTagFilters .\n\nonPremisesTagSetList -> (list)\n\nA list that contains other lists of on-premises instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an on-premises instance tag filter.\n\nKey -> (string)\n\nThe on-premises instance tag filter key.\n\nValue -> (string)\n\nThe on-premises instance tag filter value.\n\nType -> (string)\n\nThe on-premises instance tag filter type:\n\nKEY_ONLY: Key only.\n\nVALUE_ONLY: Value only.\n\nKEY_AND_VALUE: Key and value.\n\nJSON Syntax:\n\n{\n  \"onPremisesTagSetList\": [\n    [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\",\n        \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n      }\n      ...\n    ]\n    ...\n  ]\n}\n\n\n--tags (list)\n\nThe metadata that you apply to CodeDeploy deployment groups to help you organize and categorize them. Each tag consists of a key and an optional value, both of which you define.\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe tag’s key.\n\nValue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentGroupId -> (string)\n\nA unique deployment group ID.",
      "command_examples": "Examples\n\nTo create a deployment group\n\nThe following create-deployment-group example creates a deployment group and associates it with the specified application and the user’s AWS account.\n\naws deploy create-deployment-group \\\n    --application-name WordPress_App \\\n    --auto-scaling-groups CodeDeployDemo-ASG \\\n    --deployment-config-name CodeDeployDefault.OneAtATime \\\n    --deployment-group-name WordPress_DG \\\n    --ec2-tag-filters Key=Name,Value=CodeDeployDemo,Type=KEY_AND_VALUE \\\n    --service-role-arn arn:aws:iam::123456789012:role/CodeDeployDemoRole\n\n\nOutput:\n\n{\n    \"deploymentGroupId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\"\n}\n"
    },
    {
      "command_name": "delete-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/delete-application.html",
      "command_description": "Description\n\nDeletes an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-application\n--application-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an application\n\nThe following delete-application example deletes the specified application that is associated with the user’s AWS account.\n\naws deploy delete-application --application-name WordPress_App\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-deployment-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/delete-deployment-config.html",
      "command_description": "Description\n\nDeletes a deployment configuration.\n\nNote\n\nA deployment configuration cannot be deleted if it is currently in use. Predefined configurations cannot be deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-deployment-config\n--deployment-config-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deployment-config-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-config-name (string)\n\nThe name of a deployment configuration associated with the IAM user or AWS account.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a deployment configuration\n\nThe following delete-deployment-config example deletes a custom deployment configuration that is associated with the user’s AWS account.\n\naws deploy delete-deployment-config --deployment-config-name ThreeQuartersHealthy\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-deployment-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/delete-deployment-group.html",
      "command_description": "Description\n\nDeletes a deployment group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-deployment-group\n--application-name <value>\n--deployment-group-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--deployment-group-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n\n--deployment-group-name (string)\n\nThe name of a deployment group for the specified application.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nhooksNotCleanedUp -> (list)\n\nIf the output contains no data, and the corresponding deployment group contained at least one Auto Scaling group, AWS CodeDeploy successfully removed all corresponding Auto Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group. If the output contains data, AWS CodeDeploy could not remove some Auto Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group.\n\n(structure)\n\nInformation about an Auto Scaling group.\n\nname -> (string)\n\nThe Auto Scaling group name.\n\nhook -> (string)\n\nAn Auto Scaling lifecycle event hook name.",
      "command_examples": "Examples\n\nTo delete a deployment group\n\nThe following delete-deployment-group example deletes a deployment group that is associated with the specified application.\n\naws deploy delete-deployment-group \\\n    --application-name WordPress_App \\\n    --deployment-group-name WordPress_DG\n\n\nOutput:\n\n{\n    \"hooksNotCleanedUp\": []\n}\n"
    },
    {
      "command_name": "delete-git-hub-account-token",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/delete-git-hub-account-token.html",
      "command_description": "Description\n\nDeletes a GitHub account connection.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-git-hub-account-token\n[--token-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--token-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--token-name (string)\n\nThe name of the GitHub account connection to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntokenName -> (string)\n\nThe name of the GitHub account connection that was deleted.",
      "command_examples": "Examples\n\nTo deletes a GitHub account connection\n\nThe following delete-git-hub-account-token example deletes the connection of the specified GitHub account.\n\naws deploy delete-git-hub-account-token --token-name my-github-account\n\n\nOutput:\n\n{\n    \"tokenName\": \"my-github-account\"\n}\n\n\nFor more information, see DeleteGitHubAccountToken in the AWS CodeDeploy API Reference."
    },
    {
      "command_name": "delete-resources-by-external-id",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/delete-resources-by-external-id.html",
      "command_description": "Description\n\nDeletes resources linked to an external ID.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resources-by-external-id\n[--external-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--external-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--external-id (string)\n\nThe unique ID of an external resource (for example, a CloudFormation stack ID) that is linked to one or more CodeDeploy resources.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "deregister",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/deregister.html",
      "command_description": "Description\n\nRemoves any tags from the on-premises instance; deregisters the on-premises instance from AWS CodeDeploy; and, unless requested otherwise, deletes the IAM user for the on-premises instance.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister\n--instance-name <instance-name>\n[--no-delete-iam-user]\n",
      "command_options": [
        "--instance-name <instance-name>",
        "[--no-delete-iam-user]"
      ],
      "command_options_description": "Options\n\n--instance-name (string) Required. The name of the on-premises instance.\n\n--no-delete-iam-user (boolean) Optional. Do not delete the IAM user for the registered on-premises instance.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_examples": "Examples\n\nTo deregister an on-premises instance\n\nThe following deregister example deregisters an on-premises instance with AWS CodeDeploy. It does not delete the IAM user that is associated with the instance. It disassociates in AWS CodeDeploy the on-premises tags from the instance. It does not uninstall the AWS CodeDeploy Agent from the instance nor remove the on-premises configuration file from the instance.\n\naws deploy deregister \\\n    --instance-name AssetTag12010298EX \\\n    --no-delete-iam-user \\\n    --region us-west-2\n\n\nOutput:\n\nRetrieving on-premises instance information... DONE\nIamUserArn: arn:aws:iam::80398EXAMPLE:user/AWS/CodeDeploy/AssetTag12010298EX\nTags: Key=Name,Value=CodeDeployDemo-OnPrem\nRemoving tags from the on-premises instance... DONE\nDeregistering the on-premises instance... DONE\nRun the following command on the on-premises instance to uninstall the codedeploy-agent:\naws deploy uninstall\n"
    },
    {
      "command_name": "deregister-on-premises-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/deregister-on-premises-instance.html",
      "command_description": "Description\n\nDeregisters an on-premises instance.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister-on-premises-instance\n--instance-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-name (string)\n\nThe name of the on-premises instance to deregister.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo deregister an on-premises instance\n\nThe following deregister-on-premises-instance example deregisters an on-premises instance with AWS CodeDeploy, but it does not delete the IAM user associated with the instance, nor does it disassociate in AWS CodeDeploy the on-premises instance tags from the instance. It also does not uninstall the AWS CodeDeploy Agent from the instance nor remove the on-premises configuration file from the instance.\n\naws deploy deregister-on-premises-instance --instance-name AssetTag12010298EX\n\n\nThis command produces no output."
    },
    {
      "command_name": "get-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/get-application.html",
      "command_description": "Description\n\nGets information about an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-application\n--application-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napplication -> (structure)\n\nInformation about the application.\n\napplicationId -> (string)\n\nThe application ID.\n\napplicationName -> (string)\n\nThe application name.\n\ncreateTime -> (timestamp)\n\nThe time at which the application was created.\n\nlinkedToGitHub -> (boolean)\n\nTrue if the user has authenticated with GitHub for the specified application. Otherwise, false.\n\ngitHubAccountName -> (string)\n\nThe name for a connection to a GitHub account.\n\ncomputePlatform -> (string)\n\nThe destination platform type for deployment of the application (Lambda or Server ).",
      "command_examples": "Examples\n\nTo get information about an application\n\nThe following get-application example displays information about an application that is associated with the user’s AWS account.\n\naws deploy get-application --application-name WordPress_App\n\n\nOutput:\n\n{\n    \"application\": {\n        \"applicationName\": \"WordPress_App\",\n        \"applicationId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n        \"createTime\": 1407878168.078,\n        \"linkedToGitHub\": false\n    }\n}\n"
    },
    {
      "command_name": "get-application-revision",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/get-application-revision.html",
      "command_description": "Description\n\nGets information about an application revision.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-application-revision\n--application-name <value>\n[--revision <value>]\n[--s3-location <value>]\n[--github-location <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--revision <value>]",
        "[--s3-location <value>]",
        "[--github-location <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of the application that corresponds to the revision.\n\n--revision (structure)\n\nInformation about the application revision to get, including type and location.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nShorthand Syntax:\n\nrevisionType=string,s3Location={bucket=string,key=string,bundleType=string,version=string,eTag=string},gitHubLocation={repository=string,commitId=string},string={content=string,sha256=string},appSpecContent={content=string,sha256=string}\n\n\nJSON Syntax:\n\n{\n  \"revisionType\": \"S3\"|\"GitHub\"|\"String\"|\"AppSpecContent\",\n  \"s3Location\": {\n    \"bucket\": \"string\",\n    \"key\": \"string\",\n    \"bundleType\": \"tar\"|\"tgz\"|\"zip\"|\"YAML\"|\"JSON\",\n    \"version\": \"string\",\n    \"eTag\": \"string\"\n  },\n  \"gitHubLocation\": {\n    \"repository\": \"string\",\n    \"commitId\": \"string\"\n  },\n  \"string\": {\n    \"content\": \"string\",\n    \"sha256\": \"string\"\n  },\n  \"appSpecContent\": {\n    \"content\": \"string\",\n    \"sha256\": \"string\"\n  }\n}\n\n\n--s3-location (structure) Information about the location of the application revision in Amazon S3. You must specify the bucket, the key, and bundleType. Optionally, you can also specify an eTag and version.bucket -> (string)\n\nThe Amazon S3 bucket name.\n\nkey -> (string)\n\nThe Amazon S3 object key name.\n\nbundleType -> (string)\n\nThe format of the bundle stored in Amazon S3.\n\neTag -> (string)\n\nThe Amazon S3 object eTag.\n\nversion -> (string)\n\nThe Amazon S3 object version.\n\nShorthand Syntax:\n\nbucket=string,key=string,bundleType=string,eTag=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"bucket\": \"string\",\n  \"key\": \"string\",\n  \"bundleType\": \"tar\"|\"tgz\"|\"zip\",\n  \"eTag\": \"string\",\n  \"version\": \"string\"\n}\n\n\n--github-location (structure) Information about the location of the application revision in GitHub. You must specify the repository and commit ID that references the application revision. For the repository, use the format GitHub-account/repository-name or GitHub-org/repository-name. For the commit ID, use the SHA1 Git commit reference.repository -> (string)\n\nThe GitHub account or organization and repository. Specify as GitHub-account/repository or GitHub-org/repository.\n\ncommitId -> (string)\n\nThe SHA1 Git commit reference.\n\nShorthand Syntax:\n\nrepository=string,commitId=string\n\n\nJSON Syntax:\n\n{\n  \"repository\": \"string\",\n  \"commitId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napplicationName -> (string)\n\nThe name of the application that corresponds to the revision.\n\nrevision -> (structure)\n\nAdditional information about the revision, including type and location.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nrevisionInfo -> (structure)\n\nGeneral information about the revision.\n\ndescription -> (string)\n\nA comment about the revision.\n\ndeploymentGroups -> (list)\n\nThe deployment groups for which this is the current target revision.\n\n(string)\n\nfirstUsedTime -> (timestamp)\n\nWhen the revision was first used by AWS CodeDeploy.\n\nlastUsedTime -> (timestamp)\n\nWhen the revision was last used by AWS CodeDeploy.\n\nregisterTime -> (timestamp)\n\nWhen the revision was registered with AWS CodeDeploy.",
      "command_examples": "Examples\n\nTo get information about an application revision\n\nThe following get-application-revision example displays information about an application revision that is associated with the specified application.\n\naws deploy get-application-revision \\\n    --application-name WordPress_App \\\n    --s3-location bucket=CodeDeployDemoBucket,bundleType=zip,eTag=dd56cfdEXAMPLE8e768f9d77fEXAMPLE,key=WordPressApp.zip\n\n\nOutput:\n\n{\n    \"applicationName\": \"WordPress_App\",\n    \"revisionInfo\": {\n        \"description\": \"Application revision registered by Deployment ID: d-A1B2C3111\",\n        \"registerTime\": 1411076520.009,\n        \"deploymentGroups\": \"WordPress_DG\",\n        \"lastUsedTime\": 1411076520.009,\n        \"firstUsedTime\": 1411076520.009\n    },\n    \"revision\": {\n        \"revisionType\": \"S3\",\n        \"s3Location\": {\n            \"bundleType\": \"zip\",\n            \"eTag\": \"dd56cfdEXAMPLE8e768f9d77fEXAMPLE\",\n            \"bucket\": \"CodeDeployDemoBucket\",\n            \"key\": \"WordPressApp.zip\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/get-deployment.html",
      "command_description": "Description\n\nGets information about a deployment.\n\nNote\n\nThe content property of the appSpecContent object in the returned revision is always null. Use GetApplicationRevision and the sha256 property of the returned appSpecContent object to get the content of the deployment’s AppSpec file.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-deployment\n--deployment-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deployment-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-id (string)\n\nThe unique ID of a deployment associated with the IAM user or AWS account.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentInfo -> (structure)\n\nInformation about the deployment.\n\napplicationName -> (string)\n\nThe application name.\n\ndeploymentGroupName -> (string)\n\nThe deployment group name.\n\ndeploymentConfigName -> (string)\n\nThe deployment configuration name.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\npreviousRevision -> (structure)\n\nInformation about the application revision that was deployed to the deployment group before the most recent successful deployment.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nrevision -> (structure)\n\nInformation about the location of stored application artifacts and the service from which to retrieve them.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nstatus -> (string)\n\nThe current state of the deployment as a whole.\n\nerrorInformation -> (structure)\n\nInformation about any error associated with this deployment.\n\ncode -> (string)\n\nFor more information, see Error Codes for AWS CodeDeploy in the AWS CodeDeploy User Guide .\n\nThe error code:\n\nAPPLICATION_MISSING: The application was missing. This error code is most likely raised if the application is deleted after the deployment is created, but before it is started.\n\nDEPLOYMENT_GROUP_MISSING: The deployment group was missing. This error code is most likely raised if the deployment group is deleted after the deployment is created, but before it is started.\n\nHEALTH_CONSTRAINTS: The deployment failed on too many instances to be successfully deployed within the instance health constraints specified.\n\nHEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully deployed within the instance health constraints specified.\n\nIAM_ROLE_MISSING: The service role cannot be accessed.\n\nIAM_ROLE_PERMISSIONS: The service role does not have the correct permissions.\n\nINTERNAL_ERROR: There was an internal error.\n\nNO_EC2_SUBSCRIPTION: The calling account is not subscribed to Amazon EC2.\n\nNO_INSTANCES: No instances were specified, or no instances can be found.\n\nOVER_MAX_INSTANCES: The maximum number of instances was exceeded.\n\nTHROTTLED: The operation was throttled because the calling account exceeded the throttling limits of one or more AWS services.\n\nTIMEOUT: The deployment has timed out.\n\nREVISION_MISSING: The revision ID was missing. This error code is most likely raised if the revision is deleted after the deployment is created, but before it is started.\n\nmessage -> (string)\n\nAn accompanying error message.\n\ncreateTime -> (timestamp)\n\nA timestamp that indicates when the deployment was created.\n\nstartTime -> (timestamp)\n\nA timestamp that indicates when the deployment was deployed to the deployment group.\n\nIn some cases, the reported value of the start time might be later than the complete time. This is due to differences in the clock settings of backend servers that participate in the deployment process.\n\ncompleteTime -> (timestamp)\n\nA timestamp that indicates when the deployment was complete.\n\ndeploymentOverview -> (structure)\n\nA summary of the deployment status of the instances in the deployment.\n\nPending -> (long)\n\nThe number of instances in the deployment in a pending state.\n\nInProgress -> (long)\n\nThe number of instances in which the deployment is in progress.\n\nSucceeded -> (long)\n\nThe number of instances in the deployment to which revisions have been successfully deployed.\n\nFailed -> (long)\n\nThe number of instances in the deployment in a failed state.\n\nSkipped -> (long)\n\nThe number of instances in the deployment in a skipped state.\n\nReady -> (long)\n\nThe number of instances in a replacement environment ready to receive traffic in a blue/green deployment.\n\ndescription -> (string)\n\nA comment about the deployment.\n\ncreator -> (string)\n\nThe means by which the deployment was created:\n\nuser : A user created the deployment.\n\nautoscaling : Amazon EC2 Auto Scaling created the deployment.\n\ncodeDeployRollback : A rollback process created the deployment.\n\nCodeDeployAutoUpdate : An auto-update process created the deployment when it detected outdated EC2 instances.\n\nignoreApplicationStopFailures -> (boolean)\n\nIf true, then if an ApplicationStop , BeforeBlockTraffic , or AfterBlockTraffic deployment lifecycle event to an instance fails, then the deployment continues to the next deployment lifecycle event. For example, if ApplicationStop fails, the deployment continues with DownloadBundle. If BeforeBlockTraffic fails, the deployment continues with BlockTraffic . If AfterBlockTraffic fails, the deployment continues with ApplicationStop .\n\nIf false or not specified, then if a lifecycle event fails during a deployment to an instance, that deployment fails. If deployment to that instance is part of an overall deployment and the number of healthy hosts is not less than the minimum number of healthy hosts, then a deployment to the next instance is attempted.\n\nDuring a deployment, the AWS CodeDeploy agent runs the scripts specified for ApplicationStop , BeforeBlockTraffic , and AfterBlockTraffic in the AppSpec file from the previous successful deployment. (All other scripts are run from the AppSpec file in the current deployment.) If one of these scripts contains an error and does not run successfully, the deployment can fail.\n\nIf the cause of the failure is a script from the last successful deployment that will never run successfully, create a new deployment and use ignoreApplicationStopFailures to specify that the ApplicationStop , BeforeBlockTraffic , and AfterBlockTraffic failures should be ignored.\n\nautoRollbackConfiguration -> (structure)\n\nInformation about the automatic rollback configuration associated with the deployment.\n\nenabled -> (boolean)\n\nIndicates whether a defined automatic rollback configuration is currently enabled.\n\nevents -> (list)\n\nThe event type or types that trigger a rollback.\n\n(string)\n\nupdateOutdatedInstancesOnly -> (boolean)\n\nIndicates whether only instances that are not running the latest application revision are to be deployed to.\n\nrollbackInfo -> (structure)\n\nInformation about a deployment rollback.\n\nrollbackDeploymentId -> (string)\n\nThe ID of the deployment rollback.\n\nrollbackTriggeringDeploymentId -> (string)\n\nThe deployment ID of the deployment that was underway and triggered a rollback deployment because it failed or was stopped.\n\nrollbackMessage -> (string)\n\nInformation that describes the status of a deployment rollback (for example, whether the deployment can’t be rolled back, is in progress, failed, or succeeded).\n\ndeploymentStyle -> (structure)\n\nInformation about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.\n\ndeploymentType -> (string)\n\nIndicates whether to run an in-place deployment or a blue/green deployment.\n\ndeploymentOption -> (string)\n\nIndicates whether to route deployment traffic behind a load balancer.\n\ntargetInstances -> (structure)\n\nInformation about the instances that belong to the replacement environment in a blue/green deployment.\n\ntagFilters -> (list)\n\nThe tag filter key, type, and value used to identify Amazon EC2 instances in a replacement environment for a blue/green deployment. Cannot be used in the same call as ec2TagSet .\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nautoScalingGroups -> (list)\n\nThe names of one or more Auto Scaling groups to identify a replacement environment for a blue/green deployment.\n\n(string)\n\nec2TagSet -> (structure)\n\nInformation about the groups of EC2 instance tags that an instance must be identified by in order for it to be included in the replacement environment for a blue/green deployment. Cannot be used in the same call as tagFilters .\n\nec2TagSetList -> (list)\n\nA list that contains other lists of EC2 instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\ninstanceTerminationWaitTimeStarted -> (boolean)\n\nIndicates whether the wait period set for the termination of instances in the original environment has started. Status is ‘false’ if the KEEP_ALIVE option is specified. Otherwise, ‘true’ as soon as the termination wait period starts.\n\nblueGreenDeploymentConfiguration -> (structure)\n\nInformation about blue/green deployment options for this deployment.\n\nterminateBlueInstancesOnDeploymentSuccess -> (structure)\n\nInformation about whether to terminate instances in the original fleet during a blue/green deployment.\n\naction -> (string)\n\nThe action to take on instances in the original environment after a successful blue/green deployment.\n\nTERMINATE : Instances are terminated after a specified wait time.\n\nKEEP_ALIVE : Instances are left running after they are deregistered from the load balancer and removed from the deployment group.\n\nterminationWaitTimeInMinutes -> (integer)\n\nFor an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.\n\nFor an Amazon ECS deployment, the number of minutes before deleting the original (blue) task set. During an Amazon ECS deployment, CodeDeploy shifts traffic from the original (blue) task set to a replacement (green) task set.\n\nThe maximum setting is 2880 minutes (2 days).\n\ndeploymentReadyOption -> (structure)\n\nInformation about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment.\n\nactionOnTimeout -> (string)\n\nInformation about when to reroute traffic from an original environment to a replacement environment in a blue/green deployment.\n\nCONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.\n\nSTOP_DEPLOYMENT: Do not register new instances with a load balancer unless traffic rerouting is started using ContinueDeployment . If traffic rerouting is not started before the end of the specified wait period, the deployment status is changed to Stopped.\n\nwaitTimeInMinutes -> (integer)\n\nThe number of minutes to wait before the status of a blue/green deployment is changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for actionOnTimeout .\n\ngreenFleetProvisioningOption -> (structure)\n\nInformation about how instances are provisioned for a replacement environment in a blue/green deployment.\n\naction -> (string)\n\nThe method used to add instances to a replacement environment.\n\nDISCOVER_EXISTING : Use instances that already exist or will be created manually.\n\nCOPY_AUTO_SCALING_GROUP : Use settings from a specified Auto Scaling group to define and create instances in a new Auto Scaling group.\n\nloadBalancerInfo -> (structure)\n\nInformation about the load balancer used in the deployment.\n\nelbInfoList -> (list)\n\nAn array that contains information about the load balancer to use for load balancing in a deployment. In Elastic Load Balancing, load balancers are used with Classic Load Balancers.\n\nNote\n\nAdding more than one load balancer to the array is not supported.\n\n(structure)\n\nInformation about a load balancer in Elastic Load Balancing to use in a deployment. Instances are registered directly with a load balancer, and traffic is routed to the load balancer.\n\nname -> (string)\n\nFor blue/green deployments, the name of the load balancer that is used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupInfoList -> (list)\n\nAn array that contains information about the target group to use for load balancing in a deployment. In Elastic Load Balancing, target groups are used with Application Load Balancers.\n\nNote\n\nAdding more than one target group to the array is not supported.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupPairInfoList -> (list)\n\nThe target group pair information. This is an array of TargeGroupPairInfo objects with a maximum size of one.\n\n(structure)\n\nInformation about two target groups and how traffic is routed during an Amazon ECS deployment. An optional test traffic route can be specified.\n\ntargetGroups -> (list)\n\nOne pair of target groups. One is associated with the original task set. The second is associated with the task set that serves traffic after the deployment is complete.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\nprodTrafficRoute -> (structure)\n\nThe path used by a load balancer to route production traffic when an Amazon ECS deployment is complete.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\ntestTrafficRoute -> (structure)\n\nAn optional path used by a load balancer to route test traffic after an Amazon ECS deployment. Validation can occur while test traffic is served during a deployment.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\nadditionalDeploymentStatusInfo -> (string)\n\nProvides information about the results of a deployment, such as whether instances in the original environment in a blue/green deployment were not terminated.\n\nfileExistsBehavior -> (string)\n\nInformation about how AWS CodeDeploy handles files that already exist in a deployment target location but weren’t part of the previous successful deployment.\n\nDISALLOW : The deployment fails. This is also the default behavior if no option is specified.\n\nOVERWRITE : The version of the file from the application revision currently being deployed replaces the version already on the instance.\n\nRETAIN : The version of the file already on the instance is kept and used as part of the new deployment.\n\ndeploymentStatusMessages -> (list)\n\nMessages that contain information about the status of a deployment.\n\n(string)\n\ncomputePlatform -> (string)\n\nThe destination platform type for the deployment (Lambda , Server , or ECS ).\n\nexternalId -> (string)\n\nThe unique ID for an external resource (for example, a CloudFormation stack ID) that is linked to this deployment.\n\nrelatedDeployments -> (structure)\n\nInformation about deployments related to the specified deployment.\n\nautoUpdateOutdatedInstancesRootDeploymentId -> (string)\n\nThe deployment ID of the root deployment that triggered this deployment.\n\nautoUpdateOutdatedInstancesDeploymentIds -> (list)\n\nThe deployment IDs of ‘auto-update outdated instances’ deployments triggered by this deployment.\n\n(string)",
      "command_examples": "Examples\n\nTo get information about a deployment\n\nThe following get-deployment example displays information about a deployment that is associated with the user’s AWS account.\n\naws deploy get-deployment --deployment-id d-A1B2C3123\n\n\nOutput:\n\n{\n    \"deploymentInfo\": {\n        \"applicationName\": \"WordPress_App\",\n        \"status\": \"Succeeded\",\n        \"deploymentOverview\": {\n            \"Failed\": 0,\n            \"InProgress\": 0,\n            \"Skipped\": 0,\n            \"Succeeded\": 1,\n            \"Pending\": 0\n        },\n        \"deploymentConfigName\": \"CodeDeployDefault.OneAtATime\",\n        \"creator\": \"user\",\n        \"description\": \"My WordPress app deployment\",\n        \"revision\": {\n            \"revisionType\": \"S3\",\n            \"s3Location\":  {\n            \"bundleType\": \"zip\",\n            \"eTag\": \"\\\"dd56cfdEXAMPLE8e768f9d77fEXAMPLE\\\"\",\n            \"bucket\": \"CodeDeployDemoBucket\",\n            \"key\": \"WordPressApp.zip\"\n            }\n        },\n        \"deploymentId\": \"d-A1B2C3123\",\n        \"deploymentGroupName\": \"WordPress_DG\",\n        \"createTime\": 1409764576.589,\n        \"completeTime\": 1409764596.101,\n        \"ignoreApplicationStopFailures\": false\n    }\n}\n"
    },
    {
      "command_name": "get-deployment-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/get-deployment-config.html",
      "command_description": "Description\n\nGets information about a deployment configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-deployment-config\n--deployment-config-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deployment-config-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-config-name (string)\n\nThe name of a deployment configuration associated with the IAM user or AWS account.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentConfigInfo -> (structure)\n\nInformation about the deployment configuration.\n\ndeploymentConfigId -> (string)\n\nThe deployment configuration ID.\n\ndeploymentConfigName -> (string)\n\nThe deployment configuration name.\n\nminimumHealthyHosts -> (structure)\n\nInformation about the number or percentage of minimum healthy instance.\n\ntype -> (string)\n\nThe minimum healthy instance type:\n\nHOST_COUNT : The minimum number of healthy instances as an absolute value.\n\nFLEET_PERCENT : The minimum number of healthy instances as a percentage of the total number of instances in the deployment.\n\nIn an example of nine instances, if a HOST_COUNT of six is specified, deploy to up to three instances at a time. The deployment is successful if six or more instances are deployed to successfully. Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is specified, deploy to up to five instances at a time. The deployment is successful if four or more instances are deployed to successfully. Otherwise, the deployment fails.\n\nNote\n\nIn a call to the GetDeploymentConfig , CodeDeployDefault.OneAtATime returns a minimum healthy instance type of MOST_CONCURRENCY and a value of 1. This means a deployment to only one instance at a time. (You cannot set the type to MOST_CONCURRENCY, only to HOST_COUNT or FLEET_PERCENT.) In addition, with CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that all instances but one are kept in a healthy state during the deployment. Although this allows one instance at a time to be taken offline for a new deployment, it also means that if the deployment to the last instance fails, the overall deployment is still successful.\n\nFor more information, see AWS CodeDeploy Instance Health in the AWS CodeDeploy User Guide .\n\nvalue -> (integer)\n\nThe minimum healthy instance value.\n\ncreateTime -> (timestamp)\n\nThe time at which the deployment configuration was created.\n\ncomputePlatform -> (string)\n\nThe destination platform type for the deployment (Lambda , Server , or ECS ).\n\ntrafficRoutingConfig -> (structure)\n\nThe configuration that specifies how the deployment traffic is routed. Used for deployments with a Lambda or ECS compute platform only.\n\ntype -> (string)\n\nThe type of traffic shifting (TimeBasedCanary or TimeBasedLinear ) used by a deployment configuration.\n\ntimeBasedCanary -> (structure)\n\nA configuration that shifts traffic from one version of a Lambda function or ECS task set to another in two increments. The original and target Lambda function versions or ECS task sets are specified in the deployment’s AppSpec file.\n\ncanaryPercentage -> (integer)\n\nThe percentage of traffic to shift in the first increment of a TimeBasedCanary deployment.\n\ncanaryInterval -> (integer)\n\nThe number of minutes between the first and second traffic shifts of a TimeBasedCanary deployment.\n\ntimeBasedLinear -> (structure)\n\nA configuration that shifts traffic from one version of a Lambda function or ECS task set to another in equal increments, with an equal number of minutes between each increment. The original and target Lambda function versions or ECS task sets are specified in the deployment’s AppSpec file.\n\nlinearPercentage -> (integer)\n\nThe percentage of traffic that is shifted at the start of each increment of a TimeBasedLinear deployment.\n\nlinearInterval -> (integer)\n\nThe number of minutes between each incremental traffic shift of a TimeBasedLinear deployment.",
      "command_examples": "Examples\n\nTo get information about a deployment configuration\n\nThe following get-deployment-config example displays information about a deployment configuration that is associated with the user’s AWS account.\n\naws deploy get-deployment-config --deployment-config-name ThreeQuartersHealthy\n\n\nOutput:\n\n{\n    \"deploymentConfigInfo\": {\n        \"deploymentConfigId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n        \"minimumHealthyHosts\": {\n            \"type\": \"FLEET_PERCENT\",\n            \"value\": 75\n        },\n        \"createTime\": 1411081164.379,\n        \"deploymentConfigName\": \"ThreeQuartersHealthy\"\n    }\n}\n"
    },
    {
      "command_name": "get-deployment-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/get-deployment-group.html",
      "command_description": "Description\n\nGets information about a deployment group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-deployment-group\n--application-name <value>\n--deployment-group-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--deployment-group-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n\n--deployment-group-name (string)\n\nThe name of a deployment group for the specified application.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentGroupInfo -> (structure)\n\nInformation about the deployment group.\n\napplicationName -> (string)\n\nThe application name.\n\ndeploymentGroupId -> (string)\n\nThe deployment group ID.\n\ndeploymentGroupName -> (string)\n\nThe deployment group name.\n\ndeploymentConfigName -> (string)\n\nThe deployment configuration name.\n\nec2TagFilters -> (list)\n\nThe Amazon EC2 tags on which to filter. The deployment group includes EC2 instances with any of the specified tags.\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nonPremisesInstanceTagFilters -> (list)\n\nThe on-premises instance tags on which to filter. The deployment group includes on-premises instances with any of the specified tags.\n\n(structure)\n\nInformation about an on-premises instance tag filter.\n\nKey -> (string)\n\nThe on-premises instance tag filter key.\n\nValue -> (string)\n\nThe on-premises instance tag filter value.\n\nType -> (string)\n\nThe on-premises instance tag filter type:\n\nKEY_ONLY: Key only.\n\nVALUE_ONLY: Value only.\n\nKEY_AND_VALUE: Key and value.\n\nautoScalingGroups -> (list)\n\nA list of associated Auto Scaling groups.\n\n(structure)\n\nInformation about an Auto Scaling group.\n\nname -> (string)\n\nThe Auto Scaling group name.\n\nhook -> (string)\n\nAn Auto Scaling lifecycle event hook name.\n\nserviceRoleArn -> (string)\n\nA service role Amazon Resource Name (ARN) that grants CodeDeploy permission to make calls to AWS services on your behalf. For more information, see Create a Service Role for AWS CodeDeploy in the AWS CodeDeploy User Guide .\n\ntargetRevision -> (structure)\n\nInformation about the deployment group’s target revision, including type and location.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\ntriggerConfigurations -> (list)\n\nInformation about triggers associated with the deployment group.\n\n(structure)\n\nInformation about notification triggers for the deployment group.\n\ntriggerName -> (string)\n\nThe name of the notification trigger.\n\ntriggerTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Simple Notification Service topic through which notifications about deployment or instance events are sent.\n\ntriggerEvents -> (list)\n\nThe event type or types for which notifications are triggered.\n\n(string)\n\nalarmConfiguration -> (structure)\n\nA list of alarms associated with the deployment group.\n\nenabled -> (boolean)\n\nIndicates whether the alarm configuration is enabled.\n\nignorePollAlarmFailure -> (boolean)\n\nIndicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from Amazon CloudWatch. The default value is false.\n\ntrue : The deployment proceeds even if alarm status information can’t be retrieved from Amazon CloudWatch.\n\nfalse : The deployment stops if alarm status information can’t be retrieved from Amazon CloudWatch.\n\nalarms -> (list)\n\nA list of alarms configured for the deployment group. A maximum of 10 alarms can be added to a deployment group.\n\n(structure)\n\nInformation about an alarm.\n\nname -> (string)\n\nThe name of the alarm. Maximum length is 255 characters. Each alarm name can be used only once in a list of alarms.\n\nautoRollbackConfiguration -> (structure)\n\nInformation about the automatic rollback configuration associated with the deployment group.\n\nenabled -> (boolean)\n\nIndicates whether a defined automatic rollback configuration is currently enabled.\n\nevents -> (list)\n\nThe event type or types that trigger a rollback.\n\n(string)\n\ndeploymentStyle -> (structure)\n\nInformation about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.\n\ndeploymentType -> (string)\n\nIndicates whether to run an in-place deployment or a blue/green deployment.\n\ndeploymentOption -> (string)\n\nIndicates whether to route deployment traffic behind a load balancer.\n\noutdatedInstancesStrategy -> (string)\n\nIndicates what happens when new EC2 instances are launched mid-deployment and do not receive the deployed application revision.\n\nIf this option is set to UPDATE or is unspecified, CodeDeploy initiates one or more ‘auto-update outdated instances’ deployments to apply the deployed application revision to the new EC2 instances.\n\nIf this option is set to IGNORE , CodeDeploy does not initiate a deployment to update the new EC2 instances. This may result in instances having different revisions.\n\nblueGreenDeploymentConfiguration -> (structure)\n\nInformation about blue/green deployment options for a deployment group.\n\nterminateBlueInstancesOnDeploymentSuccess -> (structure)\n\nInformation about whether to terminate instances in the original fleet during a blue/green deployment.\n\naction -> (string)\n\nThe action to take on instances in the original environment after a successful blue/green deployment.\n\nTERMINATE : Instances are terminated after a specified wait time.\n\nKEEP_ALIVE : Instances are left running after they are deregistered from the load balancer and removed from the deployment group.\n\nterminationWaitTimeInMinutes -> (integer)\n\nFor an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.\n\nFor an Amazon ECS deployment, the number of minutes before deleting the original (blue) task set. During an Amazon ECS deployment, CodeDeploy shifts traffic from the original (blue) task set to a replacement (green) task set.\n\nThe maximum setting is 2880 minutes (2 days).\n\ndeploymentReadyOption -> (structure)\n\nInformation about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment.\n\nactionOnTimeout -> (string)\n\nInformation about when to reroute traffic from an original environment to a replacement environment in a blue/green deployment.\n\nCONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.\n\nSTOP_DEPLOYMENT: Do not register new instances with a load balancer unless traffic rerouting is started using ContinueDeployment . If traffic rerouting is not started before the end of the specified wait period, the deployment status is changed to Stopped.\n\nwaitTimeInMinutes -> (integer)\n\nThe number of minutes to wait before the status of a blue/green deployment is changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for actionOnTimeout .\n\ngreenFleetProvisioningOption -> (structure)\n\nInformation about how instances are provisioned for a replacement environment in a blue/green deployment.\n\naction -> (string)\n\nThe method used to add instances to a replacement environment.\n\nDISCOVER_EXISTING : Use instances that already exist or will be created manually.\n\nCOPY_AUTO_SCALING_GROUP : Use settings from a specified Auto Scaling group to define and create instances in a new Auto Scaling group.\n\nloadBalancerInfo -> (structure)\n\nInformation about the load balancer to use in a deployment.\n\nelbInfoList -> (list)\n\nAn array that contains information about the load balancer to use for load balancing in a deployment. In Elastic Load Balancing, load balancers are used with Classic Load Balancers.\n\nNote\n\nAdding more than one load balancer to the array is not supported.\n\n(structure)\n\nInformation about a load balancer in Elastic Load Balancing to use in a deployment. Instances are registered directly with a load balancer, and traffic is routed to the load balancer.\n\nname -> (string)\n\nFor blue/green deployments, the name of the load balancer that is used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupInfoList -> (list)\n\nAn array that contains information about the target group to use for load balancing in a deployment. In Elastic Load Balancing, target groups are used with Application Load Balancers.\n\nNote\n\nAdding more than one target group to the array is not supported.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupPairInfoList -> (list)\n\nThe target group pair information. This is an array of TargeGroupPairInfo objects with a maximum size of one.\n\n(structure)\n\nInformation about two target groups and how traffic is routed during an Amazon ECS deployment. An optional test traffic route can be specified.\n\ntargetGroups -> (list)\n\nOne pair of target groups. One is associated with the original task set. The second is associated with the task set that serves traffic after the deployment is complete.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\nprodTrafficRoute -> (structure)\n\nThe path used by a load balancer to route production traffic when an Amazon ECS deployment is complete.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\ntestTrafficRoute -> (structure)\n\nAn optional path used by a load balancer to route test traffic after an Amazon ECS deployment. Validation can occur while test traffic is served during a deployment.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\nlastSuccessfulDeployment -> (structure)\n\nInformation about the most recent successful deployment to the deployment group.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\nstatus -> (string)\n\nThe status of the most recent deployment.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the most recent deployment to the deployment group was complete.\n\ncreateTime -> (timestamp)\n\nA timestamp that indicates when the most recent deployment to the deployment group started.\n\nlastAttemptedDeployment -> (structure)\n\nInformation about the most recent attempted deployment to the deployment group.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\nstatus -> (string)\n\nThe status of the most recent deployment.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the most recent deployment to the deployment group was complete.\n\ncreateTime -> (timestamp)\n\nA timestamp that indicates when the most recent deployment to the deployment group started.\n\nec2TagSet -> (structure)\n\nInformation about groups of tags applied to an EC2 instance. The deployment group includes only EC2 instances identified by all of the tag groups. Cannot be used in the same call as ec2TagFilters.\n\nec2TagSetList -> (list)\n\nA list that contains other lists of EC2 instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nonPremisesTagSet -> (structure)\n\nInformation about groups of tags applied to an on-premises instance. The deployment group includes only on-premises instances identified by all the tag groups. Cannot be used in the same call as onPremisesInstanceTagFilters.\n\nonPremisesTagSetList -> (list)\n\nA list that contains other lists of on-premises instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an on-premises instance tag filter.\n\nKey -> (string)\n\nThe on-premises instance tag filter key.\n\nValue -> (string)\n\nThe on-premises instance tag filter value.\n\nType -> (string)\n\nThe on-premises instance tag filter type:\n\nKEY_ONLY: Key only.\n\nVALUE_ONLY: Value only.\n\nKEY_AND_VALUE: Key and value.\n\ncomputePlatform -> (string)\n\nThe destination platform type for the deployment (Lambda , Server , or ECS ).\n\necsServices -> (list)\n\nThe target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format <clustername>:<servicename> .\n\n(structure)\n\nContains the service and cluster names used to identify an Amazon ECS deployment’s target.\n\nserviceName -> (string)\n\nThe name of the target Amazon ECS service.\n\nclusterName -> (string)\n\nThe name of the cluster that the Amazon ECS service is associated with.",
      "command_examples": "Examples\n\nTo view information about a deployment group\n\nThe following get-deployment-group example displays information about a deployment group that is associated with the specified application.\n\naws deploy get-deployment-group \\\n    --application-name WordPress_App \\\n    --deployment-group-name WordPress_DG\n\n\nOutput:\n\n{\n    \"deploymentGroupInfo\": {\n        \"applicationName\": \"WordPress_App\",\n        \"autoScalingGroups\": [\n            \"CodeDeployDemo-ASG\"\n        ],\n        \"deploymentConfigName\": \"CodeDeployDefault.OneAtATime\",\n        \"ec2TagFilters\": [\n            {\n                \"Type\": \"KEY_AND_VALUE\",\n                \"Value\": \"CodeDeployDemo\",\n                \"Key\": \"Name\"\n            }\n        ],\n        \"deploymentGroupId\": \"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE\",\n        \"serviceRoleArn\": \"arn:aws:iam::123456789012:role/CodeDeployDemoRole\",\n        \"deploymentGroupName\": \"WordPress_DG\"\n    }\n}\n"
    },
    {
      "command_name": "get-deployment-target",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/get-deployment-target.html",
      "command_description": "Description\n\nReturns information about a deployment target.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-deployment-target\n[--deployment-id <value>]\n[--target-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--deployment-id <value>]",
        "[--target-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-id (string)\n\nThe unique ID of a deployment.\n\n--target-id (string)\n\nThe unique ID of a deployment target.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentTarget -> (structure)\n\nA deployment target that contains information about a deployment such as its status, lifecycle events, and when it was last updated. It also contains metadata about the deployment target. The deployment target metadata depends on the deployment target’s type (instanceTarget , lambdaTarget , or ecsTarget ).\n\ndeploymentTargetType -> (string)\n\nThe deployment type that is specific to the deployment’s compute platform or deployments initiated by a CloudFormation stack update.\n\ninstanceTarget -> (structure)\n\nInformation about the target for a deployment that uses the EC2/On-premises compute platform.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\ntargetId -> (string)\n\nThe unique ID of a deployment target that has a type of instanceTarget .\n\ntargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the target.\n\nstatus -> (string)\n\nThe status an EC2/On-premises deployment’s target instance.\n\nlastUpdatedAt -> (timestamp)\n\nThe date and time when the target instance was updated by a deployment.\n\nlifecycleEvents -> (list)\n\nThe lifecycle events of the deployment to this target instance.\n\n(structure)\n\nInformation about a deployment lifecycle event.\n\nlifecycleEventName -> (string)\n\nThe deployment lifecycle event name, such as ApplicationStop , BeforeInstall , AfterInstall , ApplicationStart , or ValidateService .\n\ndiagnostics -> (structure)\n\nDiagnostic information about the deployment lifecycle event.\n\nerrorCode -> (string)\n\nThe associated error code:\n\nSuccess: The specified script ran.\n\nScriptMissing: The specified script was not found in the specified location.\n\nScriptNotExecutable: The specified script is not a recognized executable file type.\n\nScriptTimedOut: The specified script did not finish running in the specified time period.\n\nScriptFailed: The specified script failed to run as expected.\n\nUnknownError: The specified script did not run for an unknown reason.\n\nscriptName -> (string)\n\nThe name of the script.\n\nmessage -> (string)\n\nThe message associated with the error.\n\nlogTail -> (string)\n\nThe last portion of the diagnostic log.\n\nIf available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.\n\nstartTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event started.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event ended.\n\nstatus -> (string)\n\nThe deployment lifecycle event status:\n\nPending: The deployment lifecycle event is pending.\n\nInProgress: The deployment lifecycle event is in progress.\n\nSucceeded: The deployment lifecycle event ran successfully.\n\nFailed: The deployment lifecycle event has failed.\n\nSkipped: The deployment lifecycle event has been skipped.\n\nUnknown: The deployment lifecycle event is unknown.\n\ninstanceLabel -> (string)\n\nA label that identifies whether the instance is an original target (BLUE ) or a replacement target (GREEN ).\n\nlambdaTarget -> (structure)\n\nInformation about the target for a deployment that uses the AWS Lambda compute platform.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\ntargetId -> (string)\n\nThe unique ID of a deployment target that has a type of lambdaTarget .\n\ntargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the target.\n\nstatus -> (string)\n\nThe status an AWS Lambda deployment’s target Lambda function.\n\nlastUpdatedAt -> (timestamp)\n\nThe date and time when the target Lambda function was updated by a deployment.\n\nlifecycleEvents -> (list)\n\nThe lifecycle events of the deployment to this target Lambda function.\n\n(structure)\n\nInformation about a deployment lifecycle event.\n\nlifecycleEventName -> (string)\n\nThe deployment lifecycle event name, such as ApplicationStop , BeforeInstall , AfterInstall , ApplicationStart , or ValidateService .\n\ndiagnostics -> (structure)\n\nDiagnostic information about the deployment lifecycle event.\n\nerrorCode -> (string)\n\nThe associated error code:\n\nSuccess: The specified script ran.\n\nScriptMissing: The specified script was not found in the specified location.\n\nScriptNotExecutable: The specified script is not a recognized executable file type.\n\nScriptTimedOut: The specified script did not finish running in the specified time period.\n\nScriptFailed: The specified script failed to run as expected.\n\nUnknownError: The specified script did not run for an unknown reason.\n\nscriptName -> (string)\n\nThe name of the script.\n\nmessage -> (string)\n\nThe message associated with the error.\n\nlogTail -> (string)\n\nThe last portion of the diagnostic log.\n\nIf available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.\n\nstartTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event started.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event ended.\n\nstatus -> (string)\n\nThe deployment lifecycle event status:\n\nPending: The deployment lifecycle event is pending.\n\nInProgress: The deployment lifecycle event is in progress.\n\nSucceeded: The deployment lifecycle event ran successfully.\n\nFailed: The deployment lifecycle event has failed.\n\nSkipped: The deployment lifecycle event has been skipped.\n\nUnknown: The deployment lifecycle event is unknown.\n\nlambdaFunctionInfo -> (structure)\n\nA LambdaFunctionInfo object that describes a target Lambda function.\n\nfunctionName -> (string)\n\nThe name of a Lambda function.\n\nfunctionAlias -> (string)\n\nThe alias of a Lambda function. For more information, see AWS Lambda Function Aliases in the AWS Lambda Developer Guide .\n\ncurrentVersion -> (string)\n\nThe version of a Lambda function that production traffic points to.\n\ntargetVersion -> (string)\n\nThe version of a Lambda function that production traffic points to after the Lambda function is deployed.\n\ntargetVersionWeight -> (double)\n\nThe percentage of production traffic that the target version of a Lambda function receives.\n\necsTarget -> (structure)\n\nInformation about the target for a deployment that uses the Amazon ECS compute platform.\n\ndeploymentId -> (string)\n\nThe unique ID of a deployment.\n\ntargetId -> (string)\n\nThe unique ID of a deployment target that has a type of ecsTarget .\n\ntargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the target.\n\nlastUpdatedAt -> (timestamp)\n\nThe date and time when the target Amazon ECS application was updated by a deployment.\n\nlifecycleEvents -> (list)\n\nThe lifecycle events of the deployment to this target Amazon ECS application.\n\n(structure)\n\nInformation about a deployment lifecycle event.\n\nlifecycleEventName -> (string)\n\nThe deployment lifecycle event name, such as ApplicationStop , BeforeInstall , AfterInstall , ApplicationStart , or ValidateService .\n\ndiagnostics -> (structure)\n\nDiagnostic information about the deployment lifecycle event.\n\nerrorCode -> (string)\n\nThe associated error code:\n\nSuccess: The specified script ran.\n\nScriptMissing: The specified script was not found in the specified location.\n\nScriptNotExecutable: The specified script is not a recognized executable file type.\n\nScriptTimedOut: The specified script did not finish running in the specified time period.\n\nScriptFailed: The specified script failed to run as expected.\n\nUnknownError: The specified script did not run for an unknown reason.\n\nscriptName -> (string)\n\nThe name of the script.\n\nmessage -> (string)\n\nThe message associated with the error.\n\nlogTail -> (string)\n\nThe last portion of the diagnostic log.\n\nIf available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.\n\nstartTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event started.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event ended.\n\nstatus -> (string)\n\nThe deployment lifecycle event status:\n\nPending: The deployment lifecycle event is pending.\n\nInProgress: The deployment lifecycle event is in progress.\n\nSucceeded: The deployment lifecycle event ran successfully.\n\nFailed: The deployment lifecycle event has failed.\n\nSkipped: The deployment lifecycle event has been skipped.\n\nUnknown: The deployment lifecycle event is unknown.\n\nstatus -> (string)\n\nThe status an Amazon ECS deployment’s target ECS application.\n\ntaskSetsInfo -> (list)\n\nThe ECSTaskSet objects associated with the ECS target.\n\n(structure)\n\nInformation about a set of Amazon ECS tasks in an AWS CodeDeploy deployment. An Amazon ECS task set includes details such as the desired number of tasks, how many tasks are running, and whether the task set serves production traffic. An AWS CodeDeploy application that uses the Amazon ECS compute platform deploys a containerized application in an Amazon ECS service as a task set.\n\nidentifer -> (string)\n\nA unique ID of an ECSTaskSet .\n\ndesiredCount -> (long)\n\nThe number of tasks in a task set. During a deployment that uses the Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a new task set and uses this value to determine how many tasks to create. After the updated task set is created, CodeDeploy shifts traffic to the new task set.\n\npendingCount -> (long)\n\nThe number of tasks in the task set that are in the PENDING status during an Amazon ECS deployment. A task in the PENDING state is preparing to enter the RUNNING state. A task set enters the PENDING status when it launches for the first time, or when it is restarted after being in the STOPPED state.\n\nrunningCount -> (long)\n\nThe number of tasks in the task set that are in the RUNNING status during an Amazon ECS deployment. A task in the RUNNING state is running and ready for use.\n\nstatus -> (string)\n\nThe status of the task set. There are three valid task set statuses:\n\nPRIMARY : Indicates the task set is serving production traffic.\n\nACTIVE : Indicates the task set is not serving production traffic.\n\nDRAINING : Indicates the tasks in the task set are being stopped and their corresponding targets are being deregistered from their target group.\n\ntrafficWeight -> (double)\n\nThe percentage of traffic served by this task set.\n\ntargetGroup -> (structure)\n\nThe target group associated with the task set. The target group is used by AWS CodeDeploy to manage traffic to a task set.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntaskSetLabel -> (string)\n\nA label that identifies whether the ECS task set is an original target (BLUE ) or a replacement target (GREEN ).\n\ncloudFormationTarget -> (structure)\n\nInformation about the target to be updated by an AWS CloudFormation blue/green deployment. This target type is used for all deployments initiated by a CloudFormation stack update.\n\ndeploymentId -> (string)\n\nThe unique ID of an AWS CloudFormation blue/green deployment.\n\ntargetId -> (string)\n\nThe unique ID of a deployment target that has a type of CloudFormationTarget .\n\nlastUpdatedAt -> (timestamp)\n\nThe date and time when the target application was updated by an AWS CloudFormation blue/green deployment.\n\nlifecycleEvents -> (list)\n\nThe lifecycle events of the AWS CloudFormation blue/green deployment to this target application.\n\n(structure)\n\nInformation about a deployment lifecycle event.\n\nlifecycleEventName -> (string)\n\nThe deployment lifecycle event name, such as ApplicationStop , BeforeInstall , AfterInstall , ApplicationStart , or ValidateService .\n\ndiagnostics -> (structure)\n\nDiagnostic information about the deployment lifecycle event.\n\nerrorCode -> (string)\n\nThe associated error code:\n\nSuccess: The specified script ran.\n\nScriptMissing: The specified script was not found in the specified location.\n\nScriptNotExecutable: The specified script is not a recognized executable file type.\n\nScriptTimedOut: The specified script did not finish running in the specified time period.\n\nScriptFailed: The specified script failed to run as expected.\n\nUnknownError: The specified script did not run for an unknown reason.\n\nscriptName -> (string)\n\nThe name of the script.\n\nmessage -> (string)\n\nThe message associated with the error.\n\nlogTail -> (string)\n\nThe last portion of the diagnostic log.\n\nIf available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.\n\nstartTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event started.\n\nendTime -> (timestamp)\n\nA timestamp that indicates when the deployment lifecycle event ended.\n\nstatus -> (string)\n\nThe deployment lifecycle event status:\n\nPending: The deployment lifecycle event is pending.\n\nInProgress: The deployment lifecycle event is in progress.\n\nSucceeded: The deployment lifecycle event ran successfully.\n\nFailed: The deployment lifecycle event has failed.\n\nSkipped: The deployment lifecycle event has been skipped.\n\nUnknown: The deployment lifecycle event is unknown.\n\nstatus -> (string)\n\nThe status of an AWS CloudFormation blue/green deployment’s target application.\n\nresourceType -> (string)\n\nThe resource type for the AWS CloudFormation blue/green deployment.\n\ntargetVersionWeight -> (double)\n\nThe percentage of production traffic that the target version of an AWS CloudFormation blue/green deployment receives.",
      "command_examples": "Examples\n\nTo return information about a deployment target\n\nThe following get-deployment-target example returns information about a deployment target that is associated with the specified deployment.\n\naws deploy get-deployment-target \\\n    --deployment-id \"d-A1B2C3111\" \\\n    --target-id \"i-a1b2c3d4e5f611111\"\n\n\nOutput:\n\n{\n    \"deploymentTarget\": {\n        \"deploymentTargetType\": \"InstanceTarget\",\n        \"instanceTarget\": {\n            \"lastUpdatedAt\": 1556918687.504,\n            \"targetId\": \"i-a1b2c3d4e5f611111\",\n            \"targetArn\": \"arn:aws:ec2:us-west-2:123456789012:instance/i-a1b2c3d4e5f611111\",\n            \"status\": \"Succeeded\",\n            \"lifecycleEvents\": [\n                {\n                    \"status\": \"Succeeded\",\n                    \"diagnostics\": {\n                        \"errorCode\": \"Success\",\n                        \"message\": \"Succeeded\",\n                        \"logTail\": \"\",\n                        \"scriptName\": \"\"\n                    },\n                    \"lifecycleEventName\": \"ApplicationStop\",\n                    \"startTime\": 1556918592.162,\n                    \"endTime\": 1556918592.247\n                },\n                {\n                    \"status\": \"Succeeded\",\n                    \"diagnostics\": {\n                        \"errorCode\": \"Success\",\n                        \"message\": \"Succeeded\",\n                        \"logTail\": \"\",\n                        \"scriptName\": \"\"\n                    },\n                    \"lifecycleEventName\": \"DownloadBundle\",\n                    \"startTime\": 1556918593.193,\n                    \"endTime\": 1556918593.981\n                },\n                {\n                    \"status\": \"Succeeded\",\n                    \"diagnostics\": {\n                        \"errorCode\": \"Success\",\n                        \"message\": \"Succeeded\",\n                        \"logTail\": \"\",\n                        \"scriptName\": \"\"\n                    },\n                    \"lifecycleEventName\": \"BeforeInstall\",\n                    \"startTime\": 1556918594.805,\n                    \"endTime\": 1556918681.807\n                },\n                {\n                    \"status\": \"Succeeded\",\n                    \"diagnostics\": {\n                        \"errorCode\": \"Success\",\n                        \"message\": \"Succeeded\",\n                        \"logTail\": \"\",\n                        \"scriptName\": \"\"\n                    },\n                    \"lifecycleEventName\": \"Install\",\n                    \"startTime\": 1556918682.696,\n                    \"endTime\": 1556918683.005\n                },\n                {\n                    \"status\": \"Succeeded\",\n                    \"diagnostics\": {\n                        \"errorCode\": \"Success\",\n                        \"message\": \"Succeeded\",\n                        \"logTail\": \"\",\n                        \"scriptName\": \"\"\n                    },\n                    \"lifecycleEventName\": \"AfterInstall\",\n                    \"startTime\": 1556918684.135,\n                    \"endTime\": 1556918684.216\n                },\n                {\n                    \"status\": \"Succeeded\",\n                    \"diagnostics\": {\n                        \"errorCode\": \"Success\",\n                        \"message\": \"Succeeded\",\n                        \"logTail\": \"\",\n                        \"scriptName\": \"\"\n                    },\n                    \"lifecycleEventName\": \"ApplicationStart\",\n                    \"startTime\": 1556918685.211,\n                    \"endTime\": 1556918685.295\n                },\n                {\n                    \"status\": \"Succeeded\",\n                    \"diagnostics\": {\n                        \"errorCode\": \"Success\",\n                        \"message\": \"Succeeded\",\n                        \"logTail\": \"\",\n                        \"scriptName\": \"\"\n                    },\n                    \"lifecycleEventName\": \"ValidateService\",\n                    \"startTime\": 1556918686.65,\n                    \"endTime\": 1556918686.747\n                }\n            ],\n            \"deploymentId\": \"d-A1B2C3111\"\n        }\n    }\n}\n\n\nFor more information, see GetDeploymentTarget in the AWS CodeDeploy API Reference."
    },
    {
      "command_name": "get-on-premises-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/get-on-premises-instance.html",
      "command_description": "Description\n\nGets information about an on-premises instance.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-on-premises-instance\n--instance-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-name (string)\n\nThe name of the on-premises instance about which to get information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninstanceInfo -> (structure)\n\nInformation about the on-premises instance.\n\ninstanceName -> (string)\n\nThe name of the on-premises instance.\n\niamSessionArn -> (string)\n\nThe ARN of the IAM session associated with the on-premises instance.\n\niamUserArn -> (string)\n\nThe IAM user ARN associated with the on-premises instance.\n\ninstanceArn -> (string)\n\nThe ARN of the on-premises instance.\n\nregisterTime -> (timestamp)\n\nThe time at which the on-premises instance was registered.\n\nderegisterTime -> (timestamp)\n\nIf the on-premises instance was deregistered, the time at which the on-premises instance was deregistered.\n\ntags -> (list)\n\nThe tags currently associated with the on-premises instance.\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe tag’s key.\n\nValue -> (string)\n\nThe tag’s value.",
      "command_examples": "Examples\n\nTo get information about an on-premises instance\n\nThe following get-on-premises-instance example retrieves information about the specified on-premises instance.\n\naws deploy get-on-premises-instance --instance-name AssetTag12010298EX\n\n\nOutput:\n\n{\n    \"instanceInfo\": {\n    \"iamUserArn\": \"arn:aws:iam::123456789012:user/AWS/CodeDeploy/AssetTag12010298EX\",\n        \"tags\": [\n        {\n            \"Value\": \"CodeDeployDemo-OnPrem\",\n            \"Key\": \"Name\"\n        }\n        ],\n        \"instanceName\": \"AssetTag12010298EX\",\n        \"registerTime\": 1425579465.228,\n        \"instanceArn\": \"arn:aws:codedeploy:us-east-1:123456789012:instance/AssetTag12010298EX_4IwLNI2Alh\"\n    }\n}\n"
    },
    {
      "command_name": "install",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/install.html",
      "command_description": "Description\n\nConfigures and installs the AWS CodeDeploy Agent on the on-premises instance.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  install\n--config-file <path>\n[--override-config]\n[--agent-installer <s3-location>]\n",
      "command_options": [
        "--config-file <path>",
        "[--override-config]",
        "[--agent-installer <s3-location>]"
      ],
      "command_options_description": "Options\n\n--config-file (string) Required. The path to the on-premises instance configuration file.\n\n--override-config (boolean) Optional. Overrides the on-premises instance configuration file.\n\n--agent-installer (string) Optional. The AWS CodeDeploy Agent installer file.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_examples": "Examples\n\nTo install an on-premises instance\n\nThe following install example copies the on-premises configuration file from the specified location on the instance to the location on the instance that the AWS CodeDeploy Agent expects to find it. It also installs the AWS CodeDeploy Agent on the instance. It does not create any IAM user, nor register the on-premises instance with AWS CodeDeploy, nor associate any on-premises instance tags in AWS CodeDeploy for the instance.\n\naws deploy install \\\n    --override-config \\\n    --config-file C:\\temp\\codedeploy.onpremises.yml \\\n    --region us-west-2 \\\n    --agent-installer s3://aws-codedeploy-us-west-2/latest/codedeploy-agent.msi\n\n\nOutput:\n\nCreating the on-premises instance configuration file... DONE\nInstalling the AWS CodeDeploy Agent... DONE\n"
    },
    {
      "command_name": "list-application-revisions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/list-application-revisions.html",
      "command_description": "Description\n\nLists information about revisions for an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-application-revisions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: revisions",
      "command_synopsis": "Synopsis\n  list-application-revisions\n--application-name <value>\n[--sort-by <value>]\n[--sort-order <value>]\n[--s3-bucket <value>]\n[--s3-key-prefix <value>]\n[--deployed <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--sort-by <value>]",
        "[--sort-order <value>]",
        "[--s3-bucket <value>]",
        "[--s3-key-prefix <value>]",
        "[--deployed <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n\n--sort-by (string)\n\nThe column name to use to sort the list results:\n\nregisterTime : Sort by the time the revisions were registered with AWS CodeDeploy.\n\nfirstUsedTime : Sort by the time the revisions were first used in a deployment.\n\nlastUsedTime : Sort by the time the revisions were last used in a deployment.\n\nIf not specified or set to null, the results are returned in an arbitrary order.\n\nPossible values:\n\nregisterTime\n\nfirstUsedTime\n\nlastUsedTime\n\n--sort-order (string)\n\nThe order in which to sort the list results:\n\nascending : ascending order.\n\ndescending : descending order.\n\nIf not specified, the results are sorted in ascending order.\n\nIf set to null, the results are sorted in an arbitrary order.\n\nPossible values:\n\nascending\n\ndescending\n\n--s3-bucket (string)\n\nAn Amazon S3 bucket name to limit the search for revisions.\n\nIf set to null, all of the user’s buckets are searched.\n\n--s3-key-prefix (string)\n\nA key prefix for the set of Amazon S3 objects to limit the search for revisions.\n\n--deployed (string)\n\nWhether to list revisions based on whether the revision is the target revision of a deployment group:\n\ninclude : List revisions that are target revisions of a deployment group.\n\nexclude : Do not list revisions that are target revisions of a deployment group.\n\nignore : List all revisions.\n\nPossible values:\n\ninclude\n\nexclude\n\nignore\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrevisions -> (list)\n\nA list of locations that contain the matching revisions.\n\n(structure)\n\nInformation about the location of an application revision.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nnextToken -> (string)\n\nIf a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list application revisions call to return the next set of application revisions in the list.",
      "command_examples": "Examples\n\nTo get information about application revisions\n\nThe following list-application-revisions example displays information about all application revisions that are associated with the specified application.\n\naws deploy list-application-revisions \\\n    --application-name WordPress_App \\\n    --s-3-bucket CodeDeployDemoBucket \\\n    --deployed exclude \\\n    --s-3-key-prefix WordPress_ \\\n    --sort-by lastUsedTime \\\n    --sort-order descending\n\n\nOutput:\n\n{\n    \"revisions\": [\n        {\n            \"revisionType\": \"S3\",\n            \"s3Location\": {\n                \"version\": \"uTecLusvCB_JqHFXtfUcyfV8bEXAMPLE\",\n                \"bucket\": \"CodeDeployDemoBucket\",\n                \"key\": \"WordPress_App.zip\",\n                \"bundleType\": \"zip\"\n            }\n        },\n        {\n            \"revisionType\": \"S3\",\n            \"s3Location\": {\n                \"version\": \"tMk.UxgDpMEVb7V187ZM6wVAWEXAMPLE\",\n                \"bucket\": \"CodeDeployDemoBucket\",\n                \"key\": \"WordPress_App_2-0.zip\",\n                \"bundleType\": \"zip\"\n            }\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-applications",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/list-applications.html",
      "command_description": "Description\n\nLists the applications registered with the IAM user or AWS account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-applications is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: applications",
      "command_synopsis": "Synopsis\n  list-applications\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napplications -> (list)\n\nA list of application names.\n\n(string)\n\nnextToken -> (string)\n\nIf a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list applications call to return the next set of applications in the list.",
      "command_examples": "Examples\n\nTo get information about applications\n\nThe following list-applications example displays information about all applications that are associated with the user’s AWS account.\n\naws deploy list-applications\n\n\nOutput:\n\n{\n    \"applications\": [\n        \"WordPress_App\",\n        \"MyOther_App\"\n    ]\n}\n"
    },
    {
      "command_name": "list-deployment-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/list-deployment-configs.html",
      "command_description": "Description\n\nLists the deployment configurations with the IAM user or AWS account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-deployment-configs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: deploymentConfigsList",
      "command_synopsis": "Synopsis\n  list-deployment-configs\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentConfigsList -> (list)\n\nA list of deployment configurations, including built-in configurations such as CodeDeployDefault.OneAtATime .\n\n(string)\n\nnextToken -> (string)\n\nIf a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment configurations call to return the next set of deployment configurations in the list.",
      "command_examples": "Examples\n\nTo get information about deployment configurations\n\nThe following list-deployment-configs example displays information about all deployment configurations that are associated with the user’s AWS account.\n\naws deploy list-deployment-configs\n\n\nOutput:\n\n{\n    \"deploymentConfigsList\": [\n        \"ThreeQuartersHealthy\",\n        \"CodeDeployDefault.AllAtOnce\",\n        \"CodeDeployDefault.HalfAtATime\",\n        \"CodeDeployDefault.OneAtATime\"\n    ]\n}\n"
    },
    {
      "command_name": "list-deployment-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/list-deployment-groups.html",
      "command_description": "Description\n\nLists the deployment groups for an application registered with the IAM user or AWS account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-deployment-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: deploymentGroups",
      "command_synopsis": "Synopsis\n  list-deployment-groups\n--application-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napplicationName -> (string)\n\nThe application name.\n\ndeploymentGroups -> (list)\n\nA list of deployment group names.\n\n(string)\n\nnextToken -> (string)\n\nIf a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment groups call to return the next set of deployment groups in the list.",
      "command_examples": "Examples\n\nTo get information about deployment groups\n\nThe following list-deployment-groups example displays information about all deployment groups that are associated with the specified application.\n\naws deploy list-deployment-groups --application-name WordPress_App\n\n\nOutput:\n\n{\n    \"applicationName\": \"WordPress_App\",\n    \"deploymentGroups\": [\n        \"WordPress_DG\",\n        \"WordPress_Beta_DG\"\n    ]\n}\n"
    },
    {
      "command_name": "list-deployment-targets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/list-deployment-targets.html",
      "command_description": "Description\n\nReturns an array of target IDs that are associated a deployment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-deployment-targets is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: targetIds",
      "command_synopsis": "Synopsis\n  list-deployment-targets\n[--deployment-id <value>]\n[--target-filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--deployment-id <value>]",
        "[--target-filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-id (string)\n\nThe unique ID of a deployment.\n\n--target-filters (map)\n\nA key used to filter the returned targets. The two valid values are:\n\nTargetStatus - A TargetStatus filter string can be Failed , InProgress , Pending , Ready , Skipped , Succeeded , or Unknown .\n\nServerInstanceLabel - A ServerInstanceLabel filter string can be Blue or Green .\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nShorthand Syntax:\n\n  KeyName1=string,string,KeyName2=string,string\n\nWhere valid key names are:\n  TargetStatus\n  ServerInstanceLabel\n\n\nJSON Syntax:\n\n{\"TargetStatus\"|\"ServerInstanceLabel\": [\"string\", ...]\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntargetIds -> (list)\n\nThe unique IDs of deployment targets.\n\n(string)\n\nnextToken -> (string)\n\nIf a large amount of information is returned, a token identifier is also returned. It can be used in a subsequent ListDeploymentTargets call to return the next set of deployment targets in the list.",
      "command_examples": "Examples\n\nTo retrieve a list of target IDs that are associated with a deployment\n\nThe following list-deployment-targets example retrieves a list of target IDs associated with deployments that have a status of “Failed” or “InProgress.”\n\naws deploy list-deployment-targets \\\n    --deployment-id \"d-A1B2C3111\" \\\n    --target-filters \"{\\\"TargetStatus\\\":[\\\"Failed\\\",\\\"InProgress\\\"]}\"\n\n\nOutput:\n\n{\n    \"targetIds\": [\n        \"i-0f1558aaf90e5f1f9\"\n    ]\n}\n\n\nFor more information, see ListDeploymentTargets in the AWS CodeDeploy API Reference."
    },
    {
      "command_name": "list-deployments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/list-deployments.html",
      "command_description": "Description\n\nLists the deployments in a deployment group for an application registered with the IAM user or AWS account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-deployments is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: deployments",
      "command_synopsis": "Synopsis\n  list-deployments\n[--application-name <value>]\n[--deployment-group-name <value>]\n[--external-id <value>]\n[--include-only-statuses <value>]\n[--create-time-range <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--application-name <value>]",
        "[--deployment-group-name <value>]",
        "[--external-id <value>]",
        "[--include-only-statuses <value>]",
        "[--create-time-range <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n\nNote\n\nIf applicationName is specified, then deploymentGroupName must be specified. If it is not specified, then deploymentGroupName must not be specified.\n\n--deployment-group-name (string)\n\nThe name of a deployment group for the specified application.\n\nNote\n\nIf deploymentGroupName is specified, then applicationName must be specified. If it is not specified, then applicationName must not be specified.\n\n--external-id (string)\n\nThe unique ID of an external resource for returning deployments linked to the external resource.\n\n--include-only-statuses (list)\n\nA subset of deployments to list by status:\n\nCreated : Include created deployments in the resulting list.\n\nQueued : Include queued deployments in the resulting list.\n\nIn Progress : Include in-progress deployments in the resulting list.\n\nSucceeded : Include successful deployments in the resulting list.\n\nFailed : Include failed deployments in the resulting list.\n\nStopped : Include stopped deployments in the resulting list.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  Created\n  Queued\n  InProgress\n  Baking\n  Succeeded\n  Failed\n  Stopped\n  Ready\n\n\n--create-time-range (structure)\n\nA time range (start and end) for returning a subset of the list of deployments.\n\nstart -> (timestamp)\n\nThe start time of the time range.\n\nNote\n\nSpecify null to leave the start time open-ended.\n\nend -> (timestamp)\n\nThe end time of the time range.\n\nNote\n\nSpecify null to leave the end time open-ended.\n\nShorthand Syntax:\n\nstart=timestamp,end=timestamp\n\n\nJSON Syntax:\n\n{\n  \"start\": timestamp,\n  \"end\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeployments -> (list)\n\nA list of deployment IDs.\n\n(string)\n\nnextToken -> (string)\n\nIf a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployments call to return the next set of deployments in the list.",
      "command_examples": "Examples\n\nTo get information about deployments\n\nThe follwoing list-deployments example displays information about all deployments that are associated with the specified application and deployment group.\n\naws deploy list-deployments \\\n    --application-name WordPress_App \\\n    --create-time-range start=2014-08-19T00:00:00,end=2014-08-20T00:00:00 \\\n    --deployment-group-name WordPress_DG \\\n    --include-only-statuses Failed\n\n\nOutput:\n\n{\n    \"deployments\": [\n        \"d-EXAMPLE11\",\n        \"d-EXAMPLE22\",\n        \"d-EXAMPLE33\"\n    ]\n}\n"
    },
    {
      "command_name": "list-git-hub-account-token-names",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/list-git-hub-account-token-names.html",
      "command_description": "Description\n\nLists the names of stored connections to GitHub accounts.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-git-hub-account-token-names is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: tokenNameList",
      "command_synopsis": "Synopsis\n  list-git-hub-account-token-names\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntokenNameList -> (list)\n\nA list of names of connections to GitHub accounts.\n\n(string)\n\nnextToken -> (string)\n\nIf a large amount of information is returned, an identifier is also returned. It can be used in a subsequent ListGitHubAccountTokenNames call to return the next set of names in the list.",
      "command_examples": "Examples\n\nTo lists the names of stored connections to GitHub accounts\n\nThe following list-git-hub-account-token-names example lists the names of the stored connections to GitHub accounts for the current AWS user.\n\naws deploy list-git-hub-account-token-names\n\n\nOutput:\n\n{\n    \"tokenNameList\": [\n        \"my-first-token\",\n        \"my-second-token\",\n        \"my-third-token\"\n    ]\n}\n\n\nFor more information, see ListGitHubAccountTokenNames in the AWS CodeDeploy API Reference."
    },
    {
      "command_name": "list-on-premises-instances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/list-on-premises-instances.html",
      "command_description": "Description\n\nGets a list of names for one or more on-premises instances.\n\nUnless otherwise specified, both registered and deregistered on-premises instance names are listed. To list only registered or deregistered on-premises instance names, use the registration status parameter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-on-premises-instances is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: instanceNames",
      "command_synopsis": "Synopsis\n  list-on-premises-instances\n[--registration-status <value>]\n[--tag-filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registration-status <value>]",
        "[--tag-filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registration-status (string)\n\nThe registration status of the on-premises instances:\n\nDeregistered : Include deregistered on-premises instances in the resulting list.\n\nRegistered : Include registered on-premises instances in the resulting list.\n\nPossible values:\n\nRegistered\n\nDeregistered\n\n--tag-filters (list)\n\nThe on-premises instance tags that are used to restrict the on-premises instance names returned.\n\n(structure)\n\nInformation about an on-premises instance tag filter.\n\nKey -> (string)\n\nThe on-premises instance tag filter key.\n\nValue -> (string)\n\nThe on-premises instance tag filter value.\n\nType -> (string)\n\nThe on-premises instance tag filter type:\n\nKEY_ONLY: Key only.\n\nVALUE_ONLY: Value only.\n\nKEY_AND_VALUE: Key and value.\n\nShorthand Syntax:\n\nKey=string,Value=string,Type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninstanceNames -> (list)\n\nThe list of matching on-premises instance names.\n\n(string)\n\nnextToken -> (string)\n\nIf a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list on-premises instances call to return the next set of on-premises instances in the list.",
      "command_examples": "Examples\n\nTo get information about one or more on-premises instances\n\nThe following list-on-premises-instances example retrieves a list of available on-premises instance names for instances that are registered in AWS CodeDeploy and also have the specified on-premises instance tag associated in AWS CodeDeploy with the instance.\n\naws deploy list-on-premises-instances \\\n    --registration-status Registered \\\n    --tag-filters Key=Name,Value=CodeDeployDemo-OnPrem,Type=KEY_AND_VALUE\n\n\nOutput:\n\n{\n    \"instanceNames\": [\n        \"AssetTag12010298EX\"\n    ]\n}\n"
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/list-tags-for-resource.html",
      "command_description": "Description\n\nReturns a list of tags for the resource identified by a specified Amazon Resource Name (ARN). Tags are used to organize and categorize your CodeDeploy resources.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of a CodeDeploy resource. ListTagsForResource returns all the tags associated with the resource that is identified by the ResourceArn .\n\n--next-token (string)\n\nAn identifier returned from the previous ListTagsForResource call. It can be used to return the next set of applications in the list.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nA list of tags returned by ListTagsForResource . The tags are associated with the resource identified by the input ResourceArn parameter.\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe tag’s key.\n\nValue -> (string)\n\nThe tag’s value.\n\nNextToken -> (string)\n\nIf a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list application revisions call to return the next set of application revisions in the list.",
      "command_examples": "Examples\n\nTo list tags for a resource (application)\n\nThe following list-tags-for-resource example lists the tags applied to an application named testApp in CodeDeploy.\n\naws deploy list-tags-for-resource \\\n    --resource-arn arn:aws:codedeploy:us-west-2:111122223333:application:testApp\n\n\nOutput:\n\n{\n    \"Tags\": [\n        {\n            \"Key\": \"Type\",\n            \"Value\": \"testType\"\n        },\n        {\n            \"Key\": \"Name\",\n            \"Value\": \"testName\"\n        }\n    ]\n}\n\n\nFor more information, see Tagging instances for deployment groups in CodeDeploy in the AWS CodeDeploy User Guide."
    },
    {
      "command_name": "push",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/push.html",
      "command_description": "Description\n\nBundles and uploads to Amazon Simple Storage Service (Amazon S3) an application revision, which is a zip archive file that contains deployable content and an accompanying Application Specification file (AppSpec file). If the upload is successful, a message is returned that describes how to call the create-deployment command to deploy the application revision from Amazon S3 to target Amazon Elastic Compute Cloud (Amazon EC2) instances.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  push\n--application-name <app-name>\n--s3-location s3://<bucket>/<key>\n[--ignore-hidden-files | --no-ignore-hidden-files]\n[--source <path>]\n[--description <description>]\n",
      "command_options": [
        "--application-name <app-name>",
        "--s3-location s3://<bucket>/<key>",
        "[--ignore-hidden-files | --no-ignore-hidden-files]",
        "[--source <path>]",
        "[--description <description>]"
      ],
      "command_options_description": "Options\n\n--application-name (string) Required. The name of the AWS CodeDeploy application to be associated with the application revision.\n\n--s3-location (string) Required. Information about the location of the application revision to be uploaded to Amazon S3. You must specify both a bucket and a key that represent the Amazon S3 bucket name and the object key name. Content will be zipped before uploading. Use the format s3:///\n\n--ignore-hidden-files | --no-ignore-hidden-files (boolean) Optional. Set the –ignore-hidden-files flag to not bundle and upload hidden files to Amazon S3; otherwise, set the –no-ignore-hidden-files flag (the default) to bundle and upload hidden files to Amazon S3.\n\n--source (string) Optional. The location of the deployable content and the accompanying AppSpec file on the development machine to be zipped and uploaded to Amazon S3. If not specified, the current directory is used.\n\n--description (string) Optional. A comment that summarizes the application revision. If not specified, the default string “Uploaded by AWS CLI ‘time’ UTC” is used, where ‘time’ is the current system time in Coordinated Universal Time (UTC).\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_examples": "Examples\n\nTo bundle and deploy an AWS CodeDeploy compatible application revision to Amazon S3\n\nThe following push example bundles and deploys an application revision to Amazon S3 and then associates the application revision with the specified application.\n\naws deploy push \\\n    --application-name WordPress_App \\\n    --description \"This is my deployment\" \\\n    --ignore-hidden-files \\\n    --s3-location s3://CodeDeployDemoBucket/WordPressApp.zip \\\n    --source /tmp/MyLocalDeploymentFolder/\n\n\nThe output describes how to use the create-deployment command to create a deployment that uses the uploaded application revision.\n\nTo deploy with this revision, run:\naws deploy create-deployment --application-name WordPress_App --deployment-config-name <deployment-config-name> --deployment-group-name <deployment-group-name> --s3-location bucket=CodeDeployDemoBucket,key=WordPressApp.zip,bundleType=zip,eTag=\"cecc9b8EXAMPLE50a6e71fdb88EXAMPLE\",version=LFsJAUdEXAMPLEfvKtvi79L8EXAMPLE\n"
    },
    {
      "command_name": "put-lifecycle-event-hook-execution-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/put-lifecycle-event-hook-execution-status.html",
      "command_description": "Description\n\nSets the result of a Lambda validation function. The function validates lifecycle hooks during a deployment that uses the AWS Lambda or Amazon ECS compute platform. For AWS Lambda deployments, the available lifecycle hooks are BeforeAllowTraffic and AfterAllowTraffic . For Amazon ECS deployments, the available lifecycle hooks are BeforeInstall , AfterInstall , AfterAllowTestTraffic , BeforeAllowTraffic , and AfterAllowTraffic . Lambda validation functions return Succeeded or Failed . For more information, see AppSpec ‘hooks’ Section for an AWS Lambda Deployment and AppSpec ‘hooks’ Section for an Amazon ECS Deployment .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-lifecycle-event-hook-execution-status\n[--deployment-id <value>]\n[--lifecycle-event-hook-execution-id <value>]\n[--status <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--deployment-id <value>]",
        "[--lifecycle-event-hook-execution-id <value>]",
        "[--status <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-id (string)\n\nThe unique ID of a deployment. Pass this ID to a Lambda function that validates a deployment lifecycle event.\n\n--lifecycle-event-hook-execution-id (string)\n\nThe execution ID of a deployment’s lifecycle hook. A deployment lifecycle hook is specified in the hooks section of the AppSpec file.\n\n--status (string)\n\nThe result of a Lambda function that validates a deployment lifecycle event. Succeeded and Failed are the only valid values for status .\n\nPossible values:\n\nPending\n\nInProgress\n\nSucceeded\n\nFailed\n\nSkipped\n\nUnknown\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nlifecycleEventHookExecutionId -> (string)\n\nThe execution ID of the lifecycle event hook. A hook is specified in the hooks section of the deployment’s AppSpec file."
    },
    {
      "command_name": "register",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/register.html",
      "command_description": "Description\n\nCreates an IAM user for the on-premises instance, if not provided, and saves the user’s credentials to an on-premises instance configuration file; registers the on-premises instance with AWS CodeDeploy; and optionally adds tags to the on-premises instance.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register\n--instance-name <instance-name>\n[--tags <value>]\n[--iam-user-arn <iam-user-arn>]\n",
      "command_options": [
        "--instance-name <instance-name>",
        "[--tags <value>]",
        "[--iam-user-arn <iam-user-arn>]"
      ],
      "command_options_description": "Options\n\n--instance-name (string) Required. The name of the on-premises instance.\n\n--tags (list) Optional. The list of key/value pairs to tag the on-premises instance.(structure)\n\nKey -> (string)\n\nThe tag key.\n\nValue -> (string)\n\nThe tag value.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--iam-user-arn (string) Optional. The IAM user associated with the on-premises instance.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_examples": "Examples\n\nTo register an on-premises instance\n\nThe following register example registers an on-premises instance with AWS CodeDeploy, associates in AWS CodeDeploy the specified on-premises instance tag with the registered instance, and creates an on-premises configuration file that can be copied to the instance. It does not create the IAM user, nor does it install the AWS CodeDeploy Agent on the instance.\n\naws deploy register \\\n    --instance-name AssetTag12010298EX \\\n    --iam-user-arn arn:aws:iam::80398EXAMPLE:user/CodeDeployUser-OnPrem \\\n    --tags Key=Name,Value=CodeDeployDemo-OnPrem \\\n    --region us-west-2\n\n\nOutput:\n\nRegistering the on-premises instance... DONE\nAdding tags to the on-premises instance... DONE\nCopy the on-premises configuration file named codedeploy.onpremises.yml to the on-premises instance, and run the following command on the on-premises instance to install and configure the AWS CodeDeploy Agent:\naws deploy install --config-file codedeploy.onpremises.yml\n"
    },
    {
      "command_name": "register-application-revision",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/register-application-revision.html",
      "command_description": "Description\n\nRegisters with AWS CodeDeploy a revision for the specified application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-application-revision\n--application-name <value>\n[--description <value>]\n[--revision <value>]\n[--s3-location <value>]\n[--github-location <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "[--description <value>]",
        "[--revision <value>]",
        "[--s3-location <value>]",
        "[--github-location <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe name of an AWS CodeDeploy application associated with the IAM user or AWS account.\n\n--description (string)\n\nA comment about the revision.\n\n--revision (structure)\n\nInformation about the application revision to register, including type and location.\n\nrevisionType -> (string)\n\nThe type of application revision:\n\nS3: An application revision stored in Amazon S3.\n\nGitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n\nString: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).\n\nAppSpecContent: An AppSpecContent object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.\n\ns3Location -> (structure)\n\nInformation about the location of a revision stored in Amazon S3.\n\nbucket -> (string)\n\nThe name of the Amazon S3 bucket where the application revision is stored.\n\nkey -> (string)\n\nThe name of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nbundleType -> (string)\n\nThe file type of the application revision. Must be one of the following:\n\ntar : A tar archive file.\n\ntgz : A compressed tar archive file.\n\nzip : A zip archive file.\n\nversion -> (string)\n\nA specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the version is not specified, the system uses the most recent version by default.\n\neTag -> (string)\n\nThe ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.\n\nIf the ETag is not specified as an input parameter, ETag validation of the object is skipped.\n\ngitHubLocation -> (structure)\n\nInformation about the location of application artifacts stored in GitHub.\n\nrepository -> (string)\n\nThe GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision.\n\nSpecified as account/repository.\n\ncommitId -> (string)\n\nThe SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.\n\nstring -> (structure)\n\nInformation about the location of an AWS Lambda deployment revision stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nappSpecContent -> (structure)\n\nThe content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString.\n\ncontent -> (string)\n\nThe YAML-formatted or JSON-formatted revision string.\n\nFor an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version.\n\nFor an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more.\n\nFor both types of deployments, the content can specify Lambda functions that run at specified hooks, such as BeforeInstall , during a deployment.\n\nsha256 -> (string)\n\nThe SHA256 hash value of the revision content.\n\nShorthand Syntax:\n\nrevisionType=string,s3Location={bucket=string,key=string,bundleType=string,version=string,eTag=string},gitHubLocation={repository=string,commitId=string},string={content=string,sha256=string},appSpecContent={content=string,sha256=string}\n\n\nJSON Syntax:\n\n{\n  \"revisionType\": \"S3\"|\"GitHub\"|\"String\"|\"AppSpecContent\",\n  \"s3Location\": {\n    \"bucket\": \"string\",\n    \"key\": \"string\",\n    \"bundleType\": \"tar\"|\"tgz\"|\"zip\"|\"YAML\"|\"JSON\",\n    \"version\": \"string\",\n    \"eTag\": \"string\"\n  },\n  \"gitHubLocation\": {\n    \"repository\": \"string\",\n    \"commitId\": \"string\"\n  },\n  \"string\": {\n    \"content\": \"string\",\n    \"sha256\": \"string\"\n  },\n  \"appSpecContent\": {\n    \"content\": \"string\",\n    \"sha256\": \"string\"\n  }\n}\n\n\n--s3-location (structure) Information about the location of the application revision in Amazon S3. You must specify the bucket, the key, and bundleType. Optionally, you can also specify an eTag and version.bucket -> (string)\n\nThe Amazon S3 bucket name.\n\nkey -> (string)\n\nThe Amazon S3 object key name.\n\nbundleType -> (string)\n\nThe format of the bundle stored in Amazon S3.\n\neTag -> (string)\n\nThe Amazon S3 object eTag.\n\nversion -> (string)\n\nThe Amazon S3 object version.\n\nShorthand Syntax:\n\nbucket=string,key=string,bundleType=string,eTag=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"bucket\": \"string\",\n  \"key\": \"string\",\n  \"bundleType\": \"tar\"|\"tgz\"|\"zip\",\n  \"eTag\": \"string\",\n  \"version\": \"string\"\n}\n\n\n--github-location (structure) Information about the location of the application revision in GitHub. You must specify the repository and commit ID that references the application revision. For the repository, use the format GitHub-account/repository-name or GitHub-org/repository-name. For the commit ID, use the SHA1 Git commit reference.repository -> (string)\n\nThe GitHub account or organization and repository. Specify as GitHub-account/repository or GitHub-org/repository.\n\ncommitId -> (string)\n\nThe SHA1 Git commit reference.\n\nShorthand Syntax:\n\nrepository=string,commitId=string\n\n\nJSON Syntax:\n\n{\n  \"repository\": \"string\",\n  \"commitId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo register information about an already-uploaded application revision\n\nThe following register-application-revision example registers information about an already-uploaded application revision stored in Amazon S3 with AWS CodeDeploy.\n\naws deploy register-application-revision \\\n    --application-name WordPress_App \\\n    --description \"Revised WordPress application\" \\\n    --s3-location bucket=CodeDeployDemoBucket,key=RevisedWordPressApp.zip,bundleType=zip,eTag=cecc9b8a08eac650a6e71fdb88EXAMPLE\n\n\nThis command produces no output."
    },
    {
      "command_name": "register-on-premises-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/register-on-premises-instance.html",
      "command_description": "Description\n\nRegisters an on-premises instance.\n\nNote\n\nOnly one IAM ARN (an IAM session ARN or IAM user ARN) is supported in the request. You cannot use both.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-on-premises-instance\n--instance-name <value>\n[--iam-session-arn <value>]\n[--iam-user-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-name <value>",
        "[--iam-session-arn <value>]",
        "[--iam-user-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-name (string)\n\nThe name of the on-premises instance to register.\n\n--iam-session-arn (string)\n\nThe ARN of the IAM session to associate with the on-premises instance.\n\n--iam-user-arn (string)\n\nThe ARN of the IAM user to associate with the on-premises instance.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo register an on-premises instance\n\nThe following register-on-premises-instance example registers an on-premises instance with AWS CodeDeploy. It does not create the specified IAM user, nor does it associate in AWS CodeDeploy any on-premises instances tags with the registered instance.\n\naws deploy register-on-premises-instance \\\n    --instance-name AssetTag12010298EX \\\n    --iam-user-arn arn:aws:iam::80398EXAMPLE:user/CodeDeployDemoUser-OnPrem\n\n\nThis command produces no output."
    },
    {
      "command_name": "remove-tags-from-on-premises-instances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/remove-tags-from-on-premises-instances.html",
      "command_description": "Description\n\nRemoves one or more tags from one or more on-premises instances.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-tags-from-on-premises-instances\n--tags <value>\n--instance-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--tags <value>",
        "--instance-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--tags (list)\n\nThe tag key-value pairs to remove from the on-premises instances.\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe tag’s key.\n\nValue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--instance-names (list)\n\nThe names of the on-premises instances from which to remove tags.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from one or more on-premises instances\n\nThe following remove-tags-from-on-premises-instances example disassociates the specified on-premises tags in AWS CodeDeploy from on-premises instances. It does not deregister the on-premises instances in AWS CodeDeploy, nor uninstall the AWS CodeDeploy Agent from the instance, nor remove the on-premises configuration file from the instances, nor delete the IAM users that are associated with the instances.\n\naws deploy remove-tags-from-on-premises-instances \\\n    --instance-names AssetTag12010298EX AssetTag23121309EX \\\n    --tags Key=Name,Value=CodeDeployDemo-OnPrem\n\n\nThis command produces no output."
    },
    {
      "command_name": "stop-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/stop-deployment.html",
      "command_description": "Description\n\nAttempts to stop an ongoing deployment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-deployment\n--deployment-id <value>\n[--auto-rollback-enabled | --no-auto-rollback-enabled]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deployment-id <value>",
        "[--auto-rollback-enabled | --no-auto-rollback-enabled]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-id (string)\n\nThe unique ID of a deployment.\n\n--auto-rollback-enabled | --no-auto-rollback-enabled (boolean)\n\nIndicates, when a deployment is stopped, whether instances that have been updated should be rolled back to the previous version of the application revision.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstatus -> (string)\n\nThe status of the stop deployment operation:\n\nPending: The stop operation is pending.\n\nSucceeded: The stop operation was successful.\n\nstatusMessage -> (string)\n\nAn accompanying status message.",
      "command_examples": "Examples\n\nTo attempt to stop a deployment\n\nThe following stop-deployment example attempts to stop an in-progress deployment that is associated with the user’s AWS account.\n\naws deploy stop-deployment –deployment-id d-A1B2C3111\n\nOutput:\n\n{\n    \"status\": \"Succeeded\",\n    \"statusMessage\": \"No more commands will be scheduled for execution in the deployment instances\"\n}\n"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/tag-resource.html",
      "command_description": "Description\n\nAssociates the list of tags in the input Tags parameter with the resource identified by the ResourceArn input parameter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of a resource, such as a CodeDeploy application or deployment group.\n\n--tags (list)\n\nA list of tags that TagResource associates with a resource. The resource is identified by the ResourceArn input parameter.\n\n(structure)\n\nInformation about a tag.\n\nKey -> (string)\n\nThe tag’s key.\n\nValue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo tag a resoure (application)\n\nThe following tag-resource example adds two tags with keys Name and Type, and values testName and testType to an application named testApp in CodeDeploy.:\n\naws deploy tag-resource \\\n    --resource-arn  arn:aws:codedeploy:us-west-2:111122223333:application:testApp \\\n    --tags Key=Name,Value=testName Key=Type,Value=testType\n\n\nIf successful, this command produces no output.\n\nFor more information, see Tagging instances for deployment groups in CodeDeploy in the AWS CodeDeploy User Guide."
    },
    {
      "command_name": "uninstall",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/uninstall.html",
      "command_description": "Description\n\nUninstalls the AWS CodeDeploy Agent from the on-premises instance.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\nuninstall\n",
      "command_options": [],
      "command_options_description": "Options\n\nNone\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_examples": "Examples\n\nTo uninstall an on-premises instance\n\nThe following uninstall example uninstalls the AWS CodeDeploy Agent from the on-premises instance and removes the on-premises configuration file from the instance. It doesn’t deregister the instance in AWS CodeDeploy, nor disassociate any on-premises instance tags in AWS CodeDeploy from the instance, nor delete the IAM user that is associated with the instance.\n\naws deploy uninstall\n\n\nThis command produces no output."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/untag-resource.html",
      "command_description": "Description\n\nDisassociates a resource from a list of tags. The resource is identified by the ResourceArn input parameter. The tags are identified by the list of keys in the TagKeys input parameter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) that specifies from which resource to disassociate the tags with the keys in the TagKeys input parameter.\n\n--tag-keys (list)\n\nA list of keys of Tag objects. The Tag objects identified by the keys are disassociated from the resource specified by the ResourceArn input parameter.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from a resource (application)\n\nThe following untag-resource example removes two tags with keys Name and Type from an application named testApp in CodeDeploy.\n\naws deploy untag-resource \\\n    --resource-arn  arn:aws:codedeploy:us-west-2:111122223333:application:testApp \\\n    --tag-keys Name Type\n\n\nIf successful, this command produces no output.\n\nFor more information, see Tagging instances for deployment groups in CodeDeploy in the AWS CodeDeploy User Guide."
    },
    {
      "command_name": "update-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/update-application.html",
      "command_description": "Description\n\nChanges the name of an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-application\n[--application-name <value>]\n[--new-application-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--application-name <value>]",
        "[--new-application-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe current name of the application you want to change.\n\n--new-application-name (string)\n\nThe new name to give the application.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo change details of an application\n\nThe following update-application example changes the name of an application that is associated with the user’s AWS account.\n\naws deploy update-application \\\n    --application-name WordPress_App \\\n    --new-application-name My_WordPress_App\n\n\nThis command produces no output."
    },
    {
      "command_name": "update-deployment-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/update-deployment-group.html",
      "command_description": "Description\n\nChanges information about a deployment group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-deployment-group\n--application-name <value>\n--current-deployment-group-name <value>\n[--new-deployment-group-name <value>]\n[--deployment-config-name <value>]\n[--ec2-tag-filters <value>]\n[--on-premises-instance-tag-filters <value>]\n[--auto-scaling-groups <value>]\n[--service-role-arn <value>]\n[--trigger-configurations <value>]\n[--alarm-configuration <value>]\n[--auto-rollback-configuration <value>]\n[--outdated-instances-strategy <value>]\n[--deployment-style <value>]\n[--blue-green-deployment-configuration <value>]\n[--load-balancer-info <value>]\n[--ec2-tag-set <value>]\n[--ecs-services <value>]\n[--on-premises-tag-set <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-name <value>",
        "--current-deployment-group-name <value>",
        "[--new-deployment-group-name <value>]",
        "[--deployment-config-name <value>]",
        "[--ec2-tag-filters <value>]",
        "[--on-premises-instance-tag-filters <value>]",
        "[--auto-scaling-groups <value>]",
        "[--service-role-arn <value>]",
        "[--trigger-configurations <value>]",
        "[--alarm-configuration <value>]",
        "[--auto-rollback-configuration <value>]",
        "[--outdated-instances-strategy <value>]",
        "[--deployment-style <value>]",
        "[--blue-green-deployment-configuration <value>]",
        "[--load-balancer-info <value>]",
        "[--ec2-tag-set <value>]",
        "[--ecs-services <value>]",
        "[--on-premises-tag-set <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-name (string)\n\nThe application name that corresponds to the deployment group to update.\n\n--current-deployment-group-name (string)\n\nThe current name of the deployment group.\n\n--new-deployment-group-name (string)\n\nThe new name of the deployment group, if you want to change it.\n\n--deployment-config-name (string)\n\nThe replacement deployment configuration name to use, if you want to change it.\n\n--ec2-tag-filters (list)\n\nThe replacement set of Amazon EC2 tags on which to filter, if you want to change them. To keep the existing tags, enter their names. To remove tags, do not enter any tag names.\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nShorthand Syntax:\n\nKey=string,Value=string,Type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n  }\n  ...\n]\n\n\n--on-premises-instance-tag-filters (list)\n\nThe replacement set of on-premises instance tags on which to filter, if you want to change them. To keep the existing tags, enter their names. To remove tags, do not enter any tag names.\n\n(structure)\n\nInformation about an on-premises instance tag filter.\n\nKey -> (string)\n\nThe on-premises instance tag filter key.\n\nValue -> (string)\n\nThe on-premises instance tag filter value.\n\nType -> (string)\n\nThe on-premises instance tag filter type:\n\nKEY_ONLY: Key only.\n\nVALUE_ONLY: Value only.\n\nKEY_AND_VALUE: Key and value.\n\nShorthand Syntax:\n\nKey=string,Value=string,Type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n  }\n  ...\n]\n\n\n--auto-scaling-groups (list)\n\nThe replacement list of Auto Scaling groups to be included in the deployment group, if you want to change them. To keep the Auto Scaling groups, enter their names. To remove Auto Scaling groups, do not enter any Auto Scaling group names.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--service-role-arn (string)\n\nA replacement ARN for the service role, if you want to change it.\n\n--trigger-configurations (list)\n\nInformation about triggers to change when the deployment group is updated. For examples, see Edit a Trigger in a CodeDeploy Deployment Group in the AWS CodeDeploy User Guide .\n\n(structure)\n\nInformation about notification triggers for the deployment group.\n\ntriggerName -> (string)\n\nThe name of the notification trigger.\n\ntriggerTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Simple Notification Service topic through which notifications about deployment or instance events are sent.\n\ntriggerEvents -> (list)\n\nThe event type or types for which notifications are triggered.\n\n(string)\n\nShorthand Syntax:\n\ntriggerName=string,triggerTargetArn=string,triggerEvents=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"triggerName\": \"string\",\n    \"triggerTargetArn\": \"string\",\n    \"triggerEvents\": [\"DeploymentStart\"|\"DeploymentSuccess\"|\"DeploymentFailure\"|\"DeploymentStop\"|\"DeploymentRollback\"|\"DeploymentReady\"|\"InstanceStart\"|\"InstanceSuccess\"|\"InstanceFailure\"|\"InstanceReady\", ...]\n  }\n  ...\n]\n\n\n--alarm-configuration (structure)\n\nInformation to add or change about Amazon CloudWatch alarms when the deployment group is updated.\n\nenabled -> (boolean)\n\nIndicates whether the alarm configuration is enabled.\n\nignorePollAlarmFailure -> (boolean)\n\nIndicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from Amazon CloudWatch. The default value is false.\n\ntrue : The deployment proceeds even if alarm status information can’t be retrieved from Amazon CloudWatch.\n\nfalse : The deployment stops if alarm status information can’t be retrieved from Amazon CloudWatch.\n\nalarms -> (list)\n\nA list of alarms configured for the deployment group. A maximum of 10 alarms can be added to a deployment group.\n\n(structure)\n\nInformation about an alarm.\n\nname -> (string)\n\nThe name of the alarm. Maximum length is 255 characters. Each alarm name can be used only once in a list of alarms.\n\nShorthand Syntax:\n\nenabled=boolean,ignorePollAlarmFailure=boolean,alarms=[{name=string},{name=string}]\n\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false,\n  \"ignorePollAlarmFailure\": true|false,\n  \"alarms\": [\n    {\n      \"name\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--auto-rollback-configuration (structure)\n\nInformation for an automatic rollback configuration that is added or changed when a deployment group is updated.\n\nenabled -> (boolean)\n\nIndicates whether a defined automatic rollback configuration is currently enabled.\n\nevents -> (list)\n\nThe event type or types that trigger a rollback.\n\n(string)\n\nShorthand Syntax:\n\nenabled=boolean,events=string,string\n\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false,\n  \"events\": [\"DEPLOYMENT_FAILURE\"|\"DEPLOYMENT_STOP_ON_ALARM\"|\"DEPLOYMENT_STOP_ON_REQUEST\", ...]\n}\n\n\n--outdated-instances-strategy (string)\n\nIndicates what happens when new EC2 instances are launched mid-deployment and do not receive the deployed application revision.\n\nIf this option is set to UPDATE or is unspecified, CodeDeploy initiates one or more ‘auto-update outdated instances’ deployments to apply the deployed application revision to the new EC2 instances.\n\nIf this option is set to IGNORE , CodeDeploy does not initiate a deployment to update the new EC2 instances. This may result in instances having different revisions.\n\nPossible values:\n\nUPDATE\n\nIGNORE\n\n--deployment-style (structure)\n\nInformation about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.\n\ndeploymentType -> (string)\n\nIndicates whether to run an in-place deployment or a blue/green deployment.\n\ndeploymentOption -> (string)\n\nIndicates whether to route deployment traffic behind a load balancer.\n\nShorthand Syntax:\n\ndeploymentType=string,deploymentOption=string\n\n\nJSON Syntax:\n\n{\n  \"deploymentType\": \"IN_PLACE\"|\"BLUE_GREEN\",\n  \"deploymentOption\": \"WITH_TRAFFIC_CONTROL\"|\"WITHOUT_TRAFFIC_CONTROL\"\n}\n\n\n--blue-green-deployment-configuration (structure)\n\nInformation about blue/green deployment options for a deployment group.\n\nterminateBlueInstancesOnDeploymentSuccess -> (structure)\n\nInformation about whether to terminate instances in the original fleet during a blue/green deployment.\n\naction -> (string)\n\nThe action to take on instances in the original environment after a successful blue/green deployment.\n\nTERMINATE : Instances are terminated after a specified wait time.\n\nKEEP_ALIVE : Instances are left running after they are deregistered from the load balancer and removed from the deployment group.\n\nterminationWaitTimeInMinutes -> (integer)\n\nFor an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.\n\nFor an Amazon ECS deployment, the number of minutes before deleting the original (blue) task set. During an Amazon ECS deployment, CodeDeploy shifts traffic from the original (blue) task set to a replacement (green) task set.\n\nThe maximum setting is 2880 minutes (2 days).\n\ndeploymentReadyOption -> (structure)\n\nInformation about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment.\n\nactionOnTimeout -> (string)\n\nInformation about when to reroute traffic from an original environment to a replacement environment in a blue/green deployment.\n\nCONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.\n\nSTOP_DEPLOYMENT: Do not register new instances with a load balancer unless traffic rerouting is started using ContinueDeployment . If traffic rerouting is not started before the end of the specified wait period, the deployment status is changed to Stopped.\n\nwaitTimeInMinutes -> (integer)\n\nThe number of minutes to wait before the status of a blue/green deployment is changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for actionOnTimeout .\n\ngreenFleetProvisioningOption -> (structure)\n\nInformation about how instances are provisioned for a replacement environment in a blue/green deployment.\n\naction -> (string)\n\nThe method used to add instances to a replacement environment.\n\nDISCOVER_EXISTING : Use instances that already exist or will be created manually.\n\nCOPY_AUTO_SCALING_GROUP : Use settings from a specified Auto Scaling group to define and create instances in a new Auto Scaling group.\n\nShorthand Syntax:\n\nterminateBlueInstancesOnDeploymentSuccess={action=string,terminationWaitTimeInMinutes=integer},deploymentReadyOption={actionOnTimeout=string,waitTimeInMinutes=integer},greenFleetProvisioningOption={action=string}\n\n\nJSON Syntax:\n\n{\n  \"terminateBlueInstancesOnDeploymentSuccess\": {\n    \"action\": \"TERMINATE\"|\"KEEP_ALIVE\",\n    \"terminationWaitTimeInMinutes\": integer\n  },\n  \"deploymentReadyOption\": {\n    \"actionOnTimeout\": \"CONTINUE_DEPLOYMENT\"|\"STOP_DEPLOYMENT\",\n    \"waitTimeInMinutes\": integer\n  },\n  \"greenFleetProvisioningOption\": {\n    \"action\": \"DISCOVER_EXISTING\"|\"COPY_AUTO_SCALING_GROUP\"\n  }\n}\n\n\n--load-balancer-info (structure)\n\nInformation about the load balancer used in a deployment.\n\nelbInfoList -> (list)\n\nAn array that contains information about the load balancer to use for load balancing in a deployment. In Elastic Load Balancing, load balancers are used with Classic Load Balancers.\n\nNote\n\nAdding more than one load balancer to the array is not supported.\n\n(structure)\n\nInformation about a load balancer in Elastic Load Balancing to use in a deployment. Instances are registered directly with a load balancer, and traffic is routed to the load balancer.\n\nname -> (string)\n\nFor blue/green deployments, the name of the load balancer that is used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupInfoList -> (list)\n\nAn array that contains information about the target group to use for load balancing in a deployment. In Elastic Load Balancing, target groups are used with Application Load Balancers.\n\nNote\n\nAdding more than one target group to the array is not supported.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\ntargetGroupPairInfoList -> (list)\n\nThe target group pair information. This is an array of TargeGroupPairInfo objects with a maximum size of one.\n\n(structure)\n\nInformation about two target groups and how traffic is routed during an Amazon ECS deployment. An optional test traffic route can be specified.\n\ntargetGroups -> (list)\n\nOne pair of target groups. One is associated with the original task set. The second is associated with the task set that serves traffic after the deployment is complete.\n\n(structure)\n\nInformation about a target group in Elastic Load Balancing to use in a deployment. Instances are registered as targets in a target group, and traffic is routed to the target group.\n\nname -> (string)\n\nFor blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment are registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\nprodTrafficRoute -> (structure)\n\nThe path used by a load balancer to route production traffic when an Amazon ECS deployment is complete.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\ntestTrafficRoute -> (structure)\n\nAn optional path used by a load balancer to route test traffic after an Amazon ECS deployment. Validation can occur while test traffic is served during a deployment.\n\nlistenerArns -> (list)\n\nThe Amazon Resource Name (ARN) of one listener. The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"elbInfoList\": [\n    {\n      \"name\": \"string\"\n    }\n    ...\n  ],\n  \"targetGroupInfoList\": [\n    {\n      \"name\": \"string\"\n    }\n    ...\n  ],\n  \"targetGroupPairInfoList\": [\n    {\n      \"targetGroups\": [\n        {\n          \"name\": \"string\"\n        }\n        ...\n      ],\n      \"prodTrafficRoute\": {\n        \"listenerArns\": [\"string\", ...]\n      },\n      \"testTrafficRoute\": {\n        \"listenerArns\": [\"string\", ...]\n      }\n    }\n    ...\n  ]\n}\n\n\n--ec2-tag-set (structure)\n\nInformation about groups of tags applied to on-premises instances. The deployment group includes only EC2 instances identified by all the tag groups.\n\nec2TagSetList -> (list)\n\nA list that contains other lists of EC2 instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an EC2 tag filter.\n\nKey -> (string)\n\nThe tag filter key.\n\nValue -> (string)\n\nThe tag filter value.\n\nType -> (string)\n\nThe tag filter type:\n\nKEY_ONLY : Key only.\n\nVALUE_ONLY : Value only.\n\nKEY_AND_VALUE : Key and value.\n\nJSON Syntax:\n\n{\n  \"ec2TagSetList\": [\n    [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\",\n        \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n      }\n      ...\n    ]\n    ...\n  ]\n}\n\n\n--ecs-services (list)\n\nThe target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format <clustername>:<servicename> .\n\n(structure)\n\nContains the service and cluster names used to identify an Amazon ECS deployment’s target.\n\nserviceName -> (string)\n\nThe name of the target Amazon ECS service.\n\nclusterName -> (string)\n\nThe name of the cluster that the Amazon ECS service is associated with.\n\nShorthand Syntax:\n\nserviceName=string,clusterName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"serviceName\": \"string\",\n    \"clusterName\": \"string\"\n  }\n  ...\n]\n\n\n--on-premises-tag-set (structure)\n\nInformation about an on-premises instance tag set. The deployment group includes only on-premises instances identified by all the tag groups.\n\nonPremisesTagSetList -> (list)\n\nA list that contains other lists of on-premises instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\n(list)\n\n(structure)\n\nInformation about an on-premises instance tag filter.\n\nKey -> (string)\n\nThe on-premises instance tag filter key.\n\nValue -> (string)\n\nThe on-premises instance tag filter value.\n\nType -> (string)\n\nThe on-premises instance tag filter type:\n\nKEY_ONLY: Key only.\n\nVALUE_ONLY: Value only.\n\nKEY_AND_VALUE: Key and value.\n\nJSON Syntax:\n\n{\n  \"onPremisesTagSetList\": [\n    [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\",\n        \"Type\": \"KEY_ONLY\"|\"VALUE_ONLY\"|\"KEY_AND_VALUE\"\n      }\n      ...\n    ]\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nhooksNotCleanedUp -> (list)\n\nIf the output contains no data, and the corresponding deployment group contained at least one Auto Scaling group, AWS CodeDeploy successfully removed all corresponding Auto Scaling lifecycle event hooks from the AWS account. If the output contains data, AWS CodeDeploy could not remove some Auto Scaling lifecycle event hooks from the AWS account.\n\n(structure)\n\nInformation about an Auto Scaling group.\n\nname -> (string)\n\nThe Auto Scaling group name.\n\nhook -> (string)\n\nAn Auto Scaling lifecycle event hook name.",
      "command_examples": "Examples\n\nTo change information about a deployment group\n\nThe following update-deployment-group example changes the settings of a deployment group that is associated with the specified application.\n\naws deploy update-deployment-group \\\n    --application-name WordPress_App \\\n    --auto-scaling-groups My_CodeDeployDemo_ASG \\\n    --current-deployment-group-name WordPress_DG \\\n    --deployment-config-name CodeDeployDefault.AllAtOnce \\\n    --ec2-tag-filters Key=Name,Type=KEY_AND_VALUE,Value=My_CodeDeployDemo \\\n    --new-deployment-group-name My_WordPress_DepGroup \\\n    --service-role-arn arn:aws:iam::80398EXAMPLE:role/CodeDeployDemo-2\n\n\nThis command produces no output."
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/deploy/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description\n\nAWS CodeDeploy is a deployment service that automates application deployments to Amazon EC2 instances, on-premises instances running in your own facility, serverless AWS Lambda functions, or applications in an Amazon ECS service.\n\nYou can deploy a nearly unlimited variety of application content, such as an updated Lambda function, updated applications in an Amazon ECS service, code, web and configuration files, executables, packages, scripts, multimedia files, and so on. AWS CodeDeploy can deploy application content stored in Amazon S3 buckets, GitHub repositories, or Bitbucket repositories. You do not need to make changes to your existing code before you can use AWS CodeDeploy.\n\nAWS CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during application deployment, and handles the complexity of updating your applications, without many of the risks associated with error-prone manual deployments.\n\nAWS CodeDeploy Components\n\nUse the information in this guide to help you work with the following AWS CodeDeploy components:\n\nApplication : A name that uniquely identifies the application you want to deploy. AWS CodeDeploy uses this name, which functions as a container, to ensure the correct combination of revision, deployment configuration, and deployment group are referenced during a deployment.\n\nDeployment group : A set of individual instances, CodeDeploy Lambda deployment configuration settings, or an Amazon ECS service and network details. A Lambda deployment group specifies how to route traffic to a new version of a Lambda function. An Amazon ECS deployment group specifies the service created in Amazon ECS to deploy, a load balancer, and a listener to reroute production traffic to an updated containerized application. An EC2/On-premises deployment group contains individually tagged instances, Amazon EC2 instances in Amazon EC2 Auto Scaling groups, or both. All deployment groups can specify optional trigger, alarm, and rollback settings.\n\nDeployment configuration : A set of deployment rules and deployment success and failure conditions used by AWS CodeDeploy during a deployment.\n\nDeployment : The process and the components used when updating a Lambda function, a containerized application in an Amazon ECS service, or of installing content on one or more instances.\n\nApplication revisions : For an AWS Lambda deployment, this is an AppSpec file that specifies the Lambda function to be updated and one or more functions to validate deployment lifecycle events. For an Amazon ECS deployment, this is an AppSpec file that specifies the Amazon ECS task definition, container, and port where production traffic is rerouted. For an EC2/On-premises deployment, this is an archive file that contains source content—source code, webpages, executable files, and deployment scripts—along with an AppSpec file. Revisions are stored in Amazon S3 buckets or GitHub repositories. For Amazon S3, a revision is uniquely identified by its Amazon S3 object key and its ETag, version, or both. For GitHub, a revision is uniquely identified by its commit ID.\n\nThis guide also contains information to help you get details about the instances in your deployments, to make on-premises instances available for AWS CodeDeploy deployments, to get details about a Lambda function deployment, and to get details about Amazon ECS service deployments.\n\nAWS CodeDeploy Information Resources\n\nAWS CodeDeploy User Guide\n\nAWS CodeDeploy API Reference Guide\n\nAWS CLI Reference for AWS CodeDeploy\n\nAWS CodeDeploy Developer Forum"
}