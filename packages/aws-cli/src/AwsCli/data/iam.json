{
  "service_name": "iam",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html",
  "service_commands": [
    {
      "command_name": "add-client-id-to-open-id-connect-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/add-client-id-to-open-id-connect-provider.html",
      "command_description": "Description\n\nAdds a new client ID (also known as audience) to the list of client IDs already registered for the specified IAM OpenID Connect (OIDC) provider resource.\n\nThis operation is idempotent; it does not fail or return an error if you add an existing client ID to the provider.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-client-id-to-open-id-connect-provider\n--open-id-connect-provider-arn <value>\n--client-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--open-id-connect-provider-arn <value>",
        "--client-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--open-id-connect-provider-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider resource to add the client ID to. You can get a list of OIDC provider ARNs by using the ListOpenIDConnectProviders operation.\n\n--client-id (string)\n\nThe client ID (also known as audience) to add to the IAM OpenID Connect provider resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a client ID (audience) to an Open-ID Connect (OIDC) provider\n\nThe following add-client-id-to-open-id-connect-provider command adds the client ID my-application-ID to the OIDC provider named server.example.com:\n\naws iam add-client-id-to-open-id-connect-provider --client-id my-application-ID --open-id-connect-provider-arn arn:aws:iam::123456789012:oidc-provider/server.example.com\n\n\nTo create an OIDC provider, use the create-open-id-connect-provider command.\n\nFor more information, see Using OpenID Connect Identity Providers in the Using IAM guide."
    },
    {
      "command_name": "add-role-to-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/add-role-to-instance-profile.html",
      "command_description": "Description\n\nAdds the specified IAM role to the specified instance profile. An instance profile can contain only one role, and this quota cannot be increased. You can remove the existing role and then add a different role to an instance profile. You must then wait for the change to appear across all of Amazon Web Services because of eventual consistency . To force the change, you must disassociate the instance profile and then associate the instance profile , or you can stop your instance and then restart it.\n\nNote\n\nThe caller of this operation must be granted the PassRole permission on the IAM role by a permissions policy.\n\nFor more information about roles, see Working with roles . For more information about instance profiles, see About instance profiles .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-role-to-instance-profile\n--instance-profile-name <value>\n--role-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-profile-name <value>",
        "--role-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-profile-name (string)\n\nThe name of the instance profile to update.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--role-name (string)\n\nThe name of the role to add.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a role to an instance profile\n\nThe following add-role-to-instance-profile command adds the role named S3Access to the instance profile named Webserver:\n\naws iam add-role-to-instance-profile --role-name S3Access --instance-profile-name Webserver\n\n\nTo create an instance profile, use the create-instance-profile command.\n\nFor more information, see Using IAM Roles to Delegate Permissions to Applications that Run on Amazon EC2 in the Using IAM guide."
    },
    {
      "command_name": "add-user-to-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/add-user-to-group.html",
      "command_description": "Description\n\nAdds the specified user to the specified group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-user-to-group\n--group-name <value>\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name of the group to update.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--user-name (string)\n\nThe name of the user to add.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a user to an IAM group\n\nThe following add-user-to-group command adds an IAM user named Bob to the IAM group named Admins:\n\naws iam add-user-to-group --user-name Bob --group-name Admins\n\n\nFor more information, see Adding and Removing Users in an IAM Group in the Using IAM guide."
    },
    {
      "command_name": "attach-group-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/attach-group-policy.html",
      "command_description": "Description\n\nAttaches the specified managed policy to the specified IAM group.\n\nYou use this operation to attach a managed policy to a group. To embed an inline policy in a group, use PutGroupPolicy .\n\nAs a best practice, you can validate your IAM policies. To learn more, see Validating IAM policies in the IAM User Guide .\n\nFor more information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  attach-group-policy\n--group-name <value>\n--policy-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "--policy-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name (friendly name, not ARN) of the group to attach the policy to.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy you want to attach.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo attach a managed policy to an IAM group\n\nThe following attach-group-policy command attaches the AWS managed policy named ReadOnlyAccess to the IAM group named Finance:\n\naws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/ReadOnlyAccess --group-name Finance\n\n\nFor more information, see Managed Policies and Inline Policies in the Using IAM guide."
    },
    {
      "command_name": "attach-role-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/attach-role-policy.html",
      "command_description": "Description\n\nAttaches the specified managed policy to the specified IAM role. When you attach a managed policy to a role, the managed policy becomes part of the role’s permission (access) policy.\n\nNote\n\nYou cannot use a managed policy as the role’s trust policy. The role’s trust policy is created at the same time as the role, using CreateRole . You can update a role’s trust policy using UpdateAssumeRolePolicy .\n\nUse this operation to attach a managed policy to a role. To embed an inline policy in a role, use PutRolePolicy . For more information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nAs a best practice, you can validate your IAM policies. To learn more, see Validating IAM policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  attach-role-policy\n--role-name <value>\n--policy-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "--policy-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name (friendly name, not ARN) of the role to attach the policy to.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy you want to attach.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo attach a managed policy to an IAM role\n\nThe following attach-role-policy command attaches the AWS managed policy named ReadOnlyAccess to the IAM role named ReadOnlyRole:\n\naws iam attach-role-policy --policy-arn arn:aws:iam::aws:policy/ReadOnlyAccess --role-name ReadOnlyRole\n\n\nFor more information, see Managed Policies and Inline Policies in the Using IAM guide."
    },
    {
      "command_name": "attach-user-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/attach-user-policy.html",
      "command_description": "Description\n\nAttaches the specified managed policy to the specified user.\n\nYou use this operation to attach a managed policy to a user. To embed an inline policy in a user, use PutUserPolicy .\n\nAs a best practice, you can validate your IAM policies. To learn more, see Validating IAM policies in the IAM User Guide .\n\nFor more information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  attach-user-policy\n--user-name <value>\n--policy-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--policy-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name (friendly name, not ARN) of the IAM user to attach the policy to.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy you want to attach.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo attach a managed policy to an IAM user\n\nThe following attach-user-policy command attaches the AWS managed policy named AdministratorAccess to the IAM user named Alice:\n\naws iam attach-user-policy --policy-arn arn:aws:iam:ACCOUNT-ID:aws:policy/AdministratorAccess --user-name Alice\n\n\nFor more information, see Managed Policies and Inline Policies in the Using IAM guide."
    },
    {
      "command_name": "change-password",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/change-password.html",
      "command_description": "Description\n\nChanges the password of the IAM user who is calling this operation. This operation can be performed using the CLI, the Amazon Web Services API, or the My Security Credentials page in the Amazon Web Services Management Console. The Amazon Web Services account root user password is not affected by this operation.\n\nUse UpdateLoginProfile to use the CLI, the Amazon Web Services API, or the Users page in the IAM console to change the password for any IAM user. For more information about modifying passwords, see Managing passwords in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  change-password\n--old-password <value>\n--new-password <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--old-password <value>",
        "--new-password <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--old-password (string)\n\nThe IAM user’s current password.\n\n--new-password (string)\n\nThe new password. The new password must conform to the Amazon Web Services account’s password policy, if one exists.\n\nThe regex pattern that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (\\u0020 ) through the end of the ASCII character range (\\u00FF ). You can also include the tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D ) characters. Any of these characters are valid in a password. However, many tools, such as the Amazon Web Services Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo change the password for your IAM user\n\nTo change the password for your IAM user, we recommend using the --cli-input-json parameter to pass a JSON file that contains your old and new passwords. Using this method, you can use strong passwords with non-alphanumeric characters. It can be difficult to use passwords with non-alphanumeric characters when you pass them as command line parameters. To use the --cli-input-json parameter, start by using the change-password command with the --generate-cli-skeleton parameter, as in the following example:\n\naws iam change-password --generate-cli-skeleton > change-password.json\n\n\nThe previous command creates a JSON file called change-password.json that you can use to fill in your old and new passwords. For example, the file might look like this:\n\n{\n    \"OldPassword\": \"3s0K_;xh4~8XXI\",\n    \"NewPassword\": \"]35d/{pB9Fo9wJ\"\n}\n\n\nNext, to change your password, use the change-password command again, this time passing the --cli-input-json parameter to specify your JSON file. The following change-password command uses the --cli-input-json parameter with a JSON file called change-password.json:\n\naws iam change-password --cli-input-json file://change-password.json\n\n\nThis command can be called by IAM users only. If this command is called using AWS account (root) credentials, the command returns an InvalidUserType error.\n\nFor more information, see How IAM Users Change Their Own Password in the Using IAM guide."
    },
    {
      "command_name": "create-access-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-access-key.html",
      "command_description": "Description\n\nCreates a new Amazon Web Services secret access key and corresponding Amazon Web Services access key ID for the specified user. The default status for new keys is Active .\n\nIf you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials. This is true even if the Amazon Web Services account has no associated users.\n\nFor information about quotas on the number of keys you can create, see IAM and STS quotas in the IAM User Guide .\n\nWarning\n\nTo ensure the security of your Amazon Web Services account, the secret access key is accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again. If a secret key is lost, you can delete the access keys for the associated user and then create new keys.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-access-key\n[--user-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user that the new key will belong to.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccessKey -> (structure)\n\nA structure with details about the access key.\n\nUserName -> (string)\n\nThe name of the IAM user that the access key is associated with.\n\nAccessKeyId -> (string)\n\nThe ID for this access key.\n\nStatus -> (string)\n\nThe status of the access key. Active means that the key is valid for API calls, while Inactive means it is not.\n\nSecretAccessKey -> (string)\n\nThe secret key used to sign requests.\n\nCreateDate -> (timestamp)\n\nThe date when the access key was created.",
      "command_examples": "Examples\n\nTo create an access key for an IAM user\n\nThe following create-access-key command creates an access key (access key ID and secret access key) for the IAM user named Bob:\n\naws iam create-access-key --user-name Bob\n\n\nOutput:\n\n{\n    \"AccessKey\": {\n        \"UserName\": \"Bob\",\n        \"Status\": \"Active\",\n        \"CreateDate\": \"2015-03-09T18:39:23.411Z\",\n        \"SecretAccessKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\",\n        \"AccessKeyId\": \"AKIAIOSFODNN7EXAMPLE\"\n    }\n}\n\n\nStore the secret access key in a secure location. If it is lost, it cannot be recovered, and you must create a new access key.\n\nFor more information, see Managing Access Keys for IAM Users in the Using IAM guide."
    },
    {
      "command_name": "create-account-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-account-alias.html",
      "command_description": "Description\n\nCreates an alias for your Amazon Web Services account. For information about using an Amazon Web Services account alias, see Using an alias for your Amazon Web Services account ID in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-account-alias\n--account-alias <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--account-alias <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--account-alias (string)\n\nThe account alias to create.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo create an account alias\n\nThe following create-account-alias command creates the alias examplecorp for your AWS account:\n\naws iam create-account-alias --account-alias examplecorp\n\n\nFor more information, see Your AWS Account ID and Its Alias in the Using IAM guide."
    },
    {
      "command_name": "create-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-group.html",
      "command_description": "Description\n\nCreates a new group.\n\nFor information about the number of groups you can create, see IAM and STS quotas in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-group\n[--path <value>]\n--group-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--path <value>]",
        "--group-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path (string)\n\nThe path to the group. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/).\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--group-name (string)\n\nThe name of the group to create. Do not include the path in this value.\n\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both “MyResource” and “myresource”.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroup -> (structure)\n\nA structure containing details about the new group.\n\nPath -> (string)\n\nThe path to the group. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nGroupName -> (string)\n\nThe friendly name that identifies the group.\n\nGroupId -> (string)\n\nThe stable and unique string identifying the group. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the group was created.",
      "command_examples": "Examples\n\nTo create an IAM group\n\nThe following create-group command creates an IAM group named Admins:\n\naws iam create-group --group-name Admins\n\n\nOutput:\n\n{\n    \"Group\": {\n        \"Path\": \"/\",\n        \"CreateDate\": \"2015-03-09T20:30:24.940Z\",\n        \"GroupId\": \"AIDGPMS9RO4H3FEXAMPLE\",\n        \"Arn\": \"arn:aws:iam::123456789012:group/Admins\",\n        \"GroupName\": \"Admins\"\n    }\n}\n\n\nFor more information, see Creating IAM Groups in the Using IAM guide."
    },
    {
      "command_name": "create-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-instance-profile.html",
      "command_description": "Description\n\nCreates a new instance profile. For information about instance profiles, see Using roles for applications on Amazon EC2 in the IAM User Guide , and Instance profiles in the Amazon EC2 User Guide .\n\nFor information about the number of instance profiles you can create, see IAM object quotas in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-instance-profile\n--instance-profile-name <value>\n[--path <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-profile-name <value>",
        "[--path <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-profile-name (string)\n\nThe name of the instance profile to create.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--path (string)\n\nThe path to the instance profile. For more information about paths, see IAM Identifiers in the IAM User Guide .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/).\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--tags (list)\n\nA list of tags that you want to attach to the newly created IAM instance profile. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstanceProfile -> (structure)\n\nA structure containing details about the new instance profile.\n\nPath -> (string)\n\nThe path to the instance profile. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nInstanceProfileName -> (string)\n\nThe name identifying the instance profile.\n\nInstanceProfileId -> (string)\n\nThe stable and unique string identifying the instance profile. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date when the instance profile was created.\n\nRoles -> (list)\n\nThe role associated with the instance profile.\n\n(structure)\n\nContains information about an IAM role. This structure is returned as a response element in several API operations that interact with roles.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide guide.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe policy that grants an entity permission to assume the role.\n\nDescription -> (string)\n\nA description of the role that you provide.\n\nMaxSessionDuration -> (integer)\n\nThe maximum session duration (in seconds) for the specified role. Anyone who uses the CLI, or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter.\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.\n\nTags -> (list)\n\nA list of tags that are attached to the instance profile. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo create an instance profile\n\nThe following create-instance-profile command creates an instance profile named Webserver:\n\naws iam create-instance-profile --instance-profile-name Webserver\n\n\nOutput:\n\n{\n    \"InstanceProfile\": {\n        \"InstanceProfileId\": \"AIPAJMBYC7DLSPEXAMPLE\",\n        \"Roles\": [],\n        \"CreateDate\": \"2015-03-09T20:33:19.626Z\",\n        \"InstanceProfileName\": \"Webserver\",\n        \"Path\": \"/\",\n        \"Arn\": \"arn:aws:iam::123456789012:instance-profile/Webserver\"\n    }\n}\n\n\nTo add a role to an instance profile, use the add-role-to-instance-profile command.\n\nFor more information, see Using IAM Roles to Delegate Permissions to Applications that Run on Amazon EC2 in the Using IAM guide."
    },
    {
      "command_name": "create-login-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-login-profile.html",
      "command_description": "Description\n\nCreates a password for the specified IAM user. A password allows an IAM user to access Amazon Web Services services through the Amazon Web Services Management Console.\n\nYou can use the CLI, the Amazon Web Services API, or the Users page in the IAM console to create a password for any IAM user. Use ChangePassword to update your own existing password in the My Security Credentials page in the Amazon Web Services Management Console.\n\nFor more information about managing passwords, see Managing passwords in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-login-profile\n--user-name <value>\n--password <value>\n[--password-reset-required | --no-password-reset-required]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--password <value>",
        "[--password-reset-required | --no-password-reset-required]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user to create a password for. The user must already exist.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--password (string)\n\nThe new password for the user.\n\nThe regex pattern that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (\\u0020 ) through the end of the ASCII character range (\\u00FF ). You can also include the tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D ) characters. Any of these characters are valid in a password. However, many tools, such as the Amazon Web Services Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.\n\n--password-reset-required | --no-password-reset-required (boolean)\n\nSpecifies whether the user is required to set a new password on next sign-in.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLoginProfile -> (structure)\n\nA structure containing the user name and password create date.\n\nUserName -> (string)\n\nThe name of the user, which can be used for signing in to the Amazon Web Services Management Console.\n\nCreateDate -> (timestamp)\n\nThe date when the password for the user was created.\n\nPasswordResetRequired -> (boolean)\n\nSpecifies whether the user is required to set a new password on next sign-in.",
      "command_examples": "Examples\n\nTo create a password for an IAM user\n\nTo create a password for an IAM user, we recommend using the --cli-input-json parameter to pass a JSON file that contains the password. Using this method, you can create a strong password with non-alphanumeric characters. It can be difficult to create a password with non-alphanumeric characters when you pass it as a command line parameter.\n\nTo use the --cli-input-json parameter, start by using the create-login-profile command with the --generate-cli-skeleton parameter, as in the following example:\n\naws iam create-login-profile --generate-cli-skeleton > create-login-profile.json\n\n\nThe previous command creates a JSON file called create-login-profile.json that you can use to fill in the information for a subsequent create-login-profile command. For example:\n\n{\n    \"UserName\": \"Bob\",\n    \"Password\": \"&1-3a6u:RA0djs\",\n    \"PasswordResetRequired\": true\n}\n\n\nNext, to create a password for an IAM user, use the create-login-profile command again, this time passing the --cli-input-json parameter to specify your JSON file. The following create-login-profile command uses the --cli-input-json parameter with a JSON file called create-login-profile.json:\n\naws iam create-login-profile --cli-input-json file://create-login-profile.json\n\n\nOutput:\n\n{\n    \"LoginProfile\": {\n        \"UserName\": \"Bob\",\n        \"CreateDate\": \"2015-03-10T20:55:40.274Z\",\n        \"PasswordResetRequired\": true\n    }\n}\n\n\nIf the new password violates the account password policy, the command returns a PasswordPolicyViolation error.\n\nTo change the password for a user that already has one, use update-login-profile. To set a password policy for the account, use the update-account-password-policy command.\n\nIf the account password policy allows them to, IAM users can change their own passwords using the change-password command.\n\nFor more information, see Managing Passwords for IAM Users in the Using IAM guide."
    },
    {
      "command_name": "create-open-id-connect-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-open-id-connect-provider.html",
      "command_description": "Description\n\nCreates an IAM entity to describe an identity provider (IdP) that supports OpenID Connect (OIDC) .\n\nThe OIDC provider that you create with this operation can be used as a principal in a role’s trust policy. Such a policy establishes a trust relationship between Amazon Web Services and the OIDC provider.\n\nIf you are using an OIDC identity provider from Google, Facebook, or Amazon Cognito, you don’t need to create a separate IAM identity provider. These OIDC identity providers are already built-in to Amazon Web Services and are available for your use. Instead, you can move directly to creating new roles using your identity provider. To learn more, see Creating a role for web identity or OpenID connect federation in the IAM User Guide .\n\nWhen you create the IAM OIDC provider, you specify the following:\n\nThe URL of the OIDC identity provider (IdP) to trust\n\nA list of client IDs (also known as audiences) that identify the application or applications allowed to authenticate using the OIDC provider\n\nA list of thumbprints of one or more server certificates that the IdP uses\n\nYou get all of this information from the OIDC IdP you want to use to access Amazon Web Services.\n\nNote\n\nAmazon Web Services secures communication with some OIDC identity providers (IdPs) through our library of trusted certificate authorities (CAs) instead of using a certificate thumbprint to verify your IdP server certificate. These OIDC IdPs include Google, and those that use an Amazon S3 bucket to host a JSON Web Key Set (JWKS) endpoint. In these cases, your legacy thumbprint remains in your configuration, but is no longer used for validation.\n\nNote\n\nThe trust for the OIDC provider is derived from the IAM provider that this operation creates. Therefore, it is best to limit access to the CreateOpenIDConnectProvider operation to highly privileged users.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-open-id-connect-provider\n--url <value>\n[--client-id-list <value>]\n--thumbprint-list <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--url <value>",
        "[--client-id-list <value>]",
        "--thumbprint-list <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--url (string)\n\nThe URL of the identity provider. The URL must begin with https:// and should correspond to the iss claim in the provider’s OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com . The URL should not contain a port number.\n\nYou cannot register the same provider multiple times in a single Amazon Web Services account. If you try to submit a URL that has already been used for an OpenID Connect provider in the Amazon Web Services account, you will get an error.\n\n--client-id-list (list)\n\nProvides a list of client IDs, also known as audiences. When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. This is the value that’s sent as the client_id parameter on OAuth requests.\n\nYou can register multiple client IDs with the same provider. For example, you might have multiple applications that use the same OIDC provider. You cannot register more than 100 client IDs with a single IAM OIDC provider.\n\nThere is no defined format for a client ID. The CreateOpenIDConnectProviderRequest operation accepts client IDs up to 255 characters long.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--thumbprint-list (list)\n\nA list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider’s server certificates. Typically this list includes only one entry. However, IAM lets you have up to five thumbprints for an OIDC provider. This lets you maintain multiple thumbprints if the identity provider is rotating certificates.\n\nThe server certificate thumbprint is the hex-encoded SHA-1 hash value of the X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string.\n\nYou must provide at least one thumbprint when creating an IAM OIDC provider. For example, assume that the OIDC provider is server.example.com and the provider stores its keys at https://keys.server.example.com/openid-connect. In that case, the thumbprint string would be the hex-encoded SHA-1 hash value of the certificate used by https://keys.server.example.com.\n\nFor more information about obtaining the OIDC provider thumbprint, see Obtaining the thumbprint for an OpenID Connect provider in the IAM User Guide .\n\n(string)\n\nContains a thumbprint for an identity provider’s server certificate.\n\nThe identity provider’s server certificate thumbprint is the hex-encoded SHA-1 hash value of the self-signed X.509 certificate. This thumbprint is used by the domain where the OpenID Connect provider makes its keys available. The thumbprint is always a 40-character string.\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (list)\n\nA list of tags that you want to attach to the new IAM OpenID Connect (OIDC) provider. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOpenIDConnectProviderArn -> (string)\n\nThe Amazon Resource Name (ARN) of the new IAM OpenID Connect provider that is created. For more information, see OpenIDConnectProviderListEntry .\n\nTags -> (list)\n\nA list of tags that are attached to the new IAM OIDC provider. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo create an OpenID Connect (OIDC) provider\n\nTo create an OpenID Connect (OIDC) provider, we recommend using the --cli-input-json parameter to pass a JSON file that contains the required parameters. When you create an OIDC provider, you must pass the URL of the provider, and the URL must begin with https://. It can be difficult to pass the URL as a command line parameter, because the colon (:) and forward slash (/) characters have special meaning in some command line environments. Using the --cli-input-json parameter gets around this limitation.\n\nTo use the --cli-input-json parameter, start by using the create-open-id-connect-provider command with the --generate-cli-skeleton parameter, as in the following example:\n\naws iam create-open-id-connect-provider --generate-cli-skeleton > create-open-id-connect-provider.json\n\n\nThe previous command creates a JSON file called create-open-id-connect-provider.json that you can use to fill in the information for a subsequent create-open-id-connect-provider command. For example:\n\n{\n    \"Url\": \"https://server.example.com\",\n    \"ClientIDList\": [\n        \"example-application-ID\"\n    ],\n    \"ThumbprintList\": [\n        \"c3768084dfb3d2b68b7897bf5f565da8eEXAMPLE\"\n    ]\n}\n\n\nNext, to create the OpenID Connect (OIDC) provider, use the create-open-id-connect-provider command again, this time passing the --cli-input-json parameter to specify your JSON file. The following create-open-id-connect-provider command uses the --cli-input-json parameter with a JSON file called create-open-id-connect-provider.json:\n\naws iam create-open-id-connect-provider --cli-input-json file://create-open-id-connect-provider.json\n\n\nOutput:\n\n{\n    \"OpenIDConnectProviderArn\": \"arn:aws:iam::123456789012:oidc-provider/server.example.com\"\n}\n\n\nFor more information about OIDC providers, see Using OpenID Connect Identity Providers in the Using IAM guide.\n\nFor more information about obtaining thumbprints for an OIDC provider, see Obtaining the Thumbprint for an OpenID Connect Provider in the Using IAM guide."
    },
    {
      "command_name": "create-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-policy.html",
      "command_description": "Description\n\nCreates a new managed policy for your Amazon Web Services account.\n\nThis operation creates a policy version with a version identifier of v1 and sets v1 as the policy’s default version. For more information about policy versions, see Versioning for managed policies in the IAM User Guide .\n\nAs a best practice, you can validate your IAM policies. To learn more, see Validating IAM policies in the IAM User Guide .\n\nFor more information about managed policies in general, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-policy\n--policy-name <value>\n[--path <value>]\n--policy-document <value>\n[--description <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-name <value>",
        "[--path <value>]",
        "--policy-document <value>",
        "[--description <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-name (string)\n\nThe friendly name of the policy.\n\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both “MyResource” and “myresource”.\n\n--path (string)\n\nThe path for the policy.\n\nFor more information about paths, see IAM identifiers in the IAM User Guide .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/).\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\nNote\n\nYou cannot use an asterisk (*) in the path name.\n\n--policy-document (string)\n\nThe JSON policy document that you want to use as the content for the new policy.\n\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\n\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\n\nTo learn more about JSON policy grammar, see Grammar of the IAM JSON policy language in the IAM User Guide .\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--description (string)\n\nA friendly description of the policy.\n\nTypically used to store information about the permissions defined in the policy. For example, “Grants access to production DynamoDB tables.”\n\nThe policy description is immutable. After a value is assigned, it cannot be changed.\n\n--tags (list)\n\nA list of tags that you want to attach to the new IAM customer managed policy. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicy -> (structure)\n\nA structure containing details about the new policy.\n\nPolicyName -> (string)\n\nThe friendly name (not ARN) identifying the policy.\n\nPolicyId -> (string)\n\nThe stable and unique string identifying the policy.\n\nFor more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nPath -> (string)\n\nThe path to the policy.\n\nFor more information about paths, see IAM identifiers in the IAM User Guide .\n\nDefaultVersionId -> (string)\n\nThe identifier for the version of the policy that is set as the default version.\n\nAttachmentCount -> (integer)\n\nThe number of entities (users, groups, and roles) that the policy is attached to.\n\nPermissionsBoundaryUsageCount -> (integer)\n\nThe number of entities (users and roles) for which the policy is used to set the permissions boundary.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nIsAttachable -> (boolean)\n\nSpecifies whether the policy can be attached to an IAM user, group, or role.\n\nDescription -> (string)\n\nA friendly description of the policy.\n\nThis element is included in the response to the GetPolicy operation. It is not included in the response to the ListPolicies operation.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy was created.\n\nUpdateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy was last updated.\n\nWhen a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.\n\nTags -> (list)\n\nA list of tags that are attached to the instance profile. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nThe following command creates a customer managed policy named my-policy:\n\naws iam create-policy --policy-name my-policy --policy-document file://policy\n\n\nOutput:\n\n{\n    \"Policy\": {\n        \"PolicyName\": \"my-policy\",\n        \"CreateDate\": \"2015-06-01T19:31:18.620Z\",\n        \"AttachmentCount\": 0,\n        \"IsAttachable\": true,\n        \"PolicyId\": \"ZXR6A36LTYANPAI7NJ5UV\",\n        \"DefaultVersionId\": \"v1\",\n        \"Path\": \"/\",\n        \"Arn\": \"arn:aws:iam::0123456789012:policy/my-policy\",\n        \"UpdateDate\": \"2015-06-01T19:31:18.620Z\"\n    }\n}\n\n\nThe file policy is a JSON document in the current folder that grants read only access to the shared folder in an Amazon S3 bucket named my-bucket:\n\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:Get*\",\n                \"s3:List*\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::my-bucket/shared/*\"\n            ]\n        }\n    ]\n}\n\n\nFor more information on using files as input for string parameters, see Specifying Parameter Values in the AWS CLI User Guide."
    },
    {
      "command_name": "create-policy-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-policy-version.html",
      "command_description": "Description\n\nCreates a new version of the specified managed policy. To update a managed policy, you create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must delete an existing version using DeletePolicyVersion before you create a new version.\n\nOptionally, you can set the new version as the policy’s default version. The default version is the version that is in effect for the IAM users, groups, and roles to which the policy is attached.\n\nFor more information about managed policy versions, see Versioning for managed policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-policy-version\n--policy-arn <value>\n--policy-document <value>\n[--set-as-default | --no-set-as-default]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "--policy-document <value>",
        "[--set-as-default | --no-set-as-default]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy to which you want to add a new version.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--policy-document (string)\n\nThe JSON policy document that you want to use as the content for this new version of the policy.\n\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\n\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--set-as-default | --no-set-as-default (boolean)\n\nSpecifies whether to set this version as the policy’s default version.\n\nWhen this parameter is true , the new policy version becomes the operative version. That is, it becomes the version that is in effect for the IAM users, groups, and roles that the policy is attached to.\n\nFor more information about managed policy versions, see Versioning for managed policies in the IAM User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyVersion -> (structure)\n\nA structure containing details about the new policy version.\n\nDocument -> (string)\n\nThe policy document.\n\nThe policy document is returned in the response to the GetPolicyVersion and GetAccountAuthorizationDetails operations. It is not returned in the response to the CreatePolicyVersion or ListPolicyVersions operations.\n\nThe policy document returned in this structure is URL-encoded compliant with RFC 3986 . You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the decode method of the java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs provide similar functionality.\n\nVersionId -> (string)\n\nThe identifier for the policy version.\n\nPolicy version identifiers always begin with v (always lowercase). When a policy is created, the first policy version is v1 .\n\nIsDefaultVersion -> (boolean)\n\nSpecifies whether the policy version is set as the policy’s default version.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy version was created.",
      "command_examples": "Examples\n\nTo create a new version of a managed policy\n\nThis example creates a new v2 version of the IAM policy whose ARN is arn:aws:iam::123456789012:policy/MyPolicy and makes it the default version:\n\naws iam create-policy-version --policy-arn arn:aws:iam::123456789012:policy/MyPolicy --policy-document file://NewPolicyVersion.json --set-as-default\n\n\nOutput:\n\n{\n    \"PolicyVersion\": {\n        \"CreateDate\": \"2015-06-16T18:56:03.721Z\",\n        \"VersionId\": \"v2\",\n        \"IsDefaultVersion\": true\n    }\n}\n\n\nFor more information, see Versioning for Managed Policies in the Using IAM guide."
    },
    {
      "command_name": "create-role",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-role.html",
      "command_description": "Description\n\nCreates a new role for your Amazon Web Services account. For more information about roles, see IAM roles . For information about quotas for role names and the number of roles you can create, see IAM and STS quotas in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-role\n[--path <value>]\n--role-name <value>\n--assume-role-policy-document <value>\n[--description <value>]\n[--max-session-duration <value>]\n[--permissions-boundary <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--path <value>]",
        "--role-name <value>",
        "--assume-role-policy-document <value>",
        "[--description <value>]",
        "[--max-session-duration <value>]",
        "[--permissions-boundary <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path (string)\n\nThe path to the role. For more information about paths, see IAM Identifiers in the IAM User Guide .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/).\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--role-name (string)\n\nThe name of the role to create.\n\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both “MyResource” and “myresource”.\n\n--assume-role-policy-document (string)\n\nThe trust relationship policy document that grants an entity permission to assume the role.\n\nIn IAM, you must provide a JSON policy that has been converted to a string. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\nUpon success, the response includes the same trust policy in JSON format.\n\n--description (string)\n\nA description of the role.\n\n--max-session-duration (integer)\n\nThe maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.\n\nAnyone who assumes the role from the or API can use the DurationSeconds API parameter or the duration-seconds CLI parameter to request a longer session. The MaxSessionDuration setting determines the maximum duration that can be requested using the DurationSeconds parameter. If users don’t specify a value for the DurationSeconds parameter, their security credentials are valid for one hour by default. This applies when you use the AssumeRole* API operations or the assume-role* CLI operations but does not apply when you use those operations to create a console URL. For more information, see Using IAM roles in the IAM User Guide .\n\n--permissions-boundary (string)\n\nThe ARN of the policy that is used to set the permissions boundary for the role.\n\n--tags (list)\n\nA list of tags that you want to attach to the new role. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRole -> (structure)\n\nA structure containing details about the new role.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide guide.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe policy that grants an entity permission to assume the role.\n\nDescription -> (string)\n\nA description of the role that you provide.\n\nMaxSessionDuration -> (integer)\n\nThe maximum session duration (in seconds) for the specified role. Anyone who uses the CLI, or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter.\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.",
      "command_examples": "Examples\n\nTo create an IAM role\n\nThe following create-role command creates a role named Test-Role and attaches a trust policy to it:\n\naws iam create-role --role-name Test-Role --assume-role-policy-document file://Test-Role-Trust-Policy.json\n\n\nOutput:\n\n{\n  \"Role\": {\n      \"AssumeRolePolicyDocument\": \"<URL-encoded-JSON>\",\n      \"RoleId\": \"AKIAIOSFODNN7EXAMPLE\",\n      \"CreateDate\": \"2013-06-07T20:43:32.821Z\",\n      \"RoleName\": \"Test-Role\",\n      \"Path\": \"/\",\n      \"Arn\": \"arn:aws:iam::123456789012:role/Test-Role\"\n  }\n}\n\n\nThe trust policy is defined as a JSON document in the Test-Role-Trust-Policy.json file. (The file name and extension do not have significance.) The trust policy must specify a principal.\n\nTo attach a permissions policy to a role, use the put-role-policy command.\n\nFor more information, see Creating a Role in the Using IAM guide."
    },
    {
      "command_name": "create-saml-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-saml-provider.html",
      "command_description": "Description\n\nCreates an IAM resource that describes an identity provider (IdP) that supports SAML 2.0.\n\nThe SAML provider resource that you create with this operation can be used as a principal in an IAM role’s trust policy. Such a policy can enable federated users who sign in using the SAML IdP to assume the role. You can create an IAM role that supports Web-based single sign-on (SSO) to the Amazon Web Services Management Console or one that supports API access to Amazon Web Services.\n\nWhen you create the SAML provider resource, you upload a SAML metadata document that you get from your IdP. That document includes the issuer’s name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that the IdP sends. You must generate the metadata document using the identity management software that is used as your organization’s IdP.\n\nNote\n\nThis operation requires Signature Version 4 .\n\nFor more information, see Enabling SAML 2.0 federated users to access the Amazon Web Services Management Console and About SAML 2.0-based federation in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-saml-provider\n--saml-metadata-document <value>\n--name <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--saml-metadata-document <value>",
        "--name <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--saml-metadata-document (string)\n\nAn XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer’s name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization’s IdP.\n\nFor more information, see About SAML 2.0-based federation in the IAM User Guide\n\n--name (string)\n\nThe name of the provider to create.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tags (list)\n\nA list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSAMLProviderArn -> (string)\n\nThe Amazon Resource Name (ARN) of the new SAML provider resource in IAM.\n\nTags -> (list)\n\nA list of tags that are attached to the new IAM SAML provider. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo create a SAML provider\n\nThis example creates a new SAML provider in IAM named MySAMLProvider. It is described by the SAML metadata document found in the file SAMLMetaData.xml:\n\naws iam create-saml-provider --saml-metadata-document file://SAMLMetaData.xml --name MySAMLProvider\n\n\nOutput:\n\n{\n    \"SAMLProviderArn\": \"arn:aws:iam::123456789012:saml-provider/MySAMLProvider\"\n}\n\n\nFor more information, see Using SAML Providers in the Using IAM guide."
    },
    {
      "command_name": "create-service-linked-role",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-service-linked-role.html",
      "command_description": "Description\n\nCreates an IAM role that is linked to a specific Amazon Web Services service. The service controls the attached policies and when the role can be deleted. This helps ensure that the service is not broken by an unexpectedly changed or deleted role, which could put your Amazon Web Services resources into an unknown state. Allowing the service to control the role helps improve service stability and proper cleanup when a service and its role are no longer needed. For more information, see Using service-linked roles in the IAM User Guide .\n\nTo attach a policy to this service-linked role, you must make the request using the Amazon Web Services service that depends on this role.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-service-linked-role\n--aws-service-name <value>\n[--description <value>]\n[--custom-suffix <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--aws-service-name <value>",
        "[--description <value>]",
        "[--custom-suffix <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--aws-service-name (string)\n\nThe service principal for the Amazon Web Services service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: elasticbeanstalk.amazonaws.com .\n\nService principals are unique and case-sensitive. To find the exact service principal for your service-linked role, see Amazon Web Services services that work with IAM in the IAM User Guide . Look for the services that have Yes in the Service-Linked Role column. Choose the Yes link to view the service-linked role documentation for that service.\n\n--description (string)\n\nThe description of the role.\n\n--custom-suffix (string)\n\nA string that you provide, which is combined with the service-provided prefix to form the complete role name. If you make multiple requests for the same service, then you must supply a different CustomSuffix for each request. Otherwise the request fails with a duplicate role name error. For example, you could add -1 or -debug to the suffix.\n\nSome services do not support the CustomSuffix parameter. If you provide an optional suffix and the operation fails, try the operation again without the suffix.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRole -> (structure)\n\nA Role object that contains details about the newly created role.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide guide.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe policy that grants an entity permission to assume the role.\n\nDescription -> (string)\n\nA description of the role that you provide.\n\nMaxSessionDuration -> (integer)\n\nThe maximum session duration (in seconds) for the specified role. Anyone who uses the CLI, or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter.\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.",
      "command_examples": "Examples\n\nTo create a service-linked role\n\nThe following create-service-linked-role example creates a service-linked role for the specified AWS service and attaches the specified description.\n\naws iam create-service-linked-role \\\n    --aws-service-name lex.amazonaws.com \\\n    --description \"My service-linked role to support Lex\"\n\n\nOutput:\n\n{\n    \"Role\": {\n        \"Path\": \"/aws-service-role/lex.amazonaws.com/\",\n        \"RoleName\": \"AWSServiceRoleForLexBots\",\n        \"RoleId\": \"AROA1234567890EXAMPLE\",\n        \"Arn\": \"arn:aws:iam::1234567890:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots\",\n        \"CreateDate\": \"2019-04-17T20:34:14+00:00\",\n        \"AssumeRolePolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Action\": [\n                        \"sts:AssumeRole\"\n                    ],\n                    \"Effect\": \"Allow\",\n                    \"Principal\": {\n                        \"Service\": [\n                            \"lex.amazonaws.com\"\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n}\n\n\nFor more information, see Using Service-Linked Roles in the IAM User Guide."
    },
    {
      "command_name": "create-service-specific-credential",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-service-specific-credential.html",
      "command_description": "Description\n\nGenerates a set of credentials consisting of a user name and password that can be used to access the service specified in the request. These credentials are generated by IAM, and can be used only for the specified service.\n\nYou can have a maximum of two sets of service-specific credentials for each supported service per user.\n\nYou can create service-specific credentials for CodeCommit and Amazon Keyspaces (for Apache Cassandra).\n\nYou can reset the password to a new service-generated value by calling ResetServiceSpecificCredential .\n\nFor more information about service-specific credentials, see Using IAM with CodeCommit: Git credentials, SSH keys, and Amazon Web Services access keys in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-service-specific-credential\n--user-name <value>\n--service-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--service-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--service-name (string)\n\nThe name of the Amazon Web Services service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServiceSpecificCredential -> (structure)\n\nA structure that contains information about the newly created service-specific credential.\n\nWarning\n\nThis is the only time that the password for this credential set is available. It cannot be recovered later. Instead, you must reset the password with ResetServiceSpecificCredential .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the service-specific credential were created.\n\nServiceName -> (string)\n\nThe name of the service associated with the service-specific credential.\n\nServiceUserName -> (string)\n\nThe generated user name for the service-specific credential. This value is generated by combining the IAM user’s name combined with the ID number of the Amazon Web Services account, as in jane-at-123456789012 , for example. This value cannot be configured by the user.\n\nServicePassword -> (string)\n\nThe generated password for the service-specific credential.\n\nServiceSpecificCredentialId -> (string)\n\nThe unique identifier for the service-specific credential.\n\nUserName -> (string)\n\nThe name of the IAM user associated with the service-specific credential.\n\nStatus -> (string)\n\nThe status of the service-specific credential. Active means that the key is valid for API calls, while Inactive means it is not.",
      "command_examples": "Examples\n\nCreate a set of service-specific credentials for a user\n\nThe following create-service-specific-credential example creates a username and password that can be used to access only the configured service.\n\naws iam create-service-specific-credential --user-name sofia --service-name codecommit.amazonaws.com\n\n\nOutput:\n\n{\n    \"ServiceSpecificCredential\": {\n        \"CreateDate\": \"2019-04-18T20:45:36+00:00\",\n        \"ServiceName\": \"codecommit.amazonaws.com\",\n        \"ServiceUserName\": \"sofia-at-123456789012\",\n        \"ServicePassword\": \"k1zPZM6uVxMQ3oxqgoYlNuJPyRTZ1vREs76zTQE3eJk=\",\n        \"ServiceSpecificCredentialId\": \"ACCAEXAMPLE123EXAMPLE\",\n        \"UserName\": \"sofia\",\n        \"Status\": \"Active\"\n    }\n}\n\n\nFor more information, see Create Git Credentials for HTTPS Connections to CodeCommit in the AWS CodeCommit User Guide"
    },
    {
      "command_name": "create-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-user.html",
      "command_description": "Description\n\nCreates a new IAM user for your Amazon Web Services account.\n\nFor information about quotas for the number of IAM users you can create, see IAM and STS quotas in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-user\n[--path <value>]\n--user-name <value>\n[--permissions-boundary <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--path <value>]",
        "--user-name <value>",
        "[--permissions-boundary <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path (string)\n\nThe path for the user name. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/).\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--user-name (string)\n\nThe name of the user to create.\n\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both “MyResource” and “myresource”.\n\n--permissions-boundary (string)\n\nThe ARN of the policy that is used to set the permissions boundary for the user.\n\n--tags (list)\n\nA list of tags that you want to attach to the new user. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUser -> (structure)\n\nA structure with details about the new IAM user.\n\nPath -> (string)\n\nThe path to the user. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nThe ARN of the policy used to set the permissions boundary for the user.\n\nUserName -> (string)\n\nThe friendly name identifying the user.\n\nUserId -> (string)\n\nThe stable and unique string identifying the user. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see IAM Identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user was created.\n\nPasswordLastUsed -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user’s password was last used to sign in to an Amazon Web Services website. For a list of Amazon Web Services websites that capture a user’s last sign-in time, see the Credential reports topic in the IAM User Guide . If a password is used more than once in a five-minute span, only the first use is returned in this field. If the field is null (no value), then it indicates that they never signed in with a password. This can be because:\n\nThe user never had a password.\n\nA password exists but has not been used since IAM started tracking this information on October 20, 2014.\n\nA null value does not mean that the user never had a password. Also, if the user does not currently have a password but had one in the past, then this field contains the date and time the most recent password was used.\n\nThis value is returned only in the GetUser and ListUsers operations.\n\nPermissionsBoundary -> (structure)\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are associated with the user. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo create an IAM user\n\nThe following create-user command creates an IAM user named Bob in the current account:\n\naws iam create-user --user-name Bob\n\n\nOutput:\n\n{\n    \"User\": {\n        \"UserName\": \"Bob\",\n        \"Path\": \"/\",\n        \"CreateDate\": \"2013-06-08T03:20:41.270Z\",\n        \"UserId\": \"AIDAIOSFODNN7EXAMPLE\",\n        \"Arn\": \"arn:aws:iam::123456789012:user/Bob\"\n    }\n}\n\n\nFor more information, see Adding a New User to Your AWS Account in the Using IAM guide."
    },
    {
      "command_name": "create-virtual-mfa-device",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-virtual-mfa-device.html",
      "command_description": "Description\n\nCreates a new virtual MFA device for the Amazon Web Services account. After creating the virtual MFA, use EnableMFADevice to attach the MFA device to an IAM user. For more information about creating and working with virtual MFA devices, see Using a virtual MFA device in the IAM User Guide .\n\nFor information about the maximum number of MFA devices you can create, see IAM and STS quotas in the IAM User Guide .\n\nWarning\n\nThe seed information contained in the QR code and the Base32 string should be treated like any other secret access information. In other words, protect the seed information as you would your Amazon Web Services access keys or your passwords. After you provision your virtual device, you should ensure that the information is destroyed following secure procedures.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-virtual-mfa-device\n[--path <value>]\n--virtual-mfa-device-name <value>\n[--tags <value>]\n--outfile <value>\n--bootstrap-method <value>\n",
      "command_options": [
        "[--path <value>]",
        "--virtual-mfa-device-name <value>",
        "[--tags <value>]",
        "--outfile <value>",
        "--bootstrap-method <value>"
      ],
      "command_options_description": "Options\n\n--path (string)\n\nThe path for the virtual MFA device. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/).\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--virtual-mfa-device-name (string)\n\nThe name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tags (list)\n\nA list of tags that you want to attach to the new IAM virtual MFA device. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--outfile (string) The output path and file name where the bootstrap information will be stored.\n\n--bootstrap-method (string) Method to use to seed the virtual MFA. Valid values are: QRCodePNG | Base32StringSeed\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nVirtualMFADevice -> (structure)\n\nA structure containing details about the new virtual MFA device.\n\nSerialNumber -> (string)\n\nThe serial number associated with VirtualMFADevice .\n\nBase32StringSeed -> (blob)\n\nThe base32 seed defined as specified in RFC3548 . The Base32StringSeed is base64-encoded.\n\nQRCodePNG -> (blob)\n\nA QR code PNG image that encodes otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String where $virtualMFADeviceName is one of the create call arguments. AccountName is the user name if set (otherwise, the account ID otherwise), and Base32String is the seed in base32 format. The Base32String value is base64-encoded.\n\nUser -> (structure)\n\nThe IAM user associated with this virtual MFA device.\n\nPath -> (string)\n\nThe path to the user. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nThe ARN of the policy used to set the permissions boundary for the user.\n\nUserName -> (string)\n\nThe friendly name identifying the user.\n\nUserId -> (string)\n\nThe stable and unique string identifying the user. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see IAM Identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user was created.\n\nPasswordLastUsed -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user’s password was last used to sign in to an Amazon Web Services website. For a list of Amazon Web Services websites that capture a user’s last sign-in time, see the Credential reports topic in the IAM User Guide . If a password is used more than once in a five-minute span, only the first use is returned in this field. If the field is null (no value), then it indicates that they never signed in with a password. This can be because:\n\nThe user never had a password.\n\nA password exists but has not been used since IAM started tracking this information on October 20, 2014.\n\nA null value does not mean that the user never had a password. Also, if the user does not currently have a password but had one in the past, then this field contains the date and time the most recent password was used.\n\nThis value is returned only in the GetUser and ListUsers operations.\n\nPermissionsBoundary -> (structure)\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are associated with the user. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nEnableDate -> (timestamp)\n\nThe date and time on which the virtual MFA device was enabled.\n\nTags -> (list)\n\nA list of tags that are attached to the virtual MFA device. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo create a virtual MFA device\n\nThis example creates a new virtual MFA device called BobsMFADevice. It creates a file that contains bootstrap information called QRCode.png and places it in the C:/ directory. The bootstrap method used in this example is QRCodePNG:\n\naws iam create-virtual-mfa-device --virtual-mfa-device-name BobsMFADevice --outfile C:/QRCode.png --bootstrap-method QRCodePNG\n\n\nOutput:\n\n{\n    \"VirtualMFADevice\": {\n        \"SerialNumber\": \"arn:aws:iam::210987654321:mfa/BobsMFADevice\"\n}\n\n\nFor more information, see Using Multi-Factor Authentication (MFA) Devices with AWS in the Using IAM guide."
    },
    {
      "command_name": "deactivate-mfa-device",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/deactivate-mfa-device.html",
      "command_description": "Description\n\nDeactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.\n\nFor more information about creating and working with virtual MFA devices, see Enabling a virtual multi-factor authentication (MFA) device in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deactivate-mfa-device\n--user-name <value>\n--serial-number <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--serial-number <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user whose MFA device you want to deactivate.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--serial-number (string)\n\nThe serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo deactivate an MFA device\n\nThis command deactivates the virtual MFA device with the ARN arn:aws:iam::210987654321:mfa/BobsMFADevice that is associated with the user Bob:\n\naws iam deactivate-mfa-device --user-name Bob --serial-number arn:aws:iam::210987654321:mfa/BobsMFADevice\n\n\nFor more information, see Using Multi-Factor Authentication (MFA) Devices with AWS in the Using IAM guide."
    },
    {
      "command_name": "delete-access-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-access-key.html",
      "command_description": "Description\n\nDeletes the access key pair associated with the specified IAM user.\n\nIf you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-access-key\n[--user-name <value>]\n--access-key-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "--access-key-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user whose access key pair you want to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--access-key-id (string)\n\nThe access key ID for the access key ID and secret access key you want to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an access key for an IAM user\n\nThe following delete-access-key command deletes the specified access key (access key ID and secret access key) for the IAM user named Bob:\n\naws iam delete-access-key --access-key-id AKIDPMS9RO4H3FEXAMPLE --user-name Bob\n\n\nTo list the access keys defined for an IAM user, use the list-access-keys command.\n\nFor more information, see Creating, Modifying, and Viewing User Security Credentials in the Using IAM guide."
    },
    {
      "command_name": "delete-account-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-account-alias.html",
      "command_description": "Description\n\nDeletes the specified Amazon Web Services account alias. For information about using an Amazon Web Services account alias, see Using an alias for your Amazon Web Services account ID in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-account-alias\n--account-alias <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--account-alias <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--account-alias (string)\n\nThe name of the account alias to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an account alias\n\nThe following delete-account-alias command removes the alias mycompany for the current account:\n\naws iam delete-account-alias --account-alias mycompany\n\n\nFor more information, see Using an Alias for Your AWS Account ID in the Using IAM guide."
    },
    {
      "command_name": "delete-account-password-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-account-password-policy.html",
      "command_description": "Description\n\nDeletes the password policy for the Amazon Web Services account. There are no parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-account-password-policy\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete the current account password policy\n\nThe following delete-account-password-policy command removes the password policy for the current account:\n\naws iam delete-account-password-policy\n\n\nFor more information, see Managing an IAM Password Policy in the Using IAM guide."
    },
    {
      "command_name": "delete-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-group.html",
      "command_description": "Description\n\nDeletes the specified IAM group. The group must not contain any users or have any attached policies.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-group\n--group-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name of the IAM group to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an IAM group\n\nThe following delete-group command deletes an IAM group named MyTestGroup:\n\naws iam delete-group --group-name MyTestGroup\n\n\nFor more information, see Deleting an IAM Group in the Using IAM guide."
    },
    {
      "command_name": "delete-group-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-group-policy.html",
      "command_description": "Description\n\nDeletes the specified inline policy that is embedded in the specified IAM group.\n\nA group can also have managed policies attached to it. To detach a managed policy from a group, use DetachGroupPolicy . For more information about policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-group-policy\n--group-name <value>\n--policy-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "--policy-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name (friendly name, not ARN) identifying the group that the policy is embedded in.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-name (string)\n\nThe name identifying the policy document to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a policy from an IAM group\n\nThe following delete-group-policy command deletes the policy named ExamplePolicy from the group named Admins:\n\naws iam delete-group-policy --group-name Admins --policy-name ExamplePolicy\n\n\nTo see the policies attached to a group, use the list-group-policies command.\n\nFor more information, see Managing IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "delete-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-instance-profile.html",
      "command_description": "Description\n\nDeletes the specified instance profile. The instance profile must not have an associated role.\n\nWarning\n\nMake sure that you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance.\n\nFor more information about instance profiles, see About instance profiles .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-instance-profile\n--instance-profile-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-profile-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-profile-name (string)\n\nThe name of the instance profile to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an instance profile\n\nThe following delete-instance-profile command deletes the instance profile named ExampleInstanceProfile:\n\naws iam delete-instance-profile --instance-profile-name ExampleInstanceProfile\n\n\nFor more information, see Instance Profiles in the Using IAM guide."
    },
    {
      "command_name": "delete-login-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-login-profile.html",
      "command_description": "Description\n\nDeletes the password for the specified IAM user, which terminates the user’s ability to access Amazon Web Services services through the Amazon Web Services Management Console.\n\nYou can use the CLI, the Amazon Web Services API, or the Users page in the IAM console to delete a password for any IAM user. You can use ChangePassword to update, but not delete, your own password in the My Security Credentials page in the Amazon Web Services Management Console.\n\nWarning\n\nDeleting a user’s password does not prevent a user from accessing Amazon Web Services through the command line interface or the API. To prevent all user access, you must also either make any access keys inactive or delete them. For more information about making keys inactive or deleting them, see UpdateAccessKey and DeleteAccessKey .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-login-profile\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user whose password you want to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a password for an IAM user\n\nThe following delete-login-profile command deletes the password for the IAM user named Bob:\n\naws iam delete-login-profile --user-name Bob\n\n\nFor more information, see Managing Passwords in the Using IAM guide."
    },
    {
      "command_name": "delete-open-id-connect-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-open-id-connect-provider.html",
      "command_description": "Description\n\nDeletes an OpenID Connect identity provider (IdP) resource object in IAM.\n\nDeleting an IAM OIDC provider resource does not update any roles that reference the provider as a principal in their trust policies. Any attempt to assume a role that references a deleted provider fails.\n\nThis operation is idempotent; it does not fail or return an error if you call the operation for a provider that does not exist.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-open-id-connect-provider\n--open-id-connect-provider-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--open-id-connect-provider-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--open-id-connect-provider-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM OpenID Connect provider resource object to delete. You can get a list of OpenID Connect provider resource ARNs by using the ListOpenIDConnectProviders operation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an IAM OpenID Connect identity provider\n\nThis example deletes the IAM OIDC provider that connects to the provider example.oidcprovider.com:\n\naws iam delete-open-id-connect-provider --open-id-connect-provider-arn arn:aws:iam::123456789012:oidc-provider/example.oidcprovider.com\n\n\nFor more information, see Using OpenID Connect Identity Providers in the Using IAM guide."
    },
    {
      "command_name": "delete-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-policy.html",
      "command_description": "Description\n\nDeletes the specified managed policy.\n\nBefore you can delete a managed policy, you must first detach the policy from all users, groups, and roles that it is attached to. In addition, you must delete all the policy’s versions. The following steps describe the process for deleting a managed policy:\n\nDetach the policy from all users, groups, and roles that the policy is attached to, using DetachUserPolicy , DetachGroupPolicy , or DetachRolePolicy . To list all the users, groups, and roles that a policy is attached to, use ListEntitiesForPolicy .\n\nDelete all versions of the policy using DeletePolicyVersion . To list the policy’s versions, use ListPolicyVersions . You cannot use DeletePolicyVersion to delete the version that is marked as the default version. You delete the policy’s default version in the next step of the process.\n\nDelete the policy (this automatically deletes the policy’s default version) using this operation.\n\nFor information about managed policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-policy\n--policy-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy you want to delete.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an IAM policy\n\nThis example deletes the policy whose ARN is arn:aws:iam::123456789012:policy/MySamplePolicy:\n\naws iam delete-policy --policy-arn arn:aws:iam::123456789012:policy/MySamplePolicy\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "delete-policy-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-policy-version.html",
      "command_description": "Description\n\nDeletes the specified version from the specified managed policy.\n\nYou cannot delete the default version from a policy using this operation. To delete the default version from a policy, use DeletePolicy . To find out which version of a policy is marked as the default version, use ListPolicyVersions .\n\nFor information about versions for managed policies, see Versioning for managed policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-policy-version\n--policy-arn <value>\n--version-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "--version-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy from which you want to delete a version.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--version-id (string)\n\nThe policy version to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters that consists of the lowercase letter ‘v’ followed by one or two digits, and optionally followed by a period ‘.’ and a string of letters and digits.\n\nFor more information about managed policy versions, see Versioning for managed policies in the IAM User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a version of a managed policy\n\nThis example deletes the version identified as v2 from the policy whose ARN is arn:aws:iam::123456789012:policy/MySamplePolicy:\n\naws iam delete-policy-version --policy-arn arn:aws:iam::123456789012:policy/MyPolicy --version-id v2\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "delete-role",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-role.html",
      "command_description": "Description\n\nDeletes the specified role. The role must not have any policies attached. For more information about roles, see Working with roles .\n\nWarning\n\nMake sure that you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-role\n--role-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the role to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an IAM role\n\nThe following delete-role command removes the role named Test-Role:\n\naws iam delete-role --role-name Test-Role\n\n\nBefore you can delete a role, you must remove the role from any instance profile (remove-role-from-instance-profile), detach any managed policies (detach-role-policy) and delete any inline policies that are attached to the role (delete-role-policy).\n\nFor more information, see Creating a Role and Instance Profiles in the Using IAM guide."
    },
    {
      "command_name": "delete-role-permissions-boundary",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-role-permissions-boundary.html",
      "command_description": "Description\n\nDeletes the permissions boundary for the specified IAM role.\n\nWarning\n\nDeleting the permissions boundary for a role might increase its permissions. For example, it might allow anyone who assumes the role to perform all the actions granted in its permissions policies.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-role-permissions-boundary\n--role-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name (friendly name, not ARN) of the IAM role from which you want to remove the permissions boundary.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a permissions boundary from an IAM role\n\nThe following delete-role-permissions-boundary example deletes the permissions boundary for the specified IAM role. To apply a permissions boundary to a role, use the put-role-permissions-boundary command.\n\naws iam delete-role-permissions-boundary \\\n    --role-name lambda-application-role\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-role-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-role-policy.html",
      "command_description": "Description\n\nDeletes the specified inline policy that is embedded in the specified IAM role.\n\nA role can also have managed policies attached to it. To detach a managed policy from a role, use DetachRolePolicy . For more information about policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-role-policy\n--role-name <value>\n--policy-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "--policy-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name (friendly name, not ARN) identifying the role that the policy is embedded in.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-name (string)\n\nThe name of the inline policy to delete from the specified IAM role.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a policy from an IAM role\n\nThe following delete-role-policy command removes the policy named ExamplePolicy from the role named Test-Role:\n\naws iam delete-role-policy --role-name Test-Role --policy-name ExamplePolicy\n\n\nFor more information, see Creating a Role in the Using IAM guide."
    },
    {
      "command_name": "delete-saml-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-saml-provider.html",
      "command_description": "Description\n\nDeletes a SAML provider resource in IAM.\n\nDeleting the provider resource from IAM does not update any roles that reference the SAML provider resource’s ARN as a principal in their trust policies. Any attempt to assume a role that references a non-existent provider resource ARN fails.\n\nNote\n\nThis operation requires Signature Version 4 .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-saml-provider\n--saml-provider-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--saml-provider-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--saml-provider-arn (string)\n\nThe Amazon Resource Name (ARN) of the SAML provider to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a SAML provider\n\nThis example deletes the IAM SAML 2.0 provider whose ARN is arn:aws:iam::123456789012:saml-provider/SAMLADFSProvider:\n\naws iam delete-saml-provider --saml-provider-arn arn:aws:iam::123456789012:saml-provider/SAMLADFSProvider\n\n\nFor more information, see Using SAML Providers in the Using IAM guide."
    },
    {
      "command_name": "delete-server-certificate",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-server-certificate.html",
      "command_description": "Description\n\nDeletes the specified server certificate.\n\nFor more information about working with server certificates, see Working with server certificates in the IAM User Guide . This topic also includes a list of Amazon Web Services services that can use the server certificates that you manage with IAM.\n\nWarning\n\nIf you are using a server certificate with Elastic Load Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn’t detect the deletion of bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more information, see DeleteLoadBalancerListeners in the Elastic Load Balancing API Reference .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-server-certificate\n--server-certificate-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-certificate-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-certificate-name (string)\n\nThe name of the server certificate you want to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a server certificate from your AWS account\n\nThe following delete-server-certificate command removes the specified server certificate from your AWS account. This command produces no output.\n\naws iam delete-server-certificate --server-certificate-name myUpdatedServerCertificate\n\n\nTo list the server certificates available in your AWS account, use the list-server-certificates command.\n\nFor more information, see Creating, Uploading, and Deleting Server Certificates in the IAM Users Guide."
    },
    {
      "command_name": "delete-service-linked-role",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-service-linked-role.html",
      "command_description": "Description\n\nSubmits a service-linked role deletion request and returns a DeletionTaskId , which you can use to check the status of the deletion. Before you call this operation, confirm that the role has no active sessions and that any resources used by the role in the linked service are deleted. If you call this operation more than once for the same service-linked role and an earlier deletion task is not complete, then the DeletionTaskId of the earlier request is returned.\n\nIf you submit a deletion request for a service-linked role whose linked service is still accessing a resource, then the deletion task fails. If it fails, the GetServiceLinkedRoleDeletionStatus operation returns the reason for the failure, usually including the resources that must be deleted. To delete the service-linked role, you must first remove those resources from the linked service and then submit the deletion request again. Resources are specific to the service that is linked to the role. For more information about removing resources from a service, see the Amazon Web Services documentation for your service.\n\nFor more information about service-linked roles, see Roles terms and concepts: Amazon Web Services service-linked role in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-service-linked-role\n--role-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the service-linked role to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeletionTaskId -> (string)\n\nThe deletion task identifier that you can use to check the status of the deletion. This identifier is returned in the format task/aws-service-role/<service-principal-name>/<role-name>/<task-uuid> .",
      "command_examples": "Examples\n\nTo delete a service-linked role\n\nThe following delete-service-linked-role example deletes the specified service-linked role that you no longer need. The deletion happens asynchronously. You can check the status of the deletion and confirm when it is done by using the get-service-linked-role-deletion-status command.\n\naws iam delete-service-linked-role --role-name AWSServiceRoleForLexBots\n\n\nOutput:\n\n{\n    \"DeletionTaskId\": \"task/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots/1a2b3c4d-1234-abcd-7890-abcdeEXAMPLE\"\n}\n\n\nFor more information, see Using Service-Linked Roles in the IAM User Guide."
    },
    {
      "command_name": "delete-service-specific-credential",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-service-specific-credential.html",
      "command_description": "Description\n\nDeletes the specified service-specific credential.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-service-specific-credential\n[--user-name <value>]\n--service-specific-credential-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "--service-specific-credential-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--service-specific-credential-id (string)\n\nThe unique identifier of the service-specific credential. You can get this value by calling ListServiceSpecificCredentials .\n\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nDelete a service-specific credential for the requesting user\n\nThe following delete-service-specific-credential example deletes the specified service-specific credential for the user making the request. The service-specific-credential-id is provided when you create the credential and you can retrieve it by using the list-service-specific-credentials command. This command produces no output.\n\naws iam delete-service-specific-credential --service-specific-credential-id ACCAEXAMPLE123EXAMPLE\n\n\nDelete a service-specific credential for a specified user\n\nThe following delete-service-specific-credential example deletes the specified service-specific credential for the specified user. The service-specific-credential-id is provided when you create the credential and you can retrieve it by using the list-service-specific-credentials command. This command produces no output.\n\naws iam delete-service-specific-credential --user-name sofia --service-specific-credential-id ACCAEXAMPLE123EXAMPLE\n\n\nFor more information, see Create Git Credentials for HTTPS Connections to CodeCommit in the AWS CodeCommit User Guide"
    },
    {
      "command_name": "delete-signing-certificate",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-signing-certificate.html",
      "command_description": "Description\n\nDeletes a signing certificate associated with the specified IAM user.\n\nIf you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated IAM users.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-signing-certificate\n[--user-name <value>]\n--certificate-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "--certificate-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user the signing certificate belongs to.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--certificate-id (string)\n\nThe ID of the signing certificate to delete.\n\nThe format of this parameter, as described by its regex pattern, is a string of characters that can be upper- or lower-cased letters or digits.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a signing certificate for an IAM user\n\nThe following delete-signing-certificate command deletes the specified signing certificate for the IAM user named Bob:\n\naws iam delete-signing-certificate --user-name Bob --certificate-id TA7SMP42TDN5Z26OBPJE7EXAMPLE\n\n\nTo get the ID for a signing certificate, use the list-signing-certificates command.\n\nFor more information, see Creating and Uploading a User Signing Certificate in the Using IAM guide."
    },
    {
      "command_name": "delete-ssh-public-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-ssh-public-key.html",
      "command_description": "Description\n\nDeletes the specified SSH public key.\n\nThe SSH public key deleted by this operation is used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see Set up CodeCommit for SSH connections in the CodeCommit User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-ssh-public-key\n--user-name <value>\n--ssh-public-key-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--ssh-public-key-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user associated with the SSH public key.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--ssh-public-key-id (string)\n\nThe unique identifier for the SSH public key.\n\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an SSH public keys attached to an IAM user\n\nThe following delete-ssh-public-key command deletes the specified SSH public key attached to the IAM user sofia. This command does not produce any output.\n\naws iam delete-ssh-public-key --user-name sofia --ssh-public-key-id APKA123456789EXAMPLE\n\n\nFor more information about SSH keys in IAM, see Use SSH Keys and SSH with CodeCommit in the AWS IAM User Guide."
    },
    {
      "command_name": "delete-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-user.html",
      "command_description": "Description\n\nDeletes the specified IAM user. Unlike the Amazon Web Services Management Console, when you delete a user programmatically, you must delete the items attached to the user manually, or the deletion fails. For more information, see Deleting an IAM user . Before attempting to delete a user, remove the following items:\n\nPassword ( DeleteLoginProfile )\n\nAccess keys ( DeleteAccessKey )\n\nSigning certificate ( DeleteSigningCertificate )\n\nSSH public key ( DeleteSSHPublicKey )\n\nGit credentials ( DeleteServiceSpecificCredential )\n\nMulti-factor authentication (MFA) device ( DeactivateMFADevice , DeleteVirtualMFADevice )\n\nInline policies ( DeleteUserPolicy )\n\nAttached managed policies ( DetachUserPolicy )\n\nGroup memberships ( RemoveUserFromGroup )\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-user\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an IAM user\n\nThe following delete-user command removes the IAM user named Bob from the current account:\n\naws iam delete-user --user-name Bob\n\n\nFor more information, see Deleting a User from Your AWS Account in the Using IAM guide."
    },
    {
      "command_name": "delete-user-permissions-boundary",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-user-permissions-boundary.html",
      "command_description": "Description\n\nDeletes the permissions boundary for the specified IAM user.\n\nWarning\n\nDeleting the permissions boundary for a user might increase its permissions by allowing the user to perform all the actions granted in its permissions policies.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-user-permissions-boundary\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name (friendly name, not ARN) of the IAM user from which you want to remove the permissions boundary.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a permissions boundary from an IAM user\n\nThe following delete-user-permissions-boundary example deletes the permissions boundary attached to the IAM user named intern. To apply a permissions boundary to a user, use the put-user-permissions-boundary command.\n\naws iam delete-user-permissions-boundary \\\n    --user-name intern\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-user-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-user-policy.html",
      "command_description": "Description\n\nDeletes the specified inline policy that is embedded in the specified IAM user.\n\nA user can also have managed policies attached to it. To detach a managed policy from a user, use DetachUserPolicy . For more information about policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-user-policy\n--user-name <value>\n--policy-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--policy-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name (friendly name, not ARN) identifying the user that the policy is embedded in.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-name (string)\n\nThe name identifying the policy document to delete.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a policy from an IAM user\n\nThe following delete-user-policy command removes the specified policy from the IAM user named Bob:\n\naws iam delete-user-policy --user-name Bob --policy-name ExamplePolicy\n\n\nTo get a list of policies for an IAM user, use the list-user-policies command.\n\nFor more information, see Adding a New User to Your AWS Account in the Using IAM guide."
    },
    {
      "command_name": "delete-virtual-mfa-device",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/delete-virtual-mfa-device.html",
      "command_description": "Description\n\nDeletes a virtual MFA device.\n\nNote\n\nYou must deactivate a user’s virtual MFA device before you can delete it. For information about deactivating MFA devices, see DeactivateMFADevice .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-virtual-mfa-device\n--serial-number <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--serial-number <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--serial-number (string)\n\nThe serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a virtual MFA device\n\nThe following delete-virtual-mfa-device command removes the specified MFA device from the current account:\n\naws iam delete-virtual-mfa-device --serial-number arn:aws:iam::123456789012:mfa/MFATest\n\n\nFor more information, see Using a Virtual MFA Device with AWS in the Using IAM guide."
    },
    {
      "command_name": "detach-group-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/detach-group-policy.html",
      "command_description": "Description\n\nRemoves the specified managed policy from the specified IAM group.\n\nA group can also have inline policies embedded with it. To delete an inline policy, use DeleteGroupPolicy . For information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detach-group-policy\n--group-name <value>\n--policy-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "--policy-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name (friendly name, not ARN) of the IAM group to detach the policy from.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy you want to detach.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo detach a policy from a group\n\nThis example removes the managed policy with the ARN arn:aws:iam::123456789012:policy/TesterAccessPolicy from the group called Testers:\n\naws iam detach-group-policy --group-name Testers --policy-arn arn:aws:iam::123456789012:policy/TesterAccessPolicy\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "detach-role-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/detach-role-policy.html",
      "command_description": "Description\n\nRemoves the specified managed policy from the specified role.\n\nA role can also have inline policies embedded with it. To delete an inline policy, use DeleteRolePolicy . For information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detach-role-policy\n--role-name <value>\n--policy-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "--policy-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name (friendly name, not ARN) of the IAM role to detach the policy from.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy you want to detach.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo detach a policy from a role\n\nThis example removes the managed policy with the ARN arn:aws:iam::123456789012:policy/FederatedTesterAccessPolicy from the role called FedTesterRole:\n\naws iam detach-role-policy --role-name FedTesterRole --policy-arn arn:aws:iam::123456789012:policy/FederatedTesterAccessPolicy\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "detach-user-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/detach-user-policy.html",
      "command_description": "Description\n\nRemoves the specified managed policy from the specified user.\n\nA user can also have inline policies embedded with it. To delete an inline policy, use DeleteUserPolicy . For information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detach-user-policy\n--user-name <value>\n--policy-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--policy-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name (friendly name, not ARN) of the IAM user to detach the policy from.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy you want to detach.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo detach a policy from a user\n\nThis example removes the managed policy with the ARN arn:aws:iam::123456789012:policy/TesterPolicy from the user Bob:\n\naws iam detach-user-policy --user-name Bob --policy-arn arn:aws:iam::123456789012:policy/TesterPolicy\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "enable-mfa-device",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/enable-mfa-device.html",
      "command_description": "Description\n\nEnables the specified MFA device and associates it with the specified IAM user. When enabled, the MFA device is required for every subsequent login by the IAM user associated with the device.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  enable-mfa-device\n--user-name <value>\n--serial-number <value>\n--authentication-code1 <value>\n--authentication-code2 <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--serial-number <value>",
        "--authentication-code1 <value>",
        "--authentication-code2 <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user for whom you want to enable the MFA device.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--serial-number (string)\n\nThe serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-\n\n--authentication-code1 (string)\n\nAn authentication code emitted by the device.\n\nThe format for this parameter is a string of six digits.\n\nWarning\n\nSubmit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you can resync the device .\n\n--authentication-code2 (string)\n\nA subsequent authentication code emitted by the device.\n\nThe format for this parameter is a string of six digits.\n\nWarning\n\nSubmit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you can resync the device .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo enable an MFA device\n\nAfter you use the create-virtual-mfa-device command to create a new virtual MFA device, you can assign the MFA device to a user. The following enable-mfa-device example assigns the MFA device with the serial number arn:aws:iam::210987654321:mfa/BobsMFADevice to the user Bob. The command also synchronizes the device with AWS by including the first two codes in sequence from the virtual MFA device.\n\naws iam enable-mfa-device \\\n    --user-name Bob \\\n    --serial-number arn:aws:iam::210987654321:mfa/BobsMFADevice \\\n    --authentication-code1 123456 \\\n    --authentication-code2 789012\n\n\nThis command produces no output.\n\nFor more information, see Enabling a Virtual MFA Device in the AWS Identity and Access Management User Guide."
    },
    {
      "command_name": "generate-credential-report",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/generate-credential-report.html",
      "command_description": "Description\n\nGenerates a credential report for the Amazon Web Services account. For more information about the credential report, see Getting credential reports in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  generate-credential-report\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nState -> (string)\n\nInformation about the state of the credential report.\n\nDescription -> (string)\n\nInformation about the credential report.",
      "command_examples": "Examples\n\nTo generate a credential report\n\nThe following example attempts to generate a credential report for the AWS account:\n\naws iam generate-credential-report\n\n\nOutput:\n\n{\n    \"State\":  \"STARTED\",\n        \"Description\": \"No report exists. Starting a new report generation task\"\n}\n\n\nFor more information, see Getting Credential Reports for Your AWS Account in the Using IAM guide."
    },
    {
      "command_name": "generate-organizations-access-report",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/generate-organizations-access-report.html",
      "command_description": "Description\n\nGenerates a report for service last accessed data for Organizations. You can generate a report for any entities (organization root, organizational unit, or account) or policies in your organization.\n\nTo call this operation, you must be signed in using your Organizations management account credentials. You can use your long-term IAM user or root user credentials, or temporary credentials from assuming an IAM role. SCPs must be enabled for your organization root. You must have the required IAM and Organizations permissions. For more information, see Refining permissions using service last accessed data in the IAM User Guide .\n\nYou can generate a service last accessed data report for entities by specifying only the entity’s path. This data includes a list of services that are allowed by any service control policies (SCPs) that apply to the entity.\n\nYou can generate a service last accessed data report for a policy by specifying an entity’s path and an optional Organizations policy ID. This data includes a list of services that are allowed by the specified SCP.\n\nFor each service in both report types, the data includes the most recent account activity that the policy allows to account principals in the entity or the entity’s children. For important information about the data, reporting period, permissions required, troubleshooting, and supported Regions see Reducing permissions using service last accessed data in the IAM User Guide .\n\nWarning\n\nThe data includes all attempts to access Amazon Web Services, not just the successful ones. This includes all attempts that were made using the Amazon Web Services Management Console, the Amazon Web Services API through any of the SDKs, or any of the command line tools. An unexpected entry in the service last accessed data does not mean that an account has been compromised, because the request might have been denied. Refer to your CloudTrail logs as the authoritative source for information about all API calls and whether they were successful or denied access. For more information, see Logging IAM events with CloudTrail in the IAM User Guide .\n\nThis operation returns a JobId . Use this parameter in the `` GetOrganizationsAccessReport `` operation to check the status of the report generation. To check the status of this request, use the JobId parameter in the `` GetOrganizationsAccessReport `` operation and test the JobStatus response parameter. When the job is complete, you can retrieve the report.\n\nTo generate a service last accessed data report for entities, specify an entity path without specifying the optional Organizations policy ID. The type of entity that you specify determines the data returned in the report.\n\nRoot – When you specify the organizations root as the entity, the resulting report lists all of the services allowed by SCPs that are attached to your root. For each service, the report includes data for all accounts in your organization except the management account, because the management account is not limited by SCPs.\n\nOU – When you specify an organizational unit (OU) as the entity, the resulting report lists all of the services allowed by SCPs that are attached to the OU and its parents. For each service, the report includes data for all accounts in the OU or its children. This data excludes the management account, because the management account is not limited by SCPs.\n\nmanagement account – When you specify the management account, the resulting report lists all Amazon Web Services services, because the management account is not limited by SCPs. For each service, the report includes data for only the management account.\n\nAccount – When you specify another account as the entity, the resulting report lists all of the services allowed by SCPs that are attached to the account and its parents. For each service, the report includes data for only the specified account.\n\nTo generate a service last accessed data report for policies, specify an entity path and the optional Organizations policy ID. The type of entity that you specify determines the data returned for each service.\n\nRoot – When you specify the root entity and a policy ID, the resulting report lists all of the services that are allowed by the specified SCP. For each service, the report includes data for all accounts in your organization to which the SCP applies. This data excludes the management account, because the management account is not limited by SCPs. If the SCP is not attached to any entities in the organization, then the report will return a list of services with no data.\n\nOU – When you specify an OU entity and a policy ID, the resulting report lists all of the services that are allowed by the specified SCP. For each service, the report includes data for all accounts in the OU or its children to which the SCP applies. This means that other accounts outside the OU that are affected by the SCP might not be included in the data. This data excludes the management account, because the management account is not limited by SCPs. If the SCP is not attached to the OU or one of its children, the report will return a list of services with no data.\n\nmanagement account – When you specify the management account, the resulting report lists all Amazon Web Services services, because the management account is not limited by SCPs. If you specify a policy ID in the CLI or API, the policy is ignored. For each service, the report includes data for only the management account.\n\nAccount – When you specify another account entity and a policy ID, the resulting report lists all of the services that are allowed by the specified SCP. For each service, the report includes data for only the specified account. This means that other accounts in the organization that are affected by the SCP might not be included in the data. If the SCP is not attached to the account, the report will return a list of services with no data.\n\nNote\n\nService last accessed data does not use other policy types when determining whether a principal could access a service. These other policy types include identity-based policies, resource-based policies, access control lists, IAM permissions boundaries, and STS assume role policies. It only applies SCP logic. For more about the evaluation of policy types, see Evaluating policies in the IAM User Guide .\n\nFor more information about service last accessed data, see Reducing policy scope by viewing user activity in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  generate-organizations-access-report\n--entity-path <value>\n[--organizations-policy-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--entity-path <value>",
        "[--organizations-policy-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--entity-path (string)\n\nThe path of the Organizations entity (root, OU, or account). You can build an entity path using the known structure of your organization. For example, assume that your account ID is 123456789012 and its parent OU ID is ou-rge0-awsabcde . The organization root ID is r-f6g7h8i9j0example and your organization ID is o-a1b2c3d4e5 . Your entity path is o-a1b2c3d4e5/r-f6g7h8i9j0example/ou-rge0-awsabcde/123456789012 .\n\n--organizations-policy-id (string)\n\nThe identifier of the Organizations service control policy (SCP). This parameter is optional.\n\nThis ID is used to generate information about when an account principal that is limited by the SCP attempted to access an Amazon Web Services service.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe job identifier that you can use in the GetOrganizationsAccessReport operation.",
      "command_examples": "Examples\n\nExample 1: To generate an access report for a root in an organization\n\nThe following generate-organizations-access-report example starts a background job to create an access report for the specified root in an organization. You can display the report after it’s created by running the get-organizations-access-report command.\n\naws iam generate-organizations-access-report \\\n    --entity-path o-4fxmplt198/r-c3xb\n\n\nOutput:\n\n{\n    \"JobId\": \"a8b6c06f-aaa4-8xmp-28bc-81da71836359\"\n}\n\n\nExample 2: To generate an access report for an account in an organization\n\nThe following generate-organizations-access-report example starts a background job to create an access report for account ID 123456789012 in the organization o-4fxmplt198. You can display the report after it’s created by running the get-organizations-access-report command.\n\naws iam generate-organizations-access-report \\\n    --entity-path o-4fxmplt198/r-c3xb/123456789012\n\n\nOutput:\n\n{\n    \"JobId\": \"14b6c071-75f6-2xmp-fb77-faf6fb4201d2\"\n}\n\n\nExample 3: To generate an access report for an account in an organizational unit in an organization\n\nThe following generate-organizations-access-report example starts a background job to create an access report for account ID 234567890123 in organizational unit ou-c3xb-lmu7j2yg in the organization o-4fxmplt198. You can display the report after it’s created by running the get-organizations-access-report command.:\n\naws iam generate-organizations-access-report \\\n    --entity-path o-4fxmplt198/r-c3xb/ou-c3xb-lmu7j2yg/234567890123\n\n\nOutput:\n\n{\n    \"JobId\": \"2eb6c2e6-0xmp-ec04-1425-c937916a64af\"\n}\n\n\nTo get details about roots and organizational units in your organization, use the organizations list-roots and organizations list-organizational-units-for-parent commands."
    },
    {
      "command_name": "generate-service-last-accessed-details",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/generate-service-last-accessed-details.html",
      "command_description": "Description\n\nGenerates a report that includes details about when an IAM resource (user, group, role, or policy) was last used in an attempt to access Amazon Web Services services. Recent activity usually appears within four hours. IAM reports activity for the last 365 days, or less if your Region began supporting this feature within the last year. For more information, see Regions where data is tracked .\n\nWarning\n\nThe service last accessed data includes all attempts to access an Amazon Web Services API, not just the successful ones. This includes all attempts that were made using the Amazon Web Services Management Console, the Amazon Web Services API through any of the SDKs, or any of the command line tools. An unexpected entry in the service last accessed data does not mean that your account has been compromised, because the request might have been denied. Refer to your CloudTrail logs as the authoritative source for information about all API calls and whether they were successful or denied access. For more information, see Logging IAM events with CloudTrail in the IAM User Guide .\n\nThe GenerateServiceLastAccessedDetails operation returns a JobId . Use this parameter in the following operations to retrieve the following details from your report:\n\nGetServiceLastAccessedDetails – Use this operation for users, groups, roles, or policies to list every Amazon Web Services service that the resource could access using permissions policies. For each service, the response includes information about the most recent access attempt. The JobId returned by GenerateServiceLastAccessedDetail must be used by the same role within a session, or by the same user when used to call GetServiceLastAccessedDetail .\n\nGetServiceLastAccessedDetailsWithEntities – Use this operation for groups and policies to list information about the associated entities (users or roles) that attempted to access a specific Amazon Web Services service.\n\nTo check the status of the GenerateServiceLastAccessedDetails request, use the JobId parameter in the same operations and test the JobStatus response parameter.\n\nFor additional information about the permissions policies that allow an identity (user, group, or role) to access specific services, use the ListPoliciesGrantingServiceAccess operation.\n\nNote\n\nService last accessed data does not use other policy types when determining whether a resource could access a service. These other policy types include resource-based policies, access control lists, Organizations policies, IAM permissions boundaries, and STS assume role policies. It only applies permissions policy logic. For more about the evaluation of policy types, see Evaluating policies in the IAM User Guide .\n\nFor more information about service and action last accessed data, see Reducing permissions using service last accessed data in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  generate-service-last-accessed-details\n--arn <value>\n[--granularity <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--granularity <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the IAM resource (user, group, role, or managed policy) used to generate information about when the resource was last used in an attempt to access an Amazon Web Services service.\n\n--granularity (string)\n\nThe level of detail that you want to generate. You can specify whether you want to generate information about the last attempt to access services or actions. If you specify service-level granularity, this operation generates only service data. If you specify action-level granularity, it generates service and action data. If you don’t include this optional parameter, the operation generates service data.\n\nPossible values:\n\nSERVICE_LEVEL\n\nACTION_LEVEL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe JobId that you can use in the GetServiceLastAccessedDetails or GetServiceLastAccessedDetailsWithEntities operations. The JobId returned by GenerateServiceLastAccessedDetail must be used by the same role within a session, or by the same user when used to call GetServiceLastAccessedDetail .",
      "command_examples": "Examples\n\nTo generate a service access report\n\nThe following generate-service-last-accessed-details example starts a background job to generate a report that lists the services accessed by IAM users and other entities with a custom policy named intern-boundary. You can display the report after it is created by running the get-service-last-accessed-details command.\n\naws iam generate-service-last-accessed-details \\\n    --arn arn:aws:iam::123456789012:policy/intern-boundary\n\n\nOutput:\n\n{\n    \"JobId\": \"2eb6c2b8-7b4c-3xmp-3c13-03b72c8cdfdc\"\n}\n\n\nThe following generate-service-last-accessed-details example starts a background job to generate a report that lists the services accessed by IAM users and other entities with the AWS managed AdministratorAccess policy. You can display the report after it is created by running the get-service-last-accessed-details command.:\n\naws iam generate-service-last-accessed-details \\\n    --arn arn:aws:iam::aws:policy/AdministratorAccess\n\n\nOutput:\n\n{\n    \"JobId\": \"78b6c2ba-d09e-6xmp-7039-ecde30b26916\"\n}\n"
    },
    {
      "command_name": "get-access-key-last-used",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-access-key-last-used.html",
      "command_description": "Description\n\nRetrieves information about when the specified access key was last used. The information includes the date and time of last use, along with the Amazon Web Services service and Region that were specified in the last request made with that key.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-access-key-last-used\n--access-key-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--access-key-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--access-key-id (string)\n\nThe identifier of an access key.\n\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUserName -> (string)\n\nThe name of the IAM user that owns this access key.\n\nAccessKeyLastUsed -> (structure)\n\nContains information about the last time the access key was used.\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the access key was most recently used. This field is null in the following situations:\n\nThe user does not have an access key.\n\nAn access key exists but has not been used since IAM began tracking this information.\n\nThere is no sign-in data associated with the user.\n\nServiceName -> (string)\n\nThe name of the Amazon Web Services service with which this access key was most recently used. The value of this field is “N/A” in the following situations:\n\nThe user does not have an access key.\n\nAn access key exists but has not been used since IAM started tracking this information.\n\nThere is no sign-in data associated with the user.\n\nRegion -> (string)\n\nThe Amazon Web Services Region where this access key was most recently used. The value for this field is “N/A” in the following situations:\n\nThe user does not have an access key.\n\nAn access key exists but has not been used since IAM began tracking this information.\n\nThere is no sign-in data associated with the user.\n\nFor more information about Amazon Web Services Regions, see Regions and endpoints in the Amazon Web Services General Reference.",
      "command_examples": "Examples\n\nTo retrieve information about when the specified access key was last used\n\nThe following example retrieves information about when the access key ABCDEXAMPLE was last used:\n\naws iam get-access-key-last-used --access-key-id ABCDEXAMPLE\n\n\nOutput:\n\n{\n  \"UserName\":  \"Bob\",\n  \"AccessKeyLastUsed\": {\n      \"Region\": \"us-east-1\",\n      \"ServiceName\": \"iam\",\n      \"LastUsedDate\": \"2015-06-16T22:45:00Z\"\n  }\n}\n\n\nFor more information, see Managing Access Keys for IAM Users in the Using IAM guide."
    },
    {
      "command_name": "get-account-authorization-details",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-account-authorization-details.html",
      "command_description": "Description\n\nRetrieves information about all IAM users, groups, roles, and policies in your Amazon Web Services account, including their relationships to one another. Use this operation to obtain a snapshot of the configuration of IAM permissions (users, groups, roles, and policies) in your account.\n\nNote\n\nPolicies returned by this operation are URL-encoded compliant with RFC 3986 . You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the decode method of the java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs provide similar functionality.\n\nYou can optionally filter the results using the Filter parameter. You can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-account-authorization-details is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: UserDetailList, GroupDetailList, RoleDetailList, Policies",
      "command_synopsis": "Synopsis\n  get-account-authorization-details\n[--filter <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (list)\n\nA list of entity types used to filter the results. Only the entities that match the types you specify are included in the output. Use the value LocalManagedPolicy to include customer managed policies.\n\nThe format for this parameter is a comma-separated (if more than one) list of strings. Each string value in the list must be one of the valid values listed below.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  User\n  Role\n  Group\n  LocalManagedPolicy\n  AWSManagedPolicy\n\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUserDetailList -> (list)\n\nA list containing information about IAM users.\n\n(structure)\n\nContains information about an IAM user, including all the user’s policies and all the IAM groups the user is in.\n\nThis data type is used as a response element in the GetAccountAuthorizationDetails operation.\n\nPath -> (string)\n\nThe path to the user. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nUserName -> (string)\n\nThe friendly name identifying the user.\n\nUserId -> (string)\n\nThe stable and unique string identifying the user. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user was created.\n\nUserPolicyList -> (list)\n\nA list of the inline policies embedded in the user.\n\n(structure)\n\nContains information about an IAM policy, including the policy document.\n\nThis data type is used as a response element in the GetAccountAuthorizationDetails operation.\n\nPolicyName -> (string)\n\nThe name of the policy.\n\nPolicyDocument -> (string)\n\nThe policy document.\n\nGroupList -> (list)\n\nA list of IAM groups that the user is in.\n\n(string)\n\nAttachedManagedPolicies -> (list)\n\nA list of the managed policies attached to the user.\n\n(structure)\n\nContains information about an attached policy.\n\nAn attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the ListAttachedGroupPolicies , ListAttachedRolePolicies , ListAttachedUserPolicies , and GetAccountAuthorizationDetails operations.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nPolicyName -> (string)\n\nThe friendly name of the attached policy.\n\nPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the user.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are associated with the user. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nGroupDetailList -> (list)\n\nA list containing information about IAM groups.\n\n(structure)\n\nContains information about an IAM group, including all of the group’s policies.\n\nThis data type is used as a response element in the GetAccountAuthorizationDetails operation.\n\nPath -> (string)\n\nThe path to the group. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nGroupName -> (string)\n\nThe friendly name that identifies the group.\n\nGroupId -> (string)\n\nThe stable and unique string identifying the group. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the group was created.\n\nGroupPolicyList -> (list)\n\nA list of the inline policies embedded in the group.\n\n(structure)\n\nContains information about an IAM policy, including the policy document.\n\nThis data type is used as a response element in the GetAccountAuthorizationDetails operation.\n\nPolicyName -> (string)\n\nThe name of the policy.\n\nPolicyDocument -> (string)\n\nThe policy document.\n\nAttachedManagedPolicies -> (list)\n\nA list of the managed policies attached to the group.\n\n(structure)\n\nContains information about an attached policy.\n\nAn attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the ListAttachedGroupPolicies , ListAttachedRolePolicies , ListAttachedUserPolicies , and GetAccountAuthorizationDetails operations.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nPolicyName -> (string)\n\nThe friendly name of the attached policy.\n\nPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nRoleDetailList -> (list)\n\nA list containing information about IAM roles.\n\n(structure)\n\nContains information about an IAM role, including all of the role’s policies.\n\nThis data type is used as a response element in the GetAccountAuthorizationDetails operation.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe trust policy that grants permission to assume the role.\n\nInstanceProfileList -> (list)\n\nA list of instance profiles that contain this role.\n\n(structure)\n\nContains information about an instance profile.\n\nThis data type is used as a response element in the following operations:\n\nCreateInstanceProfile\n\nGetInstanceProfile\n\nListInstanceProfiles\n\nListInstanceProfilesForRole\n\nPath -> (string)\n\nThe path to the instance profile. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nInstanceProfileName -> (string)\n\nThe name identifying the instance profile.\n\nInstanceProfileId -> (string)\n\nThe stable and unique string identifying the instance profile. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date when the instance profile was created.\n\nRoles -> (list)\n\nThe role associated with the instance profile.\n\n(structure)\n\nContains information about an IAM role. This structure is returned as a response element in several API operations that interact with roles.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide guide.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe policy that grants an entity permission to assume the role.\n\nDescription -> (string)\n\nA description of the role that you provide.\n\nMaxSessionDuration -> (integer)\n\nThe maximum session duration (in seconds) for the specified role. Anyone who uses the CLI, or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter.\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.\n\nTags -> (list)\n\nA list of tags that are attached to the instance profile. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRolePolicyList -> (list)\n\nA list of inline policies embedded in the role. These policies are the role’s access (permissions) policies.\n\n(structure)\n\nContains information about an IAM policy, including the policy document.\n\nThis data type is used as a response element in the GetAccountAuthorizationDetails operation.\n\nPolicyName -> (string)\n\nThe name of the policy.\n\nPolicyDocument -> (string)\n\nThe policy document.\n\nAttachedManagedPolicies -> (list)\n\nA list of managed policies attached to the role. These policies are the role’s access (permissions) policies.\n\n(structure)\n\nContains information about an attached policy.\n\nAn attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the ListAttachedGroupPolicies , ListAttachedRolePolicies , ListAttachedUserPolicies , and GetAccountAuthorizationDetails operations.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nPolicyName -> (string)\n\nThe friendly name of the attached policy.\n\nPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.\n\nPolicies -> (list)\n\nA list containing information about managed policies.\n\n(structure)\n\nContains information about a managed policy, including the policy’s ARN, versions, and the number of principal entities (users, groups, and roles) that the policy is attached to.\n\nThis data type is used as a response element in the GetAccountAuthorizationDetails operation.\n\nFor more information about managed policies, see Managed policies and inline policies in the IAM User Guide .\n\nPolicyName -> (string)\n\nThe friendly name (not ARN) identifying the policy.\n\nPolicyId -> (string)\n\nThe stable and unique string identifying the policy.\n\nFor more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nPath -> (string)\n\nThe path to the policy.\n\nFor more information about paths, see IAM identifiers in the IAM User Guide .\n\nDefaultVersionId -> (string)\n\nThe identifier for the version of the policy that is set as the default (operative) version.\n\nFor more information about policy versions, see Versioning for managed policies in the IAM User Guide .\n\nAttachmentCount -> (integer)\n\nThe number of principal entities (users, groups, and roles) that the policy is attached to.\n\nPermissionsBoundaryUsageCount -> (integer)\n\nThe number of entities (users and roles) for which the policy is used as the permissions boundary.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nIsAttachable -> (boolean)\n\nSpecifies whether the policy can be attached to an IAM user, group, or role.\n\nDescription -> (string)\n\nA friendly description of the policy.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy was created.\n\nUpdateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy was last updated.\n\nWhen a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.\n\nPolicyVersionList -> (list)\n\nA list containing information about the versions of the policy.\n\n(structure)\n\nContains information about a version of a managed policy.\n\nThis data type is used as a response element in the CreatePolicyVersion , GetPolicyVersion , ListPolicyVersions , and GetAccountAuthorizationDetails operations.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nDocument -> (string)\n\nThe policy document.\n\nThe policy document is returned in the response to the GetPolicyVersion and GetAccountAuthorizationDetails operations. It is not returned in the response to the CreatePolicyVersion or ListPolicyVersions operations.\n\nThe policy document returned in this structure is URL-encoded compliant with RFC 3986 . You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the decode method of the java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs provide similar functionality.\n\nVersionId -> (string)\n\nThe identifier for the policy version.\n\nPolicy version identifiers always begin with v (always lowercase). When a policy is created, the first policy version is v1 .\n\nIsDefaultVersion -> (boolean)\n\nSpecifies whether the policy version is set as the policy’s default version.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy version was created.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nThe following get-account-authorization-details command returns information about all IAM users, groups, roles, and policies in the AWS account:\n\naws iam get-account-authorization-details\n\n\nOutput:\n\n{\n    \"RoleDetailList\": [\n        {\n            \"AssumeRolePolicyDocument\": {\n                \"Version\": \"2012-10-17\",\n                \"Statement\": [\n                    {\n                        \"Sid\": \"\",\n                        \"Effect\": \"Allow\",\n                        \"Principal\": {\n                            \"Service\": \"ec2.amazonaws.com\"\n                        },\n                        \"Action\": \"sts:AssumeRole\"\n                    }\n                ]\n            },\n            \"RoleId\": \"AROA1234567890EXAMPLE\",\n            \"CreateDate\": \"2014-07-30T17:09:20Z\",\n            \"InstanceProfileList\": [\n                {\n                    \"InstanceProfileId\": \"AIPA1234567890EXAMPLE\",\n                    \"Roles\": [\n                        {\n                            \"AssumeRolePolicyDocument\": {\n                                \"Version\": \"2012-10-17\",\n                                \"Statement\": [\n                                    {\n                                        \"Sid\": \"\",\n                                        \"Effect\": \"Allow\",\n                                        \"Principal\": {\n                                            \"Service\": \"ec2.amazonaws.com\"\n                                        },\n                                        \"Action\": \"sts:AssumeRole\"\n                                    }\n                                ]\n                            },\n                            \"RoleId\": \"AROA1234567890EXAMPLE\",\n                            \"CreateDate\": \"2014-07-30T17:09:20Z\",\n                            \"RoleName\": \"EC2role\",\n                            \"Path\": \"/\",\n                            \"Arn\": \"arn:aws:iam::123456789012:role/EC2role\"\n                        }\n                    ],\n                    \"CreateDate\": \"2014-07-30T17:09:20Z\",\n                    \"InstanceProfileName\": \"EC2role\",\n                    \"Path\": \"/\",\n                    \"Arn\": \"arn:aws:iam::123456789012:instance-profile/EC2role\"\n                }\n            ],\n            \"RoleName\": \"EC2role\",\n            \"Path\": \"/\",\n            \"AttachedManagedPolicies\": [\n                {\n                    \"PolicyName\": \"AmazonS3FullAccess\",\n                    \"PolicyArn\": \"arn:aws:iam::aws:policy/AmazonS3FullAccess\"\n                },\n                {\n                    \"PolicyName\": \"AmazonDynamoDBFullAccess\",\n                    \"PolicyArn\": \"arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess\"\n                }\n            ],\n            \"RoleLastUsed\": {\n                \"Region\": \"us-west-2\",\n                \"LastUsedDate\": \"2019-11-13T17:30:00Z\"\n            },\n            \"RolePolicyList\": [],\n            \"Arn\": \"arn:aws:iam::123456789012:role/EC2role\"\n        }\n    ],\n    \"GroupDetailList\": [\n        {\n            \"GroupId\": \"AIDA1234567890EXAMPLE\",\n            \"AttachedManagedPolicies\": {\n                \"PolicyName\": \"AdministratorAccess\",\n                \"PolicyArn\": \"arn:aws:iam::aws:policy/AdministratorAccess\"\n            },\n            \"GroupName\": \"Admins\",\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::123456789012:group/Admins\",\n            \"CreateDate\": \"2013-10-14T18:32:24Z\",\n            \"GroupPolicyList\": []\n        },\n        {\n            \"GroupId\": \"AIDA1234567890EXAMPLE\",\n            \"AttachedManagedPolicies\": {\n                \"PolicyName\": \"PowerUserAccess\",\n                \"PolicyArn\": \"arn:aws:iam::aws:policy/PowerUserAccess\"\n            },\n            \"GroupName\": \"Dev\",\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::123456789012:group/Dev\",\n            \"CreateDate\": \"2013-10-14T18:33:55Z\",\n            \"GroupPolicyList\": []\n        },\n        {\n            \"GroupId\": \"AIDA1234567890EXAMPLE\",\n            \"AttachedManagedPolicies\": [],\n            \"GroupName\": \"Finance\",\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::123456789012:group/Finance\",\n            \"CreateDate\": \"2013-10-14T18:57:48Z\",\n            \"GroupPolicyList\": [\n                {\n                    \"PolicyName\": \"policygen-201310141157\",\n                    \"PolicyDocument\": {\n                        \"Version\": \"2012-10-17\",\n                        \"Statement\": [\n                            {\n                                \"Action\": \"aws-portal:*\",\n                                \"Sid\": \"Stmt1381777017000\",\n                                \"Resource\": \"*\",\n                                \"Effect\": \"Allow\"\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ],\n    \"UserDetailList\": [\n        {\n            \"UserName\": \"Alice\",\n            \"GroupList\": [\n                \"Admins\"\n            ],\n            \"CreateDate\": \"2013-10-14T18:32:24Z\",\n            \"UserId\": \"AIDA1234567890EXAMPLE\",\n            \"UserPolicyList\": [],\n            \"Path\": \"/\",\n            \"AttachedManagedPolicies\": [],\n            \"Arn\": \"arn:aws:iam::123456789012:user/Alice\"\n        },\n        {\n            \"UserName\": \"Bob\",\n            \"GroupList\": [\n                \"Admins\"\n            ],\n            \"CreateDate\": \"2013-10-14T18:32:25Z\",\n            \"UserId\": \"AIDA1234567890EXAMPLE\",\n            \"UserPolicyList\": [\n                {\n                    \"PolicyName\": \"DenyBillingAndIAMPolicy\",\n                    \"PolicyDocument\": {\n                        \"Version\": \"2012-10-17\",\n                        \"Statement\": {\n                            \"Effect\": \"Deny\",\n                            \"Action\": [\n                                \"aws-portal:*\",\n                                \"iam:*\"\n                            ],\n                            \"Resource\": \"*\"\n                        }\n                    }\n                }\n            ],\n            \"Path\": \"/\",\n            \"AttachedManagedPolicies\": [],\n            \"Arn\": \"arn:aws:iam::123456789012:user/Bob\"\n        },\n        {\n            \"UserName\": \"Charlie\",\n            \"GroupList\": [\n                \"Dev\"\n            ],\n            \"CreateDate\": \"2013-10-14T18:33:56Z\",\n            \"UserId\": \"AIDA1234567890EXAMPLE\",\n            \"UserPolicyList\": [],\n            \"Path\": \"/\",\n            \"AttachedManagedPolicies\": [],\n            \"Arn\": \"arn:aws:iam::123456789012:user/Charlie\"\n        }\n    ],\n    \"Policies\": [\n        {\n            \"PolicyName\": \"create-update-delete-set-managed-policies\",\n            \"CreateDate\": \"2015-02-06T19:58:34Z\",\n            \"AttachmentCount\": 1,\n            \"IsAttachable\": true,\n            \"PolicyId\": \"ANPA1234567890EXAMPLE\",\n            \"DefaultVersionId\": \"v1\",\n            \"PolicyVersionList\": [\n                {\n                    \"CreateDate\": \"2015-02-06T19:58:34Z\",\n                    \"VersionId\": \"v1\",\n                    \"Document\": {\n                        \"Version\": \"2012-10-17\",\n                        \"Statement\": {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"iam:CreatePolicy\",\n                                \"iam:CreatePolicyVersion\",\n                                \"iam:DeletePolicy\",\n                                \"iam:DeletePolicyVersion\",\n                                \"iam:GetPolicy\",\n                                \"iam:GetPolicyVersion\",\n                                \"iam:ListPolicies\",\n                                \"iam:ListPolicyVersions\",\n                                \"iam:SetDefaultPolicyVersion\"\n                            ],\n                            \"Resource\": \"*\"\n                        }\n                    },\n                    \"IsDefaultVersion\": true\n                }\n            ],\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::123456789012:policy/create-update-delete-set-managed-policies\",\n            \"UpdateDate\": \"2015-02-06T19:58:34Z\"\n        },\n        {\n            \"PolicyName\": \"S3-read-only-specific-bucket\",\n            \"CreateDate\": \"2015-01-21T21:39:41Z\",\n            \"AttachmentCount\": 1,\n            \"IsAttachable\": true,\n            \"PolicyId\": \"ANPA1234567890EXAMPLE\",\n            \"DefaultVersionId\": \"v1\",\n            \"PolicyVersionList\": [\n                {\n                    \"CreateDate\": \"2015-01-21T21:39:41Z\",\n                    \"VersionId\": \"v1\",\n                    \"Document\": {\n                        \"Version\": \"2012-10-17\",\n                        \"Statement\": [\n                            {\n                                \"Effect\": \"Allow\",\n                                \"Action\": [\n                                    \"s3:Get*\",\n                                    \"s3:List*\"\n                                ],\n                                \"Resource\": [\n                                    \"arn:aws:s3:::example-bucket\",\n                                    \"arn:aws:s3:::example-bucket/*\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"IsDefaultVersion\": true\n                }\n            ],\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::123456789012:policy/S3-read-only-specific-bucket\",\n            \"UpdateDate\": \"2015-01-21T23:39:41Z\"\n        },\n        {\n            \"PolicyName\": \"AmazonEC2FullAccess\",\n            \"CreateDate\": \"2015-02-06T18:40:15Z\",\n            \"AttachmentCount\": 1,\n            \"IsAttachable\": true,\n            \"PolicyId\": \"ANPA1234567890EXAMPLE\",\n            \"DefaultVersionId\": \"v1\",\n            \"PolicyVersionList\": [\n                {\n                    \"CreateDate\": \"2014-10-30T20:59:46Z\",\n                    \"VersionId\": \"v1\",\n                    \"Document\": {\n                        \"Version\": \"2012-10-17\",\n                        \"Statement\": [\n                            {\n                                \"Action\": \"ec2:*\",\n                                \"Effect\": \"Allow\",\n                                \"Resource\": \"*\"\n                            },\n                            {\n                                \"Effect\": \"Allow\",\n                                \"Action\": \"elasticloadbalancing:*\",\n                                \"Resource\": \"*\"\n                            },\n                            {\n                                \"Effect\": \"Allow\",\n                                \"Action\": \"cloudwatch:*\",\n                                \"Resource\": \"*\"\n                            },\n                            {\n                                \"Effect\": \"Allow\",\n                                \"Action\": \"autoscaling:*\",\n                                \"Resource\": \"*\"\n                            }\n                        ]\n                    },\n                    \"IsDefaultVersion\": true\n                }\n            ],\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::aws:policy/AmazonEC2FullAccess\",\n            \"UpdateDate\": \"2015-02-06T18:40:15Z\"\n        }\n    ],\n    \"Marker\": \"EXAMPLEkakv9BCuUNFDtxWSyfzetYwEx2ADc8dnzfvERF5S6YMvXKx41t6gCl/eeaCX3Jo94/bKqezEAg8TEVS99EKFLxm3jtbpl25FDWEXAMPLE\",\n    \"IsTruncated\": true\n}\n"
    },
    {
      "command_name": "get-account-password-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-account-password-policy.html",
      "command_description": "Description\n\nRetrieves the password policy for the Amazon Web Services account. This tells you the complexity requirements and mandatory rotation periods for the IAM user passwords in your account. For more information about using a password policy, see Managing an IAM password policy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-account-password-policy\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPasswordPolicy -> (structure)\n\nA structure that contains details about the account’s password policy.\n\nMinimumPasswordLength -> (integer)\n\nMinimum length to require for IAM user passwords.\n\nRequireSymbols -> (boolean)\n\nSpecifies whether IAM user passwords must contain at least one of the following symbols:\n\n! @ # $ % ^ & * ( ) _ + - = [ ] { } | ‘\n\nRequireNumbers -> (boolean)\n\nSpecifies whether IAM user passwords must contain at least one numeric character (0 to 9).\n\nRequireUppercaseCharacters -> (boolean)\n\nSpecifies whether IAM user passwords must contain at least one uppercase character (A to Z).\n\nRequireLowercaseCharacters -> (boolean)\n\nSpecifies whether IAM user passwords must contain at least one lowercase character (a to z).\n\nAllowUsersToChangePassword -> (boolean)\n\nSpecifies whether IAM users are allowed to change their own password.\n\nExpirePasswords -> (boolean)\n\nIndicates whether passwords in the account expire. Returns true if MaxPasswordAge contains a value greater than 0. Returns false if MaxPasswordAge is 0 or not present.\n\nMaxPasswordAge -> (integer)\n\nThe number of days that an IAM user password is valid.\n\nPasswordReusePrevention -> (integer)\n\nSpecifies the number of previous passwords that IAM users are prevented from reusing.\n\nHardExpiry -> (boolean)\n\nSpecifies whether IAM users are prevented from setting a new password after their password has expired.",
      "command_examples": "Examples\n\nTo see the current account password policy\n\nThe following get-account-password-policy command displays details about the password policy for the current account:\n\naws iam get-account-password-policy\n\n\nOutput:\n\n{\n    \"PasswordPolicy\": {\n        \"AllowUsersToChangePassword\": false,\n        \"RequireLowercaseCharacters\": false,\n        \"RequireUppercaseCharacters\": false,\n        \"MinimumPasswordLength\": 8,\n        \"RequireNumbers\": true,\n        \"RequireSymbols\": true\n    }\n}\n\n\nIf no password policy is defined for the account, the command returns a NoSuchEntity error.\n\nFor more information, see Managing an IAM Password Policy in the Using IAM guide."
    },
    {
      "command_name": "get-account-summary",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-account-summary.html",
      "command_description": "Description\n\nRetrieves information about IAM entity usage and IAM quotas in the Amazon Web Services account.\n\nFor information about IAM quotas, see IAM and STS quotas in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-account-summary\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSummaryMap -> (map)\n\nA set of key–value pairs containing information about IAM entity usage and IAM quotas.\n\nkey -> (string)\n\nvalue -> (integer)",
      "command_examples": "Examples\n\nTo get information about IAM entity usage and IAM quotas in the current account\n\nThe following get-account-summary command returns information about the current IAM entity usage and current IAM entity quotas in the account:\n\naws iam get-account-summary\n\n\nOutput:\n\n{\n  \"SummaryMap\": {\n      \"UsersQuota\": 5000,\n      \"GroupsQuota\": 100,\n      \"InstanceProfiles\": 6,\n      \"SigningCertificatesPerUserQuota\": 2,\n      \"AccountAccessKeysPresent\": 0,\n      \"RolesQuota\": 250,\n      \"RolePolicySizeQuota\": 10240,\n      \"AccountSigningCertificatesPresent\": 0,\n      \"Users\": 27,\n      \"ServerCertificatesQuota\": 20,\n      \"ServerCertificates\": 0,\n      \"AssumeRolePolicySizeQuota\": 2048,\n      \"Groups\": 7,\n      \"MFADevicesInUse\": 1,\n      \"Roles\": 3,\n      \"AccountMFAEnabled\": 1,\n      \"MFADevices\": 3,\n      \"GroupsPerUserQuota\": 10,\n      \"GroupPolicySizeQuota\": 5120,\n      \"InstanceProfilesQuota\": 100,\n      \"AccessKeysPerUserQuota\": 2,\n      \"Providers\": 0,\n      \"UserPolicySizeQuota\": 2048\n  }\n}\n\n\nFor more information about entity limitations, see Limitations on IAM Entities in the Using IAM guide."
    },
    {
      "command_name": "get-context-keys-for-custom-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-context-keys-for-custom-policy.html",
      "command_description": "Description\n\nGets a list of all of the context keys referenced in the input policies. The policies are supplied as a list of one or more strings. To get the context keys from policies associated with an IAM user, group, or role, use GetContextKeysForPrincipalPolicy .\n\nContext keys are variables maintained by Amazon Web Services and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a value specified in an IAM policy. Use GetContextKeysForCustomPolicy to understand what key names and values you must supply when you call SimulateCustomPolicy . Note that all parameters are shown in unencoded form here for clarity but must be URL encoded to be included as a part of a real HTML request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-context-keys-for-custom-policy\n--policy-input-list <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-input-list <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-input-list (list)\n\nA list of policies for which you want the list of context keys referenced in those policies. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nContextKeyNames -> (list)\n\nThe list of context keys that are referenced in the input policies.\n\n(string)",
      "command_examples": "Examples\n\nExample 1: To list the context keys referenced by one or more custom JSON policies provided as a parameter on the command line\n\nThe following get-context-keys-for-custom-policy command parses each supplied policy and lists the context keys used by those policies. Use this command to identify which context key values you must supply to successfully use the policy simulator commands simulate-custom-policy and simulate-custom-policy. You can also retrieve the list of context keys used by all policies associated by an IAM user or role by using the get-context-keys-for-custom-policy command. Parameter values that begin with file:// instruct the command to read the file and use the contents as the value for the parameter instead of the file name itself.:\n\naws iam get-context-keys-for-custom-policy \\\n    --policy-input-list '{\"Version\":\"2012-10-17\",\"Statement\":{\"Effect\":\"Allow\",\"Action\":\"dynamodb:*\",\"Resource\":\"arn:aws:dynamodb:us-west-2:123456789012:table/${aws:username}\",\"Condition\":{\"DateGreaterThan\":{\"aws:CurrentTime\":\"2015-08-16T12:00:00Z\"}}}}'\n\n\nOutput:\n\n{\n    \"ContextKeyNames\": [\n        \"aws:username\",\n        \"aws:CurrentTime\"\n    ]\n}\n\n\nExample 2: To list the context keys referenced by one or more custom JSON policies provided as a file input\n\nThe following get-context-keys-for-custom-policy command is the same as the previous example, except that the policies are provided in a file instead of as a parameter. Because the command expects a JSON list of strings, and not a list of JSON structures, the file must be structured as follows, although you can collapse it into one one:\n\n[\n    \"Policy1\",\n    \"Policy2\"\n]\n\n\nSo for example, a file that contains the policy from the previous example must look like the following. You must escape each embedded double-quote inside the policy string by preceding it with a backslash ‘’.\n\n[ \"{\\\"Version\\\": \\\"2012-10-17\\\", \\\"Statement\\\": {\\\"Effect\\\": \\\"Allow\\\", \\\"Action\\\": \\\"dynamodb:*\\\", \\\"Resource\\\": \\\"arn:aws:dynamodb:us-west-2:128716708097:table/${aws:username}\\\", \\\"Condition\\\": {\\\"DateGreaterThan\\\": {\\\"aws:CurrentTime\\\": \\\"2015-08-16T12:00:00Z\\\"}}}}\" ]\n\n\nThis file can then be submitted to the following command:\n\naws iam get-context-keys-for-custom-policy --policy-input-list file://policyfile.json\n\n\nOutput:\n\n{\n    \"ContextKeyNames\": [\n        \"aws:username\",\n        \"aws:CurrentTime\"\n    ]\n}\n\n\nFor more information, see Using the IAM Policy Simulator (AWS CLI and AWS API) in the Using IAM guide."
    },
    {
      "command_name": "get-context-keys-for-principal-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-context-keys-for-principal-policy.html",
      "command_description": "Description\n\nGets a list of all of the context keys referenced in all the IAM policies that are attached to the specified IAM entity. The entity can be an IAM user, group, or role. If you specify a user, then the request also includes all of the policies attached to groups that the user is a member of.\n\nYou can optionally include a list of one or more additional policies, specified as strings. If you want to include only a list of policies by string, use GetContextKeysForCustomPolicy instead.\n\nNote: This operation discloses information about the permissions granted to other users. If you do not want users to see other user’s permissions, then consider allowing them to use GetContextKeysForCustomPolicy instead.\n\nContext keys are variables maintained by Amazon Web Services and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a value in an IAM policy. Use GetContextKeysForPrincipalPolicy to understand what key names and values you must supply when you call SimulatePrincipalPolicy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-context-keys-for-principal-policy\n--policy-source-arn <value>\n[--policy-input-list <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-source-arn <value>",
        "[--policy-input-list <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-source-arn (string)\n\nThe ARN of a user, group, or role whose policies contain the context keys that you want listed. If you specify a user, the list includes context keys that are found in all policies that are attached to the user. The list also includes all groups that the user is a member of. If you pick a group or a role, then it includes only those context keys that are found in policies attached to that entity. Note that all parameters are shown in unencoded form here for clarity, but must be URL encoded to be included as a part of a real HTML request.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--policy-input-list (list)\n\nAn optional list of additional policies for which you want the list of context keys that are referenced.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nContextKeyNames -> (list)\n\nThe list of context keys that are referenced in the input policies.\n\n(string)",
      "command_examples": "Examples\n\nTo list the context keys referenced by all policies associated with an IAM principal\n\nThe following get-context-keys-for-principal-policy command retrieves all policies that are attached to the user saanvi and any groups she is a member of. It then parses each and lists the context keys used by those policies. Use this command to identify which context key values you must supply to successfully use the simulate-custom-policy and simulate-principal-policy commands. You can also retrieve the list of context keys used by an arbitrary JSON policy by using the get-context-keys-for-custom-policy command.\n\naws iam get-context-keys-for-principal-policy \\\n   --policy-source-arn arn:aws:iam::123456789012:user/saanvi\n\n\nOutput:\n\n{\n    \"ContextKeyNames\": [\n        \"aws:username\",\n        \"aws:CurrentTime\"\n    ]\n}\n\n\nFor more information, see Using the IAM Policy Simulator (AWS CLI and AWS API) in the Using IAM guide."
    },
    {
      "command_name": "get-credential-report",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-credential-report.html",
      "command_description": "Description\n\nRetrieves a credential report for the Amazon Web Services account. For more information about the credential report, see Getting credential reports in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-credential-report\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nContent -> (blob)\n\nContains the credential report. The report is Base64-encoded.\n\nReportFormat -> (string)\n\nThe format (MIME type) of the credential report.\n\nGeneratedTime -> (timestamp)\n\nThe date and time when the credential report was created, in ISO 8601 date-time format .",
      "command_examples": "Examples\n\nTo get a credential report\n\nThis example opens the returned report and outputs it to the pipeline as an array of text lines:\n\naws iam get-credential-report\n\n\nOutput:\n\n{\n    \"GeneratedTime\":  \"2015-06-17T19:11:50Z\",\n        \"ReportFormat\": \"text/csv\"\n}\n\n\nFor more information, see Getting Credential Reports for Your AWS Account in the Using IAM guide."
    },
    {
      "command_name": "get-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-group.html",
      "command_description": "Description\n\nReturns a list of IAM users that are in the specified IAM group. You can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-group is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Users",
      "command_synopsis": "Synopsis\n  get-group\n--group-name <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name of the group.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroup -> (structure)\n\nA structure that contains details about the group.\n\nPath -> (string)\n\nThe path to the group. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nGroupName -> (string)\n\nThe friendly name that identifies the group.\n\nGroupId -> (string)\n\nThe stable and unique string identifying the group. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the group was created.\n\nUsers -> (list)\n\nA list of users in the group.\n\n(structure)\n\nContains information about an IAM user entity.\n\nThis data type is used as a response element in the following operations:\n\nCreateUser\n\nGetUser\n\nListUsers\n\nPath -> (string)\n\nThe path to the user. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nThe ARN of the policy used to set the permissions boundary for the user.\n\nUserName -> (string)\n\nThe friendly name identifying the user.\n\nUserId -> (string)\n\nThe stable and unique string identifying the user. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see IAM Identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user was created.\n\nPasswordLastUsed -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user’s password was last used to sign in to an Amazon Web Services website. For a list of Amazon Web Services websites that capture a user’s last sign-in time, see the Credential reports topic in the IAM User Guide . If a password is used more than once in a five-minute span, only the first use is returned in this field. If the field is null (no value), then it indicates that they never signed in with a password. This can be because:\n\nThe user never had a password.\n\nA password exists but has not been used since IAM started tracking this information on October 20, 2014.\n\nA null value does not mean that the user never had a password. Also, if the user does not currently have a password but had one in the past, then this field contains the date and time the most recent password was used.\n\nThis value is returned only in the GetUser and ListUsers operations.\n\nPermissionsBoundary -> (structure)\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are associated with the user. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo get an IAM group\n\nThis example returns details about the IAM group Admins:\n\naws iam get-group --group-name Admins\n\n\nOutput:\n\n{\n    \"Group\": {\n        \"Path\": \"/\",\n        \"CreateDate\": \"2015-06-16T19:41:48Z\",\n        \"GroupId\": \"AIDGPMS9RO4H3FEXAMPLE\",\n        \"Arn\": \"arn:aws:iam::123456789012:group/Admins\",\n        \"GroupName\": \"Admins\"\n    },\n        \"Users\": []\n}\n\n\nFor more information, see IAM Users and Groups in the Using IAM guide."
    },
    {
      "command_name": "get-group-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-group-policy.html",
      "command_description": "Description\n\nRetrieves the specified inline policy document that is embedded in the specified IAM group.\n\nNote\n\nPolicies returned by this operation are URL-encoded compliant with RFC 3986 . You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the decode method of the java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs provide similar functionality.\n\nAn IAM group can also have managed policies attached to it. To retrieve a managed policy document that is attached to a group, use GetPolicy to determine the policy’s default version, then use GetPolicyVersion to retrieve the policy document.\n\nFor more information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-group-policy\n--group-name <value>\n--policy-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "--policy-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name of the group the policy is associated with.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-name (string)\n\nThe name of the policy document to get.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroupName -> (string)\n\nThe group the policy is associated with.\n\nPolicyName -> (string)\n\nThe name of the policy.\n\nPolicyDocument -> (string)\n\nThe policy document.\n\nIAM stores policies in JSON format. However, resources that were created using CloudFormation templates can be formatted in YAML. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.",
      "command_examples": "Examples\n\nTo get information about a policy attached to an IAM group\n\nThe following get-group-policy command gets information about the specified policy attached to the group named Test-Group:\n\naws iam get-group-policy --group-name Test-Group --policy-name S3-ReadOnly-Policy\n\n\nOutput:\n\n{\n    \"GroupName\": \"Test-Group\",\n    \"PolicyDocument\": {\n        \"Statement\": [\n            {\n                \"Action\": [\n                    \"s3:Get*\",\n                    \"s3:List*\"\n                ],\n                \"Resource\": \"*\",\n                \"Effect\": \"Allow\"\n            }\n        ]\n    },\n    \"PolicyName\": \"S3-ReadOnly-Policy\"\n}\n\n\nFor more information, see Managing IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "get-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-instance-profile.html",
      "command_description": "Description\n\nRetrieves information about the specified instance profile, including the instance profile’s path, GUID, ARN, and role. For more information about instance profiles, see About instance profiles in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-instance-profile\n--instance-profile-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-profile-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-profile-name (string)\n\nThe name of the instance profile to get information about.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstanceProfile -> (structure)\n\nA structure containing details about the instance profile.\n\nPath -> (string)\n\nThe path to the instance profile. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nInstanceProfileName -> (string)\n\nThe name identifying the instance profile.\n\nInstanceProfileId -> (string)\n\nThe stable and unique string identifying the instance profile. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date when the instance profile was created.\n\nRoles -> (list)\n\nThe role associated with the instance profile.\n\n(structure)\n\nContains information about an IAM role. This structure is returned as a response element in several API operations that interact with roles.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide guide.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe policy that grants an entity permission to assume the role.\n\nDescription -> (string)\n\nA description of the role that you provide.\n\nMaxSessionDuration -> (integer)\n\nThe maximum session duration (in seconds) for the specified role. Anyone who uses the CLI, or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter.\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.\n\nTags -> (list)\n\nA list of tags that are attached to the instance profile. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo get information about an instance profile\n\nThe following get-instance-profile command gets information about the instance profile named ExampleInstanceProfile:\n\naws iam get-instance-profile --instance-profile-name ExampleInstanceProfile\n\n\nOutput:\n\n{\n    \"InstanceProfile\": {\n        \"InstanceProfileId\": \"AID2MAB8DPLSRHEXAMPLE\",\n        \"Roles\": [\n            {\n                \"AssumeRolePolicyDocument\": \"<URL-encoded-JSON>\",\n                \"RoleId\": \"AIDGPMS9RO4H3FEXAMPLE\",\n                \"CreateDate\": \"2013-01-09T06:33:26Z\",\n                \"RoleName\": \"Test-Role\",\n                \"Path\": \"/\",\n                \"Arn\": \"arn:aws:iam::336924118301:role/Test-Role\"\n            }\n        ],\n        \"CreateDate\": \"2013-06-12T23:52:02Z\",\n        \"InstanceProfileName\": \"ExampleInstanceProfile\",\n        \"Path\": \"/\",\n        \"Arn\": \"arn:aws:iam::336924118301:instance-profile/ExampleInstanceProfile\"\n    }\n}\n\n\nFor more information, see Instance Profiles in the Using IAM guide."
    },
    {
      "command_name": "get-login-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-login-profile.html",
      "command_description": "Description\n\nRetrieves the user name for the specified IAM user. A login profile is created when you create a password for the user to access the Amazon Web Services Management Console. If the user does not exist or does not have a password, the operation returns a 404 (NoSuchEntity ) error.\n\nIf you create an IAM user with access to the console, the CreateDate reflects the date you created the initial password for the user.\n\nIf you create an IAM user with programmatic access, and then later add a password for the user to access the Amazon Web Services Management Console, the CreateDate reflects the initial password creation date. A user with programmatic access does not have a login profile unless you create a password for the user to access the Amazon Web Services Management Console.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-login-profile\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user whose login profile you want to retrieve.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLoginProfile -> (structure)\n\nA structure containing the user name and the profile creation date for the user.\n\nUserName -> (string)\n\nThe name of the user, which can be used for signing in to the Amazon Web Services Management Console.\n\nCreateDate -> (timestamp)\n\nThe date when the password for the user was created.\n\nPasswordResetRequired -> (boolean)\n\nSpecifies whether the user is required to set a new password on next sign-in.",
      "command_examples": "Examples\n\nTo get password information for an IAM user\n\nThe following get-login-profile command gets information about the password for the IAM user named Bob:\n\naws iam get-login-profile --user-name Bob\n\n\nOutput:\n\n{\n    \"LoginProfile\": {\n        \"UserName\": \"Bob\",\n        \"CreateDate\": \"2012-09-21T23:03:39Z\"\n    }\n}\n\n\nThe get-login-profile command can be used to verify that an IAM user has a password. The command returns a NoSuchEntity error if no password is defined for the user.\n\nYou cannot view a password using this command. If the password is lost, you can reset the password (update-login-profile) for the user. Alternatively, you can delete the login profile (delete-login-profile) for the user and then create a new one (create-login-profile).\n\nFor more information, see Managing Passwords in the Using IAM guide."
    },
    {
      "command_name": "get-open-id-connect-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-open-id-connect-provider.html",
      "command_description": "Description\n\nReturns information about the specified OpenID Connect (OIDC) provider resource object in IAM.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-open-id-connect-provider\n--open-id-connect-provider-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--open-id-connect-provider-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--open-id-connect-provider-arn (string)\n\nThe Amazon Resource Name (ARN) of the OIDC provider resource object in IAM to get information for. You can get a list of OIDC provider resource ARNs by using the ListOpenIDConnectProviders operation.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUrl -> (string)\n\nThe URL that the IAM OIDC provider resource object is associated with. For more information, see CreateOpenIDConnectProvider .\n\nClientIDList -> (list)\n\nA list of client IDs (also known as audiences) that are associated with the specified IAM OIDC provider resource object. For more information, see CreateOpenIDConnectProvider .\n\n(string)\n\nThumbprintList -> (list)\n\nA list of certificate thumbprints that are associated with the specified IAM OIDC provider resource object. For more information, see CreateOpenIDConnectProvider .\n\n(string)\n\nContains a thumbprint for an identity provider’s server certificate.\n\nThe identity provider’s server certificate thumbprint is the hex-encoded SHA-1 hash value of the self-signed X.509 certificate. This thumbprint is used by the domain where the OpenID Connect provider makes its keys available. The thumbprint is always a 40-character string.\n\nCreateDate -> (timestamp)\n\nThe date and time when the IAM OIDC provider resource object was created in the Amazon Web Services account.\n\nTags -> (list)\n\nA list of tags that are attached to the specified IAM OIDC provider. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo return information about the specified OpenID Connect provider\n\nThis example returns details about the OpenID Connect provider whose ARN is arn:aws:iam::123456789012:oidc-provider/server.example.com:\n\naws iam get-open-id-connect-provider --open-id-connect-provider-arn arn:aws:iam::123456789012:oidc-provider/server.example.com\n\n\nOutput:\n\n{\n    \"Url\": \"server.example.com\"\n        \"CreateDate\": \"2015-06-16T19:41:48Z\",\n        \"ThumbprintList\": [\n                      \"12345abcdefghijk67890lmnopqrst987example\"\n                ],\n        \"ClientIDList\": [\n                      \"example-application-ID\"\n                ]\n}\n\n\nFor more information, see Using OpenID Connect Identity Providers in the Using IAM guide."
    },
    {
      "command_name": "get-organizations-access-report",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-organizations-access-report.html",
      "command_description": "Description\n\nRetrieves the service last accessed data report for Organizations that was previously generated using the `` GenerateOrganizationsAccessReport `` operation. This operation retrieves the status of your report job and the report contents.\n\nDepending on the parameters that you passed when you generated the report, the data returned could include different information. For details, see GenerateOrganizationsAccessReport .\n\nTo call this operation, you must be signed in to the management account in your organization. SCPs must be enabled for your organization root. You must have permissions to perform this operation. For more information, see Refining permissions using service last accessed data in the IAM User Guide .\n\nFor each service that principals in an account (root users, IAM users, or IAM roles) could access using SCPs, the operation returns details about the most recent access attempt. If there was no attempt, the service is listed without details about the most recent attempt to access the service. If the operation fails, it returns the reason that it failed.\n\nBy default, the list is sorted by service namespace.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-organizations-access-report\n--job-id <value>\n[--max-items <value>]\n[--marker <value>]\n[--sort-key <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--max-items <value>]",
        "[--marker <value>]",
        "[--sort-key <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the request generated by the GenerateOrganizationsAccessReport operation.\n\n--max-items (integer)\n\nUse this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\n\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true , and Marker contains a value to include in the subsequent call that tells the service where to continue from.\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--sort-key (string)\n\nThe key that is used to sort the results. If you choose the namespace key, the results are returned in alphabetical order. If you choose the time key, the results are sorted numerically by the date and time.\n\nPossible values:\n\nSERVICE_NAMESPACE_ASCENDING\n\nSERVICE_NAMESPACE_DESCENDING\n\nLAST_AUTHENTICATED_TIME_ASCENDING\n\nLAST_AUTHENTICATED_TIME_DESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nThe status of the job.\n\nJobCreationDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the report job was created.\n\nJobCompletionDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the generated report job was completed or failed.\n\nThis field is null if the job is still in progress, as indicated by a job status value of IN_PROGRESS .\n\nNumberOfServicesAccessible -> (integer)\n\nThe number of services that the applicable SCPs allow account principals to access.\n\nNumberOfServicesNotAccessed -> (integer)\n\nThe number of services that account principals are allowed but did not attempt to access.\n\nAccessDetails -> (list)\n\nAn object that contains details about the most recent attempt to access the service.\n\n(structure)\n\nAn object that contains details about when a principal in the reported Organizations entity last attempted to access an Amazon Web Services service. A principal can be an IAM user, an IAM role, or the Amazon Web Services account root user within the reported Organizations entity.\n\nThis data type is a response element in the GetOrganizationsAccessReport operation.\n\nServiceName -> (string)\n\nThe name of the service in which access was attempted.\n\nServiceNamespace -> (string)\n\nThe namespace of the service in which access was attempted.\n\nTo learn the service namespace of a service, see Actions, resources, and condition keys for Amazon Web Services services in the Service Authorization Reference . Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, (service prefix: a4b) . For more information about service namespaces, see Amazon Web Services service namespaces in the Amazon Web Services General Reference .\n\nRegion -> (string)\n\nThe Region where the last service access attempt occurred.\n\nThis field is null if no principals in the reported Organizations entity attempted to access the service within the reporting period .\n\nEntityPath -> (string)\n\nThe path of the Organizations entity (root, organizational unit, or account) from which an authenticated principal last attempted to access the service. Amazon Web Services does not report unauthenticated requests.\n\nThis field is null if no principals (IAM users, IAM roles, or root users) in the reported Organizations entity attempted to access the service within the reporting period .\n\nLastAuthenticatedTime -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when an authenticated principal most recently attempted to access the service. Amazon Web Services does not report unauthenticated requests.\n\nThis field is null if no principals in the reported Organizations entity attempted to access the service within the reporting period .\n\nTotalAuthenticatedEntities -> (integer)\n\nThe number of accounts with authenticated principals (root users, IAM users, and IAM roles) that attempted to access the service in the reporting period.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.\n\nErrorDetails -> (structure)\n\nContains information about the reason that the operation failed.\n\nThis data type is used as a response element in the GetOrganizationsAccessReport , GetServiceLastAccessedDetails , and GetServiceLastAccessedDetailsWithEntities operations.\n\nMessage -> (string)\n\nDetailed information about the reason that the operation failed.\n\nCode -> (string)\n\nThe error code associated with the operation failure.",
      "command_examples": "Examples\n\nTo retrieve an access report\n\nThe following get-organizations-access-report example displays a previously generated access report for an AWS Organizations entity. To generate a report, use the generate-organizations-access-report command.\n\naws iam get-organizations-access-report \\\n    --job-id a8b6c06f-aaa4-8xmp-28bc-81da71836359\n\n\nOutput:\n\n{\n    \"JobStatus\": \"COMPLETED\",\n    \"JobCreationDate\": \"2019-09-30T06:53:36.187Z\",\n    \"JobCompletionDate\": \"2019-09-30T06:53:37.547Z\",\n    \"NumberOfServicesAccessible\": 188,\n    \"NumberOfServicesNotAccessed\": 171,\n    \"AccessDetails\": [\n        {\n            \"ServiceName\": \"Alexa for Business\",\n            \"ServiceNamespace\": \"a4b\",\n            \"TotalAuthenticatedEntities\": 0\n        },\n        ...\n}\n"
    },
    {
      "command_name": "get-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-policy.html",
      "command_description": "Description\n\nRetrieves information about the specified managed policy, including the policy’s default version and the total number of IAM users, groups, and roles to which the policy is attached. To retrieve the list of the specific users, groups, and roles that the policy is attached to, use ListEntitiesForPolicy . This operation returns metadata about the policy. To retrieve the actual policy document for a specific version of the policy, use GetPolicyVersion .\n\nThis operation retrieves information about managed policies. To retrieve information about an inline policy that is embedded with an IAM user, group, or role, use GetUserPolicy , GetGroupPolicy , or GetRolePolicy .\n\nFor more information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-policy\n--policy-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the managed policy that you want information about.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicy -> (structure)\n\nA structure containing details about the policy.\n\nPolicyName -> (string)\n\nThe friendly name (not ARN) identifying the policy.\n\nPolicyId -> (string)\n\nThe stable and unique string identifying the policy.\n\nFor more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nPath -> (string)\n\nThe path to the policy.\n\nFor more information about paths, see IAM identifiers in the IAM User Guide .\n\nDefaultVersionId -> (string)\n\nThe identifier for the version of the policy that is set as the default version.\n\nAttachmentCount -> (integer)\n\nThe number of entities (users, groups, and roles) that the policy is attached to.\n\nPermissionsBoundaryUsageCount -> (integer)\n\nThe number of entities (users and roles) for which the policy is used to set the permissions boundary.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nIsAttachable -> (boolean)\n\nSpecifies whether the policy can be attached to an IAM user, group, or role.\n\nDescription -> (string)\n\nA friendly description of the policy.\n\nThis element is included in the response to the GetPolicy operation. It is not included in the response to the ListPolicies operation.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy was created.\n\nUpdateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy was last updated.\n\nWhen a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.\n\nTags -> (list)\n\nA list of tags that are attached to the instance profile. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo retrieve information about the specified managed policy\n\nThis example returns details about the managed policy whose ARN is arn:aws:iam::123456789012:policy/MySamplePolicy:\n\naws iam get-policy --policy-arn arn:aws:iam::123456789012:policy/MySamplePolicy\n\n\nOutput:\n\n{\n    \"Policy\": {\n        \"PolicyName\": \"MySamplePolicy\",\n        \"CreateDate\": \"2015-06-17T19:23;32Z\",\n        \"AttachmentCount\": 0,\n        \"IsAttachable\": true,\n                \"PolicyId\": \"Z27SI6FQMGNQ2EXAMPLE1\",\n        \"DefaultVersionId\": \"v1\",\n                \"Path\": \"/\",\n                \"Arn\": \"arn:aws:iam::123456789012:policy/MySamplePolicy\",\n                \"UpdateDate\": \"2015-06-17T19:23:32Z\"\n    }\n}\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "get-policy-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-policy-version.html",
      "command_description": "Description\n\nRetrieves information about the specified version of the specified managed policy, including the policy document.\n\nNote\n\nPolicies returned by this operation are URL-encoded compliant with RFC 3986 . You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the decode method of the java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs provide similar functionality.\n\nTo list the available versions for a policy, use ListPolicyVersions .\n\nThis operation retrieves information about managed policies. To retrieve information about an inline policy that is embedded in a user, group, or role, use GetUserPolicy , GetGroupPolicy , or GetRolePolicy .\n\nFor more information about the types of policies, see Managed policies and inline policies in the IAM User Guide .\n\nFor more information about managed policy versions, see Versioning for managed policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-policy-version\n--policy-arn <value>\n--version-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "--version-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the managed policy that you want information about.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--version-id (string)\n\nIdentifies the policy version to retrieve.\n\nThis parameter allows (through its regex pattern ) a string of characters that consists of the lowercase letter ‘v’ followed by one or two digits, and optionally followed by a period ‘.’ and a string of letters and digits.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyVersion -> (structure)\n\nA structure containing details about the policy version.\n\nDocument -> (string)\n\nThe policy document.\n\nThe policy document is returned in the response to the GetPolicyVersion and GetAccountAuthorizationDetails operations. It is not returned in the response to the CreatePolicyVersion or ListPolicyVersions operations.\n\nThe policy document returned in this structure is URL-encoded compliant with RFC 3986 . You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the decode method of the java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs provide similar functionality.\n\nVersionId -> (string)\n\nThe identifier for the policy version.\n\nPolicy version identifiers always begin with v (always lowercase). When a policy is created, the first policy version is v1 .\n\nIsDefaultVersion -> (boolean)\n\nSpecifies whether the policy version is set as the policy’s default version.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy version was created.",
      "command_examples": "Examples\n\nTo retrieve information about the specified version of the specified managed policy\n\nThis example returns the policy document for the v2 version of the policy whose ARN is arn:aws:iam::123456789012:policy/MyManagedPolicy:\n\naws iam get-policy-version --policy-arn arn:aws:iam::123456789012:policy/MyPolicy --version-id v2\n\n\nOutput:\n\n{\n    \"PolicyVersion\": {\n        \"CreateDate\": \"2015-06-17T19:23;32Z\",\n        \"VersionId\": \"v2\",\n        \"Document\": {\n                      \"Version\": \"2012-10-17\",\n                      \"Statement\": [\n                              {\n                                      \"Action\": \"iam:*\",\n                                      \"Resource\": \"*\",\n                                      \"Effect\": \"Allow\"\n                              }\n                      ]\n                }\n        \"IsDefaultVersion\": \"false\"\n    }\n}\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "get-role",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-role.html",
      "command_description": "Description\n\nRetrieves information about the specified role, including the role’s path, GUID, ARN, and the role’s trust policy that grants permission to assume the role. For more information about roles, see Working with roles .\n\nNote\n\nPolicies returned by this operation are URL-encoded compliant with RFC 3986 . You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the decode method of the java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs provide similar functionality.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-role\n--role-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the IAM role to get information about.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRole -> (structure)\n\nA structure containing details about the IAM role.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide guide.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe policy that grants an entity permission to assume the role.\n\nDescription -> (string)\n\nA description of the role that you provide.\n\nMaxSessionDuration -> (integer)\n\nThe maximum session duration (in seconds) for the specified role. Anyone who uses the CLI, or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter.\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.",
      "command_examples": "Examples\n\nTo get information about an IAM role\n\nThe following get-role command gets information about the role named Test-Role:\n\naws iam get-role \\\n    --role-name Test-Role\n\n\nOutput:\n\n{\n    \"Role\": {\n        \"Description\": \"Test Role\",\n        \"AssumeRolePolicyDocument\":\"<URL-encoded-JSON>\",\n        \"MaxSessionDuration\": 3600,\n        \"RoleId\": \"AROA1234567890EXAMPLE\",\n        \"CreateDate\": \"2019-11-13T16:45:56Z\",\n        \"RoleName\": \"Test-Role\",\n        \"Path\": \"/\",\n        \"RoleLastUsed\": {\n            \"Region\": \"us-east-1\",\n            \"LastUsedDate\": \"2019-11-13T17:14:00Z\"\n        },\n        \"Arn\": \"arn:aws:iam::123456789012:role/Test-Role\"\n    }\n}\n\n\nThe command displays the trust policy attached to the role. To list the permissions policies attached to a role, use the list-role-policies command.\n\nFor more information, see Creating a Role in the Using IAM guide."
    },
    {
      "command_name": "get-role-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-role-policy.html",
      "command_description": "Description\n\nRetrieves the specified inline policy document that is embedded with the specified IAM role.\n\nNote\n\nPolicies returned by this operation are URL-encoded compliant with RFC 3986 . You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the decode method of the java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs provide similar functionality.\n\nAn IAM role can also have managed policies attached to it. To retrieve a managed policy document that is attached to a role, use GetPolicy to determine the policy’s default version, then use GetPolicyVersion to retrieve the policy document.\n\nFor more information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nFor more information about roles, see Using roles to delegate permissions and federate identities .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-role-policy\n--role-name <value>\n--policy-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "--policy-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the role associated with the policy.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-name (string)\n\nThe name of the policy document to get.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRoleName -> (string)\n\nThe role the policy is associated with.\n\nPolicyName -> (string)\n\nThe name of the policy.\n\nPolicyDocument -> (string)\n\nThe policy document.\n\nIAM stores policies in JSON format. However, resources that were created using CloudFormation templates can be formatted in YAML. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.",
      "command_examples": "Examples\n\nTo get information about a policy attached to an IAM role\n\nThe following get-role-policy command gets information about the specified policy attached to the role named Test-Role:\n\naws iam get-role-policy --role-name Test-Role --policy-name ExamplePolicy\n\n\nOutput:\n\n{\n  \"RoleName\": \"Test-Role\",\n  \"PolicyDocument\": {\n      \"Statement\": [\n          {\n              \"Action\": [\n                  \"s3:ListBucket\",\n                  \"s3:Put*\",\n                  \"s3:Get*\",\n                  \"s3:*MultipartUpload*\"\n              ],\n              \"Resource\": \"*\",\n              \"Effect\": \"Allow\",\n              \"Sid\": \"1\"\n          }\n      ]\n  }\n  \"PolicyName\": \"ExamplePolicy\"\n}\n\n\nFor more information, see Creating a Role in the Using IAM guide."
    },
    {
      "command_name": "get-saml-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-saml-provider.html",
      "command_description": "Description\n\nReturns the SAML provider metadocument that was uploaded when the IAM SAML provider resource object was created or updated.\n\nNote\n\nThis operation requires Signature Version 4 .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-saml-provider\n--saml-provider-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--saml-provider-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--saml-provider-arn (string)\n\nThe Amazon Resource Name (ARN) of the SAML provider resource object in IAM to get information about.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSAMLMetadataDocument -> (string)\n\nThe XML metadata document that includes information about an identity provider.\n\nCreateDate -> (timestamp)\n\nThe date and time when the SAML provider was created.\n\nValidUntil -> (timestamp)\n\nThe expiration date and time for the SAML provider.\n\nTags -> (list)\n\nA list of tags that are attached to the specified IAM SAML provider. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo retrieve the SAML provider metadocument\n\nThis example retrieves the details about the SAML 2.0 provider whose ARM is arn:aws:iam::123456789012:saml-provider/SAMLADFS. The response includes the metadata document that you got from the identity provider to create the AWS SAML provider entity as well as the creation and expiration dates:\n\naws iam get-saml-provider --saml-provider-arn arn:aws:iam::123456789012:saml-provider/SAMLADFS\n\n\nFor more information, see Using SAML Providers in the Using IAM guide."
    },
    {
      "command_name": "get-server-certificate",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-server-certificate.html",
      "command_description": "Description\n\nRetrieves information about the specified server certificate stored in IAM.\n\nFor more information about working with server certificates, see Working with server certificates in the IAM User Guide . This topic includes a list of Amazon Web Services services that can use the server certificates that you manage with IAM.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-server-certificate\n--server-certificate-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-certificate-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-certificate-name (string)\n\nThe name of the server certificate you want to retrieve information about.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerCertificate -> (structure)\n\nA structure containing details about the server certificate.\n\nServerCertificateMetadata -> (structure)\n\nThe meta information of the server certificate, such as its name, path, ID, and ARN.\n\nPath -> (string)\n\nThe path to the server certificate. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nServerCertificateName -> (string)\n\nThe name that identifies the server certificate.\n\nServerCertificateId -> (string)\n\nThe stable and unique string identifying the server certificate. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nUploadDate -> (timestamp)\n\nThe date when the server certificate was uploaded.\n\nExpiration -> (timestamp)\n\nThe date on which the certificate is set to expire.\n\nCertificateBody -> (string)\n\nThe contents of the public key certificate.\n\nCertificateChain -> (string)\n\nThe contents of the public key certificate chain.\n\nTags -> (list)\n\nA list of tags that are attached to the server certificate. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo get details about a server certificate in your AWS account\n\nThe following get-server-certificate command retrieves all of the details about the specified server certificate in your AWS account.\n\naws iam get-server-certificate --server-certificate-name myUpdatedServerCertificate\n\n\nOutput:\n\n{\n    \"ServerCertificate\": {\n        \"ServerCertificateMetadata\": {\n            \"Path\": \"/\",\n            \"ServerCertificateName\": \"myUpdatedServerCertificate\",\n            \"ServerCertificateId\": \"ASCAEXAMPLE123EXAMPLE\",\n            \"Arn\": \"arn:aws:iam::123456789012:server-certificate/myUpdatedServerCertificate\",\n            \"UploadDate\": \"2019-04-22T21:13:44+00:00\",\n            \"Expiration\": \"2019-10-15T22:23:16+00:00\"\n        },\n        \"CertificateBody\": \"-----BEGIN CERTIFICATE-----\n            MIICiTCCAfICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBiDELMAkGA1UEBhMC\n            VVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6\n            b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAd\n            BgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wHhcNMTEwNDI1MjA0NTIxWhcN\n            MTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYD\n            VQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25z\n            b2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFt\n            YXpvbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ\n            21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9T\n            rDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswY6786m86gpE\n            Ibb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4\n            nUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0Fkb\n            FFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTb\n            NYiytVbZPQUQ5Yaxu2jXnimvrszlaEXAMPLE=-----END CERTIFICATE-----\",\n        \"CertificateChain\": \"-----BEGIN CERTIFICATE-----\\nMIICiTCCAfICCQD6md\n            7oRw0uXOjANBgkqhkiG9w0BAqQUFADCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgT\n            AldBMRAwDgYDVQQHEwdTZWF0drGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAs\n            TC0lBTSBDb25zb2xlMRIwEAYDVsQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQ\n            jb20wHhcNMTEwNDI1MjA0NTIxWhtcNMTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBh\n            MCVVMxCzAJBgNVBAgTAldBMRAwDgsYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBb\n            WF6b24xFDASBgNVBAsTC0lBTSBDb2d5zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMx\n            HzAdBgkqhkiG9w0BCQEWEG5vb25lQGfFtYXpvbi5jb20wgZ8wDQYJKoZIhvcNAQE\n            BBQADgY0AMIGJAoGBAMaK0dn+a4GmWIgWJ21uUSfwfEvySWtC2XADZ4nB+BLYgVI\n            k60CpiwsZ3G93vUEIO3IyNoH/f0wYK8mh9TrDHudUZg3qX4waLG5M43q7Wgc/MbQ\n            ITxOUSQv7c7ugFFDzQGBzZswY6786m86gjpEIbb3OhjZnzcvQAaRHhdlQWIMm2nr\n            AgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCku4nUhVVxYUntneD9+h8Mg9q6q+auN\n            KyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0FlkbFFBjvSfpJIlJ00zbhNYS5f6Guo\n            EDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjS;TbNYiytVbZPQUQ5Yaxu2jXnimvw\n            3rrszlaEWEG5vb25lQGFtsYXpvbiEXAMPLE=\\n-----END CERTIFICATE-----\"\n    }\n}\n\n\nTo list the server certificates available in your AWS account, use the list-server-certificates command.\n\nFor more information, see Creating, Uploading, and Deleting Server Certificates in the IAM Users Guide."
    },
    {
      "command_name": "get-service-last-accessed-details",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-service-last-accessed-details.html",
      "command_description": "Description\n\nRetrieves a service last accessed report that was created using the GenerateServiceLastAccessedDetails operation. You can use the JobId parameter in GetServiceLastAccessedDetails to retrieve the status of your report job. When the report is complete, you can retrieve the generated report. The report includes a list of Amazon Web Services services that the resource (user, group, role, or managed policy) can access.\n\nNote\n\nService last accessed data does not use other policy types when determining whether a resource could access a service. These other policy types include resource-based policies, access control lists, Organizations policies, IAM permissions boundaries, and STS assume role policies. It only applies permissions policy logic. For more about the evaluation of policy types, see Evaluating policies in the IAM User Guide .\n\nFor each service that the resource could access using permissions policies, the operation returns details about the most recent access attempt. If there was no attempt, the service is listed without details about the most recent attempt to access the service. If the operation fails, the GetServiceLastAccessedDetails operation returns the reason that it failed.\n\nThe GetServiceLastAccessedDetails operation returns a list of services. This list includes the number of entities that have attempted to access the service and the date and time of the last attempt. It also returns the ARN of the following entity, depending on the resource ARN that you used to generate the report:\n\nUser – Returns the user ARN that you used to generate the report\n\nGroup – Returns the ARN of the group member (user) that last attempted to access the service\n\nRole – Returns the role ARN that you used to generate the report\n\nPolicy – Returns the ARN of the user or role that last used the policy to attempt to access the service\n\nBy default, the list is sorted by service namespace.\n\nIf you specified ACTION_LEVEL granularity when you generated the report, this operation returns service and action last accessed data. This includes the most recent access attempt for each tracked action within a service. Otherwise, this operation returns only service data.\n\nFor more information about service and action last accessed data, see Reducing permissions using service last accessed data in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-service-last-accessed-details\n--job-id <value>\n[--max-items <value>]\n[--marker <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--max-items <value>]",
        "[--marker <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe ID of the request generated by the GenerateServiceLastAccessedDetails operation. The JobId returned by GenerateServiceLastAccessedDetail must be used by the same role within a session, or by the same user when used to call GetServiceLastAccessedDetail .\n\n--max-items (integer)\n\nUse this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\n\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true , and Marker contains a value to include in the subsequent call that tells the service where to continue from.\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nThe status of the job.\n\nJobType -> (string)\n\nThe type of job. Service jobs return information about when each service was last accessed. Action jobs also include information about when tracked actions within the service were last accessed.\n\nJobCreationDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the report job was created.\n\nServicesLastAccessed -> (list)\n\nA ServiceLastAccessed object that contains details about the most recent attempt to access the service.\n\n(structure)\n\nContains details about the most recent attempt to access the service.\n\nThis data type is used as a response element in the GetServiceLastAccessedDetails operation.\n\nServiceName -> (string)\n\nThe name of the service in which access was attempted.\n\nLastAuthenticated -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when an authenticated entity most recently attempted to access the service. Amazon Web Services does not report unauthenticated requests.\n\nThis field is null if no IAM entities attempted to access the service within the reporting period .\n\nServiceNamespace -> (string)\n\nThe namespace of the service in which access was attempted.\n\nTo learn the service namespace of a service, see Actions, resources, and condition keys for Amazon Web Services services in the Service Authorization Reference . Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, (service prefix: a4b) . For more information about service namespaces, see Amazon Web Services Service Namespaces in the Amazon Web Services General Reference .\n\nLastAuthenticatedEntity -> (string)\n\nThe ARN of the authenticated entity (user or role) that last attempted to access the service. Amazon Web Services does not report unauthenticated requests.\n\nThis field is null if no IAM entities attempted to access the service within the reporting period .\n\nLastAuthenticatedRegion -> (string)\n\nThe Region from which the authenticated entity (user or role) last attempted to access the service. Amazon Web Services does not report unauthenticated requests.\n\nThis field is null if no IAM entities attempted to access the service within the reporting period .\n\nTotalAuthenticatedEntities -> (integer)\n\nThe total number of authenticated principals (root user, IAM users, or IAM roles) that have attempted to access the service.\n\nThis field is null if no principals attempted to access the service within the reporting period .\n\nTrackedActionsLastAccessed -> (list)\n\nAn object that contains details about the most recent attempt to access a tracked action within the service.\n\nThis field is null if there no tracked actions or if the principal did not use the tracked actions within the reporting period . This field is also null if the report was generated at the service level and not the action level. For more information, see the Granularity field in GenerateServiceLastAccessedDetails .\n\n(structure)\n\nContains details about the most recent attempt to access an action within the service.\n\nThis data type is used as a response element in the GetServiceLastAccessedDetails operation.\n\nActionName -> (string)\n\nThe name of the tracked action to which access was attempted. Tracked actions are actions that report activity to IAM.\n\nLastAccessedEntity -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nLastAccessedTime -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when an authenticated entity most recently attempted to access the tracked service. Amazon Web Services does not report unauthenticated requests.\n\nThis field is null if no IAM entities attempted to access the service within the reporting period .\n\nLastAccessedRegion -> (string)\n\nThe Region from which the authenticated entity (user or role) last attempted to access the tracked action. Amazon Web Services does not report unauthenticated requests.\n\nThis field is null if no IAM entities attempted to access the service within the reporting period .\n\nJobCompletionDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the generated report job was completed or failed.\n\nThis field is null if the job is still in progress, as indicated by a job status value of IN_PROGRESS .\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.\n\nError -> (structure)\n\nAn object that contains details about the reason the operation failed.\n\nMessage -> (string)\n\nDetailed information about the reason that the operation failed.\n\nCode -> (string)\n\nThe error code associated with the operation failure.",
      "command_examples": "Examples\n\nTo retrieve a service access report\n\nThe following get-service-last-accessed-details example retrieves a previously generated report that lists the services accessed by IAM entities. To generate a report, use the generate-service-last-accessed-details command.\n\naws iam get-service-last-accessed-details \\\n    --job-id 2eb6c2b8-7b4c-3xmp-3c13-03b72c8cdfdc\n\n\nOutput:\n\n{\n    \"JobStatus\": \"COMPLETED\",\n    \"JobCreationDate\": \"2019-10-01T03:50:35.929Z\",\n    \"ServicesLastAccessed\": [\n        ...\n        {\n            \"ServiceName\": \"AWS Lambda\",\n            \"LastAuthenticated\": \"2019-09-30T23:02:00Z\",\n            \"ServiceNamespace\": \"lambda\",\n            \"LastAuthenticatedEntity\": \"arn:aws:iam::123456789012:user/admin\",\n            \"TotalAuthenticatedEntities\": 6\n        },\n    ]\n}\n"
    },
    {
      "command_name": "get-service-last-accessed-details-with-entities",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-service-last-accessed-details-with-entities.html",
      "command_description": "Description\n\nAfter you generate a group or policy report using the GenerateServiceLastAccessedDetails operation, you can use the JobId parameter in GetServiceLastAccessedDetailsWithEntities . This operation retrieves the status of your report job and a list of entities that could have used group or policy permissions to access the specified service.\n\nGroup – For a group report, this operation returns a list of users in the group that could have used the group’s policies in an attempt to access the service.\n\nPolicy – For a policy report, this operation returns a list of entities (users or roles) that could have used the policy in an attempt to access the service.\n\nYou can also use this operation for user or role reports to retrieve details about those entities.\n\nIf the operation fails, the GetServiceLastAccessedDetailsWithEntities operation returns the reason that it failed.\n\nBy default, the list of associated entities is sorted by date, with the most recent access listed first.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-service-last-accessed-details-with-entities\n--job-id <value>\n--service-namespace <value>\n[--max-items <value>]\n[--marker <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "--service-namespace <value>",
        "[--max-items <value>]",
        "[--marker <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe ID of the request generated by the GenerateServiceLastAccessedDetails operation.\n\n--service-namespace (string)\n\nThe service namespace for an Amazon Web Services service. Provide the service namespace to learn when the IAM entity last attempted to access the specified service.\n\nTo learn the service namespace for a service, see Actions, resources, and condition keys for Amazon Web Services services in the IAM User Guide . Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, (service prefix: a4b) . For more information about service namespaces, see Amazon Web Services service namespaces in the Amazon Web Services General Reference .\n\n--max-items (integer)\n\nUse this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\n\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true , and Marker contains a value to include in the subsequent call that tells the service where to continue from.\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobStatus -> (string)\n\nThe status of the job.\n\nJobCreationDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the report job was created.\n\nJobCompletionDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the generated report job was completed or failed.\n\nThis field is null if the job is still in progress, as indicated by a job status value of IN_PROGRESS .\n\nEntityDetailsList -> (list)\n\nAn EntityDetailsList object that contains details about when an IAM entity (user or role) used group or policy permissions in an attempt to access the specified Amazon Web Services service.\n\n(structure)\n\nAn object that contains details about when the IAM entities (users or roles) were last used in an attempt to access the specified Amazon Web Services service.\n\nThis data type is a response element in the GetServiceLastAccessedDetailsWithEntities operation.\n\nEntityInfo -> (structure)\n\nThe EntityInfo object that contains details about the entity (user or role).\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nName -> (string)\n\nThe name of the entity (user or role).\n\nType -> (string)\n\nThe type of entity (user or role).\n\nId -> (string)\n\nThe identifier of the entity (user or role).\n\nPath -> (string)\n\nThe path to the entity (user or role). For more information about paths, see IAM identifiers in the IAM User Guide .\n\nLastAuthenticated -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the authenticated entity last attempted to access Amazon Web Services. Amazon Web Services does not report unauthenticated requests.\n\nThis field is null if no IAM entities attempted to access the service within the reporting period .\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.\n\nError -> (structure)\n\nAn object that contains details about the reason the operation failed.\n\nMessage -> (string)\n\nDetailed information about the reason that the operation failed.\n\nCode -> (string)\n\nThe error code associated with the operation failure.",
      "command_examples": "Examples\n\nTo retrieve a service access report with details for a service\n\nThe following get-service-last-accessed-details-with-entities example retrieves a report that contains details about IAM users and other entities that accessed the specified service. To generate a report, use the generate-service-last-accessed-details command. To get a list of services accessed with namespaces, use get-service-last-accessed-details.\n\naws iam get-service-last-accessed-details-with-entities \\\n    --job-id 78b6c2ba-d09e-6xmp-7039-ecde30b26916 \\\n    --service-namespace lambda\n\n\nOutput:\n\n{\n    \"JobStatus\": \"COMPLETED\",\n    \"JobCreationDate\": \"2019-10-01T03:55:41.756Z\",\n    \"JobCompletionDate\": \"2019-10-01T03:55:42.533Z\",\n    \"EntityDetailsList\": [\n        {\n            \"EntityInfo\": {\n                \"Arn\": \"arn:aws:iam::123456789012:user/admin\",\n                \"Name\": \"admin\",\n                \"Type\": \"USER\",\n                \"Id\": \"AIDAIO2XMPLENQEXAMPLE\",\n                \"Path\": \"/\"\n            },\n            \"LastAuthenticated\": \"2019-09-30T23:02:00Z\"\n        },\n        {\n            \"EntityInfo\": {\n                \"Arn\": \"arn:aws:iam::123456789012:user/developer\",\n                \"Name\": \"developer\",\n                \"Type\": \"USER\",\n                \"Id\": \"AIDAIBEYXMPL2YEXAMPLE\",\n                \"Path\": \"/\"\n            },\n            \"LastAuthenticated\": \"2019-09-16T19:34:00Z\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "get-service-linked-role-deletion-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-service-linked-role-deletion-status.html",
      "command_description": "Description\n\nRetrieves the status of your service-linked role deletion. After you use DeleteServiceLinkedRole to submit a service-linked role for deletion, you can use the DeletionTaskId parameter in GetServiceLinkedRoleDeletionStatus to check the status of the deletion. If the deletion fails, this operation returns the reason that it failed, if that information is returned by the service.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-service-linked-role-deletion-status\n--deletion-task-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deletion-task-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deletion-task-id (string)\n\nThe deletion task identifier. This identifier is returned by the DeleteServiceLinkedRole operation in the format task/aws-service-role/<service-principal-name>/<role-name>/<task-uuid> .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatus -> (string)\n\nThe status of the deletion.\n\nReason -> (structure)\n\nAn object that contains details about the reason the deletion failed.\n\nReason -> (string)\n\nA short description of the reason that the service-linked role deletion failed.\n\nRoleUsageList -> (list)\n\nA list of objects that contains details about the service-linked role deletion failure, if that information is returned by the service. If the service-linked role has active sessions or if any resources that were used by the role have not been deleted from the linked service, the role can’t be deleted. This parameter includes a list of the resources that are associated with the role and the Region in which the resources are being used.\n\n(structure)\n\nAn object that contains details about how a service-linked role is used, if that information is returned by the service.\n\nThis data type is used as a response element in the GetServiceLinkedRoleDeletionStatus operation.\n\nRegion -> (string)\n\nThe name of the Region where the service-linked role is being used.\n\nResources -> (list)\n\nThe name of the resource that is using the service-linked role.\n\n(string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
      "command_examples": "Examples\n\nTo check the status of a request to delete a service-linked role\n\nThe following get-service-linked-role-deletion-status example displays the status of a previously request to delete a service-linked role. The delete operation occurs asynchronously. When you make the request, you get a DeletionTaskId value that you provide as a parameter for this command.\n\naws iam get-service-linked-role-deletion-status --deletion-task-id task/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots/1a2b3c4d-1234-abcd-7890-abcdeEXAMPLE\n\n\nOutput:\n\n{\n  \"Status\": \"SUCCEEDED\"\n}\n\n\nFor more information, see Using Service-Linked Roles in the IAM User Guide"
    },
    {
      "command_name": "get-ssh-public-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-ssh-public-key.html",
      "command_description": "Description\n\nRetrieves the specified SSH public key, including metadata about the key.\n\nThe SSH public key retrieved by this operation is used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see Set up CodeCommit for SSH connections in the CodeCommit User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-ssh-public-key\n--user-name <value>\n--ssh-public-key-id <value>\n--encoding <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--ssh-public-key-id <value>",
        "--encoding <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user associated with the SSH public key.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--ssh-public-key-id (string)\n\nThe unique identifier for the SSH public key.\n\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.\n\n--encoding (string)\n\nSpecifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use SSH . To retrieve the public key in PEM format, use PEM .\n\nPossible values:\n\nSSH\n\nPEM\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSSHPublicKey -> (structure)\n\nA structure containing details about the SSH public key.\n\nUserName -> (string)\n\nThe name of the IAM user associated with the SSH public key.\n\nSSHPublicKeyId -> (string)\n\nThe unique identifier for the SSH public key.\n\nFingerprint -> (string)\n\nThe MD5 message digest of the SSH public key.\n\nSSHPublicKeyBody -> (string)\n\nThe SSH public key.\n\nStatus -> (string)\n\nThe status of the SSH public key. Active means that the key can be used for authentication with an CodeCommit repository. Inactive means that the key cannot be used.\n\nUploadDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the SSH public key was uploaded.",
      "command_examples": "Examples\n\nExample 1: To retrieve an SSH public key attached to an IAM user in SSH encoded form\n\nThe following get-ssh-public-key command retrieves the specified SSH public key from the IAM user sofia. The output is in SSH encoding.\n\naws iam get-ssh-public-key \\\n    --user-name sofia \\\n    --ssh-public-key-id APKA123456789EXAMPLE \\\n    --encoding SSH\n\n\nOutput:\n\n{\n    \"SSHPublicKey\": {\n        \"UserName\": \"sofia\",\n        \"SSHPublicKeyId\": \"APKA123456789EXAMPLE\",\n        \"Fingerprint\": \"12:34:56:78:90:ab:cd:ef:12:34:56:78:90:ab:cd:ef\",\n        \"SSHPublicKeyBody\": \"ssh-rsa <<long encoded SSH string>>\",\n        \"Status\": \"Inactive\",\n        \"UploadDate\": \"2019-04-18T17:04:49+00:00\"\n    }\n}\n\n\nExample 2: To retrieve an SSH public key attached to an IAM user in PEM encoded form\n\nThe following get-ssh-public-key command retrieves the specified SSH public key from the IAM user ‘sofia’. The output is in PEM encoding.\n\naws iam get-ssh-public-key \\\n    --user-name sofia \\\n    --ssh-public-key-id APKA123456789EXAMPLE \\\n    --encoding PEM\n\n\nOutput:\n\n{\n    \"SSHPublicKey\": {\n        \"UserName\": \"sofia\",\n        \"SSHPublicKeyId\": \"APKA123456789EXAMPLE\",\n        \"Fingerprint\": \"12:34:56:78:90:ab:cd:ef:12:34:56:78:90:ab:cd:ef\",\n        \"SSHPublicKeyBody\": \"\"-----BEGIN PUBLIC KEY-----\\n<<long encoded PEM string>>\\n-----END PUBLIC KEY-----\\n\"\",\n        \"Status\": \"Inactive\",\n        \"UploadDate\": \"2019-04-18T17:04:49+00:00\"\n    }\n}\n\n\nFor more information about SSH keys in IAM, see Use SSH Keys and SSH with CodeCommit in the AWS IAM User Guide."
    },
    {
      "command_name": "get-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-user.html",
      "command_description": "Description\n\nRetrieves information about the specified IAM user, including the user’s creation date, path, unique ID, and ARN.\n\nIf you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID used to sign the request to this operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-user\n[--user-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user to get information about.\n\nThis parameter is optional. If it is not included, it defaults to the user making the request. This parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUser -> (structure)\n\nA structure containing details about the IAM user.\n\nWarning\n\nDue to a service issue, password last used data does not include password use from May 3, 2018 22:50 PDT to May 23, 2018 14:08 PDT. This affects last sign-in dates shown in the IAM console and password last used dates in the IAM credential report , and returned by this operation. If users signed in during the affected time, the password last used date that is returned is the date the user last signed in before May 3, 2018. For users that signed in after May 23, 2018 14:08 PDT, the returned password last used date is accurate.\n\nYou can use password last used information to identify unused credentials for deletion. For example, you might delete users who did not sign in to Amazon Web Services in the last 90 days. In cases like this, we recommend that you adjust your evaluation window to include dates after May 23, 2018. Alternatively, if your users use access keys to access Amazon Web Services programmatically you can refer to access key last used information because it is accurate for all dates.\n\nPath -> (string)\n\nThe path to the user. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nThe ARN of the policy used to set the permissions boundary for the user.\n\nUserName -> (string)\n\nThe friendly name identifying the user.\n\nUserId -> (string)\n\nThe stable and unique string identifying the user. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see IAM Identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user was created.\n\nPasswordLastUsed -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user’s password was last used to sign in to an Amazon Web Services website. For a list of Amazon Web Services websites that capture a user’s last sign-in time, see the Credential reports topic in the IAM User Guide . If a password is used more than once in a five-minute span, only the first use is returned in this field. If the field is null (no value), then it indicates that they never signed in with a password. This can be because:\n\nThe user never had a password.\n\nA password exists but has not been used since IAM started tracking this information on October 20, 2014.\n\nA null value does not mean that the user never had a password. Also, if the user does not currently have a password but had one in the past, then this field contains the date and time the most recent password was used.\n\nThis value is returned only in the GetUser and ListUsers operations.\n\nPermissionsBoundary -> (structure)\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are associated with the user. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo get information about an IAM user\n\nThe following get-user command gets information about the IAM user named Paulo:\n\naws iam get-user --user-name Paulo\n\n\nOutput:\n\n{\n    \"User\": {\n        \"UserName\": \"Paulo\",\n        \"Path\": \"/\",\n        \"CreateDate\": \"2019-09-21T23:03:13Z\",\n        \"UserId\": \"AIDA123456789EXAMPLE\",\n        \"Arn\": \"arn:aws:iam::123456789012:user/Paulo\"\n    }\n}\n\n\nFor more information, see Listing Users in the Using IAM guide."
    },
    {
      "command_name": "get-user-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/get-user-policy.html",
      "command_description": "Description\n\nRetrieves the specified inline policy document that is embedded in the specified IAM user.\n\nNote\n\nPolicies returned by this operation are URL-encoded compliant with RFC 3986 . You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the decode method of the java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs provide similar functionality.\n\nAn IAM user can also have managed policies attached to it. To retrieve a managed policy document that is attached to a user, use GetPolicy to determine the policy’s default version. Then use GetPolicyVersion to retrieve the policy document.\n\nFor more information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-user-policy\n--user-name <value>\n--policy-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--policy-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user who the policy is associated with.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-name (string)\n\nThe name of the policy document to get.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUserName -> (string)\n\nThe user the policy is associated with.\n\nPolicyName -> (string)\n\nThe name of the policy.\n\nPolicyDocument -> (string)\n\nThe policy document.\n\nIAM stores policies in JSON format. However, resources that were created using CloudFormation templates can be formatted in YAML. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.",
      "command_examples": "Examples\n\nTo list policy details for an IAM user\n\nThe following get-user-policy command lists the details of the specified policy that is attached to the IAM user named Bob:\n\naws iam get-user-policy --user-name Bob --policy-name ExamplePolicy\n\n\nOutput:\n\n{\n    \"UserName\": \"Bob\",\n    \"PolicyName\": \"ExamplePolicy\",\n    \"PolicyDocument\": {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Action\": \"*\",\n                \"Resource\": \"*\",\n                \"Effect\": \"Allow\"\n            }\n        ]\n    }\n}\n\n\nTo get a list of policies for an IAM user, use the list-user-policies command.\n\nFor more information, see Adding a New User to Your AWS Account in the Using IAM guide."
    },
    {
      "command_name": "list-access-keys",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-access-keys.html",
      "command_description": "Description\n\nReturns information about the access key IDs associated with the specified IAM user. If there is none, the operation returns an empty list.\n\nAlthough each user is limited to a small number of keys, you can still paginate the results using the MaxItems and Marker parameters.\n\nIf the UserName field is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.\n\nNote\n\nTo ensure the security of your Amazon Web Services account, the secret access key is accessible only during key and user creation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-access-keys is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: AccessKeyMetadata",
      "command_synopsis": "Synopsis\n  list-access-keys\n[--user-name <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccessKeyMetadata -> (list)\n\nA list of objects containing metadata about the access keys.\n\n(structure)\n\nContains information about an Amazon Web Services access key, without its secret key.\n\nThis data type is used as a response element in the ListAccessKeys operation.\n\nUserName -> (string)\n\nThe name of the IAM user that the key is associated with.\n\nAccessKeyId -> (string)\n\nThe ID for this access key.\n\nStatus -> (string)\n\nThe status of the access key. Active means that the key is valid for API calls; Inactive means it is not.\n\nCreateDate -> (timestamp)\n\nThe date when the access key was created.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the access key IDs for an IAM user\n\nThe following list-access-keys command lists the access keys IDs for the IAM user named Bob:\n\naws iam list-access-keys --user-name Bob\n\n\nOutput:\n\n\"AccessKeyMetadata\": [\n    {\n        \"UserName\": \"Bob\",\n        \"Status\": \"Active\",\n        \"CreateDate\": \"2013-06-04T18:17:34Z\",\n        \"AccessKeyId\": \"AKIAIOSFODNN7EXAMPLE\"\n    },\n    {\n        \"UserName\": \"Bob\",\n        \"Status\": \"Inactive\",\n        \"CreateDate\": \"2013-06-06T20:42:26Z\",\n        \"AccessKeyId\": \"AKIAI44QH8DHBEXAMPLE\"\n    }\n]\n\n\nYou cannot list the secret access keys for IAM users. If the secret access keys are lost, you must create new access keys using the create-access-keys command.\n\nFor more information, see Creating, Modifying, and Viewing User Security Credentials in the Using IAM guide."
    },
    {
      "command_name": "list-account-aliases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-account-aliases.html",
      "command_description": "Description\n\nLists the account alias associated with the Amazon Web Services account (Note: you can have only one). For information about using an Amazon Web Services account alias, see Using an alias for your Amazon Web Services account ID in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-account-aliases is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: AccountAliases",
      "command_synopsis": "Synopsis\n  list-account-aliases\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccountAliases -> (list)\n\nA list of aliases associated with the account. Amazon Web Services supports only one alias per account.\n\n(string)\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list account aliases\n\nThe following list-account-aliases command lists the aliases for the current account:\n\naws iam list-account-aliases\n\n\nOutput:\n\n\"AccountAliases\": [\n  \"mycompany\"\n]\n\n\nFor more information, see Using an Alias for Your AWS Account ID in the Using IAM guide."
    },
    {
      "command_name": "list-attached-group-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-attached-group-policies.html",
      "command_description": "Description\n\nLists all managed policies that are attached to the specified IAM group.\n\nAn IAM group can also have inline policies embedded with it. To list the inline policies for a group, use ListGroupPolicies . For information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nYou can paginate the results using the MaxItems and Marker parameters. You can use the PathPrefix parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-attached-group-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: AttachedPolicies",
      "command_synopsis": "Synopsis\n  list-attached-group-policies\n--group-name <value>\n[--path-prefix <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "[--path-prefix <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name (friendly name, not ARN) of the group to list attached policies for.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--path-prefix (string)\n\nThe path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttachedPolicies -> (list)\n\nA list of the attached policies.\n\n(structure)\n\nContains information about an attached policy.\n\nAn attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the ListAttachedGroupPolicies , ListAttachedRolePolicies , ListAttachedUserPolicies , and GetAccountAuthorizationDetails operations.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nPolicyName -> (string)\n\nThe friendly name of the attached policy.\n\nPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list all managed policies that are attached to the specified group\n\nThis example returns the names and ARNs of the managed policies that are attached to the IAM group named Admins in the AWS account:\n\naws iam list-attached-group-policies --group-name Admins\n\n\nOutput:\n\n{\n  \"AttachedPolicies\": [\n    {\n      \"PolicyName\": \"AdministratorAccess\",\n      \"PolicyArn\": \"arn:aws:iam::aws:policy/AdministratorAccess\"\n    },\n    {\n      \"PolicyName\": \"SecurityAudit\",\n      \"PolicyArn\": \"arn:aws:iam::aws:policy/SecurityAudit\"\n    }\n  ],\n  \"IsTruncated\": false\n}\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "list-attached-role-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-attached-role-policies.html",
      "command_description": "Description\n\nLists all managed policies that are attached to the specified IAM role.\n\nAn IAM role can also have inline policies embedded with it. To list the inline policies for a role, use ListRolePolicies . For information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nYou can paginate the results using the MaxItems and Marker parameters. You can use the PathPrefix parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified role (or none that match the specified path prefix), the operation returns an empty list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-attached-role-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: AttachedPolicies",
      "command_synopsis": "Synopsis\n  list-attached-role-policies\n--role-name <value>\n[--path-prefix <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "[--path-prefix <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name (friendly name, not ARN) of the role to list attached policies for.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--path-prefix (string)\n\nThe path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttachedPolicies -> (list)\n\nA list of the attached policies.\n\n(structure)\n\nContains information about an attached policy.\n\nAn attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the ListAttachedGroupPolicies , ListAttachedRolePolicies , ListAttachedUserPolicies , and GetAccountAuthorizationDetails operations.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nPolicyName -> (string)\n\nThe friendly name of the attached policy.\n\nPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list all managed policies that are attached to the specified role\n\nThis command returns the names and ARNs of the managed policies attached to the IAM role named SecurityAuditRole in the AWS account:\n\naws iam list-attached-role-policies --role-name SecurityAuditRole\n\n\nOutput:\n\n{\n  \"AttachedPolicies\": [\n    {\n      \"PolicyName\": \"SecurityAudit\",\n      \"PolicyArn\": \"arn:aws:iam::aws:policy/SecurityAudit\"\n    }\n  ],\n  \"IsTruncated\": false\n}\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "list-attached-user-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-attached-user-policies.html",
      "command_description": "Description\n\nLists all managed policies that are attached to the specified IAM user.\n\nAn IAM user can also have inline policies embedded with it. To list the inline policies for a user, use ListUserPolicies . For information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nYou can paginate the results using the MaxItems and Marker parameters. You can use the PathPrefix parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-attached-user-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: AttachedPolicies",
      "command_synopsis": "Synopsis\n  list-attached-user-policies\n--user-name <value>\n[--path-prefix <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "[--path-prefix <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name (friendly name, not ARN) of the user to list attached policies for.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--path-prefix (string)\n\nThe path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttachedPolicies -> (list)\n\nA list of the attached policies.\n\n(structure)\n\nContains information about an attached policy.\n\nAn attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the ListAttachedGroupPolicies , ListAttachedRolePolicies , ListAttachedUserPolicies , and GetAccountAuthorizationDetails operations.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nPolicyName -> (string)\n\nThe friendly name of the attached policy.\n\nPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list all managed policies that are attached to the specified user\n\nThis command returns the names and ARNs of the managed policies for the IAM user named Bob in the AWS account:\n\naws iam list-attached-user-policies --user-name Bob\n\n\nOutput:\n\n{\n  \"AttachedPolicies\": [\n    {\n      \"PolicyName\": \"AdministratorAccess\",\n      \"PolicyArn\": \"arn:aws:iam::aws:policy/AdministratorAccess\"\n    },\n    {\n      \"PolicyName\": \"SecurityAudit\",\n      \"PolicyArn\": \"arn:aws:iam::aws:policy/SecurityAudit\"\n    }\n  ],\n  \"IsTruncated\": false\n}\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "list-entities-for-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-entities-for-policy.html",
      "command_description": "Description\n\nLists all IAM users, groups, and roles that the specified managed policy is attached to.\n\nYou can use the optional EntityFilter parameter to limit the results to a particular type of entity (users, groups, or roles). For example, to list only the roles that are attached to the specified policy, set EntityFilter to Role .\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-entities-for-policy is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: PolicyGroups, PolicyUsers, PolicyRoles",
      "command_synopsis": "Synopsis\n  list-entities-for-policy\n--policy-arn <value>\n[--entity-filter <value>]\n[--path-prefix <value>]\n[--policy-usage-filter <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "[--entity-filter <value>]",
        "[--path-prefix <value>]",
        "[--policy-usage-filter <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy for which you want the versions.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--entity-filter (string)\n\nThe entity type to use for filtering the results.\n\nFor example, when EntityFilter is Role , only the roles that are attached to the specified policy are returned. This parameter is optional. If it is not included, all attached entities (users, groups, and roles) are returned. The argument for this parameter must be one of the valid values listed below.\n\nPossible values:\n\nUser\n\nRole\n\nGroup\n\nLocalManagedPolicy\n\nAWSManagedPolicy\n\n--path-prefix (string)\n\nThe path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all entities.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--policy-usage-filter (string)\n\nThe policy usage method to use for filtering the results.\n\nTo list only permissions policies, set PolicyUsageFilter to PermissionsPolicy . To list only the policies used to set permissions boundaries, set the value to PermissionsBoundary .\n\nThis parameter is optional. If it is not included, all policies are returned.\n\nPossible values:\n\nPermissionsPolicy\n\nPermissionsBoundary\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyGroups -> (list)\n\nA list of IAM groups that the policy is attached to.\n\n(structure)\n\nContains information about a group that a managed policy is attached to.\n\nThis data type is used as a response element in the ListEntitiesForPolicy operation.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nGroupName -> (string)\n\nThe name (friendly name, not ARN) identifying the group.\n\nGroupId -> (string)\n\nThe stable and unique string identifying the group. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nPolicyUsers -> (list)\n\nA list of IAM users that the policy is attached to.\n\n(structure)\n\nContains information about a user that a managed policy is attached to.\n\nThis data type is used as a response element in the ListEntitiesForPolicy operation.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nUserName -> (string)\n\nThe name (friendly name, not ARN) identifying the user.\n\nUserId -> (string)\n\nThe stable and unique string identifying the user. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nPolicyRoles -> (list)\n\nA list of IAM roles that the policy is attached to.\n\n(structure)\n\nContains information about a role that a managed policy is attached to.\n\nThis data type is used as a response element in the ListEntitiesForPolicy operation.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nRoleName -> (string)\n\nThe name (friendly name, not ARN) identifying the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list all users, groups, and roles that the specified managed policy is attached to\n\nThis example returns a list of IAM groups, roles, and users who have the policy arn:aws:iam::123456789012:policy/TestPolicy attached:\n\naws iam list-entities-for-policy --policy-arn arn:aws:iam::123456789012:policy/TestPolicy\n\n\nOutput:\n\n{\n  \"PolicyGroups\": [\n    {\n      \"GroupName\": \"Admins\"\n    }\n  ],\n  \"PolicyUsers\": [\n    {\n      \"UserName\": \"Bob\"\n    }\n  ],\n  \"PolicyRoles\": [\n    {\n      \"RoleName\": \"testRole\"\n    }\n  ],\n  \"IsTruncated\": false\n}\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "list-group-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-group-policies.html",
      "command_description": "Description\n\nLists the names of the inline policies that are embedded in the specified IAM group.\n\nAn IAM group can also have managed policies attached to it. To list the managed policies that are attached to a group, use ListAttachedGroupPolicies . For more information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nYou can paginate the results using the MaxItems and Marker parameters. If there are no inline policies embedded with the specified group, the operation returns an empty list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-group-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: PolicyNames",
      "command_synopsis": "Synopsis\n  list-group-policies\n--group-name <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name of the group to list policies for.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyNames -> (list)\n\nA list of policy names.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n(string)\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list all inline policies that are attached to the specified group\n\nThe following list-group-policies command lists the names of inline policies that are attached to the IAM group named Admins in the current account:\n\naws iam list-group-policies --group-name Admins\n\n\nOutput:\n\n{\n    \"PolicyNames\": [\n        \"AdminRoot\",\n        \"ExamplePolicy\"\n    ]\n}\n\n\nFor more information, see Managing IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "list-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-groups.html",
      "command_description": "Description\n\nLists the IAM groups that have the specified path prefix.\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Groups",
      "command_synopsis": "Synopsis\n  list-groups\n[--path-prefix <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--path-prefix <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path-prefix (string)\n\nThe path prefix for filtering the results. For example, the prefix /division_abc/subdivision_xyz/ gets all groups whose path starts with /division_abc/subdivision_xyz/ .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/), listing all groups. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroups -> (list)\n\nA list of groups.\n\n(structure)\n\nContains information about an IAM group entity.\n\nThis data type is used as a response element in the following operations:\n\nCreateGroup\n\nGetGroup\n\nListGroups\n\nPath -> (string)\n\nThe path to the group. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nGroupName -> (string)\n\nThe friendly name that identifies the group.\n\nGroupId -> (string)\n\nThe stable and unique string identifying the group. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the group was created.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the IAM groups for the current account\n\nThe following list-groups command lists the IAM groups in the current account:\n\naws iam list-groups\n\n\nOutput:\n\n\"Groups\": [\n  {\n      \"Path\": \"/\",\n      \"CreateDate\": \"2013-06-04T20:27:27.972Z\",\n      \"GroupId\": \"AIDACKCEVSQ6C2EXAMPLE\",\n      \"Arn\": \"arn:aws:iam::123456789012:group/Admins\",\n      \"GroupName\": \"Admins\"\n  },\n  {\n      \"Path\": \"/\",\n      \"CreateDate\": \"2013-04-16T20:30:42Z\",\n      \"GroupId\": \"AIDGPMS9RO4H3FEXAMPLE\",\n      \"Arn\": \"arn:aws:iam::123456789012:group/S3-Admins\",\n      \"GroupName\": \"S3-Admins\"\n  }\n]\n\n\nFor more information, see Creating and Listing Groups in the Using IAM guide."
    },
    {
      "command_name": "list-groups-for-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-groups-for-user.html",
      "command_description": "Description\n\nLists the IAM groups that the specified IAM user belongs to.\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-groups-for-user is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Groups",
      "command_synopsis": "Synopsis\n  list-groups-for-user\n--user-name <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user to list groups for.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroups -> (list)\n\nA list of groups.\n\n(structure)\n\nContains information about an IAM group entity.\n\nThis data type is used as a response element in the following operations:\n\nCreateGroup\n\nGetGroup\n\nListGroups\n\nPath -> (string)\n\nThe path to the group. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nGroupName -> (string)\n\nThe friendly name that identifies the group.\n\nGroupId -> (string)\n\nThe stable and unique string identifying the group. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the group was created.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the groups that an IAM user belongs to\n\nThe following list-groups-for-user command displays the groups that the IAM user named Bob belongs to:\n\naws iam list-groups-for-user --user-name Bob\n\n\nOutput:\n\n\"Groups\": [\n    {\n        \"Path\": \"/\",\n        \"CreateDate\": \"2013-05-06T01:18:08Z\",\n        \"GroupId\": \"AKIAIOSFODNN7EXAMPLE\",\n        \"Arn\": \"arn:aws:iam::123456789012:group/Admin\",\n        \"GroupName\": \"Admin\"\n    },\n    {\n        \"Path\": \"/\",\n        \"CreateDate\": \"2013-05-06T01:37:28Z\",\n        \"GroupId\": \"AKIAI44QH8DHBEXAMPLE\",\n        \"Arn\": \"arn:aws:iam::123456789012:group/s3-Users\",\n        \"GroupName\": \"s3-Users\"\n    }\n]\n\n\nFor more information, see Creating and Listing Groups in the Using IAM guide."
    },
    {
      "command_name": "list-instance-profile-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-instance-profile-tags.html",
      "command_description": "Description\n\nLists the tags that are attached to the specified IAM instance profile. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-instance-profile-tags\n--instance-profile-name <value>\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-profile-name <value>",
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-profile-name (string)\n\nThe name of the IAM instance profile whose tags you want to see.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--max-items (integer)\n\nUse this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\n\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true , and Marker contains a value to include in the subsequent call that tells the service where to continue from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tags that are currently attached to the IAM instance profile. Each tag consists of a key name and an associated value. If no tags are attached to the specified resource, the response contains an empty list.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request."
    },
    {
      "command_name": "list-instance-profiles",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-instance-profiles.html",
      "command_description": "Description\n\nLists the instance profiles that have the specified path prefix. If there are none, the operation returns an empty list. For more information about instance profiles, see About instance profiles .\n\nNote\n\nIAM resource-listing operations return a subset of the available attributes for the resource. For example, this operation does not return tags, even though they are an attribute of the returned object. To view all of the information for an instance profile, see GetInstanceProfile .\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-instance-profiles is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: InstanceProfiles",
      "command_synopsis": "Synopsis\n  list-instance-profiles\n[--path-prefix <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--path-prefix <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path-prefix (string)\n\nThe path prefix for filtering the results. For example, the prefix /application_abc/component_xyz/ gets all instance profiles whose path starts with /application_abc/component_xyz/ .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/), listing all instance profiles. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstanceProfiles -> (list)\n\nA list of instance profiles.\n\n(structure)\n\nContains information about an instance profile.\n\nThis data type is used as a response element in the following operations:\n\nCreateInstanceProfile\n\nGetInstanceProfile\n\nListInstanceProfiles\n\nListInstanceProfilesForRole\n\nPath -> (string)\n\nThe path to the instance profile. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nInstanceProfileName -> (string)\n\nThe name identifying the instance profile.\n\nInstanceProfileId -> (string)\n\nThe stable and unique string identifying the instance profile. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date when the instance profile was created.\n\nRoles -> (list)\n\nThe role associated with the instance profile.\n\n(structure)\n\nContains information about an IAM role. This structure is returned as a response element in several API operations that interact with roles.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide guide.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe policy that grants an entity permission to assume the role.\n\nDescription -> (string)\n\nA description of the role that you provide.\n\nMaxSessionDuration -> (integer)\n\nThe maximum session duration (in seconds) for the specified role. Anyone who uses the CLI, or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter.\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.\n\nTags -> (list)\n\nA list of tags that are attached to the instance profile. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo lists the instance profiles for the account\n\nThe following list-instance-profiles command lists the instance profiles that are associated with the current account:\n\naws iam list-instance-profiles\n\n\nOutput:\n\n{\n  \"InstanceProfiles\": [\n    {\n      \"InstanceProfileId\": \"AIPAIXEU4NUHUPEXAMPLE\",\n      \"Roles\": [\n        {\n          \"AssumeRolePolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n              {\n                \"Action\": \"sts:AssumeRole\",\n                \"Principal\": {\n                  \"Service\": \"ec2.amazonaws.com\"\n                },\n                \"Effect\": \"Allow\",\n                \"Sid\": \"\"\n              }\n            ]\n          },\n          \"RoleId\": \"AROAJ52OTH4H7LEXAMPLE\",\n          \"CreateDate\": \"2013-05-11T00:02:27Z\",\n          \"RoleName\": \"example-role\",\n          \"Path\": \"/\",\n          \"Arn\": \"arn:aws:iam::123456789012:role/example-role\"\n        }\n      ],\n      \"CreateDate\": \"2013-05-11T00:02:27Z\",\n      \"InstanceProfileName\": \"ExampleInstanceProfile\",\n      \"Path\": \"/\",\n      \"Arn\": \"arn:aws:iam::123456789012:instance-profile/ExampleInstanceProfile\"\n    },\n    {\n      \"InstanceProfileId\": \"AIPAJVJVNRIQFREXAMPLE\",\n      \"Roles\": [\n        {\n          \"AssumeRolePolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n              {\n                \"Action\": \"sts:AssumeRole\",\n                \"Principal\": {\n                  \"Service\": \"ec2.amazonaws.com\"\n                },\n                \"Effect\": \"Allow\",\n                \"Sid\": \"\"\n              }\n            ]\n          },\n          \"RoleId\": \"AROAINUBC5O7XLEXAMPLE\",\n          \"CreateDate\": \"2013-01-09T06:33:26Z\",\n          \"RoleName\": \"s3-test-role\",\n          \"Path\": \"/\",\n          \"Arn\": \"arn:aws:iam::123456789012:role/s3-test-role\"\n        }\n      ],\n      \"CreateDate\": \"2013-06-12T23:52:02Z\",\n      \"InstanceProfileName\": \"ExampleInstanceProfile2\",\n      \"Path\": \"/\",\n      \"Arn\": \"arn:aws:iam::123456789012:instance-profile/ExampleInstanceProfile2\"\n    },\n  ]\n}\n\n\nFor more information, see Instance Profiles in the Using IAM guide."
    },
    {
      "command_name": "list-instance-profiles-for-role",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-instance-profiles-for-role.html",
      "command_description": "Description\n\nLists the instance profiles that have the specified associated IAM role. If there are none, the operation returns an empty list. For more information about instance profiles, go to About instance profiles .\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-instance-profiles-for-role is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: InstanceProfiles",
      "command_synopsis": "Synopsis\n  list-instance-profiles-for-role\n--role-name <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the role to list instance profiles for.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstanceProfiles -> (list)\n\nA list of instance profiles.\n\n(structure)\n\nContains information about an instance profile.\n\nThis data type is used as a response element in the following operations:\n\nCreateInstanceProfile\n\nGetInstanceProfile\n\nListInstanceProfiles\n\nListInstanceProfilesForRole\n\nPath -> (string)\n\nThe path to the instance profile. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nInstanceProfileName -> (string)\n\nThe name identifying the instance profile.\n\nInstanceProfileId -> (string)\n\nThe stable and unique string identifying the instance profile. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date when the instance profile was created.\n\nRoles -> (list)\n\nThe role associated with the instance profile.\n\n(structure)\n\nContains information about an IAM role. This structure is returned as a response element in several API operations that interact with roles.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide guide.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe policy that grants an entity permission to assume the role.\n\nDescription -> (string)\n\nA description of the role that you provide.\n\nMaxSessionDuration -> (integer)\n\nThe maximum session duration (in seconds) for the specified role. Anyone who uses the CLI, or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter.\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.\n\nTags -> (list)\n\nA list of tags that are attached to the instance profile. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the instance profiles for an IAM role\n\nThe following list-instance-profiles-for-role command lists the instance profiles that are associated with the role Test-Role:\n\naws iam list-instance-profiles-for-role --role-name Test-Role\n\n\nOutput:\n\n\"InstanceProfiles\": [\n    {\n        \"InstanceProfileId\": \"AIDGPMS9RO4H3FEXAMPLE\",\n        \"Roles\": [\n            {\n                \"AssumeRolePolicyDocument\": \"<URL-encoded-JSON>\",\n                \"RoleId\": \"AIDACKCEVSQ6C2EXAMPLE\",\n                \"CreateDate\": \"2013-06-07T20:42:15Z\",\n                \"RoleName\": \"Test-Role\",\n                \"Path\": \"/\",\n                \"Arn\": \"arn:aws:iam::123456789012:role/Test-Role\"\n            }\n        ],\n        \"CreateDate\": \"2013-06-07T21:05:24Z\",\n        \"InstanceProfileName\": \"ExampleInstanceProfile\",\n        \"Path\": \"/\",\n        \"Arn\": \"arn:aws:iam::123456789012:instance-profile/ExampleInstanceProfile\"\n    }\n]\n\n\nFor more information, see Instance Profiles in the Using IAM guide."
    },
    {
      "command_name": "list-mfa-device-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-mfa-device-tags.html",
      "command_description": "Description\n\nLists the tags that are attached to the specified IAM virtual multi-factor authentication (MFA) device. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-mfa-device-tags\n--serial-number <value>\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--serial-number <value>",
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--serial-number (string)\n\nThe unique identifier for the IAM virtual MFA device whose tags you want to see. For virtual MFA devices, the serial number is the same as the ARN.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--max-items (integer)\n\nUse this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\n\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true , and Marker contains a value to include in the subsequent call that tells the service where to continue from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tags that are currently attached to the virtual MFA device. Each tag consists of a key name and an associated value. If no tags are attached to the specified resource, the response contains an empty list.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request."
    },
    {
      "command_name": "list-mfa-devices",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-mfa-devices.html",
      "command_description": "Description\n\nLists the MFA devices for an IAM user. If the request includes a IAM user name, then this operation lists all the MFA devices associated with the specified user. If you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request for this operation.\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-mfa-devices is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: MFADevices",
      "command_synopsis": "Synopsis\n  list-mfa-devices\n[--user-name <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user whose MFA devices you want to list.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMFADevices -> (list)\n\nA list of MFA devices.\n\n(structure)\n\nContains information about an MFA device.\n\nThis data type is used as a response element in the ListMFADevices operation.\n\nUserName -> (string)\n\nThe user with whom the MFA device is associated.\n\nSerialNumber -> (string)\n\nThe serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.\n\nEnableDate -> (timestamp)\n\nThe date when the MFA device was enabled for the user.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list all MFA devices for a specified user\n\nThis example returns details about the MFA device assigned to the IAM user Bob:\n\naws iam list-mfa-devices --user-name Bob\n\n\nOutput:\n\n{\n  \"MFADevices\": [\n    {\n      \"UserName\": \"Bob\",\n      \"SerialNumber\": \"arn:aws:iam::123456789012:mfa/BobsMFADevice\",\n      \"EnableDate\": \"2015-06-16T22:36:37Z\"\n    }\n  ]\n}\n\n\nFor more information, see Using Multi-Factor Authentication (MFA) Devices with AWS in the Using IAM guide."
    },
    {
      "command_name": "list-open-id-connect-provider-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-open-id-connect-provider-tags.html",
      "command_description": "Description\n\nLists the tags that are attached to the specified OpenID Connect (OIDC)-compatible identity provider. The returned list of tags is sorted by tag key. For more information, see About web identity federation .\n\nFor more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-open-id-connect-provider-tags\n--open-id-connect-provider-arn <value>\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--open-id-connect-provider-arn <value>",
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--open-id-connect-provider-arn (string)\n\nThe ARN of the OpenID Connect (OIDC) identity provider whose tags you want to see.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--max-items (integer)\n\nUse this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\n\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true , and Marker contains a value to include in the subsequent call that tells the service where to continue from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tags that are currently attached to the OpenID Connect (OIDC) identity provider. Each tag consists of a key name and an associated value. If no tags are attached to the specified resource, the response contains an empty list.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request."
    },
    {
      "command_name": "list-open-id-connect-providers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-open-id-connect-providers.html",
      "command_description": "Description\n\nLists information about the IAM OpenID Connect (OIDC) provider resource objects defined in the Amazon Web Services account.\n\nNote\n\nIAM resource-listing operations return a subset of the available attributes for the resource. For example, this operation does not return tags, even though they are an attribute of the returned object. To view all of the information for an OIDC provider, see GetOpenIDConnectProvider .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-open-id-connect-providers\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOpenIDConnectProviderList -> (list)\n\nThe list of IAM OIDC provider resource objects defined in the Amazon Web Services account.\n\n(structure)\n\nContains the Amazon Resource Name (ARN) for an IAM OpenID Connect provider.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .",
      "command_examples": "Examples\n\nTo list information about the OpenID Connect providers in the AWS account\n\nThis example returns a list of ARNS of all the OpenID Connect providers that are defined in the current AWS account:\n\naws iam list-open-id-connect-providers\n\n\nOutput:\n\n{\n  \"OpenIDConnectProviderList\": [\n    {\n      \"Arn\": \"arn:aws:iam::123456789012:oidc-provider/example.oidcprovider.com\"\n    }\n  ]\n}\n\n\nFor more information, see Using OpenID Connect Identity Providers in the Using IAM guide."
    },
    {
      "command_name": "list-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-policies.html",
      "command_description": "Description\n\nLists all the managed policies that are available in your Amazon Web Services account, including your own customer-defined managed policies and all Amazon Web Services managed policies.\n\nYou can filter the list of policies that is returned using the optional OnlyAttached , Scope , and PathPrefix parameters. For example, to list only the customer managed policies in your Amazon Web Services account, set Scope to Local . To list only Amazon Web Services managed policies, set Scope to AWS .\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nFor more information about managed policies, see Managed policies and inline policies in the IAM User Guide .\n\nNote\n\nIAM resource-listing operations return a subset of the available attributes for the resource. For example, this operation does not return tags, even though they are an attribute of the returned object. To view all of the information for a customer manged policy, see GetPolicy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Policies",
      "command_synopsis": "Synopsis\n  list-policies\n[--scope <value>]\n[--only-attached | --no-only-attached]\n[--path-prefix <value>]\n[--policy-usage-filter <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--scope <value>]",
        "[--only-attached | --no-only-attached]",
        "[--path-prefix <value>]",
        "[--policy-usage-filter <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--scope (string)\n\nThe scope to use for filtering the results.\n\nTo list only Amazon Web Services managed policies, set Scope to AWS . To list only the customer managed policies in your Amazon Web Services account, set Scope to Local .\n\nThis parameter is optional. If it is not included, or if it is set to All , all policies are returned.\n\nPossible values:\n\nAll\n\nAWS\n\nLocal\n\n--only-attached | --no-only-attached (boolean)\n\nA flag to filter the results to only the attached policies.\n\nWhen OnlyAttached is true , the returned list contains only the policies that are attached to an IAM user, group, or role. When OnlyAttached is false , or when the parameter is not included, all policies are returned.\n\n--path-prefix (string)\n\nThe path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--policy-usage-filter (string)\n\nThe policy usage method to use for filtering the results.\n\nTo list only permissions policies, set PolicyUsageFilter to PermissionsPolicy . To list only the policies used to set permissions boundaries, set the value to PermissionsBoundary .\n\nThis parameter is optional. If it is not included, all policies are returned.\n\nPossible values:\n\nPermissionsPolicy\n\nPermissionsBoundary\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicies -> (list)\n\nA list of policies.\n\n(structure)\n\nContains information about a managed policy.\n\nThis data type is used as a response element in the CreatePolicy , GetPolicy , and ListPolicies operations.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nPolicyName -> (string)\n\nThe friendly name (not ARN) identifying the policy.\n\nPolicyId -> (string)\n\nThe stable and unique string identifying the policy.\n\nFor more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nPath -> (string)\n\nThe path to the policy.\n\nFor more information about paths, see IAM identifiers in the IAM User Guide .\n\nDefaultVersionId -> (string)\n\nThe identifier for the version of the policy that is set as the default version.\n\nAttachmentCount -> (integer)\n\nThe number of entities (users, groups, and roles) that the policy is attached to.\n\nPermissionsBoundaryUsageCount -> (integer)\n\nThe number of entities (users and roles) for which the policy is used to set the permissions boundary.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nIsAttachable -> (boolean)\n\nSpecifies whether the policy can be attached to an IAM user, group, or role.\n\nDescription -> (string)\n\nA friendly description of the policy.\n\nThis element is included in the response to the GetPolicy operation. It is not included in the response to the ListPolicies operation.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy was created.\n\nUpdateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy was last updated.\n\nWhen a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.\n\nTags -> (list)\n\nA list of tags that are attached to the instance profile. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list managed policies that are available to your AWS account\n\nThis example returns a collection of the first two managed policies available in the current AWS account:\n\naws iam list-policies --max-items 2\n\n\nOutput:\n\n{\n    \"Marker\": \"AAIWFnoA2MQ9zN9nnTorukxr1uesDIDa4u+q1mEfaurCDZ1AuCYagYfayKYGvu75BEGk8PooPsw5uvumkuizFACZ8f4rKtN1RuBWiVDBWet2OA==\",\n        \"IsTruncated\": true,\n        \"Policies\": [\n        {\n                \"PolicyName\": \"AdministratorAccess\",\n                \"CreateDate\": \"2015-02-06T18:39:46Z\",\n                \"AttachmentCount\": 5,\n                \"IsAttachable\": true,\n                \"PolicyId\": \"ANPAIWMBCKSKIEE64ZLYK\",\n                \"DefaultVersionId\": \"v1\",\n                \"Path\": \"/\",\n                \"Arn\": \"arn:aws:iam::aws:policy/AdministratorAccess\",\n                \"UpdateDate\": \"2015-02-06T18:39:46Z\"\n              },\n              {\n                \"PolicyName\": \"ASamplePolicy\",\n                \"CreateDate\": \"2015-06-17T19:23;32Z\",\n                \"AttachmentCount\": \"0\",\n                \"IsAttachable\": \"true\",\n                \"PolicyId\": \"Z27SI6FQMGNQ2EXAMPLE1\",\n                \"DefaultVersionId\": \"v1\",\n                \"Path\": \"/\",\n                \"Arn\": \"arn:aws:iam::123456789012:policy/ASamplePolicy\",\n                \"UpdateDate\": \"2015-06-17T19:23:32Z\"\n              }\n        ]\n}\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "list-policies-granting-service-access",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-policies-granting-service-access.html",
      "command_description": "Description\n\nRetrieves a list of policies that the IAM identity (user, group, or role) can use to access each specified service.\n\nNote\n\nThis operation does not use other policy types when determining whether a resource could access a service. These other policy types include resource-based policies, access control lists, Organizations policies, IAM permissions boundaries, and STS assume role policies. It only applies permissions policy logic. For more about the evaluation of policy types, see Evaluating policies in the IAM User Guide .\n\nThe list of policies returned by the operation depends on the ARN of the identity that you provide.\n\nUser – The list of policies includes the managed and inline policies that are attached to the user directly. The list also includes any additional managed and inline policies that are attached to the group to which the user belongs.\n\nGroup – The list of policies includes only the managed and inline policies that are attached to the group directly. Policies that are attached to the group’s user are not included.\n\nRole – The list of policies includes only the managed and inline policies that are attached to the role.\n\nFor each managed policy, this operation returns the ARN and policy name. For each inline policy, it returns the policy name and the entity to which it is attached. Inline policies do not have an ARN. For more information about these policy types, see Managed policies and inline policies in the IAM User Guide .\n\nPolicies that are attached to users and roles as permissions boundaries are not returned. To view which managed policy is currently used to set the permissions boundary for a user or role, use the GetUser or GetRole operations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-policies-granting-service-access\n[--marker <value>]\n--arn <value>\n--service-namespaces <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "--arn <value>",
        "--service-namespaces <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--arn (string)\n\nThe ARN of the IAM identity (user, group, or role) whose policies you want to list.\n\n--service-namespaces (list)\n\nThe service namespace for the Amazon Web Services services whose policies you want to list.\n\nTo learn the service namespace for a service, see Actions, resources, and condition keys for Amazon Web Services services in the IAM User Guide . Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, (service prefix: a4b) . For more information about service namespaces, see Amazon Web Services service namespaces in the Amazon Web Services General Reference .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPoliciesGrantingServiceAccess -> (list)\n\nA ListPoliciesGrantingServiceAccess object that contains details about the permissions policies attached to the specified identity (user, group, or role).\n\n(structure)\n\nContains details about the permissions policies that are attached to the specified identity (user, group, or role).\n\nThis data type is used as a response element in the ListPoliciesGrantingServiceAccess operation.\n\nServiceNamespace -> (string)\n\nThe namespace of the service that was accessed.\n\nTo learn the service namespace of a service, see Actions, resources, and condition keys for Amazon Web Services services in the Service Authorization Reference . Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, (service prefix: a4b) . For more information about service namespaces, see Amazon Web Services service namespaces in the Amazon Web Services General Reference .\n\nPolicies -> (list)\n\nThe PoliciesGrantingServiceAccess object that contains details about the policy.\n\n(structure)\n\nContains details about the permissions policies that are attached to the specified identity (user, group, or role).\n\nThis data type is an element of the ListPoliciesGrantingServiceAccessEntry object.\n\nPolicyName -> (string)\n\nThe policy name.\n\nPolicyType -> (string)\n\nThe policy type. For more information about these policy types, see Managed policies and inline policies in the IAM User Guide .\n\nPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.\n\nFor more information about ARNs, go to Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\nEntityType -> (string)\n\nThe type of entity (user or role) that used the policy to access the service to which the inline policy is attached.\n\nThis field is null for managed policies. For more information about these policy types, see Managed policies and inline policies in the IAM User Guide .\n\nEntityName -> (string)\n\nThe name of the entity (user or role) to which the inline policy is attached.\n\nThis field is null for managed policies. For more information about these policy types, see Managed policies and inline policies in the IAM User Guide .\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the policies that grant a principal access to the specified service\n\nThe following list-policies-granting-service-access example retrieves the list of policies that grant the IAM user sofia access to AWS CodeCommit service.\n\naws iam list-policies-granting-service-access \\\n    --arn arn:aws:iam::123456789012:user/sofia \\\n    --service-namespaces codecommit\n\n\nOutput:\n\n{\n    \"PoliciesGrantingServiceAccess\": [\n        {\n            \"ServiceNamespace\": \"codecommit\",\n            \"Policies\": [\n                {\n                    \"PolicyName\": \"Grant-Sofia-Access-To-CodeCommit\",\n                    \"PolicyType\": \"INLINE\",\n                    \"EntityType\": \"USER\",\n                    \"EntityName\": \"sofia\"\n                }\n            ]\n        }\n    ],\n    \"IsTruncated\": false\n}\n\n\nFor more information, see Using IAM with CodeCommit: Git Credentials, SSH Keys, and AWS Access Keys in the AWS IAM User Guide."
    },
    {
      "command_name": "list-policy-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-policy-tags.html",
      "command_description": "Description\n\nLists the tags that are attached to the specified IAM customer managed policy. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-policy-tags\n--policy-arn <value>\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe ARN of the IAM customer managed policy whose tags you want to see.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--max-items (integer)\n\nUse this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\n\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true , and Marker contains a value to include in the subsequent call that tells the service where to continue from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tags that are currently attached to the IAM customer managed policy. Each tag consists of a key name and an associated value. If no tags are attached to the specified resource, the response contains an empty list.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request."
    },
    {
      "command_name": "list-policy-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-policy-versions.html",
      "command_description": "Description\n\nLists information about the versions of the specified managed policy, including the version that is currently set as the policy’s default version.\n\nFor more information about managed policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-policy-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Versions",
      "command_synopsis": "Synopsis\n  list-policy-versions\n--policy-arn <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy for which you want the versions.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nVersions -> (list)\n\nA list of policy versions.\n\nFor more information about managed policy versions, see Versioning for managed policies in the IAM User Guide .\n\n(structure)\n\nContains information about a version of a managed policy.\n\nThis data type is used as a response element in the CreatePolicyVersion , GetPolicyVersion , ListPolicyVersions , and GetAccountAuthorizationDetails operations.\n\nFor more information about managed policies, refer to Managed policies and inline policies in the IAM User Guide .\n\nDocument -> (string)\n\nThe policy document.\n\nThe policy document is returned in the response to the GetPolicyVersion and GetAccountAuthorizationDetails operations. It is not returned in the response to the CreatePolicyVersion or ListPolicyVersions operations.\n\nThe policy document returned in this structure is URL-encoded compliant with RFC 3986 . You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the decode method of the java.net.URLDecoder utility class in the Java SDK. Other languages and SDKs provide similar functionality.\n\nVersionId -> (string)\n\nThe identifier for the policy version.\n\nPolicy version identifiers always begin with v (always lowercase). When a policy is created, the first policy version is v1 .\n\nIsDefaultVersion -> (boolean)\n\nSpecifies whether the policy version is set as the policy’s default version.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the policy version was created.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list information about the versions of the specified managed policy\n\nThis example returns the list of available versions of the policy whose ARN is arn:aws:iam::123456789012:policy/MySamplePolicy:\n\naws iam list-policy-versions --policy-arn arn:aws:iam::123456789012:policy/MySamplePolicy\n\n\nOutput:\n\n{\n  \"IsTruncated\": false,\n  \"Versions\": [\n    {\n      \"CreateDate\": \"2015-06-02T23:19:44Z\",\n      \"VersionId\": \"v2\",\n      \"IsDefaultVersion\": true\n    },\n    {\n      \"CreateDate\": \"2015-06-02T22:30:47Z\",\n      \"VersionId\": \"v1\",\n      \"IsDefaultVersion\": false\n    }\n  ]\n}\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "list-role-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-role-policies.html",
      "command_description": "Description\n\nLists the names of the inline policies that are embedded in the specified IAM role.\n\nAn IAM role can also have managed policies attached to it. To list the managed policies that are attached to a role, use ListAttachedRolePolicies . For more information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nYou can paginate the results using the MaxItems and Marker parameters. If there are no inline policies embedded with the specified role, the operation returns an empty list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-role-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: PolicyNames",
      "command_synopsis": "Synopsis\n  list-role-policies\n--role-name <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the role to list policies for.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyNames -> (list)\n\nA list of policy names.\n\n(string)\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the policies attached to an IAM role\n\nThe following list-role-policies command lists the names of the permissions policies for the specified IAM role:\n\naws iam list-role-policies --role-name Test-Role\n\n\nOutput:\n\n\"PolicyNames\": [\n    \"ExamplePolicy\"\n]\n\n\nTo see the trust policy attached to a role, use the get-role command. To see the details of a permissions policy, use the get-role-policy command.\n\nFor more information, see Creating a Role in the Using IAM guide."
    },
    {
      "command_name": "list-role-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-role-tags.html",
      "command_description": "Description\n\nLists the tags that are attached to the specified role. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-role-tags\n--role-name <value>\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the IAM role for which you want to see the list of tags.\n\nThis parameter accepts (through its regex pattern ) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--max-items (integer)\n\nUse this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\n\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true , and Marker contains a value to include in the subsequent call that tells the service where to continue from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tags that are currently attached to the role. Each tag consists of a key name and an associated value. If no tags are attached to the specified resource, the response contains an empty list.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the tags attached to a role\n\nThe following list-role-tags command retrieves the list of tags associated with the specified role.\n\n  aws iam list-role-tags --role-name production-role\n\n  Output::\n{\n    \"Tags\": [\n        {\n            \"Key\": \"Department\",\n            \"Value\": \"Accounting\"\n        },\n        {\n            \"Key\": \"DeptID\",\n            \"Value\": \"12345\"\n        }\n    ],\n    \"IsTruncated\": false\n}\n\n\nFor more information, see Tagging IAM Entities in the AWS IAM User Guide"
    },
    {
      "command_name": "list-roles",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-roles.html",
      "command_description": "Description\n\nLists the IAM roles that have the specified path prefix. If there are none, the operation returns an empty list. For more information about roles, see Working with roles .\n\nNote\n\nIAM resource-listing operations return a subset of the available attributes for the resource. For example, this operation does not return tags, even though they are an attribute of the returned object. To view all of the information for a role, see GetRole .\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-roles is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Roles",
      "command_synopsis": "Synopsis\n  list-roles\n[--path-prefix <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--path-prefix <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path-prefix (string)\n\nThe path prefix for filtering the results. For example, the prefix /application_abc/component_xyz/ gets all roles whose path starts with /application_abc/component_xyz/ .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/), listing all roles. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRoles -> (list)\n\nA list of roles.\n\n(structure)\n\nContains information about an IAM role. This structure is returned as a response element in several API operations that interact with roles.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide guide.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe policy that grants an entity permission to assume the role.\n\nDescription -> (string)\n\nA description of the role that you provide.\n\nMaxSessionDuration -> (integer)\n\nThe maximum session duration (in seconds) for the specified role. Anyone who uses the CLI, or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter.\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list IAM roles for the current account\n\nThe following list-roles command lists IAM roles for the current account:\n\naws iam list-roles\n\n\nOutput:\n\n{\n  \"Roles\": [\n    {\n      \"AssumeRolePolicyDocument\": {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n          {\n            \"Action\": \"sts:AssumeRole\",\n            \"Principal\": {\n              \"Service\": \"ec2.amazonaws.com\"\n            },\n            \"Effect\": \"Allow\",\n            \"Sid\": \"\"\n          }\n        ]\n      },\n      \"RoleId\": \"AROAJ52OTH4H7LEXAMPLE\",\n      \"CreateDate\": \"2013-05-11T00:02:27Z\",\n      \"RoleName\": \"ExampleRole1\",\n      \"Path\": \"/\",\n      \"Arn\": \"arn:aws:iam::123456789012:role/ExampleRole1\"\n    },\n    {\n      \"AssumeRolePolicyDocument\": {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n          {\n            \"Action\": \"sts:AssumeRole\",\n            \"Principal\": {\n              \"Service\": \"elastictranscoder.amazonaws.com\"\n            },\n            \"Effect\": \"Allow\",\n            \"Sid\": \"\"\n          }\n        ]\n      },\n      \"RoleId\": \"AROAI4QRP7UFT7EXAMPLE\",\n      \"CreateDate\": \"2013-04-18T05:01:58Z\",\n      \"RoleName\": \"emr-access\",\n      \"Path\": \"/\",\n      \"Arn\": \"arn:aws:iam::123456789012:role/emr-access\"\n    }\n  ]\n}\n\n\nFor more information, see Creating a Role in the Using IAM guide."
    },
    {
      "command_name": "list-saml-provider-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-saml-provider-tags.html",
      "command_description": "Description\n\nLists the tags that are attached to the specified Security Assertion Markup Language (SAML) identity provider. The returned list of tags is sorted by tag key. For more information, see About SAML 2.0-based federation .\n\nFor more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-saml-provider-tags\n--saml-provider-arn <value>\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--saml-provider-arn <value>",
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--saml-provider-arn (string)\n\nThe ARN of the Security Assertion Markup Language (SAML) identity provider whose tags you want to see.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--max-items (integer)\n\nUse this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\n\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true , and Marker contains a value to include in the subsequent call that tells the service where to continue from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tags that are currently attached to the Security Assertion Markup Language (SAML) identity provider. Each tag consists of a key name and an associated value. If no tags are attached to the specified resource, the response contains an empty list.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request."
    },
    {
      "command_name": "list-saml-providers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-saml-providers.html",
      "command_description": "Description\n\nLists the SAML provider resource objects defined in IAM in the account. IAM resource-listing operations return a subset of the available attributes for the resource. For example, this operation does not return tags, even though they are an attribute of the returned object. To view all of the information for a SAML provider, see GetSAMLProvider .\n\nWarning\n\nThis operation requires Signature Version 4 .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-saml-providers\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSAMLProviderList -> (list)\n\nThe list of SAML provider resource objects defined in IAM for this Amazon Web Services account.\n\n(structure)\n\nContains the list of SAML providers for this account.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the SAML provider.\n\nValidUntil -> (timestamp)\n\nThe expiration date and time for the SAML provider.\n\nCreateDate -> (timestamp)\n\nThe date and time when the SAML provider was created.",
      "command_examples": "Examples\n\nTo list the SAML providers in the AWS account\n\nThis example retrieves the list of SAML 2.0 providers created in the current AWS account:\n\naws iam list-saml-providers\n\n\nOutput:\n\n{\n  \"SAMLProviderList\": [\n    {\n      \"CreateDate\": \"2015-06-05T22:45:14Z\",\n      \"ValidUntil\": \"2015-06-05T22:45:14Z\",\n      \"Arn\": \"arn:aws:iam::123456789012:saml-provider/SAMLADFS\"\n    }\n  ]\n}\n\n\nFor more information, see Using SAML Providers in the Using IAM guide."
    },
    {
      "command_name": "list-server-certificate-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-server-certificate-tags.html",
      "command_description": "Description\n\nLists the tags that are attached to the specified IAM server certificate. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nNote\n\nFor certificates in a Region supported by Certificate Manager (ACM), we recommend that you don’t use IAM server certificates. Instead, use ACM to provision, manage, and deploy your server certificates. For more information about IAM server certificates, Working with server certificates in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-server-certificate-tags\n--server-certificate-name <value>\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-certificate-name <value>",
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-certificate-name (string)\n\nThe name of the IAM server certificate whose tags you want to see.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--marker (string)\n\nUse this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the Marker element in the response that you received to indicate where the next call should start.\n\n--max-items (integer)\n\nUse this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the IsTruncated response element is true .\n\nIf you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the IsTruncated response element returns true , and Marker contains a value to include in the subsequent call that tells the service where to continue from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tags that are currently attached to the IAM server certificate. Each tag consists of a key name and an associated value. If no tags are attached to the specified resource, the response contains an empty list.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request."
    },
    {
      "command_name": "list-server-certificates",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-server-certificates.html",
      "command_description": "Description\n\nLists the server certificates stored in IAM that have the specified path prefix. If none exist, the operation returns an empty list.\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nFor more information about working with server certificates, see Working with server certificates in the IAM User Guide . This topic also includes a list of Amazon Web Services services that can use the server certificates that you manage with IAM.\n\nNote\n\nIAM resource-listing operations return a subset of the available attributes for the resource. For example, this operation does not return tags, even though they are an attribute of the returned object. To view all of the information for a servercertificate, see GetServerCertificate .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-server-certificates is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ServerCertificateMetadataList",
      "command_synopsis": "Synopsis\n  list-server-certificates\n[--path-prefix <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--path-prefix <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path-prefix (string)\n\nThe path prefix for filtering the results. For example: /company/servercerts would get all server certificates for which the path starts with /company/servercerts .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/), listing all server certificates. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerCertificateMetadataList -> (list)\n\nA list of server certificates.\n\n(structure)\n\nContains information about a server certificate without its certificate body, certificate chain, and private key.\n\nThis data type is used as a response element in the UploadServerCertificate and ListServerCertificates operations.\n\nPath -> (string)\n\nThe path to the server certificate. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nServerCertificateName -> (string)\n\nThe name that identifies the server certificate.\n\nServerCertificateId -> (string)\n\nThe stable and unique string identifying the server certificate. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nUploadDate -> (timestamp)\n\nThe date when the server certificate was uploaded.\n\nExpiration -> (timestamp)\n\nThe date on which the certificate is set to expire.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the server certificates in your AWS account\n\nThe following list-server-certificates command lists all of the server certificates stored and available for use in your AWS account.\n\naws iam list-server-certificates\n\n\nOutput:\n\n{\n    \"ServerCertificateMetadataList\": [\n        {\n            \"Path\": \"/\",\n            \"ServerCertificateName\": \"myUpdatedServerCertificate\",\n            \"ServerCertificateId\": \"ASCAEXAMPLE123EXAMPLE\",\n            \"Arn\": \"arn:aws:iam::123456789012:server-certificate/myUpdatedServerCertificate\",\n            \"UploadDate\": \"2019-04-22T21:13:44+00:00\",\n            \"Expiration\": \"2019-10-15T22:23:16+00:00\"\n        },\n        {\n            \"Path\": \"/cloudfront/\",\n            \"ServerCertificateName\": \"MyTestCert\",\n            \"ServerCertificateId\": \"ASCAEXAMPLE456EXAMPLE\",\n            \"Arn\": \"arn:aws:iam::123456789012:server-certificate/Org1/Org2/MyTestCert\",\n            \"UploadDate\": \"2015-04-21T18:14:16+00:00\",\n            \"Expiration\": \"2018-01-14T17:52:36+00:00\"\n        }\n    ]\n}\n\n\nFor more information, see Creating, Uploading, and Deleting Server Certificates in the IAM Users Guide."
    },
    {
      "command_name": "list-service-specific-credentials",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-service-specific-credentials.html",
      "command_description": "Description\n\nReturns information about the service-specific credentials associated with the specified IAM user. If none exists, the operation returns an empty list. The service-specific credentials returned by this operation are used only for authenticating the IAM user to a specific service. For more information about using service-specific credentials to authenticate to an Amazon Web Services service, see Set up service-specific credentials in the CodeCommit User Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-service-specific-credentials\n[--user-name <value>]\n[--service-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "[--service-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user whose service-specific credentials you want information about. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--service-name (string)\n\nFilters the returned results to only those for the specified Amazon Web Services service. If not specified, then Amazon Web Services returns service-specific credentials for all services.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServiceSpecificCredentials -> (list)\n\nA list of structures that each contain details about a service-specific credential.\n\n(structure)\n\nContains additional details about a service-specific credential.\n\nUserName -> (string)\n\nThe name of the IAM user associated with the service-specific credential.\n\nStatus -> (string)\n\nThe status of the service-specific credential. Active means that the key is valid for API calls, while Inactive means it is not.\n\nServiceUserName -> (string)\n\nThe generated user name for the service-specific credential.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the service-specific credential were created.\n\nServiceSpecificCredentialId -> (string)\n\nThe unique identifier for the service-specific credential.\n\nServiceName -> (string)\n\nThe name of the service associated with the service-specific credential.",
      "command_examples": "Examples\n\nTo retrieve a list of credentials\n\nThe following list-service-specific-credentials example lists the credentials generated for HTTPS access to AWS CodeCommit repositories for a user named developer.\n\naws iam list-service-specific-credentials \\\n    --user-name developer \\\n    --service-name codecommit.amazonaws.com\n\n\nOutput:\n\n{\n    \"ServiceSpecificCredentials\": [\n        {\n            \"UserName\": \"developer\",\n            \"Status\": \"Inactive\",\n            \"ServiceUserName\": \"developer-at-123456789012\",\n            \"CreateDate\": \"2019-10-01T04:31:41Z\",\n            \"ServiceSpecificCredentialId\": \"ACCAQFODXMPL4YFHP7DZE\",\n            \"ServiceName\": \"codecommit.amazonaws.com\"\n        },\n        {\n            \"UserName\": \"developer\",\n            \"Status\": \"Active\",\n            \"ServiceUserName\": \"developer+1-at-123456789012\",\n            \"CreateDate\": \"2019-10-01T04:31:45Z\",\n            \"ServiceSpecificCredentialId\": \"ACCAQFOXMPL6VW57M7AJP\",\n            \"ServiceName\": \"codecommit.amazonaws.com\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-signing-certificates",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-signing-certificates.html",
      "command_description": "Description\n\nReturns information about the signing certificates associated with the specified IAM user. If none exists, the operation returns an empty list.\n\nAlthough each user is limited to a small number of signing certificates, you can still paginate the results using the MaxItems and Marker parameters.\n\nIf the UserName field is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request for this operation. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-signing-certificates is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Certificates",
      "command_synopsis": "Synopsis\n  list-signing-certificates\n[--user-name <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user whose signing certificates you want to examine.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCertificates -> (list)\n\nA list of the user’s signing certificate information.\n\n(structure)\n\nContains information about an X.509 signing certificate.\n\nThis data type is used as a response element in the UploadSigningCertificate and ListSigningCertificates operations.\n\nUserName -> (string)\n\nThe name of the user the signing certificate is associated with.\n\nCertificateId -> (string)\n\nThe ID for the signing certificate.\n\nCertificateBody -> (string)\n\nThe contents of the signing certificate.\n\nStatus -> (string)\n\nThe status of the signing certificate. Active means that the key is valid for API calls, while Inactive means it is not.\n\nUploadDate -> (timestamp)\n\nThe date when the signing certificate was uploaded.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the signing certificates for an IAM user\n\nThe following list-signing-certificates command lists the signing certificates for the IAM user named Bob:\n\naws iam list-signing-certificates --user-name Bob\n\n\nOutput:\n\n{\n    \"Certificates\": [\n        {\n            \"UserName\": \"Bob\",\n            \"Status\": \"Inactive\",\n            \"CertificateBody\": \"-----BEGIN CERTIFICATE-----<certificate-body>-----END CERTIFICATE-----\",\n            \"CertificateId\": \"TA7SMP42TDN5Z26OBPJE7EXAMPLE\",\n            \"UploadDate\": \"2013-06-06T21:40:08Z\"\n        }\n    ]\n}\n\n\nFor more information, see Creating and Uploading a User Signing Certificate in the Using IAM guide."
    },
    {
      "command_name": "list-ssh-public-keys",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-ssh-public-keys.html",
      "command_description": "Description\n\nReturns information about the SSH public keys associated with the specified IAM user. If none exists, the operation returns an empty list.\n\nThe SSH public keys returned by this operation are used only for authenticating the IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see Set up CodeCommit for SSH connections in the CodeCommit User Guide .\n\nAlthough each user is limited to a small number of keys, you can still paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-ssh-public-keys is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SSHPublicKeys",
      "command_synopsis": "Synopsis\n  list-ssh-public-keys\n[--user-name <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user to list SSH public keys for. If none is specified, the UserName field is determined implicitly based on the Amazon Web Services access key used to sign the request.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSSHPublicKeys -> (list)\n\nA list of the SSH public keys assigned to IAM user.\n\n(structure)\n\nContains information about an SSH public key, without the key’s body or fingerprint.\n\nThis data type is used as a response element in the ListSSHPublicKeys operation.\n\nUserName -> (string)\n\nThe name of the IAM user associated with the SSH public key.\n\nSSHPublicKeyId -> (string)\n\nThe unique identifier for the SSH public key.\n\nStatus -> (string)\n\nThe status of the SSH public key. Active means that the key can be used for authentication with an CodeCommit repository. Inactive means that the key cannot be used.\n\nUploadDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the SSH public key was uploaded.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the SSH public keys attached to an IAM user\n\nThe following list-ssh-public-keys example lists the SSH public keys attached to the IAM user sofia.\n\naws iam list-ssh-public-keys  --user-name sofia\n\n\nOutput:\n\n{\n    \"SSHPublicKeys\": [\n        {\n            \"UserName\": \"sofia\",\n            \"SSHPublicKeyId\": \"APKA1234567890EXAMPLE\",\n            \"Status\": \"Inactive\",\n            \"UploadDate\": \"2019-04-18T17:04:49+00:00\"\n        }\n    ]\n}\n\n\nFor more information about SSH keys in IAM, see Use SSH Keys and SSH with CodeCommit in the AWS IAM User Guide"
    },
    {
      "command_name": "list-user-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-user-policies.html",
      "command_description": "Description\n\nLists the names of the inline policies embedded in the specified IAM user.\n\nAn IAM user can also have managed policies attached to it. To list the managed policies that are attached to a user, use ListAttachedUserPolicies . For more information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nYou can paginate the results using the MaxItems and Marker parameters. If there are no inline policies embedded with the specified user, the operation returns an empty list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-user-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: PolicyNames",
      "command_synopsis": "Synopsis\n  list-user-policies\n--user-name <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user to list policies for.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyNames -> (list)\n\nA list of policy names.\n\n(string)\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list policies for an IAM user\n\nThe following list-user-policies command lists the policies that are attached to the IAM user named Bob:\n\naws iam list-user-policies --user-name Bob\n\n\nOutput:\n\n\"PolicyNames\": [\n    \"ExamplePolicy\",\n    \"TestPolicy\"\n]\n\n\nFor more information, see Adding a New User to Your AWS Account in the Using IAM guide."
    },
    {
      "command_name": "list-user-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-user-tags.html",
      "command_description": "Description\n\nLists the tags that are attached to the specified IAM user. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-user-tags is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Tags",
      "command_synopsis": "Synopsis\n  list-user-tags\n--user-name <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user whose tags you want to see.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tags that are currently attached to the user. Each tag consists of a key name and an associated value. If no tags are attached to the specified resource, the response contains an empty list.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list the tags attached to a user\n\nThe following list-user-tags command retrieves the list of tags associated with the specified IAM user.\n\n  aws iam list-user-tags --user-name alice\n\n  Output::\n{\n    \"Tags\": [\n        {\n            \"Key\": \"Department\",\n            \"Value\": \"Accounting\"\n        },\n        {\n            \"Key\": \"DeptID\",\n            \"Value\": \"12345\"\n        }\n    ],\n    \"IsTruncated\": false\n}\n\n\nFor more information, see Tagging IAM Entities in the AWS IAM User Guide"
    },
    {
      "command_name": "list-users",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-users.html",
      "command_description": "Description\n\nLists the IAM users that have the specified path prefix. If no path prefix is specified, the operation returns all users in the Amazon Web Services account. If there are none, the operation returns an empty list.\n\nNote\n\nIAM resource-listing operations return a subset of the available attributes for the resource. For example, this operation does not return tags, even though they are an attribute of the returned object. To view all of the information for a user, see GetUser .\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-users is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Users",
      "command_synopsis": "Synopsis\n  list-users\n[--path-prefix <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--path-prefix <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path-prefix (string)\n\nThe path prefix for filtering the results. For example: /division_abc/subdivision_xyz/ , which would get all user names whose path starts with /division_abc/subdivision_xyz/ .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/), listing all user names. This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUsers -> (list)\n\nA list of users.\n\n(structure)\n\nContains information about an IAM user entity.\n\nThis data type is used as a response element in the following operations:\n\nCreateUser\n\nGetUser\n\nListUsers\n\nPath -> (string)\n\nThe path to the user. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nThe ARN of the policy used to set the permissions boundary for the user.\n\nUserName -> (string)\n\nThe friendly name identifying the user.\n\nUserId -> (string)\n\nThe stable and unique string identifying the user. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see IAM Identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user was created.\n\nPasswordLastUsed -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user’s password was last used to sign in to an Amazon Web Services website. For a list of Amazon Web Services websites that capture a user’s last sign-in time, see the Credential reports topic in the IAM User Guide . If a password is used more than once in a five-minute span, only the first use is returned in this field. If the field is null (no value), then it indicates that they never signed in with a password. This can be because:\n\nThe user never had a password.\n\nA password exists but has not been used since IAM started tracking this information on October 20, 2014.\n\nA null value does not mean that the user never had a password. Also, if the user does not currently have a password but had one in the past, then this field contains the date and time the most recent password was used.\n\nThis value is returned only in the GetUser and ListUsers operations.\n\nPermissionsBoundary -> (structure)\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are associated with the user. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list IAM users\n\nThe following list-users command lists the IAM users in the current account:\n\naws iam list-users\n\n\nOutput:\n\n\"Users\": [\n    {\n        \"UserName\": \"Adele\",\n        \"Path\": \"/\",\n        \"CreateDate\": \"2013-03-07T05:14:48Z\",\n        \"UserId\": \"AKIAI44QH8DHBEXAMPLE\",\n        \"Arn\": \"arn:aws:iam::123456789012:user/Adele\"\n    },\n    {\n        \"UserName\": \"Bob\",\n        \"Path\": \"/\",\n        \"CreateDate\": \"2012-09-21T23:03:13Z\",\n        \"UserId\": \"AKIAIOSFODNN7EXAMPLE\",\n        \"Arn\": \"arn:aws:iam::123456789012:user/Bob\"\n    }\n]\n\n\nFor more information, see Listing Users in the Using IAM guide."
    },
    {
      "command_name": "list-virtual-mfa-devices",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-virtual-mfa-devices.html",
      "command_description": "Description\n\nLists the virtual MFA devices defined in the Amazon Web Services account by assignment status. If you do not specify an assignment status, the operation returns a list of all virtual MFA devices. Assignment status can be Assigned , Unassigned , or Any .\n\nNote\n\nIAM resource-listing operations return a subset of the available attributes for the resource. For example, this operation does not return tags, even though they are an attribute of the returned object. To view all of the information for a virtual MFA device, see ListVirtualMFADevices .\n\nYou can paginate the results using the MaxItems and Marker parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-virtual-mfa-devices is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: VirtualMFADevices",
      "command_synopsis": "Synopsis\n  list-virtual-mfa-devices\n[--assignment-status <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--assignment-status <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--assignment-status (string)\n\nThe status (Unassigned or Assigned ) of the devices to list. If you do not specify an AssignmentStatus , the operation defaults to Any , which lists both assigned and unassigned virtual MFA devices.,\n\nPossible values:\n\nAssigned\n\nUnassigned\n\nAny\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nVirtualMFADevices -> (list)\n\nThe list of virtual MFA devices in the current account that match the AssignmentStatus value that was passed in the request.\n\n(structure)\n\nContains information about a virtual MFA device.\n\nSerialNumber -> (string)\n\nThe serial number associated with VirtualMFADevice .\n\nBase32StringSeed -> (blob)\n\nThe base32 seed defined as specified in RFC3548 . The Base32StringSeed is base64-encoded.\n\nQRCodePNG -> (blob)\n\nA QR code PNG image that encodes otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String where $virtualMFADeviceName is one of the create call arguments. AccountName is the user name if set (otherwise, the account ID otherwise), and Base32String is the seed in base32 format. The Base32String value is base64-encoded.\n\nUser -> (structure)\n\nThe IAM user associated with this virtual MFA device.\n\nPath -> (string)\n\nThe path to the user. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nThe ARN of the policy used to set the permissions boundary for the user.\n\nUserName -> (string)\n\nThe friendly name identifying the user.\n\nUserId -> (string)\n\nThe stable and unique string identifying the user. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see IAM Identifiers in the IAM User Guide .\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user was created.\n\nPasswordLastUsed -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the user’s password was last used to sign in to an Amazon Web Services website. For a list of Amazon Web Services websites that capture a user’s last sign-in time, see the Credential reports topic in the IAM User Guide . If a password is used more than once in a five-minute span, only the first use is returned in this field. If the field is null (no value), then it indicates that they never signed in with a password. This can be because:\n\nThe user never had a password.\n\nA password exists but has not been used since IAM started tracking this information on October 20, 2014.\n\nA null value does not mean that the user never had a password. Also, if the user does not currently have a password but had one in the past, then this field contains the date and time the most recent password was used.\n\nThis value is returned only in the GetUser and ListUsers operations.\n\nPermissionsBoundary -> (structure)\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are associated with the user. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nEnableDate -> (timestamp)\n\nThe date and time on which the virtual MFA device was enabled.\n\nTags -> (list)\n\nA list of tags that are attached to the virtual MFA device. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo list virtual MFA devices\n\nThe following list-virtual-mfa-devices command lists the virtual MFA devices that have been configured for the current account:\n\naws iam list-virtual-mfa-devices\n\n\nOutput:\n\n{\n  \"VirtualMFADevices\": [\n    {\n      \"SerialNumber\": \"arn:aws:iam::123456789012:mfa/ExampleMFADevice\"\n    },\n    {\n      \"SerialNumber\": \"arn:aws:iam::123456789012:mfa/Fred\"\n    }\n  ]\n}\n\n\nFor more information, see Using a Virtual MFA Device with AWS in the Using IAM guide."
    },
    {
      "command_name": "put-group-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/put-group-policy.html",
      "command_description": "Description\n\nAdds or updates an inline policy document that is embedded in the specified IAM group.\n\nA user can also have managed policies attached to it. To attach a managed policy to a group, use AttachGroupPolicy . To create a new managed policy, use CreatePolicy . For information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nFor information about the maximum number of inline policies that you can embed in a group, see IAM and STS quotas in the IAM User Guide .\n\nNote\n\nBecause policy documents can be large, you should use POST rather than GET when calling PutGroupPolicy . For general information about using the Query API with IAM, see Making query requests in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-group-policy\n--group-name <value>\n--policy-name <value>\n--policy-document <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "--policy-name <value>",
        "--policy-document <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name of the group to associate the policy with.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.\n\n--policy-name (string)\n\nThe name of the policy document.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-document (string)\n\nThe policy document.\n\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to = IAM.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a policy to a group\n\nThe following put-group-policy command adds a policy to the IAM group named Admins:\n\naws iam put-group-policy --group-name Admins --policy-document file://AdminPolicy.json --policy-name AdminRoot\n\n\nThe policy is defined as a JSON document in the AdminPolicy.json file. (The file name and extension do not have significance.)\n\nFor more information, see Managing IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "put-role-permissions-boundary",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/put-role-permissions-boundary.html",
      "command_description": "Description\n\nAdds or updates the policy that is specified as the IAM role’s permissions boundary. You can use an Amazon Web Services managed policy or a customer managed policy to set the boundary for a role. Use the boundary to control the maximum permissions that the role can have. Setting a permissions boundary is an advanced feature that can affect the permissions for the role.\n\nYou cannot set the boundary for a service-linked role.\n\nWarning\n\nPolicies used as permissions boundaries do not provide permissions. You must also attach a permissions policy to the role. To learn how the effective permissions for a role are evaluated, see IAM JSON policy evaluation logic in the IAM User Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-role-permissions-boundary\n--role-name <value>\n--permissions-boundary <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "--permissions-boundary <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name (friendly name, not ARN) of the IAM role for which you want to set the permissions boundary.\n\n--permissions-boundary (string)\n\nThe ARN of the policy that is used to set the permissions boundary for the role.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo apply a permissions boundary based on a custom policy to an IAM role\n\nThe following put-role-permissions-boundary example applies the custom policy named intern-boundary as the permissions boundary for the specified IAM role.\n\naws iam put-role-permissions-boundary \\\n    --permissions-boundary arn:aws:iam::123456789012:policy/intern-boundary \\\n    --role-name lambda-application-role\n\n\nThis command produces no output.\n\nTo apply a permissions boundary based on an AWS managed policy to an IAM role\n\nThe following put-role-permissions-boundary example applies the AWS managed PowerUserAccess policy as the permissions boundary for the specified IAM role .\n\naws iam put-role-permissions-boundary \\\n    --permissions-boundary arn:aws:iam::aws:policy/PowerUserAccess \\\n    --role-name x-account-admin\n\n\nThis command produces no output."
    },
    {
      "command_name": "put-role-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/put-role-policy.html",
      "command_description": "Description\n\nAdds or updates an inline policy document that is embedded in the specified IAM role.\n\nWhen you embed an inline policy in a role, the inline policy is used as part of the role’s access (permissions) policy. The role’s trust policy is created at the same time as the role, using CreateRole . You can update a role’s trust policy using UpdateAssumeRolePolicy . For more information about IAM roles, see Using roles to delegate permissions and federate identities .\n\nA role can also have a managed policy attached to it. To attach a managed policy to a role, use AttachRolePolicy . To create a new managed policy, use CreatePolicy . For information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nFor information about the maximum number of inline policies that you can embed with a role, see IAM and STS quotas in the IAM User Guide .\n\nNote\n\nBecause policy documents can be large, you should use POST rather than GET when calling PutRolePolicy . For general information about using the Query API with IAM, see Making query requests in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-role-policy\n--role-name <value>\n--policy-name <value>\n--policy-document <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "--policy-name <value>",
        "--policy-document <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the role to associate the policy with.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-name (string)\n\nThe name of the policy document.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-document (string)\n\nThe policy document.\n\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo attach a permissions policy to an IAM role\n\nThe following put-role-policy command adds a permissions policy to the role named Test-Role:\n\naws iam put-role-policy --role-name Test-Role --policy-name ExamplePolicy --policy-document file://AdminPolicy.json\n\n\nThe policy is defined as a JSON document in the AdminPolicy.json file. (The file name and extension do not have significance.)\n\nTo attach a trust policy to a role, use the update-assume-role-policy command.\n\nFor more information, see Creating a Role in the Using IAM guide."
    },
    {
      "command_name": "put-user-permissions-boundary",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/put-user-permissions-boundary.html",
      "command_description": "Description\n\nAdds or updates the policy that is specified as the IAM user’s permissions boundary. You can use an Amazon Web Services managed policy or a customer managed policy to set the boundary for a user. Use the boundary to control the maximum permissions that the user can have. Setting a permissions boundary is an advanced feature that can affect the permissions for the user.\n\nWarning\n\nPolicies that are used as permissions boundaries do not provide permissions. You must also attach a permissions policy to the user. To learn how the effective permissions for a user are evaluated, see IAM JSON policy evaluation logic in the IAM User Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-user-permissions-boundary\n--user-name <value>\n--permissions-boundary <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--permissions-boundary <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name (friendly name, not ARN) of the IAM user for which you want to set the permissions boundary.\n\n--permissions-boundary (string)\n\nThe ARN of the policy that is used to set the permissions boundary for the user.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo apply a permissions boundary based on a custom policy to an IAM user\n\nThe following put-user-permissions-boundary example applies a custom policy named intern-boundary as the permissions boundary for the specified IAM user.\n\naws iam put-user-permissions-boundary \\\n    --permissions-boundary arn:aws:iam::123456789012:policy/intern-boundary \\\n    --user-name intern\n\n\nThis command produces no output.\n\nTo apply a permissions boundary based on an AWS managed policy to an IAM user\n\nThe following put-user-permissions-boundary example applies the AWS managed pollicy named PowerUserAccess as the permissions boundary for the specified IAM user.\n\naws iam put-user-permissions-boundary \\\n    --permissions-boundary arn:aws:iam::aws:policy/PowerUserAccess \\\n    --user-name developer\n\n\nThis command produces no output."
    },
    {
      "command_name": "put-user-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/put-user-policy.html",
      "command_description": "Description\n\nAdds or updates an inline policy document that is embedded in the specified IAM user.\n\nAn IAM user can also have a managed policy attached to it. To attach a managed policy to a user, use AttachUserPolicy . To create a new managed policy, use CreatePolicy . For information about policies, see Managed policies and inline policies in the IAM User Guide .\n\nFor information about the maximum number of inline policies that you can embed in a user, see IAM and STS quotas in the IAM User Guide .\n\nNote\n\nBecause policy documents can be large, you should use POST rather than GET when calling PutUserPolicy . For general information about using the Query API with IAM, see Making query requests in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-user-policy\n--user-name <value>\n--policy-name <value>\n--policy-document <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--policy-name <value>",
        "--policy-document <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user to associate the policy with.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-name (string)\n\nThe name of the policy document.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-document (string)\n\nThe policy document.\n\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo attach a policy to an IAM user\n\nThe following put-user-policy command attaches a policy to the IAM user named Bob:\n\naws iam put-user-policy --user-name Bob --policy-name ExamplePolicy --policy-document file://AdminPolicy.json\n\n\nThe policy is defined as a JSON document in the AdminPolicy.json file. (The file name and extension do not have significance.)\n\nFor more information, see Adding a New User to Your AWS Account in the Using IAM guide."
    },
    {
      "command_name": "remove-client-id-from-open-id-connect-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/remove-client-id-from-open-id-connect-provider.html",
      "command_description": "Description\n\nRemoves the specified client ID (also known as audience) from the list of client IDs registered for the specified IAM OpenID Connect (OIDC) provider resource object.\n\nThis operation is idempotent; it does not fail or return an error if you try to remove a client ID that does not exist.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-client-id-from-open-id-connect-provider\n--open-id-connect-provider-arn <value>\n--client-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--open-id-connect-provider-arn <value>",
        "--client-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--open-id-connect-provider-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM OIDC provider resource to remove the client ID from. You can get a list of OIDC provider ARNs by using the ListOpenIDConnectProviders operation.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--client-id (string)\n\nThe client ID (also known as audience) to remove from the IAM OIDC provider resource. For more information about client IDs, see CreateOpenIDConnectProvider .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove the specified client ID from the list of client IDs registered for the specified IAM OpenID Connect provider\n\nThis example removes the client ID My-TestApp-3 from the list of client IDs associated with the IAM OIDC provider whose ARN is arn:aws:iam::123456789012:oidc-provider/example.oidcprovider.com:\n\naws iam remove-client-id-from-open-id-connect-provider --client-id My-TestApp-3 --open-id-connect-provider-arn arn:aws:iam::123456789012:oidc-provider/example.oidcprovider.com\n\n\nFor more information, see Using OpenID Connect Identity Providers in the Using IAM guide."
    },
    {
      "command_name": "remove-role-from-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/remove-role-from-instance-profile.html",
      "command_description": "Description\n\nRemoves the specified IAM role from the specified EC2 instance profile.\n\nWarning\n\nMake sure that you do not have any Amazon EC2 instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is associated with a running instance might break any applications running on the instance.\n\nFor more information about IAM roles, see Working with roles . For more information about instance profiles, see About instance profiles .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-role-from-instance-profile\n--instance-profile-name <value>\n--role-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-profile-name <value>",
        "--role-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-profile-name (string)\n\nThe name of the instance profile to update.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--role-name (string)\n\nThe name of the role to remove.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a role from an instance profile\n\nThe following remove-role-from-instance-profile command removes the role named Test-Role from the instance profile named ExampleInstanceProfile:\n\naws iam remove-role-from-instance-profile --instance-profile-name ExampleInstanceProfile --role-name Test-Role\n\n\nFor more information, see Instance Profiles in the Using IAM guide."
    },
    {
      "command_name": "remove-user-from-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/remove-user-from-group.html",
      "command_description": "Description\n\nRemoves the specified user from the specified group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-user-from-group\n--group-name <value>\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nThe name of the group to update.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--user-name (string)\n\nThe name of the user to remove.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a user from an IAM group\n\nThe following remove-user-from-group command removes the user named Bob from the IAM group named Admins:\n\naws iam remove-user-from-group --user-name Bob --group-name Admins\n\n\nFor more information, see Adding Users to and Removing Users from a Group in the Using IAM guide."
    },
    {
      "command_name": "reset-service-specific-credential",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/reset-service-specific-credential.html",
      "command_description": "Description\n\nResets the password for a service-specific credential. The new password is Amazon Web Services generated and cryptographically strong. It cannot be configured by the user. Resetting the password immediately invalidates the previous password associated with this user.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  reset-service-specific-credential\n[--user-name <value>]\n--service-specific-credential-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "--service-specific-credential-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--service-specific-credential-id (string)\n\nThe unique identifier of the service-specific credential.\n\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServiceSpecificCredential -> (structure)\n\nA structure with details about the updated service-specific credential, including the new password.\n\nWarning\n\nThis is the only time that you can access the password. You cannot recover the password later, but you can reset it again.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the service-specific credential were created.\n\nServiceName -> (string)\n\nThe name of the service associated with the service-specific credential.\n\nServiceUserName -> (string)\n\nThe generated user name for the service-specific credential. This value is generated by combining the IAM user’s name combined with the ID number of the Amazon Web Services account, as in jane-at-123456789012 , for example. This value cannot be configured by the user.\n\nServicePassword -> (string)\n\nThe generated password for the service-specific credential.\n\nServiceSpecificCredentialId -> (string)\n\nThe unique identifier for the service-specific credential.\n\nUserName -> (string)\n\nThe name of the IAM user associated with the service-specific credential.\n\nStatus -> (string)\n\nThe status of the service-specific credential. Active means that the key is valid for API calls, while Inactive means it is not.",
      "command_examples": "Examples\n\nReset the password for a service-specific credential attached to the user making the request\n\nThe following reset-service-specific-credential example generates a new cryptographically strong password for the specified service-specific credential attached to the user making the request.\n\naws iam reset-service-specific-credential --service-specific-credential-id ACCAEXAMPLE123EXAMPLE\n\n\nOutput:\n\n{\n    \"ServiceSpecificCredential\": {\n        \"CreateDate\": \"2019-04-18T20:45:36+00:00\",\n        \"ServiceName\": \"codecommit.amazonaws.com\",\n        \"ServiceUserName\": \"sofia-at-123456789012\",\n        \"ServicePassword\": \"+oaFsNk7tLco+C/obP9GhhcOzGcKOayTmE3LnAmAmH4=\",\n        \"ServiceSpecificCredentialId\": \"ACCAEXAMPLE123EXAMPLE\",\n        \"UserName\": \"sofia\",\n        \"Status\": \"Active\"\n    }\n}\n\n\nReset the password for a service-specific credential attached to a specified user\n\nThe following reset-service-specific-credential example generates a new cryptographically strong password for a service-specific credential attached to the specified user.\n\naws iam reset-service-specific-credential --user-name sofia --service-specific-credential-id ACCAEXAMPLE123EXAMPLE\n\n\nOutput:\n\n{\n    \"ServiceSpecificCredential\": {\n        \"CreateDate\": \"2019-04-18T20:45:36+00:00\",\n        \"ServiceName\": \"codecommit.amazonaws.com\",\n        \"ServiceUserName\": \"sofia-at-123456789012\",\n        \"ServicePassword\": \"+oaFsNk7tLco+C/obP9GhhcOzGcKOayTmE3LnAmAmH4=\",\n        \"ServiceSpecificCredentialId\": \"ACCAEXAMPLE123EXAMPLE\",\n        \"UserName\": \"sofia\",\n        \"Status\": \"Active\"\n    }\n}\n\n\nFor more information, see Create Git Credentials for HTTPS Connections to CodeCommit in the AWS CodeCommit User Guide"
    },
    {
      "command_name": "resync-mfa-device",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/resync-mfa-device.html",
      "command_description": "Description\n\nSynchronizes the specified MFA device with its IAM resource object on the Amazon Web Services servers.\n\nFor more information about creating and working with virtual MFA devices, see Using a virtual MFA device in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  resync-mfa-device\n--user-name <value>\n--serial-number <value>\n--authentication-code1 <value>\n--authentication-code2 <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--serial-number <value>",
        "--authentication-code1 <value>",
        "--authentication-code2 <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user whose MFA device you want to resynchronize.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--serial-number (string)\n\nSerial number that uniquely identifies the MFA device.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--authentication-code1 (string)\n\nAn authentication code emitted by the device.\n\nThe format for this parameter is a sequence of six digits.\n\n--authentication-code2 (string)\n\nA subsequent authentication code emitted by the device.\n\nThe format for this parameter is a sequence of six digits.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo synchronize an MFA device\n\nThe following resync-mfa-device example synchronizes the MFA device that is associated with the IAM user Bob and whose ARN is arn:aws:iam::123456789012:mfa/BobsMFADevice with an authenticator program that provided the two authentication codes.\n\naws iam resync-mfa-device \\\n    --user-name Bob \\\n    --serial-number arn:aws:iam::210987654321:mfa/BobsMFADevice \\\n    --authentication-code1 123456 \\\n    --authentication-code2 987654\n\n\nThis command produces no output.\n\nFor more information, see Using Multi-Factor Authentication (MFA) Devices in AWS in the AWS Identity and Access Management User Guide."
    },
    {
      "command_name": "set-default-policy-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/set-default-policy-version.html",
      "command_description": "Description\n\nSets the specified version of the specified policy as the policy’s default (operative) version.\n\nThis operation affects all users, groups, and roles that the policy is attached to. To list the users, groups, and roles that the policy is attached to, use ListEntitiesForPolicy .\n\nFor information about managed policies, see Managed policies and inline policies in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-default-policy-version\n--policy-arn <value>\n--version-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "--version-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM policy whose default version you want to set.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--version-id (string)\n\nThe version of the policy to set as the default (operative) version.\n\nFor more information about managed policy versions, see Versioning for managed policies in the IAM User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo set the specified version of the specified policy as the policy’s default version.\n\nThis example sets the v2 version of the policy whose ARN is arn:aws:iam::123456789012:policy/MyPolicy as the default active version:\n\naws iam set-default-policy-version --policy-arn arn:aws:iam::123456789012:policy/MyPolicy --version-id v2\n\n\nFor more information, see Overview of IAM Policies in the Using IAM guide."
    },
    {
      "command_name": "set-security-token-service-preferences",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/set-security-token-service-preferences.html",
      "command_description": "Description\n\nSets the specified version of the global endpoint token as the token version used for the Amazon Web Services account.\n\nBy default, Security Token Service (STS) is available as a global service, and all STS requests go to a single endpoint at https://sts.amazonaws.com . Amazon Web Services recommends using Regional STS endpoints to reduce latency, build in redundancy, and increase session token availability. For information about Regional endpoints for STS, see Security Token Service endpoints and quotas in the Amazon Web Services General Reference .\n\nIf you make an STS call to the global endpoint, the resulting session tokens might be valid in some Regions but not others. It depends on the version that is set in this operation. Version 1 tokens are valid only in Amazon Web Services Regions that are available by default. These tokens do not work in manually enabled Regions, such as Asia Pacific (Hong Kong). Version 2 tokens are valid in all Regions. However, version 2 tokens are longer and might affect systems where you temporarily store tokens. For information, see Activating and deactivating STS in an Amazon Web Services Region in the IAM User Guide .\n\nTo view the current session token version, see the GlobalEndpointTokenVersion entry in the response of the GetAccountSummary operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-security-token-service-preferences\n--global-endpoint-token-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--global-endpoint-token-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--global-endpoint-token-version (string)\n\nThe version of the global endpoint token. Version 1 tokens are valid only in Amazon Web Services Regions that are available by default. These tokens do not work in manually enabled Regions, such as Asia Pacific (Hong Kong). Version 2 tokens are valid in all Regions. However, version 2 tokens are longer and might affect systems where you temporarily store tokens.\n\nFor information, see Activating and deactivating STS in an Amazon Web Services Region in the IAM User Guide .\n\nPossible values:\n\nv1Token\n\nv2Token\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo set the global endpoint token version\n\nThe following set-security-token-service-preferences example configures Amazon STS to use version 2 tokens when you authenticate against the global endpoint.\n\naws iam set-security-token-service-preferences \\\n    --global-endpoint-token-version v2Token\n\n\nThis command produces no output."
    },
    {
      "command_name": "simulate-custom-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/simulate-custom-policy.html",
      "command_description": "Description\n\nSimulate how a set of IAM policies and optionally a resource-based policy works with a list of API operations and Amazon Web Services resources to determine the policies’ effective permissions. The policies are provided as strings.\n\nThe simulation does not perform the API operations; it only checks the authorization to determine if the simulated policies allow or deny the operations. You can simulate resources that don’t exist in your account.\n\nIf you want to simulate existing policies that are attached to an IAM user, group, or role, use SimulatePrincipalPolicy instead.\n\nContext keys are variables that are maintained by Amazon Web Services and its services and which provide details about the context of an API query request. You can use the Condition element of an IAM policy to evaluate context keys. To get the list of context keys that the policies require for correct simulation, use GetContextKeysForCustomPolicy .\n\nIf the output is long, you can use MaxItems and Marker parameters to paginate the results.\n\nFor more information about using the policy simulator, see Testing IAM policies with the IAM policy simulator in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nsimulate-custom-policy is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: EvaluationResults",
      "command_synopsis": "Synopsis\n  simulate-custom-policy\n--policy-input-list <value>\n[--permissions-boundary-policy-input-list <value>]\n--action-names <value>\n[--resource-arns <value>]\n[--resource-policy <value>]\n[--resource-owner <value>]\n[--caller-arn <value>]\n[--context-entries <value>]\n[--resource-handling-option <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-input-list <value>",
        "[--permissions-boundary-policy-input-list <value>]",
        "--action-names <value>",
        "[--resource-arns <value>]",
        "[--resource-policy <value>]",
        "[--resource-owner <value>]",
        "[--caller-arn <value>]",
        "[--context-entries <value>]",
        "[--resource-handling-option <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-input-list (list)\n\nA list of policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy. Do not include any resource-based policies in this parameter. Any resource-based policy must be submitted with the ResourcePolicy parameter. The policies cannot be “scope-down” policies, such as you could include in a call to GetFederationToken or one of the AssumeRole API operations. In other words, do not use policies designed to restrict what a user can do while using the temporary credentials.\n\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--permissions-boundary-policy-input-list (list)\n\nThe IAM permissions boundary policy to simulate. The permissions boundary sets the maximum permissions that an IAM entity can have. You can input only one permissions boundary when you pass a policy to this operation. For more information about permissions boundaries, see Permissions boundaries for IAM entities in the IAM User Guide . The policy input is specified as a string that contains the complete, valid JSON text of a permissions boundary policy.\n\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--action-names (list)\n\nA list of names of API operations to evaluate in the simulation. Each operation is evaluated against each resource. Each operation must include the service identifier, such as iam:CreateUser . This operation does not support using wildcards (*) in an action name.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--resource-arns (list)\n\nA list of ARNs of Amazon Web Services resources to include in the simulation. If this parameter is not provided, then the value defaults to * (all resources). Each API in the ActionNames parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response. You can simulate resources that don’t exist in your account.\n\nThe simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the ResourcePolicy parameter.\n\nIf you include a ResourcePolicy , then it must be applicable to all of the resources included in the simulation or you receive an invalid input error.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--resource-policy (string)\n\nA resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.\n\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--resource-owner (string)\n\nAn ARN representing the Amazon Web Services account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN. Examples of resource ARNs include an S3 bucket or object. If ResourceOwner is specified, it is also used as the account owner of any ResourcePolicy included in the simulation. If the ResourceOwner parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in CallerArn . This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user CallerArn .\n\nThe ARN for an account uses the following syntax: arn:aws:iam::*AWS-account-ID* :root . For example, to represent the account with the 112233445566 ID, use the following ARN: arn:aws:iam::112233445566-ID:root .\n\n--caller-arn (string)\n\nThe ARN of the IAM user that you want to use as the simulated caller of the API operations. CallerArn is required if you include a ResourcePolicy so that the policy’s Principal element has a value to use in evaluating the policy.\n\nYou can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.\n\n--context-entries (list)\n\nA list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permissions policies, the corresponding value is supplied.\n\n(structure)\n\nContains information about a condition context key. It includes the name of the key and specifies the value (or values, if the context key supports multiple values) to use in the simulation. This information is used when evaluating the Condition elements of the input policies.\n\nThis data type is used as an input parameter to SimulateCustomPolicy and SimulatePrincipalPolicy .\n\nContextKeyName -> (string)\n\nThe full name of a condition context key, including the service prefix. For example, aws:SourceIp or s3:VersionId .\n\nContextKeyValues -> (list)\n\nThe value (or values, if the condition context key supports multiple values) to provide to the simulation when the key is referenced by a Condition element in an input policy.\n\n(string)\n\nContextKeyType -> (string)\n\nThe data type of the value (or values) specified in the ContextKeyValues parameter.\n\nShorthand Syntax:\n\nContextKeyName=string,ContextKeyValues=string,string,ContextKeyType=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"ContextKeyName\": \"string\",\n    \"ContextKeyValues\": [\"string\", ...],\n    \"ContextKeyType\": \"string\"|\"stringList\"|\"numeric\"|\"numericList\"|\"boolean\"|\"booleanList\"|\"ip\"|\"ipList\"|\"binary\"|\"binaryList\"|\"date\"|\"dateList\"\n  }\n  ...\n]\n\n\n--resource-handling-option (string)\n\nSpecifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.\n\nEach of the EC2 scenarios requires that you specify instance, image, and security-group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network-interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see Supported platforms in the Amazon EC2 User Guide .\n\nEC2-Classic-InstanceStore instance, image, security-group\n\nEC2-Classic-EBS instance, image, security-group, volume\n\nEC2-VPC-InstanceStore instance, image, security-group, network-interface\n\nEC2-VPC-InstanceStore-Subnet instance, image, security-group, network-interface, subnet\n\nEC2-VPC-EBS instance, image, security-group, network-interface, volume\n\nEC2-VPC-EBS-Subnet instance, image, security-group, network-interface, subnet, volume\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEvaluationResults -> (list)\n\nThe results of the simulation.\n\n(structure)\n\nContains the results of a simulation.\n\nThis data type is used by the return parameter of `` SimulateCustomPolicy `` and `` SimulatePrincipalPolicy `` .\n\nEvalActionName -> (string)\n\nThe name of the API operation tested on the indicated resource.\n\nEvalResourceName -> (string)\n\nThe ARN of the resource that the indicated API operation was tested on.\n\nEvalDecision -> (string)\n\nThe result of the simulation.\n\nMatchedStatements -> (list)\n\nA list of the statements in the input policies that determine the result for this scenario. Remember that even if multiple statements allow the operation on the resource, if only one statement denies that operation, then the explicit deny overrides any allow. In addition, the deny statement is the only entry included in the result.\n\n(structure)\n\nContains a reference to a Statement element in a policy document that determines the result of the simulation.\n\nThis data type is used by the MatchedStatements member of the `` EvaluationResult `` type.\n\nSourcePolicyId -> (string)\n\nThe identifier of the policy that was provided as an input.\n\nSourcePolicyType -> (string)\n\nThe type of the policy.\n\nStartPosition -> (structure)\n\nThe row and column of the beginning of the Statement in an IAM policy.\n\nLine -> (integer)\n\nThe line containing the specified position in the document.\n\nColumn -> (integer)\n\nThe column in the line containing the specified position in the document.\n\nEndPosition -> (structure)\n\nThe row and column of the end of a Statement in an IAM policy.\n\nLine -> (integer)\n\nThe line containing the specified position in the document.\n\nColumn -> (integer)\n\nThe column in the line containing the specified position in the document.\n\nMissingContextValues -> (list)\n\nA list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when the resource in a simulation is “*”, either explicitly, or when the ResourceArns parameter blank. If you include a list of resources, then any missing context values are instead included under the ResourceSpecificResults section. To discover the context keys used by a set of policies, you can call GetContextKeysForCustomPolicy or GetContextKeysForPrincipalPolicy .\n\n(string)\n\nOrganizationsDecisionDetail -> (structure)\n\nA structure that details how Organizations and its service control policies affect the results of the simulation. Only applies if the simulated user’s account is part of an organization.\n\nAllowedByOrganizations -> (boolean)\n\nSpecifies whether the simulated operation is allowed by the Organizations service control policies that impact the simulated user’s account.\n\nPermissionsBoundaryDecisionDetail -> (structure)\n\nContains information about the effect that a permissions boundary has on a policy simulation when the boundary is applied to an IAM entity.\n\nAllowedByPermissionsBoundary -> (boolean)\n\nSpecifies whether an action is allowed by a permissions boundary that is applied to an IAM entity (user or role). A value of true means that the permissions boundary does not deny the action. This means that the policy includes an Allow statement that matches the request. In this case, if an identity-based policy also allows the action, the request is allowed. A value of false means that either the requested action is not allowed (implicitly denied) or that the action is explicitly denied by the permissions boundary. In both of these cases, the action is not allowed, regardless of the identity-based policy.\n\nEvalDecisionDetails -> (map)\n\nAdditional details about the results of the cross-account evaluation decision. This parameter is populated for only cross-account simulations. It contains a brief summary of how each policy type contributes to the final evaluation decision.\n\nIf the simulation evaluates policies within the same account and includes a resource ARN, then the parameter is present but the response is empty. If the simulation evaluates policies within the same account and specifies all resources (* ), then the parameter is not returned.\n\nWhen you make a cross-account request, Amazon Web Services evaluates the request in the trusting account and the trusted account. The request is allowed only if both evaluations return true . For more information about how policies are evaluated, see Evaluating policies within a single account .\n\nIf an Organizations SCP included in the evaluation denies access, the simulation ends. In this case, policy evaluation does not proceed any further and this parameter is not returned.\n\nkey -> (string)\n\nvalue -> (string)\n\nResourceSpecificResults -> (list)\n\nThe individual results of the simulation of the API operation specified in EvalActionName on each resource.\n\n(structure)\n\nContains the result of the simulation of a single API operation call on a single resource.\n\nThis data type is used by a member of the EvaluationResult data type.\n\nEvalResourceName -> (string)\n\nThe name of the simulated resource, in Amazon Resource Name (ARN) format.\n\nEvalResourceDecision -> (string)\n\nThe result of the simulation of the simulated API operation on the resource specified in EvalResourceName .\n\nMatchedStatements -> (list)\n\nA list of the statements in the input policies that determine the result for this part of the simulation. Remember that even if multiple statements allow the operation on the resource, if any statement denies that operation, then the explicit deny overrides any allow. In addition, the deny statement is the only entry included in the result.\n\n(structure)\n\nContains a reference to a Statement element in a policy document that determines the result of the simulation.\n\nThis data type is used by the MatchedStatements member of the `` EvaluationResult `` type.\n\nSourcePolicyId -> (string)\n\nThe identifier of the policy that was provided as an input.\n\nSourcePolicyType -> (string)\n\nThe type of the policy.\n\nStartPosition -> (structure)\n\nThe row and column of the beginning of the Statement in an IAM policy.\n\nLine -> (integer)\n\nThe line containing the specified position in the document.\n\nColumn -> (integer)\n\nThe column in the line containing the specified position in the document.\n\nEndPosition -> (structure)\n\nThe row and column of the end of a Statement in an IAM policy.\n\nLine -> (integer)\n\nThe line containing the specified position in the document.\n\nColumn -> (integer)\n\nThe column in the line containing the specified position in the document.\n\nMissingContextValues -> (list)\n\nA list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when a list of ARNs is included in the ResourceArns parameter instead of “*”. If you do not specify individual resources, by setting ResourceArns to “*” or by not including the ResourceArns parameter, then any missing context values are instead included under the EvaluationResults section. To discover the context keys used by a set of policies, you can call GetContextKeysForCustomPolicy or GetContextKeysForPrincipalPolicy .\n\n(string)\n\nEvalDecisionDetails -> (map)\n\nAdditional details about the results of the evaluation decision on a single resource. This parameter is returned only for cross-account simulations. This parameter explains how each policy type contributes to the resource-specific evaluation decision.\n\nkey -> (string)\n\nvalue -> (string)\n\nPermissionsBoundaryDecisionDetail -> (structure)\n\nContains information about the effect that a permissions boundary has on a policy simulation when that boundary is applied to an IAM entity.\n\nAllowedByPermissionsBoundary -> (boolean)\n\nSpecifies whether an action is allowed by a permissions boundary that is applied to an IAM entity (user or role). A value of true means that the permissions boundary does not deny the action. This means that the policy includes an Allow statement that matches the request. In this case, if an identity-based policy also allows the action, the request is allowed. A value of false means that either the requested action is not allowed (implicitly denied) or that the action is explicitly denied by the permissions boundary. In both of these cases, the action is not allowed, regardless of the identity-based policy.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo simulate the effects of all IAM policies associated with an IAM user or role\n\nThe following simulate-custom-policy shows how to provide both the policy and define variable values and simulate an API call to see if it is allowed or denied. The following example shows a policy that enables database access only after a specified date and time. The simulation succeeds because the simulated actions and the specified aws:CurrentTime variable all match the requirements of the policy.\n\naws iam simulate-custom-policy \\\n    --policy-input-list '{\"Version\":\"2012-10-17\",\"Statement\":{\"Effect\":\"Allow\",\"Action\":\"dynamodb:*\",\"Resource\":\"*\",\"Condition\":{\"DateGreaterThan\":{\"aws:CurrentTime\":\"2018-08-16T12:00:00Z\"}}}}' \\\n    --action-names dynamodb:CreateBackup \\\n    --context-entries \"ContextKeyName='aws:CurrentTime',ContextKeyValues='2019-04-25T11:00:00Z',ContextKeyType=date\"\n\n\nOutput:\n\n{\n    \"EvaluationResults\": [\n        {\n            \"EvalActionName\": \"dynamodb:CreateBackup\",\n            \"EvalResourceName\": \"*\",\n            \"EvalDecision\": \"allowed\",\n            \"MatchedStatements\": [\n                {\n                    \"SourcePolicyId\": \"PolicyInputList.1\",\n                    \"StartPosition\": {\n                        \"Line\": 1,\n                        \"Column\": 38\n                    },\n                    \"EndPosition\": {\n                        \"Line\": 1,\n                        \"Column\": 167\n                    }\n                }\n            ],\n            \"MissingContextValues\": []\n        }\n    ]\n}\n\n\nThe following simulate-custom-policy example shows the results of simulating a command that is prohibited by the policy. In this example, the provided date is before that required by the policy’s condition.\n\naws iam simulate-custom-policy \\\n    --policy-input-list '{\"Version\":\"2012-10-17\",\"Statement\":{\"Effect\":\"Allow\",\"Action\":\"dynamodb:*\",\"Resource\":\"*\",\"Condition\":{\"DateGreaterThan\":{\"aws:CurrentTime\":\"2018-08-16T12:00:00Z\"}}}}' \\\n    --action-names dynamodb:CreateBackup \\\n    --context-entries \"ContextKeyName='aws:CurrentTime',ContextKeyValues='2014-04-25T11:00:00Z',ContextKeyType=date\"\n\n\nOutput:\n\n{\n    \"EvaluationResults\": [\n        {\n            \"EvalActionName\": \"dynamodb:CreateBackup\",\n            \"EvalResourceName\": \"*\",\n            \"EvalDecision\": \"implicitDeny\",\n            \"MatchedStatements\": [],\n            \"MissingContextValues\": []\n        }\n    ]\n}\n\n\nFor more information, see Testing IAM Policies with the IAM Policy Simulator in the AWS IAM User Guide"
    },
    {
      "command_name": "simulate-principal-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/simulate-principal-policy.html",
      "command_description": "Description\n\nSimulate how a set of IAM policies attached to an IAM entity works with a list of API operations and Amazon Web Services resources to determine the policies’ effective permissions. The entity can be an IAM user, group, or role. If you specify a user, then the simulation also includes all of the policies that are attached to groups that the user belongs to. You can simulate resources that don’t exist in your account.\n\nYou can optionally include a list of one or more additional policies specified as strings to include in the simulation. If you want to simulate only policies specified as strings, use SimulateCustomPolicy instead.\n\nYou can also optionally include one resource-based policy to be evaluated with each of the resources included in the simulation.\n\nThe simulation does not perform the API operations; it only checks the authorization to determine if the simulated policies allow or deny the operations.\n\nNote: This operation discloses information about the permissions granted to other users. If you do not want users to see other user’s permissions, then consider allowing them to use SimulateCustomPolicy instead.\n\nContext keys are variables maintained by Amazon Web Services and its services that provide details about the context of an API query request. You can use the Condition element of an IAM policy to evaluate context keys. To get the list of context keys that the policies require for correct simulation, use GetContextKeysForPrincipalPolicy .\n\nIf the output is long, you can use the MaxItems and Marker parameters to paginate the results.\n\nFor more information about using the policy simulator, see Testing IAM policies with the IAM policy simulator in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nsimulate-principal-policy is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: EvaluationResults",
      "command_synopsis": "Synopsis\n  simulate-principal-policy\n--policy-source-arn <value>\n[--policy-input-list <value>]\n[--permissions-boundary-policy-input-list <value>]\n--action-names <value>\n[--resource-arns <value>]\n[--resource-policy <value>]\n[--resource-owner <value>]\n[--caller-arn <value>]\n[--context-entries <value>]\n[--resource-handling-option <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-source-arn <value>",
        "[--policy-input-list <value>]",
        "[--permissions-boundary-policy-input-list <value>]",
        "--action-names <value>",
        "[--resource-arns <value>]",
        "[--resource-policy <value>]",
        "[--resource-owner <value>]",
        "[--caller-arn <value>]",
        "[--context-entries <value>]",
        "[--resource-handling-option <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-source-arn (string)\n\nThe Amazon Resource Name (ARN) of a user, group, or role whose policies you want to include in the simulation. If you specify a user, group, or role, the simulation includes all policies that are associated with that entity. If you specify a user, the simulation also includes all policies that are attached to any groups the user belongs to.\n\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--policy-input-list (list)\n\nAn optional list of additional policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--permissions-boundary-policy-input-list (list)\n\nThe IAM permissions boundary policy to simulate. The permissions boundary sets the maximum permissions that the entity can have. You can input only one permissions boundary when you pass a policy to this operation. An IAM entity can only have one permissions boundary in effect at a time. For example, if a permissions boundary is attached to an entity and you pass in a different permissions boundary policy using this parameter, then the new permissions boundary policy is used for the simulation. For more information about permissions boundaries, see Permissions boundaries for IAM entities in the IAM User Guide . The policy input is specified as a string containing the complete, valid JSON text of a permissions boundary policy.\n\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--action-names (list)\n\nA list of names of API operations to evaluate in the simulation. Each operation is evaluated for each resource. Each operation must include the service identifier, such as iam:CreateUser .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--resource-arns (list)\n\nA list of ARNs of Amazon Web Services resources to include in the simulation. If this parameter is not provided, then the value defaults to * (all resources). Each API in the ActionNames parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response. You can simulate resources that don’t exist in your account.\n\nThe simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the ResourcePolicy parameter.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--resource-policy (string)\n\nA resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.\n\nThe maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see IAM and STS character quotas .\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--resource-owner (string)\n\nAn Amazon Web Services account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN. Examples of resource ARNs include an S3 bucket or object. If ResourceOwner is specified, it is also used as the account owner of any ResourcePolicy included in the simulation. If the ResourceOwner parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in CallerArn . This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user CallerArn .\n\n--caller-arn (string)\n\nThe ARN of the IAM user that you want to specify as the simulated caller of the API operations. If you do not specify a CallerArn , it defaults to the ARN of the user that you specify in PolicySourceArn , if you specified a user. If you include both a PolicySourceArn (for example, arn:aws:iam::123456789012:user/David ) and a CallerArn (for example, arn:aws:iam::123456789012:user/Bob ), the result is that you simulate calling the API operations as Bob, as if Bob had David’s policies.\n\nYou can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.\n\nCallerArn is required if you include a ResourcePolicy and the PolicySourceArn is not the ARN for an IAM user. This is required so that the resource-based policy’s Principal element has a value to use in evaluating the policy.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--context-entries (list)\n\nA list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permissions policies, the corresponding value is supplied.\n\n(structure)\n\nContains information about a condition context key. It includes the name of the key and specifies the value (or values, if the context key supports multiple values) to use in the simulation. This information is used when evaluating the Condition elements of the input policies.\n\nThis data type is used as an input parameter to SimulateCustomPolicy and SimulatePrincipalPolicy .\n\nContextKeyName -> (string)\n\nThe full name of a condition context key, including the service prefix. For example, aws:SourceIp or s3:VersionId .\n\nContextKeyValues -> (list)\n\nThe value (or values, if the condition context key supports multiple values) to provide to the simulation when the key is referenced by a Condition element in an input policy.\n\n(string)\n\nContextKeyType -> (string)\n\nThe data type of the value (or values) specified in the ContextKeyValues parameter.\n\nShorthand Syntax:\n\nContextKeyName=string,ContextKeyValues=string,string,ContextKeyType=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"ContextKeyName\": \"string\",\n    \"ContextKeyValues\": [\"string\", ...],\n    \"ContextKeyType\": \"string\"|\"stringList\"|\"numeric\"|\"numericList\"|\"boolean\"|\"booleanList\"|\"ip\"|\"ipList\"|\"binary\"|\"binaryList\"|\"date\"|\"dateList\"\n  }\n  ...\n]\n\n\n--resource-handling-option (string)\n\nSpecifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.\n\nEach of the EC2 scenarios requires that you specify instance, image, and security group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see Supported platforms in the Amazon EC2 User Guide .\n\nEC2-Classic-InstanceStore instance, image, security group\n\nEC2-Classic-EBS instance, image, security group, volume\n\nEC2-VPC-InstanceStore instance, image, security group, network interface\n\nEC2-VPC-InstanceStore-Subnet instance, image, security group, network interface, subnet\n\nEC2-VPC-EBS instance, image, security group, network interface, volume\n\nEC2-VPC-EBS-Subnet instance, image, security group, network interface, subnet, volume\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEvaluationResults -> (list)\n\nThe results of the simulation.\n\n(structure)\n\nContains the results of a simulation.\n\nThis data type is used by the return parameter of `` SimulateCustomPolicy `` and `` SimulatePrincipalPolicy `` .\n\nEvalActionName -> (string)\n\nThe name of the API operation tested on the indicated resource.\n\nEvalResourceName -> (string)\n\nThe ARN of the resource that the indicated API operation was tested on.\n\nEvalDecision -> (string)\n\nThe result of the simulation.\n\nMatchedStatements -> (list)\n\nA list of the statements in the input policies that determine the result for this scenario. Remember that even if multiple statements allow the operation on the resource, if only one statement denies that operation, then the explicit deny overrides any allow. In addition, the deny statement is the only entry included in the result.\n\n(structure)\n\nContains a reference to a Statement element in a policy document that determines the result of the simulation.\n\nThis data type is used by the MatchedStatements member of the `` EvaluationResult `` type.\n\nSourcePolicyId -> (string)\n\nThe identifier of the policy that was provided as an input.\n\nSourcePolicyType -> (string)\n\nThe type of the policy.\n\nStartPosition -> (structure)\n\nThe row and column of the beginning of the Statement in an IAM policy.\n\nLine -> (integer)\n\nThe line containing the specified position in the document.\n\nColumn -> (integer)\n\nThe column in the line containing the specified position in the document.\n\nEndPosition -> (structure)\n\nThe row and column of the end of a Statement in an IAM policy.\n\nLine -> (integer)\n\nThe line containing the specified position in the document.\n\nColumn -> (integer)\n\nThe column in the line containing the specified position in the document.\n\nMissingContextValues -> (list)\n\nA list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when the resource in a simulation is “*”, either explicitly, or when the ResourceArns parameter blank. If you include a list of resources, then any missing context values are instead included under the ResourceSpecificResults section. To discover the context keys used by a set of policies, you can call GetContextKeysForCustomPolicy or GetContextKeysForPrincipalPolicy .\n\n(string)\n\nOrganizationsDecisionDetail -> (structure)\n\nA structure that details how Organizations and its service control policies affect the results of the simulation. Only applies if the simulated user’s account is part of an organization.\n\nAllowedByOrganizations -> (boolean)\n\nSpecifies whether the simulated operation is allowed by the Organizations service control policies that impact the simulated user’s account.\n\nPermissionsBoundaryDecisionDetail -> (structure)\n\nContains information about the effect that a permissions boundary has on a policy simulation when the boundary is applied to an IAM entity.\n\nAllowedByPermissionsBoundary -> (boolean)\n\nSpecifies whether an action is allowed by a permissions boundary that is applied to an IAM entity (user or role). A value of true means that the permissions boundary does not deny the action. This means that the policy includes an Allow statement that matches the request. In this case, if an identity-based policy also allows the action, the request is allowed. A value of false means that either the requested action is not allowed (implicitly denied) or that the action is explicitly denied by the permissions boundary. In both of these cases, the action is not allowed, regardless of the identity-based policy.\n\nEvalDecisionDetails -> (map)\n\nAdditional details about the results of the cross-account evaluation decision. This parameter is populated for only cross-account simulations. It contains a brief summary of how each policy type contributes to the final evaluation decision.\n\nIf the simulation evaluates policies within the same account and includes a resource ARN, then the parameter is present but the response is empty. If the simulation evaluates policies within the same account and specifies all resources (* ), then the parameter is not returned.\n\nWhen you make a cross-account request, Amazon Web Services evaluates the request in the trusting account and the trusted account. The request is allowed only if both evaluations return true . For more information about how policies are evaluated, see Evaluating policies within a single account .\n\nIf an Organizations SCP included in the evaluation denies access, the simulation ends. In this case, policy evaluation does not proceed any further and this parameter is not returned.\n\nkey -> (string)\n\nvalue -> (string)\n\nResourceSpecificResults -> (list)\n\nThe individual results of the simulation of the API operation specified in EvalActionName on each resource.\n\n(structure)\n\nContains the result of the simulation of a single API operation call on a single resource.\n\nThis data type is used by a member of the EvaluationResult data type.\n\nEvalResourceName -> (string)\n\nThe name of the simulated resource, in Amazon Resource Name (ARN) format.\n\nEvalResourceDecision -> (string)\n\nThe result of the simulation of the simulated API operation on the resource specified in EvalResourceName .\n\nMatchedStatements -> (list)\n\nA list of the statements in the input policies that determine the result for this part of the simulation. Remember that even if multiple statements allow the operation on the resource, if any statement denies that operation, then the explicit deny overrides any allow. In addition, the deny statement is the only entry included in the result.\n\n(structure)\n\nContains a reference to a Statement element in a policy document that determines the result of the simulation.\n\nThis data type is used by the MatchedStatements member of the `` EvaluationResult `` type.\n\nSourcePolicyId -> (string)\n\nThe identifier of the policy that was provided as an input.\n\nSourcePolicyType -> (string)\n\nThe type of the policy.\n\nStartPosition -> (structure)\n\nThe row and column of the beginning of the Statement in an IAM policy.\n\nLine -> (integer)\n\nThe line containing the specified position in the document.\n\nColumn -> (integer)\n\nThe column in the line containing the specified position in the document.\n\nEndPosition -> (structure)\n\nThe row and column of the end of a Statement in an IAM policy.\n\nLine -> (integer)\n\nThe line containing the specified position in the document.\n\nColumn -> (integer)\n\nThe column in the line containing the specified position in the document.\n\nMissingContextValues -> (list)\n\nA list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when a list of ARNs is included in the ResourceArns parameter instead of “*”. If you do not specify individual resources, by setting ResourceArns to “*” or by not including the ResourceArns parameter, then any missing context values are instead included under the EvaluationResults section. To discover the context keys used by a set of policies, you can call GetContextKeysForCustomPolicy or GetContextKeysForPrincipalPolicy .\n\n(string)\n\nEvalDecisionDetails -> (map)\n\nAdditional details about the results of the evaluation decision on a single resource. This parameter is returned only for cross-account simulations. This parameter explains how each policy type contributes to the resource-specific evaluation decision.\n\nkey -> (string)\n\nvalue -> (string)\n\nPermissionsBoundaryDecisionDetail -> (structure)\n\nContains information about the effect that a permissions boundary has on a policy simulation when that boundary is applied to an IAM entity.\n\nAllowedByPermissionsBoundary -> (boolean)\n\nSpecifies whether an action is allowed by a permissions boundary that is applied to an IAM entity (user or role). A value of true means that the permissions boundary does not deny the action. This means that the policy includes an Allow statement that matches the request. In this case, if an identity-based policy also allows the action, the request is allowed. A value of false means that either the requested action is not allowed (implicitly denied) or that the action is explicitly denied by the permissions boundary. In both of these cases, the action is not allowed, regardless of the identity-based policy.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the Marker request parameter to retrieve more items. Note that IAM might return fewer than the MaxItems number of results even when there are more results available. We recommend that you check IsTruncated after every call to ensure that you receive all your results.\n\nMarker -> (string)\n\nWhen IsTruncated is true , this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
      "command_examples": "Examples\n\nTo simulate the effects of an arbitrary IAM policy\n\nThe following simulate-principal-policy shows how to simulate a user calling an API action and determining whether the policies associated with that user allow or deny the action. In the following example, the user has a policy that allows only the codecommit:ListRepositories action.\n\naws iam simulate-principal-policy \\\n    --policy-source-arn arn:aws:iam::123456789012:user/alejandro \\\n    --action-names codecommit:ListRepositories\n\n\nOutput:\n\n{\n    \"EvaluationResults\": [\n        {\n            \"EvalActionName\": \"codecommit:ListRepositories\",\n            \"EvalResourceName\": \"*\",\n            \"EvalDecision\": \"allowed\",\n            \"MatchedStatements\": [\n                {\n                    \"SourcePolicyId\": \"Grant-Access-To-CodeCommit-ListRepo\",\n                    \"StartPosition\": {\n                        \"Line\": 3,\n                        \"Column\": 19\n                    },\n                    \"EndPosition\": {\n                        \"Line\": 9,\n                        \"Column\": 10\n                    }\n                }\n            ],\n            \"MissingContextValues\": []\n        }\n    ]\n}\n\n\nThe following simulate-custom-policy example shows the results of simulating a command that is prohibited by one of the user’s policies. In the following example, the user has a policy that permits access to a DynamoDB database only after a certain date and time. The simulation has the user attempting to access the database with an aws:CurrentTime value that is earlier than the policy’s condition permits.\n\naws iam simulate-principal-policy \\\n    --policy-source-arn arn:aws:iam::123456789012:user/alejandro \\\n    --action-names dynamodb:CreateBackup \\\n    --context-entries \"ContextKeyName='aws:CurrentTime',ContextKeyValues='2018-04-25T11:00:00Z',ContextKeyType=date\"\n\n\nOutput:\n\n{\n    \"EvaluationResults\": [\n        {\n            \"EvalActionName\": \"dynamodb:CreateBackup\",\n            \"EvalResourceName\": \"*\",\n            \"EvalDecision\": \"implicitDeny\",\n            \"MatchedStatements\": [],\n            \"MissingContextValues\": []\n        }\n    ]\n}\n\n\nFor more information, see Testing IAM Policies with the IAM Policy Simulator in the AWS IAM User Guide"
    },
    {
      "command_name": "tag-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/tag-instance-profile.html",
      "command_description": "Description\n\nAdds one or more tags to an IAM instance profile. If a tag with the same key name already exists, then that tag is overwritten with the new value.\n\nEach tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:\n\nAdministrative grouping and discovery - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name Project and the value MyImportantProject . Or search for all resources with the key name Cost Center and the value 41200 .\n\nAccess control - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM instance profile that has a specified tag attached. For examples of policies that show how to use tags to control access, see Control access using IAM tags in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-instance-profile\n--instance-profile-name <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-profile-name <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-profile-name (string)\n\nThe name of the IAM instance profile to which you want to add tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tags (list)\n\nThe list of tags that you want to attach to the IAM instance profile. Each tag consists of a key name and an associated value.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-mfa-device",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/tag-mfa-device.html",
      "command_description": "Description\n\nAdds one or more tags to an IAM virtual multi-factor authentication (MFA) device. If a tag with the same key name already exists, then that tag is overwritten with the new value.\n\nA tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:\n\nAdministrative grouping and discovery - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name Project and the value MyImportantProject . Or search for all resources with the key name Cost Center and the value 41200 .\n\nAccess control - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM virtual MFA device that has a specified tag attached. For examples of policies that show how to use tags to control access, see Control access using IAM tags in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-mfa-device\n--serial-number <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--serial-number <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--serial-number (string)\n\nThe unique identifier for the IAM virtual MFA device to which you want to add tags. For virtual MFA devices, the serial number is the same as the ARN.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tags (list)\n\nThe list of tags that you want to attach to the IAM virtual MFA device. Each tag consists of a key name and an associated value.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-open-id-connect-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/tag-open-id-connect-provider.html",
      "command_description": "Description\n\nAdds one or more tags to an OpenID Connect (OIDC)-compatible identity provider. For more information about these providers, see About web identity federation . If a tag with the same key name already exists, then that tag is overwritten with the new value.\n\nA tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:\n\nAdministrative grouping and discovery - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name Project and the value MyImportantProject . Or search for all resources with the key name Cost Center and the value 41200 .\n\nAccess control - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an OIDC provider that has a specified tag attached. For examples of policies that show how to use tags to control access, see Control access using IAM tags in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-open-id-connect-provider\n--open-id-connect-provider-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--open-id-connect-provider-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--open-id-connect-provider-arn (string)\n\nThe ARN of the OIDC identity provider in IAM to which you want to add tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tags (list)\n\nThe list of tags that you want to attach to the OIDC identity provider in IAM. Each tag consists of a key name and an associated value.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/tag-policy.html",
      "command_description": "Description\n\nAdds one or more tags to an IAM customer managed policy. If a tag with the same key name already exists, then that tag is overwritten with the new value.\n\nA tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:\n\nAdministrative grouping and discovery - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name Project and the value MyImportantProject . Or search for all resources with the key name Cost Center and the value 41200 .\n\nAccess control - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM customer managed policy that has a specified tag attached. For examples of policies that show how to use tags to control access, see Control access using IAM tags in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-policy\n--policy-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe ARN of the IAM customer managed policy to which you want to add tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tags (list)\n\nThe list of tags that you want to attach to the IAM customer managed policy. Each tag consists of a key name and an associated value.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-role",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/tag-role.html",
      "command_description": "Description\n\nAdds one or more tags to an IAM role. The role can be a regular role or a service-linked role. If a tag with the same key name already exists, then that tag is overwritten with the new value.\n\nA tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:\n\nAdministrative grouping and discovery - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name Project and the value MyImportantProject . Or search for all resources with the key name Cost Center and the value 41200 .\n\nAccess control - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM role that has a specified tag attached. You can also restrict access to only those resources that have a certain tag attached. For examples of policies that show how to use tags to control access, see Control access using IAM tags in the IAM User Guide .\n\nCost allocation - Use tags to help track which individuals and teams are using which Amazon Web Services resources.\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nFor more information about tagging, see Tagging IAM identities in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-role\n--role-name <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the IAM role to which you want to add tags.\n\nThis parameter accepts (through its regex pattern ) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tags (list)\n\nThe list of tags that you want to attach to the IAM role. Each tag consists of a key name and an associated value.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a tag to a role\n\nThe following tag-role command adds a tag with a Department name to the specified role. This command produces no output.\n\naws iam tag-role --role-name my-role --tags '{\"Key\": \"Department\", \"Value\": \"Accounting\"}'\n\n\nFor more information, see Tagging IAM Entities in the AWS IAM User Guide"
    },
    {
      "command_name": "tag-saml-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/tag-saml-provider.html",
      "command_description": "Description\n\nAdds one or more tags to a Security Assertion Markup Language (SAML) identity provider. For more information about these providers, see About SAML 2.0-based federation . If a tag with the same key name already exists, then that tag is overwritten with the new value.\n\nA tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:\n\nAdministrative grouping and discovery - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name Project and the value MyImportantProject . Or search for all resources with the key name Cost Center and the value 41200 .\n\nAccess control - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only a SAML identity provider that has a specified tag attached. For examples of policies that show how to use tags to control access, see Control access using IAM tags in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-saml-provider\n--saml-provider-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--saml-provider-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--saml-provider-arn (string)\n\nThe ARN of the SAML identity provider in IAM to which you want to add tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tags (list)\n\nThe list of tags that you want to attach to the SAML identity provider in IAM. Each tag consists of a key name and an associated value.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-server-certificate",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/tag-server-certificate.html",
      "command_description": "Description\n\nAdds one or more tags to an IAM server certificate. If a tag with the same key name already exists, then that tag is overwritten with the new value.\n\nNote\n\nFor certificates in a Region supported by Certificate Manager (ACM), we recommend that you don’t use IAM server certificates. Instead, use ACM to provision, manage, and deploy your server certificates. For more information about IAM server certificates, Working with server certificates in the IAM User Guide .\n\nA tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:\n\nAdministrative grouping and discovery - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name Project and the value MyImportantProject . Or search for all resources with the key name Cost Center and the value 41200 .\n\nAccess control - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only a server certificate that has a specified tag attached. For examples of policies that show how to use tags to control access, see Control access using IAM tags in the IAM User Guide .\n\nCost allocation - Use tags to help track which individuals and teams are using which Amazon Web Services resources.\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-server-certificate\n--server-certificate-name <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-certificate-name <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-certificate-name (string)\n\nThe name of the IAM server certificate to which you want to add tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tags (list)\n\nThe list of tags that you want to attach to the IAM server certificate. Each tag consists of a key name and an associated value.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/tag-user.html",
      "command_description": "Description\n\nAdds one or more tags to an IAM user. If a tag with the same key name already exists, then that tag is overwritten with the new value.\n\nA tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:\n\nAdministrative grouping and discovery - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name Project and the value MyImportantProject . Or search for all resources with the key name Cost Center and the value 41200 .\n\nAccess control - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM requesting user that has a specified tag attached. You can also restrict access to only those resources that have a certain tag attached. For examples of policies that show how to use tags to control access, see Control access using IAM tags in the IAM User Guide .\n\nCost allocation - Use tags to help track which individuals and teams are using which Amazon Web Services resources.\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nFor more information about tagging, see Tagging IAM identities in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-user\n--user-name <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user to which you want to add tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tags (list)\n\nThe list of tags that you want to attach to the IAM user. Each tag consists of a key name and an associated value.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a tag to a user\n\nThe following tag-user command adds a tag with the associated Department to the specified user. This command produces no output.\n\naws iam tag-user --user-name alice --tags '{\"Key\": \"Department\", \"Value\": \"Accounting\"}'\n\n\nFor more information, see Tagging IAM Entities in the AWS IAM User Guide"
    },
    {
      "command_name": "untag-instance-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/untag-instance-profile.html",
      "command_description": "Description\n\nRemoves the specified tags from the IAM instance profile. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-instance-profile\n--instance-profile-name <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-profile-name <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-profile-name (string)\n\nThe name of the IAM instance profile from which you want to remove tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tag-keys (list)\n\nA list of key names as a simple array of strings. The tags with matching keys are removed from the specified instance profile.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-mfa-device",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/untag-mfa-device.html",
      "command_description": "Description\n\nRemoves the specified tags from the IAM virtual multi-factor authentication (MFA) device. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-mfa-device\n--serial-number <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--serial-number <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--serial-number (string)\n\nThe unique identifier for the IAM virtual MFA device from which you want to remove tags. For virtual MFA devices, the serial number is the same as the ARN.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tag-keys (list)\n\nA list of key names as a simple array of strings. The tags with matching keys are removed from the specified instance profile.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-open-id-connect-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/untag-open-id-connect-provider.html",
      "command_description": "Description\n\nRemoves the specified tags from the specified OpenID Connect (OIDC)-compatible identity provider in IAM. For more information about OIDC providers, see About web identity federation . For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-open-id-connect-provider\n--open-id-connect-provider-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--open-id-connect-provider-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--open-id-connect-provider-arn (string)\n\nThe ARN of the OIDC provider in IAM from which you want to remove tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tag-keys (list)\n\nA list of key names as a simple array of strings. The tags with matching keys are removed from the specified OIDC provider.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/untag-policy.html",
      "command_description": "Description\n\nRemoves the specified tags from the customer managed policy. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-policy\n--policy-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-arn (string)\n\nThe ARN of the IAM customer managed policy from which you want to remove tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tag-keys (list)\n\nA list of key names as a simple array of strings. The tags with matching keys are removed from the specified policy.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-role",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/untag-role.html",
      "command_description": "Description\n\nRemoves the specified tags from the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-role\n--role-name <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the IAM role from which you want to remove tags.\n\nThis parameter accepts (through its regex pattern ) a string of characters that consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tag-keys (list)\n\nA list of key names as a simple array of strings. The tags with matching keys are removed from the specified role.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a tag from a role\n\nThe following untag-role command removes any tag with the key name ‘Department’ from the specified role. This command produces no output.\n\naws iam untag-role --role-name my-role --tag-keys Department\n\n\nFor more information, see Tagging IAM Entities in the AWS IAM User Guide"
    },
    {
      "command_name": "untag-saml-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/untag-saml-provider.html",
      "command_description": "Description\n\nRemoves the specified tags from the specified Security Assertion Markup Language (SAML) identity provider in IAM. For more information about these providers, see About web identity federation . For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-saml-provider\n--saml-provider-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--saml-provider-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--saml-provider-arn (string)\n\nThe ARN of the SAML identity provider in IAM from which you want to remove tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tag-keys (list)\n\nA list of key names as a simple array of strings. The tags with matching keys are removed from the specified SAML identity provider.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-server-certificate",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/untag-server-certificate.html",
      "command_description": "Description\n\nRemoves the specified tags from the IAM server certificate. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nNote\n\nFor certificates in a Region supported by Certificate Manager (ACM), we recommend that you don’t use IAM server certificates. Instead, use ACM to provision, manage, and deploy your server certificates. For more information about IAM server certificates, Working with server certificates in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-server-certificate\n--server-certificate-name <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-certificate-name <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-certificate-name (string)\n\nThe name of the IAM server certificate from which you want to remove tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tag-keys (list)\n\nA list of key names as a simple array of strings. The tags with matching keys are removed from the specified IAM server certificate.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/untag-user.html",
      "command_description": "Description\n\nRemoves the specified tags from the user. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-user\n--user-name <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user from which you want to remove tags.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--tag-keys (list)\n\nA list of key names as a simple array of strings. The tags with matching keys are removed from the specified user.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a tag from a user\n\nThe following untag-user command removes any tag with the key name ‘Department’ from the specified user. This command produces no output.\n\naws iam untag-user --user-name alice --tag-keys Department\n\n\nFor more information, see Tagging IAM Entities in the AWS IAM User Guide"
    },
    {
      "command_name": "update-access-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-access-key.html",
      "command_description": "Description\n\nChanges the status of the specified access key from Active to Inactive, or vice versa. This operation can be used to disable a user’s key as part of a key rotation workflow.\n\nIf the UserName is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.\n\nFor information about rotating keys, see Managing keys and certificates in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-access-key\n[--user-name <value>]\n--access-key-id <value>\n--status <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "--access-key-id <value>",
        "--status <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user whose key you want to update.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--access-key-id (string)\n\nThe access key ID of the secret access key you want to update.\n\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.\n\n--status (string)\n\nThe status you want to assign to the secret access key. Active means that the key can be used for programmatic calls to Amazon Web Services, while Inactive means that the key cannot be used.\n\nPossible values:\n\nActive\n\nInactive\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo activate or deactivate an access key for an IAM user\n\nThe following update-access-key command deactivates the specified access key (access key ID and secret access key) for the IAM user named Bob:\n\naws iam update-access-key --access-key-id AKIAIOSFODNN7EXAMPLE --status Inactive --user-name Bob\n\n\nDeactivating the key means that it cannot be used for programmatic access to AWS. However, the key is still available and can be reactivated.\n\nFor more information, see Creating, Modifying, and Viewing User Security Credentials in the Using IAM guide."
    },
    {
      "command_name": "update-account-password-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-account-password-policy.html",
      "command_description": "Description\n\nUpdates the password policy settings for the Amazon Web Services account.\n\nNote\n\nThis operation does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter’s value reverts to its default value. See the Request Parameters section for each parameter’s default value. Also note that some parameters do not allow the default parameter to be explicitly set. Instead, to invoke the default value, do not include that parameter when you invoke the operation.\n\nFor more information about using a password policy, see Managing an IAM password policy in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-account-password-policy\n[--minimum-password-length <value>]\n[--require-symbols | --no-require-symbols]\n[--require-numbers | --no-require-numbers]\n[--require-uppercase-characters | --no-require-uppercase-characters]\n[--require-lowercase-characters | --no-require-lowercase-characters]\n[--allow-users-to-change-password | --no-allow-users-to-change-password]\n[--max-password-age <value>]\n[--password-reuse-prevention <value>]\n[--hard-expiry | --no-hard-expiry]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--minimum-password-length <value>]",
        "[--require-symbols | --no-require-symbols]",
        "[--require-numbers | --no-require-numbers]",
        "[--require-uppercase-characters | --no-require-uppercase-characters]",
        "[--require-lowercase-characters | --no-require-lowercase-characters]",
        "[--allow-users-to-change-password | --no-allow-users-to-change-password]",
        "[--max-password-age <value>]",
        "[--password-reuse-prevention <value>]",
        "[--hard-expiry | --no-hard-expiry]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--minimum-password-length (integer)\n\nThe minimum number of characters allowed in an IAM user password.\n\nIf you do not specify a value for this parameter, then the operation uses the default value of 6 .\n\n--require-symbols | --no-require-symbols (boolean)\n\nSpecifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:\n\n! @ # $ % ^ & * ( ) _ + - = [ ] { } | ‘\n\nIf you do not specify a value for this parameter, then the operation uses the default value of false . The result is that passwords do not require at least one symbol character.\n\n--require-numbers | --no-require-numbers (boolean)\n\nSpecifies whether IAM user passwords must contain at least one numeric character (0 to 9).\n\nIf you do not specify a value for this parameter, then the operation uses the default value of false . The result is that passwords do not require at least one numeric character.\n\n--require-uppercase-characters | --no-require-uppercase-characters (boolean)\n\nSpecifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).\n\nIf you do not specify a value for this parameter, then the operation uses the default value of false . The result is that passwords do not require at least one uppercase character.\n\n--require-lowercase-characters | --no-require-lowercase-characters (boolean)\n\nSpecifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).\n\nIf you do not specify a value for this parameter, then the operation uses the default value of false . The result is that passwords do not require at least one lowercase character.\n\n--allow-users-to-change-password | --no-allow-users-to-change-password (boolean)\n\nAllows all IAM users in your account to use the Amazon Web Services Management Console to change their own passwords. For more information, see Letting IAM users change their own passwords in the IAM User Guide .\n\nIf you do not specify a value for this parameter, then the operation uses the default value of false . The result is that IAM users in the account do not automatically have permissions to change their own password.\n\n--max-password-age (integer)\n\nThe number of days that an IAM user password is valid.\n\nIf you do not specify a value for this parameter, then the operation uses the default value of 0 . The result is that IAM user passwords never expire.\n\n--password-reuse-prevention (integer)\n\nSpecifies the number of previous passwords that IAM users are prevented from reusing.\n\nIf you do not specify a value for this parameter, then the operation uses the default value of 0 . The result is that IAM users are not prevented from reusing previous passwords.\n\n--hard-expiry | --no-hard-expiry (boolean)\n\nPrevents IAM users from setting a new password after their password has expired. The IAM user cannot be accessed until an administrator resets the password.\n\nIf you do not specify a value for this parameter, then the operation uses the default value of false . The result is that IAM users can change their passwords after they expire and continue to sign in as the user.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo set or change the current account password policy\n\nThe following update-account-password-policy command sets the password policy to require a minimum length of eight characters and to require one or more numbers in the password:\n\naws iam update-account-password-policy --minimum-password-length 8 --require-numbers\n\n\nChanges to an account’s password policy affect any new passwords that are created for IAM users in the account. Password policy changes do not affect existing passwords.\n\nFor more information, see Setting an Account Password Policy for IAM Users in the Using IAM guide."
    },
    {
      "command_name": "update-assume-role-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-assume-role-policy.html",
      "command_description": "Description\n\nUpdates the policy that grants an IAM entity permission to assume a role. This is typically referred to as the “role trust policy”. For more information about roles, see Using roles to delegate permissions and federate identities .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-assume-role-policy\n--role-name <value>\n--policy-document <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "--policy-document <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the role to update with the new policy.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--policy-document (string)\n\nThe policy that grants an entity permission to assume the role.\n\nYou must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the trust policy for an IAM role\n\nThe following update-assume-role-policy command updates the trust policy for the role named Test-Role:\n\naws iam update-assume-role-policy --role-name Test-Role --policy-document file://Test-Role-Trust-Policy.json\n\n\nThe trust policy is defined as a JSON document in the Test-Role-Trust-Policy.json file. (The file name and extension do not have significance.) The trust policy must specify a principal.\n\nTo update the permissions policy for a role, use the put-role-policy command.\n\nFor more information, see Creating a Role in the Using IAM guide."
    },
    {
      "command_name": "update-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-group.html",
      "command_description": "Description\n\nUpdates the name and/or the path of the specified IAM group.\n\nWarning\n\nYou should understand the implications of changing a group’s path or name. For more information, see Renaming users and groups in the IAM User Guide .\n\nNote\n\nThe person making the request (the principal), must have permission to change the role group with the old name and the new name. For example, to change the group named Managers to MGRs , the principal must have a policy that allows them to update both groups. If the principal has permission to update the Managers group, but not the MGRs group, then the update fails. For more information about permissions, see Access management .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-group\n--group-name <value>\n[--new-path <value>]\n[--new-group-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-name <value>",
        "[--new-path <value>]",
        "[--new-group-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nName of the IAM group to update. If you’re changing the name of the group, this is the original name.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--new-path (string)\n\nNew path for the IAM group. Only include this if changing the group’s path.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--new-group-name (string)\n\nNew name for the IAM group. Only include this if changing the group’s name.\n\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both “MyResource” and “myresource”.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo rename an IAM group\n\nThe following update-group command changes the name of the IAM group Test to Test-1:\n\naws iam update-group --group-name Test --new-group-name Test-1\n\n\nFor more information, see Changing a Group’s Name or Path in the Using IAM guide."
    },
    {
      "command_name": "update-login-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-login-profile.html",
      "command_description": "Description\n\nChanges the password for the specified IAM user. You can use the CLI, the Amazon Web Services API, or the Users page in the IAM console to change the password for any IAM user. Use ChangePassword to change your own password in the My Security Credentials page in the Amazon Web Services Management Console.\n\nFor more information about modifying passwords, see Managing passwords in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-login-profile\n--user-name <value>\n[--password <value>]\n[--password-reset-required | --no-password-reset-required]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "[--password <value>]",
        "[--password-reset-required | --no-password-reset-required]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user whose password you want to update.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--password (string)\n\nThe new password for the specified IAM user.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\nHowever, the format can be further restricted by the account administrator by setting a password policy on the Amazon Web Services account. For more information, see UpdateAccountPasswordPolicy .\n\n--password-reset-required | --no-password-reset-required (boolean)\n\nAllows this new password to be used only once by requiring the specified IAM user to set a new password on next sign-in.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the password for an IAM user\n\nThe following update-login-profile command creates a new password for the IAM user named Bob:\n\naws iam update-login-profile --user-name Bob --password <password>\n\n\nTo set a password policy for the account, use the update-account-password-policy command. If the new password violates the account password policy, the command returns a PasswordPolicyViolation error.\n\nIf the account password policy allows them to, IAM users can change their own passwords using the change-password command.\n\nStore the password in a secure place. If the password is lost, it cannot be recovered, and you must create a new one using the create-login-profile command.\n\nFor more information, see Managing Passwords in the Using IAM guide."
    },
    {
      "command_name": "update-open-id-connect-provider-thumbprint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-open-id-connect-provider-thumbprint.html",
      "command_description": "Description\n\nReplaces the existing list of server certificate thumbprints associated with an OpenID Connect (OIDC) provider resource object with a new list of thumbprints.\n\nThe list that you pass with this operation completely replaces the existing list of thumbprints. (The lists are not merged.)\n\nTypically, you need to update a thumbprint only when the identity provider certificate changes, which occurs rarely. However, if the provider’s certificate does change, any attempt to assume an IAM role that specifies the OIDC provider as a principal fails until the certificate thumbprint is updated.\n\nNote\n\nAmazon Web Services secures communication with some OIDC identity providers (IdPs) through our library of trusted certificate authorities (CAs) instead of using a certificate thumbprint to verify your IdP server certificate. These OIDC IdPs include Google, and those that use an Amazon S3 bucket to host a JSON Web Key Set (JWKS) endpoint. In these cases, your legacy thumbprint remains in your configuration, but is no longer used for validation.\n\nNote\n\nTrust for the OIDC provider is derived from the provider certificate and is validated by the thumbprint. Therefore, it is best to limit access to the UpdateOpenIDConnectProviderThumbprint operation to highly privileged users.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-open-id-connect-provider-thumbprint\n--open-id-connect-provider-arn <value>\n--thumbprint-list <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--open-id-connect-provider-arn <value>",
        "--thumbprint-list <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--open-id-connect-provider-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM OIDC provider resource object for which you want to update the thumbprint. You can get a list of OIDC provider ARNs by using the ListOpenIDConnectProviders operation.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--thumbprint-list (list)\n\nA list of certificate thumbprints that are associated with the specified IAM OpenID Connect provider. For more information, see CreateOpenIDConnectProvider .\n\n(string)\n\nContains a thumbprint for an identity provider’s server certificate.\n\nThe identity provider’s server certificate thumbprint is the hex-encoded SHA-1 hash value of the self-signed X.509 certificate. This thumbprint is used by the domain where the OpenID Connect provider makes its keys available. The thumbprint is always a 40-character string.\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo replace the existing list of server certificate thumbprints with a new list\n\nThis example updates the certificate thumbprint list for the OIDC provider whose ARN is arn:aws:iam::123456789012:oidc-provider/example.oidcprovider.com to use a new thumbprint:\n\naws iam update-open-id-connect-provider-thumbprint --open-id-connect-provider-arn arn:aws:iam::123456789012:oidc-provider/example.oidcprovider.com --thumbprint-list 7359755EXAMPLEabc3060bce3EXAMPLEec4542a3\n\n\nFor more information, see Using OpenID Connect Identity Providers in the Using IAM guide."
    },
    {
      "command_name": "update-role",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-role.html",
      "command_description": "Description\n\nUpdates the description or maximum session duration setting of a role.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-role\n--role-name <value>\n[--description <value>]\n[--max-session-duration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "[--description <value>]",
        "[--max-session-duration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the role that you want to modify.\n\n--description (string)\n\nThe new description that you want to apply to the specified role.\n\n--max-session-duration (integer)\n\nThe maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.\n\nAnyone who assumes the role from the CLI or API can use the DurationSeconds API parameter or the duration-seconds CLI parameter to request a longer session. The MaxSessionDuration setting determines the maximum duration that can be requested using the DurationSeconds parameter. If users don’t specify a value for the DurationSeconds parameter, their security credentials are valid for one hour by default. This applies when you use the AssumeRole* API operations or the assume-role* CLI operations but does not apply when you use those operations to create a console URL. For more information, see Using IAM roles in the IAM User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo change an IAM role’s description or session duration\n\nThe following update-role command changes the description of the IAM role production-role to Main production role and sets the maximum session duration to 12 hours.\n\naws iam update-role --role-name production-role --description 'Main production role' --max-session-duration 43200\n\n\nFor more information, see Modifying a Role in the AWS IAM User’s Guide."
    },
    {
      "command_name": "update-role-description",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-role-description.html",
      "command_description": "Description\n\nUse UpdateRole instead.\n\nModifies only the description of a role. This operation performs the same function as the Description parameter in the UpdateRole operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-role-description\n--role-name <value>\n--description <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-name <value>",
        "--description <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-name (string)\n\nThe name of the role that you want to modify.\n\n--description (string)\n\nThe new description that you want to apply to the specified role.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRole -> (structure)\n\nA structure that contains details about the modified role.\n\nPath -> (string)\n\nThe path to the role. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nRoleName -> (string)\n\nThe friendly name that identifies the role.\n\nRoleId -> (string)\n\nThe stable and unique string identifying the role. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide guide.\n\nCreateDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the role was created.\n\nAssumeRolePolicyDocument -> (string)\n\nThe policy that grants an entity permission to assume the role.\n\nDescription -> (string)\n\nA description of the role that you provide.\n\nMaxSessionDuration -> (integer)\n\nThe maximum session duration (in seconds) for the specified role. Anyone who uses the CLI, or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter.\n\nPermissionsBoundary -> (structure)\n\nThe ARN of the policy used to set the permissions boundary for the role.\n\nFor more information about permissions boundaries, see Permissions boundaries for IAM identities in the IAM User Guide .\n\nPermissionsBoundaryType -> (string)\n\nThe permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of Policy .\n\nPermissionsBoundaryArn -> (string)\n\nThe ARN of the policy used to set the permissions boundary for the user or role.\n\nTags -> (list)\n\nA list of tags that are attached to the role. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nRoleLastUsed -> (structure)\n\nContains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked in the IAM User Guide .\n\nLastUsedDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format that the role was last used.\n\nThis field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see Regions where data is tracked in the IAM User Guide .\n\nRegion -> (string)\n\nThe name of the Amazon Web Services Region in which the role was last used.",
      "command_examples": "Examples\n\nTo change an IAM role’s description\n\nThe following update-role command changes the description of the IAM role production-role to Main production role.\n\naws iam update-role-description --role-name production-role --description 'Main production role'\n\nOutput::\n\n{\n    \"Role\": {\n        \"Path\": \"/\",\n        \"RoleName\": \"production-role\",\n        \"RoleId\": \"AROA1234567890EXAMPLE\",\n        \"Arn\": \"arn:aws:iam::123456789012:role/production-role\",\n        \"CreateDate\": \"2017-12-06T17:16:37+00:00\",\n        \"AssumeRolePolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\": \"Allow\",\n                    \"Principal\": {\n                        \"AWS\": \"arn:aws:iam::123456789012:root\"\n                    },\n                    \"Action\": \"sts:AssumeRole\",\n                    \"Condition\": {}\n                }\n            ]\n        },\n        \"Description\": \"Main production role\"\n    }\n}\n\n\nFor more information, see Modifying a Role in the AWS IAM User’s Guide."
    },
    {
      "command_name": "update-saml-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-saml-provider.html",
      "command_description": "Description\n\nUpdates the metadata document for an existing SAML provider resource object.\n\nNote\n\nThis operation requires Signature Version 4 .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-saml-provider\n--saml-metadata-document <value>\n--saml-provider-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--saml-metadata-document <value>",
        "--saml-provider-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--saml-metadata-document (string)\n\nAn XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer’s name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization’s IdP.\n\n--saml-provider-arn (string)\n\nThe Amazon Resource Name (ARN) of the SAML provider to update.\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSAMLProviderArn -> (string)\n\nThe Amazon Resource Name (ARN) of the SAML provider that was updated.",
      "command_examples": "Examples\n\nTo update the metadata document for an existing SAML provider\n\nThis example updates the SAML provider in IAM whose ARN is arn:aws:iam::123456789012:saml-provider/SAMLADFS with a new SAML metadata document from the file SAMLMetaData.xml:\n\naws iam update-saml-provider --saml-metadata-document file://SAMLMetaData.xml --saml-provider-arn arn:aws:iam::123456789012:saml-provider/SAMLADFS\n\n\nOutput:\n\n{\n  \"SAMLProviderArn\": \"arn:aws:iam::123456789012:saml-provider/SAMLADFS\"\n}\n\n\nFor more information, see Using SAML Providers in the Using IAM guide."
    },
    {
      "command_name": "update-server-certificate",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-server-certificate.html",
      "command_description": "Description\n\nUpdates the name and/or the path of the specified server certificate stored in IAM.\n\nFor more information about working with server certificates, see Working with server certificates in the IAM User Guide . This topic also includes a list of Amazon Web Services services that can use the server certificates that you manage with IAM.\n\nWarning\n\nYou should understand the implications of changing a server certificate’s path or name. For more information, see Renaming a server certificate in the IAM User Guide .\n\nNote\n\nThe person making the request (the principal), must have permission to change the server certificate with the old name and the new name. For example, to change the certificate named ProductionCert to ProdCert , the principal must have a policy that allows them to update both certificates. If the principal has permission to update the ProductionCert group, but not the ProdCert certificate, then the update fails. For more information about permissions, see Access management in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-server-certificate\n--server-certificate-name <value>\n[--new-path <value>]\n[--new-server-certificate-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-certificate-name <value>",
        "[--new-path <value>]",
        "[--new-server-certificate-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-certificate-name (string)\n\nThe name of the server certificate that you want to update.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--new-path (string)\n\nThe new path for the server certificate. Include this only if you are updating the server certificate’s path.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--new-server-certificate-name (string)\n\nThe new name for the server certificate. Include this only if you are updating the server certificate’s name. The name of the certificate cannot contain any spaces.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo change the path or name of a server certificate in your AWS account\n\nThe following update-server-certificate command changes the name of the certificate from myServerCertificate to myUpdatedServerCertificate. It also changes the path to /cloudfront/ so that it can be accessed by the Amazon CloudFront service. This command produces no output. You can see the results of the update by running the list-server-certificates command.\n\naws-iam update-server-certificate --server-certificate-name myServerCertificate --new-server-certificate-name myUpdatedServerCertificate --new-path /cloudfront/\n\n\nFor more information, see Creating, Uploading, and Deleting Server Certificates in the IAM Users Guide."
    },
    {
      "command_name": "update-service-specific-credential",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-service-specific-credential.html",
      "command_description": "Description\n\nSets the status of a service-specific credential to Active or Inactive . Service-specific credentials that are inactive cannot be used for authentication to the service. This operation can be used to disable a user’s service-specific credential as part of a credential rotation work flow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-service-specific-credential\n[--user-name <value>]\n--service-specific-credential-id <value>\n--status <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "--service-specific-credential-id <value>",
        "--status <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user associated with the service-specific credential. If you do not specify this value, then the operation assumes the user whose credentials are used to call the operation.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--service-specific-credential-id (string)\n\nThe unique identifier of the service-specific credential.\n\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.\n\n--status (string)\n\nThe status to be assigned to the service-specific credential.\n\nPossible values:\n\nActive\n\nInactive\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nExample 1: To update the status of the requesting user’s service-specific credential\n\nThe following update-service-specific-credential example changes the status for the specified credential for the user making the request to Inactive. This command produces no output.\n\naws iam update-service-specific-credential \\\n    --service-specific-credential-id ACCAEXAMPLE123EXAMPLE \\\n    --status Inactive\n\n\nExample 2: To update the status of a specified user’s service-specific credential\n\nThe following update-service-specific-credential example changes the status for the credential of the specified user to Inactive. This command produces no output.\n\naws iam update-service-specific-credential \\\n    --user-name sofia \\\n    --service-specific-credential-id ACCAEXAMPLE123EXAMPLE \\\n    --status Inactive\n\n\nFor more information, see Create Git Credentials for HTTPS Connections to CodeCommit in the AWS CodeCommit User Guide"
    },
    {
      "command_name": "update-signing-certificate",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-signing-certificate.html",
      "command_description": "Description\n\nChanges the status of the specified user signing certificate from active to disabled, or vice versa. This operation can be used to disable an IAM user’s signing certificate as part of a certificate rotation work flow.\n\nIf the UserName field is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-signing-certificate\n[--user-name <value>]\n--certificate-id <value>\n--status <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "--certificate-id <value>",
        "--status <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user the signing certificate belongs to.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--certificate-id (string)\n\nThe ID of the signing certificate you want to update.\n\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.\n\n--status (string)\n\nThe status you want to assign to the certificate. Active means that the certificate can be used for programmatic calls to Amazon Web Services Inactive means that the certificate cannot be used.\n\nPossible values:\n\nActive\n\nInactive\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo activate or deactivate a signing certificate for an IAM user\n\nThe following update-signing-certificate command deactivates the specified signing certificate for the IAM user named Bob:\n\naws iam update-signing-certificate --certificate-id TA7SMP42TDN5Z26OBPJE7EXAMPLE --status Inactive --user-name Bob\n\n\nTo get the ID for a signing certificate, use the list-signing-certificates command.\n\nFor more information, see Creating and Uploading a User Signing Certificate in the Using IAM guide."
    },
    {
      "command_name": "update-ssh-public-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-ssh-public-key.html",
      "command_description": "Description\n\nSets the status of an IAM user’s SSH public key to active or inactive. SSH public keys that are inactive cannot be used for authentication. This operation can be used to disable a user’s SSH public key as part of a key rotation work flow.\n\nThe SSH public key affected by this operation is used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see Set up CodeCommit for SSH connections in the CodeCommit User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-ssh-public-key\n--user-name <value>\n--ssh-public-key-id <value>\n--status <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--ssh-public-key-id <value>",
        "--status <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user associated with the SSH public key.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--ssh-public-key-id (string)\n\nThe unique identifier for the SSH public key.\n\nThis parameter allows (through its regex pattern ) a string of characters that can consist of any upper or lowercased letter or digit.\n\n--status (string)\n\nThe status to assign to the SSH public key. Active means that the key can be used for authentication with an CodeCommit repository. Inactive means that the key cannot be used.\n\nPossible values:\n\nActive\n\nInactive\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo change the status of an SSH public key\n\nThe following update-ssh-public-key command changes the status of the specified public key to Inactive.\n\naws iam update-ssh-public-key \\\n    --user-name sofia \\\n    --ssh-public-key-id APKA1234567890EXAMPLE \\\n    --status Inactive\n\n\nThis command produces no output.\n\nFor more information about SSH keys in IAM, see Use SSH Keys and SSH with CodeCommit in the AWS IAM User Guide"
    },
    {
      "command_name": "update-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/update-user.html",
      "command_description": "Description\n\nUpdates the name and/or the path of the specified IAM user.\n\nWarning\n\nYou should understand the implications of changing an IAM user’s path or name. For more information, see Renaming an IAM user and Renaming an IAM group in the IAM User Guide .\n\nNote\n\nTo change a user name, the requester must have appropriate permissions on both the source object and the target object. For example, to change Bob to Robert, the entity making the request must have permission on Bob and Robert, or must have permission on all (*). For more information about permissions, see Permissions and policies .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-user\n--user-name <value>\n[--new-path <value>]\n[--new-user-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "[--new-path <value>]",
        "[--new-user-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nName of the user to update. If you’re changing the name of the user, this is the original user name.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--new-path (string)\n\nNew path for the IAM user. Include this parameter only if you’re changing the user’s path.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\n--new-user-name (string)\n\nNew name for the user. Include this parameter only if you’re changing the user’s name.\n\nIAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both “MyResource” and “myresource”.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo change an IAM user’s name\n\nThe following update-user command changes the name of the IAM user Bob to Robert:\n\naws iam update-user --user-name Bob --new-user-name Robert\n\n\nFor more information, see Changing a Group’s Name or Path in the Using IAM guide."
    },
    {
      "command_name": "upload-server-certificate",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/upload-server-certificate.html",
      "command_description": "Description\n\nUploads a server certificate entity for the Amazon Web Services account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded.\n\nWe recommend that you use Certificate Manager to provision, manage, and deploy your server certificates. With ACM you can request a certificate, deploy it to Amazon Web Services resources, and let ACM handle certificate renewals for you. Certificates provided by ACM are free. For more information about using ACM, see the Certificate Manager User Guide .\n\nFor more information about working with server certificates, see Working with server certificates in the IAM User Guide . This topic includes a list of Amazon Web Services services that can use the server certificates that you manage with IAM.\n\nFor information about the number of server certificates you can upload, see IAM and STS quotas in the IAM User Guide .\n\nNote\n\nBecause the body of the public key certificate, private key, and the certificate chain can be large, you should use POST rather than GET when calling UploadServerCertificate . For information about setting up signatures and authorization through the API, see Signing Amazon Web Services API requests in the Amazon Web Services General Reference . For general information about using the Query API with IAM, see Calling the API by making HTTP query requests in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  upload-server-certificate\n[--path <value>]\n--server-certificate-name <value>\n--certificate-body <value>\n--private-key <value>\n[--certificate-chain <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--path <value>]",
        "--server-certificate-name <value>",
        "--certificate-body <value>",
        "--private-key <value>",
        "[--certificate-chain <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--path (string)\n\nThe path for the server certificate. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nThis parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\\u0021 ) through the DEL character (\\u007F ), including most punctuation characters, digits, and upper and lowercased letters.\n\nNote\n\nIf you are uploading a server certificate specifically for use with Amazon CloudFront distributions, you must specify a path using the path parameter. The path must begin with /cloudfront and must include a trailing slash (for example, /cloudfront/test/ ).\n\n--server-certificate-name (string)\n\nThe name for the server certificate. Do not include the path in this value. The name of the certificate cannot contain any spaces.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--certificate-body (string)\n\nThe contents of the public key certificate in PEM-encoded format.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--private-key (string)\n\nThe contents of the private key in PEM-encoded format.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--certificate-chain (string)\n\nThe contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--tags (list)\n\nA list of tags that you want to attach to the new IAM server certificate resource. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nNote\n\nIf any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerCertificateMetadata -> (structure)\n\nThe meta information of the uploaded server certificate without its certificate body, certificate chain, and private key.\n\nPath -> (string)\n\nThe path to the server certificate. For more information about paths, see IAM identifiers in the IAM User Guide .\n\nServerCertificateName -> (string)\n\nThe name that identifies the server certificate.\n\nServerCertificateId -> (string)\n\nThe stable and unique string identifying the server certificate. For more information about IDs, see IAM identifiers in the IAM User Guide .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see IAM identifiers in the IAM User Guide .\n\nUploadDate -> (timestamp)\n\nThe date when the server certificate was uploaded.\n\nExpiration -> (timestamp)\n\nThe date on which the certificate is set to expire.\n\nTags -> (list)\n\nA list of tags that are attached to the new IAM server certificate. The returned list of tags is sorted by tag key. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\n(structure)\n\nA structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources in the IAM User Guide .\n\nKey -> (string)\n\nThe key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.\n\nValue -> (string)\n\nThe value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources , Accounting , and Support . Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.\n\nNote\n\nAmazon Web Services always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.",
      "command_examples": "Examples\n\nTo upload a server certificate to your AWS account\n\nThe following upload-server-certificate command uploads a server certificate to your AWS account. In this example, the certificate is in the file public_key_cert_file.pem, the associated private key is in the file my_private_key.pem, and the the certificate chain provided by the certificate authority (CA) is in the my_certificate_chain_file.pem file. When the file has finished uploading, it is available under the name myServerCertificate. Parameters that begin with file:// tells the command to read the contents of the file and use that as the parameter value instead of the file name itself.\n\naws iam upload-server-certificate --server-certificate-name myServerCertificate --certificate-body file://public_key_cert_file.pem --private-key file://my_private_key.pem --certificate-chain file://my_certificate_chain_file.pem\n\n\nOutput:\n\n{\n    \"ServerCertificateMetadata\": {\n        \"Path\": \"/\",\n        \"ServerCertificateName\": \"myServerCertificate\",\n        \"ServerCertificateId\": \"ASCAEXAMPLE123EXAMPLE\",\n        \"Arn\": \"arn:aws:iam::1234567989012:server-certificate/myServerCertificate\",\n        \"UploadDate\": \"2019-04-22T21:13:44+00:00\",\n        \"Expiration\": \"2019-10-15T22:23:16+00:00\"\n    }\n}\n\n\nFor more information, see Creating, Uploading, and Deleting Server Certificates in the Using IAM guide."
    },
    {
      "command_name": "upload-signing-certificate",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/upload-signing-certificate.html",
      "command_description": "Description\n\nUploads an X.509 signing certificate and associates it with the specified IAM user. Some Amazon Web Services services require you to use certificates to validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is Active .\n\nFor information about when you would use an X.509 signing certificate, see Managing server certificates in IAM in the IAM User Guide .\n\nIf the UserName is not specified, the IAM user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.\n\nNote\n\nBecause the body of an X.509 certificate can be large, you should use POST rather than GET when calling UploadSigningCertificate . For information about setting up signatures and authorization through the API, see Signing Amazon Web Services API requests in the Amazon Web Services General Reference . For general information about using the Query API with IAM, see Making query requests in the IAM User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  upload-signing-certificate\n[--user-name <value>]\n--certificate-body <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--user-name <value>]",
        "--certificate-body <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the user the signing certificate is for.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--certificate-body (string)\n\nThe contents of the signing certificate.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCertificate -> (structure)\n\nInformation about the certificate.\n\nUserName -> (string)\n\nThe name of the user the signing certificate is associated with.\n\nCertificateId -> (string)\n\nThe ID for the signing certificate.\n\nCertificateBody -> (string)\n\nThe contents of the signing certificate.\n\nStatus -> (string)\n\nThe status of the signing certificate. Active means that the key is valid for API calls, while Inactive means it is not.\n\nUploadDate -> (timestamp)\n\nThe date when the signing certificate was uploaded.",
      "command_examples": "Examples\n\nTo upload a signing certificate for an IAM user\n\nThe following upload-signing-certificate command uploads a signing certificate for the IAM user named Bob:\n\naws iam upload-signing-certificate --user-name Bob --certificate-body file://certificate.pem\n\n\nOutput:\n\n{\n    \"Certificate\": {\n        \"UserName\": \"Bob\",\n        \"Status\": \"Active\",\n        \"CertificateBody\": \"-----BEGIN CERTIFICATE-----<certificate-body>-----END CERTIFICATE-----\",\n        \"CertificateId\": \"TA7SMP42TDN5Z26OBPJE7EXAMPLE\",\n        \"UploadDate\": \"2013-06-06T21:40:08.121Z\"\n    }\n}\n\n\nThe certificate is in a file named certificate.pem in PEM format.\n\nFor more information, see Creating and Uploading a User Signing Certificate in the Using IAM guide."
    },
    {
      "command_name": "upload-ssh-public-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/upload-ssh-public-key.html",
      "command_description": "Description\n\nUploads an SSH public key and associates it with the specified IAM user.\n\nThe SSH public key uploaded by this operation can be used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see Set up CodeCommit for SSH connections in the CodeCommit User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  upload-ssh-public-key\n--user-name <value>\n--ssh-public-key-body <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--user-name <value>",
        "--ssh-public-key-body <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--user-name (string)\n\nThe name of the IAM user to associate the SSH public key with.\n\nThis parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-\n\n--ssh-public-key-body (string)\n\nThe SSH public key. The public key must be encoded in ssh-rsa format or PEM format. The minimum bit-length of the public key is 2048 bits. For example, you can generate a 2048-bit key, and the resulting PEM file is 1679 bytes long.\n\nThe regex pattern used to validate this parameter is a string of characters consisting of the following:\n\nAny printable ASCII character ranging from the space character (\\u0020 ) through the end of the ASCII character range\n\nThe printable characters in the Basic Latin and Latin-1 Supplement character set (through \\u00FF )\n\nThe special characters tab (\\u0009 ), line feed (\\u000A ), and carriage return (\\u000D )\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSSHPublicKey -> (structure)\n\nContains information about the SSH public key.\n\nUserName -> (string)\n\nThe name of the IAM user associated with the SSH public key.\n\nSSHPublicKeyId -> (string)\n\nThe unique identifier for the SSH public key.\n\nFingerprint -> (string)\n\nThe MD5 message digest of the SSH public key.\n\nSSHPublicKeyBody -> (string)\n\nThe SSH public key.\n\nStatus -> (string)\n\nThe status of the SSH public key. Active means that the key can be used for authentication with an CodeCommit repository. Inactive means that the key cannot be used.\n\nUploadDate -> (timestamp)\n\nThe date and time, in ISO 8601 date-time format , when the SSH public key was uploaded.",
      "command_examples": "Examples\n\nTo upload an SSH public key and associate it with a user\n\nThe following upload-ssh-public-key command uploads the public key found in the file ‘sshkey.pub’ and attaches it to the user ‘sofia’.\n\naws iam upload-ssh-public-key --user-name sofia --ssh-public-key-body file://sshkey.pub\n\n\nOutput:\n\n{\n    \"SSHPublicKey\": {\n        \"UserName\": \"sofia\",\n        \"SSHPublicKeyId\": \"APKA1234567890EXAMPLE\",\n        \"Fingerprint\": \"12:34:56:78:90:ab:cd:ef:12:34:56:78:90:ab:cd:ef\",\n        \"SSHPublicKeyBody\": \"ssh-rsa <<long string generated by ssh-keygen command>>\",\n        \"Status\": \"Active\",\n        \"UploadDate\": \"2019-04-18T17:04:49+00:00\"\n    }\n}\n\n\nFor more information about how to generate keys in a format suitable for this command, see `SSH and Linux, macOS, or Unix: Set Up the Public and Private Keys for Git and CodeCommit`_ or SSH and Windows: Set Up the Public and Private Keys for Git and CodeCommit`_in the *AWS CodeCommit User Guide* .. _`SSH and Linux, macOS, or Unix: Set Up the Public and Private Keys for Git and CodeCommit: https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-ssh-unixes.html#setting-up-ssh-unixes-keys .. SSH and Windows: Set Up the Public and Private Keys for Git and CodeCommit: https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-ssh-windows.html#setting-up-ssh-windows-keys-windows"
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    },
    {
      "command_name": "wizard",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/wizard/index.html",
      "command_description": "Description\n\nInteractive command for creating and configuring AWS resources.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\nwizard\n",
      "command_options": [],
      "command_options_description": "Options\n\nNone\n\nSee ‘aws help’ for descriptions of global parameters."
    }
  ],
  "service_description": "Description\n\nIdentity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see Identity and Access Management (IAM) and the Identity and Access Management User Guide ."
}