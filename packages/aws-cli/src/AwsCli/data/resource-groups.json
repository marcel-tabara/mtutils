{
  "service_name": "resource-groups",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/index.html",
  "service_commands": [
    {
      "command_name": "create-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/create-group.html",
      "command_description": "Description\n\nCreates a resource group with the specified name and description. You can optionally include a resource query, or a service configuration. For more information about constructing a resource query, see Create a tag-based group in Resource Groups . For more information about service configurations, see Service configurations for resource groups .\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:CreateGroup\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-group\n--name <value>\n[--description <value>]\n[--resource-query <value>]\n[--tags <value>]\n[--configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--resource-query <value>]",
        "[--tags <value>]",
        "[--configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the group, which is the identifier of the group in other operations. You can’t change the name of a resource group after you create it. A resource group name can consist of letters, numbers, hyphens, periods, and underscores. The name cannot start with AWS or aws ; these are reserved. A resource group name must be unique within each AWS Region in your AWS account.\n\n--description (string)\n\nThe description of the resource group. Descriptions can consist of letters, numbers, hyphens, underscores, periods, and spaces.\n\n--resource-query (structure)\n\nThe resource query that determines which AWS resources are members of this group. For more information about resource queries, see Create a tag-based group in Resource Groups .\n\nNote\n\nA resource group can contain either a ResourceQuery or a Configuration , but not both.\n\nType -> (string)\n\nThe type of the query. You can use the following values:\n\n*CLOUDFORMATION_STACK_1_0: * Specifies that the Query contains an ARN for a CloudFormation stack.\n\n``TAG_FILTERS_1_0:`` * Specifies that the ``Query`` parameter contains a JSON string that represents a collection of simple tag filters for resource types and tags. The JSON string uses a syntax similar to the `` `GetResources <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html>`__ `` operation, but uses only the `` `ResourceTypeFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters>`__ `` and `` `TagFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters>`__ `` fields. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches *any of the specified values. For example, consider the following sample query for resources that have two tags, Stage and Version , with two values each: [{\"Stage\":[\"Test\",\"Deploy\"]},{\"Version\":[\"1\",\"2\"]}] The results of this query could include the following.\n\nAn EC2 instance that has the following two tags: {\"Stage\":\"Deploy\"} , and {\"Version\":\"2\"}\n\nAn S3 bucket that has the following two tags: {\"Stage\":\"Test\"} , and {\"Version\":\"1\"}\n\nThe query would not include the following items in the results, however.\n\nAn EC2 instance that has only the following tag: {\"Stage\":\"Deploy\"} . The instance does not have all of the tag keys specified in the filter, so it is excluded from the results.\n\nAn RDS database that has the following two tags: {\"Stage\":\"Archived\"} and {\"Version\":\"4\"} The database has all of the tag keys, but none of those keys has an associated value that matches at least one of the specified values in the filter.\n\nQuery -> (string)\n\nThe query that defines a group or a search.\n\nShorthand Syntax:\n\nType=string,Query=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"TAG_FILTERS_1_0\"|\"CLOUDFORMATION_STACK_1_0\",\n  \"Query\": \"string\"\n}\n\n\n--tags (map)\n\nThe tags to add to the group. A tag is key-value pair string.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--configuration (list)\n\nA configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. A configuration is an array of GroupConfigurationItem elements. For details about the syntax of service configurations, see Service configurations for resource groups .\n\nNote\n\nA resource group can contain either a Configuration or a ResourceQuery , but not both.\n\n(structure)\n\nAn item in a group configuration. A group service configuration can have one or more items. For details about group service configuration syntax, see Service configurations for resource groups .\n\nType -> (string)\n\nSpecifies the type of group configuration item. Each item must have a unique value for type . For the list of types that you can specify for a configuration item, see Supported resource types and parameters .\n\nParameters -> (list)\n\nA collection of parameters for this group configuration item. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\n(structure)\n\nA parameter for a group configuration item. For details about group service configuration syntax, see Service configurations for resource groups .\n\nName -> (string)\n\nThe name of the group configuration parameter. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\nValues -> (list)\n\nThe value or values to be used for the specified parameter. For the list of values you can use with each parameter, see Supported resource types and parameters .\n\n(string)\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"string\",\n    \"Parameters\": [\n      {\n        \"Name\": \"string\",\n        \"Values\": [\"string\", ...]\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroup -> (structure)\n\nThe description of the resource group.\n\nGroupArn -> (string)\n\nThe ARN of the resource group.\n\nName -> (string)\n\nThe name of the resource group.\n\nDescription -> (string)\n\nThe description of the resource group.\n\nResourceQuery -> (structure)\n\nThe resource query associated with the group. For more information about resource queries, see Create a tag-based group in Resource Groups .\n\nType -> (string)\n\nThe type of the query. You can use the following values:\n\n*CLOUDFORMATION_STACK_1_0: * Specifies that the Query contains an ARN for a CloudFormation stack.\n\n``TAG_FILTERS_1_0:`` * Specifies that the ``Query`` parameter contains a JSON string that represents a collection of simple tag filters for resource types and tags. The JSON string uses a syntax similar to the `` `GetResources <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html>`__ `` operation, but uses only the `` `ResourceTypeFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters>`__ `` and `` `TagFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters>`__ `` fields. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches *any of the specified values. For example, consider the following sample query for resources that have two tags, Stage and Version , with two values each: [{\"Stage\":[\"Test\",\"Deploy\"]},{\"Version\":[\"1\",\"2\"]}] The results of this query could include the following.\n\nAn EC2 instance that has the following two tags: {\"Stage\":\"Deploy\"} , and {\"Version\":\"2\"}\n\nAn S3 bucket that has the following two tags: {\"Stage\":\"Test\"} , and {\"Version\":\"1\"}\n\nThe query would not include the following items in the results, however.\n\nAn EC2 instance that has only the following tag: {\"Stage\":\"Deploy\"} . The instance does not have all of the tag keys specified in the filter, so it is excluded from the results.\n\nAn RDS database that has the following two tags: {\"Stage\":\"Archived\"} and {\"Version\":\"4\"} The database has all of the tag keys, but none of those keys has an associated value that matches at least one of the specified values in the filter.\n\nQuery -> (string)\n\nThe query that defines a group or a search.\n\nTags -> (map)\n\nThe tags associated with the group.\n\nkey -> (string)\n\nvalue -> (string)\n\nGroupConfiguration -> (structure)\n\nThe service configuration associated with the resource group. For details about the syntax of a service configuration, see Service configurations for resource groups .\n\nConfiguration -> (list)\n\nThe configuration currently associated with the group and in effect.\n\n(structure)\n\nAn item in a group configuration. A group service configuration can have one or more items. For details about group service configuration syntax, see Service configurations for resource groups .\n\nType -> (string)\n\nSpecifies the type of group configuration item. Each item must have a unique value for type . For the list of types that you can specify for a configuration item, see Supported resource types and parameters .\n\nParameters -> (list)\n\nA collection of parameters for this group configuration item. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\n(structure)\n\nA parameter for a group configuration item. For details about group service configuration syntax, see Service configurations for resource groups .\n\nName -> (string)\n\nThe name of the group configuration parameter. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\nValues -> (list)\n\nThe value or values to be used for the specified parameter. For the list of values you can use with each parameter, see Supported resource types and parameters .\n\n(string)\n\nProposedConfiguration -> (list)\n\nIf present, the new configuration that is in the process of being applied to the group.\n\n(structure)\n\nAn item in a group configuration. A group service configuration can have one or more items. For details about group service configuration syntax, see Service configurations for resource groups .\n\nType -> (string)\n\nSpecifies the type of group configuration item. Each item must have a unique value for type . For the list of types that you can specify for a configuration item, see Supported resource types and parameters .\n\nParameters -> (list)\n\nA collection of parameters for this group configuration item. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\n(structure)\n\nA parameter for a group configuration item. For details about group service configuration syntax, see Service configurations for resource groups .\n\nName -> (string)\n\nThe name of the group configuration parameter. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\nValues -> (list)\n\nThe value or values to be used for the specified parameter. For the list of values you can use with each parameter, see Supported resource types and parameters .\n\n(string)\n\nStatus -> (string)\n\nThe current status of an attempt to update the group configuration.\n\nFailureReason -> (string)\n\nIf present, the reason why a request to update the group configuration failed.",
      "command_examples": "Examples\n\nExample 1: To create a tag-based resource group\n\nThe following create-group example creates a tag-based resource group of Amazon EC2 instances in the current region. It’s based on a query for resources that are tagged with the key Name, and the value WebServers. The group name is tbq-WebServer. The query is in a separate JSON file that is passed to the command.\n\naws resource-groups create-group \\\n    --name tbq-WebServer \\\n    --resource-query file://query.json\n\n\nContents of query.json:\n\n{\n    \"Type\": \"TAG_FILTERS_1_0\",\n    \"Query\": \"{\\\"ResourceTypeFilters\\\":[\\\"AWS::EC2::Instance\\\"],\\\"TagFilters\\\":[{\\\"Key\\\":\\\"Name\\\", \\\"Values\\\":[\\\"WebServers\\\"]}]}\"\n}\n\n\nOutput:\n\n{\n    \"Group\": {\n        \"GroupArn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/tbq-WebServer\",\n        \"Name\": \"tbq-WebServer\"\n    },\n    \"ResourceQuery\": {\n        \"Type\": \"TAG_FILTERS_1_0\",\n        \"Query\": \"{\\\"ResourceTypeFilters\\\":[\\\"AWS::EC2::Instance\\\"],\\\"TagFilters\\\":[{\\\"Key\\\":\\\"Name\\\", \\\"Values\\\":[\\\"WebServers\\\"]}]}\"\n    }\n}\n\n\nExample 2: To create a CloudFormation stack-based resource group\n\nThe following create-group example creates an AWS CloudFormation stack-based resource group named sampleCFNstackgroup. The query includes all resources in the specified CloudFormation stack that are supported by AWS Resource Groups.\n\naws resource-groups create-group \\\n    --name cbq-CFNstackgroup \\\n    --resource-query file://query.json\n\n\nContents of query.json:\n\n{\n    \"Type\": \"CLOUDFORMATION_STACK_1_0\",\n    \"Query\": \"{\\\"ResourceTypeFilters\\\":[\\\"AWS::AllSupported\\\"],\\\"StackIdentifier\\\":\\\"arn:aws:cloudformation:us-west-2:123456789012:stack/MyCFNStack/1415z9z0-z39z-11z8-97z5-500z212zz6fz\\\"}\"\n}\n\n\nOutput:\n\n{\n    \"Group\": {\n        \"GroupArn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/cbq-CFNstackgroup\",\n        \"Name\": \"cbq-CFNstackgroup\"\n    },\n    \"ResourceQuery\": {\n        \"Type\": \"CLOUDFORMATION_STACK_1_0\",\n        \"Query\": \"{\\\"ResourceTypeFilters\\\":[\\\"AWS::AllSupported\\\"],\\\"StackIdentifier\\\":\\\"arn:aws:cloudformation:us-east-2:123456789012:stack/MyCFNStack/1415z9z0-z39z-11z8-97z5-500z212zz6fz\\\"}\"}'\n    }\n}\n\n\nFor more information, see Create Groups in the AWS Resource Groups User Guide."
    },
    {
      "command_name": "delete-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/delete-group.html",
      "command_description": "Description\n\nDeletes the specified resource group. Deleting a resource group does not delete any resources that are members of the group; it only deletes the group structure.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:DeleteGroup\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-group\n[--group-name <value>]\n[--group <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--group-name <value>]",
        "[--group <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nDeprecated - don’t use this parameter. Use Group instead.\n\n--group (string)\n\nThe name or the ARN of the resource group to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroup -> (structure)\n\nA full description of the deleted resource group.\n\nGroupArn -> (string)\n\nThe ARN of the resource group.\n\nName -> (string)\n\nThe name of the resource group.\n\nDescription -> (string)\n\nThe description of the resource group.",
      "command_examples": "Examples\n\nTo update the description for a resource group\n\nThe following delete-group example updates the specified resource group.\n\naws resource-groups delete-group \\\n    --group-name tbq-WebServer\n\n\nOutput:\n\n{\n    \"Group\": {\n        \"GroupArn\": \"arn:aws:resource-groups:us-west-2:1234567890:group/tbq-WebServer\",\n        \"Name\": \"tbq-WebServer\"\n    }\n}\n\n\nFor more information, see Delete Groups in the AWS Resource Groups User Guide."
    },
    {
      "command_name": "get-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/get-group.html",
      "command_description": "Description\n\nReturns information about a specified resource group.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:GetGroup\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-group\n[--group-name <value>]\n[--group <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--group-name <value>]",
        "[--group <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nDeprecated - don’t use this parameter. Use Group instead.\n\n--group (string)\n\nThe name or the ARN of the resource group to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroup -> (structure)\n\nA full description of the resource group.\n\nGroupArn -> (string)\n\nThe ARN of the resource group.\n\nName -> (string)\n\nThe name of the resource group.\n\nDescription -> (string)\n\nThe description of the resource group.",
      "command_examples": "Examples\n\nTo get information about a resource group\n\nThe following get-group example displays details about the specified resource group. To get the query attached to the group, use get-group-query.\n\naws resource-groups get-group \\\n    --group-name tbq-WebServer\n\n\nOutput:\n\n{\n    \"Group\": {\n        \"GroupArn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/tbq-WebServer\",\n        \"Name\": \"tbq-WebServer\",\n        \"Description\": \"A tag-based query resource group of WebServers.\"\n    }\n}\n"
    },
    {
      "command_name": "get-group-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/get-group-configuration.html",
      "command_description": "Description\n\nReturns the service configuration associated with the specified resource group. For details about the service configuration syntax, see Service configurations for resource groups .\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:GetGroupConfiguration\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-group-configuration\n[--group <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--group <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group (string)\n\nThe name or the ARN of the resource group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroupConfiguration -> (structure)\n\nThe service configuration associated with the specified group. For details about the service configuration syntax, see Service configurations for resource groups .\n\nConfiguration -> (list)\n\nThe configuration currently associated with the group and in effect.\n\n(structure)\n\nAn item in a group configuration. A group service configuration can have one or more items. For details about group service configuration syntax, see Service configurations for resource groups .\n\nType -> (string)\n\nSpecifies the type of group configuration item. Each item must have a unique value for type . For the list of types that you can specify for a configuration item, see Supported resource types and parameters .\n\nParameters -> (list)\n\nA collection of parameters for this group configuration item. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\n(structure)\n\nA parameter for a group configuration item. For details about group service configuration syntax, see Service configurations for resource groups .\n\nName -> (string)\n\nThe name of the group configuration parameter. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\nValues -> (list)\n\nThe value or values to be used for the specified parameter. For the list of values you can use with each parameter, see Supported resource types and parameters .\n\n(string)\n\nProposedConfiguration -> (list)\n\nIf present, the new configuration that is in the process of being applied to the group.\n\n(structure)\n\nAn item in a group configuration. A group service configuration can have one or more items. For details about group service configuration syntax, see Service configurations for resource groups .\n\nType -> (string)\n\nSpecifies the type of group configuration item. Each item must have a unique value for type . For the list of types that you can specify for a configuration item, see Supported resource types and parameters .\n\nParameters -> (list)\n\nA collection of parameters for this group configuration item. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\n(structure)\n\nA parameter for a group configuration item. For details about group service configuration syntax, see Service configurations for resource groups .\n\nName -> (string)\n\nThe name of the group configuration parameter. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\nValues -> (list)\n\nThe value or values to be used for the specified parameter. For the list of values you can use with each parameter, see Supported resource types and parameters .\n\n(string)\n\nStatus -> (string)\n\nThe current status of an attempt to update the group configuration.\n\nFailureReason -> (string)\n\nIf present, the reason why a request to update the group configuration failed."
    },
    {
      "command_name": "get-group-query",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/get-group-query.html",
      "command_description": "Description\n\nRetrieves the resource query associated with the specified resource group. For more information about resource queries, see Create a tag-based group in Resource Groups .\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:GetGroupQuery\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-group-query\n[--group-name <value>]\n[--group <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--group-name <value>]",
        "[--group <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nDon’t use this parameter. Use Group instead.\n\n--group (string)\n\nThe name or the ARN of the resource group to query.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroupQuery -> (structure)\n\nThe resource query associated with the specified group. For more information about resource queries, see Create a tag-based group in Resource Groups .\n\nGroupName -> (string)\n\nThe name of the resource group that is associated with the specified resource query.\n\nResourceQuery -> (structure)\n\nThe resource query that determines which AWS resources are members of the associated resource group.\n\nType -> (string)\n\nThe type of the query. You can use the following values:\n\n*CLOUDFORMATION_STACK_1_0: * Specifies that the Query contains an ARN for a CloudFormation stack.\n\n``TAG_FILTERS_1_0:`` * Specifies that the ``Query`` parameter contains a JSON string that represents a collection of simple tag filters for resource types and tags. The JSON string uses a syntax similar to the `` `GetResources <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html>`__ `` operation, but uses only the `` `ResourceTypeFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters>`__ `` and `` `TagFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters>`__ `` fields. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches *any of the specified values. For example, consider the following sample query for resources that have two tags, Stage and Version , with two values each: [{\"Stage\":[\"Test\",\"Deploy\"]},{\"Version\":[\"1\",\"2\"]}] The results of this query could include the following.\n\nAn EC2 instance that has the following two tags: {\"Stage\":\"Deploy\"} , and {\"Version\":\"2\"}\n\nAn S3 bucket that has the following two tags: {\"Stage\":\"Test\"} , and {\"Version\":\"1\"}\n\nThe query would not include the following items in the results, however.\n\nAn EC2 instance that has only the following tag: {\"Stage\":\"Deploy\"} . The instance does not have all of the tag keys specified in the filter, so it is excluded from the results.\n\nAn RDS database that has the following two tags: {\"Stage\":\"Archived\"} and {\"Version\":\"4\"} The database has all of the tag keys, but none of those keys has an associated value that matches at least one of the specified values in the filter.\n\nQuery -> (string)\n\nThe query that defines a group or a search.",
      "command_examples": "Examples\n\nTo get the query attached to a resource group\n\nThe following get-group-query example displays query attached to the specified resource group.\n\naws resource-groups get-group-query \\\n    --group-name tbq-WebServer\n\n\nOutput:\n\n{\n    \"GroupQuery\": {\n        \"GroupName\": \"tbq-WebServer\",\n        \"ResourceQuery\": {\n            \"Type\": \"TAG_FILTERS_1_0\",\n            \"Query\": \"{\\\"ResourceTypeFilters\\\":[\\\"AWS::EC2::Instance\\\"],\\\"TagFilters\\\":[{\\\"Key\\\":\\\"Name\\\", \\\"Values\\\":[\\\"WebServers\\\"]}]}\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/get-tags.html",
      "command_description": "Description\n\nReturns a list of tags that are associated with a resource group, specified by an ARN.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:GetTags\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-tags\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the resource group whose tags you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the tagged resource group.\n\nTags -> (map)\n\nThe tags associated with the specified resource group.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo retrieve the tags attached to a resource group\n\nThe following get-tags example displays the tag key and value pairs attached to the specified resource group (the group itself, not its members).\n\naws resource-groups get-tags \\\n    --arn arn:aws:resource-groups:us-west-2:123456789012:group/tbq-WebServer\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/tbq-WebServer\",\n    \"Tags\": {\n        \"QueryType\": \"tags\",\n        \"QueryResources\": \"ec2-instances\"\n    }\n}\n"
    },
    {
      "command_name": "group-resources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/group-resources.html",
      "command_description": "Description\n\nAdds the specified resources to the specified group.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:GroupResources\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  group-resources\n--group <value>\n--resource-arns <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group <value>",
        "--resource-arns <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group (string)\n\nThe name or the ARN of the resource group to add resources to.\n\n--resource-arns (list)\n\nThe list of ARNs for resources to be added to the group.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSucceeded -> (list)\n\nA list of ARNs of resources that were successfully added to the group by this operation.\n\n(string)\n\nFailed -> (list)\n\nA list of ARNs of any resources that failed to be added to the group by this operation.\n\n(structure)\n\nA resource that failed to be added to or removed from a group.\n\nResourceArn -> (string)\n\nThe ARN of the resource that failed to be added or removed.\n\nErrorMessage -> (string)\n\nThe error message text associated with the failure.\n\nErrorCode -> (string)\n\nThe error code associated with the failure.\n\nPending -> (list)\n\nA list of ARNs of any resources that are still in the process of being added to the group by this operation. These pending additions continue asynchronously. You can check the status of pending additions by using the `` ListGroupResources `` operation, and checking the Resources array in the response and the Status field of each object in that array.\n\n(structure)\n\nA structure that identifies a resource that is currently pending addition to the group as a member. Adding a resource to a resource group happens asynchronously as a background task and this one isn’t completed yet.\n\nResourceArn -> (string)\n\nThe Amazon resource name (ARN) of the resource that’s in a pending state."
    },
    {
      "command_name": "list-group-resources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/list-group-resources.html",
      "command_description": "Description\n\nReturns a list of ARNs of the resources that are members of a specified resource group.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:ListGroupResources\n\ncloudformation:DescribeStacks\n\ncloudformation:ListStackResources\n\ntag:GetResources\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-group-resources is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResourceIdentifiers, Resources",
      "command_synopsis": "Synopsis\n  list-group-resources\n[--group-name <value>]\n[--group <value>]\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--group-name <value>]",
        "[--group <value>]",
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nWarning\n\nDeprecated - don’t use this parameter. Use the ``Group`` request field instead. *\n\n--group (string)\n\nThe name or the ARN of the resource group\n\n--filters (list)\n\nFilters, formatted as ResourceFilter objects, that you want to apply to a ListGroupResources operation. Filters the results to include only those of the specified resource types.\n\nresource-type - Filter resources by their type. Specify up to five resource types in the format AWS::ServiceCode::ResourceType . For example, AWS::EC2::Instance , or AWS::S3::Bucket .\n\nWhen you specify a resource-type filter for ListGroupResources , AWS Resource Groups validates your filter resource types against the types that are defined in the query associated with the group. For example, if a group contains only S3 buckets because its query specifies only that resource type, but your resource-type filter includes EC2 instances, AWS Resource Groups does not filter for EC2 instances. In this case, a ListGroupResources request returns a BadRequestException error with a message similar to the following:\n\nThe resource types specified as filters in the request are not valid.\n\nThe error includes a list of resource types that failed the validation because they are not part of the query associated with the group. This validation doesn’t occur when the group query specifies AWS::AllSupported , because a group based on such a query can contain any of the allowed resource types for the query type (tag-based or AWS CloudFormation stack-based queries).\n\n(structure)\n\nA filter name and value pair that is used to obtain more specific results from a list of resources.\n\nName -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nOne or more filter values. Allowed filter values vary by resource filter name, and are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"resource-type\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResources -> (list)\n\nAn array of resources from which you can determine each resource’s identity, type, and group membership status.\n\n(structure)\n\nA structure returned by the ListGroupResources operation that contains identity and group membership status information for one of the resources in the group.\n\nIdentifier -> (structure)\n\nA structure that contains the ARN of a resource and its resource type.\n\nResourceArn -> (string)\n\nThe ARN of a resource.\n\nResourceType -> (string)\n\nThe resource type of a resource, such as AWS::EC2::Instance .\n\nStatus -> (structure)\n\nA structure that contains the status of this resource’s membership in the group.\n\nNote\n\nThis field is present in the response only if the group is of type AWS::EC2::HostManagement .\n\nName -> (string)\n\nThe current status.\n\nResourceIdentifiers -> (list)\n\nWarning\n\n** Deprecated - don’t use this parameter. Use the ``Resources`` response field instead. **\n\n(structure)\n\nA structure that contains the ARN of a resource and its resource type.\n\nResourceArn -> (string)\n\nThe ARN of a resource.\n\nResourceType -> (string)\n\nThe resource type of a resource, such as AWS::EC2::Instance .\n\nNextToken -> (string)\n\nIf present, indicates that more output is available than is included in the current response. Use this value in the NextToken request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the NextToken response element comes back as null .\n\nQueryErrors -> (list)\n\nA list of QueryError objects. Each error is an object that contains ErrorCode and Message structures. Possible values for ErrorCode are CLOUDFORMATION_STACK_INACTIVE and CLOUDFORMATION_STACK_NOT_EXISTING .\n\n(structure)\n\nA two-part error structure that can occur in ListGroupResources or SearchResources operations on CloudFormation stack-based queries. The error occurs if the CloudFormation stack on which the query is based either does not exist, or has a status that renders the stack inactive. A QueryError occurrence does not necessarily mean that AWS Resource Groups could not complete the operation, but the resulting group might have no member resources.\n\nErrorCode -> (string)\n\nPossible values are CLOUDFORMATION_STACK_INACTIVE and CLOUDFORMATION_STACK_NOT_EXISTING .\n\nMessage -> (string)\n\nA message that explains the ErrorCode value. Messages might state that the specified CloudFormation stack does not exist (or no longer exists). For CLOUDFORMATION_STACK_INACTIVE , the message typically states that the CloudFormation stack has a status that is not (or no longer) active, such as CREATE_FAILED .",
      "command_examples": "Examples\n\nTo list all of the resources in a resource group\n\nExample 1: The following list-resource-groups example lists all of the resources that are part of the specified resource group.\n\naws resource-groups list-group-resources \\\n    --group-name tbq-WebServer\n\n\nOutput:\n\n{\n    \"ResourceIdentifiers\": [\n        {\n            \"ResourceArn\": \"arn:aws:ec2:us-west-2:123456789012:instance/i-09f77fa38c12345ab\",\n            \"ResourceType\": \"AWS::EC2::Instance\"\n        }\n    ]\n}\n\n\nExample 2: The following example lists all of the resources in the group that also have a ‘resource-type’ of the ‘AWS::EC2::Instance’. :\n\naws resource-groups list-group-resources\n\n–group-name tbq-WebServer –filters Name=resource-type,Values=AWS::EC2::Instance"
    },
    {
      "command_name": "list-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/list-groups.html",
      "command_description": "Description\n\nReturns a list of existing resource groups in your account.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:ListGroups\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: GroupIdentifiers, Groups",
      "command_synopsis": "Synopsis\n  list-groups\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nFilters, formatted as GroupFilter objects, that you want to apply to a ListGroups operation.\n\nresource-type - Filter the results to include only those of the specified resource types. Specify up to five resource types in the format AWS::*ServiceCode* ::*ResourceType* `` . For example, ``AWS::EC2::Instance , or AWS::S3::Bucket .\n\nconfiguration-type - Filter the results to include only those groups that have the specified configuration types attached. The current supported values are:\n\nAWS:EC2::CapacityReservationPool\n\nAWS:EC2::HostManagement\n\n(structure)\n\nA filter collection that you can use to restrict the results from a List operation to only those you want to include.\n\nName -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nValues -> (list)\n\nOne or more filter values. Allowed filter values vary by group filter name, and are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nName=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"resource-type\"|\"configuration-type\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroupIdentifiers -> (list)\n\nA list of GroupIdentifier objects. Each identifier is an object that contains both the Name and the GroupArn .\n\n(structure)\n\nThe unique identifiers for a resource group.\n\nGroupName -> (string)\n\nThe name of the resource group.\n\nGroupArn -> (string)\n\nThe ARN of the resource group.\n\nGroups -> (list)\n\nWarning\n\nDeprecated - don’t use this field. Use the ``GroupIdentifiers`` response field instead. *\n\n(structure)\n\nA resource group that contains AWS resources. You can assign resources to the group by associating either of the following elements with the group:\n\nResourceQuery - Use a resource query to specify a set of tag keys and values. All resources in the same AWS Region and AWS account that have those keys with the same values are included in the group. You can add a resource query when you create the group, or later by using the PutGroupConfiguration operation.\n\nGroupConfiguration - Use a service configuration to associate the group with an AWS service. The configuration specifies which resource types can be included in the group.\n\nGroupArn -> (string)\n\nThe ARN of the resource group.\n\nName -> (string)\n\nThe name of the resource group.\n\nDescription -> (string)\n\nThe description of the resource group.\n\nNextToken -> (string)\n\nIf present, indicates that more output is available than is included in the current response. Use this value in the NextToken request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the NextToken response element comes back as null .",
      "command_examples": "Examples\n\nTo list the available resource groups\n\nThe following list-groups example displays a list of all of the resource groups.\n\naws resource-groups list-groups\n\n\nOutput:\n\n{\n    \"GroupIdentifiers\": [\n        {\n            \"GroupName\": \"tbq-WebServer\",\n            \"GroupArn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/tbq-WebServer3\"\n        },\n        {\n            \"GroupName\": \"cbq-CFNStackQuery\",\n            \"GroupArn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/cbq-CFNStackQuery\"\n        }\n    ],\n    \"Groups\": [\n        {\n            \"GroupArn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/tbq-WebServer\",\n            \"Name\": \"tbq-WebServer\"\n        },\n        {\n            \"GroupArn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/cbq-CFNStackQuery\",\n            \"Name\": \"cbq-CFNStackQuery\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "put-group-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/put-group-configuration.html",
      "command_description": "Description\n\nAttaches a service configuration to the specified group. This occurs asynchronously, and can take time to complete. You can use GetGroupConfiguration to check the status of the update.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:PutGroupConfiguration\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-group-configuration\n[--group <value>]\n[--configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--group <value>]",
        "[--configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group (string)\n\nThe name or ARN of the resource group with the configuration that you want to update.\n\n--configuration (list)\n\nThe new configuration to associate with the specified group. A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. A configuration is an array of GroupConfigurationItem elements.\n\nFor information about the syntax of a service configuration, see Service configurations for resource groups .\n\nNote\n\nA resource group can contain either a Configuration or a ResourceQuery , but not both.\n\n(structure)\n\nAn item in a group configuration. A group service configuration can have one or more items. For details about group service configuration syntax, see Service configurations for resource groups .\n\nType -> (string)\n\nSpecifies the type of group configuration item. Each item must have a unique value for type . For the list of types that you can specify for a configuration item, see Supported resource types and parameters .\n\nParameters -> (list)\n\nA collection of parameters for this group configuration item. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\n(structure)\n\nA parameter for a group configuration item. For details about group service configuration syntax, see Service configurations for resource groups .\n\nName -> (string)\n\nThe name of the group configuration parameter. For the list of parameters that you can use with each configuration item type, see Supported resource types and parameters .\n\nValues -> (list)\n\nThe value or values to be used for the specified parameter. For the list of values you can use with each parameter, see Supported resource types and parameters .\n\n(string)\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"string\",\n    \"Parameters\": [\n      {\n        \"Name\": \"string\",\n        \"Values\": [\"string\", ...]\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo attach a service configuration to a resource group\n\nExample 1: The following put-group-configuration example specifies that the resource group is to contain only Amazon EC2 capacity reservations for instances in the C5 or M5 families.\n\naws resource-groups put-group-configuration \\\n    --group MyTestGroup \\\n    --configuration file://config.json\n\n\nContents of config.json:\n\n[\n    {\n        \"Type\": \"AWS::EC2::HostManagement\",\n        \"Parameters\": [\n            {\n                \"Name\": \"allowed-host-families\",\n                \"Values\": [ \"c5\", \"m5\" ]\n            },\n                {\n                    \"Name\": \"any-host-based-license-configuration\",\n                    \"Values\": [ \"true\" ]\n                }\n        ]\n    },\n    {\n        \"Type\": \"AWS::ResourceGroups::Generic\",\n        \"Parameters\": [\n            {\n                \"Name\": \"allowed-resource-types\",\n                \"Values\": [ \"AWS::EC2::Host\" ]\n            },\n            {\n                \"Name\": \"deletion-protection\",\n                \"Values\": [ \"UNLESS_EMPTY\" ]\n            }\n        ]\n    }\n]\n\n\nThis command produces no output if successful.\n\nFor more information, see Service configurations for resource groups in the Resource Groups API Reference Guide."
    },
    {
      "command_name": "search-resources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/search-resources.html",
      "command_description": "Description\n\nReturns a list of AWS resource identifiers that matches the specified query. The query uses the same format as a resource query in a CreateGroup or UpdateGroupQuery operation.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:SearchResources\n\ncloudformation:DescribeStacks\n\ncloudformation:ListStackResources\n\ntag:GetResources\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nsearch-resources is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResourceIdentifiers",
      "command_synopsis": "Synopsis\n  search-resources\n--resource-query <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-query <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-query (structure)\n\nThe search query, using the same formats that are supported for resource group definition. For more information, see CreateGroup .\n\nType -> (string)\n\nThe type of the query. You can use the following values:\n\n*CLOUDFORMATION_STACK_1_0: * Specifies that the Query contains an ARN for a CloudFormation stack.\n\n``TAG_FILTERS_1_0:`` * Specifies that the ``Query`` parameter contains a JSON string that represents a collection of simple tag filters for resource types and tags. The JSON string uses a syntax similar to the `` `GetResources <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html>`__ `` operation, but uses only the `` `ResourceTypeFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters>`__ `` and `` `TagFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters>`__ `` fields. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches *any of the specified values. For example, consider the following sample query for resources that have two tags, Stage and Version , with two values each: [{\"Stage\":[\"Test\",\"Deploy\"]},{\"Version\":[\"1\",\"2\"]}] The results of this query could include the following.\n\nAn EC2 instance that has the following two tags: {\"Stage\":\"Deploy\"} , and {\"Version\":\"2\"}\n\nAn S3 bucket that has the following two tags: {\"Stage\":\"Test\"} , and {\"Version\":\"1\"}\n\nThe query would not include the following items in the results, however.\n\nAn EC2 instance that has only the following tag: {\"Stage\":\"Deploy\"} . The instance does not have all of the tag keys specified in the filter, so it is excluded from the results.\n\nAn RDS database that has the following two tags: {\"Stage\":\"Archived\"} and {\"Version\":\"4\"} The database has all of the tag keys, but none of those keys has an associated value that matches at least one of the specified values in the filter.\n\nQuery -> (string)\n\nThe query that defines a group or a search.\n\nShorthand Syntax:\n\nType=string,Query=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"TAG_FILTERS_1_0\"|\"CLOUDFORMATION_STACK_1_0\",\n  \"Query\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceIdentifiers -> (list)\n\nThe ARNs and resource types of resources that are members of the group that you specified.\n\n(structure)\n\nA structure that contains the ARN of a resource and its resource type.\n\nResourceArn -> (string)\n\nThe ARN of a resource.\n\nResourceType -> (string)\n\nThe resource type of a resource, such as AWS::EC2::Instance .\n\nNextToken -> (string)\n\nIf present, indicates that more output is available than is included in the current response. Use this value in the NextToken request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the NextToken response element comes back as null .\n\nQueryErrors -> (list)\n\nA list of QueryError objects. Each error is an object that contains ErrorCode and Message structures. Possible values for ErrorCode are CLOUDFORMATION_STACK_INACTIVE and CLOUDFORMATION_STACK_NOT_EXISTING .\n\n(structure)\n\nA two-part error structure that can occur in ListGroupResources or SearchResources operations on CloudFormation stack-based queries. The error occurs if the CloudFormation stack on which the query is based either does not exist, or has a status that renders the stack inactive. A QueryError occurrence does not necessarily mean that AWS Resource Groups could not complete the operation, but the resulting group might have no member resources.\n\nErrorCode -> (string)\n\nPossible values are CLOUDFORMATION_STACK_INACTIVE and CLOUDFORMATION_STACK_NOT_EXISTING .\n\nMessage -> (string)\n\nA message that explains the ErrorCode value. Messages might state that the specified CloudFormation stack does not exist (or no longer exists). For CLOUDFORMATION_STACK_INACTIVE , the message typically states that the CloudFormation stack has a status that is not (or no longer) active, such as CREATE_FAILED .",
      "command_examples": "Examples\n\nTo find resources that match a query\n\nThe following search-resources example retrieves a list of all AWS resources that match the specified query.\n\naws resource-groups search-resources \\\n    --resource-query file://query.json\n\n\nContents of query.json:\n\n{\n    \"Type\": \"TAG_FILTERS_1_0\",\n    \"Query\": \"{\\\"ResourceTypeFilters\\\":[\\\"AWS::EC2::Instance\\\"],\\\"TagFilters\\\":[{\\\"Key\\\":\\\"Patch Group\\\", \\\"Values\\\":[\\\"Dev\\\"]}]}\"\n}\n\n\nOutput:\n\n{\n    \"ResourceIdentifiers\": [\n        {\n            \"ResourceArn\": \"arn:aws:ec2:us-west-2:123456789012:instance/i-01a23bc45d67890ef\",\n            \"ResourceType\": \"AWS::EC2::Instance\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "tag",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/tag.html",
      "command_description": "Description\n\nAdds tags to a resource group with the specified ARN. Existing tags on a resource group are not changed if they are not specified in the request parameters.\n\nWarning\n\nDo not store personally identifiable information (PII) or other confidential or sensitive information in tags. We use tags to provide you with billing and administration services. Tags are not intended to be used for private or sensitive data.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:Tag\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag\n--arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the resource group to which to add tags.\n\n--tags (map)\n\nThe tags to add to the specified resource group. A tag is a string-to-string map of key-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the tagged resource.\n\nTags -> (map)\n\nThe tags that have been added to the specified resource group.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo attach a tag to a resource group\n\nThe following tag example attaches the specified tag key and value pairs to the specified resource group (the group itself, not its members).\n\naws resource-groups tag \\\n    --tags QueryType=tags,QueryResources=ec2-instances \\\n    --arn arn:aws:resource-groups:us-west-2:128716708097:group/tbq-WebServer\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:resource-groups:us-west-2:128716708097:group/tbq-WebServer\",\n    \"Tags\": {\n        \"QueryType\": \"tags\",\n        \"QueryResources\": \"ec2-instances\"\n    }\n}\n\n\nFor more information, see Manage tags in the AWS Resource Groups User Guide."
    },
    {
      "command_name": "ungroup-resources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/ungroup-resources.html",
      "command_description": "Description\n\nRemoves the specified resources from the specified group.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:UngroupResources\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  ungroup-resources\n--group <value>\n--resource-arns <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group <value>",
        "--resource-arns <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group (string)\n\nThe name or the ARN of the resource group from which to remove the resources.\n\n--resource-arns (list)\n\nThe ARNs of the resources to be removed from the group.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSucceeded -> (list)\n\nA list of resources that were successfully removed from the group by this operation.\n\n(string)\n\nFailed -> (list)\n\nA list of any resources that failed to be removed from the group by this operation.\n\n(structure)\n\nA resource that failed to be added to or removed from a group.\n\nResourceArn -> (string)\n\nThe ARN of the resource that failed to be added or removed.\n\nErrorMessage -> (string)\n\nThe error message text associated with the failure.\n\nErrorCode -> (string)\n\nThe error code associated with the failure.\n\nPending -> (list)\n\nA list of any resources that are still in the process of being removed from the group by this operation. These pending removals continue asynchronously. You can check the status of pending removals by using the `` ListGroupResources `` operation. After the resource is successfully removed, it no longer appears in the response.\n\n(structure)\n\nA structure that identifies a resource that is currently pending addition to the group as a member. Adding a resource to a resource group happens asynchronously as a background task and this one isn’t completed yet.\n\nResourceArn -> (string)\n\nThe Amazon resource name (ARN) of the resource that’s in a pending state."
    },
    {
      "command_name": "untag",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/untag.html",
      "command_description": "Description\n\nDeletes tags from a specified resource group.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:Untag\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag\n--arn <value>\n--keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "--keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the resource group from which to remove tags. The command removed both the specified keys and any values associated with those keys.\n\n--keys (list)\n\nThe keys of the tags to be removed.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the resource group from which tags have been removed.\n\nKeys -> (list)\n\nThe keys of the tags that were removed.\n\n(string)",
      "command_examples": "Examples\n\nTo remove tags from a resource group\n\nThe following untags example removes any tag with the specified key from the resource group itself, not its members.\n\naws resource-groups untag \\\n    --arn arn:aws:resource-groups:us-west-2:123456789012:group/tbq-WebServer \\\n    --keys QueryType\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/tbq-WebServer\",\n    \"Keys\": [\n        \"QueryType\"\n    ]\n}\n\n\nFor more information, see Manage tags in the AWS Resource Groups User Guide."
    },
    {
      "command_name": "update-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/update-group.html",
      "command_description": "Description\n\nUpdates the description for an existing group. You cannot update the name of a resource group.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:UpdateGroup\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-group\n[--group-name <value>]\n[--group <value>]\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--group-name <value>]",
        "[--group <value>]",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nDon’t use this parameter. Use Group instead.\n\n--group (string)\n\nThe name or the ARN of the resource group to modify.\n\n--description (string)\n\nThe new description that you want to update the resource group with. Descriptions can contain letters, numbers, hyphens, underscores, periods, and spaces.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroup -> (structure)\n\nThe update description of the resource group.\n\nGroupArn -> (string)\n\nThe ARN of the resource group.\n\nName -> (string)\n\nThe name of the resource group.\n\nDescription -> (string)\n\nThe description of the resource group.",
      "command_examples": "Examples\n\nTo update the description for a resource group\n\nThe following update-group example updates the description for the specified resource group.\n\naws resource-groups update-group \\\n    --group-name tbq-WebServer \\\n    --description \"Resource group for all web server resources.\"\n\n\nOutput:\n\n{\n    \"Group\": {\n        \"GroupArn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/tbq-WebServer\",\n        \"Name\": \"tbq-WebServer\"\n        \"Description\": \"Resource group for all web server resources.\"\n    }\n}\n\n\nFor more information, see Update Groups in the AWS Resource Groups User Guide."
    },
    {
      "command_name": "update-group-query",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resource-groups/update-group-query.html",
      "command_description": "Description\n\nUpdates the resource query of a group. For more information about resource queries, see Create a tag-based group in Resource Groups .\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nresource-groups:UpdateGroupQuery\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-group-query\n[--group-name <value>]\n[--group <value>]\n--resource-query <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--group-name <value>]",
        "[--group <value>]",
        "--resource-query <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-name (string)\n\nDon’t use this parameter. Use Group instead.\n\n--group (string)\n\nThe name or the ARN of the resource group to query.\n\n--resource-query (structure)\n\nThe resource query to determine which AWS resources are members of this resource group.\n\nNote\n\nA resource group can contain either a Configuration or a ResourceQuery , but not both.\n\nType -> (string)\n\nThe type of the query. You can use the following values:\n\n*CLOUDFORMATION_STACK_1_0: * Specifies that the Query contains an ARN for a CloudFormation stack.\n\n``TAG_FILTERS_1_0:`` * Specifies that the ``Query`` parameter contains a JSON string that represents a collection of simple tag filters for resource types and tags. The JSON string uses a syntax similar to the `` `GetResources <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html>`__ `` operation, but uses only the `` `ResourceTypeFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters>`__ `` and `` `TagFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters>`__ `` fields. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches *any of the specified values. For example, consider the following sample query for resources that have two tags, Stage and Version , with two values each: [{\"Stage\":[\"Test\",\"Deploy\"]},{\"Version\":[\"1\",\"2\"]}] The results of this query could include the following.\n\nAn EC2 instance that has the following two tags: {\"Stage\":\"Deploy\"} , and {\"Version\":\"2\"}\n\nAn S3 bucket that has the following two tags: {\"Stage\":\"Test\"} , and {\"Version\":\"1\"}\n\nThe query would not include the following items in the results, however.\n\nAn EC2 instance that has only the following tag: {\"Stage\":\"Deploy\"} . The instance does not have all of the tag keys specified in the filter, so it is excluded from the results.\n\nAn RDS database that has the following two tags: {\"Stage\":\"Archived\"} and {\"Version\":\"4\"} The database has all of the tag keys, but none of those keys has an associated value that matches at least one of the specified values in the filter.\n\nQuery -> (string)\n\nThe query that defines a group or a search.\n\nShorthand Syntax:\n\nType=string,Query=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"TAG_FILTERS_1_0\"|\"CLOUDFORMATION_STACK_1_0\",\n  \"Query\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroupQuery -> (structure)\n\nThe updated resource query associated with the resource group after the update.\n\nGroupName -> (string)\n\nThe name of the resource group that is associated with the specified resource query.\n\nResourceQuery -> (structure)\n\nThe resource query that determines which AWS resources are members of the associated resource group.\n\nType -> (string)\n\nThe type of the query. You can use the following values:\n\n*CLOUDFORMATION_STACK_1_0: * Specifies that the Query contains an ARN for a CloudFormation stack.\n\n``TAG_FILTERS_1_0:`` * Specifies that the ``Query`` parameter contains a JSON string that represents a collection of simple tag filters for resource types and tags. The JSON string uses a syntax similar to the `` `GetResources <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html>`__ `` operation, but uses only the `` `ResourceTypeFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters>`__ `` and `` `TagFilters <https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters>`__ `` fields. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches *any of the specified values. For example, consider the following sample query for resources that have two tags, Stage and Version , with two values each: [{\"Stage\":[\"Test\",\"Deploy\"]},{\"Version\":[\"1\",\"2\"]}] The results of this query could include the following.\n\nAn EC2 instance that has the following two tags: {\"Stage\":\"Deploy\"} , and {\"Version\":\"2\"}\n\nAn S3 bucket that has the following two tags: {\"Stage\":\"Test\"} , and {\"Version\":\"1\"}\n\nThe query would not include the following items in the results, however.\n\nAn EC2 instance that has only the following tag: {\"Stage\":\"Deploy\"} . The instance does not have all of the tag keys specified in the filter, so it is excluded from the results.\n\nAn RDS database that has the following two tags: {\"Stage\":\"Archived\"} and {\"Version\":\"4\"} The database has all of the tag keys, but none of those keys has an associated value that matches at least one of the specified values in the filter.\n\nQuery -> (string)\n\nThe query that defines a group or a search.",
      "command_examples": "Examples\n\nExample 1: To update the query for a tag-based resource group\n\nThe following update-group-query example updates the query attached to the specified tag-based resource group.\n\naws resource-groups update-group-query \\\n    --group-name tbq-WebServer \\\n    --resource-query '{\"Type\":\"TAG_FILTERS_1_0\", \"Query\":\"{\\\"ResourceTypeFilters\\\":[\\\"AWS::EC2::Instance\\\"],\\\"TagFilters\\\":[{\\\"Key\\\":\\\"Name\\\", \\\"Values\\\":[\\\"WebServers\\\"]}]}\"}'\n\n\nOutput:\n\n{\n    \"Group\": {\n        \"GroupArn\": \"arn:aws:resource-groups:us-east-2:123456789012:group/tbq-WebServer\",\n        \"Name\": \"tbq-WebServer\"\n    },\n    \"ResourceQuery\": {\n        \"Type\": \"TAG_FILTERS_1_0\",\n        \"Query\": \"{\\\"ResourceTypeFilters\\\":[\\\"AWS::EC2::Instance\\\"],\\\"TagFilters\\\":[{\\\"Key\\\":\\\"Name\\\", \\\"Values\\\":[\\\"WebServers\\\"]}]}\"\n    }\n}\n\n\nFor more information, see Update Groups in the AWS Resource Groups User Guide.\n\nExample 2: To update the query for a CloudFormation stack-based resource group\n\nThe following update-group-query example updates the query attached to the specified AWS CloudFormation stack-based resource group.\n\naws resource-groups update-group-query \\\n    --group-name cbq-CFNstackgroup \\\n    --resource-query '{\"Type\": \"CLOUDFORMATION_STACK_1_0\", \"Query\": \"{\\\"ResourceTypeFilters\\\":[\\\"AWS::AllSupported\\\"],\\\"StackIdentifier\\\":\\\"arn:aws:cloudformation:us-west-2:123456789012:stack/MyCFNStack/1415z9z0-z39z-11z8-97z5-500z212zz6fz\\\"}\"}'\n\n\nOutput:\n\n{\n    \"Group\": {\n        \"GroupArn\": \"arn:aws:resource-groups:us-west-2:123456789012:group/cbq-CFNstackgroup\",\n        \"Name\": \"cbq-CFNstackgroup\"\n    },\n    \"ResourceQuery\": {\n        \"Type\": \"CLOUDFORMATION_STACK_1_0\",\n        \"Query\": \"{\\\"ResourceTypeFilters\\\":[\\\"AWS::AllSupported\\\"],\\\"StackIdentifier\\\":\\\"arn:aws:cloudformation:us-west-2:123456789012:stack/MyCFNStack/1415z9z0-z39z-11z8-97z5-500z212zz6fz\\\"}\"\n    }\n}\n\n\nFor more information, see Update Groups in the AWS Resource Groups User Guide."
    }
  ],
  "service_description": "Description\n\nAWS Resource Groups lets you organize AWS resources such as Amazon EC2 instances, Amazon Relational Database Service databases, and Amazon S3 buckets into groups using criteria that you define as tags. A resource group is a collection of resources that match the resource types specified in a query, and share one or more tags or portions of tags. You can create a group of resources based on their roles in your cloud infrastructure, lifecycle stages, regions, application layers, or virtually any criteria. Resource Groups enable you to automate management tasks, such as those in AWS Systems Manager Automation documents, on tag-related resources in AWS Systems Manager. Groups of tagged resources also let you quickly view a custom console in AWS Systems Manager that shows AWS Config compliance and other monitoring data about member resources.\n\nTo create a resource group, build a resource query, and specify tags that identify the criteria that members of the group have in common. Tags are key-value pairs.\n\nFor more information about Resource Groups, see the AWS Resource Groups User Guide .\n\nAWS Resource Groups uses a REST-compliant API that you can use to perform the following types of operations.\n\nCreate, Read, Update, and Delete (CRUD) operations on resource groups and resource query entities\n\nApplying, editing, and removing tags from resource groups\n\nResolving resource group member ARNs so they can be returned as search results\n\nGetting data about resources that are members of a group\n\nSearching AWS resources based on a resource query"
}