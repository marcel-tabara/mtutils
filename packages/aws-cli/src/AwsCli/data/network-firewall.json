{
  "service_name": "network-firewall",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/index.html",
  "service_commands": [
    {
      "command_name": "associate-firewall-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/associate-firewall-policy.html",
      "command_description": "Description\n\nAssociates a FirewallPolicy to a Firewall .\n\nA firewall policy defines how to monitor and manage your VPC network traffic, using a collection of inspection rule groups and other settings. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-firewall-policy\n[--update-token <value>]\n[--firewall-arn <value>]\n[--firewall-name <value>]\n--firewall-policy-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--update-token <value>]",
        "[--firewall-arn <value>]",
        "[--firewall-name <value>]",
        "--firewall-policy-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--update-token (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token.\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nFirewallPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nUpdateToken -> (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
    },
    {
      "command_name": "associate-subnets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/associate-subnets.html",
      "command_description": "Description\n\nAssociates the specified subnets in the Amazon VPC to the firewall. You can specify one subnet for each of the Availability Zones that the VPC spans.\n\nThis request creates an AWS Network Firewall firewall endpoint in each of the subnets. To enable the firewall’s protections, you must also modify the VPC’s route tables for each subnet’s Availability Zone, to redirect the traffic that’s coming into and going out of the zone through the firewall endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-subnets\n[--update-token <value>]\n[--firewall-arn <value>]\n[--firewall-name <value>]\n--subnet-mappings <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--update-token <value>]",
        "[--firewall-arn <value>]",
        "[--firewall-name <value>]",
        "--subnet-mappings <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--update-token (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token.\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--subnet-mappings (list)\n\nThe IDs of the subnets that you want to associate with the firewall.\n\n(structure)\n\nThe ID for a subnet that you want to associate with the firewall. This is used with CreateFirewall and AssociateSubnets . AWS Network Firewall creates an instance of the associated firewall in each subnet that you specify, to filter traffic in the subnet’s Availability Zone.\n\nSubnetId -> (string)\n\nThe unique identifier for the subnet.\n\nShorthand Syntax:\n\nSubnetId=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"SubnetId\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nSubnetMappings -> (list)\n\nThe IDs of the subnets that are associated with the firewall.\n\n(structure)\n\nThe ID for a subnet that you want to associate with the firewall. This is used with CreateFirewall and AssociateSubnets . AWS Network Firewall creates an instance of the associated firewall in each subnet that you specify, to filter traffic in the subnet’s Availability Zone.\n\nSubnetId -> (string)\n\nThe unique identifier for the subnet.\n\nUpdateToken -> (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
    },
    {
      "command_name": "create-firewall",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/create-firewall.html",
      "command_description": "Description\n\nCreates an AWS Network Firewall Firewall and accompanying FirewallStatus for a VPC.\n\nThe firewall defines the configuration settings for an AWS Network Firewall firewall. The settings that you can define at creation include the firewall policy, the subnets in your VPC to use for the firewall endpoints, and any tags that are attached to the firewall AWS resource.\n\nAfter you create a firewall, you can provide additional settings, like the logging configuration.\n\nTo update the settings for a firewall, you use the operations that apply to the settings themselves, for example UpdateLoggingConfiguration , AssociateSubnets , and UpdateFirewallDeleteProtection .\n\nTo manage a firewall’s tags, use the standard AWS resource tagging operations, ListTagsForResource , TagResource , and UntagResource .\n\nTo retrieve information about firewalls, use ListFirewalls and DescribeFirewall .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-firewall\n--firewall-name <value>\n--firewall-policy-arn <value>\n--vpc-id <value>\n--subnet-mappings <value>\n[--delete-protection | --no-delete-protection]\n[--subnet-change-protection | --no-subnet-change-protection]\n[--firewall-policy-change-protection | --no-firewall-policy-change-protection]\n[--description <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-name <value>",
        "--firewall-policy-arn <value>",
        "--vpc-id <value>",
        "--subnet-mappings <value>",
        "[--delete-protection | --no-delete-protection]",
        "[--subnet-change-protection | --no-subnet-change-protection]",
        "[--firewall-policy-change-protection | --no-firewall-policy-change-protection]",
        "[--description <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\n--firewall-policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the FirewallPolicy that you want to use for the firewall.\n\n--vpc-id (string)\n\nThe unique identifier of the VPC where Network Firewall should create the firewall.\n\nYou can’t change this setting after you create the firewall.\n\n--subnet-mappings (list)\n\nThe public subnets to use for your Network Firewall firewalls. Each subnet must belong to a different Availability Zone in the VPC. Network Firewall creates a firewall endpoint in each subnet.\n\n(structure)\n\nThe ID for a subnet that you want to associate with the firewall. This is used with CreateFirewall and AssociateSubnets . AWS Network Firewall creates an instance of the associated firewall in each subnet that you specify, to filter traffic in the subnet’s Availability Zone.\n\nSubnetId -> (string)\n\nThe unique identifier for the subnet.\n\nShorthand Syntax:\n\nSubnetId=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"SubnetId\": \"string\"\n  }\n  ...\n]\n\n\n--delete-protection | --no-delete-protection (boolean)\n\nA flag indicating whether it is possible to delete the firewall. A setting of TRUE indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to TRUE .\n\n--subnet-change-protection | --no-subnet-change-protection (boolean)\n\nA setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE .\n\n--firewall-policy-change-protection | --no-firewall-policy-change-protection (boolean)\n\nA setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE .\n\n--description (string)\n\nA description of the firewall.\n\n--tags (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewall -> (structure)\n\nThe configuration settings for the firewall. These settings include the firewall policy and the subnets in your VPC to use for the firewall endpoints.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nThe relationship of firewall to firewall policy is many to one. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.\n\nVpcId -> (string)\n\nThe unique identifier of the VPC where the firewall is in use.\n\nSubnetMappings -> (list)\n\nThe public subnets that Network Firewall is using for the firewall. Each subnet must belong to a different Availability Zone.\n\n(structure)\n\nThe ID for a subnet that you want to associate with the firewall. This is used with CreateFirewall and AssociateSubnets . AWS Network Firewall creates an instance of the associated firewall in each subnet that you specify, to filter traffic in the subnet’s Availability Zone.\n\nSubnetId -> (string)\n\nThe unique identifier for the subnet.\n\nDeleteProtection -> (boolean)\n\nA flag indicating whether it is possible to delete the firewall. A setting of TRUE indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to TRUE .\n\nSubnetChangeProtection -> (boolean)\n\nA setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE .\n\nFirewallPolicyChangeProtection -> (boolean)\n\nA setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE .\n\nDescription -> (string)\n\nA description of the firewall.\n\nFirewallId -> (string)\n\nThe unique identifier for the firewall.\n\nTags -> (list)\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nFirewallStatus -> (structure)\n\nDetailed information about the current status of a Firewall . You can retrieve this for a firewall by calling DescribeFirewall and providing the firewall name and ARN.\n\nStatus -> (string)\n\nThe readiness of the configured firewall to handle network traffic across all of the Availability Zones where you’ve configured it. This setting is READY only when the ConfigurationSyncStateSummary value is IN_SYNC and the Attachment Status values for all of the configured subnets are READY .\n\nConfigurationSyncStateSummary -> (string)\n\nThe configuration sync state for the firewall. This summarizes the sync states reported in the Config settings for all of the Availability Zones where you have configured the firewall.\n\nWhen you create a firewall or update its configuration, for example by adding a rule group to its firewall policy, Network Firewall distributes the configuration changes to all zones where the firewall is in use. This summary indicates whether the configuration changes have been applied everywhere.\n\nThis status must be IN_SYNC for the firewall to be ready for use, but it doesn’t indicate that the firewall is ready. The Status setting indicates firewall readiness.\n\nSyncStates -> (map)\n\nThe subnets that you’ve configured for use by the Network Firewall firewall. This contains one array element per Availability Zone where you’ve configured a subnet. These objects provide details of the information that is summarized in the ConfigurationSyncStateSummary and Status , broken down by zone and configuration object.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe status of the firewall endpoint and firewall policy configuration for a single VPC subnet.\n\nFor each VPC subnet that you associate with a firewall, AWS Network Firewall does the following:\n\nInstantiates a firewall endpoint in the subnet, ready to take traffic.\n\nConfigures the endpoint with the current firewall policy settings, to provide the filtering behavior for the endpoint.\n\nWhen you update a firewall, for example to add a subnet association or change a rule group in the firewall policy, the affected sync states reflect out-of-sync or not ready status until the changes are complete.\n\nAttachment -> (structure)\n\nThe attachment status of the firewall’s association with a single VPC subnet. For each configured subnet, Network Firewall creates the attachment by instantiating the firewall endpoint in the subnet so that it’s ready to take traffic. This is part of the FirewallStatus .\n\nSubnetId -> (string)\n\nThe unique identifier of the subnet that you’ve specified to be used for a firewall endpoint.\n\nEndpointId -> (string)\n\nThe identifier of the firewall endpoint that Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.\n\nStatus -> (string)\n\nThe current status of the firewall endpoint in the subnet. This value reflects both the instantiation of the endpoint in the VPC subnet and the sync states that are reported in the Config settings. When this value is READY , the endpoint is available and configured properly to handle network traffic. When the endpoint isn’t available for traffic, this value will reflect its state, for example CREATING , DELETING , or FAILED .\n\nConfig -> (map)\n\nThe configuration status of the firewall endpoint in a single VPC subnet. Network Firewall provides each endpoint with the rules that are configured in the firewall policy. Each time you add a subnet or modify the associated firewall policy, Network Firewall synchronizes the rules in the endpoint, so it can properly filter network traffic. This is part of the FirewallStatus .\n\nkey -> (string)\n\nvalue -> (structure)\n\nProvides configuration status for a single policy or rule group that is used for a firewall endpoint. Network Firewall provides each endpoint with the rules that are configured in the firewall policy. Each time you add a subnet or modify the associated firewall policy, Network Firewall synchronizes the rules in the endpoint, so it can properly filter network traffic. This is part of a SyncState for a firewall.\n\nSyncStatus -> (string)\n\nIndicates whether this object is in sync with the version indicated in the update token.\n\nUpdateToken -> (string)\n\nThe current version of the object that is either in sync or pending synchronization."
    },
    {
      "command_name": "create-firewall-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/create-firewall-policy.html",
      "command_description": "Description\n\nCreates the firewall policy for the firewall according to the specifications.\n\nAn AWS Network Firewall firewall policy defines the behavior of a firewall, in a collection of stateless and stateful rule groups and other settings. You can use one firewall policy for multiple firewalls.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-firewall-policy\n--firewall-policy-name <value>\n--firewall-policy <value>\n[--description <value>]\n[--tags <value>]\n[--dry-run | --no-dry-run]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--firewall-policy-name <value>",
        "--firewall-policy <value>",
        "[--description <value>]",
        "[--tags <value>]",
        "[--dry-run | --no-dry-run]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-policy-name (string)\n\nThe descriptive name of the firewall policy. You can’t change the name of a firewall policy after you create it.\n\n--firewall-policy (structure)\n\nThe rule groups and policy actions to use in the firewall policy.\n\nStatelessRuleGroupReferences -> (list)\n\nReferences to the stateless rule groups that are used in the policy. These define the matching criteria in stateless rules.\n\n(structure)\n\nIdentifier for a single stateless rule group, used in a firewall policy to refer to the rule group.\n\nResourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the stateless rule group.\n\nPriority -> (integer)\n\nAn integer setting that indicates the order in which to run the stateless rule groups in a single FirewallPolicy . Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting. You must ensure that the priority settings are unique within each policy.\n\nStatelessDefaultActions -> (list)\n\nThe actions to take on a packet if it doesn’t match any of the stateless rules in the policy. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe .\n\nYou must specify one of the standard actions: aws:pass , aws:drop , or aws:forward_to_sfe . In addition, you can specify custom actions that are compatible with your standard section choice.\n\nFor example, you could specify [\"aws:pass\"] or you could specify [\"aws:pass\", “customActionName”] . For information about compatibility, see the custom action descriptions under CustomAction .\n\n(string)\n\nStatelessFragmentDefaultActions -> (list)\n\nThe actions to take on a fragmented UDP packet if it doesn’t match any of the stateless rules in the policy. Network Firewall only manages UDP packet fragments and silently drops packet fragments for other protocols. If you want non-matching fragmented UDP packets to be forwarded for stateful inspection, specify aws:forward_to_sfe .\n\nYou must specify one of the standard actions: aws:pass , aws:drop , or aws:forward_to_sfe . In addition, you can specify custom actions that are compatible with your standard section choice.\n\nFor example, you could specify [\"aws:pass\"] or you could specify [\"aws:pass\", “customActionName”] . For information about compatibility, see the custom action descriptions under CustomAction .\n\n(string)\n\nStatelessCustomActions -> (list)\n\nThe custom action definitions that are available for use in the firewall policy’s StatelessDefaultActions setting. You name each custom action that you define, and then you can use it by name in your default actions specifications.\n\n(structure)\n\nAn optional, non-standard action to use for stateless packet handling. You can define this in addition to the standard action that you must specify.\n\nYou define and name the custom actions that you want to be able to use, and then you reference them by name in your actions settings.\n\nYou can use custom actions in the following places:\n\nIn a rule group’s StatelessRulesAndCustomActions specification. The custom actions are available for use by name inside the StatelessRulesAndCustomActions where you define them. You can use them for your stateless rule actions to specify what to do with a packet that matches the rule’s match attributes.\n\nIn a FirewallPolicy specification, in StatelessCustomActions . The custom actions are available for use inside the policy where you define them. You can use them for the policy’s default stateless actions settings to specify what to do with packets that don’t match any of the policy’s stateless rules.\n\nActionName -> (string)\n\nThe descriptive name of the custom action. You can’t change the name of a custom action after you create it.\n\nActionDefinition -> (structure)\n\nThe custom action associated with the action name.\n\nPublishMetricAction -> (structure)\n\nStateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. This setting defines a CloudWatch dimension value to be published.\n\nYou can pair this custom action with any of the standard stateless rule actions. For example, you could pair this in a rule action with the standard action that forwards the packet for stateful inspection. Then, when a packet matches the rule, Network Firewall publishes metrics for the packet and forwards it.\n\nDimensions -> (list)\n\n(structure)\n\nThe value to use in an Amazon CloudWatch custom metric dimension. This is used in the PublishMetrics CustomAction . A CloudWatch custom metric dimension is a name/value pair that’s part of the identity of a metric.\n\nAWS Network Firewall sets the dimension name to CustomAction and you provide the dimension value.\n\nFor more information about CloudWatch custom metric dimensions, see Publishing Custom Metrics in the Amazon CloudWatch User Guide .\n\nValue -> (string)\n\nThe value to use in the custom metric dimension.\n\nStatefulRuleGroupReferences -> (list)\n\nReferences to the stateful rule groups that are used in the policy. These define the inspection criteria in stateful rules.\n\n(structure)\n\nIdentifier for a single stateful rule group, used in a firewall policy to refer to a rule group.\n\nResourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the stateful rule group.\n\nPriority -> (integer)\n\nAn integer setting that indicates the order in which to run the stateful rule groups in a single FirewallPolicy . This setting only applies to firewall policies that specify the STRICT_ORDER rule order in the stateful engine options settings.\n\nNetwork Firewall evalutes each stateful rule group against a packet starting with the group that has the lowest priority setting. You must ensure that the priority settings are unique within each policy.\n\nYou can change the priority settings of your rule groups at any time. To make it easier to insert rule groups later, number them so there’s a wide range in between, for example use 100, 200, and so on.\n\nStatefulDefaultActions -> (list)\n\nThe default actions to take on a packet that doesn’t match any stateful rules.\n\n(string)\n\nStatefulEngineOptions -> (structure)\n\nAdditional options governing how Network Firewall handles stateful rules. The stateful rule groups that you use in your policy must have stateful rule options settings that are compatible with these settings.\n\nRuleOrder -> (string)\n\nIndicates how to manage the order of stateful rule evaluation for the policy. By default, Network Firewall leaves the rule evaluation order up to the Suricata rule processing engine. If you set this to STRICT_ORDER , your rules are evaluated in the exact order that you provide them in the policy. With strict ordering, the rule groups are evaluated by order of priority, starting from the lowest number, and the rules in each rule group are processed in the order that they’re defined.\n\nJSON Syntax:\n\n{\n  \"StatelessRuleGroupReferences\": [\n    {\n      \"ResourceArn\": \"string\",\n      \"Priority\": integer\n    }\n    ...\n  ],\n  \"StatelessDefaultActions\": [\"string\", ...],\n  \"StatelessFragmentDefaultActions\": [\"string\", ...],\n  \"StatelessCustomActions\": [\n    {\n      \"ActionName\": \"string\",\n      \"ActionDefinition\": {\n        \"PublishMetricAction\": {\n          \"Dimensions\": [\n            {\n              \"Value\": \"string\"\n            }\n            ...\n          ]\n        }\n      }\n    }\n    ...\n  ],\n  \"StatefulRuleGroupReferences\": [\n    {\n      \"ResourceArn\": \"string\",\n      \"Priority\": integer\n    }\n    ...\n  ],\n  \"StatefulDefaultActions\": [\"string\", ...],\n  \"StatefulEngineOptions\": {\n    \"RuleOrder\": \"DEFAULT_ACTION_ORDER\"|\"STRICT_ORDER\"\n  }\n}\n\n\n--description (string)\n\nA description of the firewall policy.\n\n--tags (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--dry-run | --no-dry-run (boolean)\n\nIndicates whether you want Network Firewall to just check the validity of the request, rather than run the request.\n\nIf set to TRUE , Network Firewall checks whether the request can run successfully, but doesn’t actually make the requested changes. The call returns the value that the request would return if you ran it with dry run set to FALSE , but doesn’t make additions or changes to your resources. This option allows you to make sure that you have the required permissions to run the request and that your request parameters are valid.\n\nIf set to FALSE , Network Firewall makes the requested changes to your resources.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpdateToken -> (string)\n\nA token used for optimistic locking. Network Firewall returns a token to your requests that access the firewall policy. The token marks the state of the policy resource at the time of the request.\n\nTo make changes to the policy, you provide the token in your request. Network Firewall uses the token to ensure that the policy hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall policy again to get a current copy of it with current token. Reapply your changes as needed, then try the operation again using the new token.\n\nFirewallPolicyResponse -> (structure)\n\nThe high-level properties of a firewall policy. This, along with the FirewallPolicy , define the policy. You can retrieve all objects for a firewall policy by calling DescribeFirewallPolicy .\n\nFirewallPolicyName -> (string)\n\nThe descriptive name of the firewall policy. You can’t change the name of a firewall policy after you create it.\n\nFirewallPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nNote\n\nIf this response is for a create request that had DryRun set to TRUE , then this ARN is a placeholder that isn’t attached to a valid resource.\n\nFirewallPolicyId -> (string)\n\nThe unique identifier for the firewall policy.\n\nDescription -> (string)\n\nA description of the firewall policy.\n\nFirewallPolicyStatus -> (string)\n\nThe current status of the firewall policy. You can retrieve this for a firewall policy by calling DescribeFirewallPolicy and providing the firewall policy’s name or ARN.\n\nTags -> (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nConsumedStatelessRuleCapacity -> (integer)\n\nThe number of capacity units currently consumed by the policy’s stateless rules.\n\nConsumedStatefulRuleCapacity -> (integer)\n\nThe number of capacity units currently consumed by the policy’s stateful rules.\n\nNumberOfAssociations -> (integer)\n\nThe number of firewalls that are associated with this firewall policy."
    },
    {
      "command_name": "create-rule-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/create-rule-group.html",
      "command_description": "Description\n\nCreates the specified stateless or stateful rule group, which includes the rules for network traffic inspection, a capacity setting, and tags.\n\nYou provide your rule group specification in your request using either RuleGroup or Rules .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-rule-group\n--rule-group-name <value>\n[--rule-group <value>]\n[--rules <value>]\n--type <value>\n[--description <value>]\n--capacity <value>\n[--tags <value>]\n[--dry-run | --no-dry-run]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--rule-group-name <value>",
        "[--rule-group <value>]",
        "[--rules <value>]",
        "--type <value>",
        "[--description <value>]",
        "--capacity <value>",
        "[--tags <value>]",
        "[--dry-run | --no-dry-run]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--rule-group-name (string)\n\nThe descriptive name of the rule group. You can’t change the name of a rule group after you create it.\n\n--rule-group (structure)\n\nAn object that defines the rule group rules.\n\nNote\n\nYou must provide either this rule group setting or a Rules setting, but not both.\n\nRuleVariables -> (structure)\n\nSettings that are available for use in the rules in the rule group. You can only use these for stateful rule groups.\n\nIPSets -> (map)\n\nA list of IP addresses and address ranges, in CIDR notation.\n\nkey -> (string)\n\nvalue -> (structure)\n\nA list of IP addresses and address ranges, in CIDR notation. This is part of a RuleVariables .\n\nDefinition -> (list)\n\nThe list of IP addresses and address ranges, in CIDR notation.\n\n(string)\n\nPortSets -> (map)\n\nA list of port ranges.\n\nkey -> (string)\n\nvalue -> (structure)\n\nA set of port ranges for use in the rules in a rule group.\n\nDefinition -> (list)\n\nThe set of port ranges.\n\n(string)\n\nRulesSource -> (structure)\n\nThe stateful rules or stateless rules for the rule group.\n\nRulesString -> (string)\n\nStateful inspection criteria, provided in Suricata compatible intrusion prevention system (IPS) rules. Suricata is an open-source network IPS that includes a standard rule-based language for network traffic inspection.\n\nThese rules contain the inspection criteria and the action to take for traffic that matches the criteria, so this type of rule group doesn’t have a separate action setting.\n\nRulesSourceList -> (structure)\n\nStateful inspection criteria for a domain list rule group.\n\nTargets -> (list)\n\nThe domains that you want to inspect for in your traffic flows. To provide multiple domains, separate them with commas. Valid domain specifications are the following:\n\nExplicit names. For example, abc.example.com matches only the domain abc.example.com .\n\nNames that use a domain wildcard, which you indicate with an initial ‘. ‘. For example,``.example.com`` matches example.com and matches all subdomains of example.com , such as abc.example.com and www.example.com .\n\n(string)\n\nTargetTypes -> (list)\n\nThe protocols you want to inspect. Specify TLS_SNI for HTTPS . Specify HTTP_HOST for HTTP . You can specify either or both.\n\n(string)\n\nGeneratedRulesType -> (string)\n\nWhether you want to allow or deny access to the domains in your target list.\n\nStatefulRules -> (list)\n\nAn array of individual stateful rules inspection criteria to be used together in a stateful rule group. Use this option to specify simple Suricata rules with protocol, source and destination, ports, direction, and rule options. For information about the Suricata Rules format, see Rules Format .\n\n(structure)\n\nA single Suricata rules specification, for use in a stateful rule group. Use this option to specify a simple Suricata rule with protocol, source and destination, ports, direction, and rule options. For information about the Suricata Rules format, see Rules Format .\n\nAction -> (string)\n\nDefines what Network Firewall should do with the packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow.\n\nThe actions for a stateful rule are defined as follows:\n\nPASS - Permits the packets to go to the intended destination.\n\nDROP - Blocks the packets from going to the intended destination and sends an alert log message, if alert logging is configured in the Firewall LoggingConfiguration .\n\nALERT - Permits the packets to go to the intended destination and sends an alert log message, if alert logging is configured in the Firewall LoggingConfiguration . You can use this action to test a rule that you intend to use to drop traffic. You can enable the rule with ALERT action, verify in the logs that the rule is filtering as you want, then change the action to DROP .\n\nHeader -> (structure)\n\nThe stateful inspection criteria for this rule, used to inspect traffic flows.\n\nProtocol -> (string)\n\nThe protocol to inspect for. To specify all, you can use IP , because all traffic on AWS and on the internet is IP.\n\nSource -> (string)\n\nThe source IP address or address range to inspect for, in CIDR notation. To match with any address, specify ANY .\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nSourcePort -> (string)\n\nThe source port to inspect for. You can specify an individual port, for example 1994 and you can specify a port range, for example 1990:1994 . To match with any port, specify ANY .\n\nDirection -> (string)\n\nThe direction of traffic flow to inspect. If set to ANY , the inspection matches bidirectional traffic, both from the source to the destination and from the destination to the source. If set to FORWARD , the inspection only matches traffic going from the source to the destination.\n\nDestination -> (string)\n\nThe destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify ANY .\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nDestinationPort -> (string)\n\nThe destination port to inspect for. You can specify an individual port, for example 1994 and you can specify a port range, for example 1990:1994 . To match with any port, specify ANY .\n\nRuleOptions -> (list)\n\nAdditional options for the rule. These are the Suricata RuleOptions settings.\n\n(structure)\n\nAdditional settings for a stateful rule. This is part of the StatefulRule configuration.\n\nKeyword -> (string)\n\nSettings -> (list)\n\n(string)\n\nStatelessRulesAndCustomActions -> (structure)\n\nStateless inspection criteria to be used in a stateless rule group.\n\nStatelessRules -> (list)\n\nDefines the set of stateless rules for use in a stateless rule group.\n\n(structure)\n\nA single stateless rule. This is used in StatelessRulesAndCustomActions .\n\nRuleDefinition -> (structure)\n\nDefines the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria.\n\nMatchAttributes -> (structure)\n\nCriteria for Network Firewall to use to inspect an individual packet in stateless rule inspection. Each match attributes set can include one or more items such as IP address, CIDR range, port number, protocol, and TCP flags.\n\nSources -> (list)\n\nThe source IP addresses and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address.\n\n(structure)\n\nA single IP address specification. This is used in the MatchAttributes source and destination specifications.\n\nAddressDefinition -> (string)\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nDestinations -> (list)\n\nThe destination IP addresses and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address.\n\n(structure)\n\nA single IP address specification. This is used in the MatchAttributes source and destination specifications.\n\nAddressDefinition -> (string)\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nSourcePorts -> (list)\n\nThe source ports to inspect for. If not specified, this matches with any source port. This setting is only used for protocols 6 (TCP) and 17 (UDP).\n\nYou can specify individual ports, for example 1994 and you can specify port ranges, for example 1990:1994 .\n\n(structure)\n\nA single port range specification. This is used for source and destination port ranges in the stateless rule MatchAttributes , SourcePorts , and DestinationPorts settings.\n\nFromPort -> (integer)\n\nThe lower limit of the port range. This must be less than or equal to the ToPort specification.\n\nToPort -> (integer)\n\nThe upper limit of the port range. This must be greater than or equal to the FromPort specification.\n\nDestinationPorts -> (list)\n\nThe destination ports to inspect for. If not specified, this matches with any destination port. This setting is only used for protocols 6 (TCP) and 17 (UDP).\n\nYou can specify individual ports, for example 1994 and you can specify port ranges, for example 1990:1994 .\n\n(structure)\n\nA single port range specification. This is used for source and destination port ranges in the stateless rule MatchAttributes , SourcePorts , and DestinationPorts settings.\n\nFromPort -> (integer)\n\nThe lower limit of the port range. This must be less than or equal to the ToPort specification.\n\nToPort -> (integer)\n\nThe upper limit of the port range. This must be greater than or equal to the FromPort specification.\n\nProtocols -> (list)\n\nThe protocols to inspect for, specified using each protocol’s assigned internet protocol number (IANA). If not specified, this matches with any protocol.\n\n(integer)\n\nTCPFlags -> (list)\n\nThe TCP flags and masks to inspect for. If not specified, this matches with any settings. This setting is only used for protocol 6 (TCP).\n\n(structure)\n\nTCP flags and masks to inspect packets for, used in stateless rules MatchAttributes settings.\n\nFlags -> (list)\n\nUsed in conjunction with the Masks setting to define the flags that must be set and flags that must not be set in order for the packet to match. This setting can only specify values that are also specified in the Masks setting.\n\nFor the flags that are specified in the masks setting, the following must be true for the packet to match:\n\nThe ones that are set in this flags setting must be set in the packet.\n\nThe ones that are not set in this flags setting must also not be set in the packet.\n\n(string)\n\nMasks -> (list)\n\nThe set of flags to consider in the inspection. To inspect all flags in the valid values list, leave this with no setting.\n\n(string)\n\nActions -> (list)\n\nThe actions to take on a packet that matches one of the stateless rule definition’s match attributes. You must specify a standard action and you can add custom actions.\n\nNote\n\nNetwork Firewall only forwards a packet for stateful rule inspection if you specify aws:forward_to_sfe for a rule that the packet matches, or if the packet doesn’t match any stateless rule and you specify aws:forward_to_sfe for the StatelessDefaultActions setting for the FirewallPolicy .\n\nFor every rule, you must specify exactly one of the following standard actions.\n\naws:pass - Discontinues all inspection of the packet and permits it to go to its intended destination.\n\naws:drop - Discontinues all inspection of the packet and blocks it from going to its intended destination.\n\naws:forward_to_sfe - Discontinues stateless inspection of the packet and forwards it to the stateful rule engine for inspection.\n\nAdditionally, you can specify a custom action. To do this, you define a custom action by name and type, then provide the name you’ve assigned to the action in this Actions setting. For information about the options, see CustomAction .\n\nTo provide more than one action in this setting, separate the settings with a comma. For example, if you have a custom PublishMetrics action that you’ve named MyMetricsAction , then you could specify the standard action aws:pass and the custom action with [“aws:pass”, “MyMetricsAction”] .\n\n(string)\n\nPriority -> (integer)\n\nIndicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. Network Firewall evaluates the rules in a rule group starting with the lowest priority setting. You must ensure that the priority settings are unique for the rule group.\n\nEach stateless rule group uses exactly one StatelessRulesAndCustomActions object, and each StatelessRulesAndCustomActions contains exactly one StatelessRules object. To ensure unique priority settings for your rule groups, set unique priorities for the stateless rules that you define inside any single StatelessRules object.\n\nYou can change the priority settings of your rules at any time. To make it easier to insert rules later, number them so there’s a wide range in between, for example use 100, 200, and so on.\n\nCustomActions -> (list)\n\nDefines an array of individual custom action definitions that are available for use by the stateless rules in this StatelessRulesAndCustomActions specification. You name each custom action that you define, and then you can use it by name in your StatelessRule RuleDefinition Actions specification.\n\n(structure)\n\nAn optional, non-standard action to use for stateless packet handling. You can define this in addition to the standard action that you must specify.\n\nYou define and name the custom actions that you want to be able to use, and then you reference them by name in your actions settings.\n\nYou can use custom actions in the following places:\n\nIn a rule group’s StatelessRulesAndCustomActions specification. The custom actions are available for use by name inside the StatelessRulesAndCustomActions where you define them. You can use them for your stateless rule actions to specify what to do with a packet that matches the rule’s match attributes.\n\nIn a FirewallPolicy specification, in StatelessCustomActions . The custom actions are available for use inside the policy where you define them. You can use them for the policy’s default stateless actions settings to specify what to do with packets that don’t match any of the policy’s stateless rules.\n\nActionName -> (string)\n\nThe descriptive name of the custom action. You can’t change the name of a custom action after you create it.\n\nActionDefinition -> (structure)\n\nThe custom action associated with the action name.\n\nPublishMetricAction -> (structure)\n\nStateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. This setting defines a CloudWatch dimension value to be published.\n\nYou can pair this custom action with any of the standard stateless rule actions. For example, you could pair this in a rule action with the standard action that forwards the packet for stateful inspection. Then, when a packet matches the rule, Network Firewall publishes metrics for the packet and forwards it.\n\nDimensions -> (list)\n\n(structure)\n\nThe value to use in an Amazon CloudWatch custom metric dimension. This is used in the PublishMetrics CustomAction . A CloudWatch custom metric dimension is a name/value pair that’s part of the identity of a metric.\n\nAWS Network Firewall sets the dimension name to CustomAction and you provide the dimension value.\n\nFor more information about CloudWatch custom metric dimensions, see Publishing Custom Metrics in the Amazon CloudWatch User Guide .\n\nValue -> (string)\n\nThe value to use in the custom metric dimension.\n\nStatefulRuleOptions -> (structure)\n\nAdditional options governing how Network Firewall handles stateful rules. The policies where you use your stateful rule group must have stateful rule options settings that are compatible with these settings.\n\nRuleOrder -> (string)\n\nIndicates how to manage the order of the rule evaluation for the rule group. By default, Network Firewall leaves the rule evaluation order up to the Suricata rule processing engine. If you set this to STRICT_ORDER , your rules are evaluated in the exact order that they’re listed in your Suricata rules string.\n\nJSON Syntax:\n\n{\n  \"RuleVariables\": {\n    \"IPSets\": {\"string\": {\n          \"Definition\": [\"string\", ...]\n        }\n      ...},\n    \"PortSets\": {\"string\": {\n          \"Definition\": [\"string\", ...]\n        }\n      ...}\n  },\n  \"RulesSource\": {\n    \"RulesString\": \"string\",\n    \"RulesSourceList\": {\n      \"Targets\": [\"string\", ...],\n      \"TargetTypes\": [\"TLS_SNI\"|\"HTTP_HOST\", ...],\n      \"GeneratedRulesType\": \"ALLOWLIST\"|\"DENYLIST\"\n    },\n    \"StatefulRules\": [\n      {\n        \"Action\": \"PASS\"|\"DROP\"|\"ALERT\",\n        \"Header\": {\n          \"Protocol\": \"IP\"|\"TCP\"|\"UDP\"|\"ICMP\"|\"HTTP\"|\"FTP\"|\"TLS\"|\"SMB\"|\"DNS\"|\"DCERPC\"|\"SSH\"|\"SMTP\"|\"IMAP\"|\"MSN\"|\"KRB5\"|\"IKEV2\"|\"TFTP\"|\"NTP\"|\"DHCP\",\n          \"Source\": \"string\",\n          \"SourcePort\": \"string\",\n          \"Direction\": \"FORWARD\"|\"ANY\",\n          \"Destination\": \"string\",\n          \"DestinationPort\": \"string\"\n        },\n        \"RuleOptions\": [\n          {\n            \"Keyword\": \"string\",\n            \"Settings\": [\"string\", ...]\n          }\n          ...\n        ]\n      }\n      ...\n    ],\n    \"StatelessRulesAndCustomActions\": {\n      \"StatelessRules\": [\n        {\n          \"RuleDefinition\": {\n            \"MatchAttributes\": {\n              \"Sources\": [\n                {\n                  \"AddressDefinition\": \"string\"\n                }\n                ...\n              ],\n              \"Destinations\": [\n                {\n                  \"AddressDefinition\": \"string\"\n                }\n                ...\n              ],\n              \"SourcePorts\": [\n                {\n                  \"FromPort\": integer,\n                  \"ToPort\": integer\n                }\n                ...\n              ],\n              \"DestinationPorts\": [\n                {\n                  \"FromPort\": integer,\n                  \"ToPort\": integer\n                }\n                ...\n              ],\n              \"Protocols\": [integer, ...],\n              \"TCPFlags\": [\n                {\n                  \"Flags\": [\"FIN\"|\"SYN\"|\"RST\"|\"PSH\"|\"ACK\"|\"URG\"|\"ECE\"|\"CWR\", ...],\n                  \"Masks\": [\"FIN\"|\"SYN\"|\"RST\"|\"PSH\"|\"ACK\"|\"URG\"|\"ECE\"|\"CWR\", ...]\n                }\n                ...\n              ]\n            },\n            \"Actions\": [\"string\", ...]\n          },\n          \"Priority\": integer\n        }\n        ...\n      ],\n      \"CustomActions\": [\n        {\n          \"ActionName\": \"string\",\n          \"ActionDefinition\": {\n            \"PublishMetricAction\": {\n              \"Dimensions\": [\n                {\n                  \"Value\": \"string\"\n                }\n                ...\n              ]\n            }\n          }\n        }\n        ...\n      ]\n    }\n  },\n  \"StatefulRuleOptions\": {\n    \"RuleOrder\": \"DEFAULT_ACTION_ORDER\"|\"STRICT_ORDER\"\n  }\n}\n\n\n--rules (string)\n\nA string containing stateful rule group rules specifications in Suricata flat format, with one rule per line. Use this to import your existing Suricata compatible rule groups.\n\nNote\n\nYou must provide either this rules setting or a populated RuleGroup setting, but not both.\n\nYou can provide your rule group specification in Suricata flat format through this setting when you create or update your rule group. The call response returns a RuleGroup object that Network Firewall has populated from your string.\n\n--type (string)\n\nIndicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.\n\nPossible values:\n\nSTATELESS\n\nSTATEFUL\n\n--description (string)\n\nA description of the rule group.\n\n--capacity (integer)\n\nThe maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group.\n\nYou can retrieve the capacity that would be required for a rule group before you create the rule group by calling CreateRuleGroup with DryRun set to TRUE .\n\nNote\n\nYou can’t change or exceed this capacity when you update the rule group, so leave room for your rule group to grow.\n\nCapacity for a stateless rule group\n\nFor a stateless rule group, the capacity required is the sum of the capacity requirements of the individual rules that you expect to have in the rule group.\n\nTo calculate the capacity requirement of a single rule, multiply the capacity requirement values of each of the rule’s match settings:\n\nA match setting with no criteria specified has a value of 1.\n\nA match setting with Any specified has a value of 1.\n\nAll other match settings have a value equal to the number of elements provided in the setting. For example, a protocol setting [“UDP”] and a source setting [“10.0.0.0/24”] each have a value of 1. A protocol setting [“UDP”,”TCP”] has a value of 2. A source setting [“10.0.0.0/24”,”10.0.0.1/24”,”10.0.0.2/24”] has a value of 3.\n\nA rule with no criteria specified in any of its match settings has a capacity requirement of 1. A rule with protocol setting [“UDP”,”TCP”], source setting [“10.0.0.0/24”,”10.0.0.1/24”,”10.0.0.2/24”], and a single specification or no specification for each of the other match settings has a capacity requirement of 6.\n\nCapacity for a stateful rule group\n\nFor a stateful rule group, the minimum capacity required is the number of individual rules that you expect to have in the rule group.\n\n--tags (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--dry-run | --no-dry-run (boolean)\n\nIndicates whether you want Network Firewall to just check the validity of the request, rather than run the request.\n\nIf set to TRUE , Network Firewall checks whether the request can run successfully, but doesn’t actually make the requested changes. The call returns the value that the request would return if you ran it with dry run set to FALSE , but doesn’t make additions or changes to your resources. This option allows you to make sure that you have the required permissions to run the request and that your request parameters are valid.\n\nIf set to FALSE , Network Firewall makes the requested changes to your resources.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpdateToken -> (string)\n\nA token used for optimistic locking. Network Firewall returns a token to your requests that access the rule group. The token marks the state of the rule group resource at the time of the request.\n\nTo make changes to the rule group, you provide the token in your request. Network Firewall uses the token to ensure that the rule group hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the rule group again to get a current copy of it with a current token. Reapply your changes as needed, then try the operation again using the new token.\n\nRuleGroupResponse -> (structure)\n\nThe high-level properties of a rule group. This, along with the RuleGroup , define the rule group. You can retrieve all objects for a rule group by calling DescribeRuleGroup .\n\nRuleGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the rule group.\n\nNote\n\nIf this response is for a create request that had DryRun set to TRUE , then this ARN is a placeholder that isn’t attached to a valid resource.\n\nRuleGroupName -> (string)\n\nThe descriptive name of the rule group. You can’t change the name of a rule group after you create it.\n\nRuleGroupId -> (string)\n\nThe unique identifier for the rule group.\n\nDescription -> (string)\n\nA description of the rule group.\n\nType -> (string)\n\nIndicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.\n\nCapacity -> (integer)\n\nThe maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group.\n\nYou can retrieve the capacity that would be required for a rule group before you create the rule group by calling CreateRuleGroup with DryRun set to TRUE .\n\nRuleGroupStatus -> (string)\n\nDetailed information about the current status of a rule group.\n\nTags -> (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nConsumedCapacity -> (integer)\n\nThe number of capacity units currently consumed by the rule group rules.\n\nNumberOfAssociations -> (integer)\n\nThe number of firewall policies that use this rule group."
    },
    {
      "command_name": "delete-firewall",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/delete-firewall.html",
      "command_description": "Description\n\nDeletes the specified Firewall and its FirewallStatus . This operation requires the firewall’s DeleteProtection flag to be FALSE . You can’t revert this operation.\n\nYou can check whether a firewall is in use by reviewing the route tables for the Availability Zones where you have firewall subnet mappings. Retrieve the subnet mappings by calling DescribeFirewall . You define and update the route tables through Amazon VPC. As needed, update the route tables for the zones to remove the firewall endpoints. When the route tables no longer use the firewall endpoints, you can remove the firewall safely.\n\nTo delete a firewall, remove the delete protection if you need to using UpdateFirewallDeleteProtection , then delete the firewall by calling DeleteFirewall .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-firewall\n[--firewall-name <value>]\n[--firewall-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--firewall-name <value>]",
        "[--firewall-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewall -> (structure)\n\nThe firewall defines the configuration settings for an AWS Network Firewall firewall. These settings include the firewall policy, the subnets in your VPC to use for the firewall endpoints, and any tags that are attached to the firewall AWS resource.\n\nThe status of the firewall, for example whether it’s ready to filter network traffic, is provided in the corresponding FirewallStatus . You can retrieve both objects by calling DescribeFirewall .\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nThe relationship of firewall to firewall policy is many to one. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.\n\nVpcId -> (string)\n\nThe unique identifier of the VPC where the firewall is in use.\n\nSubnetMappings -> (list)\n\nThe public subnets that Network Firewall is using for the firewall. Each subnet must belong to a different Availability Zone.\n\n(structure)\n\nThe ID for a subnet that you want to associate with the firewall. This is used with CreateFirewall and AssociateSubnets . AWS Network Firewall creates an instance of the associated firewall in each subnet that you specify, to filter traffic in the subnet’s Availability Zone.\n\nSubnetId -> (string)\n\nThe unique identifier for the subnet.\n\nDeleteProtection -> (boolean)\n\nA flag indicating whether it is possible to delete the firewall. A setting of TRUE indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to TRUE .\n\nSubnetChangeProtection -> (boolean)\n\nA setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE .\n\nFirewallPolicyChangeProtection -> (boolean)\n\nA setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE .\n\nDescription -> (string)\n\nA description of the firewall.\n\nFirewallId -> (string)\n\nThe unique identifier for the firewall.\n\nTags -> (list)\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nFirewallStatus -> (structure)\n\nDetailed information about the current status of a Firewall . You can retrieve this for a firewall by calling DescribeFirewall and providing the firewall name and ARN.\n\nStatus -> (string)\n\nThe readiness of the configured firewall to handle network traffic across all of the Availability Zones where you’ve configured it. This setting is READY only when the ConfigurationSyncStateSummary value is IN_SYNC and the Attachment Status values for all of the configured subnets are READY .\n\nConfigurationSyncStateSummary -> (string)\n\nThe configuration sync state for the firewall. This summarizes the sync states reported in the Config settings for all of the Availability Zones where you have configured the firewall.\n\nWhen you create a firewall or update its configuration, for example by adding a rule group to its firewall policy, Network Firewall distributes the configuration changes to all zones where the firewall is in use. This summary indicates whether the configuration changes have been applied everywhere.\n\nThis status must be IN_SYNC for the firewall to be ready for use, but it doesn’t indicate that the firewall is ready. The Status setting indicates firewall readiness.\n\nSyncStates -> (map)\n\nThe subnets that you’ve configured for use by the Network Firewall firewall. This contains one array element per Availability Zone where you’ve configured a subnet. These objects provide details of the information that is summarized in the ConfigurationSyncStateSummary and Status , broken down by zone and configuration object.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe status of the firewall endpoint and firewall policy configuration for a single VPC subnet.\n\nFor each VPC subnet that you associate with a firewall, AWS Network Firewall does the following:\n\nInstantiates a firewall endpoint in the subnet, ready to take traffic.\n\nConfigures the endpoint with the current firewall policy settings, to provide the filtering behavior for the endpoint.\n\nWhen you update a firewall, for example to add a subnet association or change a rule group in the firewall policy, the affected sync states reflect out-of-sync or not ready status until the changes are complete.\n\nAttachment -> (structure)\n\nThe attachment status of the firewall’s association with a single VPC subnet. For each configured subnet, Network Firewall creates the attachment by instantiating the firewall endpoint in the subnet so that it’s ready to take traffic. This is part of the FirewallStatus .\n\nSubnetId -> (string)\n\nThe unique identifier of the subnet that you’ve specified to be used for a firewall endpoint.\n\nEndpointId -> (string)\n\nThe identifier of the firewall endpoint that Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.\n\nStatus -> (string)\n\nThe current status of the firewall endpoint in the subnet. This value reflects both the instantiation of the endpoint in the VPC subnet and the sync states that are reported in the Config settings. When this value is READY , the endpoint is available and configured properly to handle network traffic. When the endpoint isn’t available for traffic, this value will reflect its state, for example CREATING , DELETING , or FAILED .\n\nConfig -> (map)\n\nThe configuration status of the firewall endpoint in a single VPC subnet. Network Firewall provides each endpoint with the rules that are configured in the firewall policy. Each time you add a subnet or modify the associated firewall policy, Network Firewall synchronizes the rules in the endpoint, so it can properly filter network traffic. This is part of the FirewallStatus .\n\nkey -> (string)\n\nvalue -> (structure)\n\nProvides configuration status for a single policy or rule group that is used for a firewall endpoint. Network Firewall provides each endpoint with the rules that are configured in the firewall policy. Each time you add a subnet or modify the associated firewall policy, Network Firewall synchronizes the rules in the endpoint, so it can properly filter network traffic. This is part of a SyncState for a firewall.\n\nSyncStatus -> (string)\n\nIndicates whether this object is in sync with the version indicated in the update token.\n\nUpdateToken -> (string)\n\nThe current version of the object that is either in sync or pending synchronization."
    },
    {
      "command_name": "delete-firewall-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/delete-firewall-policy.html",
      "command_description": "Description\n\nDeletes the specified FirewallPolicy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-firewall-policy\n[--firewall-policy-name <value>]\n[--firewall-policy-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--firewall-policy-name <value>]",
        "[--firewall-policy-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-policy-name (string)\n\nThe descriptive name of the firewall policy. You can’t change the name of a firewall policy after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallPolicyResponse -> (structure)\n\nThe object containing the definition of the FirewallPolicyResponse that you asked to delete.\n\nFirewallPolicyName -> (string)\n\nThe descriptive name of the firewall policy. You can’t change the name of a firewall policy after you create it.\n\nFirewallPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nNote\n\nIf this response is for a create request that had DryRun set to TRUE , then this ARN is a placeholder that isn’t attached to a valid resource.\n\nFirewallPolicyId -> (string)\n\nThe unique identifier for the firewall policy.\n\nDescription -> (string)\n\nA description of the firewall policy.\n\nFirewallPolicyStatus -> (string)\n\nThe current status of the firewall policy. You can retrieve this for a firewall policy by calling DescribeFirewallPolicy and providing the firewall policy’s name or ARN.\n\nTags -> (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nConsumedStatelessRuleCapacity -> (integer)\n\nThe number of capacity units currently consumed by the policy’s stateless rules.\n\nConsumedStatefulRuleCapacity -> (integer)\n\nThe number of capacity units currently consumed by the policy’s stateful rules.\n\nNumberOfAssociations -> (integer)\n\nThe number of firewalls that are associated with this firewall policy."
    },
    {
      "command_name": "delete-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/delete-resource-policy.html",
      "command_description": "Description\n\nDeletes a resource policy that you created in a PutResourcePolicy request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resource-policy\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the rule group or firewall policy whose resource policy you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-rule-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/delete-rule-group.html",
      "command_description": "Description\n\nDeletes the specified RuleGroup .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-rule-group\n[--rule-group-name <value>]\n[--rule-group-arn <value>]\n[--type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--rule-group-name <value>]",
        "[--rule-group-arn <value>]",
        "[--type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--rule-group-name (string)\n\nThe descriptive name of the rule group. You can’t change the name of a rule group after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--rule-group-arn (string)\n\nThe Amazon Resource Name (ARN) of the rule group.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--type (string)\n\nIndicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.\n\nNote\n\nThis setting is required for requests that do not include the RuleGroupARN .\n\nPossible values:\n\nSTATELESS\n\nSTATEFUL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRuleGroupResponse -> (structure)\n\nThe high-level properties of a rule group. This, along with the RuleGroup , define the rule group. You can retrieve all objects for a rule group by calling DescribeRuleGroup .\n\nRuleGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the rule group.\n\nNote\n\nIf this response is for a create request that had DryRun set to TRUE , then this ARN is a placeholder that isn’t attached to a valid resource.\n\nRuleGroupName -> (string)\n\nThe descriptive name of the rule group. You can’t change the name of a rule group after you create it.\n\nRuleGroupId -> (string)\n\nThe unique identifier for the rule group.\n\nDescription -> (string)\n\nA description of the rule group.\n\nType -> (string)\n\nIndicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.\n\nCapacity -> (integer)\n\nThe maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group.\n\nYou can retrieve the capacity that would be required for a rule group before you create the rule group by calling CreateRuleGroup with DryRun set to TRUE .\n\nRuleGroupStatus -> (string)\n\nDetailed information about the current status of a rule group.\n\nTags -> (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nConsumedCapacity -> (integer)\n\nThe number of capacity units currently consumed by the rule group rules.\n\nNumberOfAssociations -> (integer)\n\nThe number of firewall policies that use this rule group."
    },
    {
      "command_name": "describe-firewall",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/describe-firewall.html",
      "command_description": "Description\n\nReturns the data objects for the specified firewall.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-firewall\n[--firewall-name <value>]\n[--firewall-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--firewall-name <value>]",
        "[--firewall-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpdateToken -> (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token.\n\nFirewall -> (structure)\n\nThe configuration settings for the firewall. These settings include the firewall policy and the subnets in your VPC to use for the firewall endpoints.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nThe relationship of firewall to firewall policy is many to one. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.\n\nVpcId -> (string)\n\nThe unique identifier of the VPC where the firewall is in use.\n\nSubnetMappings -> (list)\n\nThe public subnets that Network Firewall is using for the firewall. Each subnet must belong to a different Availability Zone.\n\n(structure)\n\nThe ID for a subnet that you want to associate with the firewall. This is used with CreateFirewall and AssociateSubnets . AWS Network Firewall creates an instance of the associated firewall in each subnet that you specify, to filter traffic in the subnet’s Availability Zone.\n\nSubnetId -> (string)\n\nThe unique identifier for the subnet.\n\nDeleteProtection -> (boolean)\n\nA flag indicating whether it is possible to delete the firewall. A setting of TRUE indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to TRUE .\n\nSubnetChangeProtection -> (boolean)\n\nA setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE .\n\nFirewallPolicyChangeProtection -> (boolean)\n\nA setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE .\n\nDescription -> (string)\n\nA description of the firewall.\n\nFirewallId -> (string)\n\nThe unique identifier for the firewall.\n\nTags -> (list)\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nFirewallStatus -> (structure)\n\nDetailed information about the current status of a Firewall . You can retrieve this for a firewall by calling DescribeFirewall and providing the firewall name and ARN.\n\nStatus -> (string)\n\nThe readiness of the configured firewall to handle network traffic across all of the Availability Zones where you’ve configured it. This setting is READY only when the ConfigurationSyncStateSummary value is IN_SYNC and the Attachment Status values for all of the configured subnets are READY .\n\nConfigurationSyncStateSummary -> (string)\n\nThe configuration sync state for the firewall. This summarizes the sync states reported in the Config settings for all of the Availability Zones where you have configured the firewall.\n\nWhen you create a firewall or update its configuration, for example by adding a rule group to its firewall policy, Network Firewall distributes the configuration changes to all zones where the firewall is in use. This summary indicates whether the configuration changes have been applied everywhere.\n\nThis status must be IN_SYNC for the firewall to be ready for use, but it doesn’t indicate that the firewall is ready. The Status setting indicates firewall readiness.\n\nSyncStates -> (map)\n\nThe subnets that you’ve configured for use by the Network Firewall firewall. This contains one array element per Availability Zone where you’ve configured a subnet. These objects provide details of the information that is summarized in the ConfigurationSyncStateSummary and Status , broken down by zone and configuration object.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe status of the firewall endpoint and firewall policy configuration for a single VPC subnet.\n\nFor each VPC subnet that you associate with a firewall, AWS Network Firewall does the following:\n\nInstantiates a firewall endpoint in the subnet, ready to take traffic.\n\nConfigures the endpoint with the current firewall policy settings, to provide the filtering behavior for the endpoint.\n\nWhen you update a firewall, for example to add a subnet association or change a rule group in the firewall policy, the affected sync states reflect out-of-sync or not ready status until the changes are complete.\n\nAttachment -> (structure)\n\nThe attachment status of the firewall’s association with a single VPC subnet. For each configured subnet, Network Firewall creates the attachment by instantiating the firewall endpoint in the subnet so that it’s ready to take traffic. This is part of the FirewallStatus .\n\nSubnetId -> (string)\n\nThe unique identifier of the subnet that you’ve specified to be used for a firewall endpoint.\n\nEndpointId -> (string)\n\nThe identifier of the firewall endpoint that Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.\n\nStatus -> (string)\n\nThe current status of the firewall endpoint in the subnet. This value reflects both the instantiation of the endpoint in the VPC subnet and the sync states that are reported in the Config settings. When this value is READY , the endpoint is available and configured properly to handle network traffic. When the endpoint isn’t available for traffic, this value will reflect its state, for example CREATING , DELETING , or FAILED .\n\nConfig -> (map)\n\nThe configuration status of the firewall endpoint in a single VPC subnet. Network Firewall provides each endpoint with the rules that are configured in the firewall policy. Each time you add a subnet or modify the associated firewall policy, Network Firewall synchronizes the rules in the endpoint, so it can properly filter network traffic. This is part of the FirewallStatus .\n\nkey -> (string)\n\nvalue -> (structure)\n\nProvides configuration status for a single policy or rule group that is used for a firewall endpoint. Network Firewall provides each endpoint with the rules that are configured in the firewall policy. Each time you add a subnet or modify the associated firewall policy, Network Firewall synchronizes the rules in the endpoint, so it can properly filter network traffic. This is part of a SyncState for a firewall.\n\nSyncStatus -> (string)\n\nIndicates whether this object is in sync with the version indicated in the update token.\n\nUpdateToken -> (string)\n\nThe current version of the object that is either in sync or pending synchronization."
    },
    {
      "command_name": "describe-firewall-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/describe-firewall-policy.html",
      "command_description": "Description\n\nReturns the data objects for the specified firewall policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-firewall-policy\n[--firewall-policy-name <value>]\n[--firewall-policy-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--firewall-policy-name <value>]",
        "[--firewall-policy-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-policy-name (string)\n\nThe descriptive name of the firewall policy. You can’t change the name of a firewall policy after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpdateToken -> (string)\n\nA token used for optimistic locking. Network Firewall returns a token to your requests that access the firewall policy. The token marks the state of the policy resource at the time of the request.\n\nTo make changes to the policy, you provide the token in your request. Network Firewall uses the token to ensure that the policy hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall policy again to get a current copy of it with current token. Reapply your changes as needed, then try the operation again using the new token.\n\nFirewallPolicyResponse -> (structure)\n\nThe high-level properties of a firewall policy. This, along with the FirewallPolicy , define the policy. You can retrieve all objects for a firewall policy by calling DescribeFirewallPolicy .\n\nFirewallPolicyName -> (string)\n\nThe descriptive name of the firewall policy. You can’t change the name of a firewall policy after you create it.\n\nFirewallPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nNote\n\nIf this response is for a create request that had DryRun set to TRUE , then this ARN is a placeholder that isn’t attached to a valid resource.\n\nFirewallPolicyId -> (string)\n\nThe unique identifier for the firewall policy.\n\nDescription -> (string)\n\nA description of the firewall policy.\n\nFirewallPolicyStatus -> (string)\n\nThe current status of the firewall policy. You can retrieve this for a firewall policy by calling DescribeFirewallPolicy and providing the firewall policy’s name or ARN.\n\nTags -> (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nConsumedStatelessRuleCapacity -> (integer)\n\nThe number of capacity units currently consumed by the policy’s stateless rules.\n\nConsumedStatefulRuleCapacity -> (integer)\n\nThe number of capacity units currently consumed by the policy’s stateful rules.\n\nNumberOfAssociations -> (integer)\n\nThe number of firewalls that are associated with this firewall policy.\n\nFirewallPolicy -> (structure)\n\nThe policy for the specified firewall policy.\n\nStatelessRuleGroupReferences -> (list)\n\nReferences to the stateless rule groups that are used in the policy. These define the matching criteria in stateless rules.\n\n(structure)\n\nIdentifier for a single stateless rule group, used in a firewall policy to refer to the rule group.\n\nResourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the stateless rule group.\n\nPriority -> (integer)\n\nAn integer setting that indicates the order in which to run the stateless rule groups in a single FirewallPolicy . Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting. You must ensure that the priority settings are unique within each policy.\n\nStatelessDefaultActions -> (list)\n\nThe actions to take on a packet if it doesn’t match any of the stateless rules in the policy. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe .\n\nYou must specify one of the standard actions: aws:pass , aws:drop , or aws:forward_to_sfe . In addition, you can specify custom actions that are compatible with your standard section choice.\n\nFor example, you could specify [\"aws:pass\"] or you could specify [\"aws:pass\", “customActionName”] . For information about compatibility, see the custom action descriptions under CustomAction .\n\n(string)\n\nStatelessFragmentDefaultActions -> (list)\n\nThe actions to take on a fragmented UDP packet if it doesn’t match any of the stateless rules in the policy. Network Firewall only manages UDP packet fragments and silently drops packet fragments for other protocols. If you want non-matching fragmented UDP packets to be forwarded for stateful inspection, specify aws:forward_to_sfe .\n\nYou must specify one of the standard actions: aws:pass , aws:drop , or aws:forward_to_sfe . In addition, you can specify custom actions that are compatible with your standard section choice.\n\nFor example, you could specify [\"aws:pass\"] or you could specify [\"aws:pass\", “customActionName”] . For information about compatibility, see the custom action descriptions under CustomAction .\n\n(string)\n\nStatelessCustomActions -> (list)\n\nThe custom action definitions that are available for use in the firewall policy’s StatelessDefaultActions setting. You name each custom action that you define, and then you can use it by name in your default actions specifications.\n\n(structure)\n\nAn optional, non-standard action to use for stateless packet handling. You can define this in addition to the standard action that you must specify.\n\nYou define and name the custom actions that you want to be able to use, and then you reference them by name in your actions settings.\n\nYou can use custom actions in the following places:\n\nIn a rule group’s StatelessRulesAndCustomActions specification. The custom actions are available for use by name inside the StatelessRulesAndCustomActions where you define them. You can use them for your stateless rule actions to specify what to do with a packet that matches the rule’s match attributes.\n\nIn a FirewallPolicy specification, in StatelessCustomActions . The custom actions are available for use inside the policy where you define them. You can use them for the policy’s default stateless actions settings to specify what to do with packets that don’t match any of the policy’s stateless rules.\n\nActionName -> (string)\n\nThe descriptive name of the custom action. You can’t change the name of a custom action after you create it.\n\nActionDefinition -> (structure)\n\nThe custom action associated with the action name.\n\nPublishMetricAction -> (structure)\n\nStateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. This setting defines a CloudWatch dimension value to be published.\n\nYou can pair this custom action with any of the standard stateless rule actions. For example, you could pair this in a rule action with the standard action that forwards the packet for stateful inspection. Then, when a packet matches the rule, Network Firewall publishes metrics for the packet and forwards it.\n\nDimensions -> (list)\n\n(structure)\n\nThe value to use in an Amazon CloudWatch custom metric dimension. This is used in the PublishMetrics CustomAction . A CloudWatch custom metric dimension is a name/value pair that’s part of the identity of a metric.\n\nAWS Network Firewall sets the dimension name to CustomAction and you provide the dimension value.\n\nFor more information about CloudWatch custom metric dimensions, see Publishing Custom Metrics in the Amazon CloudWatch User Guide .\n\nValue -> (string)\n\nThe value to use in the custom metric dimension.\n\nStatefulRuleGroupReferences -> (list)\n\nReferences to the stateful rule groups that are used in the policy. These define the inspection criteria in stateful rules.\n\n(structure)\n\nIdentifier for a single stateful rule group, used in a firewall policy to refer to a rule group.\n\nResourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the stateful rule group.\n\nPriority -> (integer)\n\nAn integer setting that indicates the order in which to run the stateful rule groups in a single FirewallPolicy . This setting only applies to firewall policies that specify the STRICT_ORDER rule order in the stateful engine options settings.\n\nNetwork Firewall evalutes each stateful rule group against a packet starting with the group that has the lowest priority setting. You must ensure that the priority settings are unique within each policy.\n\nYou can change the priority settings of your rule groups at any time. To make it easier to insert rule groups later, number them so there’s a wide range in between, for example use 100, 200, and so on.\n\nStatefulDefaultActions -> (list)\n\nThe default actions to take on a packet that doesn’t match any stateful rules.\n\n(string)\n\nStatefulEngineOptions -> (structure)\n\nAdditional options governing how Network Firewall handles stateful rules. The stateful rule groups that you use in your policy must have stateful rule options settings that are compatible with these settings.\n\nRuleOrder -> (string)\n\nIndicates how to manage the order of stateful rule evaluation for the policy. By default, Network Firewall leaves the rule evaluation order up to the Suricata rule processing engine. If you set this to STRICT_ORDER , your rules are evaluated in the exact order that you provide them in the policy. With strict ordering, the rule groups are evaluated by order of priority, starting from the lowest number, and the rules in each rule group are processed in the order that they’re defined."
    },
    {
      "command_name": "describe-logging-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/describe-logging-configuration.html",
      "command_description": "Description\n\nReturns the logging configuration for the specified firewall.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-logging-configuration\n[--firewall-arn <value>]\n[--firewall-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--firewall-arn <value>]",
        "[--firewall-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nLoggingConfiguration -> (structure)\n\nDefines how AWS Network Firewall performs logging for a Firewall .\n\nLogDestinationConfigs -> (list)\n\nDefines the logging destinations for the logs for a firewall. Network Firewall generates logs for stateful rule groups.\n\n(structure)\n\nDefines where AWS Network Firewall sends logs for the firewall for one log type. This is used in LoggingConfiguration . You can send each type of log to an Amazon S3 bucket, a CloudWatch log group, or a Kinesis Data Firehose delivery stream.\n\nNetwork Firewall generates logs for stateful rule groups. You can save alert and flow log types. The stateful rules engine records flow logs for all network traffic that it receives. It records alert logs for traffic that matches stateful rules that have the rule action set to DROP or ALERT .\n\nLogType -> (string)\n\nThe type of log to send. Alert logs report traffic that matches a StatefulRule with an action setting that sends an alert log message. Flow logs are standard network traffic flow logs.\n\nLogDestinationType -> (string)\n\nThe type of storage destination to send these logs to. You can send logs to an Amazon S3 bucket, a CloudWatch log group, or a Kinesis Data Firehose delivery stream.\n\nLogDestination -> (map)\n\nThe named location for the logs, provided in a key:value mapping that is specific to the chosen destination type.\n\nFor an Amazon S3 bucket, provide the name of the bucket, with key bucketName , and optionally provide a prefix, with key prefix . The following example specifies an Amazon S3 bucket named DOC-EXAMPLE-BUCKET and the prefix alerts : \"LogDestination\": { \"bucketName\": \"DOC-EXAMPLE-BUCKET\", \"prefix\": \"alerts\" }\n\nFor a CloudWatch log group, provide the name of the CloudWatch log group, with key logGroup . The following example specifies a log group named alert-log-group : \"LogDestination\": { \"logGroup\": \"alert-log-group\" }\n\nFor a Kinesis Data Firehose delivery stream, provide the name of the delivery stream, with key deliveryStream . The following example specifies a delivery stream named alert-delivery-stream : \"LogDestination\": { \"deliveryStream\": \"alert-delivery-stream\" }\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "describe-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/describe-resource-policy.html",
      "command_description": "Description\n\nRetrieves a resource policy that you created in a PutResourcePolicy request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-resource-policy\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the rule group or firewall policy whose resource policy you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicy -> (string)\n\nThe AWS Identity and Access Management policy for the resource."
    },
    {
      "command_name": "describe-rule-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/describe-rule-group.html",
      "command_description": "Description\n\nReturns the data objects for the specified rule group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-rule-group\n[--rule-group-name <value>]\n[--rule-group-arn <value>]\n[--type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--rule-group-name <value>]",
        "[--rule-group-arn <value>]",
        "[--type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--rule-group-name (string)\n\nThe descriptive name of the rule group. You can’t change the name of a rule group after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--rule-group-arn (string)\n\nThe Amazon Resource Name (ARN) of the rule group.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--type (string)\n\nIndicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.\n\nNote\n\nThis setting is required for requests that do not include the RuleGroupARN .\n\nPossible values:\n\nSTATELESS\n\nSTATEFUL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpdateToken -> (string)\n\nA token used for optimistic locking. Network Firewall returns a token to your requests that access the rule group. The token marks the state of the rule group resource at the time of the request.\n\nTo make changes to the rule group, you provide the token in your request. Network Firewall uses the token to ensure that the rule group hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the rule group again to get a current copy of it with a current token. Reapply your changes as needed, then try the operation again using the new token.\n\nRuleGroup -> (structure)\n\nThe object that defines the rules in a rule group. This, along with RuleGroupResponse , define the rule group. You can retrieve all objects for a rule group by calling DescribeRuleGroup .\n\nAWS Network Firewall uses a rule group to inspect and control network traffic. You define stateless rule groups to inspect individual packets and you define stateful rule groups to inspect packets in the context of their traffic flow.\n\nTo use a rule group, you include it by reference in an Network Firewall firewall policy, then you use the policy in a firewall. You can reference a rule group from more than one firewall policy, and you can use a firewall policy in more than one firewall.\n\nRuleVariables -> (structure)\n\nSettings that are available for use in the rules in the rule group. You can only use these for stateful rule groups.\n\nIPSets -> (map)\n\nA list of IP addresses and address ranges, in CIDR notation.\n\nkey -> (string)\n\nvalue -> (structure)\n\nA list of IP addresses and address ranges, in CIDR notation. This is part of a RuleVariables .\n\nDefinition -> (list)\n\nThe list of IP addresses and address ranges, in CIDR notation.\n\n(string)\n\nPortSets -> (map)\n\nA list of port ranges.\n\nkey -> (string)\n\nvalue -> (structure)\n\nA set of port ranges for use in the rules in a rule group.\n\nDefinition -> (list)\n\nThe set of port ranges.\n\n(string)\n\nRulesSource -> (structure)\n\nThe stateful rules or stateless rules for the rule group.\n\nRulesString -> (string)\n\nStateful inspection criteria, provided in Suricata compatible intrusion prevention system (IPS) rules. Suricata is an open-source network IPS that includes a standard rule-based language for network traffic inspection.\n\nThese rules contain the inspection criteria and the action to take for traffic that matches the criteria, so this type of rule group doesn’t have a separate action setting.\n\nRulesSourceList -> (structure)\n\nStateful inspection criteria for a domain list rule group.\n\nTargets -> (list)\n\nThe domains that you want to inspect for in your traffic flows. To provide multiple domains, separate them with commas. Valid domain specifications are the following:\n\nExplicit names. For example, abc.example.com matches only the domain abc.example.com .\n\nNames that use a domain wildcard, which you indicate with an initial ‘. ‘. For example,``.example.com`` matches example.com and matches all subdomains of example.com , such as abc.example.com and www.example.com .\n\n(string)\n\nTargetTypes -> (list)\n\nThe protocols you want to inspect. Specify TLS_SNI for HTTPS . Specify HTTP_HOST for HTTP . You can specify either or both.\n\n(string)\n\nGeneratedRulesType -> (string)\n\nWhether you want to allow or deny access to the domains in your target list.\n\nStatefulRules -> (list)\n\nAn array of individual stateful rules inspection criteria to be used together in a stateful rule group. Use this option to specify simple Suricata rules with protocol, source and destination, ports, direction, and rule options. For information about the Suricata Rules format, see Rules Format .\n\n(structure)\n\nA single Suricata rules specification, for use in a stateful rule group. Use this option to specify a simple Suricata rule with protocol, source and destination, ports, direction, and rule options. For information about the Suricata Rules format, see Rules Format .\n\nAction -> (string)\n\nDefines what Network Firewall should do with the packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow.\n\nThe actions for a stateful rule are defined as follows:\n\nPASS - Permits the packets to go to the intended destination.\n\nDROP - Blocks the packets from going to the intended destination and sends an alert log message, if alert logging is configured in the Firewall LoggingConfiguration .\n\nALERT - Permits the packets to go to the intended destination and sends an alert log message, if alert logging is configured in the Firewall LoggingConfiguration . You can use this action to test a rule that you intend to use to drop traffic. You can enable the rule with ALERT action, verify in the logs that the rule is filtering as you want, then change the action to DROP .\n\nHeader -> (structure)\n\nThe stateful inspection criteria for this rule, used to inspect traffic flows.\n\nProtocol -> (string)\n\nThe protocol to inspect for. To specify all, you can use IP , because all traffic on AWS and on the internet is IP.\n\nSource -> (string)\n\nThe source IP address or address range to inspect for, in CIDR notation. To match with any address, specify ANY .\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nSourcePort -> (string)\n\nThe source port to inspect for. You can specify an individual port, for example 1994 and you can specify a port range, for example 1990:1994 . To match with any port, specify ANY .\n\nDirection -> (string)\n\nThe direction of traffic flow to inspect. If set to ANY , the inspection matches bidirectional traffic, both from the source to the destination and from the destination to the source. If set to FORWARD , the inspection only matches traffic going from the source to the destination.\n\nDestination -> (string)\n\nThe destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify ANY .\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nDestinationPort -> (string)\n\nThe destination port to inspect for. You can specify an individual port, for example 1994 and you can specify a port range, for example 1990:1994 . To match with any port, specify ANY .\n\nRuleOptions -> (list)\n\nAdditional options for the rule. These are the Suricata RuleOptions settings.\n\n(structure)\n\nAdditional settings for a stateful rule. This is part of the StatefulRule configuration.\n\nKeyword -> (string)\n\nSettings -> (list)\n\n(string)\n\nStatelessRulesAndCustomActions -> (structure)\n\nStateless inspection criteria to be used in a stateless rule group.\n\nStatelessRules -> (list)\n\nDefines the set of stateless rules for use in a stateless rule group.\n\n(structure)\n\nA single stateless rule. This is used in StatelessRulesAndCustomActions .\n\nRuleDefinition -> (structure)\n\nDefines the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria.\n\nMatchAttributes -> (structure)\n\nCriteria for Network Firewall to use to inspect an individual packet in stateless rule inspection. Each match attributes set can include one or more items such as IP address, CIDR range, port number, protocol, and TCP flags.\n\nSources -> (list)\n\nThe source IP addresses and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address.\n\n(structure)\n\nA single IP address specification. This is used in the MatchAttributes source and destination specifications.\n\nAddressDefinition -> (string)\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nDestinations -> (list)\n\nThe destination IP addresses and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address.\n\n(structure)\n\nA single IP address specification. This is used in the MatchAttributes source and destination specifications.\n\nAddressDefinition -> (string)\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nSourcePorts -> (list)\n\nThe source ports to inspect for. If not specified, this matches with any source port. This setting is only used for protocols 6 (TCP) and 17 (UDP).\n\nYou can specify individual ports, for example 1994 and you can specify port ranges, for example 1990:1994 .\n\n(structure)\n\nA single port range specification. This is used for source and destination port ranges in the stateless rule MatchAttributes , SourcePorts , and DestinationPorts settings.\n\nFromPort -> (integer)\n\nThe lower limit of the port range. This must be less than or equal to the ToPort specification.\n\nToPort -> (integer)\n\nThe upper limit of the port range. This must be greater than or equal to the FromPort specification.\n\nDestinationPorts -> (list)\n\nThe destination ports to inspect for. If not specified, this matches with any destination port. This setting is only used for protocols 6 (TCP) and 17 (UDP).\n\nYou can specify individual ports, for example 1994 and you can specify port ranges, for example 1990:1994 .\n\n(structure)\n\nA single port range specification. This is used for source and destination port ranges in the stateless rule MatchAttributes , SourcePorts , and DestinationPorts settings.\n\nFromPort -> (integer)\n\nThe lower limit of the port range. This must be less than or equal to the ToPort specification.\n\nToPort -> (integer)\n\nThe upper limit of the port range. This must be greater than or equal to the FromPort specification.\n\nProtocols -> (list)\n\nThe protocols to inspect for, specified using each protocol’s assigned internet protocol number (IANA). If not specified, this matches with any protocol.\n\n(integer)\n\nTCPFlags -> (list)\n\nThe TCP flags and masks to inspect for. If not specified, this matches with any settings. This setting is only used for protocol 6 (TCP).\n\n(structure)\n\nTCP flags and masks to inspect packets for, used in stateless rules MatchAttributes settings.\n\nFlags -> (list)\n\nUsed in conjunction with the Masks setting to define the flags that must be set and flags that must not be set in order for the packet to match. This setting can only specify values that are also specified in the Masks setting.\n\nFor the flags that are specified in the masks setting, the following must be true for the packet to match:\n\nThe ones that are set in this flags setting must be set in the packet.\n\nThe ones that are not set in this flags setting must also not be set in the packet.\n\n(string)\n\nMasks -> (list)\n\nThe set of flags to consider in the inspection. To inspect all flags in the valid values list, leave this with no setting.\n\n(string)\n\nActions -> (list)\n\nThe actions to take on a packet that matches one of the stateless rule definition’s match attributes. You must specify a standard action and you can add custom actions.\n\nNote\n\nNetwork Firewall only forwards a packet for stateful rule inspection if you specify aws:forward_to_sfe for a rule that the packet matches, or if the packet doesn’t match any stateless rule and you specify aws:forward_to_sfe for the StatelessDefaultActions setting for the FirewallPolicy .\n\nFor every rule, you must specify exactly one of the following standard actions.\n\naws:pass - Discontinues all inspection of the packet and permits it to go to its intended destination.\n\naws:drop - Discontinues all inspection of the packet and blocks it from going to its intended destination.\n\naws:forward_to_sfe - Discontinues stateless inspection of the packet and forwards it to the stateful rule engine for inspection.\n\nAdditionally, you can specify a custom action. To do this, you define a custom action by name and type, then provide the name you’ve assigned to the action in this Actions setting. For information about the options, see CustomAction .\n\nTo provide more than one action in this setting, separate the settings with a comma. For example, if you have a custom PublishMetrics action that you’ve named MyMetricsAction , then you could specify the standard action aws:pass and the custom action with [“aws:pass”, “MyMetricsAction”] .\n\n(string)\n\nPriority -> (integer)\n\nIndicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. Network Firewall evaluates the rules in a rule group starting with the lowest priority setting. You must ensure that the priority settings are unique for the rule group.\n\nEach stateless rule group uses exactly one StatelessRulesAndCustomActions object, and each StatelessRulesAndCustomActions contains exactly one StatelessRules object. To ensure unique priority settings for your rule groups, set unique priorities for the stateless rules that you define inside any single StatelessRules object.\n\nYou can change the priority settings of your rules at any time. To make it easier to insert rules later, number them so there’s a wide range in between, for example use 100, 200, and so on.\n\nCustomActions -> (list)\n\nDefines an array of individual custom action definitions that are available for use by the stateless rules in this StatelessRulesAndCustomActions specification. You name each custom action that you define, and then you can use it by name in your StatelessRule RuleDefinition Actions specification.\n\n(structure)\n\nAn optional, non-standard action to use for stateless packet handling. You can define this in addition to the standard action that you must specify.\n\nYou define and name the custom actions that you want to be able to use, and then you reference them by name in your actions settings.\n\nYou can use custom actions in the following places:\n\nIn a rule group’s StatelessRulesAndCustomActions specification. The custom actions are available for use by name inside the StatelessRulesAndCustomActions where you define them. You can use them for your stateless rule actions to specify what to do with a packet that matches the rule’s match attributes.\n\nIn a FirewallPolicy specification, in StatelessCustomActions . The custom actions are available for use inside the policy where you define them. You can use them for the policy’s default stateless actions settings to specify what to do with packets that don’t match any of the policy’s stateless rules.\n\nActionName -> (string)\n\nThe descriptive name of the custom action. You can’t change the name of a custom action after you create it.\n\nActionDefinition -> (structure)\n\nThe custom action associated with the action name.\n\nPublishMetricAction -> (structure)\n\nStateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. This setting defines a CloudWatch dimension value to be published.\n\nYou can pair this custom action with any of the standard stateless rule actions. For example, you could pair this in a rule action with the standard action that forwards the packet for stateful inspection. Then, when a packet matches the rule, Network Firewall publishes metrics for the packet and forwards it.\n\nDimensions -> (list)\n\n(structure)\n\nThe value to use in an Amazon CloudWatch custom metric dimension. This is used in the PublishMetrics CustomAction . A CloudWatch custom metric dimension is a name/value pair that’s part of the identity of a metric.\n\nAWS Network Firewall sets the dimension name to CustomAction and you provide the dimension value.\n\nFor more information about CloudWatch custom metric dimensions, see Publishing Custom Metrics in the Amazon CloudWatch User Guide .\n\nValue -> (string)\n\nThe value to use in the custom metric dimension.\n\nStatefulRuleOptions -> (structure)\n\nAdditional options governing how Network Firewall handles stateful rules. The policies where you use your stateful rule group must have stateful rule options settings that are compatible with these settings.\n\nRuleOrder -> (string)\n\nIndicates how to manage the order of the rule evaluation for the rule group. By default, Network Firewall leaves the rule evaluation order up to the Suricata rule processing engine. If you set this to STRICT_ORDER , your rules are evaluated in the exact order that they’re listed in your Suricata rules string.\n\nRuleGroupResponse -> (structure)\n\nThe high-level properties of a rule group. This, along with the RuleGroup , define the rule group. You can retrieve all objects for a rule group by calling DescribeRuleGroup .\n\nRuleGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the rule group.\n\nNote\n\nIf this response is for a create request that had DryRun set to TRUE , then this ARN is a placeholder that isn’t attached to a valid resource.\n\nRuleGroupName -> (string)\n\nThe descriptive name of the rule group. You can’t change the name of a rule group after you create it.\n\nRuleGroupId -> (string)\n\nThe unique identifier for the rule group.\n\nDescription -> (string)\n\nA description of the rule group.\n\nType -> (string)\n\nIndicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.\n\nCapacity -> (integer)\n\nThe maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group.\n\nYou can retrieve the capacity that would be required for a rule group before you create the rule group by calling CreateRuleGroup with DryRun set to TRUE .\n\nRuleGroupStatus -> (string)\n\nDetailed information about the current status of a rule group.\n\nTags -> (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nConsumedCapacity -> (integer)\n\nThe number of capacity units currently consumed by the rule group rules.\n\nNumberOfAssociations -> (integer)\n\nThe number of firewall policies that use this rule group."
    },
    {
      "command_name": "disassociate-subnets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/disassociate-subnets.html",
      "command_description": "Description\n\nRemoves the specified subnet associations from the firewall. This removes the firewall endpoints from the subnets and removes any network filtering protections that the endpoints were providing.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-subnets\n[--update-token <value>]\n[--firewall-arn <value>]\n[--firewall-name <value>]\n--subnet-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--update-token <value>]",
        "[--firewall-arn <value>]",
        "[--firewall-name <value>]",
        "--subnet-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--update-token (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token.\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--subnet-ids (list)\n\nThe unique identifiers for the subnets that you want to disassociate.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nSubnetMappings -> (list)\n\nThe IDs of the subnets that are associated with the firewall.\n\n(structure)\n\nThe ID for a subnet that you want to associate with the firewall. This is used with CreateFirewall and AssociateSubnets . AWS Network Firewall creates an instance of the associated firewall in each subnet that you specify, to filter traffic in the subnet’s Availability Zone.\n\nSubnetId -> (string)\n\nThe unique identifier for the subnet.\n\nUpdateToken -> (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
    },
    {
      "command_name": "list-firewall-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/list-firewall-policies.html",
      "command_description": "Description\n\nRetrieves the metadata for the firewall policies that you have defined. Depending on your setting for max results and the number of firewall policies, a single call might not return the full list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-firewall-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FirewallPolicies",
      "command_synopsis": "Synopsis\n  list-firewall-policies\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nWhen you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request.\n\nFirewallPolicies -> (list)\n\nThe metadata for the firewall policies. Depending on your setting for max results and the number of firewall policies that you have, this might not be the full list.\n\n(structure)\n\nHigh-level information about a firewall policy, returned by operations like create and describe. You can use the information provided in the metadata to retrieve and manage a firewall policy. You can retrieve all objects for a firewall policy by calling DescribeFirewallPolicy .\n\nName -> (string)\n\nThe descriptive name of the firewall policy. You can’t change the name of a firewall policy after you create it.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy."
    },
    {
      "command_name": "list-firewalls",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/list-firewalls.html",
      "command_description": "Description\n\nRetrieves the metadata for the firewalls that you have defined. If you provide VPC identifiers in your request, this returns only the firewalls for those VPCs.\n\nDepending on your setting for max results and the number of firewalls, a single call might not return the full list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-firewalls is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Firewalls",
      "command_synopsis": "Synopsis\n  list-firewalls\n[--vpc-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--vpc-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--vpc-ids (list)\n\nThe unique identifiers of the VPCs that you want Network Firewall to retrieve the firewalls for. Leave this blank to retrieve all firewalls that you have defined.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nWhen you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request.\n\nFirewalls -> (list)\n\nThe firewall metadata objects for the VPCs that you specified. Depending on your setting for max results and the number of firewalls you have, a single call might not be the full list.\n\n(structure)\n\nHigh-level information about a firewall, returned by operations like create and describe. You can use the information provided in the metadata to retrieve and manage a firewall.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall."
    },
    {
      "command_name": "list-rule-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/list-rule-groups.html",
      "command_description": "Description\n\nRetrieves the metadata for the rule groups that you have defined. Depending on your setting for max results and the number of rule groups, a single call might not return the full list.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-rule-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: RuleGroups",
      "command_synopsis": "Synopsis\n  list-rule-groups\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nWhen you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request.\n\nRuleGroups -> (list)\n\nThe rule group metadata objects that you’ve defined. Depending on your setting for max results and the number of rule groups, this might not be the full list.\n\n(structure)\n\nHigh-level information about a rule group, returned by ListRuleGroups . You can use the information provided in the metadata to retrieve and manage a rule group.\n\nName -> (string)\n\nThe descriptive name of the rule group. You can’t change the name of a rule group after you create it.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the rule group."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/list-tags-for-resource.html",
      "command_description": "Description\n\nRetrieves the tags associated with the specified resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to “customer” and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.\n\nYou can tag the AWS resources that you manage through AWS Network Firewall: firewalls, firewall policies, and rule groups.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-tags-for-resource is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Tags",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nWhen you request a list of objects with a MaxResults setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a NextToken value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request.\n\nTags -> (list)\n\nThe tags that are associated with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive."
    },
    {
      "command_name": "put-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/put-resource-policy.html",
      "command_description": "Description\n\nCreates or updates an AWS Identity and Access Management policy for your rule group or firewall policy. Use this to share rule groups and firewall policies between accounts. This operation works in conjunction with the AWS Resource Access Manager (RAM) service to manage resource sharing for Network Firewall.\n\nUse this operation to create or update a resource policy for your rule group or firewall policy. In the policy, you specify the accounts that you want to share the resource with and the operations that you want the accounts to be able to perform.\n\nWhen you add an account in the resource policy, you then run the following Resource Access Manager (RAM) operations to access and accept the shared rule group or firewall policy.\n\nGetResourceShareInvitations - Returns the Amazon Resource Names (ARNs) of the resource share invitations.\n\nAcceptResourceShareInvitation - Accepts the share invitation for a specified resource share.\n\nFor additional information about resource sharing using RAM, see AWS Resource Access Manager User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-resource-policy\n--resource-arn <value>\n--policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the account that you want to share rule groups and firewall policies with.\n\n--policy (string)\n\nThe AWS Identity and Access Management policy statement that lists the accounts that you want to share your rule group or firewall policy with and the operations that you want the accounts to be able to perform.\n\nFor a rule group resource, you can specify the following operations in the Actions section of the statement:\n\nnetwork-firewall:CreateFirewallPolicy\n\nnetwork-firewall:UpdateFirewallPolicy\n\nnetwork-firewall:ListRuleGroups\n\nFor a firewall policy resource, you can specify the following operations in the Actions section of the statement:\n\nnetwork-firewall:CreateFirewall\n\nnetwork-firewall:UpdateFirewall\n\nnetwork-firewall:AssociateFirewallPolicy\n\nnetwork-firewall:ListFirewallPolicies\n\nIn the Resource section of the statement, you specify the ARNs for the rule groups and firewall policies that you want to share with the account that you specified in Arn .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/tag-resource.html",
      "command_description": "Description\n\nAdds the specified tags to the specified resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to “customer” and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.\n\nYou can tag the AWS resources that you manage through AWS Network Firewall: firewalls, firewall policies, and rule groups.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource.\n\n--tags (list)\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/untag-resource.html",
      "command_description": "Description\n\nRemoves the tags with the specified keys from the specified resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to “customer” and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.\n\nYou can manage tags for the AWS resources that you manage through AWS Network Firewall: firewalls, firewall policies, and rule groups.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource.\n\n--tag-keys (list)\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-firewall-delete-protection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/update-firewall-delete-protection.html",
      "command_description": "Description\n\nModifies the flag, DeleteProtection , which indicates whether it is possible to delete the firewall. If the flag is set to TRUE , the firewall is protected against deletion. This setting helps protect against accidentally deleting a firewall that’s in use.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-firewall-delete-protection\n[--update-token <value>]\n[--firewall-arn <value>]\n[--firewall-name <value>]\n--delete-protection | --no-delete-protection\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--update-token <value>]",
        "[--firewall-arn <value>]",
        "[--firewall-name <value>]",
        "--delete-protection | --no-delete-protection",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--update-token (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token.\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--delete-protection | --no-delete-protection (boolean)\n\nA flag indicating whether it is possible to delete the firewall. A setting of TRUE indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to TRUE .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nDeleteProtection -> (boolean)\n\nUpdateToken -> (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
    },
    {
      "command_name": "update-firewall-description",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/update-firewall-description.html",
      "command_description": "Description\n\nModifies the description for the specified firewall. Use the description to help you identify the firewall when you’re working with it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-firewall-description\n[--update-token <value>]\n[--firewall-arn <value>]\n[--firewall-name <value>]\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--update-token <value>]",
        "[--firewall-arn <value>]",
        "[--firewall-name <value>]",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--update-token (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token.\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--description (string)\n\nThe new description for the firewall. If you omit this setting, Network Firewall removes the description for the firewall.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nDescription -> (string)\n\nA description of the firewall.\n\nUpdateToken -> (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token."
    },
    {
      "command_name": "update-firewall-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/update-firewall-policy.html",
      "command_description": "Description\n\nUpdates the properties of the specified firewall policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-firewall-policy\n--update-token <value>\n[--firewall-policy-arn <value>]\n[--firewall-policy-name <value>]\n--firewall-policy <value>\n[--description <value>]\n[--dry-run | --no-dry-run]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--update-token <value>",
        "[--firewall-policy-arn <value>]",
        "[--firewall-policy-name <value>]",
        "--firewall-policy <value>",
        "[--description <value>]",
        "[--dry-run | --no-dry-run]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--update-token (string)\n\nA token used for optimistic locking. Network Firewall returns a token to your requests that access the firewall policy. The token marks the state of the policy resource at the time of the request.\n\nTo make changes to the policy, you provide the token in your request. Network Firewall uses the token to ensure that the policy hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall policy again to get a current copy of it with current token. Reapply your changes as needed, then try the operation again using the new token.\n\n--firewall-policy-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-policy-name (string)\n\nThe descriptive name of the firewall policy. You can’t change the name of a firewall policy after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-policy (structure)\n\nThe updated firewall policy to use for the firewall.\n\nStatelessRuleGroupReferences -> (list)\n\nReferences to the stateless rule groups that are used in the policy. These define the matching criteria in stateless rules.\n\n(structure)\n\nIdentifier for a single stateless rule group, used in a firewall policy to refer to the rule group.\n\nResourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the stateless rule group.\n\nPriority -> (integer)\n\nAn integer setting that indicates the order in which to run the stateless rule groups in a single FirewallPolicy . Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting. You must ensure that the priority settings are unique within each policy.\n\nStatelessDefaultActions -> (list)\n\nThe actions to take on a packet if it doesn’t match any of the stateless rules in the policy. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe .\n\nYou must specify one of the standard actions: aws:pass , aws:drop , or aws:forward_to_sfe . In addition, you can specify custom actions that are compatible with your standard section choice.\n\nFor example, you could specify [\"aws:pass\"] or you could specify [\"aws:pass\", “customActionName”] . For information about compatibility, see the custom action descriptions under CustomAction .\n\n(string)\n\nStatelessFragmentDefaultActions -> (list)\n\nThe actions to take on a fragmented UDP packet if it doesn’t match any of the stateless rules in the policy. Network Firewall only manages UDP packet fragments and silently drops packet fragments for other protocols. If you want non-matching fragmented UDP packets to be forwarded for stateful inspection, specify aws:forward_to_sfe .\n\nYou must specify one of the standard actions: aws:pass , aws:drop , or aws:forward_to_sfe . In addition, you can specify custom actions that are compatible with your standard section choice.\n\nFor example, you could specify [\"aws:pass\"] or you could specify [\"aws:pass\", “customActionName”] . For information about compatibility, see the custom action descriptions under CustomAction .\n\n(string)\n\nStatelessCustomActions -> (list)\n\nThe custom action definitions that are available for use in the firewall policy’s StatelessDefaultActions setting. You name each custom action that you define, and then you can use it by name in your default actions specifications.\n\n(structure)\n\nAn optional, non-standard action to use for stateless packet handling. You can define this in addition to the standard action that you must specify.\n\nYou define and name the custom actions that you want to be able to use, and then you reference them by name in your actions settings.\n\nYou can use custom actions in the following places:\n\nIn a rule group’s StatelessRulesAndCustomActions specification. The custom actions are available for use by name inside the StatelessRulesAndCustomActions where you define them. You can use them for your stateless rule actions to specify what to do with a packet that matches the rule’s match attributes.\n\nIn a FirewallPolicy specification, in StatelessCustomActions . The custom actions are available for use inside the policy where you define them. You can use them for the policy’s default stateless actions settings to specify what to do with packets that don’t match any of the policy’s stateless rules.\n\nActionName -> (string)\n\nThe descriptive name of the custom action. You can’t change the name of a custom action after you create it.\n\nActionDefinition -> (structure)\n\nThe custom action associated with the action name.\n\nPublishMetricAction -> (structure)\n\nStateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. This setting defines a CloudWatch dimension value to be published.\n\nYou can pair this custom action with any of the standard stateless rule actions. For example, you could pair this in a rule action with the standard action that forwards the packet for stateful inspection. Then, when a packet matches the rule, Network Firewall publishes metrics for the packet and forwards it.\n\nDimensions -> (list)\n\n(structure)\n\nThe value to use in an Amazon CloudWatch custom metric dimension. This is used in the PublishMetrics CustomAction . A CloudWatch custom metric dimension is a name/value pair that’s part of the identity of a metric.\n\nAWS Network Firewall sets the dimension name to CustomAction and you provide the dimension value.\n\nFor more information about CloudWatch custom metric dimensions, see Publishing Custom Metrics in the Amazon CloudWatch User Guide .\n\nValue -> (string)\n\nThe value to use in the custom metric dimension.\n\nStatefulRuleGroupReferences -> (list)\n\nReferences to the stateful rule groups that are used in the policy. These define the inspection criteria in stateful rules.\n\n(structure)\n\nIdentifier for a single stateful rule group, used in a firewall policy to refer to a rule group.\n\nResourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the stateful rule group.\n\nPriority -> (integer)\n\nAn integer setting that indicates the order in which to run the stateful rule groups in a single FirewallPolicy . This setting only applies to firewall policies that specify the STRICT_ORDER rule order in the stateful engine options settings.\n\nNetwork Firewall evalutes each stateful rule group against a packet starting with the group that has the lowest priority setting. You must ensure that the priority settings are unique within each policy.\n\nYou can change the priority settings of your rule groups at any time. To make it easier to insert rule groups later, number them so there’s a wide range in between, for example use 100, 200, and so on.\n\nStatefulDefaultActions -> (list)\n\nThe default actions to take on a packet that doesn’t match any stateful rules.\n\n(string)\n\nStatefulEngineOptions -> (structure)\n\nAdditional options governing how Network Firewall handles stateful rules. The stateful rule groups that you use in your policy must have stateful rule options settings that are compatible with these settings.\n\nRuleOrder -> (string)\n\nIndicates how to manage the order of stateful rule evaluation for the policy. By default, Network Firewall leaves the rule evaluation order up to the Suricata rule processing engine. If you set this to STRICT_ORDER , your rules are evaluated in the exact order that you provide them in the policy. With strict ordering, the rule groups are evaluated by order of priority, starting from the lowest number, and the rules in each rule group are processed in the order that they’re defined.\n\nJSON Syntax:\n\n{\n  \"StatelessRuleGroupReferences\": [\n    {\n      \"ResourceArn\": \"string\",\n      \"Priority\": integer\n    }\n    ...\n  ],\n  \"StatelessDefaultActions\": [\"string\", ...],\n  \"StatelessFragmentDefaultActions\": [\"string\", ...],\n  \"StatelessCustomActions\": [\n    {\n      \"ActionName\": \"string\",\n      \"ActionDefinition\": {\n        \"PublishMetricAction\": {\n          \"Dimensions\": [\n            {\n              \"Value\": \"string\"\n            }\n            ...\n          ]\n        }\n      }\n    }\n    ...\n  ],\n  \"StatefulRuleGroupReferences\": [\n    {\n      \"ResourceArn\": \"string\",\n      \"Priority\": integer\n    }\n    ...\n  ],\n  \"StatefulDefaultActions\": [\"string\", ...],\n  \"StatefulEngineOptions\": {\n    \"RuleOrder\": \"DEFAULT_ACTION_ORDER\"|\"STRICT_ORDER\"\n  }\n}\n\n\n--description (string)\n\nA description of the firewall policy.\n\n--dry-run | --no-dry-run (boolean)\n\nIndicates whether you want Network Firewall to just check the validity of the request, rather than run the request.\n\nIf set to TRUE , Network Firewall checks whether the request can run successfully, but doesn’t actually make the requested changes. The call returns the value that the request would return if you ran it with dry run set to FALSE , but doesn’t make additions or changes to your resources. This option allows you to make sure that you have the required permissions to run the request and that your request parameters are valid.\n\nIf set to FALSE , Network Firewall makes the requested changes to your resources.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpdateToken -> (string)\n\nA token used for optimistic locking. Network Firewall returns a token to your requests that access the firewall policy. The token marks the state of the policy resource at the time of the request.\n\nTo make changes to the policy, you provide the token in your request. Network Firewall uses the token to ensure that the policy hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall policy again to get a current copy of it with current token. Reapply your changes as needed, then try the operation again using the new token.\n\nFirewallPolicyResponse -> (structure)\n\nThe high-level properties of a firewall policy. This, along with the FirewallPolicy , define the policy. You can retrieve all objects for a firewall policy by calling DescribeFirewallPolicy .\n\nFirewallPolicyName -> (string)\n\nThe descriptive name of the firewall policy. You can’t change the name of a firewall policy after you create it.\n\nFirewallPolicyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall policy.\n\nNote\n\nIf this response is for a create request that had DryRun set to TRUE , then this ARN is a placeholder that isn’t attached to a valid resource.\n\nFirewallPolicyId -> (string)\n\nThe unique identifier for the firewall policy.\n\nDescription -> (string)\n\nA description of the firewall policy.\n\nFirewallPolicyStatus -> (string)\n\nThe current status of the firewall policy. You can retrieve this for a firewall policy by calling DescribeFirewallPolicy and providing the firewall policy’s name or ARN.\n\nTags -> (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nConsumedStatelessRuleCapacity -> (integer)\n\nThe number of capacity units currently consumed by the policy’s stateless rules.\n\nConsumedStatefulRuleCapacity -> (integer)\n\nThe number of capacity units currently consumed by the policy’s stateful rules.\n\nNumberOfAssociations -> (integer)\n\nThe number of firewalls that are associated with this firewall policy."
    },
    {
      "command_name": "update-firewall-policy-change-protection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/update-firewall-policy-change-protection.html",
      "command_description": "Description\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-firewall-policy-change-protection\n[--update-token <value>]\n[--firewall-arn <value>]\n[--firewall-name <value>]\n--firewall-policy-change-protection | --no-firewall-policy-change-protection\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--update-token <value>]",
        "[--firewall-arn <value>]",
        "[--firewall-name <value>]",
        "--firewall-policy-change-protection | --no-firewall-policy-change-protection",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--update-token (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token.\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-policy-change-protection | --no-firewall-policy-change-protection (boolean)\n\nA setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpdateToken -> (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token.\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nFirewallPolicyChangeProtection -> (boolean)\n\nA setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE ."
    },
    {
      "command_name": "update-logging-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/update-logging-configuration.html",
      "command_description": "Description\n\nSets the logging configuration for the specified firewall.\n\nTo change the logging configuration, retrieve the LoggingConfiguration by calling DescribeLoggingConfiguration , then change it and provide the modified object to this update call. You must change the logging configuration one LogDestinationConfig at a time inside the retrieved LoggingConfiguration object.\n\nYou can perform only one of the following actions in any call to UpdateLoggingConfiguration :\n\nCreate a new log destination object by adding a single LogDestinationConfig array element to LogDestinationConfigs .\n\nDelete a log destination object by removing a single LogDestinationConfig array element from LogDestinationConfigs .\n\nChange the LogDestination setting in a single LogDestinationConfig array element.\n\nYou can’t change the LogDestinationType or LogType in a LogDestinationConfig . To change these settings, delete the existing LogDestinationConfig object and create a new one, using two separate calls to this update operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-logging-configuration\n[--firewall-arn <value>]\n[--firewall-name <value>]\n[--logging-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--firewall-arn <value>]",
        "[--firewall-name <value>]",
        "[--logging-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--logging-configuration (structure)\n\nDefines how Network Firewall performs logging for a firewall. If you omit this setting, Network Firewall disables logging for the firewall.\n\nLogDestinationConfigs -> (list)\n\nDefines the logging destinations for the logs for a firewall. Network Firewall generates logs for stateful rule groups.\n\n(structure)\n\nDefines where AWS Network Firewall sends logs for the firewall for one log type. This is used in LoggingConfiguration . You can send each type of log to an Amazon S3 bucket, a CloudWatch log group, or a Kinesis Data Firehose delivery stream.\n\nNetwork Firewall generates logs for stateful rule groups. You can save alert and flow log types. The stateful rules engine records flow logs for all network traffic that it receives. It records alert logs for traffic that matches stateful rules that have the rule action set to DROP or ALERT .\n\nLogType -> (string)\n\nThe type of log to send. Alert logs report traffic that matches a StatefulRule with an action setting that sends an alert log message. Flow logs are standard network traffic flow logs.\n\nLogDestinationType -> (string)\n\nThe type of storage destination to send these logs to. You can send logs to an Amazon S3 bucket, a CloudWatch log group, or a Kinesis Data Firehose delivery stream.\n\nLogDestination -> (map)\n\nThe named location for the logs, provided in a key:value mapping that is specific to the chosen destination type.\n\nFor an Amazon S3 bucket, provide the name of the bucket, with key bucketName , and optionally provide a prefix, with key prefix . The following example specifies an Amazon S3 bucket named DOC-EXAMPLE-BUCKET and the prefix alerts : \"LogDestination\": { \"bucketName\": \"DOC-EXAMPLE-BUCKET\", \"prefix\": \"alerts\" }\n\nFor a CloudWatch log group, provide the name of the CloudWatch log group, with key logGroup . The following example specifies a log group named alert-log-group : \"LogDestination\": { \"logGroup\": \"alert-log-group\" }\n\nFor a Kinesis Data Firehose delivery stream, provide the name of the delivery stream, with key deliveryStream . The following example specifies a delivery stream named alert-delivery-stream : \"LogDestination\": { \"deliveryStream\": \"alert-delivery-stream\" }\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nLogDestinationConfigs=[{LogType=string,LogDestinationType=string,LogDestination={KeyName1=string,KeyName2=string}},{LogType=string,LogDestinationType=string,LogDestination={KeyName1=string,KeyName2=string}}]\n\n\nJSON Syntax:\n\n{\n  \"LogDestinationConfigs\": [\n    {\n      \"LogType\": \"ALERT\"|\"FLOW\",\n      \"LogDestinationType\": \"S3\"|\"CloudWatchLogs\"|\"KinesisDataFirehose\",\n      \"LogDestination\": {\"string\": \"string\"\n        ...}\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nLoggingConfiguration -> (structure)\n\nDefines how AWS Network Firewall performs logging for a Firewall .\n\nLogDestinationConfigs -> (list)\n\nDefines the logging destinations for the logs for a firewall. Network Firewall generates logs for stateful rule groups.\n\n(structure)\n\nDefines where AWS Network Firewall sends logs for the firewall for one log type. This is used in LoggingConfiguration . You can send each type of log to an Amazon S3 bucket, a CloudWatch log group, or a Kinesis Data Firehose delivery stream.\n\nNetwork Firewall generates logs for stateful rule groups. You can save alert and flow log types. The stateful rules engine records flow logs for all network traffic that it receives. It records alert logs for traffic that matches stateful rules that have the rule action set to DROP or ALERT .\n\nLogType -> (string)\n\nThe type of log to send. Alert logs report traffic that matches a StatefulRule with an action setting that sends an alert log message. Flow logs are standard network traffic flow logs.\n\nLogDestinationType -> (string)\n\nThe type of storage destination to send these logs to. You can send logs to an Amazon S3 bucket, a CloudWatch log group, or a Kinesis Data Firehose delivery stream.\n\nLogDestination -> (map)\n\nThe named location for the logs, provided in a key:value mapping that is specific to the chosen destination type.\n\nFor an Amazon S3 bucket, provide the name of the bucket, with key bucketName , and optionally provide a prefix, with key prefix . The following example specifies an Amazon S3 bucket named DOC-EXAMPLE-BUCKET and the prefix alerts : \"LogDestination\": { \"bucketName\": \"DOC-EXAMPLE-BUCKET\", \"prefix\": \"alerts\" }\n\nFor a CloudWatch log group, provide the name of the CloudWatch log group, with key logGroup . The following example specifies a log group named alert-log-group : \"LogDestination\": { \"logGroup\": \"alert-log-group\" }\n\nFor a Kinesis Data Firehose delivery stream, provide the name of the delivery stream, with key deliveryStream . The following example specifies a delivery stream named alert-delivery-stream : \"LogDestination\": { \"deliveryStream\": \"alert-delivery-stream\" }\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "update-rule-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/update-rule-group.html",
      "command_description": "Description\n\nUpdates the rule settings for the specified rule group. You use a rule group by reference in one or more firewall policies. When you modify a rule group, you modify all firewall policies that use the rule group.\n\nTo update a rule group, first call DescribeRuleGroup to retrieve the current RuleGroup object, update the object as needed, and then provide the updated object to this call.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-rule-group\n--update-token <value>\n[--rule-group-arn <value>]\n[--rule-group-name <value>]\n[--rule-group <value>]\n[--rules <value>]\n[--type <value>]\n[--description <value>]\n[--dry-run | --no-dry-run]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--update-token <value>",
        "[--rule-group-arn <value>]",
        "[--rule-group-name <value>]",
        "[--rule-group <value>]",
        "[--rules <value>]",
        "[--type <value>]",
        "[--description <value>]",
        "[--dry-run | --no-dry-run]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--update-token (string)\n\nA token used for optimistic locking. Network Firewall returns a token to your requests that access the rule group. The token marks the state of the rule group resource at the time of the request.\n\nTo make changes to the rule group, you provide the token in your request. Network Firewall uses the token to ensure that the rule group hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the rule group again to get a current copy of it with a current token. Reapply your changes as needed, then try the operation again using the new token.\n\n--rule-group-arn (string)\n\nThe Amazon Resource Name (ARN) of the rule group.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--rule-group-name (string)\n\nThe descriptive name of the rule group. You can’t change the name of a rule group after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--rule-group (structure)\n\nAn object that defines the rule group rules.\n\nNote\n\nYou must provide either this rule group setting or a Rules setting, but not both.\n\nRuleVariables -> (structure)\n\nSettings that are available for use in the rules in the rule group. You can only use these for stateful rule groups.\n\nIPSets -> (map)\n\nA list of IP addresses and address ranges, in CIDR notation.\n\nkey -> (string)\n\nvalue -> (structure)\n\nA list of IP addresses and address ranges, in CIDR notation. This is part of a RuleVariables .\n\nDefinition -> (list)\n\nThe list of IP addresses and address ranges, in CIDR notation.\n\n(string)\n\nPortSets -> (map)\n\nA list of port ranges.\n\nkey -> (string)\n\nvalue -> (structure)\n\nA set of port ranges for use in the rules in a rule group.\n\nDefinition -> (list)\n\nThe set of port ranges.\n\n(string)\n\nRulesSource -> (structure)\n\nThe stateful rules or stateless rules for the rule group.\n\nRulesString -> (string)\n\nStateful inspection criteria, provided in Suricata compatible intrusion prevention system (IPS) rules. Suricata is an open-source network IPS that includes a standard rule-based language for network traffic inspection.\n\nThese rules contain the inspection criteria and the action to take for traffic that matches the criteria, so this type of rule group doesn’t have a separate action setting.\n\nRulesSourceList -> (structure)\n\nStateful inspection criteria for a domain list rule group.\n\nTargets -> (list)\n\nThe domains that you want to inspect for in your traffic flows. To provide multiple domains, separate them with commas. Valid domain specifications are the following:\n\nExplicit names. For example, abc.example.com matches only the domain abc.example.com .\n\nNames that use a domain wildcard, which you indicate with an initial ‘. ‘. For example,``.example.com`` matches example.com and matches all subdomains of example.com , such as abc.example.com and www.example.com .\n\n(string)\n\nTargetTypes -> (list)\n\nThe protocols you want to inspect. Specify TLS_SNI for HTTPS . Specify HTTP_HOST for HTTP . You can specify either or both.\n\n(string)\n\nGeneratedRulesType -> (string)\n\nWhether you want to allow or deny access to the domains in your target list.\n\nStatefulRules -> (list)\n\nAn array of individual stateful rules inspection criteria to be used together in a stateful rule group. Use this option to specify simple Suricata rules with protocol, source and destination, ports, direction, and rule options. For information about the Suricata Rules format, see Rules Format .\n\n(structure)\n\nA single Suricata rules specification, for use in a stateful rule group. Use this option to specify a simple Suricata rule with protocol, source and destination, ports, direction, and rule options. For information about the Suricata Rules format, see Rules Format .\n\nAction -> (string)\n\nDefines what Network Firewall should do with the packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow.\n\nThe actions for a stateful rule are defined as follows:\n\nPASS - Permits the packets to go to the intended destination.\n\nDROP - Blocks the packets from going to the intended destination and sends an alert log message, if alert logging is configured in the Firewall LoggingConfiguration .\n\nALERT - Permits the packets to go to the intended destination and sends an alert log message, if alert logging is configured in the Firewall LoggingConfiguration . You can use this action to test a rule that you intend to use to drop traffic. You can enable the rule with ALERT action, verify in the logs that the rule is filtering as you want, then change the action to DROP .\n\nHeader -> (structure)\n\nThe stateful inspection criteria for this rule, used to inspect traffic flows.\n\nProtocol -> (string)\n\nThe protocol to inspect for. To specify all, you can use IP , because all traffic on AWS and on the internet is IP.\n\nSource -> (string)\n\nThe source IP address or address range to inspect for, in CIDR notation. To match with any address, specify ANY .\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nSourcePort -> (string)\n\nThe source port to inspect for. You can specify an individual port, for example 1994 and you can specify a port range, for example 1990:1994 . To match with any port, specify ANY .\n\nDirection -> (string)\n\nThe direction of traffic flow to inspect. If set to ANY , the inspection matches bidirectional traffic, both from the source to the destination and from the destination to the source. If set to FORWARD , the inspection only matches traffic going from the source to the destination.\n\nDestination -> (string)\n\nThe destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify ANY .\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nDestinationPort -> (string)\n\nThe destination port to inspect for. You can specify an individual port, for example 1994 and you can specify a port range, for example 1990:1994 . To match with any port, specify ANY .\n\nRuleOptions -> (list)\n\nAdditional options for the rule. These are the Suricata RuleOptions settings.\n\n(structure)\n\nAdditional settings for a stateful rule. This is part of the StatefulRule configuration.\n\nKeyword -> (string)\n\nSettings -> (list)\n\n(string)\n\nStatelessRulesAndCustomActions -> (structure)\n\nStateless inspection criteria to be used in a stateless rule group.\n\nStatelessRules -> (list)\n\nDefines the set of stateless rules for use in a stateless rule group.\n\n(structure)\n\nA single stateless rule. This is used in StatelessRulesAndCustomActions .\n\nRuleDefinition -> (structure)\n\nDefines the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria.\n\nMatchAttributes -> (structure)\n\nCriteria for Network Firewall to use to inspect an individual packet in stateless rule inspection. Each match attributes set can include one or more items such as IP address, CIDR range, port number, protocol, and TCP flags.\n\nSources -> (list)\n\nThe source IP addresses and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address.\n\n(structure)\n\nA single IP address specification. This is used in the MatchAttributes source and destination specifications.\n\nAddressDefinition -> (string)\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nDestinations -> (list)\n\nThe destination IP addresses and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address.\n\n(structure)\n\nA single IP address specification. This is used in the MatchAttributes source and destination specifications.\n\nAddressDefinition -> (string)\n\nSpecify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4.\n\nExamples:\n\nTo configure Network Firewall to inspect for the IP address 192.0.2.44, specify 192.0.2.44/32 .\n\nTo configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify 192.0.2.0/24 .\n\nFor more information about CIDR notation, see the Wikipedia entry Classless Inter-Domain Routing .\n\nSourcePorts -> (list)\n\nThe source ports to inspect for. If not specified, this matches with any source port. This setting is only used for protocols 6 (TCP) and 17 (UDP).\n\nYou can specify individual ports, for example 1994 and you can specify port ranges, for example 1990:1994 .\n\n(structure)\n\nA single port range specification. This is used for source and destination port ranges in the stateless rule MatchAttributes , SourcePorts , and DestinationPorts settings.\n\nFromPort -> (integer)\n\nThe lower limit of the port range. This must be less than or equal to the ToPort specification.\n\nToPort -> (integer)\n\nThe upper limit of the port range. This must be greater than or equal to the FromPort specification.\n\nDestinationPorts -> (list)\n\nThe destination ports to inspect for. If not specified, this matches with any destination port. This setting is only used for protocols 6 (TCP) and 17 (UDP).\n\nYou can specify individual ports, for example 1994 and you can specify port ranges, for example 1990:1994 .\n\n(structure)\n\nA single port range specification. This is used for source and destination port ranges in the stateless rule MatchAttributes , SourcePorts , and DestinationPorts settings.\n\nFromPort -> (integer)\n\nThe lower limit of the port range. This must be less than or equal to the ToPort specification.\n\nToPort -> (integer)\n\nThe upper limit of the port range. This must be greater than or equal to the FromPort specification.\n\nProtocols -> (list)\n\nThe protocols to inspect for, specified using each protocol’s assigned internet protocol number (IANA). If not specified, this matches with any protocol.\n\n(integer)\n\nTCPFlags -> (list)\n\nThe TCP flags and masks to inspect for. If not specified, this matches with any settings. This setting is only used for protocol 6 (TCP).\n\n(structure)\n\nTCP flags and masks to inspect packets for, used in stateless rules MatchAttributes settings.\n\nFlags -> (list)\n\nUsed in conjunction with the Masks setting to define the flags that must be set and flags that must not be set in order for the packet to match. This setting can only specify values that are also specified in the Masks setting.\n\nFor the flags that are specified in the masks setting, the following must be true for the packet to match:\n\nThe ones that are set in this flags setting must be set in the packet.\n\nThe ones that are not set in this flags setting must also not be set in the packet.\n\n(string)\n\nMasks -> (list)\n\nThe set of flags to consider in the inspection. To inspect all flags in the valid values list, leave this with no setting.\n\n(string)\n\nActions -> (list)\n\nThe actions to take on a packet that matches one of the stateless rule definition’s match attributes. You must specify a standard action and you can add custom actions.\n\nNote\n\nNetwork Firewall only forwards a packet for stateful rule inspection if you specify aws:forward_to_sfe for a rule that the packet matches, or if the packet doesn’t match any stateless rule and you specify aws:forward_to_sfe for the StatelessDefaultActions setting for the FirewallPolicy .\n\nFor every rule, you must specify exactly one of the following standard actions.\n\naws:pass - Discontinues all inspection of the packet and permits it to go to its intended destination.\n\naws:drop - Discontinues all inspection of the packet and blocks it from going to its intended destination.\n\naws:forward_to_sfe - Discontinues stateless inspection of the packet and forwards it to the stateful rule engine for inspection.\n\nAdditionally, you can specify a custom action. To do this, you define a custom action by name and type, then provide the name you’ve assigned to the action in this Actions setting. For information about the options, see CustomAction .\n\nTo provide more than one action in this setting, separate the settings with a comma. For example, if you have a custom PublishMetrics action that you’ve named MyMetricsAction , then you could specify the standard action aws:pass and the custom action with [“aws:pass”, “MyMetricsAction”] .\n\n(string)\n\nPriority -> (integer)\n\nIndicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. Network Firewall evaluates the rules in a rule group starting with the lowest priority setting. You must ensure that the priority settings are unique for the rule group.\n\nEach stateless rule group uses exactly one StatelessRulesAndCustomActions object, and each StatelessRulesAndCustomActions contains exactly one StatelessRules object. To ensure unique priority settings for your rule groups, set unique priorities for the stateless rules that you define inside any single StatelessRules object.\n\nYou can change the priority settings of your rules at any time. To make it easier to insert rules later, number them so there’s a wide range in between, for example use 100, 200, and so on.\n\nCustomActions -> (list)\n\nDefines an array of individual custom action definitions that are available for use by the stateless rules in this StatelessRulesAndCustomActions specification. You name each custom action that you define, and then you can use it by name in your StatelessRule RuleDefinition Actions specification.\n\n(structure)\n\nAn optional, non-standard action to use for stateless packet handling. You can define this in addition to the standard action that you must specify.\n\nYou define and name the custom actions that you want to be able to use, and then you reference them by name in your actions settings.\n\nYou can use custom actions in the following places:\n\nIn a rule group’s StatelessRulesAndCustomActions specification. The custom actions are available for use by name inside the StatelessRulesAndCustomActions where you define them. You can use them for your stateless rule actions to specify what to do with a packet that matches the rule’s match attributes.\n\nIn a FirewallPolicy specification, in StatelessCustomActions . The custom actions are available for use inside the policy where you define them. You can use them for the policy’s default stateless actions settings to specify what to do with packets that don’t match any of the policy’s stateless rules.\n\nActionName -> (string)\n\nThe descriptive name of the custom action. You can’t change the name of a custom action after you create it.\n\nActionDefinition -> (structure)\n\nThe custom action associated with the action name.\n\nPublishMetricAction -> (structure)\n\nStateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. This setting defines a CloudWatch dimension value to be published.\n\nYou can pair this custom action with any of the standard stateless rule actions. For example, you could pair this in a rule action with the standard action that forwards the packet for stateful inspection. Then, when a packet matches the rule, Network Firewall publishes metrics for the packet and forwards it.\n\nDimensions -> (list)\n\n(structure)\n\nThe value to use in an Amazon CloudWatch custom metric dimension. This is used in the PublishMetrics CustomAction . A CloudWatch custom metric dimension is a name/value pair that’s part of the identity of a metric.\n\nAWS Network Firewall sets the dimension name to CustomAction and you provide the dimension value.\n\nFor more information about CloudWatch custom metric dimensions, see Publishing Custom Metrics in the Amazon CloudWatch User Guide .\n\nValue -> (string)\n\nThe value to use in the custom metric dimension.\n\nStatefulRuleOptions -> (structure)\n\nAdditional options governing how Network Firewall handles stateful rules. The policies where you use your stateful rule group must have stateful rule options settings that are compatible with these settings.\n\nRuleOrder -> (string)\n\nIndicates how to manage the order of the rule evaluation for the rule group. By default, Network Firewall leaves the rule evaluation order up to the Suricata rule processing engine. If you set this to STRICT_ORDER , your rules are evaluated in the exact order that they’re listed in your Suricata rules string.\n\nJSON Syntax:\n\n{\n  \"RuleVariables\": {\n    \"IPSets\": {\"string\": {\n          \"Definition\": [\"string\", ...]\n        }\n      ...},\n    \"PortSets\": {\"string\": {\n          \"Definition\": [\"string\", ...]\n        }\n      ...}\n  },\n  \"RulesSource\": {\n    \"RulesString\": \"string\",\n    \"RulesSourceList\": {\n      \"Targets\": [\"string\", ...],\n      \"TargetTypes\": [\"TLS_SNI\"|\"HTTP_HOST\", ...],\n      \"GeneratedRulesType\": \"ALLOWLIST\"|\"DENYLIST\"\n    },\n    \"StatefulRules\": [\n      {\n        \"Action\": \"PASS\"|\"DROP\"|\"ALERT\",\n        \"Header\": {\n          \"Protocol\": \"IP\"|\"TCP\"|\"UDP\"|\"ICMP\"|\"HTTP\"|\"FTP\"|\"TLS\"|\"SMB\"|\"DNS\"|\"DCERPC\"|\"SSH\"|\"SMTP\"|\"IMAP\"|\"MSN\"|\"KRB5\"|\"IKEV2\"|\"TFTP\"|\"NTP\"|\"DHCP\",\n          \"Source\": \"string\",\n          \"SourcePort\": \"string\",\n          \"Direction\": \"FORWARD\"|\"ANY\",\n          \"Destination\": \"string\",\n          \"DestinationPort\": \"string\"\n        },\n        \"RuleOptions\": [\n          {\n            \"Keyword\": \"string\",\n            \"Settings\": [\"string\", ...]\n          }\n          ...\n        ]\n      }\n      ...\n    ],\n    \"StatelessRulesAndCustomActions\": {\n      \"StatelessRules\": [\n        {\n          \"RuleDefinition\": {\n            \"MatchAttributes\": {\n              \"Sources\": [\n                {\n                  \"AddressDefinition\": \"string\"\n                }\n                ...\n              ],\n              \"Destinations\": [\n                {\n                  \"AddressDefinition\": \"string\"\n                }\n                ...\n              ],\n              \"SourcePorts\": [\n                {\n                  \"FromPort\": integer,\n                  \"ToPort\": integer\n                }\n                ...\n              ],\n              \"DestinationPorts\": [\n                {\n                  \"FromPort\": integer,\n                  \"ToPort\": integer\n                }\n                ...\n              ],\n              \"Protocols\": [integer, ...],\n              \"TCPFlags\": [\n                {\n                  \"Flags\": [\"FIN\"|\"SYN\"|\"RST\"|\"PSH\"|\"ACK\"|\"URG\"|\"ECE\"|\"CWR\", ...],\n                  \"Masks\": [\"FIN\"|\"SYN\"|\"RST\"|\"PSH\"|\"ACK\"|\"URG\"|\"ECE\"|\"CWR\", ...]\n                }\n                ...\n              ]\n            },\n            \"Actions\": [\"string\", ...]\n          },\n          \"Priority\": integer\n        }\n        ...\n      ],\n      \"CustomActions\": [\n        {\n          \"ActionName\": \"string\",\n          \"ActionDefinition\": {\n            \"PublishMetricAction\": {\n              \"Dimensions\": [\n                {\n                  \"Value\": \"string\"\n                }\n                ...\n              ]\n            }\n          }\n        }\n        ...\n      ]\n    }\n  },\n  \"StatefulRuleOptions\": {\n    \"RuleOrder\": \"DEFAULT_ACTION_ORDER\"|\"STRICT_ORDER\"\n  }\n}\n\n\n--rules (string)\n\nA string containing stateful rule group rules specifications in Suricata flat format, with one rule per line. Use this to import your existing Suricata compatible rule groups.\n\nNote\n\nYou must provide either this rules setting or a populated RuleGroup setting, but not both.\n\nYou can provide your rule group specification in Suricata flat format through this setting when you create or update your rule group. The call response returns a RuleGroup object that Network Firewall has populated from your string.\n\n--type (string)\n\nIndicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.\n\nNote\n\nThis setting is required for requests that do not include the RuleGroupARN .\n\nPossible values:\n\nSTATELESS\n\nSTATEFUL\n\n--description (string)\n\nA description of the rule group.\n\n--dry-run | --no-dry-run (boolean)\n\nIndicates whether you want Network Firewall to just check the validity of the request, rather than run the request.\n\nIf set to TRUE , Network Firewall checks whether the request can run successfully, but doesn’t actually make the requested changes. The call returns the value that the request would return if you ran it with dry run set to FALSE , but doesn’t make additions or changes to your resources. This option allows you to make sure that you have the required permissions to run the request and that your request parameters are valid.\n\nIf set to FALSE , Network Firewall makes the requested changes to your resources.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpdateToken -> (string)\n\nA token used for optimistic locking. Network Firewall returns a token to your requests that access the rule group. The token marks the state of the rule group resource at the time of the request.\n\nTo make changes to the rule group, you provide the token in your request. Network Firewall uses the token to ensure that the rule group hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the rule group again to get a current copy of it with a current token. Reapply your changes as needed, then try the operation again using the new token.\n\nRuleGroupResponse -> (structure)\n\nThe high-level properties of a rule group. This, along with the RuleGroup , define the rule group. You can retrieve all objects for a rule group by calling DescribeRuleGroup .\n\nRuleGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the rule group.\n\nNote\n\nIf this response is for a create request that had DryRun set to TRUE , then this ARN is a placeholder that isn’t attached to a valid resource.\n\nRuleGroupName -> (string)\n\nThe descriptive name of the rule group. You can’t change the name of a rule group after you create it.\n\nRuleGroupId -> (string)\n\nThe unique identifier for the rule group.\n\nDescription -> (string)\n\nA description of the rule group.\n\nType -> (string)\n\nIndicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.\n\nCapacity -> (integer)\n\nThe maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group.\n\nYou can retrieve the capacity that would be required for a rule group before you create the rule group by calling CreateRuleGroup with DryRun set to TRUE .\n\nRuleGroupStatus -> (string)\n\nDetailed information about the current status of a rule group.\n\nTags -> (list)\n\nThe key:value pairs to associate with the resource.\n\n(structure)\n\nA key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as “environment”) and the tag value represents a specific value within that category (such as “test,” “development,” or “production”). You can add up to 50 tags to each AWS resource.\n\nKey -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as “customer.” Tag keys are case-sensitive.\n\nValue -> (string)\n\nThe part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as “companyA” or “companyB.” Tag values are case-sensitive.\n\nConsumedCapacity -> (integer)\n\nThe number of capacity units currently consumed by the rule group rules.\n\nNumberOfAssociations -> (integer)\n\nThe number of firewall policies that use this rule group."
    },
    {
      "command_name": "update-subnet-change-protection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/network-firewall/update-subnet-change-protection.html",
      "command_description": "Description\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-subnet-change-protection\n[--update-token <value>]\n[--firewall-arn <value>]\n[--firewall-name <value>]\n--subnet-change-protection | --no-subnet-change-protection\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--update-token <value>]",
        "[--firewall-arn <value>]",
        "[--firewall-name <value>]",
        "--subnet-change-protection | --no-subnet-change-protection",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--update-token (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token.\n\n--firewall-arn (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--firewall-name (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nYou must specify the ARN or the name, and you can specify both.\n\n--subnet-change-protection | --no-subnet-change-protection (boolean)\n\nA setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpdateToken -> (string)\n\nAn optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request.\n\nTo make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.\n\nTo make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn’t changed since you last retrieved it. If it has changed, the operation fails with an InvalidTokenException . If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token.\n\nFirewallArn -> (string)\n\nThe Amazon Resource Name (ARN) of the firewall.\n\nFirewallName -> (string)\n\nThe descriptive name of the firewall. You can’t change the name of a firewall after you create it.\n\nSubnetChangeProtection -> (boolean)\n\nA setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to TRUE ."
    }
  ],
  "service_description": "Description\n\nThis is the API Reference for AWS Network Firewall. This guide is for developers who need detailed information about the Network Firewall API actions, data types, and errors.\n\nThe REST API requires you to handle connection details, such as calculating signatures, handling request retries, and error handling. For general information about using the AWS REST APIs, see AWS APIs . To access Network Firewall using the REST API endpoint: https://network-firewall.<region>.amazonaws.com\n\nAlternatively, you can use one of the AWS SDKs to access an API that’s tailored to the programming language or platform that you’re using. For more information, see AWS SDKs .\n\nFor descriptions of Network Firewall features, including and step-by-step instructions on how to use them through the Network Firewall console, see the Network Firewall Developer Guide .\n\nNetwork Firewall is a stateful, managed, network firewall and intrusion detection and prevention service for Amazon Virtual Private Cloud (Amazon VPC). With Network Firewall, you can filter traffic at the perimeter of your VPC. This includes filtering traffic going to and coming from an internet gateway, NAT gateway, or over VPN or AWS Direct Connect. Network Firewall uses rules that are compatible with Suricata, a free, open source intrusion detection system (IDS) engine. AWS Network Firewall supports Suricata version 5.0.2. For information about Suricata, see the Suricata website .\n\nYou can use Network Firewall to monitor and protect your VPC traffic in a number of ways. The following are just a few examples:\n\nAllow domains or IP addresses for known AWS service endpoints, such as Amazon S3, and block all other forms of traffic.\n\nUse custom lists of known bad domains to limit the types of domain names that your applications can access.\n\nPerform deep packet inspection on traffic entering or leaving your VPC.\n\nUse stateful protocol detection to filter protocols like HTTPS, regardless of the port used.\n\nTo enable Network Firewall for your VPCs, you perform steps in both Amazon VPC and in Network Firewall. For information about using Amazon VPC, see Amazon VPC User Guide .\n\nTo start using Network Firewall, do the following:\n\n(Optional) If you don’t already have a VPC that you want to protect, create it in Amazon VPC.\n\nIn Amazon VPC, in each Availability Zone where you want to have a firewall endpoint, create a subnet for the sole use of Network Firewall.\n\nIn Network Firewall, create stateless and stateful rule groups, to define the components of the network traffic filtering behavior that you want your firewall to have.\n\nIn Network Firewall, create a firewall policy that uses your rule groups and specifies additional default traffic filtering behavior.\n\nIn Network Firewall, create a firewall and specify your new firewall policy and VPC subnets. Network Firewall creates a firewall endpoint in each subnet that you specify, with the behavior that’s defined in the firewall policy.\n\nIn Amazon VPC, use ingress routing enhancements to route traffic through the new firewall endpoints."
}