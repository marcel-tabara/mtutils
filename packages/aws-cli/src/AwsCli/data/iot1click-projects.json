{
  "service_name": "iot1click-projects",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/index.html",
  "service_commands": [
    {
      "command_name": "associate-device-with-placement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/associate-device-with-placement.html",
      "command_description": "Description\n\nAssociates a physical device with a placement.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-device-with-placement\n--project-name <value>\n--placement-name <value>\n--device-id <value>\n--device-template-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "--placement-name <value>",
        "--device-id <value>",
        "--device-template-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the project containing the placement in which to associate the device.\n\n--placement-name (string)\n\nThe name of the placement in which to associate the device.\n\n--device-id (string)\n\nThe ID of the physical device to be associated with the given placement in the project. Note that a mandatory 4 character prefix is required for all deviceId values.\n\n--device-template-name (string)\n\nThe device template name to associate with the device ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo associate an AWS IoT 1-Click device with an existing placement\n\nThe following associate-device-with-placement example associates the specified AWS IoT 1-Click device with an existing placement.\n\naws iot1click-projects associate-device-with-placement \\\n    --project-name AnytownDumpsters \\\n    --placement-name customer217 \\\n    --device-template-name empty-dumpster-request \\\n    --device-id G030PM0123456789\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "create-placement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/create-placement.html",
      "command_description": "Description\n\nCreates an empty placement.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-placement\n--placement-name <value>\n--project-name <value>\n[--attributes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--placement-name <value>",
        "--project-name <value>",
        "[--attributes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--placement-name (string)\n\nThe name of the placement to be created.\n\n--project-name (string)\n\nThe name of the project in which to create the placement.\n\n--attributes (map)\n\nOptional user-defined key/value pairs providing contextual data (such as location or function) for the placement.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo create an AWS IoT 1-Click placement for a project\n\nThe following create-placement example create an AWS IoT 1-Click placement for the specified project.\n\naws iot1click-projects create-placement \\\n    --project-name AnytownDumpsters \\\n    --placement-name customer217 \\\n    --attributes \"{\"location\": \"123 Any Street Anytown, USA 10001\", \"phone\": \"123-456-7890\"}\"\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "create-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/create-project.html",
      "command_description": "Description\n\nCreates an empty project with a placement template. A project contains zero or more placements that adhere to the placement template defined in the project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-project\n--project-name <value>\n[--description <value>]\n[--placement-template <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--description <value>]",
        "[--placement-template <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the project to create.\n\n--description (string)\n\nAn optional description for the project.\n\n--placement-template (structure)\n\nThe schema defining the placement to be created. A placement template defines placement default attributes and device templates. You cannot add or remove device templates after the project has been created. However, you can update callbackOverrides for the device templates using the UpdateProject API.\n\ndefaultAttributes -> (map)\n\nThe default attributes (key/value pairs) to be applied to all placements using this template.\n\nkey -> (string)\n\nvalue -> (string)\n\ndeviceTemplates -> (map)\n\nAn object specifying the DeviceTemplate for all placements using this ( PlacementTemplate ) template.\n\nkey -> (string)\n\nvalue -> (structure)\n\nAn object representing a device for a placement template (see PlacementTemplate ).\n\ndeviceType -> (string)\n\nThe device type, which currently must be \"button\" .\n\ncallbackOverrides -> (map)\n\nAn optional Lambda function to invoke instead of the default Lambda function provided by the placement template.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\ndefaultAttributes={KeyName1=string,KeyName2=string},deviceTemplates={KeyName1={deviceType=string,callbackOverrides={KeyName1=string,KeyName2=string}},KeyName2={deviceType=string,callbackOverrides={KeyName1=string,KeyName2=string}}}\n\n\nJSON Syntax:\n\n{\n  \"defaultAttributes\": {\"string\": \"string\"\n    ...},\n  \"deviceTemplates\": {\"string\": {\n        \"deviceType\": \"string\",\n        \"callbackOverrides\": {\"string\": \"string\"\n          ...}\n      }\n    ...}\n}\n\n\n--tags (map)\n\nOptional tags (metadata key/value pairs) to be associated with the project. For example, { {\"key1\": \"value1\", \"key2\": \"value2\"} } . For more information, see AWS Tagging Strategies .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo create an AWS IoT 1-Click project for zero or more placements\n\nThe following create-project example creates an AWS IoT 1-Click project for a placement.\n\naws iot1click-projects create-project\n\n–cli-input-json file://create-project.json\n\nContents of create-project.json:\n\n{\n     \"projectName\": \"AnytownDumpsters\",\n     \"description\": \"All dumpsters in the Anytown region.\",\n     \"placementTemplate\": {\n         \"defaultAttributes\": {\n             \"City\" : \"Anytown\"\n         },\n         \"deviceTemplates\": {\n             \"empty-dumpster-request\" : {\n                 \"deviceType\": \"button\"\n             }\n         }\n     }\n}\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "delete-placement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/delete-placement.html",
      "command_description": "Description\n\nDeletes a placement. To delete a placement, it must not have any devices associated with it.\n\nNote\n\nWhen you delete a placement, all associated data becomes irretrievable.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-placement\n--placement-name <value>\n--project-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--placement-name <value>",
        "--project-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--placement-name (string)\n\nThe name of the empty placement to delete.\n\n--project-name (string)\n\nThe project containing the empty placement to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a placement from a project\n\nThe following delete-placement example deletes the specified placement from a project.\n\naws iot1click-projects delete-placement \\\n    --project-name AnytownDumpsters \\\n    --placement-name customer217\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "delete-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/delete-project.html",
      "command_description": "Description\n\nDeletes a project. To delete a project, it must not have any placements associated with it.\n\nNote\n\nWhen you delete a project, all associated data becomes irretrievable.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-project\n--project-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the empty project to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a project from your AWS account\n\nThe following delete-project example deletes the specified project from your AWS account.\n\naws iot1click-projects delete-project \\\n    --project-name AnytownDumpsters\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "describe-placement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/describe-placement.html",
      "command_description": "Description\n\nDescribes a placement in a project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-placement\n--placement-name <value>\n--project-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--placement-name <value>",
        "--project-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--placement-name (string)\n\nThe name of the placement within a project.\n\n--project-name (string)\n\nThe project containing the placement to be described.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nplacement -> (structure)\n\nAn object describing the placement.\n\nprojectName -> (string)\n\nThe name of the project containing the placement.\n\nplacementName -> (string)\n\nThe name of the placement.\n\nattributes -> (map)\n\nThe user-defined attributes associated with the placement.\n\nkey -> (string)\n\nvalue -> (string)\n\ncreatedDate -> (timestamp)\n\nThe date when the placement was initially created, in UNIX epoch time format.\n\nupdatedDate -> (timestamp)\n\nThe date when the placement was last updated, in UNIX epoch time format. If the placement was not updated, then createdDate and updatedDate are the same.",
      "command_examples": "Examples\n\nTo describe a placement for a project\n\nThe following describe-placement example describes a placement for the specified project.\n\naws iot1click-projects describe-placement \\\n    --project-name AnytownDumpsters \\\n    --placement-name customer217\n\n\nOutput:\n\n{\n    \"placement\": {\n        \"projectName\": \"AnytownDumpsters\",\n        \"placementName\": \"customer217\",\n        \"attributes\": {\n            \"phone\": \"123-555-0110\",\n            \"location\": \"123 Any Street Anytown, USA 10001\"\n        },\n        \"createdDate\": 1563488454,\n        \"updatedDate\": 1563488454\n    }\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "describe-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/describe-project.html",
      "command_description": "Description\n\nReturns an object describing a project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-project\n--project-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the project to be described.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nproject -> (structure)\n\nAn object describing the project.\n\narn -> (string)\n\nThe ARN of the project.\n\nprojectName -> (string)\n\nThe name of the project for which to obtain information from.\n\ndescription -> (string)\n\nThe description of the project.\n\ncreatedDate -> (timestamp)\n\nThe date when the project was originally created, in UNIX epoch time format.\n\nupdatedDate -> (timestamp)\n\nThe date when the project was last updated, in UNIX epoch time format. If the project was not updated, then createdDate and updatedDate are the same.\n\nplacementTemplate -> (structure)\n\nAn object describing the project’s placement specifications.\n\ndefaultAttributes -> (map)\n\nThe default attributes (key/value pairs) to be applied to all placements using this template.\n\nkey -> (string)\n\nvalue -> (string)\n\ndeviceTemplates -> (map)\n\nAn object specifying the DeviceTemplate for all placements using this ( PlacementTemplate ) template.\n\nkey -> (string)\n\nvalue -> (structure)\n\nAn object representing a device for a placement template (see PlacementTemplate ).\n\ndeviceType -> (string)\n\nThe device type, which currently must be \"button\" .\n\ncallbackOverrides -> (map)\n\nAn optional Lambda function to invoke instead of the default Lambda function provided by the placement template.\n\nkey -> (string)\n\nvalue -> (string)\n\ntags -> (map)\n\nThe tags (metadata key/value pairs) associated with the project.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo describe an AWS IoT 1-Click project\n\nThe following describe-project example describes the specified AWS IoT 1-Click project.\n\naws iot1click-projects describe-project \\\n    --project-name AnytownDumpsters\n\n\nOutput:\n\n{\n    \"project\": {\n        \"arn\": \"arn:aws:iot1click:us-west-2:012345678901:projects/AnytownDumpsters\",\n        \"projectName\": \"AnytownDumpsters\",\n        \"description\": \"All dumpsters in the Anytown region.\",\n        \"createdDate\": 1563483100,\n        \"updatedDate\": 1563483100,\n        \"placementTemplate\": {\n            \"defaultAttributes\": {\n                \"City\": \"Anytown\"\n            },\n            \"deviceTemplates\": {\n                \"empty-dumpster-request\": {\n                    \"deviceType\": \"button\",\n                    \"callbackOverrides\": {}\n                }\n            }\n        },\n        \"tags\": {}\n    }\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "disassociate-device-from-placement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/disassociate-device-from-placement.html",
      "command_description": "Description\n\nRemoves a physical device from a placement.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-device-from-placement\n--project-name <value>\n--placement-name <value>\n--device-template-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "--placement-name <value>",
        "--device-template-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the project that contains the placement.\n\n--placement-name (string)\n\nThe name of the placement that the device should be removed from.\n\n--device-template-name (string)\n\nThe device ID that should be removed from the placement.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo disassociate a device from a placement\n\nThe following disassociate-device-from-placement example disassociates the specified device from a placement.\n\naws iot1click-projects disassociate-device-from-placement \\\n    --project-name AnytownDumpsters \\\n    --placement-name customer217 \\\n    --device-template-name empty-dumpster-request\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "get-devices-in-placement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/get-devices-in-placement.html",
      "command_description": "Description\n\nReturns an object enumerating the devices in a placement.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-devices-in-placement\n--project-name <value>\n--placement-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "--placement-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the project containing the placement.\n\n--placement-name (string)\n\nThe name of the placement to get the devices from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndevices -> (map)\n\nAn object containing the devices (zero or more) within the placement.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo list all devices in a placement contained in a project\n\nThe following get-devices-in-placement example lists all devices in a the specified placement contained in the specified project.\n\naws iot1click-projects get-devices-in-placement \\\n    --project-name AnytownDumpsters \\\n    --placement-name customer217\n\n\nOutput:\n\n{\n    \"devices\": {\n        \"empty-dumpster-request\": \"G030PM0123456789\"\n    }\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "list-placements",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/list-placements.html",
      "command_description": "Description\n\nLists the placement(s) of a project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-placements is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: placements",
      "command_synopsis": "Synopsis\n  list-placements\n--project-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe project containing the placements to be listed.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nplacements -> (list)\n\nAn object listing the requested placements.\n\n(structure)\n\nAn object providing summary information for a particular placement.\n\nprojectName -> (string)\n\nThe name of the project containing the placement.\n\nplacementName -> (string)\n\nThe name of the placement being summarized.\n\ncreatedDate -> (timestamp)\n\nThe date when the placement was originally created, in UNIX epoch time format.\n\nupdatedDate -> (timestamp)\n\nThe date when the placement was last updated, in UNIX epoch time format. If the placement was not updated, then createdDate and updatedDate are the same.\n\nnextToken -> (string)\n\nThe token used to retrieve the next set of results - will be effectively empty if there are no further results.",
      "command_examples": "Examples\n\nTo list all AWS IoT 1-Click placements for a project\n\nThe following list-placements example lists all AWS IoT 1-Click placements for the specified project.\n\naws iot1click-projects list-placements \\\n    --project-name AnytownDumpsters\n\n\nOutput:\n\n{\n    \"placements\": [\n        {\n            \"projectName\": \"AnytownDumpsters\",\n            \"placementName\": \"customer217\",\n            \"createdDate\": 1563488454,\n            \"updatedDate\": 1563488454\n        }\n    ]\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "list-projects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/list-projects.html",
      "command_description": "Description\n\nLists the AWS IoT 1-Click project(s) associated with your AWS account and region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-projects is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: projects",
      "command_synopsis": "Synopsis\n  list-projects\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nprojects -> (list)\n\nAn object containing the list of projects.\n\n(structure)\n\nAn object providing summary information for a particular project for an associated AWS account and region.\n\narn -> (string)\n\nThe ARN of the project.\n\nprojectName -> (string)\n\nThe name of the project being summarized.\n\ncreatedDate -> (timestamp)\n\nThe date when the project was originally created, in UNIX epoch time format.\n\nupdatedDate -> (timestamp)\n\nThe date when the project was last updated, in UNIX epoch time format. If the project was not updated, then createdDate and updatedDate are the same.\n\ntags -> (map)\n\nThe tags (metadata key/value pairs) associated with the project.\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nThe token used to retrieve the next set of results - will be effectively empty if there are no further results.",
      "command_examples": "Examples\n\nTo list all AWS IoT 1-Click projects\n\nThe following list-projects example list all AWS IoT 1-Click projects in your account.\n\naws iot1click-projects list-projects\n\n\nOutput:\n\n{\n    \"projects\": [\n        {\n            \"arn\": \"arn:aws:iot1click:us-west-2:012345678901:projects/AnytownDumpsters\",\n            \"projectName\": \"AnytownDumpsters\",\n            \"createdDate\": 1563483100,\n            \"updatedDate\": 1563483100,\n            \"tags\": {}\n        }\n    ]\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/list-tags-for-resource.html",
      "command_description": "Description\n\nLists the tags (metadata key/value pairs) which you have assigned to the resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource whose tags you want to list.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (map)\n\nThe tags (metadata key/value pairs) which you have assigned to the resource.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo list the tags for a project resource\n\nThe following list-tags-for-resource example list the tags for the specified project resource.\n\naws iot1click-projects list-tags-for-resource \\\n    --resource-arn \"arn:aws:iot1click:us-west-2:123456789012:projects/AnytownDumpsters\"\n\n\nOutput:\n\n{\n    \"tags\": {\n        \"Manager\": \"Li Juan\",\n        \"Account\": \"45215\"\n    }\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/tag-resource.html",
      "command_description": "Description\n\nCreates or modifies tags for a resource. Tags are key/value pairs (metadata) that can be used to manage a resource. For more information, see AWS Tagging Strategies .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resouce for which tag(s) should be added or modified.\n\n--tags (map)\n\nThe new or modifying tag(s) for the resource. See AWS IoT 1-Click Service Limits for the maximum number of tags allowed per resource.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add tags to a project resource\n\nThe following tag-resource example adds two tags to the specified project resource.\n\naws iot1click-projects tag-resource \\\n    --cli-input-json file://devices-tag-resource.json\n\n\nContents of devices-tag-resource.json:\n\n{\n    \"resourceArn\": \"arn:aws:iot1click:us-west-2:123456789012:projects/AnytownDumpsters\",\n    \"tags\": {\n        \"Account\": \"45215\",\n        \"Manager\": \"Li Juan\"\n    }\n}\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/untag-resource.html",
      "command_description": "Description\n\nRemoves one or more tags (metadata key/value pairs) from a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource whose tag you want to remove.\n\n--tag-keys (list)\n\nThe keys of those tags which you want to remove.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from a project resource\n\nThe following untag-resource example removes the tag with the key name Manager from the specified project.\n\naws iot1click-projects untag-resource \\\n    --resource-arn \"arn:aws:iot1click:us-west-2:123456789012:projects/AnytownDumpsters\" \\\n    --tag-keys \"Manager\"\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "update-placement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/update-placement.html",
      "command_description": "Description\n\nUpdates a placement with the given attributes. To clear an attribute, pass an empty value (i.e., “”).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-placement\n--placement-name <value>\n--project-name <value>\n[--attributes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--placement-name <value>",
        "--project-name <value>",
        "[--attributes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--placement-name (string)\n\nThe name of the placement to update.\n\n--project-name (string)\n\nThe name of the project containing the placement to be updated.\n\n--attributes (map)\n\nThe user-defined object of attributes used to update the placement. The maximum number of key/value pairs is 50.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the “attributes” key-value pairs of a placement\n\nThe following update-placement example update the “attributes” key-value pairs of a placement.\n\naws iot1click-projects update-placement \\\n    --cli-input-json file://update-placement.json\n\n\nContents of update-placement.json:\n\n{\n    \"projectName\": \"AnytownDumpsters\",\n    \"placementName\": \"customer217\",\n    \"attributes\": {\n        \"phone\": \"123-456-7890\",\n        \"location\": \"123 Any Street Anytown, USA 10001\"\n    }\n}\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "update-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-projects/update-project.html",
      "command_description": "Description\n\nUpdates a project associated with your AWS account and region. With the exception of device template names, you can pass just the values that need to be updated because the update request will change only the values that are provided. To clear a value, pass the empty string (i.e., \"\" ).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-project\n--project-name <value>\n[--description <value>]\n[--placement-template <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--description <value>]",
        "[--placement-template <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the project to be updated.\n\n--description (string)\n\nAn optional user-defined description for the project.\n\n--placement-template (structure)\n\nAn object defining the project update. Once a project has been created, you cannot add device template names to the project. However, for a given placementTemplate , you can update the associated callbackOverrides for the device definition using this API.\n\ndefaultAttributes -> (map)\n\nThe default attributes (key/value pairs) to be applied to all placements using this template.\n\nkey -> (string)\n\nvalue -> (string)\n\ndeviceTemplates -> (map)\n\nAn object specifying the DeviceTemplate for all placements using this ( PlacementTemplate ) template.\n\nkey -> (string)\n\nvalue -> (structure)\n\nAn object representing a device for a placement template (see PlacementTemplate ).\n\ndeviceType -> (string)\n\nThe device type, which currently must be \"button\" .\n\ncallbackOverrides -> (map)\n\nAn optional Lambda function to invoke instead of the default Lambda function provided by the placement template.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\ndefaultAttributes={KeyName1=string,KeyName2=string},deviceTemplates={KeyName1={deviceType=string,callbackOverrides={KeyName1=string,KeyName2=string}},KeyName2={deviceType=string,callbackOverrides={KeyName1=string,KeyName2=string}}}\n\n\nJSON Syntax:\n\n{\n  \"defaultAttributes\": {\"string\": \"string\"\n    ...},\n  \"deviceTemplates\": {\"string\": {\n        \"deviceType\": \"string\",\n        \"callbackOverrides\": {\"string\": \"string\"\n          ...}\n      }\n    ...}\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update settings for a project\n\nThe following update-project example updates the description for a project.\n\naws iot1click-projects update-project \\\n    --project-name AnytownDumpsters \\\n    --description \"All dumpsters (yard waste, recycling, garbage) in the Anytown region.\"\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    }
  ],
  "service_description": "Description\n\nThe AWS IoT 1-Click Projects API Reference"
}