{
  "service_name": "groundstation",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/index.html",
  "service_commands": [
    {
      "command_name": "cancel-contact",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/cancel-contact.html",
      "command_description": "Description\n\nCancels a contact with a specified contact ID.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-contact\n--contact-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--contact-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--contact-id (string)\n\nUUID of a contact.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncontactId -> (string)\n\nUUID of a contact."
    },
    {
      "command_name": "create-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/create-config.html",
      "command_description": "Description\n\nCreates a Config with the specified configData parameters.\n\nOnly one type of configData can be specified.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-config\n--config-data <value>\n--name <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--config-data <value>",
        "--name <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--config-data (structure)\n\nParameters of a Config .\n\nantennaDownlinkConfig -> (structure)\n\nInformation about how AWS Ground Station should configure an antenna for downlink during a contact.\n\nspectrumConfig -> (structure)\n\nObject that describes a spectral Config .\n\nbandwidth -> (structure)\n\nBandwidth of a spectral Config . AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\nunits -> (string)\n\nFrequency bandwidth units.\n\nvalue -> (double)\n\nFrequency bandwidth value. AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig , valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\ncenterFrequency -> (structure)\n\nCenter frequency of a spectral Config . Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\nunits -> (string)\n\nFrequency units.\n\nvalue -> (double)\n\nFrequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\npolarization -> (string)\n\nPolarization of a spectral Config . Capturing both \"RIGHT_HAND\" and \"LEFT_HAND\" polarization requires two separate configs.\n\nantennaDownlinkDemodDecodeConfig -> (structure)\n\nInformation about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.\n\ndecodeConfig -> (structure)\n\nInformation about the decode Config .\n\nunvalidatedJSON -> (string)\n\nUnvalidated JSON of a decode Config .\n\ndemodulationConfig -> (structure)\n\nInformation about the demodulation Config .\n\nunvalidatedJSON -> (string)\n\nUnvalidated JSON of a demodulation Config .\n\nspectrumConfig -> (structure)\n\nInformation about the spectral Config .\n\nbandwidth -> (structure)\n\nBandwidth of a spectral Config . AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\nunits -> (string)\n\nFrequency bandwidth units.\n\nvalue -> (double)\n\nFrequency bandwidth value. AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig , valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\ncenterFrequency -> (structure)\n\nCenter frequency of a spectral Config . Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\nunits -> (string)\n\nFrequency units.\n\nvalue -> (double)\n\nFrequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\npolarization -> (string)\n\nPolarization of a spectral Config . Capturing both \"RIGHT_HAND\" and \"LEFT_HAND\" polarization requires two separate configs.\n\nantennaUplinkConfig -> (structure)\n\nInformation about how AWS Ground Station should conﬁgure an antenna for uplink during a contact.\n\nspectrumConfig -> (structure)\n\nInformation about the uplink spectral Config .\n\ncenterFrequency -> (structure)\n\nCenter frequency of an uplink spectral Config . Valid values are between 2025 to 2120 MHz.\n\nunits -> (string)\n\nFrequency units.\n\nvalue -> (double)\n\nFrequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\npolarization -> (string)\n\nPolarization of an uplink spectral Config . Capturing both \"RIGHT_HAND\" and \"LEFT_HAND\" polarization requires two separate configs.\n\ntargetEirp -> (structure)\n\nEIRP of the target.\n\nunits -> (string)\n\nUnits of an EIRP.\n\nvalue -> (double)\n\nValue of an EIRP. Valid values are between 20.0 to 50.0 dBW.\n\ntransmitDisabled -> (boolean)\n\nWhether or not uplink transmit is disabled.\n\ndataflowEndpointConfig -> (structure)\n\nInformation about the dataflow endpoint Config .\n\ndataflowEndpointName -> (string)\n\nName of a dataflow endpoint.\n\ndataflowEndpointRegion -> (string)\n\nRegion of a dataflow endpoint.\n\ns3RecordingConfig -> (structure)\n\nInformation about an S3 recording Config .\n\nbucketArn -> (string)\n\nARN of the bucket to record to.\n\nprefix -> (string)\n\nS3 Key prefix to prefice data files.\n\nroleArn -> (string)\n\nARN of the role Ground Station assumes to write data to the bucket.\n\ntrackingConfig -> (structure)\n\nObject that determines whether tracking should be used during a contact executed with this Config in the mission profile.\n\nautotrack -> (string)\n\nCurrent setting for autotrack.\n\nuplinkEchoConfig -> (structure)\n\nInformation about an uplink echo Config .\n\nParameters from the AntennaUplinkConfig , corresponding to the specified AntennaUplinkConfigArn , are used when this UplinkEchoConfig is used in a contact.\n\nantennaUplinkConfigArn -> (string)\n\nARN of an uplink Config .\n\nenabled -> (boolean)\n\nWhether or not an uplink Config is enabled.\n\nJSON Syntax:\n\n{\n  \"antennaDownlinkConfig\": {\n    \"spectrumConfig\": {\n      \"bandwidth\": {\n        \"units\": \"GHz\"|\"MHz\"|\"kHz\",\n        \"value\": double\n      },\n      \"centerFrequency\": {\n        \"units\": \"GHz\"|\"MHz\"|\"kHz\",\n        \"value\": double\n      },\n      \"polarization\": \"LEFT_HAND\"|\"NONE\"|\"RIGHT_HAND\"\n    }\n  },\n  \"antennaDownlinkDemodDecodeConfig\": {\n    \"decodeConfig\": {\n      \"unvalidatedJSON\": \"string\"\n    },\n    \"demodulationConfig\": {\n      \"unvalidatedJSON\": \"string\"\n    },\n    \"spectrumConfig\": {\n      \"bandwidth\": {\n        \"units\": \"GHz\"|\"MHz\"|\"kHz\",\n        \"value\": double\n      },\n      \"centerFrequency\": {\n        \"units\": \"GHz\"|\"MHz\"|\"kHz\",\n        \"value\": double\n      },\n      \"polarization\": \"LEFT_HAND\"|\"NONE\"|\"RIGHT_HAND\"\n    }\n  },\n  \"antennaUplinkConfig\": {\n    \"spectrumConfig\": {\n      \"centerFrequency\": {\n        \"units\": \"GHz\"|\"MHz\"|\"kHz\",\n        \"value\": double\n      },\n      \"polarization\": \"LEFT_HAND\"|\"NONE\"|\"RIGHT_HAND\"\n    },\n    \"targetEirp\": {\n      \"units\": \"dBW\",\n      \"value\": double\n    },\n    \"transmitDisabled\": true|false\n  },\n  \"dataflowEndpointConfig\": {\n    \"dataflowEndpointName\": \"string\",\n    \"dataflowEndpointRegion\": \"string\"\n  },\n  \"s3RecordingConfig\": {\n    \"bucketArn\": \"string\",\n    \"prefix\": \"string\",\n    \"roleArn\": \"string\"\n  },\n  \"trackingConfig\": {\n    \"autotrack\": \"PREFERRED\"|\"REMOVED\"|\"REQUIRED\"\n  },\n  \"uplinkEchoConfig\": {\n    \"antennaUplinkConfigArn\": \"string\",\n    \"enabled\": true|false\n  }\n}\n\n\n--name (string)\n\nName of a Config .\n\n--tags (map)\n\nTags assigned to a Config .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconfigArn -> (string)\n\nARN of a Config .\n\nconfigId -> (string)\n\nUUID of a Config .\n\nconfigType -> (string)\n\nType of a Config ."
    },
    {
      "command_name": "create-dataflow-endpoint-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/create-dataflow-endpoint-group.html",
      "command_description": "Description\n\nCreates a DataflowEndpoint group containing the specified list of DataflowEndpoint objects.\n\nThe name field in each endpoint is used in your mission profile DataflowEndpointConfig to specify which endpoints to use during a contact.\n\nWhen a contact uses multiple DataflowEndpointConfig objects, each Config must match a DataflowEndpoint in the same group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-dataflow-endpoint-group\n--endpoint-details <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--endpoint-details <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--endpoint-details (list)\n\nEndpoint details of each endpoint in the dataflow endpoint group.\n\n(structure)\n\nInformation about the endpoint details.\n\nendpoint -> (structure)\n\nA dataflow endpoint.\n\naddress -> (structure)\n\nSocket address of a dataflow endpoint.\n\nname -> (string)\n\nName of a socket address.\n\nport -> (integer)\n\nPort of a socket address.\n\nmtu -> (integer)\n\nMaximum transmission unit (MTU) size in bytes of a dataflow endpoint.\n\nname -> (string)\n\nName of a dataflow endpoint.\n\nstatus -> (string)\n\nStatus of a dataflow endpoint.\n\nsecurityDetails -> (structure)\n\nEndpoint security details.\n\nroleArn -> (string)\n\nARN to a role needed for connecting streams to your instances.\n\nsecurityGroupIds -> (list)\n\nThe security groups to attach to the elastic network interfaces.\n\n(string)\n\nsubnetIds -> (list)\n\nA list of subnets where AWS Ground Station places elastic network interfaces to send streams to your instances.\n\n(string)\n\nShorthand Syntax:\n\nendpoint={address={name=string,port=integer},mtu=integer,name=string,status=string},securityDetails={roleArn=string,securityGroupIds=[string,string],subnetIds=[string,string]} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"endpoint\": {\n      \"address\": {\n        \"name\": \"string\",\n        \"port\": integer\n      },\n      \"mtu\": integer,\n      \"name\": \"string\",\n      \"status\": \"created\"|\"creating\"|\"deleted\"|\"deleting\"|\"failed\"\n    },\n    \"securityDetails\": {\n      \"roleArn\": \"string\",\n      \"securityGroupIds\": [\"string\", ...],\n      \"subnetIds\": [\"string\", ...]\n    }\n  }\n  ...\n]\n\n\n--tags (map)\n\nTags of a dataflow endpoint group.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndataflowEndpointGroupId -> (string)\n\nUUID of a dataflow endpoint group."
    },
    {
      "command_name": "create-mission-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/create-mission-profile.html",
      "command_description": "Description\n\nCreates a mission profile.\n\ndataflowEdges is a list of lists of strings. Each lower level list of strings has two elements: a from ARN and a to ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-mission-profile\n[--contact-post-pass-duration-seconds <value>]\n[--contact-pre-pass-duration-seconds <value>]\n--dataflow-edges <value>\n--minimum-viable-contact-duration-seconds <value>\n--name <value>\n[--tags <value>]\n--tracking-config-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--contact-post-pass-duration-seconds <value>]",
        "[--contact-pre-pass-duration-seconds <value>]",
        "--dataflow-edges <value>",
        "--minimum-viable-contact-duration-seconds <value>",
        "--name <value>",
        "[--tags <value>]",
        "--tracking-config-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--contact-post-pass-duration-seconds (integer)\n\nAmount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n\n--contact-pre-pass-duration-seconds (integer)\n\nAmount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.\n\n--dataflow-edges (list)\n\nA list of lists of ARNs. Each list of ARNs is an edge, with a from Config and a to Config .\n\n(list)\n\n(string)\n\nShorthand Syntax:\n\nstring,string ...\n\n\nJSON Syntax:\n\n[\n  [\"string\", ...]\n  ...\n]\n\n\n--minimum-viable-contact-duration-seconds (integer)\n\nSmallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.\n\n--name (string)\n\nName of a mission profile.\n\n--tags (map)\n\nTags assigned to a mission profile.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--tracking-config-arn (string)\n\nARN of a tracking Config .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmissionProfileId -> (string)\n\nUUID of a mission profile."
    },
    {
      "command_name": "delete-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/delete-config.html",
      "command_description": "Description\n\nDeletes a Config .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-config\n--config-id <value>\n--config-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--config-id <value>",
        "--config-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--config-id (string)\n\nUUID of a Config .\n\n--config-type (string)\n\nType of a Config .\n\nPossible values:\n\nantenna-downlink\n\nantenna-downlink-demod-decode\n\nantenna-uplink\n\ndataflow-endpoint\n\ntracking\n\nuplink-echo\n\ns3-recording\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconfigArn -> (string)\n\nARN of a Config .\n\nconfigId -> (string)\n\nUUID of a Config .\n\nconfigType -> (string)\n\nType of a Config ."
    },
    {
      "command_name": "delete-dataflow-endpoint-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/delete-dataflow-endpoint-group.html",
      "command_description": "Description\n\nDeletes a dataflow endpoint group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-dataflow-endpoint-group\n--dataflow-endpoint-group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataflow-endpoint-group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataflow-endpoint-group-id (string)\n\nUUID of a dataflow endpoint group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndataflowEndpointGroupId -> (string)\n\nUUID of a dataflow endpoint group."
    },
    {
      "command_name": "delete-mission-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/delete-mission-profile.html",
      "command_description": "Description\n\nDeletes a mission profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-mission-profile\n--mission-profile-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mission-profile-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mission-profile-id (string)\n\nUUID of a mission profile.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmissionProfileId -> (string)\n\nUUID of a mission profile."
    },
    {
      "command_name": "describe-contact",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/describe-contact.html",
      "command_description": "Description\n\nDescribes an existing contact.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-contact\n--contact-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--contact-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--contact-id (string)\n\nUUID of a contact.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncontactId -> (string)\n\nUUID of a contact.\n\ncontactStatus -> (string)\n\nStatus of a contact.\n\ndataflowList -> (list)\n\nList describing source and destination details for each dataflow edge.\n\n(structure)\n\nInformation about a dataflow edge used in a contact.\n\ndestination -> (structure)\n\nDataflow details for the destination side.\n\nconfigDetails -> (structure)\n\nAdditional details for a Config , if type is dataflow endpoint or antenna demod decode.\n\nantennaDemodDecodeDetails -> (structure)\n\nDetails for antenna demod decode Config in a contact.\n\noutputNode -> (string)\n\nName of an antenna demod decode output node used in a contact.\n\nendpointDetails -> (structure)\n\nInformation about the endpoint details.\n\nendpoint -> (structure)\n\nA dataflow endpoint.\n\naddress -> (structure)\n\nSocket address of a dataflow endpoint.\n\nname -> (string)\n\nName of a socket address.\n\nport -> (integer)\n\nPort of a socket address.\n\nmtu -> (integer)\n\nMaximum transmission unit (MTU) size in bytes of a dataflow endpoint.\n\nname -> (string)\n\nName of a dataflow endpoint.\n\nstatus -> (string)\n\nStatus of a dataflow endpoint.\n\nsecurityDetails -> (structure)\n\nEndpoint security details.\n\nroleArn -> (string)\n\nARN to a role needed for connecting streams to your instances.\n\nsecurityGroupIds -> (list)\n\nThe security groups to attach to the elastic network interfaces.\n\n(string)\n\nsubnetIds -> (list)\n\nA list of subnets where AWS Ground Station places elastic network interfaces to send streams to your instances.\n\n(string)\n\ns3RecordingDetails -> (structure)\n\nDetails for an S3 recording Config in a contact.\n\nbucketArn -> (string)\n\nARN of the bucket used.\n\nkeyTemplate -> (string)\n\nTemplate of the S3 key used.\n\nconfigId -> (string)\n\nUUID of a Config .\n\nconfigType -> (string)\n\nType of a Config .\n\ndataflowDestinationRegion -> (string)\n\nRegion of a dataflow destination.\n\nerrorMessage -> (string)\n\nError message for a dataflow.\n\nsource -> (structure)\n\nDataflow details for the source side.\n\nconfigDetails -> (structure)\n\nAdditional details for a Config , if type is dataflow endpoint or antenna demod decode.\n\nantennaDemodDecodeDetails -> (structure)\n\nDetails for antenna demod decode Config in a contact.\n\noutputNode -> (string)\n\nName of an antenna demod decode output node used in a contact.\n\nendpointDetails -> (structure)\n\nInformation about the endpoint details.\n\nendpoint -> (structure)\n\nA dataflow endpoint.\n\naddress -> (structure)\n\nSocket address of a dataflow endpoint.\n\nname -> (string)\n\nName of a socket address.\n\nport -> (integer)\n\nPort of a socket address.\n\nmtu -> (integer)\n\nMaximum transmission unit (MTU) size in bytes of a dataflow endpoint.\n\nname -> (string)\n\nName of a dataflow endpoint.\n\nstatus -> (string)\n\nStatus of a dataflow endpoint.\n\nsecurityDetails -> (structure)\n\nEndpoint security details.\n\nroleArn -> (string)\n\nARN to a role needed for connecting streams to your instances.\n\nsecurityGroupIds -> (list)\n\nThe security groups to attach to the elastic network interfaces.\n\n(string)\n\nsubnetIds -> (list)\n\nA list of subnets where AWS Ground Station places elastic network interfaces to send streams to your instances.\n\n(string)\n\ns3RecordingDetails -> (structure)\n\nDetails for an S3 recording Config in a contact.\n\nbucketArn -> (string)\n\nARN of the bucket used.\n\nkeyTemplate -> (string)\n\nTemplate of the S3 key used.\n\nconfigId -> (string)\n\nUUID of a Config .\n\nconfigType -> (string)\n\nType of a Config .\n\ndataflowSourceRegion -> (string)\n\nRegion of a dataflow source.\n\nendTime -> (timestamp)\n\nEnd time of a contact.\n\nerrorMessage -> (string)\n\nError message for a contact.\n\ngroundStation -> (string)\n\nGround station for a contact.\n\nmaximumElevation -> (structure)\n\nMaximum elevation angle of a contact.\n\nunit -> (string)\n\nElevation angle units.\n\nvalue -> (double)\n\nElevation angle value.\n\nmissionProfileArn -> (string)\n\nARN of a mission profile.\n\npostPassEndTime -> (timestamp)\n\nAmount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n\nprePassStartTime -> (timestamp)\n\nAmount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.\n\nregion -> (string)\n\nRegion of a contact.\n\nsatelliteArn -> (string)\n\nARN of a satellite.\n\nstartTime -> (timestamp)\n\nStart time of a contact.\n\ntags -> (map)\n\nTags assigned to a contact.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "get-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/get-config.html",
      "command_description": "Description\n\nReturns Config information.\n\nOnly one Config response can be returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-config\n--config-id <value>\n--config-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--config-id <value>",
        "--config-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--config-id (string)\n\nUUID of a Config .\n\n--config-type (string)\n\nType of a Config .\n\nPossible values:\n\nantenna-downlink\n\nantenna-downlink-demod-decode\n\nantenna-uplink\n\ndataflow-endpoint\n\ntracking\n\nuplink-echo\n\ns3-recording\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconfigArn -> (string)\n\nARN of a Config\n\nconfigData -> (structure)\n\nData elements in a Config .\n\nantennaDownlinkConfig -> (structure)\n\nInformation about how AWS Ground Station should configure an antenna for downlink during a contact.\n\nspectrumConfig -> (structure)\n\nObject that describes a spectral Config .\n\nbandwidth -> (structure)\n\nBandwidth of a spectral Config . AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\nunits -> (string)\n\nFrequency bandwidth units.\n\nvalue -> (double)\n\nFrequency bandwidth value. AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig , valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\ncenterFrequency -> (structure)\n\nCenter frequency of a spectral Config . Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\nunits -> (string)\n\nFrequency units.\n\nvalue -> (double)\n\nFrequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\npolarization -> (string)\n\nPolarization of a spectral Config . Capturing both \"RIGHT_HAND\" and \"LEFT_HAND\" polarization requires two separate configs.\n\nantennaDownlinkDemodDecodeConfig -> (structure)\n\nInformation about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.\n\ndecodeConfig -> (structure)\n\nInformation about the decode Config .\n\nunvalidatedJSON -> (string)\n\nUnvalidated JSON of a decode Config .\n\ndemodulationConfig -> (structure)\n\nInformation about the demodulation Config .\n\nunvalidatedJSON -> (string)\n\nUnvalidated JSON of a demodulation Config .\n\nspectrumConfig -> (structure)\n\nInformation about the spectral Config .\n\nbandwidth -> (structure)\n\nBandwidth of a spectral Config . AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\nunits -> (string)\n\nFrequency bandwidth units.\n\nvalue -> (double)\n\nFrequency bandwidth value. AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig , valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\ncenterFrequency -> (structure)\n\nCenter frequency of a spectral Config . Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\nunits -> (string)\n\nFrequency units.\n\nvalue -> (double)\n\nFrequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\npolarization -> (string)\n\nPolarization of a spectral Config . Capturing both \"RIGHT_HAND\" and \"LEFT_HAND\" polarization requires two separate configs.\n\nantennaUplinkConfig -> (structure)\n\nInformation about how AWS Ground Station should conﬁgure an antenna for uplink during a contact.\n\nspectrumConfig -> (structure)\n\nInformation about the uplink spectral Config .\n\ncenterFrequency -> (structure)\n\nCenter frequency of an uplink spectral Config . Valid values are between 2025 to 2120 MHz.\n\nunits -> (string)\n\nFrequency units.\n\nvalue -> (double)\n\nFrequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\npolarization -> (string)\n\nPolarization of an uplink spectral Config . Capturing both \"RIGHT_HAND\" and \"LEFT_HAND\" polarization requires two separate configs.\n\ntargetEirp -> (structure)\n\nEIRP of the target.\n\nunits -> (string)\n\nUnits of an EIRP.\n\nvalue -> (double)\n\nValue of an EIRP. Valid values are between 20.0 to 50.0 dBW.\n\ntransmitDisabled -> (boolean)\n\nWhether or not uplink transmit is disabled.\n\ndataflowEndpointConfig -> (structure)\n\nInformation about the dataflow endpoint Config .\n\ndataflowEndpointName -> (string)\n\nName of a dataflow endpoint.\n\ndataflowEndpointRegion -> (string)\n\nRegion of a dataflow endpoint.\n\ns3RecordingConfig -> (structure)\n\nInformation about an S3 recording Config .\n\nbucketArn -> (string)\n\nARN of the bucket to record to.\n\nprefix -> (string)\n\nS3 Key prefix to prefice data files.\n\nroleArn -> (string)\n\nARN of the role Ground Station assumes to write data to the bucket.\n\ntrackingConfig -> (structure)\n\nObject that determines whether tracking should be used during a contact executed with this Config in the mission profile.\n\nautotrack -> (string)\n\nCurrent setting for autotrack.\n\nuplinkEchoConfig -> (structure)\n\nInformation about an uplink echo Config .\n\nParameters from the AntennaUplinkConfig , corresponding to the specified AntennaUplinkConfigArn , are used when this UplinkEchoConfig is used in a contact.\n\nantennaUplinkConfigArn -> (string)\n\nARN of an uplink Config .\n\nenabled -> (boolean)\n\nWhether or not an uplink Config is enabled.\n\nconfigId -> (string)\n\nUUID of a Config .\n\nconfigType -> (string)\n\nType of a Config .\n\nname -> (string)\n\nName of a Config .\n\ntags -> (map)\n\nTags assigned to a Config .\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "get-dataflow-endpoint-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/get-dataflow-endpoint-group.html",
      "command_description": "Description\n\nReturns the dataflow endpoint group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-dataflow-endpoint-group\n--dataflow-endpoint-group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataflow-endpoint-group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataflow-endpoint-group-id (string)\n\nUUID of a dataflow endpoint group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndataflowEndpointGroupArn -> (string)\n\nARN of a dataflow endpoint group.\n\ndataflowEndpointGroupId -> (string)\n\nUUID of a dataflow endpoint group.\n\nendpointsDetails -> (list)\n\nDetails of a dataflow endpoint.\n\n(structure)\n\nInformation about the endpoint details.\n\nendpoint -> (structure)\n\nA dataflow endpoint.\n\naddress -> (structure)\n\nSocket address of a dataflow endpoint.\n\nname -> (string)\n\nName of a socket address.\n\nport -> (integer)\n\nPort of a socket address.\n\nmtu -> (integer)\n\nMaximum transmission unit (MTU) size in bytes of a dataflow endpoint.\n\nname -> (string)\n\nName of a dataflow endpoint.\n\nstatus -> (string)\n\nStatus of a dataflow endpoint.\n\nsecurityDetails -> (structure)\n\nEndpoint security details.\n\nroleArn -> (string)\n\nARN to a role needed for connecting streams to your instances.\n\nsecurityGroupIds -> (list)\n\nThe security groups to attach to the elastic network interfaces.\n\n(string)\n\nsubnetIds -> (list)\n\nA list of subnets where AWS Ground Station places elastic network interfaces to send streams to your instances.\n\n(string)\n\ntags -> (map)\n\nTags assigned to a dataflow endpoint group.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "get-minute-usage",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/get-minute-usage.html",
      "command_description": "Description\n\nReturns the number of minutes used by account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-minute-usage\n--month <value>\n--year <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--month <value>",
        "--year <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--month (integer)\n\nThe month being requested, with a value of 1-12.\n\n--year (integer)\n\nThe year being requested, in the format of YYYY.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nestimatedMinutesRemaining -> (integer)\n\nEstimated number of minutes remaining for an account, specific to the month being requested.\n\nisReservedMinutesCustomer -> (boolean)\n\nReturns whether or not an account has signed up for the reserved minutes pricing plan, specific to the month being requested.\n\ntotalReservedMinuteAllocation -> (integer)\n\nTotal number of reserved minutes allocated, specific to the month being requested.\n\ntotalScheduledMinutes -> (integer)\n\nTotal scheduled minutes for an account, specific to the month being requested.\n\nupcomingMinutesScheduled -> (integer)\n\nUpcoming minutes scheduled for an account, specific to the month being requested."
    },
    {
      "command_name": "get-mission-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/get-mission-profile.html",
      "command_description": "Description\n\nReturns a mission profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-mission-profile\n--mission-profile-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mission-profile-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mission-profile-id (string)\n\nUUID of a mission profile.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncontactPostPassDurationSeconds -> (integer)\n\nAmount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n\ncontactPrePassDurationSeconds -> (integer)\n\nAmount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.\n\ndataflowEdges -> (list)\n\nA list of lists of ARNs. Each list of ARNs is an edge, with a from Config and a to Config .\n\n(list)\n\n(string)\n\nminimumViableContactDurationSeconds -> (integer)\n\nSmallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.\n\nmissionProfileArn -> (string)\n\nARN of a mission profile.\n\nmissionProfileId -> (string)\n\nUUID of a mission profile.\n\nname -> (string)\n\nName of a mission profile.\n\nregion -> (string)\n\nRegion of a mission profile.\n\ntags -> (map)\n\nTags assigned to a mission profile.\n\nkey -> (string)\n\nvalue -> (string)\n\ntrackingConfigArn -> (string)\n\nARN of a tracking Config ."
    },
    {
      "command_name": "get-satellite",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/get-satellite.html",
      "command_description": "Description\n\nReturns a satellite.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-satellite\n--satellite-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--satellite-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--satellite-id (string)\n\nUUID of a satellite.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngroundStations -> (list)\n\nA list of ground stations to which the satellite is on-boarded.\n\n(string)\n\nnoradSatelliteID -> (integer)\n\nNORAD satellite ID number.\n\nsatelliteArn -> (string)\n\nARN of a satellite.\n\nsatelliteId -> (string)\n\nUUID of a satellite."
    },
    {
      "command_name": "list-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/list-configs.html",
      "command_description": "Description\n\nReturns a list of Config objects.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-configs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: configList",
      "command_synopsis": "Synopsis\n  list-configs\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconfigList -> (list)\n\nList of Config items.\n\n(structure)\n\nAn item in a list of Config objects.\n\nconfigArn -> (string)\n\nARN of a Config .\n\nconfigId -> (string)\n\nUUID of a Config .\n\nconfigType -> (string)\n\nType of a Config .\n\nname -> (string)\n\nName of a Config .\n\nnextToken -> (string)\n\nNext token returned in the response of a previous ListConfigs call. Used to get the next page of results."
    },
    {
      "command_name": "list-contacts",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/list-contacts.html",
      "command_description": "Description\n\nReturns a list of contacts.\n\nIf statusList contains AVAILABLE, the request must include groundStation , missionprofileArn , and satelliteArn .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-contacts is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: contactList",
      "command_synopsis": "Synopsis\n  list-contacts\n--end-time <value>\n[--ground-station <value>]\n[--mission-profile-arn <value>]\n[--satellite-arn <value>]\n--start-time <value>\n--status-list <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--end-time <value>",
        "[--ground-station <value>]",
        "[--mission-profile-arn <value>]",
        "[--satellite-arn <value>]",
        "--start-time <value>",
        "--status-list <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--end-time (timestamp)\n\nEnd time of a contact.\n\n--ground-station (string)\n\nName of a ground station.\n\n--mission-profile-arn (string)\n\nARN of a mission profile.\n\n--satellite-arn (string)\n\nARN of a satellite.\n\n--start-time (timestamp)\n\nStart time of a contact.\n\n--status-list (list)\n\nStatus of a contact reservation.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  AVAILABLE\n  AWS_CANCELLED\n  AWS_FAILED\n  CANCELLED\n  CANCELLING\n  COMPLETED\n  FAILED\n  FAILED_TO_SCHEDULE\n  PASS\n  POSTPASS\n  PREPASS\n  SCHEDULED\n  SCHEDULING\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncontactList -> (list)\n\nList of contacts.\n\n(structure)\n\nData describing a contact.\n\ncontactId -> (string)\n\nUUID of a contact.\n\ncontactStatus -> (string)\n\nStatus of a contact.\n\nendTime -> (timestamp)\n\nEnd time of a contact.\n\nerrorMessage -> (string)\n\nError message of a contact.\n\ngroundStation -> (string)\n\nName of a ground station.\n\nmaximumElevation -> (structure)\n\nMaximum elevation angle of a contact.\n\nunit -> (string)\n\nElevation angle units.\n\nvalue -> (double)\n\nElevation angle value.\n\nmissionProfileArn -> (string)\n\nARN of a mission profile.\n\npostPassEndTime -> (timestamp)\n\nAmount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n\nprePassStartTime -> (timestamp)\n\nAmount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.\n\nregion -> (string)\n\nRegion of a contact.\n\nsatelliteArn -> (string)\n\nARN of a satellite.\n\nstartTime -> (timestamp)\n\nStart time of a contact.\n\ntags -> (map)\n\nTags assigned to a contact.\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nNext token returned in the response of a previous ListContacts call. Used to get the next page of results."
    },
    {
      "command_name": "list-dataflow-endpoint-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/list-dataflow-endpoint-groups.html",
      "command_description": "Description\n\nReturns a list of DataflowEndpoint groups.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-dataflow-endpoint-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: dataflowEndpointGroupList",
      "command_synopsis": "Synopsis\n  list-dataflow-endpoint-groups\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndataflowEndpointGroupList -> (list)\n\nA list of dataflow endpoint groups.\n\n(structure)\n\nItem in a list of DataflowEndpoint groups.\n\ndataflowEndpointGroupArn -> (string)\n\nARN of a dataflow endpoint group.\n\ndataflowEndpointGroupId -> (string)\n\nUUID of a dataflow endpoint group.\n\nnextToken -> (string)\n\nNext token returned in the response of a previous ListDataflowEndpointGroups call. Used to get the next page of results."
    },
    {
      "command_name": "list-ground-stations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/list-ground-stations.html",
      "command_description": "Description\n\nReturns a list of ground stations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-ground-stations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: groundStationList",
      "command_synopsis": "Synopsis\n  list-ground-stations\n[--satellite-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--satellite-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--satellite-id (string)\n\nSatellite ID to retrieve on-boarded ground stations.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngroundStationList -> (list)\n\nList of ground stations.\n\n(structure)\n\nInformation about the ground station data.\n\ngroundStationId -> (string)\n\nUUID of a ground station.\n\ngroundStationName -> (string)\n\nName of a ground station.\n\nregion -> (string)\n\nGround station Region.\n\nnextToken -> (string)\n\nNext token that can be supplied in the next call to get the next page of ground stations."
    },
    {
      "command_name": "list-mission-profiles",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/list-mission-profiles.html",
      "command_description": "Description\n\nReturns a list of mission profiles.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-mission-profiles is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: missionProfileList",
      "command_synopsis": "Synopsis\n  list-mission-profiles\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmissionProfileList -> (list)\n\nList of mission profiles.\n\n(structure)\n\nItem in a list of mission profiles.\n\nmissionProfileArn -> (string)\n\nARN of a mission profile.\n\nmissionProfileId -> (string)\n\nUUID of a mission profile.\n\nname -> (string)\n\nName of a mission profile.\n\nregion -> (string)\n\nRegion of a mission profile.\n\nnextToken -> (string)\n\nNext token returned in the response of a previous ListMissionProfiles call. Used to get the next page of results."
    },
    {
      "command_name": "list-satellites",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/list-satellites.html",
      "command_description": "Description\n\nReturns a list of satellites.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-satellites is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: satellites",
      "command_synopsis": "Synopsis\n  list-satellites\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nNext token that can be supplied in the next call to get the next page of satellites.\n\nsatellites -> (list)\n\nList of satellites.\n\n(structure)\n\nItem in a list of satellites.\n\ngroundStations -> (list)\n\nA list of ground stations to which the satellite is on-boarded.\n\n(string)\n\nnoradSatelliteID -> (integer)\n\nNORAD satellite ID number.\n\nsatelliteArn -> (string)\n\nARN of a satellite.\n\nsatelliteId -> (string)\n\nUUID of a satellite."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/list-tags-for-resource.html",
      "command_description": "Description\n\nReturns a list of tags for a specified resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nARN of a resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (map)\n\nTags assigned to a resource.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "reserve-contact",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/reserve-contact.html",
      "command_description": "Description\n\nReserves a contact using specified parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  reserve-contact\n--end-time <value>\n--ground-station <value>\n--mission-profile-arn <value>\n--satellite-arn <value>\n--start-time <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--end-time <value>",
        "--ground-station <value>",
        "--mission-profile-arn <value>",
        "--satellite-arn <value>",
        "--start-time <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--end-time (timestamp)\n\nEnd time of a contact.\n\n--ground-station (string)\n\nName of a ground station.\n\n--mission-profile-arn (string)\n\nARN of a mission profile.\n\n--satellite-arn (string)\n\nARN of a satellite\n\n--start-time (timestamp)\n\nStart time of a contact.\n\n--tags (map)\n\nTags assigned to a contact.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncontactId -> (string)\n\nUUID of a contact."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/tag-resource.html",
      "command_description": "Description\n\nAssigns a tag to a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nARN of a resource tag.\n\n--tags (map)\n\nTags assigned to a resource.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/untag-resource.html",
      "command_description": "Description\n\nDeassigns a resource tag.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nARN of a resource.\n\n--tag-keys (list)\n\nKeys of a resource tag.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/update-config.html",
      "command_description": "Description\n\nUpdates the Config used when scheduling contacts.\n\nUpdating a Config will not update the execution parameters for existing future contacts scheduled with this Config .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-config\n--config-data <value>\n--config-id <value>\n--config-type <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--config-data <value>",
        "--config-id <value>",
        "--config-type <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--config-data (structure)\n\nParameters of a Config .\n\nantennaDownlinkConfig -> (structure)\n\nInformation about how AWS Ground Station should configure an antenna for downlink during a contact.\n\nspectrumConfig -> (structure)\n\nObject that describes a spectral Config .\n\nbandwidth -> (structure)\n\nBandwidth of a spectral Config . AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\nunits -> (string)\n\nFrequency bandwidth units.\n\nvalue -> (double)\n\nFrequency bandwidth value. AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig , valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\ncenterFrequency -> (structure)\n\nCenter frequency of a spectral Config . Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\nunits -> (string)\n\nFrequency units.\n\nvalue -> (double)\n\nFrequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\npolarization -> (string)\n\nPolarization of a spectral Config . Capturing both \"RIGHT_HAND\" and \"LEFT_HAND\" polarization requires two separate configs.\n\nantennaDownlinkDemodDecodeConfig -> (structure)\n\nInformation about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.\n\ndecodeConfig -> (structure)\n\nInformation about the decode Config .\n\nunvalidatedJSON -> (string)\n\nUnvalidated JSON of a decode Config .\n\ndemodulationConfig -> (structure)\n\nInformation about the demodulation Config .\n\nunvalidatedJSON -> (string)\n\nUnvalidated JSON of a demodulation Config .\n\nspectrumConfig -> (structure)\n\nInformation about the spectral Config .\n\nbandwidth -> (structure)\n\nBandwidth of a spectral Config . AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\nunits -> (string)\n\nFrequency bandwidth units.\n\nvalue -> (double)\n\nFrequency bandwidth value. AWS Ground Station currently has the following bandwidth limitations:\n\nFor AntennaDownlinkDemodDecodeconfig , valid values are between 125 kHz to 650 MHz.\n\nFor AntennaDownlinkconfig , valid values are between 10 kHz to 54 MHz.\n\nFor AntennaUplinkConfig , valid values are between 10 kHz to 54 MHz.\n\ncenterFrequency -> (structure)\n\nCenter frequency of a spectral Config . Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\nunits -> (string)\n\nFrequency units.\n\nvalue -> (double)\n\nFrequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\npolarization -> (string)\n\nPolarization of a spectral Config . Capturing both \"RIGHT_HAND\" and \"LEFT_HAND\" polarization requires two separate configs.\n\nantennaUplinkConfig -> (structure)\n\nInformation about how AWS Ground Station should conﬁgure an antenna for uplink during a contact.\n\nspectrumConfig -> (structure)\n\nInformation about the uplink spectral Config .\n\ncenterFrequency -> (structure)\n\nCenter frequency of an uplink spectral Config . Valid values are between 2025 to 2120 MHz.\n\nunits -> (string)\n\nFrequency units.\n\nvalue -> (double)\n\nFrequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.\n\npolarization -> (string)\n\nPolarization of an uplink spectral Config . Capturing both \"RIGHT_HAND\" and \"LEFT_HAND\" polarization requires two separate configs.\n\ntargetEirp -> (structure)\n\nEIRP of the target.\n\nunits -> (string)\n\nUnits of an EIRP.\n\nvalue -> (double)\n\nValue of an EIRP. Valid values are between 20.0 to 50.0 dBW.\n\ntransmitDisabled -> (boolean)\n\nWhether or not uplink transmit is disabled.\n\ndataflowEndpointConfig -> (structure)\n\nInformation about the dataflow endpoint Config .\n\ndataflowEndpointName -> (string)\n\nName of a dataflow endpoint.\n\ndataflowEndpointRegion -> (string)\n\nRegion of a dataflow endpoint.\n\ns3RecordingConfig -> (structure)\n\nInformation about an S3 recording Config .\n\nbucketArn -> (string)\n\nARN of the bucket to record to.\n\nprefix -> (string)\n\nS3 Key prefix to prefice data files.\n\nroleArn -> (string)\n\nARN of the role Ground Station assumes to write data to the bucket.\n\ntrackingConfig -> (structure)\n\nObject that determines whether tracking should be used during a contact executed with this Config in the mission profile.\n\nautotrack -> (string)\n\nCurrent setting for autotrack.\n\nuplinkEchoConfig -> (structure)\n\nInformation about an uplink echo Config .\n\nParameters from the AntennaUplinkConfig , corresponding to the specified AntennaUplinkConfigArn , are used when this UplinkEchoConfig is used in a contact.\n\nantennaUplinkConfigArn -> (string)\n\nARN of an uplink Config .\n\nenabled -> (boolean)\n\nWhether or not an uplink Config is enabled.\n\nJSON Syntax:\n\n{\n  \"antennaDownlinkConfig\": {\n    \"spectrumConfig\": {\n      \"bandwidth\": {\n        \"units\": \"GHz\"|\"MHz\"|\"kHz\",\n        \"value\": double\n      },\n      \"centerFrequency\": {\n        \"units\": \"GHz\"|\"MHz\"|\"kHz\",\n        \"value\": double\n      },\n      \"polarization\": \"LEFT_HAND\"|\"NONE\"|\"RIGHT_HAND\"\n    }\n  },\n  \"antennaDownlinkDemodDecodeConfig\": {\n    \"decodeConfig\": {\n      \"unvalidatedJSON\": \"string\"\n    },\n    \"demodulationConfig\": {\n      \"unvalidatedJSON\": \"string\"\n    },\n    \"spectrumConfig\": {\n      \"bandwidth\": {\n        \"units\": \"GHz\"|\"MHz\"|\"kHz\",\n        \"value\": double\n      },\n      \"centerFrequency\": {\n        \"units\": \"GHz\"|\"MHz\"|\"kHz\",\n        \"value\": double\n      },\n      \"polarization\": \"LEFT_HAND\"|\"NONE\"|\"RIGHT_HAND\"\n    }\n  },\n  \"antennaUplinkConfig\": {\n    \"spectrumConfig\": {\n      \"centerFrequency\": {\n        \"units\": \"GHz\"|\"MHz\"|\"kHz\",\n        \"value\": double\n      },\n      \"polarization\": \"LEFT_HAND\"|\"NONE\"|\"RIGHT_HAND\"\n    },\n    \"targetEirp\": {\n      \"units\": \"dBW\",\n      \"value\": double\n    },\n    \"transmitDisabled\": true|false\n  },\n  \"dataflowEndpointConfig\": {\n    \"dataflowEndpointName\": \"string\",\n    \"dataflowEndpointRegion\": \"string\"\n  },\n  \"s3RecordingConfig\": {\n    \"bucketArn\": \"string\",\n    \"prefix\": \"string\",\n    \"roleArn\": \"string\"\n  },\n  \"trackingConfig\": {\n    \"autotrack\": \"PREFERRED\"|\"REMOVED\"|\"REQUIRED\"\n  },\n  \"uplinkEchoConfig\": {\n    \"antennaUplinkConfigArn\": \"string\",\n    \"enabled\": true|false\n  }\n}\n\n\n--config-id (string)\n\nUUID of a Config .\n\n--config-type (string)\n\nType of a Config .\n\nPossible values:\n\nantenna-downlink\n\nantenna-downlink-demod-decode\n\nantenna-uplink\n\ndataflow-endpoint\n\ntracking\n\nuplink-echo\n\ns3-recording\n\n--name (string)\n\nName of a Config .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconfigArn -> (string)\n\nARN of a Config .\n\nconfigId -> (string)\n\nUUID of a Config .\n\nconfigType -> (string)\n\nType of a Config ."
    },
    {
      "command_name": "update-mission-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/groundstation/update-mission-profile.html",
      "command_description": "Description\n\nUpdates a mission profile.\n\nUpdating a mission profile will not update the execution parameters for existing future contacts.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-mission-profile\n[--contact-post-pass-duration-seconds <value>]\n[--contact-pre-pass-duration-seconds <value>]\n[--dataflow-edges <value>]\n[--minimum-viable-contact-duration-seconds <value>]\n--mission-profile-id <value>\n[--name <value>]\n[--tracking-config-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--contact-post-pass-duration-seconds <value>]",
        "[--contact-pre-pass-duration-seconds <value>]",
        "[--dataflow-edges <value>]",
        "[--minimum-viable-contact-duration-seconds <value>]",
        "--mission-profile-id <value>",
        "[--name <value>]",
        "[--tracking-config-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--contact-post-pass-duration-seconds (integer)\n\nAmount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n\n--contact-pre-pass-duration-seconds (integer)\n\nAmount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.\n\n--dataflow-edges (list)\n\nA list of lists of ARNs. Each list of ARNs is an edge, with a from Config and a to Config .\n\n(list)\n\n(string)\n\nShorthand Syntax:\n\nstring,string ...\n\n\nJSON Syntax:\n\n[\n  [\"string\", ...]\n  ...\n]\n\n\n--minimum-viable-contact-duration-seconds (integer)\n\nSmallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.\n\n--mission-profile-id (string)\n\nUUID of a mission profile.\n\n--name (string)\n\nName of a mission profile.\n\n--tracking-config-arn (string)\n\nARN of a tracking Config .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nmissionProfileId -> (string)\n\nUUID of a mission profile."
    }
  ],
  "service_description": "Description\n\nWelcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure."
}