{
  "service_name": "route53-recovery-control-config",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/index.html",
  "service_commands": [
    {
      "command_name": "create-cluster",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/create-cluster.html",
      "command_description": "Description\n\nCreate a new cluster. A cluster is a set of redundant Regional endpoints against which you can run API calls to update or get the state of one or more routing controls. Each cluster has a name, status, Amazon Resource Name (ARN), and an array of the five cluster endpoints (one for each supported Amazon Web Services Region) that you can use with API calls to the Amazon Route 53 Application Recovery Controller cluster data plane.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-cluster\n[--client-token <value>]\n--cluster-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--cluster-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique client idempotency token.\n\n--cluster-name (string)\n\nThe name of the cluster.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCluster -> (structure)\n\nThe cluster that was created.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) of the cluster.\n\nClusterEndpoints -> (list)\n\nEndpoints for a cluster. Specify one of these endpoints when you want to set or retrieve a routing control state in the cluster.\n\nTo get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Cluster (Data Plane) Actions.\n\n(structure)\n\nA cluster endpoint. Specify an endpoint when you want to set or retrieve a routing control state in the cluster.\n\nEndpoint -> (string)\n\nA cluster endpoint. Specify an endpoint and Amazon Web Services Region when you want to set or retrieve a routing control state in the cluster.\n\nTo get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Cluster (Data Plane) Actions.\n\nRegion -> (string)\n\nThe Amazon Web Services Region for a cluster endpoint.\n\nName -> (string)\n\nThe name of the cluster.\n\nStatus -> (string)\n\nDeployment status of a resource. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
    },
    {
      "command_name": "create-control-panel",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/create-control-panel.html",
      "command_description": "Description\n\nCreates a new control panel. A control panel represents a group of routing controls that can be changed together in a single transaction. You can use a control panel to centrally view the operational status of applications across your organization, and trigger multi-app failovers in a single transaction, for example, to fail over an Availability Zone or AWS Region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-control-panel\n[--client-token <value>]\n--cluster-arn <value>\n--control-panel-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--cluster-arn <value>",
        "--control-panel-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique client idempotency token.\n\n--cluster-arn (string)\n\nThe Amazon Resource Name (ARN) of the cluster for the control panel.\n\n--control-panel-name (string)\n\nThe name of the control panel.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nControlPanel -> (structure)\n\nInformation about a control panel.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) of the cluster that includes the control panel.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nDefaultControlPanel -> (boolean)\n\nA flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets this flag for that control panel. If you create a control panel yourself, this flag is set to false.\n\nName -> (string)\n\nThe name of the control panel. You can use any non-white space character in the name.\n\nRoutingControlCount -> (integer)\n\nThe number of routing controls in the control panel.\n\nStatus -> (string)\n\nThe deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
    },
    {
      "command_name": "create-routing-control",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/create-routing-control.html",
      "command_description": "Description\n\nCreates a new routing control.\n\nA routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control traffic routing.\n\nTo get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-routing-control\n[--client-token <value>]\n--cluster-arn <value>\n[--control-panel-arn <value>]\n--routing-control-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "--cluster-arn <value>",
        "[--control-panel-arn <value>]",
        "--routing-control-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nUnique client idempotency token.\n\n--cluster-arn (string)\n\nThe Amazon Resource Name (ARN) of the cluster that includes the routing control.\n\n--control-panel-arn (string)\n\nThe Amazon Resource Name (ARN) of the control panel that includes the routing control.\n\n--routing-control-name (string)\n\nThe name of the routing control.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRoutingControl -> (structure)\n\nThe routing control that is created.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel that includes the routing control.\n\nName -> (string)\n\nThe name of the routing control.\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Name (ARN) of the routing control.\n\nStatus -> (string)\n\nThe deployment status of a routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
    },
    {
      "command_name": "create-safety-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/create-safety-rule.html",
      "command_description": "Description\n\nCreates a safety rule in a control panel. Safety rules let you add safeguards around enabling and disabling routing controls, to help prevent unexpected outcomes.\n\nThere are two types of safety rules: assertion rules and gating rules.\n\nAssertion rule: An assertion rule enforces that, when a routing control state is changed, the criteria set by the rule configuration is met. Otherwise, the change to the routing control is not accepted.\n\nGating rule: A gating rule verifies that a set of gating controls evaluates as true, based on a rule configuration that you specify. If the gating rule evaluates to true, Amazon Route 53 Application Recovery Controller allows a set of routing control state changes to run and complete against the set of target controls.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-safety-rule\n[--assertion-rule <value>]\n[--client-token <value>]\n[--gating-rule <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--assertion-rule <value>]",
        "[--client-token <value>]",
        "[--gating-rule <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--assertion-rule (structure)\n\nA new assertion rule for a control panel.\n\nAssertedControls -> (list)\n\nThe routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.\n\n(string)\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) for the control panel.\n\nName -> (string)\n\nThe name of the assertion rule. You can use any non-white space character in the name.\n\nRuleConfig -> (structure)\n\nThe criteria that you set for specific assertion controls (routing controls) that designate how many controls must be enabled as the result of a transaction. For example, if you have three assertion controls, you might specify atleast 2 for your rule configuration. This means that at least two assertion controls must be enabled, so that at least two Amazon Web Services Regions are enabled.\n\nInverted -> (boolean)\n\nLogical negation of the rule. If the rule would usually evaluate true, it’s evaluated as false, and vice versa.\n\nThreshold -> (integer)\n\nThe value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.\n\nType -> (string)\n\nA rule can be one of the following: ATLEAST, AND, or OR.\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value.\n\nShorthand Syntax:\n\nAssertedControls=string,string,ControlPanelArn=string,Name=string,RuleConfig={Inverted=boolean,Threshold=integer,Type=string},WaitPeriodMs=integer\n\n\nJSON Syntax:\n\n{\n  \"AssertedControls\": [\"string\", ...],\n  \"ControlPanelArn\": \"string\",\n  \"Name\": \"string\",\n  \"RuleConfig\": {\n    \"Inverted\": true|false,\n    \"Threshold\": integer,\n    \"Type\": \"ATLEAST\"|\"AND\"|\"OR\"\n  },\n  \"WaitPeriodMs\": integer\n}\n\n\n--client-token (string)\n\nUnique client idempotency token.\n\n--gating-rule (structure)\n\nA new gating rule for a control panel.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nGatingControls -> (list)\n\nThe gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.\n\n(string)\n\nName -> (string)\n\nThe name for the new gating rule.\n\nRuleConfig -> (structure)\n\nThe criteria that you set for specific gating controls (routing controls) that designates how many controls must be enabled to allow you to change (set or unset) the target controls.\n\nInverted -> (boolean)\n\nLogical negation of the rule. If the rule would usually evaluate true, it’s evaluated as false, and vice versa.\n\nThreshold -> (integer)\n\nThe value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.\n\nType -> (string)\n\nA rule can be one of the following: ATLEAST, AND, or OR.\n\nTargetControls -> (list)\n\nRouting controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three Amazon Web Services Regions. Now you specify AtLeast 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true.\n\nIn other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.\n\n(string)\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value.\n\nShorthand Syntax:\n\nControlPanelArn=string,GatingControls=string,string,Name=string,RuleConfig={Inverted=boolean,Threshold=integer,Type=string},TargetControls=string,string,WaitPeriodMs=integer\n\n\nJSON Syntax:\n\n{\n  \"ControlPanelArn\": \"string\",\n  \"GatingControls\": [\"string\", ...],\n  \"Name\": \"string\",\n  \"RuleConfig\": {\n    \"Inverted\": true|false,\n    \"Threshold\": integer,\n    \"Type\": \"ATLEAST\"|\"AND\"|\"OR\"\n  },\n  \"TargetControls\": [\"string\", ...],\n  \"WaitPeriodMs\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAssertionRule -> (structure)\n\nAn assertion rule enforces that, when a routing control state is changed, the criteria set by the rule configuration is met. Otherwise, the change to the routing control is not accepted.\n\nAssertedControls -> (list)\n\nThe routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.\n\n(string)\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nName -> (string)\n\nName of the assertion rule. You can use any non-white space character in the name.\n\nRuleConfig -> (structure)\n\nThe criteria that you set for specific assertion controls (routing controls) that designate how many controls must be enabled as the result of a transaction. For example, if you have three assertion controls, you might specify atleast 2 for your rule configuration. This means that at least two assertion controls must be enabled, so that at least two Amazon Web Services Regions are enabled.\n\nInverted -> (boolean)\n\nLogical negation of the rule. If the rule would usually evaluate true, it’s evaluated as false, and vice versa.\n\nThreshold -> (integer)\n\nThe value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.\n\nType -> (string)\n\nA rule can be one of the following: ATLEAST, AND, or OR.\n\nSafetyRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the assertion rule.\n\nStatus -> (string)\n\nThe deployment status of an assertion rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value.\n\nGatingRule -> (structure)\n\nA gating rule verifies that a set of gating controls evaluates as true, based on a rule configuration that you specify. If the gating rule evaluates to true, Amazon Route 53 Application Recovery Controller allows a set of routing control state changes to run and complete against the set of target controls.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nGatingControls -> (list)\n\nThe gating controls for the gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.\n\n(string)\n\nName -> (string)\n\nThe name for the gating rule.\n\nRuleConfig -> (structure)\n\nThe criteria that you set for specific gating controls (routing controls) that designates how many controls must be enabled to allow you to change (set or unset) the target controls.\n\nInverted -> (boolean)\n\nLogical negation of the rule. If the rule would usually evaluate true, it’s evaluated as false, and vice versa.\n\nThreshold -> (integer)\n\nThe value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.\n\nType -> (string)\n\nA rule can be one of the following: ATLEAST, AND, or OR.\n\nSafetyRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the gating rule.\n\nStatus -> (string)\n\nThe deployment status of a gating rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.\n\nTargetControls -> (list)\n\nRouting controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three Amazon Web Services Regions. Now you specify ATLEAST 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true.\n\nIn other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.\n\n(string)\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value."
    },
    {
      "command_name": "delete-cluster",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/delete-cluster.html",
      "command_description": "Description\n\nDelete a cluster.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-cluster\n--cluster-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cluster-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cluster-arn (string)\n\nThe Amazon Resource Name (ARN) of the cluster that you’re deleting.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-control-panel",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/delete-control-panel.html",
      "command_description": "Description\n\nDeletes a control panel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-control-panel\n--control-panel-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--control-panel-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--control-panel-arn (string)\n\nThe Amazon Resource Name (ARN) of the control panel that you’re deleting.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-routing-control",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/delete-routing-control.html",
      "command_description": "Description\n\nDeletes a routing control.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-routing-control\n--routing-control-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--routing-control-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--routing-control-arn (string)\n\nThe Amazon Resource Name (ARN) of the routing control that you’re deleting.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-safety-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/delete-safety-rule.html",
      "command_description": "Description\n\nDeletes a safety rule.\n\n/>\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-safety-rule\n--safety-rule-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--safety-rule-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--safety-rule-arn (string)\n\nThe request body that you include when you update a safety rule.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-cluster",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/describe-cluster.html",
      "command_description": "Description\n\nDisplay the details about a cluster. The response includes the cluster name, endpoints, status, and Amazon Resource Name (ARN).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-cluster\n--cluster-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cluster-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cluster-arn (string)\n\nThe Amazon Resource Name (ARN) of the cluster that you’re getting details for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCluster -> (structure)\n\nThe cluster for the DescribeCluster request.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) of the cluster.\n\nClusterEndpoints -> (list)\n\nEndpoints for a cluster. Specify one of these endpoints when you want to set or retrieve a routing control state in the cluster.\n\nTo get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Cluster (Data Plane) Actions.\n\n(structure)\n\nA cluster endpoint. Specify an endpoint when you want to set or retrieve a routing control state in the cluster.\n\nEndpoint -> (string)\n\nA cluster endpoint. Specify an endpoint and Amazon Web Services Region when you want to set or retrieve a routing control state in the cluster.\n\nTo get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Cluster (Data Plane) Actions.\n\nRegion -> (string)\n\nThe Amazon Web Services Region for a cluster endpoint.\n\nName -> (string)\n\nThe name of the cluster.\n\nStatus -> (string)\n\nDeployment status of a resource. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
    },
    {
      "command_name": "describe-control-panel",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/describe-control-panel.html",
      "command_description": "Description\n\nDisplays details about a control panel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-control-panel\n--control-panel-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--control-panel-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--control-panel-arn (string)\n\nThe Amazon Resource Name (ARN) of the control panel that you’re getting details for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nControlPanel -> (structure)\n\nInformation about the control panel.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) of the cluster that includes the control panel.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nDefaultControlPanel -> (boolean)\n\nA flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets this flag for that control panel. If you create a control panel yourself, this flag is set to false.\n\nName -> (string)\n\nThe name of the control panel. You can use any non-white space character in the name.\n\nRoutingControlCount -> (integer)\n\nThe number of routing controls in the control panel.\n\nStatus -> (string)\n\nThe deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
    },
    {
      "command_name": "describe-routing-control",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/describe-routing-control.html",
      "command_description": "Description\n\nDisplays details about a routing control. A routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control routing.\n\nTo get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-routing-control\n--routing-control-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--routing-control-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--routing-control-arn (string)\n\nThe Amazon Resource Name (ARN) of the routing control that you’re getting details for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRoutingControl -> (structure)\n\nInformation about the routing control.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel that includes the routing control.\n\nName -> (string)\n\nThe name of the routing control.\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Name (ARN) of the routing control.\n\nStatus -> (string)\n\nThe deployment status of a routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
    },
    {
      "command_name": "describe-safety-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/describe-safety-rule.html",
      "command_description": "Description\n\nDescribes the safety rules (that is, the assertion rules and gating rules) for the routing controls in a control panel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-safety-rule\n--safety-rule-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--safety-rule-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--safety-rule-arn (string)\n\nThe request body that you include when you update a safety rule.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAssertionRule -> (structure)\n\nAn assertion rule enforces that, when a routing control state is changed, the criteria set by the rule configuration is met. Otherwise, the change to the routing control is not accepted.\n\nAssertedControls -> (list)\n\nThe routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.\n\n(string)\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nName -> (string)\n\nName of the assertion rule. You can use any non-white space character in the name.\n\nRuleConfig -> (structure)\n\nThe criteria that you set for specific assertion controls (routing controls) that designate how many controls must be enabled as the result of a transaction. For example, if you have three assertion controls, you might specify atleast 2 for your rule configuration. This means that at least two assertion controls must be enabled, so that at least two Amazon Web Services Regions are enabled.\n\nInverted -> (boolean)\n\nLogical negation of the rule. If the rule would usually evaluate true, it’s evaluated as false, and vice versa.\n\nThreshold -> (integer)\n\nThe value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.\n\nType -> (string)\n\nA rule can be one of the following: ATLEAST, AND, or OR.\n\nSafetyRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the assertion rule.\n\nStatus -> (string)\n\nThe deployment status of an assertion rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value.\n\nGatingRule -> (structure)\n\nA gating rule verifies that a set of gating controls evaluates as true, based on a rule configuration that you specify. If the gating rule evaluates to true, Amazon Route 53 Application Recovery Controller allows a set of routing control state changes to run and complete against the set of target controls.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nGatingControls -> (list)\n\nThe gating controls for the gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.\n\n(string)\n\nName -> (string)\n\nThe name for the gating rule.\n\nRuleConfig -> (structure)\n\nThe criteria that you set for specific gating controls (routing controls) that designates how many controls must be enabled to allow you to change (set or unset) the target controls.\n\nInverted -> (boolean)\n\nLogical negation of the rule. If the rule would usually evaluate true, it’s evaluated as false, and vice versa.\n\nThreshold -> (integer)\n\nThe value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.\n\nType -> (string)\n\nA rule can be one of the following: ATLEAST, AND, or OR.\n\nSafetyRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the gating rule.\n\nStatus -> (string)\n\nThe deployment status of a gating rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.\n\nTargetControls -> (list)\n\nRouting controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three Amazon Web Services Regions. Now you specify ATLEAST 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true.\n\nIn other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.\n\n(string)\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value."
    },
    {
      "command_name": "list-associated-route53-health-checks",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/list-associated-route53-health-checks.html",
      "command_description": "Description\n\nReturns an array of all Amazon Route 53 health checks associated with a specific routing control.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-associated-route53-health-checks\n[--max-results <value>]\n[--next-token <value>]\n--routing-control-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "--routing-control-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nThe number of objects that you want to return with this call.\n\n--next-token (string)\n\nThe token that identifies which batch of results you want to see.\n\n--routing-control-arn (string)\n\nThe Amazon Resource Name (ARN) of the routing control that you’re getting details for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHealthCheckIds -> (list)\n\nIdentifiers for the health checks.\n\n(string)\n\nNextToken -> (string)\n\nThe token that identifies which batch of results you want to see."
    },
    {
      "command_name": "list-clusters",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/list-clusters.html",
      "command_description": "Description\n\nReturns an array of all the clusters in an account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-clusters\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nThe number of objects that you want to return with this call.\n\n--next-token (string)\n\nThe token that identifies which batch of results you want to see.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nClusters -> (list)\n\nAn array of the clusters in an account.\n\n(structure)\n\nA cluster is a set of five consensus-forming Regional endpoints that represent the infrastructure that hosts your routing controls. Typically, you host together on one cluster all of the routing controls for your applications.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) of the cluster.\n\nClusterEndpoints -> (list)\n\nEndpoints for a cluster. Specify one of these endpoints when you want to set or retrieve a routing control state in the cluster.\n\nTo get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Cluster (Data Plane) Actions.\n\n(structure)\n\nA cluster endpoint. Specify an endpoint when you want to set or retrieve a routing control state in the cluster.\n\nEndpoint -> (string)\n\nA cluster endpoint. Specify an endpoint and Amazon Web Services Region when you want to set or retrieve a routing control state in the cluster.\n\nTo get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Cluster (Data Plane) Actions.\n\nRegion -> (string)\n\nThe Amazon Web Services Region for a cluster endpoint.\n\nName -> (string)\n\nThe name of the cluster.\n\nStatus -> (string)\n\nDeployment status of a resource. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.\n\nNextToken -> (string)\n\nThe token that identifies which batch of results you want to see."
    },
    {
      "command_name": "list-control-panels",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/list-control-panels.html",
      "command_description": "Description\n\nReturns an array of control panels for a cluster.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-control-panels\n[--cluster-arn <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cluster-arn <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cluster-arn (string)\n\nThe Amazon Resource Name (ARN) of a cluster.\n\n--max-results (integer)\n\nThe number of objects that you want to return with this call.\n\n--next-token (string)\n\nThe token that identifies which batch of results you want to see.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nControlPanels -> (list)\n\nThe result of a successful ListControlPanel request.\n\n(structure)\n\nA control panel represents a group of routing controls that can be changed together in a single transaction.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) of the cluster that includes the control panel.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nDefaultControlPanel -> (boolean)\n\nA flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets this flag for that control panel. If you create a control panel yourself, this flag is set to false.\n\nName -> (string)\n\nThe name of the control panel. You can use any non-white space character in the name.\n\nRoutingControlCount -> (integer)\n\nThe number of routing controls in the control panel.\n\nStatus -> (string)\n\nThe deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.\n\nNextToken -> (string)\n\nThe token that identifies which batch of results you want to see."
    },
    {
      "command_name": "list-routing-controls",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/list-routing-controls.html",
      "command_description": "Description\n\nReturns an array of routing controls for a control panel. A routing control is an Amazon Route 53 Application Recovery Controller construct that has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control routing.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-routing-controls\n--control-panel-arn <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--control-panel-arn <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--control-panel-arn (string)\n\nThe Amazon Resource Name (ARN) of the control panel that you’re getting routing control details for.\n\n--max-results (integer)\n\nThe number of objects that you want to return with this call.\n\n--next-token (string)\n\nThe token that identifies which batch of results you want to see.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nThe token that identifies which batch of results you want to see.\n\nRoutingControls -> (list)\n\nAn array of routing controls.\n\n(structure)\n\nA routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control traffic routing.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel that includes the routing control.\n\nName -> (string)\n\nThe name of the routing control.\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Name (ARN) of the routing control.\n\nStatus -> (string)\n\nThe deployment status of a routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
    },
    {
      "command_name": "list-safety-rules",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/list-safety-rules.html",
      "command_description": "Description\n\nList the safety rules (the assertion rules and gating rules) that you’ve defined for the routing controls in a control panel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-safety-rules\n--control-panel-arn <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--control-panel-arn <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--control-panel-arn (string)\n\nThe Amazon Resource Name (ARN) of the control panel that you’re getting details for.\n\n--max-results (integer)\n\nThe number of objects that you want to return with this call.\n\n--next-token (string)\n\nThe token that identifies which batch of results you want to see.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nThe token that identifies which batch of results you want to see.\n\nSafetyRules -> (list)\n\nThe list of safety rules in a control panel.\n\n(structure)\n\nA safety rule. A safety rule can be an assertion rule or a gating rule.\n\nASSERTION -> (structure)\n\nAn assertion rule enforces that, when a routing control state is changed, the criteria set by the rule configuration is met. Otherwise, the change to the routing control is not accepted.\n\nAssertedControls -> (list)\n\nThe routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.\n\n(string)\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nName -> (string)\n\nName of the assertion rule. You can use any non-white space character in the name.\n\nRuleConfig -> (structure)\n\nThe criteria that you set for specific assertion controls (routing controls) that designate how many controls must be enabled as the result of a transaction. For example, if you have three assertion controls, you might specify atleast 2 for your rule configuration. This means that at least two assertion controls must be enabled, so that at least two Amazon Web Services Regions are enabled.\n\nInverted -> (boolean)\n\nLogical negation of the rule. If the rule would usually evaluate true, it’s evaluated as false, and vice versa.\n\nThreshold -> (integer)\n\nThe value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.\n\nType -> (string)\n\nA rule can be one of the following: ATLEAST, AND, or OR.\n\nSafetyRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the assertion rule.\n\nStatus -> (string)\n\nThe deployment status of an assertion rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value.\n\nGATING -> (structure)\n\nA gating rule verifies that a set of gating controls evaluates as true, based on a rule configuration that you specify. If the gating rule evaluates to true, Amazon Route 53 Application Recovery Controller allows a set of routing control state changes to run and complete against the set of target controls.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nGatingControls -> (list)\n\nThe gating controls for the gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.\n\n(string)\n\nName -> (string)\n\nThe name for the gating rule.\n\nRuleConfig -> (structure)\n\nThe criteria that you set for specific gating controls (routing controls) that designates how many controls must be enabled to allow you to change (set or unset) the target controls.\n\nInverted -> (boolean)\n\nLogical negation of the rule. If the rule would usually evaluate true, it’s evaluated as false, and vice versa.\n\nThreshold -> (integer)\n\nThe value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.\n\nType -> (string)\n\nA rule can be one of the following: ATLEAST, AND, or OR.\n\nSafetyRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the gating rule.\n\nStatus -> (string)\n\nThe deployment status of a gating rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.\n\nTargetControls -> (list)\n\nRouting controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three Amazon Web Services Regions. Now you specify ATLEAST 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true.\n\nIn other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.\n\n(string)\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value."
    },
    {
      "command_name": "update-control-panel",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/update-control-panel.html",
      "command_description": "Description\n\nUpdates a control panel. The only update you can make to a control panel is to change the name of the control panel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-control-panel\n--control-panel-arn <value>\n--control-panel-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--control-panel-arn <value>",
        "--control-panel-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--control-panel-arn (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\n--control-panel-name (string)\n\nThe name of the control panel.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nControlPanel -> (structure)\n\nThe control panel to update.\n\nClusterArn -> (string)\n\nThe Amazon Resource Name (ARN) of the cluster that includes the control panel.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nDefaultControlPanel -> (boolean)\n\nA flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets this flag for that control panel. If you create a control panel yourself, this flag is set to false.\n\nName -> (string)\n\nThe name of the control panel. You can use any non-white space character in the name.\n\nRoutingControlCount -> (integer)\n\nThe number of routing controls in the control panel.\n\nStatus -> (string)\n\nThe deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
    },
    {
      "command_name": "update-routing-control",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/update-routing-control.html",
      "command_description": "Description\n\nUpdates a routing control. You can only update the name of the routing control. To get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-routing-control\n--routing-control-arn <value>\n--routing-control-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--routing-control-arn <value>",
        "--routing-control-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--routing-control-arn (string)\n\nThe Amazon Resource Name (ARN) of the routing control.\n\n--routing-control-name (string)\n\nThe name of the routing control.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRoutingControl -> (structure)\n\nThe routing control that was updated.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel that includes the routing control.\n\nName -> (string)\n\nThe name of the routing control.\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Name (ARN) of the routing control.\n\nStatus -> (string)\n\nThe deployment status of a routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION."
    },
    {
      "command_name": "update-safety-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/update-safety-rule.html",
      "command_description": "Description\n\nUpdate a safety rule (an assertion rule or gating rule) for the routing controls in a control panel. You can only update the name and the waiting period for a safety rule. To make other updates, delete the safety rule and create a new safety rule.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-safety-rule\n[--assertion-rule-update <value>]\n[--gating-rule-update <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--assertion-rule-update <value>]",
        "[--gating-rule-update <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--assertion-rule-update (structure)\n\nAn update to an assertion rule. You can update the name or the evaluation period (wait period). If you don’t specify one of the items to update, the item is unchanged.\n\nName -> (string)\n\nThe name of the assertion rule. You can use any non-white space character in the name.\n\nSafetyRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the assertion rule.\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value.\n\nShorthand Syntax:\n\nName=string,SafetyRuleArn=string,WaitPeriodMs=integer\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"SafetyRuleArn\": \"string\",\n  \"WaitPeriodMs\": integer\n}\n\n\n--gating-rule-update (structure)\n\nUpdate to a gating rule. You can update the name or the evaluation period (wait period). If you don’t specify one of the items to update, the item is unchanged.\n\nName -> (string)\n\nThe name for the gating rule.\n\nSafetyRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the gating rule.\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value.\n\nShorthand Syntax:\n\nName=string,SafetyRuleArn=string,WaitPeriodMs=integer\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"SafetyRuleArn\": \"string\",\n  \"WaitPeriodMs\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAssertionRule -> (structure)\n\nAn assertion rule enforces that, when a routing control state is changed, the criteria set by the rule configuration is met. Otherwise, the change to the routing control is not accepted.\n\nAssertedControls -> (list)\n\nThe routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.\n\n(string)\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nName -> (string)\n\nName of the assertion rule. You can use any non-white space character in the name.\n\nRuleConfig -> (structure)\n\nThe criteria that you set for specific assertion controls (routing controls) that designate how many controls must be enabled as the result of a transaction. For example, if you have three assertion controls, you might specify atleast 2 for your rule configuration. This means that at least two assertion controls must be enabled, so that at least two Amazon Web Services Regions are enabled.\n\nInverted -> (boolean)\n\nLogical negation of the rule. If the rule would usually evaluate true, it’s evaluated as false, and vice versa.\n\nThreshold -> (integer)\n\nThe value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.\n\nType -> (string)\n\nA rule can be one of the following: ATLEAST, AND, or OR.\n\nSafetyRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the assertion rule.\n\nStatus -> (string)\n\nThe deployment status of an assertion rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value.\n\nGatingRule -> (structure)\n\nA gating rule verifies that a set of gating controls evaluates as true, based on a rule configuration that you specify. If the gating rule evaluates to true, Amazon Route 53 Application Recovery Controller allows a set of routing control state changes to run and complete against the set of target controls.\n\nControlPanelArn -> (string)\n\nThe Amazon Resource Name (ARN) of the control panel.\n\nGatingControls -> (list)\n\nThe gating controls for the gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.\n\n(string)\n\nName -> (string)\n\nThe name for the gating rule.\n\nRuleConfig -> (structure)\n\nThe criteria that you set for specific gating controls (routing controls) that designates how many controls must be enabled to allow you to change (set or unset) the target controls.\n\nInverted -> (boolean)\n\nLogical negation of the rule. If the rule would usually evaluate true, it’s evaluated as false, and vice versa.\n\nThreshold -> (integer)\n\nThe value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.\n\nType -> (string)\n\nA rule can be one of the following: ATLEAST, AND, or OR.\n\nSafetyRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the gating rule.\n\nStatus -> (string)\n\nThe deployment status of a gating rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.\n\nTargetControls -> (list)\n\nRouting controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three Amazon Web Services Regions. Now you specify ATLEAST 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true.\n\nIn other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.\n\n(string)\n\nWaitPeriodMs -> (integer)\n\nAn evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent “flapping” of state. The wait period is 5000 ms by default, but you can choose a custom value."
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53-recovery-control-config/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description\n\nRecovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller"
}