{
  "service_name": "codebuild",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/index.html",
  "service_commands": [
    {
      "command_name": "batch-delete-builds",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/batch-delete-builds.html",
      "command_description": "Description\n\nDeletes one or more builds.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-delete-builds\n--ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ids (list)\n\nThe IDs of the builds to delete.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuildsDeleted -> (list)\n\nThe IDs of the builds that were successfully deleted.\n\n(string)\n\nbuildsNotDeleted -> (list)\n\nInformation about any builds that could not be successfully deleted.\n\n(structure)\n\nInformation about a build that could not be successfully deleted.\n\nid -> (string)\n\nThe ID of the build that could not be successfully deleted.\n\nstatusCode -> (string)\n\nAdditional information about the build that could not be successfully deleted.",
      "command_examples": "Examples\n\nTo delete builds in AWS CodeBuild.\n\nThe following batch-delete-builds example deletes builds in CodeBuild with the specified IDs.\n\naws codebuild batch-delete-builds --ids my-build-project-one:a1b2c3d4-5678-9012-abcd-11111EXAMPLE my-build-project-two:a1b2c3d4-5678-9012-abcd-22222EXAMPLE\n\n\nOutput:\n\n{\n    \"buildsNotDeleted\": [\n        {\n            \"id\": \"arn:aws:codebuild:us-west-2:123456789012:build/my-build-project-one:a1b2c3d4-5678-9012-abcd-11111EXAMPLE\",\n            \"statusCode\": \"BUILD_IN_PROGRESS\"\n        }\n    ],\n    \"buildsDeleted\": [\n        \"arn:aws:codebuild:us-west-2:123456789012:build/my-build-project-two:a1b2c3d4-5678-9012-abcd-22222EXAMPLE\"\n    ]\n}\n\n\nFor more information, see Delete Builds (AWS CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "batch-get-build-batches",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/batch-get-build-batches.html",
      "command_description": "Description\n\nRetrieves information about one or more batch builds.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-build-batches\n--ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ids (list)\n\nAn array that contains the batch build identifiers to retrieve.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuildBatches -> (list)\n\nAn array of BuildBatch objects that represent the retrieved batch builds.\n\n(structure)\n\nContains information about a batch build.\n\nid -> (string)\n\nThe identifier of the batch build.\n\narn -> (string)\n\nThe ARN of the batch build.\n\nstartTime -> (timestamp)\n\nThe date and time that the batch build started.\n\nendTime -> (timestamp)\n\nThe date and time that the batch build ended.\n\ncurrentPhase -> (string)\n\nThe current phase of the batch build.\n\nbuildBatchStatus -> (string)\n\nThe status of the batch build.\n\nsourceVersion -> (string)\n\nThe identifier of the version of the source code to be built.\n\nresolvedSourceVersion -> (string)\n\nThe identifier of the resolved version of this batch build’s source code.\n\nFor CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID.\n\nFor CodePipeline, the source revision provided by CodePipeline.\n\nFor Amazon S3, this does not apply.\n\nprojectName -> (string)\n\nThe name of the batch build project.\n\nphases -> (list)\n\nAn array of BuildBatchPhase objects the specify the phases of the batch build.\n\n(structure)\n\nContains information about a stage for a batch build.\n\nphaseType -> (string)\n\nThe name of the batch build phase. Valid values include:\n\nCOMBINE_ARTIFACTS\n\nBuild output artifacts are being combined and uploaded to the output location.\n\nDOWNLOAD_BATCHSPEC\n\nThe batch build specification is being downloaded.\n\nFAILED\n\nOne or more of the builds failed.\n\nIN_PROGRESS\n\nThe batch build is in progress.\n\nSTOPPED\n\nThe batch build was stopped.\n\nSUBMITTED\n\nThe btach build has been submitted.\n\nSUCCEEDED\n\nThe batch build succeeded.\n\nphaseStatus -> (string)\n\nThe current status of the batch build phase. Valid values include:\n\nFAILED\n\nThe build phase failed.\n\nFAULT\n\nThe build phase faulted.\n\nIN_PROGRESS\n\nThe build phase is still in progress.\n\nSTOPPED\n\nThe build phase stopped.\n\nSUCCEEDED\n\nThe build phase succeeded.\n\nTIMED_OUT\n\nThe build phase timed out.\n\nstartTime -> (timestamp)\n\nWhen the batch build phase started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the batch build phase ended, expressed in Unix time format.\n\ndurationInSeconds -> (long)\n\nHow long, in seconds, between the starting and ending times of the batch build’s phase.\n\ncontexts -> (list)\n\nAdditional information about the batch build phase. Especially to help troubleshoot a failed batch build.\n\n(structure)\n\nAdditional information about a build phase that has an error. You can use this information for troubleshooting.\n\nstatusCode -> (string)\n\nThe status code for the context of the build phase.\n\nmessage -> (string)\n\nAn explanation of the build phase’s context. This might include a command ID and an exit code.\n\nsource -> (structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects that define the sources for the batch build.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. Each ProjectSourceVersion must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nA BuildArtifacts object the defines the build artifacts for this batch build.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of BuildArtifacts objects the define the build artifacts for this batch build.\n\n(structure)\n\nInformation about build output artifacts.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build project.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment of the build project.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe name of a service role used for builds in the batch.\n\nlogConfig -> (structure)\n\nInformation about logs for a build project. These can be logs in CloudWatch Logs, built in a specified S3 bucket, or both.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nbuildTimeoutInMinutes -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the build in a batch must be completed in.\n\nqueuedTimeoutInMinutes -> (integer)\n\nSpecifies the amount of time, in minutes, that the batch build is allowed to be queued before it times out.\n\ncomplete -> (boolean)\n\nIndicates if the batch build is complete.\n\ninitiator -> (string)\n\nThe entity that started the batch build. Valid values include:\n\nIf CodePipeline started the build, the pipeline’s name (for example, codepipeline/my-demo-pipeline ).\n\nIf an IAM user started the build, the user’s name.\n\nIf the Jenkins plugin for CodeBuild started the build, the string CodeBuild-Jenkins-Plugin .\n\nvpcConfig -> (structure)\n\nInformation about the VPC configuration that CodeBuild accesses.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the batch build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\nbuildBatchNumber -> (long)\n\nThe number of the batch build. For each project, the buildBatchNumber of its first batch build is 1 . The buildBatchNumber of each subsequent batch build is incremented by 1 . If a batch build is deleted, the buildBatchNumber of other batch builds does not change.\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for the batch build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\nbuildBatchConfig -> (structure)\n\nContains configuration information about a batch build project.\n\nserviceRole -> (string)\n\nSpecifies the service role ARN for the batch build project.\n\ncombineArtifacts -> (boolean)\n\nSpecifies if the build artifacts for the batch build should be combined into a single artifact location.\n\nrestrictions -> (structure)\n\nA BatchRestrictions object that specifies the restrictions for the batch build.\n\nmaximumBuildsAllowed -> (integer)\n\nSpecifies the maximum number of builds allowed.\n\ncomputeTypesAllowed -> (list)\n\nAn array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the CodeBuild User Guide for these values.\n\n(string)\n\ntimeoutInMins -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the batch build must be completed in.\n\nbatchReportMode -> (string)\n\nSpecifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\nREPORT_AGGREGATED_BATCH\n\n(Default) Aggregate all of the build statuses into a single status report.\n\nREPORT_INDIVIDUAL_BUILDS\n\nSend a separate status report for each individual build.\n\nbuildGroups -> (list)\n\nAn array of BuildGroup objects that define the build groups for the batch build.\n\n(structure)\n\nContains information about a batch build build group. Build groups are used to combine builds that can run in parallel, while still being able to set dependencies on other build groups.\n\nidentifier -> (string)\n\nContains the identifier of the build group.\n\ndependsOn -> (list)\n\nAn array of strings that contain the identifiers of the build groups that this build group depends on.\n\n(string)\n\nignoreFailure -> (boolean)\n\nSpecifies if failures in this build group can be ignored.\n\ncurrentBuildSummary -> (structure)\n\nA BuildSummary object that contains a summary of the current build group.\n\narn -> (string)\n\nThe batch build ARN.\n\nrequestedOn -> (timestamp)\n\nWhen the build was started, expressed in Unix time format.\n\nbuildStatus -> (string)\n\nThe status of the build group.\n\nFAILED\n\nThe build group failed.\n\nFAULT\n\nThe build group faulted.\n\nIN_PROGRESS\n\nThe build group is still in progress.\n\nSTOPPED\n\nThe build group stopped.\n\nSUCCEEDED\n\nThe build group succeeded.\n\nTIMED_OUT\n\nThe build group timed out.\n\nprimaryArtifact -> (structure)\n\nA ResolvedArtifact object that represents the primary build artifacts for the build group.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\nsecondaryArtifacts -> (list)\n\nAn array of ResolvedArtifact objects that represents the secondary build artifacts for the build group.\n\n(structure)\n\nRepresents a resolved build artifact. A resolved artifact is an artifact that is built and deployed to the destination, such as Amazon S3.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\npriorBuildSummaryList -> (list)\n\nAn array of BuildSummary objects that contain summaries of previous build groups.\n\n(structure)\n\nContains summary information about a batch build group.\n\narn -> (string)\n\nThe batch build ARN.\n\nrequestedOn -> (timestamp)\n\nWhen the build was started, expressed in Unix time format.\n\nbuildStatus -> (string)\n\nThe status of the build group.\n\nFAILED\n\nThe build group failed.\n\nFAULT\n\nThe build group faulted.\n\nIN_PROGRESS\n\nThe build group is still in progress.\n\nSTOPPED\n\nThe build group stopped.\n\nSUCCEEDED\n\nThe build group succeeded.\n\nTIMED_OUT\n\nThe build group timed out.\n\nprimaryArtifact -> (structure)\n\nA ResolvedArtifact object that represents the primary build artifacts for the build group.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\nsecondaryArtifacts -> (list)\n\nAn array of ResolvedArtifact objects that represents the secondary build artifacts for the build group.\n\n(structure)\n\nRepresents a resolved build artifact. A resolved artifact is an artifact that is built and deployed to the destination, such as Amazon S3.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\ndebugSessionEnabled -> (boolean)\n\nSpecifies if session debugging is enabled for this batch build. For more information, see Viewing a running build in Session Manager . Batch session debugging is not supported for matrix batch builds.\n\nbuildBatchesNotFound -> (list)\n\nAn array that contains the identifiers of any batch builds that are not found.\n\n(string)",
      "command_examples": "Examples\n\nTo view details of builds in AWS CodeBuild.\n\nThe following batch-get-build-batches example gets information about build batches in CodeBuild with the specified IDs.\n\naws codebuild batch-get-build-batches \\\n    --ids codebuild-demo-project:e9c4f4df-3f43-41d2-ab3a-60fe2EXAMPLE\n\n\nOutput:\n\n{\n    \"buildBatches\": [\n        {\n            \"id\": \"codebuild-demo-project:e9c4f4df-3f43-41d2-ab3a-60fe2EXAMPLE\",\n            \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:build-batch/codebuild-demo-project:e9c4f4df-3f43-41d2-ab3a-60fe2EXAMPLE\",\n            \"startTime\": \"2020-11-03T21:52:20.775000+00:00\",\n            \"endTime\": \"2020-11-03T21:56:59.784000+00:00\",\n            \"currentPhase\": \"SUCCEEDED\",\n            \"buildBatchStatus\": \"SUCCEEDED\",\n            \"resolvedSourceVersion\": \"0a6546f68309560d08a310daac92314c4d378f6b\",\n            \"projectName\": \"codebuild-demo-project\",\n            \"phases\": [\n                {\n                    \"phaseType\": \"SUBMITTED\",\n                    \"phaseStatus\": \"SUCCEEDED\",\n                    \"startTime\": \"2020-11-03T21:52:20.775000+00:00\",\n                    \"endTime\": \"2020-11-03T21:52:20.976000+00:00\",\n                    \"durationInSeconds\": 0\n                },\n                {\n                    \"phaseType\": \"DOWNLOAD_BATCHSPEC\",\n                    \"phaseStatus\": \"SUCCEEDED\",\n                    \"startTime\": \"2020-11-03T21:52:20.976000+00:00\",\n                    \"endTime\": \"2020-11-03T21:52:57.401000+00:00\",\n                    \"durationInSeconds\": 36\n                },\n                {\n                    \"phaseType\": \"IN_PROGRESS\",\n                    \"phaseStatus\": \"SUCCEEDED\",\n                    \"startTime\": \"2020-11-03T21:52:57.401000+00:00\",\n                    \"endTime\": \"2020-11-03T21:56:59.751000+00:00\",\n                    \"durationInSeconds\": 242\n                },\n                {\n                    \"phaseType\": \"COMBINE_ARTIFACTS\",\n                    \"phaseStatus\": \"SUCCEEDED\",\n                    \"startTime\": \"2020-11-03T21:56:59.751000+00:00\",\n                    \"endTime\": \"2020-11-03T21:56:59.784000+00:00\",\n                    \"durationInSeconds\": 0\n                },\n                {\n                    \"phaseType\": \"SUCCEEDED\",\n                    \"startTime\": \"2020-11-03T21:56:59.784000+00:00\"\n                }\n            ],\n            \"source\": {\n                \"type\": \"GITHUB\",\n                \"location\": \"https://github.com/my-repo/codebuild-demo-project.git\",\n                \"gitCloneDepth\": 1,\n                \"gitSubmodulesConfig\": {\n                    \"fetchSubmodules\": false\n                },\n                \"reportBuildStatus\": false,\n                \"insecureSsl\": false\n            },\n            \"secondarySources\": [],\n            \"secondarySourceVersions\": [],\n            \"artifacts\": {\n                \"location\": \"\"\n            },\n            \"secondaryArtifacts\": [],\n            \"cache\": {\n                \"type\": \"NO_CACHE\"\n            },\n            \"environment\": {\n                \"type\": \"LINUX_CONTAINER\",\n                \"image\": \"aws/codebuild/amazonlinux2-x86_64-standard:3.0\",\n                \"computeType\": \"BUILD_GENERAL1_SMALL\",\n                \"environmentVariables\": [],\n                \"privilegedMode\": false,\n                \"imagePullCredentialsType\": \"CODEBUILD\"\n            },\n            \"logConfig\": {\n                \"cloudWatchLogs\": {\n                    \"status\": \"ENABLED\"\n                },\n                \"s3Logs\": {\n                    \"status\": \"DISABLED\",\n                    \"encryptionDisabled\": false\n                }\n            },\n            \"buildTimeoutInMinutes\": 60,\n            \"queuedTimeoutInMinutes\": 480,\n            \"complete\": true,\n            \"initiator\": \"Strohm\",\n            \"encryptionKey\": \"arn:aws:kms:us-west-2:123456789012:alias/aws/s3\",\n            \"buildBatchNumber\": 6,\n            \"buildBatchConfig\": {\n                \"serviceRole\": \"arn:aws:iam::123456789012:role/service-role/codebuild-demo-project\",\n                \"restrictions\": {\n                    \"maximumBuildsAllowed\": 100\n                },\n                \"timeoutInMins\": 480\n            },\n            \"buildGroups\": [\n                {\n                    \"identifier\": \"DOWNLOAD_SOURCE\",\n                    \"ignoreFailure\": false,\n                    \"currentBuildSummary\": {\n                        \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:build/codebuild-demo-project:379737d8-bc35-48ec-97fd-776d27545315\",\n                        \"requestedOn\": \"2020-11-03T21:52:21.394000+00:00\",\n                        \"buildStatus\": \"SUCCEEDED\",\n                        \"primaryArtifact\": {\n                            \"type\": \"no_artifacts\",\n                            \"identifier\": \"DOWNLOAD_SOURCE\"\n                        },\n                        \"secondaryArtifacts\": []\n                    }\n                },\n                {\n                    \"identifier\": \"linux_small\",\n                    \"dependsOn\": [],\n                    \"ignoreFailure\": false,\n                    \"currentBuildSummary\": {\n                        \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:build/codebuild-demo-project:dd785171-ed84-4bb6-8ede-ceeb86e54bdb\",\n                        \"requestedOn\": \"2020-11-03T21:52:57.604000+00:00\",\n                        \"buildStatus\": \"SUCCEEDED\",\n                        \"primaryArtifact\": {\n                            \"type\": \"no_artifacts\",\n                            \"identifier\": \"linux_small\"\n                        },\n                        \"secondaryArtifacts\": []\n                    }\n                },\n                {\n                    \"identifier\": \"linux_medium\",\n                    \"dependsOn\": [\n                        \"linux_small\"\n                    ],\n                    \"ignoreFailure\": false,\n                    \"currentBuildSummary\": {\n                        \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:build/codebuild-demo-project:97cf7bd4-5313-4786-8243-4aef350a1267\",\n                        \"requestedOn\": \"2020-11-03T21:54:18.474000+00:00\",\n                        \"buildStatus\": \"SUCCEEDED\",\n                        \"primaryArtifact\": {\n                            \"type\": \"no_artifacts\",\n                            \"identifier\": \"linux_medium\"\n                        },\n                        \"secondaryArtifacts\": []\n                    }\n                },\n                {\n                    \"identifier\": \"linux_large\",\n                    \"dependsOn\": [\n                        \"linux_medium\"\n                    ],\n                    \"ignoreFailure\": false,\n                    \"currentBuildSummary\": {\n                        \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:build/codebuild-demo-project:60a194cd-0d03-4337-9db1-d41476a17d27\",\n                        \"requestedOn\": \"2020-11-03T21:55:39.203000+00:00\",\n                        \"buildStatus\": \"SUCCEEDED\",\n                        \"primaryArtifact\": {\n                            \"type\": \"no_artifacts\",\n                            \"identifier\": \"linux_large\"\n                        },\n                        \"secondaryArtifacts\": []\n                    }\n                }\n            ]\n        }\n    ],\n    \"buildBatchesNotFound\": []\n}\n\n\nFor more information, see Batch builds in AWS CodeBuild <https://docs.aws.amazon.com/codebuild/latest/userguide/batch-build.html>)__ in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "batch-get-builds",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/batch-get-builds.html",
      "command_description": "Description\n\nGets information about one or more builds.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-builds\n--ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ids (list)\n\nThe IDs of the builds.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuilds -> (list)\n\nInformation about the requested builds.\n\n(structure)\n\nInformation about a build.\n\nid -> (string)\n\nThe unique ID for the build.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the build.\n\nbuildNumber -> (long)\n\nThe number of the build. For each project, the buildNumber of its first build is 1 . The buildNumber of each subsequent build is incremented by 1 . If a build is deleted, the buildNumber of other builds does not change.\n\nstartTime -> (timestamp)\n\nWhen the build process started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the build process ended, expressed in Unix time format.\n\ncurrentPhase -> (string)\n\nThe current build phase.\n\nbuildStatus -> (string)\n\nThe current status of the build. Valid values include:\n\nFAILED : The build failed.\n\nFAULT : The build faulted.\n\nIN_PROGRESS : The build is still in progress.\n\nSTOPPED : The build stopped.\n\nSUCCEEDED : The build succeeded.\n\nTIMED_OUT : The build timed out.\n\nsourceVersion -> (string)\n\nAny version identifier for the version of the source code to be built. If sourceVersion is specified at the project level, then this sourceVersion (at the build level) takes precedence.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nresolvedSourceVersion -> (string)\n\nAn identifier for the version of this build’s source code.\n\nFor CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID.\n\nFor CodePipeline, the source revision provided by CodePipeline.\n\nFor Amazon S3, this does not apply.\n\nprojectName -> (string)\n\nThe name of the CodeBuild project.\n\nphases -> (list)\n\nInformation about all previous build phases that are complete and information about any current build phase that is not yet complete.\n\n(structure)\n\nInformation about a stage for a build.\n\nphaseType -> (string)\n\nThe name of the build phase. Valid values include:\n\nBUILD\n\nCore build activities typically occur in this build phase.\n\nCOMPLETED\n\nThe build has been completed.\n\nDOWNLOAD_SOURCE\n\nSource code is being downloaded in this build phase.\n\nFINALIZING\n\nThe build process is completing in this build phase.\n\nINSTALL\n\nInstallation activities typically occur in this build phase.\n\nPOST_BUILD\n\nPost-build activities typically occur in this build phase.\n\nPRE_BUILD\n\nPre-build activities typically occur in this build phase.\n\nPROVISIONING\n\nThe build environment is being set up.\n\nQUEUED\n\nThe build has been submitted and is queued behind other submitted builds.\n\nSUBMITTED\n\nThe build has been submitted.\n\nUPLOAD_ARTIFACTS\n\nBuild output artifacts are being uploaded to the output location.\n\nphaseStatus -> (string)\n\nThe current status of the build phase. Valid values include:\n\nFAILED\n\nThe build phase failed.\n\nFAULT\n\nThe build phase faulted.\n\nIN_PROGRESS\n\nThe build phase is still in progress.\n\nSTOPPED\n\nThe build phase stopped.\n\nSUCCEEDED\n\nThe build phase succeeded.\n\nTIMED_OUT\n\nThe build phase timed out.\n\nstartTime -> (timestamp)\n\nWhen the build phase started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the build phase ended, expressed in Unix time format.\n\ndurationInSeconds -> (long)\n\nHow long, in seconds, between the starting and ending times of the build’s phase.\n\ncontexts -> (list)\n\nAdditional information about a build phase, especially to help troubleshoot a failed build.\n\n(structure)\n\nAdditional information about a build phase that has an error. You can use this information for troubleshooting.\n\nstatusCode -> (string)\n\nThe status code for the context of the build phase.\n\nmessage -> (string)\n\nAn explanation of the build phase’s context. This might include a command ID and an exit code.\n\nsource -> (structure)\n\nInformation about the source code to be built.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. Each ProjectSourceVersion must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nInformation about the output artifacts for the build.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of ProjectArtifacts objects.\n\n(structure)\n\nInformation about build output artifacts.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment for this build.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe name of a service role used for this build.\n\nlogs -> (structure)\n\nInformation about the build’s logs in CloudWatch Logs.\n\ngroupName -> (string)\n\nThe name of the CloudWatch Logs group for the build logs.\n\nstreamName -> (string)\n\nThe name of the CloudWatch Logs stream for the build logs.\n\ndeepLink -> (string)\n\nThe URL to an individual build log in CloudWatch Logs.\n\ns3DeepLink -> (string)\n\nThe URL to a build log in an S3 bucket.\n\ncloudWatchLogsArn -> (string)\n\nThe ARN of CloudWatch Logs for a build project. Its format is arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName} . For more information, see Resources Defined by CloudWatch Logs .\n\ns3LogsArn -> (string)\n\nThe ARN of S3 logs for a build project. Its format is arn:${Partition}:s3:::${BucketName}/${ObjectName} . For more information, see Resources Defined by Amazon S3 .\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about S3 logs for a build project.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ntimeoutInMinutes -> (integer)\n\nHow long, in minutes, for CodeBuild to wait before timing out this build if it does not get marked as completed.\n\nqueuedTimeoutInMinutes -> (integer)\n\nThe number of minutes a build is allowed to be queued before it times out.\n\nbuildComplete -> (boolean)\n\nWhether the build is complete. True if complete; otherwise, false.\n\ninitiator -> (string)\n\nThe entity that started the build. Valid values include:\n\nIf CodePipeline started the build, the pipeline’s name (for example, codepipeline/my-demo-pipeline ).\n\nIf an IAM user started the build, the user’s name (for example, MyUserName ).\n\nIf the Jenkins plugin for CodeBuild started the build, the string CodeBuild-Jenkins-Plugin .\n\nvpcConfig -> (structure)\n\nIf your CodeBuild project accesses resources in an Amazon VPC, you provide this parameter that identifies the VPC ID and the list of security group IDs and subnet IDs. The security groups and subnets must belong to the same VPC. You must provide at least one security group and one subnet ID.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nnetworkInterface -> (structure)\n\nDescribes a network interface.\n\nsubnetId -> (string)\n\nThe ID of the subnet.\n\nnetworkInterfaceId -> (string)\n\nThe ID of the network interface.\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\nexportedEnvironmentVariables -> (list)\n\nA list of exported environment variables for this build.\n\nExported environment variables are used in conjunction with CodePipeline to export environment variables from the current build stage to subsequent stages in the pipeline. For more information, see Working with variables in the CodePipeline User Guide .\n\n(structure)\n\nContains information about an exported environment variable.\n\nExported environment variables are used in conjunction with CodePipeline to export environment variables from the current build stage to subsequent stages in the pipeline. For more information, see Working with variables in the CodePipeline User Guide .\n\nNote\n\nDuring a build, the value of a variable is available starting with the install phase. It can be updated between the start of the install phase and the end of the post_build phase. After the post_build phase ends, the value of exported variables cannot change.\n\nname -> (string)\n\nThe name of the exported environment variable.\n\nvalue -> (string)\n\nThe value assigned to the exported environment variable.\n\nreportArns -> (list)\n\nAn array of the ARNs associated with this build’s reports.\n\n(string)\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\ndebugSession -> (structure)\n\nContains information about the debug session for this build.\n\nsessionEnabled -> (boolean)\n\nSpecifies if session debugging is enabled for this build.\n\nsessionTarget -> (string)\n\nContains the identifier of the Session Manager session used for the build. To work with the paused build, you open this session to examine, control, and resume the build.\n\nbuildBatchArn -> (string)\n\nThe ARN of the batch build that this build is a member of, if applicable.\n\nbuildsNotFound -> (list)\n\nThe IDs of builds for which information could not be found.\n\n(string)",
      "command_examples": "Examples\n\nTo view details of builds in AWS CodeBuild.\n\nThe following batch-get-builds example gets information about builds in CodeBuild with the specified IDs.\n\naws codebuild batch-get-builds --ids codebuild-demo-project:e9c4f4df-3f43-41d2-ab3a-60fe2EXAMPLE codebuild-demo-project:815e755f-bade-4a7e-80f0-efe51EXAMPLE\n\n\nOutput:\n\n{\n    \"buildsNotFound\": [],\n    \"builds\": [\n        {\n            \"artifacts\": {\n                \"md5sum\": \"0e95edf915048a0c22efe6d139fff837\",\n                \"location\": \"arn:aws:s3:::codepipeline-us-west-2-820783811474/CodeBuild-Python-Pip/BuildArtif/6DJsqQa\",\n                \"encryptionDisabled\": false,\n                \"sha256sum\": \"cfa0df33a090966a737f64ae4fe498969fdc842a0c9aec540bf93c37ac0d05a2\"\n            },\n            \"logs\": {\n                \"cloudWatchLogs\": {\n                    \"status\": \"ENABLED\"\n                },\n                \"s3Logs\": {\n                    \"status\": \"DISABLED\"\n                },\n                \"streamName\": \"46472baf-8f6b-43c2-9255-b3b963af2732\",\n                \"groupName\": \"/aws/codebuild/codebuild-demo-project\",\n                \"deepLink\": \"https://console.aws.amazon.com/cloudwatch/home?region=us-west-2#logEvent:group=/aws/codebuild/codebuild-demo-project;stream=46472baf-8f6b-43c2-9255-b3b963af2732\"\n            },\n            \"timeoutInMinutes\": 60,\n            \"environment\": {\n                \"privilegedMode\": false,\n                \"computeType\": \"BUILD_GENERAL1_MEDIUM\",\n                \"image\": \"aws/codebuild/windows-base:1.0\",\n                \"environmentVariables\": [],\n                \"type\": \"WINDOWS_CONTAINER\"\n            },\n            \"projectName\": \"codebuild-demo-project\",\n            \"buildComplete\": true,\n            \"source\": {\n                \"gitCloneDepth\": 1,\n                \"insecureSsl\": false,\n                \"type\": \"CODEPIPELINE\"\n            },\n            \"buildStatus\": \"SUCCEEDED\",\n            \"secondaryArtifacts\": [],\n            \"phases\": [\n                {\n                    \"durationInSeconds\": 0,\n                    \"startTime\": 1548717462.122,\n                    \"phaseType\": \"SUBMITTED\",\n                    \"endTime\": 1548717462.484,\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 0,\n                    \"startTime\": 1548717462.484,\n                    \"phaseType\": \"QUEUED\",\n                    \"endTime\": 1548717462.775,\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 34,\n                    \"endTime\": 1548717496.909,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548717462.775,\n                    \"phaseType\": \"PROVISIONING\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 15,\n                    \"endTime\": 1548717512.555,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548717496.909,\n                    \"phaseType\": \"DOWNLOAD_SOURCE\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 0,\n                    \"endTime\": 1548717512.734,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548717512.555,\n                    \"phaseType\": \"INSTALL\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 0,\n                    \"endTime\": 1548717512.924,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548717512.734,\n                    \"phaseType\": \"PRE_BUILD\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 9,\n                    \"endTime\": 1548717522.254,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548717512.924,\n                    \"phaseType\": \"BUILD\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 3,\n                    \"endTime\": 1548717525.498,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548717522.254,\n                    \"phaseType\": \"POST_BUILD\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 9,\n                    \"endTime\": 1548717534.646,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548717525.498,\n                    \"phaseType\": \"UPLOAD_ARTIFACTS\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 2,\n                    \"endTime\": 1548717536.846,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548717534.646,\n                    \"phaseType\": \"FINALIZING\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"startTime\": 1548717536.846,\n                    \"phaseType\": \"COMPLETED\"\n                }\n            ],\n            \"startTime\": 1548717462.122,\n            \"encryptionKey\": \"arn:aws:kms:us-west-2:123456789012:alias/aws/s3\",\n            \"initiator\": \"codepipeline/CodeBuild-Pipeline\",\n            \"secondarySources\": [],\n            \"serviceRole\": \"arn:aws:iam::123456789012:role/service-role/my-codebuild-service-role\",\n            \"currentPhase\": \"COMPLETED\",\n            \"id\": \"codebuild-demo-project:e9c4f4df-3f43-41d2-ab3a-60fe2EXAMPLE\",\n            \"cache\": {\n                \"type\": \"NO_CACHE\"\n            },\n            \"sourceVersion\": \"arn:aws:s3:::codepipeline-us-west-2-820783811474/CodeBuild-Python-Pip/SourceArti/1TspnN3.zip\",\n            \"endTime\": 1548717536.846,\n            \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:build/codebuild-demo-project:e9c4f4df-3f43-41d2-ab3a-60fe2EXAMPLE\",\n            \"queuedTimeoutInMinutes\": 480,\n            \"resolvedSourceVersion\": \"f2194c1757bbdcb0f8f229254a4b3c8b27d43e0b\"\n        },\n        {\n            \"artifacts\": {\n                \"md5sum\": \"\",\n                \"overrideArtifactName\": false,\n                \"location\": \"arn:aws:s3:::my-artifacts/codebuild-demo-project\",\n                \"encryptionDisabled\": false,\n                \"sha256sum\": \"\"\n            },\n            \"logs\": {\n                \"cloudWatchLogs\": {\n                    \"status\": \"ENABLED\"\n                },\n                \"s3Logs\": {\n                    \"status\": \"DISABLED\"\n                },\n                \"streamName\": \"4dea3ca4-20ec-4898-b22a-a9eb9292775d\",\n                \"groupName\": \"/aws/codebuild/codebuild-demo-project\",\n                \"deepLink\": \"https://console.aws.amazon.com/cloudwatch/home?region=us-west-2#logEvent:group=/aws/codebuild/codebuild-demo-project;stream=4dea3ca4-20ec-4898-b22a-a9eb9292775d\"\n            },\n            \"timeoutInMinutes\": 60,\n            \"environment\": {\n                \"privilegedMode\": false,\n                \"computeType\": \"BUILD_GENERAL1_MEDIUM\",\n                \"image\": \"aws/codebuild/windows-base:1.0\",\n                \"environmentVariables\": [],\n                \"type\": \"WINDOWS_CONTAINER\"\n            },\n            \"projectName\": \"codebuild-demo-project\",\n            \"buildComplete\": true,\n            \"source\": {\n                \"gitCloneDepth\": 1,\n                \"location\": \"https://github.com/my-repo/codebuild-demo-project.git\",\n                \"insecureSsl\": false,\n                \"reportBuildStatus\": false,\n                \"type\": \"GITHUB\"\n            },\n            \"buildStatus\": \"SUCCEEDED\",\n            \"secondaryArtifacts\": [],\n            \"phases\": [\n                {\n                    \"durationInSeconds\": 0,\n                    \"startTime\": 1548716241.89,\n                    \"phaseType\": \"SUBMITTED\",\n                    \"endTime\": 1548716242.241,\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 0,\n                    \"startTime\": 1548716242.241,\n                    \"phaseType\": \"QUEUED\",\n                    \"endTime\": 1548716242.536,\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 33,\n                    \"endTime\": 1548716276.171,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548716242.536,\n                    \"phaseType\": \"PROVISIONING\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 15,\n                    \"endTime\": 1548716291.809,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548716276.171,\n                    \"phaseType\": \"DOWNLOAD_SOURCE\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 0,\n                    \"endTime\": 1548716291.993,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548716291.809,\n                    \"phaseType\": \"INSTALL\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 0,\n                    \"endTime\": 1548716292.191,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548716291.993,\n                    \"phaseType\": \"PRE_BUILD\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 9,\n                    \"endTime\": 1548716301.622,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548716292.191,\n                    \"phaseType\": \"BUILD\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 3,\n                    \"endTime\": 1548716304.783,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548716301.622,\n                    \"phaseType\": \"POST_BUILD\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 8,\n                    \"endTime\": 1548716313.775,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548716304.783,\n                    \"phaseType\": \"UPLOAD_ARTIFACTS\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"durationInSeconds\": 2,\n                    \"endTime\": 1548716315.935,\n                    \"contexts\": [\n                        {\n                            \"statusCode\": \"\",\n                            \"message\": \"\"\n                        }\n                    ],\n                    \"startTime\": 1548716313.775,\n                    \"phaseType\": \"FINALIZING\",\n                    \"phaseStatus\": \"SUCCEEDED\"\n                },\n                {\n                    \"startTime\": 1548716315.935,\n                    \"phaseType\": \"COMPLETED\"\n                }\n            ],\n            \"startTime\": 1548716241.89,\n            \"secondarySourceVersions\": [],\n            \"initiator\": \"my-codebuild-project\",\n            \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:build/codebuild-demo-project:815e755f-bade-4a7e-80f0-efe51EXAMPLE\",\n            \"encryptionKey\": \"arn:aws:kms:us-west-2:123456789012:alias/aws/s3\",\n            \"serviceRole\": \"arn:aws:iam::123456789012:role/service-role/my-codebuild-service-role\",\n            \"currentPhase\": \"COMPLETED\",\n            \"id\": \"codebuild-demo-project:815e755f-bade-4a7e-80f0-efe51EXAMPLE\",\n            \"cache\": {\n                \"type\": \"NO_CACHE\"\n            },\n            \"endTime\": 1548716315.935,\n            \"secondarySources\": [],\n            \"queuedTimeoutInMinutes\": 480,\n            \"resolvedSourceVersion\": \"f2194c1757bbdcb0f8f229254a4b3c8b27d43e0b\"\n        }\n    ]\n}\n\n\nFor more information, see View Build Details (AWS CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "batch-get-projects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/batch-get-projects.html",
      "command_description": "Description\n\nGets information about one or more build projects.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-projects\n--names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--names (list)\n\nThe names or ARNs of the build projects. To get information about a project shared with your Amazon Web Services account, its ARN must be specified. You cannot specify a shared project using its name.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nprojects -> (list)\n\nInformation about the requested build projects.\n\n(structure)\n\nInformation about a build project.\n\nname -> (string)\n\nThe name of the build project.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the build project.\n\ndescription -> (string)\n\nA description that makes the build project easy to identify.\n\nsource -> (structure)\n\nInformation about the build input source code for this build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nA version of the build input to be built for this project. If not specified, the latest version is used. If specified, it must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nIf sourceVersion is specified at the build level, then that version takes precedence over this sourceVersion (at the project level).\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. If secondarySourceVersions is specified at the build level, then they take over these secondarySourceVersions (at the project level).\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of ProjectArtifacts objects.\n\n(structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build project.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment for this build project.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of the Amazon Web Services account.\n\ntimeoutInMinutes -> (integer)\n\nHow long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing out any related build that did not get marked as completed. The default is 60 minutes.\n\nqueuedTimeoutInMinutes -> (integer)\n\nThe number of minutes a build is allowed to be queued before it times out.\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ). If you don’t specify a value, CodeBuild uses the managed CMK for Amazon Simple Storage Service (Amazon S3).\n\ntags -> (list)\n\nA list of tag key and value pairs associated with this build project.\n\nThese tags are available for use by Amazon Web Services services that support CodeBuild build project tags.\n\n(structure)\n\nA tag, consisting of a key and a value.\n\nThis tag is available for use by Amazon Web Services services that support tags in CodeBuild.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\ncreated -> (timestamp)\n\nWhen the build project was created, expressed in Unix time format.\n\nlastModified -> (timestamp)\n\nWhen the build project’s settings were last modified, expressed in Unix time format.\n\nwebhook -> (structure)\n\nInformation about a webhook that connects repository events to a build project in CodeBuild.\n\nurl -> (string)\n\nThe URL to the webhook.\n\npayloadUrl -> (string)\n\nThe CodeBuild endpoint where webhook events are sent.\n\nsecret -> (string)\n\nThe secret token of the associated repository.\n\nNote\n\nA Bitbucket webhook does not support secret .\n\nbranchFilter -> (string)\n\nA regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If branchFilter is empty, then all branches are built.\n\nNote\n\nIt is recommended that you use filterGroups instead of branchFilter .\n\nfilterGroups -> (list)\n\nAn array of arrays of WebhookFilter objects used to determine which webhooks are triggered. At least one WebhookFilter in the array must specify EVENT as its type .\n\nFor a build to be triggered, at least one filter group in the filterGroups array must pass. For a filter group to pass, each of its filters must pass.\n\n(list)\n\n(structure)\n\nA filter used to determine which webhooks trigger a build.\n\ntype -> (string)\n\nThe type of webhook filter. There are six webhook filter types: EVENT , ACTOR_ACCOUNT_ID , HEAD_REF , BASE_REF , FILE_PATH , and COMMIT_MESSAGE .\n\nEVENT\n\nA webhook event triggers a build when the provided pattern matches one of five event types: PUSH , PULL_REQUEST_CREATED , PULL_REQUEST_UPDATED , PULL_REQUEST_REOPENED , and PULL_REQUEST_MERGED . The EVENT patterns are specified as a comma-separated string. For example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED filters all push, pull request created, and pull request updated events.\n\nNote\n\nThe PULL_REQUEST_REOPENED works with GitHub and GitHub Enterprise only.\n\nACTOR_ACCOUNT_ID\n\nA webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression pattern .\n\nHEAD_REF\n\nA webhook event triggers a build when the head reference matches the regular expression pattern . For example, refs/heads/branch-name and refs/tags/tag-name .\n\nWorks with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.\n\nBASE_REF\n\nA webhook event triggers a build when the base reference matches the regular expression pattern . For example, refs/heads/branch-name .\n\nNote\n\nWorks with pull request events only.\n\nFILE_PATH\n\nA webhook triggers a build when the path of a changed file matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\nCOMMIT_MESSAGE\n\nA webhook triggers a build when the head commit message matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\npattern -> (string)\n\nFor a WebHookFilter that uses EVENT type, a comma-separated string that specifies one or more events. For example, the webhook filter PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED allows all push, pull request created, and pull request updated events to trigger a build.\n\nFor a WebHookFilter that uses any of the other filter types, a regular expression pattern. For example, a WebHookFilter that uses HEAD_REF for its type and the pattern ^refs/heads/ triggers a build when the head reference is a branch with a reference name refs/heads/branch-name .\n\nexcludeMatchedPattern -> (boolean)\n\nUsed to indicate that the pattern determines which webhook events do not trigger a build. If true, then a webhook event that does not match the pattern triggers a build. If false, then a webhook event that matches the pattern triggers a build.\n\nbuildType -> (string)\n\nSpecifies the type of build this webhook will trigger.\n\nlastModifiedSecret -> (timestamp)\n\nA timestamp that indicates the last time a repository’s secret token was modified.\n\nvpcConfig -> (structure)\n\nInformation about the VPC configuration that CodeBuild accesses.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nbadge -> (structure)\n\nInformation about the build badge for the build project.\n\nbadgeEnabled -> (boolean)\n\nSet this to true to generate a publicly accessible URL for your project’s build badge.\n\nbadgeRequestUrl -> (string)\n\nThe publicly-accessible URL through which you can access the build badge for your project.\n\nlogsConfig -> (structure)\n\nInformation about logs for the build project. A project can create logs in CloudWatch Logs, an S3 bucket, or both.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\nbuildBatchConfig -> (structure)\n\nA ProjectBuildBatchConfig object that defines the batch build options for the project.\n\nserviceRole -> (string)\n\nSpecifies the service role ARN for the batch build project.\n\ncombineArtifacts -> (boolean)\n\nSpecifies if the build artifacts for the batch build should be combined into a single artifact location.\n\nrestrictions -> (structure)\n\nA BatchRestrictions object that specifies the restrictions for the batch build.\n\nmaximumBuildsAllowed -> (integer)\n\nSpecifies the maximum number of builds allowed.\n\ncomputeTypesAllowed -> (list)\n\nAn array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the CodeBuild User Guide for these values.\n\n(string)\n\ntimeoutInMins -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the batch build must be completed in.\n\nbatchReportMode -> (string)\n\nSpecifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\nREPORT_AGGREGATED_BATCH\n\n(Default) Aggregate all of the build statuses into a single status report.\n\nREPORT_INDIVIDUAL_BUILDS\n\nSend a separate status report for each individual build.\n\nconcurrentBuildLimit -> (integer)\n\nThe maximum number of concurrent builds that are allowed for this project.\n\nNew builds are only started if the current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds are throttled and are not run.\n\nprojectVisibility -> (string)\n\nSpecifies the visibility of the project’s builds. Possible values are:\n\nPUBLIC_READ\n\nThe project builds are visible to the public.\n\nPRIVATE\n\nThe project builds are not visible to the public.\n\npublicProjectAlias -> (string)\n\nContains the project identifier used with the public build APIs.\n\nresourceAccessRole -> (string)\n\nThe ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project’s builds.\n\nprojectsNotFound -> (list)\n\nThe names of build projects for which information could not be found.\n\n(string)",
      "command_examples": "Examples\n\nTo get a list of AWS CodeBuild build project names.\n\nThe following batch-get-projects example gets a list of CodeBuild build projects specified by name.\n\naws codebuild batch-get-projects --names codebuild-demo-project codebuild-demo-project2 my-other-demo-project\n\n\nIn the following output, the projectsNotFound array lists any build project names that were specified, but not found. The projects array lists details for each build project where information was found.\n\n{\n    \"projectsNotFound\": [],\n    \"projects\": [\n        {\n            \"encryptionKey\": \"arn:aws:kms:us-west-2:123456789012:alias/aws/s3\",\n            \"name\": \"codebuild-demo-project2\",\n            \"queuedTimeoutInMinutes\": 480,\n            \"timeoutInMinutes\": 60,\n            \"source\": {\n                \"buildspec\": \"version: 0.2\\n\\n#env:\\n  #variables:\\n     # key: \\\"value\\\"\\n     # key: \\\"value\\\"\\n  #parameter-store:\\n     # key: \\\"value\\\"\\n     # key:\\\"value\\\"\\n\\nphases:\\n  #install:\\n    #commands:\\n      # - command\\n      # - command\\n  #pre_build:\\n    #commands:\\n      # - command\\n      # - command\\n  build:\\n    commands:\\n      # - command\\n      # - command\\n  #post_build:\\n    #commands:\\n      # - command\\n      # - command\\n#artifacts:\\n  #files:\\n    # - location\\n    # - location\\n  #name: $(date +%Y-%m-%d)\\n  #discard-paths: yes\\n  #base-directory: location\\n#cache:\\n  #paths:\\n    # - paths\",\n                \"type\": \"NO_SOURCE\",\n                \"insecureSsl\": false,\n                \"gitCloneDepth\": 1\n            },\n            \"artifacts\": {\n                \"type\": \"NO_ARTIFACTS\"\n            },\n            \"badge\": {\n                \"badgeEnabled\": false\n            },\n            \"lastModified\": 1540588091.108,\n            \"created\": 1540588091.108,\n            \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:project/test-for-sample\",\n            \"secondarySources\": [],\n            \"secondaryArtifacts\": [],\n            \"cache\": {\n                \"type\": \"NO_CACHE\"\n            },\n            \"serviceRole\": \"arn:aws:iam::123456789012:role/service-role/my-test-role\",\n            \"environment\": {\n                \"image\": \"aws/codebuild/java:openjdk-8\",\n                \"privilegedMode\": true,\n                \"type\": \"LINUX_CONTAINER\",\n                \"computeType\": \"BUILD_GENERAL1_SMALL\",\n                \"environmentVariables\": []\n            },\n            \"tags\": []\n        },\n        {\n            \"encryptionKey\": \"arn:aws:kms:us-west-2:123456789012:alias/aws/s3\",\n            \"name\": \"my-other-demo-project\",\n            \"queuedTimeoutInMinutes\": 480,\n            \"timeoutInMinutes\": 60,\n            \"source\": {\n                \"location\": \"https://github.com/iversonic/codedeploy-sample.git\",\n                \"reportBuildStatus\": false,\n                \"buildspec\": \"buildspec.yml\",\n                \"insecureSsl\": false,\n                \"gitCloneDepth\": 1,\n                \"type\": \"GITHUB\",\n                \"auth\": {\n                    \"type\": \"OAUTH\"\n                }\n            },\n            \"artifacts\": {\n                \"type\": \"NO_ARTIFACTS\"\n            },\n            \"badge\": {\n                \"badgeEnabled\": false\n            },\n            \"lastModified\": 1523401711.73,\n            \"created\": 1523401711.73,\n            \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:project/Project2\",\n            \"cache\": {\n                \"type\": \"NO_CACHE\"\n            },\n            \"serviceRole\": \"arn:aws:iam::123456789012:role/service-role/codebuild-Project2-service-role\",\n            \"environment\": {\n                \"image\": \"aws/codebuild/nodejs:4.4.7\",\n                \"privilegedMode\": false,\n                \"type\": \"LINUX_CONTAINER\",\n                \"computeType\": \"BUILD_GENERAL1_SMALL\",\n                \"environmentVariables\": []\n            },\n            \"tags\": []\n        }\n    ]\n}\n\n\nFor more information, see View a Build Project’s Details (AWS CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "batch-get-report-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/batch-get-report-groups.html",
      "command_description": "Description\n\nReturns an array of report groups.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-report-groups\n--report-group-arns <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--report-group-arns <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--report-group-arns (list)\n\nAn array of report group ARNs that identify the report groups to return.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nreportGroups -> (list)\n\nThe array of report groups returned by BatchGetReportGroups .\n\n(structure)\n\nA series of reports. Each report contains information about the results from running a series of test cases. You specify the test cases for a report group in the buildspec for a build project using one or more paths to the test case files.\n\narn -> (string)\n\nThe ARN of the ReportGroup .\n\nname -> (string)\n\nThe name of the ReportGroup .\n\ntype -> (string)\n\nThe type of the ReportGroup . This can be one of the following values:\n\nCODE_COVERAGE\n\nThe report group contains code coverage reports.\n\nTEST\n\nThe report group contains test reports.\n\nexportConfig -> (structure)\n\nInformation about the destination where the raw data of this ReportGroup is exported.\n\nexportConfigType -> (string)\n\nThe export configuration type. Valid values are:\n\nS3 : The report results are exported to an S3 bucket.\n\nNO_EXPORT : The report results are not exported.\n\ns3Destination -> (structure)\n\nA S3ReportExportConfig object that contains information about the S3 bucket where the run of a report is exported.\n\nbucket -> (string)\n\nThe name of the S3 bucket where the raw data of a report are exported.\n\nbucketOwner -> (string)\n\nThe Amazon Web Services account identifier of the owner of the Amazon S3 bucket. This allows report data to be exported to an Amazon S3 bucket that is owned by an account other than the account running the build.\n\npath -> (string)\n\nThe path to the exported report’s raw data results.\n\npackaging -> (string)\n\nThe type of build output artifact to create. Valid values include:\n\nNONE : CodeBuild creates the raw data in the output bucket. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates a ZIP file with the raw data in the output bucket.\n\nencryptionKey -> (string)\n\nThe encryption key for the report’s encrypted raw data.\n\nencryptionDisabled -> (boolean)\n\nA boolean value that specifies if the results of a report are encrypted.\n\ncreated -> (timestamp)\n\nThe date and time this ReportGroup was created.\n\nlastModified -> (timestamp)\n\nThe date and time this ReportGroup was last modified.\n\ntags -> (list)\n\nA list of tag key and value pairs associated with this report group.\n\nThese tags are available for use by Amazon Web Services services that support CodeBuild report group tags.\n\n(structure)\n\nA tag, consisting of a key and a value.\n\nThis tag is available for use by Amazon Web Services services that support tags in CodeBuild.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nstatus -> (string)\n\nThe status of the report group. This property is read-only.\n\nThis can be one of the following values:\n\nACTIVE\n\nThe report group is active.\n\nDELETING\n\nThe report group is in the process of being deleted.\n\nreportGroupsNotFound -> (list)\n\nAn array of ARNs passed to BatchGetReportGroups that are not associated with a ReportGroup .\n\n(string)",
      "command_examples": "Examples\n\nTo get information about one or more report groups in AWS CodeBuild.\n\nThe following batch-get-report-groups example retrieves information about the report group with the specified ARN.\n\naws codebuild batch-get-report-groups \\\n    --report-group-arns arn:aws:codebuild:<region-ID>:<user-ID>:report-group/<report-group-name>\n\n\nOutput:\n\n{\n    \"reportGroups\": [\n        {\n            \"arn\": \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/<report-group-name>\",\n            \"name\": \"report-group-name\",\n            \"type\": \"TEST\",\n            \"exportConfig\": {\n                \"exportConfigType\": \"NO_EXPORT\"\n            },\n            \"created\": \"2020-10-01T18:04:08.466000+00:00\",\n            \"lastModified\": \"2020-10-01T18:04:08.466000+00:00\",\n            \"tags\": []\n        }\n    ],\n    \"reportGroupsNotFound\": []\n}\n\n\nFor more information, see Working with report groups in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "batch-get-reports",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/batch-get-reports.html",
      "command_description": "Description\n\nReturns an array of reports.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-reports\n--report-arns <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--report-arns <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--report-arns (list)\n\nAn array of ARNs that identify the Report objects to return.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nreports -> (list)\n\nThe array of Report objects returned by BatchGetReports .\n\n(structure)\n\nInformation about the results from running a series of test cases during the run of a build project. The test cases are specified in the buildspec for the build project using one or more paths to the test case files. You can specify any type of tests you want, such as unit tests, integration tests, and functional tests.\n\narn -> (string)\n\nThe ARN of the report run.\n\ntype -> (string)\n\nThe type of the report that was run.\n\nCODE_COVERAGE\n\nA code coverage report.\n\nTEST\n\nA test report.\n\nname -> (string)\n\nThe name of the report that was run.\n\nreportGroupArn -> (string)\n\nThe ARN of the report group associated with this report.\n\nexecutionId -> (string)\n\nThe ARN of the build run that generated this report.\n\nstatus -> (string)\n\nThe status of this report.\n\ncreated -> (timestamp)\n\nThe date and time this report run occurred.\n\nexpired -> (timestamp)\n\nThe date and time a report expires. A report expires 30 days after it is created. An expired report is not available to view in CodeBuild.\n\nexportConfig -> (structure)\n\nInformation about where the raw data used to generate this report was exported.\n\nexportConfigType -> (string)\n\nThe export configuration type. Valid values are:\n\nS3 : The report results are exported to an S3 bucket.\n\nNO_EXPORT : The report results are not exported.\n\ns3Destination -> (structure)\n\nA S3ReportExportConfig object that contains information about the S3 bucket where the run of a report is exported.\n\nbucket -> (string)\n\nThe name of the S3 bucket where the raw data of a report are exported.\n\nbucketOwner -> (string)\n\nThe Amazon Web Services account identifier of the owner of the Amazon S3 bucket. This allows report data to be exported to an Amazon S3 bucket that is owned by an account other than the account running the build.\n\npath -> (string)\n\nThe path to the exported report’s raw data results.\n\npackaging -> (string)\n\nThe type of build output artifact to create. Valid values include:\n\nNONE : CodeBuild creates the raw data in the output bucket. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates a ZIP file with the raw data in the output bucket.\n\nencryptionKey -> (string)\n\nThe encryption key for the report’s encrypted raw data.\n\nencryptionDisabled -> (boolean)\n\nA boolean value that specifies if the results of a report are encrypted.\n\ntruncated -> (boolean)\n\nA boolean that specifies if this report run is truncated. The list of test cases is truncated after the maximum number of test cases is reached.\n\ntestSummary -> (structure)\n\nA TestReportSummary object that contains information about this test report.\n\ntotal -> (integer)\n\nThe number of test cases in this TestReportSummary . The total includes truncated test cases.\n\nstatusCounts -> (map)\n\nA map that contains the number of each type of status returned by the test results in this TestReportSummary .\n\nkey -> (string)\n\nvalue -> (integer)\n\ndurationInNanoSeconds -> (long)\n\nThe number of nanoseconds it took to run all of the test cases in this report.\n\ncodeCoverageSummary -> (structure)\n\nA CodeCoverageReportSummary object that contains a code coverage summary for this report.\n\nlineCoveragePercentage -> (double)\n\nThe percentage of lines that are covered by your tests.\n\nlinesCovered -> (integer)\n\nThe number of lines that are covered by your tests.\n\nlinesMissed -> (integer)\n\nThe number of lines that are not covered by your tests.\n\nbranchCoveragePercentage -> (double)\n\nThe percentage of branches that are covered by your tests.\n\nbranchesCovered -> (integer)\n\nThe number of conditional branches that are covered by your tests.\n\nbranchesMissed -> (integer)\n\nThe number of conditional branches that are not covered by your tests.\n\nreportsNotFound -> (list)\n\nAn array of ARNs passed to BatchGetReportGroups that are not associated with a Report .\n\n(string)",
      "command_examples": "Examples\n\nTo get information about one or more reports in AWS CodeBuild.\n\nThe following batch-get-reports example retrieves information about the reports with the specified ARNs.\n\naws codebuild batch-get-reports \\\n    --report-arns arn:aws:codebuild:<region-ID>:<user-ID>:report/<report-group-name>:<report 1 ID> arn:aws:codebuild:<region-ID>:<user-ID>:report/<report-group-name>:<report 2 ID>\n\n\nOutput:\n\n{\n    \"reports\": [\n        {\n            \"arn\": \"arn:aws:codebuild:<region-ID>:<user-ID>:report/<report-group-name>:<report 1 ID>\",\n            \"type\": \"TEST\",\n            \"name\": \"<report-group-name>\",\n            \"reportGroupArn\": \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/<report-group-name>\",\n            \"executionId\": \"arn:aws:codebuild:<region-ID>:<user-ID>:build/test-reports:<ID>\",\n            \"status\": \"FAILED\",\n            \"created\": \"2020-10-01T11:25:22.531000-07:00\",\n            \"expired\": \"2020-10-31T11:25:22-07:00\",\n            \"exportConfig\": {\n                \"exportConfigType\": \"NO_EXPORT\"\n            },\n            \"truncated\": false,\n            \"testSummary\": {\n                \"total\": 28,\n                \"statusCounts\": {\n                    \"ERROR\": 5,\n                    \"FAILED\": 1,\n                    \"SKIPPED\": 4,\n                    \"SUCCEEDED\": 18,\n                    \"UNKNOWN\": 0\n                },\n                \"durationInNanoSeconds\": 94000000\n            }\n        },\n        {\n            \"arn\": \"arn:aws:codebuild:<region-ID>:<user-ID>:report/<report-group-name>:<report 2 ID>\",\n            \"type\": \"TEST\",\n            \"name\": \"<report-group-name>\",\n            \"reportGroupArn\": \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/<report-group-name>\",\n            \"executionId\": \"arn:aws:codebuild:<region-ID>:<user-ID>:build/test-reports:<ID>\",\n            \"status\": \"FAILED\",\n            \"created\": \"2020-10-01T11:13:05.816000-07:00\",\n            \"expired\": \"2020-10-31T11:13:05-07:00\",\n            \"exportConfig\": {\n                \"exportConfigType\": \"NO_EXPORT\"\n            },\n            \"truncated\": false,\n            \"testSummary\": {\n                \"total\": 28,\n                \"statusCounts\": {\n                    \"ERROR\": 5,\n                    \"FAILED\": 1,\n                    \"SKIPPED\": 4,\n                    \"SUCCEEDED\": 18,\n                    \"UNKNOWN\": 0\n                },\n                \"durationInNanoSeconds\": 94000000\n            }\n        }\n    ],\n    \"reportsNotFound\": []\n}\n\n\nFor more information, see Working with reports in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "create-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/create-project.html",
      "command_description": "Description\n\nCreates a build project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-project\n--name <value>\n[--description <value>]\n--source <value>\n[--secondary-sources <value>]\n[--source-version <value>]\n[--secondary-source-versions <value>]\n--artifacts <value>\n[--secondary-artifacts <value>]\n[--cache <value>]\n--environment <value>\n--service-role <value>\n[--timeout-in-minutes <value>]\n[--queued-timeout-in-minutes <value>]\n[--encryption-key <value>]\n[--tags <value>]\n[--vpc-config <value>]\n[--badge-enabled | --no-badge-enabled]\n[--logs-config <value>]\n[--file-system-locations <value>]\n[--build-batch-config <value>]\n[--concurrent-build-limit <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--source <value>",
        "[--secondary-sources <value>]",
        "[--source-version <value>]",
        "[--secondary-source-versions <value>]",
        "--artifacts <value>",
        "[--secondary-artifacts <value>]",
        "[--cache <value>]",
        "--environment <value>",
        "--service-role <value>",
        "[--timeout-in-minutes <value>]",
        "[--queued-timeout-in-minutes <value>]",
        "[--encryption-key <value>]",
        "[--tags <value>]",
        "[--vpc-config <value>]",
        "[--badge-enabled | --no-badge-enabled]",
        "[--logs-config <value>]",
        "[--file-system-locations <value>]",
        "[--build-batch-config <value>]",
        "[--concurrent-build-limit <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the build project.\n\n--description (string)\n\nA description that makes the build project easy to identify.\n\n--source (structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nShorthand Syntax:\n\ntype=string,location=string,gitCloneDepth=integer,gitSubmodulesConfig={fetchSubmodules=boolean},buildspec=string,auth={type=string,resource=string},reportBuildStatus=boolean,buildStatusConfig={context=string,targetUrl=string},insecureSsl=boolean,sourceIdentifier=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"CODECOMMIT\"|\"CODEPIPELINE\"|\"GITHUB\"|\"S3\"|\"BITBUCKET\"|\"GITHUB_ENTERPRISE\"|\"NO_SOURCE\",\n  \"location\": \"string\",\n  \"gitCloneDepth\": integer,\n  \"gitSubmodulesConfig\": {\n    \"fetchSubmodules\": true|false\n  },\n  \"buildspec\": \"string\",\n  \"auth\": {\n    \"type\": \"OAUTH\",\n    \"resource\": \"string\"\n  },\n  \"reportBuildStatus\": true|false,\n  \"buildStatusConfig\": {\n    \"context\": \"string\",\n    \"targetUrl\": \"string\"\n  },\n  \"insecureSsl\": true|false,\n  \"sourceIdentifier\": \"string\"\n}\n\n\n--secondary-sources (list)\n\nAn array of ProjectSource objects.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nShorthand Syntax:\n\ntype=string,location=string,gitCloneDepth=integer,gitSubmodulesConfig={fetchSubmodules=boolean},buildspec=string,auth={type=string,resource=string},reportBuildStatus=boolean,buildStatusConfig={context=string,targetUrl=string},insecureSsl=boolean,sourceIdentifier=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"type\": \"CODECOMMIT\"|\"CODEPIPELINE\"|\"GITHUB\"|\"S3\"|\"BITBUCKET\"|\"GITHUB_ENTERPRISE\"|\"NO_SOURCE\",\n    \"location\": \"string\",\n    \"gitCloneDepth\": integer,\n    \"gitSubmodulesConfig\": {\n      \"fetchSubmodules\": true|false\n    },\n    \"buildspec\": \"string\",\n    \"auth\": {\n      \"type\": \"OAUTH\",\n      \"resource\": \"string\"\n    },\n    \"reportBuildStatus\": true|false,\n    \"buildStatusConfig\": {\n      \"context\": \"string\",\n      \"targetUrl\": \"string\"\n    },\n    \"insecureSsl\": true|false,\n    \"sourceIdentifier\": \"string\"\n  }\n  ...\n]\n\n\n--source-version (string)\n\nA version of the build input to be built for this project. If not specified, the latest version is used. If specified, it must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nIf sourceVersion is specified at the build level, then that version takes precedence over this sourceVersion (at the project level).\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\n--secondary-source-versions (list)\n\nAn array of ProjectSourceVersion objects. If secondarySourceVersions is specified at the build level, then they take precedence over these secondarySourceVersions (at the project level).\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nShorthand Syntax:\n\nsourceIdentifier=string,sourceVersion=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"sourceIdentifier\": \"string\",\n    \"sourceVersion\": \"string\"\n  }\n  ...\n]\n\n\n--artifacts (structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ntype=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"CODEPIPELINE\"|\"S3\"|\"NO_ARTIFACTS\",\n  \"location\": \"string\",\n  \"path\": \"string\",\n  \"namespaceType\": \"NONE\"|\"BUILD_ID\",\n  \"name\": \"string\",\n  \"packaging\": \"NONE\"|\"ZIP\",\n  \"overrideArtifactName\": true|false,\n  \"encryptionDisabled\": true|false,\n  \"artifactIdentifier\": \"string\",\n  \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n}\n\n\n--secondary-artifacts (list)\n\nAn array of ProjectArtifacts objects.\n\n(structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ntype=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"type\": \"CODEPIPELINE\"|\"S3\"|\"NO_ARTIFACTS\",\n    \"location\": \"string\",\n    \"path\": \"string\",\n    \"namespaceType\": \"NONE\"|\"BUILD_ID\",\n    \"name\": \"string\",\n    \"packaging\": \"NONE\"|\"ZIP\",\n    \"overrideArtifactName\": true|false,\n    \"encryptionDisabled\": true|false,\n    \"artifactIdentifier\": \"string\",\n    \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n  }\n  ...\n]\n\n\n--cache (structure)\n\nStores recently used information so that it can be quickly accessed at a later time.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nShorthand Syntax:\n\ntype=string,location=string,modes=string,string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"NO_CACHE\"|\"S3\"|\"LOCAL\",\n  \"location\": \"string\",\n  \"modes\": [\"LOCAL_DOCKER_LAYER_CACHE\"|\"LOCAL_SOURCE_CACHE\"|\"LOCAL_CUSTOM_CACHE\", ...]\n}\n\n\n--environment (structure)\n\nInformation about the build environment for the build project.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nShorthand Syntax:\n\ntype=string,image=string,computeType=string,environmentVariables=[{name=string,value=string,type=string},{name=string,value=string,type=string}],privilegedMode=boolean,certificate=string,registryCredential={credential=string,credentialProvider=string},imagePullCredentialsType=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"WINDOWS_CONTAINER\"|\"LINUX_CONTAINER\"|\"LINUX_GPU_CONTAINER\"|\"ARM_CONTAINER\"|\"WINDOWS_SERVER_2019_CONTAINER\",\n  \"image\": \"string\",\n  \"computeType\": \"BUILD_GENERAL1_SMALL\"|\"BUILD_GENERAL1_MEDIUM\"|\"BUILD_GENERAL1_LARGE\"|\"BUILD_GENERAL1_2XLARGE\",\n  \"environmentVariables\": [\n    {\n      \"name\": \"string\",\n      \"value\": \"string\",\n      \"type\": \"PLAINTEXT\"|\"PARAMETER_STORE\"|\"SECRETS_MANAGER\"\n    }\n    ...\n  ],\n  \"privilegedMode\": true|false,\n  \"certificate\": \"string\",\n  \"registryCredential\": {\n    \"credential\": \"string\",\n    \"credentialProvider\": \"SECRETS_MANAGER\"\n  },\n  \"imagePullCredentialsType\": \"CODEBUILD\"|\"SERVICE_ROLE\"\n}\n\n\n--service-role (string)\n\nThe ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of the Amazon Web Services account.\n\n--timeout-in-minutes (integer)\n\nHow long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait before it times out any build that has not been marked as completed. The default is 60 minutes.\n\n--queued-timeout-in-minutes (integer)\n\nThe number of minutes a build is allowed to be queued before it times out.\n\n--encryption-key (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\n--tags (list)\n\nA list of tag key and value pairs associated with this build project.\n\nThese tags are available for use by Amazon Web Services services that support CodeBuild build project tags.\n\n(structure)\n\nA tag, consisting of a key and a value.\n\nThis tag is available for use by Amazon Web Services services that support tags in CodeBuild.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--vpc-config (structure)\n\nVpcConfig enables CodeBuild to access resources in an Amazon VPC.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nShorthand Syntax:\n\nvpcId=string,subnets=string,string,securityGroupIds=string,string\n\n\nJSON Syntax:\n\n{\n  \"vpcId\": \"string\",\n  \"subnets\": [\"string\", ...],\n  \"securityGroupIds\": [\"string\", ...]\n}\n\n\n--badge-enabled | --no-badge-enabled (boolean)\n\nSet this to true to generate a publicly accessible URL for your project’s build badge.\n\n--logs-config (structure)\n\nInformation about logs for the build project. These can be logs in CloudWatch Logs, logs uploaded to a specified S3 bucket, or both.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ncloudWatchLogs={status=string,groupName=string,streamName=string},s3Logs={status=string,location=string,encryptionDisabled=boolean,bucketOwnerAccess=string}\n\n\nJSON Syntax:\n\n{\n  \"cloudWatchLogs\": {\n    \"status\": \"ENABLED\"|\"DISABLED\",\n    \"groupName\": \"string\",\n    \"streamName\": \"string\"\n  },\n  \"s3Logs\": {\n    \"status\": \"ENABLED\"|\"DISABLED\",\n    \"location\": \"string\",\n    \"encryptionDisabled\": true|false,\n    \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n  }\n}\n\n\n--file-system-locations (list)\n\nAn array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\nShorthand Syntax:\n\ntype=string,location=string,mountPoint=string,identifier=string,mountOptions=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"type\": \"EFS\",\n    \"location\": \"string\",\n    \"mountPoint\": \"string\",\n    \"identifier\": \"string\",\n    \"mountOptions\": \"string\"\n  }\n  ...\n]\n\n\n--build-batch-config (structure)\n\nA ProjectBuildBatchConfig object that defines the batch build options for the project.\n\nserviceRole -> (string)\n\nSpecifies the service role ARN for the batch build project.\n\ncombineArtifacts -> (boolean)\n\nSpecifies if the build artifacts for the batch build should be combined into a single artifact location.\n\nrestrictions -> (structure)\n\nA BatchRestrictions object that specifies the restrictions for the batch build.\n\nmaximumBuildsAllowed -> (integer)\n\nSpecifies the maximum number of builds allowed.\n\ncomputeTypesAllowed -> (list)\n\nAn array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the CodeBuild User Guide for these values.\n\n(string)\n\ntimeoutInMins -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the batch build must be completed in.\n\nbatchReportMode -> (string)\n\nSpecifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\nREPORT_AGGREGATED_BATCH\n\n(Default) Aggregate all of the build statuses into a single status report.\n\nREPORT_INDIVIDUAL_BUILDS\n\nSend a separate status report for each individual build.\n\nShorthand Syntax:\n\nserviceRole=string,combineArtifacts=boolean,restrictions={maximumBuildsAllowed=integer,computeTypesAllowed=[string,string]},timeoutInMins=integer,batchReportMode=string\n\n\nJSON Syntax:\n\n{\n  \"serviceRole\": \"string\",\n  \"combineArtifacts\": true|false,\n  \"restrictions\": {\n    \"maximumBuildsAllowed\": integer,\n    \"computeTypesAllowed\": [\"string\", ...]\n  },\n  \"timeoutInMins\": integer,\n  \"batchReportMode\": \"REPORT_INDIVIDUAL_BUILDS\"|\"REPORT_AGGREGATED_BATCH\"\n}\n\n\n--concurrent-build-limit (integer)\n\nThe maximum number of concurrent builds that are allowed for this project.\n\nNew builds are only started if the current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds are throttled and are not run.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nproject -> (structure)\n\nInformation about the build project that was created.\n\nname -> (string)\n\nThe name of the build project.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the build project.\n\ndescription -> (string)\n\nA description that makes the build project easy to identify.\n\nsource -> (structure)\n\nInformation about the build input source code for this build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nA version of the build input to be built for this project. If not specified, the latest version is used. If specified, it must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nIf sourceVersion is specified at the build level, then that version takes precedence over this sourceVersion (at the project level).\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. If secondarySourceVersions is specified at the build level, then they take over these secondarySourceVersions (at the project level).\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of ProjectArtifacts objects.\n\n(structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build project.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment for this build project.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of the Amazon Web Services account.\n\ntimeoutInMinutes -> (integer)\n\nHow long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing out any related build that did not get marked as completed. The default is 60 minutes.\n\nqueuedTimeoutInMinutes -> (integer)\n\nThe number of minutes a build is allowed to be queued before it times out.\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ). If you don’t specify a value, CodeBuild uses the managed CMK for Amazon Simple Storage Service (Amazon S3).\n\ntags -> (list)\n\nA list of tag key and value pairs associated with this build project.\n\nThese tags are available for use by Amazon Web Services services that support CodeBuild build project tags.\n\n(structure)\n\nA tag, consisting of a key and a value.\n\nThis tag is available for use by Amazon Web Services services that support tags in CodeBuild.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\ncreated -> (timestamp)\n\nWhen the build project was created, expressed in Unix time format.\n\nlastModified -> (timestamp)\n\nWhen the build project’s settings were last modified, expressed in Unix time format.\n\nwebhook -> (structure)\n\nInformation about a webhook that connects repository events to a build project in CodeBuild.\n\nurl -> (string)\n\nThe URL to the webhook.\n\npayloadUrl -> (string)\n\nThe CodeBuild endpoint where webhook events are sent.\n\nsecret -> (string)\n\nThe secret token of the associated repository.\n\nNote\n\nA Bitbucket webhook does not support secret .\n\nbranchFilter -> (string)\n\nA regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If branchFilter is empty, then all branches are built.\n\nNote\n\nIt is recommended that you use filterGroups instead of branchFilter .\n\nfilterGroups -> (list)\n\nAn array of arrays of WebhookFilter objects used to determine which webhooks are triggered. At least one WebhookFilter in the array must specify EVENT as its type .\n\nFor a build to be triggered, at least one filter group in the filterGroups array must pass. For a filter group to pass, each of its filters must pass.\n\n(list)\n\n(structure)\n\nA filter used to determine which webhooks trigger a build.\n\ntype -> (string)\n\nThe type of webhook filter. There are six webhook filter types: EVENT , ACTOR_ACCOUNT_ID , HEAD_REF , BASE_REF , FILE_PATH , and COMMIT_MESSAGE .\n\nEVENT\n\nA webhook event triggers a build when the provided pattern matches one of five event types: PUSH , PULL_REQUEST_CREATED , PULL_REQUEST_UPDATED , PULL_REQUEST_REOPENED , and PULL_REQUEST_MERGED . The EVENT patterns are specified as a comma-separated string. For example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED filters all push, pull request created, and pull request updated events.\n\nNote\n\nThe PULL_REQUEST_REOPENED works with GitHub and GitHub Enterprise only.\n\nACTOR_ACCOUNT_ID\n\nA webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression pattern .\n\nHEAD_REF\n\nA webhook event triggers a build when the head reference matches the regular expression pattern . For example, refs/heads/branch-name and refs/tags/tag-name .\n\nWorks with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.\n\nBASE_REF\n\nA webhook event triggers a build when the base reference matches the regular expression pattern . For example, refs/heads/branch-name .\n\nNote\n\nWorks with pull request events only.\n\nFILE_PATH\n\nA webhook triggers a build when the path of a changed file matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\nCOMMIT_MESSAGE\n\nA webhook triggers a build when the head commit message matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\npattern -> (string)\n\nFor a WebHookFilter that uses EVENT type, a comma-separated string that specifies one or more events. For example, the webhook filter PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED allows all push, pull request created, and pull request updated events to trigger a build.\n\nFor a WebHookFilter that uses any of the other filter types, a regular expression pattern. For example, a WebHookFilter that uses HEAD_REF for its type and the pattern ^refs/heads/ triggers a build when the head reference is a branch with a reference name refs/heads/branch-name .\n\nexcludeMatchedPattern -> (boolean)\n\nUsed to indicate that the pattern determines which webhook events do not trigger a build. If true, then a webhook event that does not match the pattern triggers a build. If false, then a webhook event that matches the pattern triggers a build.\n\nbuildType -> (string)\n\nSpecifies the type of build this webhook will trigger.\n\nlastModifiedSecret -> (timestamp)\n\nA timestamp that indicates the last time a repository’s secret token was modified.\n\nvpcConfig -> (structure)\n\nInformation about the VPC configuration that CodeBuild accesses.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nbadge -> (structure)\n\nInformation about the build badge for the build project.\n\nbadgeEnabled -> (boolean)\n\nSet this to true to generate a publicly accessible URL for your project’s build badge.\n\nbadgeRequestUrl -> (string)\n\nThe publicly-accessible URL through which you can access the build badge for your project.\n\nlogsConfig -> (structure)\n\nInformation about logs for the build project. A project can create logs in CloudWatch Logs, an S3 bucket, or both.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\nbuildBatchConfig -> (structure)\n\nA ProjectBuildBatchConfig object that defines the batch build options for the project.\n\nserviceRole -> (string)\n\nSpecifies the service role ARN for the batch build project.\n\ncombineArtifacts -> (boolean)\n\nSpecifies if the build artifacts for the batch build should be combined into a single artifact location.\n\nrestrictions -> (structure)\n\nA BatchRestrictions object that specifies the restrictions for the batch build.\n\nmaximumBuildsAllowed -> (integer)\n\nSpecifies the maximum number of builds allowed.\n\ncomputeTypesAllowed -> (list)\n\nAn array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the CodeBuild User Guide for these values.\n\n(string)\n\ntimeoutInMins -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the batch build must be completed in.\n\nbatchReportMode -> (string)\n\nSpecifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\nREPORT_AGGREGATED_BATCH\n\n(Default) Aggregate all of the build statuses into a single status report.\n\nREPORT_INDIVIDUAL_BUILDS\n\nSend a separate status report for each individual build.\n\nconcurrentBuildLimit -> (integer)\n\nThe maximum number of concurrent builds that are allowed for this project.\n\nNew builds are only started if the current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds are throttled and are not run.\n\nprojectVisibility -> (string)\n\nSpecifies the visibility of the project’s builds. Possible values are:\n\nPUBLIC_READ\n\nThe project builds are visible to the public.\n\nPRIVATE\n\nThe project builds are not visible to the public.\n\npublicProjectAlias -> (string)\n\nContains the project identifier used with the public build APIs.\n\nresourceAccessRole -> (string)\n\nThe ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project’s builds.",
      "command_examples": "Examples\n\nExample 1: To create an AWS CodeBuild build project\n\nThe following create-project example creates a CodeBuild build project using source files from an S3 bucket\n\naws codebuild create-project \\\n    --name \"my-demo-project\" \\\n    --source \"{\\\"type\\\": \\\"S3\\\",\\\"location\\\": \\\"codebuild-us-west-2-123456789012-input-bucket/my-source.zip\\\"}\" \\\n    --artifacts {\"\\\"type\\\": \\\"S3\\\",\\\"location\\\": \\\"codebuild-us-west-2-123456789012-output-bucket\\\"\"} \\\n    --environment \"{\\\"type\\\": \\\"LINUX_CONTAINER\\\",\\\"image\\\": \\\"aws/codebuild/standard:1.0\\\",\\\"computeType\\\": \\\"BUILD_GENERAL1_SMALL\\\"}\" \\\n    --service-role \"arn:aws:iam::123456789012:role/service-role/my-codebuild-service-role\"\n\n\nOutput:\n\n{\n    \"project\": {\n        \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:project/my-demo-project\",\n        \"name\": \"my-cli-demo-project\",\n        \"encryptionKey\": \"arn:aws:kms:us-west-2:123456789012:alias/aws/s3\",\n        \"serviceRole\": \"arn:aws:iam::123456789012:role/service-role/my-codebuild-service-role\",\n        \"lastModified\": 1556839783.274,\n        \"badge\": {\n            \"badgeEnabled\": false\n        },\n        \"queuedTimeoutInMinutes\": 480,\n        \"environment\": {\n            \"image\": \"aws/codebuild/standard:1.0\",\n            \"computeType\": \"BUILD_GENERAL1_SMALL\",\n            \"type\": \"LINUX_CONTAINER\",\n            \"imagePullCredentialsType\": \"CODEBUILD\",\n            \"privilegedMode\": false,\n            \"environmentVariables\": []\n        },\n        \"artifacts\": {\n            \"location\": \"codebuild-us-west-2-123456789012-output-bucket\",\n            \"name\": \"my-cli-demo-project\",\n            \"namespaceType\": \"NONE\",\n            \"type\": \"S3\",\n            \"packaging\": \"NONE\",\n            \"encryptionDisabled\": false\n        },\n        \"source\": {\n            \"type\": \"S3\",\n            \"location\": \"codebuild-us-west-2-123456789012-input-bucket/my-source.zip\",\n            \"insecureSsl\": false\n        },\n        \"timeoutInMinutes\": 60,\n        \"cache\": {\n            \"type\": \"NO_CACHE\"\n        },\n        \"created\": 1556839783.274\n    }\n}\n\n\nExample 2: To create an AWS CodeBuild build project using a JSON input file for the parameters\n\nThe following create-project example creates a CodeBuild build project by passing all of the required parameters in a JSON input file. Create the input file template by running the command with only the --generate-cli-skeleton parameter.\n\naws codebuild create-project --cli-input-json file://create-project.json\n\n\nThe input JSON file create-project.json contains the following content:\n\n{\n    \"name\": \"codebuild-demo-project\",\n    \"source\": {\n        \"type\": \"S3\",\n        \"location\": \"codebuild-region-ID-account-ID-input-bucket/MessageUtil.zip\"\n    },\n    \"artifacts\": {\n        \"type\": \"S3\",\n        \"location\": \"codebuild-region-ID-account-ID-output-bucket\"\n    },\n    \"environment\": {\n        \"type\": \"LINUX_CONTAINER\",\n        \"image\": \"aws/codebuild/standard:1.0\",\n        \"computeType\": \"BUILD_GENERAL1_SMALL\"\n    },\n    \"serviceRole\": \"serviceIAMRole\"\n}\n\n\nOutput:\n\n{\n    \"project\": {\n        \"name\": \"codebuild-demo-project\",\n        \"serviceRole\": \"serviceIAMRole\",\n        \"tags\": [],\n        \"artifacts\": {\n            \"packaging\": \"NONE\",\n            \"type\": \"S3\",\n            \"location\": \"codebuild-region-ID-account-ID-output-bucket\",\n            \"name\": \"message-util.zip\"\n        },\n        \"lastModified\": 1472661575.244,\n        \"timeoutInMinutes\": 60,\n        \"created\": 1472661575.244,\n        \"environment\": {\n            \"computeType\": \"BUILD_GENERAL1_SMALL\",\n            \"image\": \"aws/codebuild/standard:1.0\",\n            \"type\": \"LINUX_CONTAINER\",\n            \"environmentVariables\": []\n        },\n        \"source\": {\n            \"type\": \"S3\",\n            \"location\": \"codebuild-region-ID-account-ID-input-bucket/MessageUtil.zip\"\n        },\n        \"encryptionKey\": \"arn:aws:kms:region-ID:account-ID:alias/aws/s3\",\n        \"arn\": \"arn:aws:codebuild:region-ID:account-ID:project/codebuild-demo-project\"\n    }\n}\n\n\nFor more information, see Create a Build Project (AWS CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "create-report-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/create-report-group.html",
      "command_description": "Description\n\nCreates a report group. A report group contains a collection of reports.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-report-group\n--name <value>\n--type <value>\n--export-config <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--type <value>",
        "--export-config <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the report group.\n\n--type (string)\n\nThe type of report group.\n\nPossible values:\n\nTEST\n\nCODE_COVERAGE\n\n--export-config (structure)\n\nA ReportExportConfig object that contains information about where the report group test results are exported.\n\nexportConfigType -> (string)\n\nThe export configuration type. Valid values are:\n\nS3 : The report results are exported to an S3 bucket.\n\nNO_EXPORT : The report results are not exported.\n\ns3Destination -> (structure)\n\nA S3ReportExportConfig object that contains information about the S3 bucket where the run of a report is exported.\n\nbucket -> (string)\n\nThe name of the S3 bucket where the raw data of a report are exported.\n\nbucketOwner -> (string)\n\nThe Amazon Web Services account identifier of the owner of the Amazon S3 bucket. This allows report data to be exported to an Amazon S3 bucket that is owned by an account other than the account running the build.\n\npath -> (string)\n\nThe path to the exported report’s raw data results.\n\npackaging -> (string)\n\nThe type of build output artifact to create. Valid values include:\n\nNONE : CodeBuild creates the raw data in the output bucket. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates a ZIP file with the raw data in the output bucket.\n\nencryptionKey -> (string)\n\nThe encryption key for the report’s encrypted raw data.\n\nencryptionDisabled -> (boolean)\n\nA boolean value that specifies if the results of a report are encrypted.\n\nShorthand Syntax:\n\nexportConfigType=string,s3Destination={bucket=string,bucketOwner=string,path=string,packaging=string,encryptionKey=string,encryptionDisabled=boolean}\n\n\nJSON Syntax:\n\n{\n  \"exportConfigType\": \"S3\"|\"NO_EXPORT\",\n  \"s3Destination\": {\n    \"bucket\": \"string\",\n    \"bucketOwner\": \"string\",\n    \"path\": \"string\",\n    \"packaging\": \"ZIP\"|\"NONE\",\n    \"encryptionKey\": \"string\",\n    \"encryptionDisabled\": true|false\n  }\n}\n\n\n--tags (list)\n\nA list of tag key and value pairs associated with this report group.\n\nThese tags are available for use by Amazon Web Services services that support CodeBuild report group tags.\n\n(structure)\n\nA tag, consisting of a key and a value.\n\nThis tag is available for use by Amazon Web Services services that support tags in CodeBuild.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nreportGroup -> (structure)\n\nInformation about the report group that was created.\n\narn -> (string)\n\nThe ARN of the ReportGroup .\n\nname -> (string)\n\nThe name of the ReportGroup .\n\ntype -> (string)\n\nThe type of the ReportGroup . This can be one of the following values:\n\nCODE_COVERAGE\n\nThe report group contains code coverage reports.\n\nTEST\n\nThe report group contains test reports.\n\nexportConfig -> (structure)\n\nInformation about the destination where the raw data of this ReportGroup is exported.\n\nexportConfigType -> (string)\n\nThe export configuration type. Valid values are:\n\nS3 : The report results are exported to an S3 bucket.\n\nNO_EXPORT : The report results are not exported.\n\ns3Destination -> (structure)\n\nA S3ReportExportConfig object that contains information about the S3 bucket where the run of a report is exported.\n\nbucket -> (string)\n\nThe name of the S3 bucket where the raw data of a report are exported.\n\nbucketOwner -> (string)\n\nThe Amazon Web Services account identifier of the owner of the Amazon S3 bucket. This allows report data to be exported to an Amazon S3 bucket that is owned by an account other than the account running the build.\n\npath -> (string)\n\nThe path to the exported report’s raw data results.\n\npackaging -> (string)\n\nThe type of build output artifact to create. Valid values include:\n\nNONE : CodeBuild creates the raw data in the output bucket. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates a ZIP file with the raw data in the output bucket.\n\nencryptionKey -> (string)\n\nThe encryption key for the report’s encrypted raw data.\n\nencryptionDisabled -> (boolean)\n\nA boolean value that specifies if the results of a report are encrypted.\n\ncreated -> (timestamp)\n\nThe date and time this ReportGroup was created.\n\nlastModified -> (timestamp)\n\nThe date and time this ReportGroup was last modified.\n\ntags -> (list)\n\nA list of tag key and value pairs associated with this report group.\n\nThese tags are available for use by Amazon Web Services services that support CodeBuild report group tags.\n\n(structure)\n\nA tag, consisting of a key and a value.\n\nThis tag is available for use by Amazon Web Services services that support tags in CodeBuild.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nstatus -> (string)\n\nThe status of the report group. This property is read-only.\n\nThis can be one of the following values:\n\nACTIVE\n\nThe report group is active.\n\nDELETING\n\nThe report group is in the process of being deleted.",
      "command_examples": "Examples\n\nTo create a report group in AWS CodeBuild.\n\nThe following create-report-group example creates a new report group.\n\naws codebuild create-report-group \\\n    --cli-input-json file://create-report-group-source.json\n\n\nContents of create-report-group-source.json:\n\n{\n    \"name\": \"cli-created-report-group\",\n    \"type\": \"TEST\",\n    \"exportConfig\": {\n        \"exportConfigType\": \"S3\",\n        \"s3Destination\": {\n            \"bucket\": \"my-s3-bucket\",\n            \"path\": \"\",\n            \"packaging\": \"ZIP\",\n            \"encryptionDisabled\": true\n        }\n    }\n}\n\n\nOutput:\n\n{\n    \"reportGroup\": {\n        \"arn\": \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/cli-created-report-group\",\n        \"name\": \"cli-created-report-group\",\n        \"type\": \"TEST\",\n        \"exportConfig\": {\n            \"exportConfigType\": \"S3\",\n            \"s3Destination\": {\n                \"bucket\": \"my-s3-bucket\",\n                \"path\": \"\",\n                \"packaging\": \"ZIP\",\n                \"encryptionDisabled\": true\n            }\n        },\n        \"created\": 1602020026.775,\n        \"lastModified\": 1602020026.775\n    }\n}\n\n\nFor more information, see Working with report groups in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "create-webhook",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/create-webhook.html",
      "command_description": "Description\n\nFor an existing CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, enables CodeBuild to start rebuilding the source code every time a code change is pushed to the repository.\n\nWarning\n\nIf you enable webhooks for an CodeBuild project, and the project is used as a build step in CodePipeline, then two identical builds are created for each commit. One build is triggered through webhooks, and one through CodePipeline. Because billing is on a per-build basis, you are billed for both builds. Therefore, if you are using CodePipeline, we recommend that you disable webhooks in CodeBuild. In the CodeBuild console, clear the Webhook box. For more information, see step 5 in Change a Build Project’s Settings .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-webhook\n--project-name <value>\n[--branch-filter <value>]\n[--filter-groups <value>]\n[--build-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--branch-filter <value>]",
        "[--filter-groups <value>]",
        "[--build-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the CodeBuild project.\n\n--branch-filter (string)\n\nA regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If branchFilter is empty, then all branches are built.\n\nNote\n\nIt is recommended that you use filterGroups instead of branchFilter .\n\n--filter-groups (list)\n\nAn array of arrays of WebhookFilter objects used to determine which webhooks are triggered. At least one WebhookFilter in the array must specify EVENT as its type .\n\nFor a build to be triggered, at least one filter group in the filterGroups array must pass. For a filter group to pass, each of its filters must pass.\n\n(list)\n\n(structure)\n\nA filter used to determine which webhooks trigger a build.\n\ntype -> (string)\n\nThe type of webhook filter. There are six webhook filter types: EVENT , ACTOR_ACCOUNT_ID , HEAD_REF , BASE_REF , FILE_PATH , and COMMIT_MESSAGE .\n\nEVENT\n\nA webhook event triggers a build when the provided pattern matches one of five event types: PUSH , PULL_REQUEST_CREATED , PULL_REQUEST_UPDATED , PULL_REQUEST_REOPENED , and PULL_REQUEST_MERGED . The EVENT patterns are specified as a comma-separated string. For example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED filters all push, pull request created, and pull request updated events.\n\nNote\n\nThe PULL_REQUEST_REOPENED works with GitHub and GitHub Enterprise only.\n\nACTOR_ACCOUNT_ID\n\nA webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression pattern .\n\nHEAD_REF\n\nA webhook event triggers a build when the head reference matches the regular expression pattern . For example, refs/heads/branch-name and refs/tags/tag-name .\n\nWorks with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.\n\nBASE_REF\n\nA webhook event triggers a build when the base reference matches the regular expression pattern . For example, refs/heads/branch-name .\n\nNote\n\nWorks with pull request events only.\n\nFILE_PATH\n\nA webhook triggers a build when the path of a changed file matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\nCOMMIT_MESSAGE\n\nA webhook triggers a build when the head commit message matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\npattern -> (string)\n\nFor a WebHookFilter that uses EVENT type, a comma-separated string that specifies one or more events. For example, the webhook filter PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED allows all push, pull request created, and pull request updated events to trigger a build.\n\nFor a WebHookFilter that uses any of the other filter types, a regular expression pattern. For example, a WebHookFilter that uses HEAD_REF for its type and the pattern ^refs/heads/ triggers a build when the head reference is a branch with a reference name refs/heads/branch-name .\n\nexcludeMatchedPattern -> (boolean)\n\nUsed to indicate that the pattern determines which webhook events do not trigger a build. If true, then a webhook event that does not match the pattern triggers a build. If false, then a webhook event that matches the pattern triggers a build.\n\nShorthand Syntax:\n\n[{type=string,pattern=string,excludeMatchedPattern=boolean},{type=string,pattern=string,excludeMatchedPattern=boolean}] ...\n\n\nJSON Syntax:\n\n[\n  [\n    {\n      \"type\": \"EVENT\"|\"BASE_REF\"|\"HEAD_REF\"|\"ACTOR_ACCOUNT_ID\"|\"FILE_PATH\"|\"COMMIT_MESSAGE\",\n      \"pattern\": \"string\",\n      \"excludeMatchedPattern\": true|false\n    }\n    ...\n  ]\n  ...\n]\n\n\n--build-type (string)\n\nSpecifies the type of build this webhook will trigger.\n\nPossible values:\n\nBUILD\n\nBUILD_BATCH\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nwebhook -> (structure)\n\nInformation about a webhook that connects repository events to a build project in CodeBuild.\n\nurl -> (string)\n\nThe URL to the webhook.\n\npayloadUrl -> (string)\n\nThe CodeBuild endpoint where webhook events are sent.\n\nsecret -> (string)\n\nThe secret token of the associated repository.\n\nNote\n\nA Bitbucket webhook does not support secret .\n\nbranchFilter -> (string)\n\nA regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If branchFilter is empty, then all branches are built.\n\nNote\n\nIt is recommended that you use filterGroups instead of branchFilter .\n\nfilterGroups -> (list)\n\nAn array of arrays of WebhookFilter objects used to determine which webhooks are triggered. At least one WebhookFilter in the array must specify EVENT as its type .\n\nFor a build to be triggered, at least one filter group in the filterGroups array must pass. For a filter group to pass, each of its filters must pass.\n\n(list)\n\n(structure)\n\nA filter used to determine which webhooks trigger a build.\n\ntype -> (string)\n\nThe type of webhook filter. There are six webhook filter types: EVENT , ACTOR_ACCOUNT_ID , HEAD_REF , BASE_REF , FILE_PATH , and COMMIT_MESSAGE .\n\nEVENT\n\nA webhook event triggers a build when the provided pattern matches one of five event types: PUSH , PULL_REQUEST_CREATED , PULL_REQUEST_UPDATED , PULL_REQUEST_REOPENED , and PULL_REQUEST_MERGED . The EVENT patterns are specified as a comma-separated string. For example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED filters all push, pull request created, and pull request updated events.\n\nNote\n\nThe PULL_REQUEST_REOPENED works with GitHub and GitHub Enterprise only.\n\nACTOR_ACCOUNT_ID\n\nA webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression pattern .\n\nHEAD_REF\n\nA webhook event triggers a build when the head reference matches the regular expression pattern . For example, refs/heads/branch-name and refs/tags/tag-name .\n\nWorks with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.\n\nBASE_REF\n\nA webhook event triggers a build when the base reference matches the regular expression pattern . For example, refs/heads/branch-name .\n\nNote\n\nWorks with pull request events only.\n\nFILE_PATH\n\nA webhook triggers a build when the path of a changed file matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\nCOMMIT_MESSAGE\n\nA webhook triggers a build when the head commit message matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\npattern -> (string)\n\nFor a WebHookFilter that uses EVENT type, a comma-separated string that specifies one or more events. For example, the webhook filter PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED allows all push, pull request created, and pull request updated events to trigger a build.\n\nFor a WebHookFilter that uses any of the other filter types, a regular expression pattern. For example, a WebHookFilter that uses HEAD_REF for its type and the pattern ^refs/heads/ triggers a build when the head reference is a branch with a reference name refs/heads/branch-name .\n\nexcludeMatchedPattern -> (boolean)\n\nUsed to indicate that the pattern determines which webhook events do not trigger a build. If true, then a webhook event that does not match the pattern triggers a build. If false, then a webhook event that matches the pattern triggers a build.\n\nbuildType -> (string)\n\nSpecifies the type of build this webhook will trigger.\n\nlastModifiedSecret -> (timestamp)\n\nA timestamp that indicates the last time a repository’s secret token was modified.",
      "command_examples": "Examples\n\nTo create webhook filters for an AWS CodeBuild project\n\nThe following create-webhook example creates a webhook for a CodeBuild project named my-project that has two filter groups. The first filter group specifies pull requests that are created, updated, or reopened on branches with Git reference names that match the regular expression ^refs/heads/master$ and head references that match ^refs/heads/myBranch$. The second filter group specifies push requests on branches with Git reference names that do not match the regular expression ^refs/heads/myBranch$.\n\naws codebuild create-webhook \\\n    --project-name my-project \\\n    --filter-groups \"[[{\\\"type\\\":\\\"EVENT\\\",\\\"pattern\\\":\\\"PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED\\\"},{\\\"type\\\":\\\"HEAD_REF\\\",\\\"pattern\\\":\\\"^refs/heads/myBranch$\\\",\\\"excludeMatchedPattern\\\":true},{\\\"type\\\":\\\"BASE_REF\\\",\\\"pattern\\\":\\\"^refs/heads/master$\\\",\\\"excludeMatchedPattern\\\":true}],[{\\\"type\\\":\\\"EVENT\\\",\\\"pattern\\\":\\\"PUSH\\\"},{\\\"type\\\":\\\"HEAD_REF\\\",\\\"pattern\\\":\\\"^refs/heads/myBranch$\\\",\\\"excludeMatchedPattern\\\":true}]]\"\n\n\nOutput:\n\n{\n    \"webhook\": {\n        \"payloadUrl\": \"https://codebuild.us-west-2.amazonaws.com/webhooks?t=eyJlbmNyeXB0ZWREYXRhIjoiVVl5MGtoeGRwSzZFRXl2Wnh4bld1Z0tKZ291TVpQNEtFamQ3RDlDYWpRaGIreVFrdm9EQktIVk1NeHJEWEpmUDUrVUNOMUIyRHJRc1VxcHJ6QlNDSnljPSIsIml2UGFyYW1ldGVyU3BlYyI6InN4Tm1SeUt5MUhaUVRWbGciLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D&v=1\",\n        \"url\": \"https://api.github.com/repos/iversonic/codedeploy-sample/hooks/105190656\",\n        \"lastModifiedSecret\": 1556311319.069,\n        \"filterGroups\": [\n            [\n                {\n                    \"type\": \"EVENT\",\n                    \"pattern\": \"PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED\",\n                    \"excludeMatchedPattern\": false\n                },\n                {\n                    \"type\": \"HEAD_REF\",\n                    \"pattern\": \"refs/heads/myBranch$\",\n                    \"excludeMatchedPattern\": true\n                },\n                {\n                    \"type\": \"BASE_REF\",\n                    \"pattern\": \"refs/heads/master$\",\n                    \"excludeMatchedPattern\": true\n                }\n            ],\n            [\n                {\n                    \"type\": \"EVENT\",\n                    \"pattern\": \"PUSH\",\n                    \"excludeMatchedPattern\": false\n                },\n                {\n                    \"type\": \"HEAD_REF\",\n                    \"pattern\": \"refs/heads/myBranch$\",\n                    \"excludeMatchedPattern\": true\n                }\n            ]\n        ]\n    }\n}\n\n\nFor more information, see Filter GitHub Webhook Events (SDK) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "delete-build-batch",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/delete-build-batch.html",
      "command_description": "Description\n\nDeletes a batch build.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-build-batch\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe identifier of the batch build to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstatusCode -> (string)\n\nThe status code.\n\nbuildsDeleted -> (list)\n\nAn array of strings that contain the identifiers of the builds that were deleted.\n\n(string)\n\nbuildsNotDeleted -> (list)\n\nAn array of BuildNotDeleted objects that specify the builds that could not be deleted.\n\n(structure)\n\nInformation about a build that could not be successfully deleted.\n\nid -> (string)\n\nThe ID of the build that could not be successfully deleted.\n\nstatusCode -> (string)\n\nAdditional information about the build that could not be successfully deleted.",
      "command_examples": "Examples\n\nTo delete a batch build in AWS CodeBuild.\n\nThe following delete-build-batch example deletes the specified batch build.\n\naws codebuild delete-build-batch \\\n    --id <project-name>:<batch-ID>\n\n\nOutput:\n\n{\n    \"statusCode\": \"BATCH_DELETED\",\n    \"buildsDeleted\": [\n        \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n        \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n        \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n        \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\"\n    ],\n    \"buildsNotDeleted\": []\n}\n\n\nFor more information, see Batch builds in AWS CodeBuild in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "delete-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/delete-project.html",
      "command_description": "Description\n\nDeletes a build project. When you delete a project, its builds are not deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-project\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the build project.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an AWS CodeBuild build project\n\nThe following delete-project example deletes the specified CodeBuild build project.\n\naws codebuild delete-project --name my-project\n\n\nThis command produces no output.\n\nFor more information, see Delete a Build Project (AWS CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "delete-report",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/delete-report.html",
      "command_description": "Description\n\nDeletes a report.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-report\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the report to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a report in AWS CodeBuild.\n\nThe following delete-report example deletes the specified report.\n\naws codebuild delete-report \\\n    --arn arn:aws:codebuild:<region-ID>:<account-ID>:report/<report-group-name>:<report-ID>\n\n\nThis command produces no output.\n\nFor more information, see Working with reports in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "delete-report-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/delete-report-group.html",
      "command_description": "Description\n\nDeletes a report group. Before you delete a report group, you must delete its reports.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-report-group\n--arn <value>\n[--delete-reports | --no-delete-reports]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--delete-reports | --no-delete-reports]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the report group to delete.\n\n--delete-reports | --no-delete-reports (boolean)\n\nIf true , deletes any reports that belong to a report group before deleting the report group.\n\nIf false , you must delete any reports in the report group. Use ListReportsForReportGroup to get the reports in a report group. Use DeleteReport to delete the reports. If you call DeleteReportGroup for a report group that contains one or more reports, an exception is thrown.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a report groups in AWS CodeBuild.\n\nThe following delete-report-group example deletes the report group with the specified ARN.\n\naws codebuild delete-report-group \\\n    --arn arn:aws:codebuild:<region-ID>:<user-ID>:report-group/<report-group-name>\n\n\nThis command produces no output.\n\nFor more information, see Working with report groups in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "delete-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/delete-resource-policy.html",
      "command_description": "Description\n\nDeletes a resource policy that is identified by its resource ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resource-policy\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource that is associated with the resource policy.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-source-credentials",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/delete-source-credentials.html",
      "command_description": "Description\n\nDeletes a set of GitHub, GitHub Enterprise, or Bitbucket source credentials.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-source-credentials\n--arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the token.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the token.",
      "command_examples": "Examples\n\nTo disconnect from a source provider and remove its access tokens.\n\nThe following delete-source-credentials example disconnects from a source provider and removes its tokens. The ARN of source credentials used to connect to the source provider determines which source credentials.\n\naws codebuild delete-source-credentials --arn arn-of-your-credentials\n\n\nOutput:\n\n{\n    \"arn\": \"arn:aws:codebuild:your-region:your-account-id:token/your-server-type\"\n}\n\n\nFor more information, see Connect Source Providers with Access Tokens (CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "delete-webhook",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/delete-webhook.html",
      "command_description": "Description\n\nFor an existing CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, stops CodeBuild from rebuilding the source code every time a code change is pushed to the repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-webhook\n--project-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the CodeBuild project.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a webhook filter from an AWS CodeBuild project\n\nThe following delete-webhook example deletes a webhook from the specified CodeBuild project.\n\naws codebuild delete-webhook --project-name my-project\n\n\nThis command produces no output.\n\nFor more information, see Stop Running Builds Automatically (AWS CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "describe-code-coverages",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/describe-code-coverages.html",
      "command_description": "Description\n\nRetrieves one or more code coverage reports.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-code-coverages is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: codeCoverages",
      "command_synopsis": "Synopsis\n  describe-code-coverages\n--report-arn <value>\n[--sort-order <value>]\n[--sort-by <value>]\n[--min-line-coverage-percentage <value>]\n[--max-line-coverage-percentage <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--report-arn <value>",
        "[--sort-order <value>]",
        "[--sort-by <value>]",
        "[--min-line-coverage-percentage <value>]",
        "[--max-line-coverage-percentage <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--report-arn (string)\n\nThe ARN of the report for which test cases are returned.\n\n--sort-order (string)\n\nSpecifies if the results are sorted in ascending or descending order.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--sort-by (string)\n\nSpecifies how the results are sorted. Possible values are:\n\nFILE_PATH\n\nThe results are sorted by file path.\n\nLINE_COVERAGE_PERCENTAGE\n\nThe results are sorted by the percentage of lines that are covered.\n\nPossible values:\n\nLINE_COVERAGE_PERCENTAGE\n\nFILE_PATH\n\n--min-line-coverage-percentage (double)\n\nThe minimum line coverage percentage to report.\n\n--max-line-coverage-percentage (double)\n\nThe maximum line coverage percentage to report.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nIf there are more items to return, this contains a token that is passed to a subsequent call to DescribeCodeCoverages to retrieve the next set of items.\n\ncodeCoverages -> (list)\n\nAn array of CodeCoverage objects that contain the results.\n\n(structure)\n\nContains code coverage report information.\n\nLine coverage measures how many statements your tests cover. A statement is a single instruction, not including comments, conditionals, etc.\n\nBranch coverage determines if your tests cover every possible branch of a control structure, such as an if or case statement.\n\nid -> (string)\n\nThe identifier of the code coverage report.\n\nreportARN -> (string)\n\nThe ARN of the report.\n\nfilePath -> (string)\n\nThe path of the test report file.\n\nlineCoveragePercentage -> (double)\n\nThe percentage of lines that are covered by your tests.\n\nlinesCovered -> (integer)\n\nThe number of lines that are covered by your tests.\n\nlinesMissed -> (integer)\n\nThe number of lines that are not covered by your tests.\n\nbranchCoveragePercentage -> (double)\n\nThe percentage of branches that are covered by your tests.\n\nbranchesCovered -> (integer)\n\nThe number of conditional branches that are covered by your tests.\n\nbranchesMissed -> (integer)\n\nThe number of conditional branches that are not covered by your tests.\n\nexpired -> (timestamp)\n\nThe date and time that the tests were run.",
      "command_examples": "Examples\n\nTo get detailed information about code coverage test results in AWS CodeBuild.\n\nThe following describe-code-coverages example gets information about the code coverage test results in the specified report.\n\naws codebuild describe-code-coverages \\\n    --report-arn arn:aws:codebuild:<region-ID>:<account-ID>:report/<report-group-name>:<report-ID>\n\n\nOutput:\n\n{\n    \"codeCoverages\": [\n        {\n            \"id\": \"20a0adcc-db13-4b66-804b-ecaf9f852855\",\n            \"reportARN\": \"arn:aws:codebuild:<region-ID>:972506530580:report/<report-group-name>:<report-ID>\",\n            \"filePath\": \"<source-file-1-path>\",\n            \"lineCoveragePercentage\": 83.33,\n            \"linesCovered\": 5,\n            \"linesMissed\": 1,\n            \"branchCoveragePercentage\": 50.0,\n            \"branchesCovered\": 1,\n            \"branchesMissed\": 1,\n            \"expired\": \"2020-11-20T21:22:45+00:00\"\n        },\n        {\n            \"id\": \"0887162d-bf57-4cf1-a164-e432373d1a83\",\n            \"reportARN\": \"arn:aws:codebuild:<region-ID>:972506530580:report/<report-group-name>:<report-ID>\",\n            \"filePath\": \"<source-file-2-path>\",\n            \"lineCoveragePercentage\": 90.9,\n            \"linesCovered\": 10,\n            \"linesMissed\": 1,\n            \"branchCoveragePercentage\": 50.0,\n            \"branchesCovered\": 1,\n            \"branchesMissed\": 1,\n            \"expired\": \"2020-11-20T21:22:45+00:00\"\n        }\n    ]\n}\n\n\nFor more information, see Code coverage reports in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "describe-test-cases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/describe-test-cases.html",
      "command_description": "Description\n\nReturns a list of details about test cases for a report.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-test-cases is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: testCases",
      "command_synopsis": "Synopsis\n  describe-test-cases\n--report-arn <value>\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--report-arn <value>",
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--report-arn (string)\n\nThe ARN of the report for which test cases are returned.\n\n--filter (structure)\n\nA TestCaseFilter object used to filter the returned reports.\n\nstatus -> (string)\n\nThe status used to filter test cases. A TestCaseFilter can have one status. Valid values are:\n\nSUCCEEDED\n\nFAILED\n\nERROR\n\nSKIPPED\n\nUNKNOWN\n\nkeyword -> (string)\n\nA keyword that is used to filter on the name or the prefix of the test cases. Only test cases where the keyword is a substring of the name or the prefix will be returned.\n\nShorthand Syntax:\n\nstatus=string,keyword=string\n\n\nJSON Syntax:\n\n{\n  \"status\": \"string\",\n  \"keyword\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nDuring a previous call, the maximum number of items that can be returned is the value specified in maxResults . If there more items in the list, then a unique string called a nextToken is returned. To get the next batch of items in the list, call this operation again, adding the next token to the call. To get all of the items in the list, keep calling this operation with each subsequent next token that is returned, until no more next tokens are returned.\n\ntestCases -> (list)\n\nThe returned list of test cases.\n\n(structure)\n\nInformation about a test case created using a framework such as NUnit or Cucumber. A test case might be a unit test or a configuration test.\n\nreportArn -> (string)\n\nThe ARN of the report to which the test case belongs.\n\ntestRawDataPath -> (string)\n\nThe path to the raw data file that contains the test result.\n\nprefix -> (string)\n\nA string that is applied to a series of related test cases. CodeBuild generates the prefix. The prefix depends on the framework used to generate the tests.\n\nname -> (string)\n\nThe name of the test case.\n\nstatus -> (string)\n\nThe status returned by the test case after it was run. Valid statuses are SUCCEEDED , FAILED , ERROR , SKIPPED , and UNKNOWN .\n\ndurationInNanoSeconds -> (long)\n\nThe number of nanoseconds it took to run this test case.\n\nmessage -> (string)\n\nA message associated with a test case. For example, an error message or stack trace.\n\nexpired -> (timestamp)\n\nThe date and time a test case expires. A test case expires 30 days after it is created. An expired test case is not available to view in CodeBuild.",
      "command_examples": "Examples\n\nTo get detailed information about test cases in AWS CodeBuild.\n\nThe following describe-test-cases example gets information about the test cases in the specified report.\n\naws codebuild describe-test-cases \\\n    --report-arn arn:aws:codebuild:<region-ID>:<account-ID>:report/<report-group-name>:<report-ID>\n\n\nOutput:\n\n{\n    \"testCases\": [\n        {\n            \"reportArn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:report/<report-group-name>:<report-ID>\",\n            \"testRawDataPath\": \"<test-report-path>\",\n            \"prefix\": \"NUnit.Tests.Assemblies.MockTestFixture\",\n            \"name\": \"NUnit.Tests.Assemblies.MockTestFixture.NotRunnableTest\",\n            \"status\": \"ERROR\",\n            \"durationInNanoSeconds\": 0,\n            \"message\": \"No arguments were provided\\n\",\n            \"expired\": \"2020-11-20T17:52:10+00:00\"\n        },\n        {\n            \"reportArn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:report/<report-group-name>:<report-ID>\",\n            \"testRawDataPath\": \"<test-report-path>\",\n            \"prefix\": \"NUnit.Tests.Assemblies.MockTestFixture\",\n            \"name\": \"NUnit.Tests.Assemblies.MockTestFixture.TestWithException\",\n            \"status\": \"ERROR\",\n            \"durationInNanoSeconds\": 0,\n            \"message\": \"System.ApplicationException : Intentional Exception\\nat NUnit.Tests.Assemblies.MockTestFixture.MethodThrowsException()\\nat NUnit.Tests.Assemblies.MockTestFixture.TestWithException()\\n\\n\",\n            \"expired\": \"2020-11-20T17:52:10+00:00\"\n        }\n    ]\n}\n\n\nFor more information, see Working with test reporting in AWS CodeBuild in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "get-report-group-trend",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/get-report-group-trend.html",
      "command_description": "Description\n\nAnalyzes and accumulates test report values for the specified test reports.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-report-group-trend\n--report-group-arn <value>\n[--num-of-reports <value>]\n--trend-field <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--report-group-arn <value>",
        "[--num-of-reports <value>]",
        "--trend-field <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--report-group-arn (string)\n\nThe ARN of the report group that contains the reports to analyze.\n\n--num-of-reports (integer)\n\nThe number of reports to analyze. This operation always retrieves the most recent reports.\n\nIf this parameter is omitted, the most recent 100 reports are analyzed.\n\n--trend-field (string)\n\nThe test report value to accumulate. This must be one of the following values:\n\nTest reports: DURATION\n\nAccumulate the test run times for the specified reports.\n\nPASS_RATE\n\nAccumulate the percentage of tests that passed for the specified test reports.\n\nTOTAL\n\nAccumulate the total number of tests for the specified test reports.\n\nCode coverage reports: BRANCH_COVERAGE\n\nAccumulate the branch coverage percentages for the specified test reports.\n\nBRANCHES_COVERED\n\nAccumulate the branches covered values for the specified test reports.\n\nBRANCHES_MISSED\n\nAccumulate the branches missed values for the specified test reports.\n\nLINE_COVERAGE\n\nAccumulate the line coverage percentages for the specified test reports.\n\nLINES_COVERED\n\nAccumulate the lines covered values for the specified test reports.\n\nLINES_MISSED\n\nAccumulate the lines not covered values for the specified test reports.\n\nPossible values:\n\nPASS_RATE\n\nDURATION\n\nTOTAL\n\nLINE_COVERAGE\n\nLINES_COVERED\n\nLINES_MISSED\n\nBRANCH_COVERAGE\n\nBRANCHES_COVERED\n\nBRANCHES_MISSED\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstats -> (structure)\n\nContains the accumulated trend data.\n\naverage -> (string)\n\nContains the average of all values analyzed.\n\nmax -> (string)\n\nContains the maximum value analyzed.\n\nmin -> (string)\n\nContains the minimum value analyzed.\n\nrawData -> (list)\n\nAn array that contains the raw data for each report.\n\n(structure)\n\nContains the unmodified data for the report. For more information, see .\n\nreportArn -> (string)\n\nThe ARN of the report.\n\ndata -> (string)\n\nThe value of the requested data field from the report."
    },
    {
      "command_name": "get-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/get-resource-policy.html",
      "command_description": "Description\n\nGets a resource policy that is identified by its resource ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resource-policy\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource that is associated with the resource policy.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npolicy -> (string)\n\nThe resource policy for the resource identified by the input ARN parameter."
    },
    {
      "command_name": "import-source-credentials",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/import-source-credentials.html",
      "command_description": "Description\n\nImports the source repository credentials for an CodeBuild project that has its source code stored in a GitHub, GitHub Enterprise, or Bitbucket repository.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  import-source-credentials\n[--username <value>]\n--token <value>\n--server-type <value>\n--auth-type <value>\n[--should-overwrite | --no-should-overwrite]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--username <value>]",
        "--token <value>",
        "--server-type <value>",
        "--auth-type <value>",
        "[--should-overwrite | --no-should-overwrite]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--username (string)\n\nThe Bitbucket username when the authType is BASIC_AUTH. This parameter is not valid for other types of source providers or connections.\n\n--token (string)\n\nFor GitHub or GitHub Enterprise, this is the personal access token. For Bitbucket, this is the app password.\n\n--server-type (string)\n\nThe source provider used for this project.\n\nPossible values:\n\nGITHUB\n\nBITBUCKET\n\nGITHUB_ENTERPRISE\n\n--auth-type (string)\n\nThe type of authentication used to connect to a GitHub, GitHub Enterprise, or Bitbucket repository. An OAUTH connection is not supported by the API and must be created using the CodeBuild console.\n\nPossible values:\n\nOAUTH\n\nBASIC_AUTH\n\nPERSONAL_ACCESS_TOKEN\n\n--should-overwrite | --no-should-overwrite (boolean)\n\nSet to false to prevent overwriting the repository source credentials. Set to true to overwrite the repository source credentials. The default value is true .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the token.",
      "command_examples": "Examples\n\nConnect an AWS CodeBuild user to a source provider by importing credentials for the source provider.\n\nThe following import-source-credentials example imports a token for a Bitbucket repository that uses BASIC_AUTH for its authentication type.\n\naws codebuild import-source-credentials --server-type BITBUCKET --auth-type BASIC_AUTH --token my-Bitbucket-password --username my-Bitbucket-username\n\n\nOutput:\n\n{\n    \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:token/bitbucket\"\n}\n\n\nFor more information, see Connect Source Providers with Access Tokens (CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "invalidate-project-cache",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/invalidate-project-cache.html",
      "command_description": "Description\n\nResets the cache for a project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  invalidate-project-cache\n--project-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the CodeBuild build project that the cache is reset for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo reset the cache for an AWS CodeBuild build project.\n\nThe following invalidate-project-cache example resets the cache for the specified CodeBuild project.\n\naws codebuild invalidate-project-cache --project-name my-project\n\n\nThis command produces no output.\n\nFor more information, see Build Caching in CodeBuild in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "list-build-batches",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-build-batches.html",
      "command_description": "Description\n\nRetrieves the identifiers of your build batches in the current region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-build-batches is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ids",
      "command_synopsis": "Synopsis\n  list-build-batches\n[--filter <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nA BuildBatchFilter object that specifies the filters for the search.\n\nstatus -> (string)\n\nThe status of the batch builds to retrieve. Only batch builds that have this status will be retrieved.\n\nShorthand Syntax:\n\nstatus=string\n\n\nJSON Syntax:\n\n{\n  \"status\": \"SUCCEEDED\"|\"FAILED\"|\"FAULT\"|\"TIMED_OUT\"|\"IN_PROGRESS\"|\"STOPPED\"\n}\n\n\n--sort-order (string)\n\nSpecifies the sort order of the returned items. Valid values include:\n\nASCENDING : List the batch build identifiers in ascending order by identifier.\n\nDESCENDING : List the batch build identifiers in descending order by identifier.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nids -> (list)\n\nAn array of strings that contains the batch build identifiers.\n\n(string)\n\nnextToken -> (string)\n\nIf there are more items to return, this contains a token that is passed to a subsequent call to ListBuildBatches to retrieve the next set of items.",
      "command_examples": "Examples\n\nTo list batch builds in AWS CodeBuild.\n\nThe following list-build-batches example lists the CodeBuild batch builds for the current account.\n\naws codebuild list-build-batches\n\n\nOutput:\n\n{\n    \"ids\": [\n        \"<project-name>:<batch-ID>\",\n        \"<project-name>:<batch-ID>\"\n    ]\n}\n\n\nFor more information, see Batch builds in AWS CodeBuild <https://docs.aws.amazon.com/codebuild/latest/userguide/batch-build.html>)__ in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "list-build-batches-for-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-build-batches-for-project.html",
      "command_description": "Description\n\nRetrieves the identifiers of the build batches for a specific project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-build-batches-for-project is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ids",
      "command_synopsis": "Synopsis\n  list-build-batches-for-project\n[--project-name <value>]\n[--filter <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--project-name <value>]",
        "[--filter <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the project.\n\n--filter (structure)\n\nA BuildBatchFilter object that specifies the filters for the search.\n\nstatus -> (string)\n\nThe status of the batch builds to retrieve. Only batch builds that have this status will be retrieved.\n\nShorthand Syntax:\n\nstatus=string\n\n\nJSON Syntax:\n\n{\n  \"status\": \"SUCCEEDED\"|\"FAILED\"|\"FAULT\"|\"TIMED_OUT\"|\"IN_PROGRESS\"|\"STOPPED\"\n}\n\n\n--sort-order (string)\n\nSpecifies the sort order of the returned items. Valid values include:\n\nASCENDING : List the batch build identifiers in ascending order by identifier.\n\nDESCENDING : List the batch build identifiers in descending order by identifier.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nids -> (list)\n\nAn array of strings that contains the batch build identifiers.\n\n(string)\n\nnextToken -> (string)\n\nIf there are more items to return, this contains a token that is passed to a subsequent call to ListBuildBatchesForProject to retrieve the next set of items.",
      "command_examples": "Examples\n\nTo list batch builds for a specific build project in AWS CodeBuild.\n\nThe following list-build-batches-for-project example lists the CodeBuild batch builds for the specified project.\n\naws codebuild list-build-batches-for-project \\\n    --project-name \"<project-name>\"\n\n\nOutput:\n\n{\n    \"ids\": [\n        \"<project-name>:<batch-ID>\",\n        \"<project-name>:<batch-ID>\"\n    ]\n}\n\n\nFor more information, see Batch builds in AWS CodeBuild in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "list-builds",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-builds.html",
      "command_description": "Description\n\nGets a list of build IDs, with each build ID representing a single build.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-builds is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ids",
      "command_synopsis": "Synopsis\n  list-builds\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--sort-order (string)\n\nThe order to list build IDs. Valid values include:\n\nASCENDING : List the build IDs in ascending order by build ID.\n\nDESCENDING : List the build IDs in descending order by build ID.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nids -> (list)\n\nA list of build IDs, with each build ID representing a single build.\n\n(string)\n\nnextToken -> (string)\n\nIf there are more than 100 items in the list, only the first 100 items are returned, along with a unique string called a nextToken . To get the next batch of items in the list, call this operation again, adding the next token to the call.",
      "command_examples": "Examples\n\nTo get a list of AWS CodeBuild builds IDs.\n\nThe following list-builds example gets a list of CodeBuild IDs sorted in ascending order.\n\naws codebuild list-builds --sort-order ASCENDING\n\n\nThe output includes a nextToken value which indicates that there is more output available.\n\n{\n    \"nextToken\": \"4AEA6u7J...The full token has been omitted for brevity...MzY2OA==\",\n    \"ids\": [\n        \"codebuild-demo-project:815e755f-bade-4a7e-80f0-efe51EXAMPLE\"\n        \"codebuild-demo-project:84a7f3d1-d40e-4956-b4cf-7a9d4EXAMPLE\"\n            ... The full list of build IDs has been omitted for brevity ...\n        \"codebuild-demo-project:931d0b72-bf6f-4040-a472-5c707EXAMPLE\"\n    ]\n}\n\n\nRun this command again and provide the nextToken value in the previous response as a parameter to get the next part of the output. Repeat until you don’t receive a nextToken value in the response.\n\naws codebuild list-builds --sort-order ASCENDING --next-token 4AEA6u7J...The full token has been omitted for brevity...MzY2OA==\n\n\nNext part of the output:\n\n{\n    \"ids\": [\n        \"codebuild-demo-project:49015049-21cf-4b50-9708-df115EXAMPLE\",\n        \"codebuild-demo-project:543e7206-68a3-46d6-a4da-759abEXAMPLE\",\n            ... The full list of build IDs has been omitted for brevity ...\n        \"codebuild-demo-project:c282f198-4582-4b38-bdc0-26f96EXAMPLE\"\n    ]\n}\n\n\nFor more information, see View a List of Build IDs (AWS CLI) in the AWS CodeBuild User Guide"
    },
    {
      "command_name": "list-builds-for-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-builds-for-project.html",
      "command_description": "Description\n\nGets a list of build identifiers for the specified build project, with each build identifier representing a single build.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-builds-for-project is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ids",
      "command_synopsis": "Synopsis\n  list-builds-for-project\n--project-name <value>\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the CodeBuild project.\n\n--sort-order (string)\n\nThe order to sort the results in. The results are sorted by build number, not the build identifier. If this is not specified, the results are sorted in descending order.\n\nValid values include:\n\nASCENDING : List the build identifiers in ascending order, by build number.\n\nDESCENDING : List the build identifiers in descending order, by build number.\n\nIf the project has more than 100 builds, setting the sort order will result in an error.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nids -> (list)\n\nA list of build identifiers for the specified build project, with each build ID representing a single build.\n\n(string)\n\nnextToken -> (string)\n\nIf there are more than 100 items in the list, only the first 100 items are returned, along with a unique string called a nextToken . To get the next batch of items in the list, call this operation again, adding the next token to the call.",
      "command_examples": "Examples\n\nTo view a list of builds for an AWS CodeBuild build project.\n\nThe following list-builds-for-project example lists the build IDs in descending order for the specified CodeBuild build project.\n\naws codebuild list-builds-for-project --project-name codebuild-demo-project --sort-order DESCENDING\n\n\nOutput:\n\n{\n    \"ids\": [\n        \"codebuild-demo-project:1a2b3c4d-5678-90ab-cdef-11111example\",\n        \"codebuild-demo-project:1a2b3c4d-5678-90ab-cdef-22222example\",\n        \"codebuild-demo-project:1a2b3c4d-5678-90ab-cdef-33333example\",\n        \"codebuild-demo-project:1a2b3c4d-5678-90ab-cdef-44444example\",\n        \"codebuild-demo-project:1a2b3c4d-5678-90ab-cdef-55555example\"\n    ]\n}\n\n\nFor more information, see View a List of Build IDs for a Build Project (AWS CLI) in the AWS CodeBuild User Guide"
    },
    {
      "command_name": "list-curated-environment-images",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-curated-environment-images.html",
      "command_description": "Description\n\nGets information about Docker images that are managed by CodeBuild.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-curated-environment-images\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nplatforms -> (list)\n\nInformation about supported platforms for Docker images that are managed by CodeBuild.\n\n(structure)\n\nA set of Docker images that are related by platform and are managed by CodeBuild.\n\nplatform -> (string)\n\nThe platform’s name.\n\nlanguages -> (list)\n\nThe list of programming languages that are available for the specified platform.\n\n(structure)\n\nA set of Docker images that are related by programming language and are managed by CodeBuild.\n\nlanguage -> (string)\n\nThe programming language for the Docker images.\n\nimages -> (list)\n\nThe list of Docker images that are related by the specified programming language.\n\n(structure)\n\nInformation about a Docker image that is managed by CodeBuild.\n\nname -> (string)\n\nThe name of the Docker image.\n\ndescription -> (string)\n\nThe description of the Docker image.\n\nversions -> (list)\n\nA list of environment image versions.\n\n(string)",
      "command_examples": "Examples\n\nTo get a list of Docker images managed by AWS CodeBuild that you can use for your builds.\n\nThe following list-curated-environment-images example lists the Docker images managed by CodeBuild that can be used for builds.:\n\naws codebuild list-curated-environment-images\n\n\nOutput:\n\n{\n    \"platforms\": [\n        {\n            \"platform\": \"AMAZON_LINUX\",\n            \"languages\": [\n                {\n                    \"language\": \"JAVA\",\n                    \"images\": [\n                        {\n                            \"description\": \"AWS ElasticBeanstalk - Java 7 Running on Amazon Linux 64bit v2.1.3\",\n                            \"name\": \"aws/codebuild/eb-java-7-amazonlinux-64:2.1.3\",\n                            \"versions\": [\n                                \"aws/codebuild/eb-java-7-amazonlinux-64:2.1.3-1.0.0\"\n                            ]\n                        },\n                        {\n                            \"description\": \"AWS ElasticBeanstalk - Java 8 Running on Amazon Linux 64bit v2.1.3\",\n                            \"name\": \"aws/codebuild/eb-java-8-amazonlinux-64:2.1.3\",\n                            \"versions\": [\n                                \"aws/codebuild/eb-java-8-amazonlinux-64:2.1.3-1.0.0\"\n                            ]\n                        },\n                        ... LIST TRUNCATED FOR BREVITY ...\n                    ]\n                }\n            ]\n        }\n    ]\n}\n\n\nFor more information, see Docker Images Provided by CodeBuild in the AWS CodeBuild User Guide"
    },
    {
      "command_name": "list-projects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-projects.html",
      "command_description": "Description\n\nGets a list of build project names, with each build project name representing a single build project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-projects is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: projects",
      "command_synopsis": "Synopsis\n  list-projects\n[--sort-by <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--sort-by <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--sort-by (string)\n\nThe criterion to be used to list build project names. Valid values include:\n\nCREATED_TIME : List based on when each build project was created.\n\nLAST_MODIFIED_TIME : List based on when information about each build project was last changed.\n\nNAME : List based on each build project’s name.\n\nUse sortOrder to specify in what order to list the build project names based on the preceding criteria.\n\nPossible values:\n\nNAME\n\nCREATED_TIME\n\nLAST_MODIFIED_TIME\n\n--sort-order (string)\n\nThe order in which to list build projects. Valid values include:\n\nASCENDING : List in ascending order.\n\nDESCENDING : List in descending order.\n\nUse sortBy to specify the criterion to be used to list build project names.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nIf there are more than 100 items in the list, only the first 100 items are returned, along with a unique string called a nextToken . To get the next batch of items in the list, call this operation again, adding the next token to the call.\n\nprojects -> (list)\n\nThe list of build project names, with each build project name representing a single build project.\n\n(string)",
      "command_examples": "Examples\n\nTo get a list of AWS CodeBuild build project names.\n\nThe following list-projects example gets a list of CodeBuild build projects sorted by name in ascending order.\n\naws codebuild list-projects --sort-by NAME --sort-order ASCENDING\n\n\nThe output includes a nextToken value which indicates that there is more output available.\n\n{\n    \"nextToken\": \"Ci33ACF6...The full token has been omitted for brevity...U+AkMx8=\",\n    \"projects\": [\n        \"codebuild-demo-project\",\n        \"codebuild-demo-project2\",\n            ... The full list of build project names has been omitted for brevity ...\n        \"codebuild-demo-project99\"\n    ]\n}\n\n\nRun this command again and provide the nextToken value from the previous response as a parameter to get the next part of the output. Repeat until you don’t receive a nextToken value in the response.\n\naws codebuild list-projects  --sort-by NAME --sort-order ASCENDING --next-token Ci33ACF6...The full token has been omitted for brevity...U+AkMx8=\n\n{\n    \"projects\": [\n        \"codebuild-demo-project100\",\n        \"codebuild-demo-project101\",\n            ... The full list of build project names has been omitted for brevity ...\n        \"codebuild-demo-project122\"\n    ]\n}\n\n\nFor more information, see View a List of Build Project Names (AWS CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "list-report-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-report-groups.html",
      "command_description": "Description\n\nGets a list ARNs for the report groups in the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-report-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: reportGroups",
      "command_synopsis": "Synopsis\n  list-report-groups\n[--sort-order <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--sort-order <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--sort-order (string)\n\nUsed to specify the order to sort the list of returned report groups. Valid values are ASCENDING and DESCENDING .\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--sort-by (string)\n\nThe criterion to be used to list build report groups. Valid values include:\n\nCREATED_TIME : List based on when each report group was created.\n\nLAST_MODIFIED_TIME : List based on when each report group was last changed.\n\nNAME : List based on each report group’s name.\n\nPossible values:\n\nNAME\n\nCREATED_TIME\n\nLAST_MODIFIED_TIME\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nDuring a previous call, the maximum number of items that can be returned is the value specified in maxResults . If there more items in the list, then a unique string called a nextToken is returned. To get the next batch of items in the list, call this operation again, adding the next token to the call. To get all of the items in the list, keep calling this operation with each subsequent next token that is returned, until no more next tokens are returned.\n\nreportGroups -> (list)\n\nThe list of ARNs for the report groups in the current Amazon Web Services account.\n\n(string)",
      "command_examples": "Examples\n\nTo get a list of the report group ARNs in AWS CodeBuild.\n\nThe following list-report-groups example retrieves the report group ARNs for the account in the region.\n\naws codebuild list-report-groups\n\n\nOutput:\n\n{\n    \"reportGroups\": [\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/report-group-1\",\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/report-group-2\",\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/report-group-3\"\n    ]\n}\n\n\nFor more information, see Working with report groups in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "list-reports",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-reports.html",
      "command_description": "Description\n\nReturns a list of ARNs for the reports in the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-reports is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: reports",
      "command_synopsis": "Synopsis\n  list-reports\n[--sort-order <value>]\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--sort-order <value>]",
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--sort-order (string)\n\nSpecifies the sort order for the list of returned reports. Valid values are:\n\nASCENDING : return reports in chronological order based on their creation date.\n\nDESCENDING : return reports in the reverse chronological order based on their creation date.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--filter (structure)\n\nA ReportFilter object used to filter the returned reports.\n\nstatus -> (string)\n\nThe status used to filter reports. You can filter using one status only.\n\nShorthand Syntax:\n\nstatus=string\n\n\nJSON Syntax:\n\n{\n  \"status\": \"GENERATING\"|\"SUCCEEDED\"|\"FAILED\"|\"INCOMPLETE\"|\"DELETING\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nDuring a previous call, the maximum number of items that can be returned is the value specified in maxResults . If there more items in the list, then a unique string called a nextToken is returned. To get the next batch of items in the list, call this operation again, adding the next token to the call. To get all of the items in the list, keep calling this operation with each subsequent next token that is returned, until no more next tokens are returned.\n\nreports -> (list)\n\nThe list of returned ARNs for the reports in the current Amazon Web Services account.\n\n(string)",
      "command_examples": "Examples\n\nTo get a list of the reports for the current account in AWS CodeBuild.\n\nThe following list-reports example retrieves the ARNs of the reports for the current account.\n\naws codebuild list-reports\n\n\nOutput:\n\n{\n    \"reports\": [\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report/<report-group-name>:<report ID>\",\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report/<report-group-name>:<report ID>\",\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report/<report-group-name>:<report ID>\"\n    ]\n}\n\n\nFor more information, see Working with reports in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "list-reports-for-report-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-reports-for-report-group.html",
      "command_description": "Description\n\nReturns a list of ARNs for the reports that belong to a ReportGroup .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-reports-for-report-group is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: reports",
      "command_synopsis": "Synopsis\n  list-reports-for-report-group\n--report-group-arn <value>\n[--sort-order <value>]\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--report-group-arn <value>",
        "[--sort-order <value>]",
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--report-group-arn (string)\n\nThe ARN of the report group for which you want to return report ARNs.\n\n--sort-order (string)\n\nUse to specify whether the results are returned in ascending or descending order.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--filter (structure)\n\nA ReportFilter object used to filter the returned reports.\n\nstatus -> (string)\n\nThe status used to filter reports. You can filter using one status only.\n\nShorthand Syntax:\n\nstatus=string\n\n\nJSON Syntax:\n\n{\n  \"status\": \"GENERATING\"|\"SUCCEEDED\"|\"FAILED\"|\"INCOMPLETE\"|\"DELETING\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nDuring a previous call, the maximum number of items that can be returned is the value specified in maxResults . If there more items in the list, then a unique string called a nextToken is returned. To get the next batch of items in the list, call this operation again, adding the next token to the call. To get all of the items in the list, keep calling this operation with each subsequent next token that is returned, until no more next tokens are returned.\n\nreports -> (list)\n\nThe list of report ARNs.\n\n(string)",
      "command_examples": "Examples\n\nTo get a list of the reports in a report group in AWS CodeBuild.\n\nThe following list-report-for-report-groups example retrieves the reports in the specified report group for the account in the region.\n\naws codebuild list-reports-for-report-group \\\n    --report-group-arn arn:aws:codebuild:<region-ID>:<user-ID>:report-group/<report-group-name>\n\n\nOutput:\n\n{\n    \"reports\": [\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report/report-1\",\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report/report-2\",\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report/report-3\"\n    ]\n}\n\n\nFor more information, see Working with report groups in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "list-shared-projects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-shared-projects.html",
      "command_description": "Description\n\nGets a list of projects that are shared with other Amazon Web Services accounts or users.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-shared-projects is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: projects",
      "command_synopsis": "Synopsis\n  list-shared-projects\n[--sort-by <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--sort-by <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--sort-by (string)\n\nThe criterion to be used to list build projects shared with the current Amazon Web Services account or user. Valid values include:\n\nARN : List based on the ARN.\n\nMODIFIED_TIME : List based on when information about the shared project was last changed.\n\nPossible values:\n\nARN\n\nMODIFIED_TIME\n\n--sort-order (string)\n\nThe order in which to list shared build projects. Valid values include:\n\nASCENDING : List in ascending order.\n\nDESCENDING : List in descending order.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nDuring a previous call, the maximum number of items that can be returned is the value specified in maxResults . If there more items in the list, then a unique string called a nextToken is returned. To get the next batch of items in the list, call this operation again, adding the next token to the call. To get all of the items in the list, keep calling this operation with each subsequent next token that is returned, until no more next tokens are returned.\n\nprojects -> (list)\n\nThe list of ARNs for the build projects shared with the current Amazon Web Services account or user.\n\n(string)",
      "command_examples": "Examples\n\nTo list the shared project in AWS CodeBuild.\n\nThe following list-shared-projects example lists the CodeBuild shared projects that are available to the current account.\n\naws codebuild list-shared-projects\n\n\nOutput:\n\n{\n    \"projects\": [\n        \"arn:aws:codebuild:<region-ID>:<account-ID>:project/<shared-project-name-1>\",\n        \"arn:aws:codebuild:<region-ID>:<account-ID>:project/<shared-project-name-2>\"\n    ]\n}\n\n\nFor more information, see Working with shared projects in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "list-shared-report-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-shared-report-groups.html",
      "command_description": "Description\n\nGets a list of report groups that are shared with other Amazon Web Services accounts or users.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-shared-report-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: reportGroups",
      "command_synopsis": "Synopsis\n  list-shared-report-groups\n[--sort-order <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--sort-order <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--sort-order (string)\n\nThe order in which to list shared report groups. Valid values include:\n\nASCENDING : List in ascending order.\n\nDESCENDING : List in descending order.\n\nPossible values:\n\nASCENDING\n\nDESCENDING\n\n--sort-by (string)\n\nThe criterion to be used to list report groups shared with the current Amazon Web Services account or user. Valid values include:\n\nARN : List based on the ARN.\n\nMODIFIED_TIME : List based on when information about the shared report group was last changed.\n\nPossible values:\n\nARN\n\nMODIFIED_TIME\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nDuring a previous call, the maximum number of items that can be returned is the value specified in maxResults . If there more items in the list, then a unique string called a nextToken is returned. To get the next batch of items in the list, call this operation again, adding the next token to the call. To get all of the items in the list, keep calling this operation with each subsequent next token that is returned, until no more next tokens are returned.\n\nreportGroups -> (list)\n\nThe list of ARNs for the report groups shared with the current Amazon Web Services account or user.\n\n(string)",
      "command_examples": "Examples\n\nTo get a list of the shared report group ARNs in AWS CodeBuild.\n\nThe following list-shared-report-groups example retrieves the report group ARNs for the account in the region.\n\naws codebuild list-shared-report-groups\n\n\nOutput:\n\n{\n    \"reportGroups\": [\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/report-group-1\",\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/report-group-2\",\n        \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/report-group-3\"\n    ]\n}\n\n\nFor more information, see Working with report groups in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "list-source-credentials",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/list-source-credentials.html",
      "command_description": "Description\n\nReturns a list of SourceCredentialsInfo objects.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-source-credentials\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsourceCredentialsInfos -> (list)\n\nA list of SourceCredentialsInfo objects. Each SourceCredentialsInfo object includes the authentication type, token ARN, and type of source provider for one set of credentials.\n\n(structure)\n\nInformation about the credentials for a GitHub, GitHub Enterprise, or Bitbucket repository.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the token.\n\nserverType -> (string)\n\nThe type of source provider. The valid options are GITHUB, GITHUB_ENTERPRISE, or BITBUCKET.\n\nauthType -> (string)\n\nThe type of authentication used by the credentials. Valid options are OAUTH, BASIC_AUTH, or PERSONAL_ACCESS_TOKEN.",
      "command_examples": "Examples\n\nTo view a list of sourceCredentialsObjects\n\nThe following list-source-credentials example lists tokens for an AWS account connected to one Bitbucket account and one GitHub account. Each sourceCredentialsInfos object in the response contains connected source credentials information.\n\naws codebuild list-source-credentials\n\n\nOutput:\n\n{\n    \"sourceCredentialsInfos\": [\n        {\n            \"serverType\": \"BITBUCKET\",\n            \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:token/bitbucket\",\n            \"authType\": \"BASIC_AUTH\"\n        },\n        {\n            \"serverType\": \"GITHUB\",\n            \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:token/github\",\n            \"authType\": \"OAUTH\"\n        }\n    ]\n}\n\n\nFor more information, see Connect Source Providers with Access Tokens (CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "put-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/put-resource-policy.html",
      "command_description": "Description\n\nStores a resource policy for the ARN of a Project or ReportGroup object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-resource-policy\n--policy <value>\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy <value>",
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy (string)\n\nA JSON-formatted resource policy. For more information, see Sharing a Project and Sharing a Report Group in the CodeBuild User Guide .\n\n--resource-arn (string)\n\nThe ARN of the Project or ReportGroup resource you want to associate with a resource policy.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresourceArn -> (string)\n\nThe ARN of the Project or ReportGroup resource that is associated with a resource policy."
    },
    {
      "command_name": "retry-build",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/retry-build.html",
      "command_description": "Description\n\nRestarts a build.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  retry-build\n[--id <value>]\n[--idempotency-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--id <value>]",
        "[--idempotency-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nSpecifies the identifier of the build to restart.\n\n--idempotency-token (string)\n\nA unique, case sensitive identifier you provide to ensure the idempotency of the RetryBuild request. The token is included in the RetryBuild request and is valid for five minutes. If you repeat the RetryBuild request with the same token, but change a parameter, CodeBuild returns a parameter mismatch error.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuild -> (structure)\n\nInformation about a build.\n\nid -> (string)\n\nThe unique ID for the build.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the build.\n\nbuildNumber -> (long)\n\nThe number of the build. For each project, the buildNumber of its first build is 1 . The buildNumber of each subsequent build is incremented by 1 . If a build is deleted, the buildNumber of other builds does not change.\n\nstartTime -> (timestamp)\n\nWhen the build process started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the build process ended, expressed in Unix time format.\n\ncurrentPhase -> (string)\n\nThe current build phase.\n\nbuildStatus -> (string)\n\nThe current status of the build. Valid values include:\n\nFAILED : The build failed.\n\nFAULT : The build faulted.\n\nIN_PROGRESS : The build is still in progress.\n\nSTOPPED : The build stopped.\n\nSUCCEEDED : The build succeeded.\n\nTIMED_OUT : The build timed out.\n\nsourceVersion -> (string)\n\nAny version identifier for the version of the source code to be built. If sourceVersion is specified at the project level, then this sourceVersion (at the build level) takes precedence.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nresolvedSourceVersion -> (string)\n\nAn identifier for the version of this build’s source code.\n\nFor CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID.\n\nFor CodePipeline, the source revision provided by CodePipeline.\n\nFor Amazon S3, this does not apply.\n\nprojectName -> (string)\n\nThe name of the CodeBuild project.\n\nphases -> (list)\n\nInformation about all previous build phases that are complete and information about any current build phase that is not yet complete.\n\n(structure)\n\nInformation about a stage for a build.\n\nphaseType -> (string)\n\nThe name of the build phase. Valid values include:\n\nBUILD\n\nCore build activities typically occur in this build phase.\n\nCOMPLETED\n\nThe build has been completed.\n\nDOWNLOAD_SOURCE\n\nSource code is being downloaded in this build phase.\n\nFINALIZING\n\nThe build process is completing in this build phase.\n\nINSTALL\n\nInstallation activities typically occur in this build phase.\n\nPOST_BUILD\n\nPost-build activities typically occur in this build phase.\n\nPRE_BUILD\n\nPre-build activities typically occur in this build phase.\n\nPROVISIONING\n\nThe build environment is being set up.\n\nQUEUED\n\nThe build has been submitted and is queued behind other submitted builds.\n\nSUBMITTED\n\nThe build has been submitted.\n\nUPLOAD_ARTIFACTS\n\nBuild output artifacts are being uploaded to the output location.\n\nphaseStatus -> (string)\n\nThe current status of the build phase. Valid values include:\n\nFAILED\n\nThe build phase failed.\n\nFAULT\n\nThe build phase faulted.\n\nIN_PROGRESS\n\nThe build phase is still in progress.\n\nSTOPPED\n\nThe build phase stopped.\n\nSUCCEEDED\n\nThe build phase succeeded.\n\nTIMED_OUT\n\nThe build phase timed out.\n\nstartTime -> (timestamp)\n\nWhen the build phase started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the build phase ended, expressed in Unix time format.\n\ndurationInSeconds -> (long)\n\nHow long, in seconds, between the starting and ending times of the build’s phase.\n\ncontexts -> (list)\n\nAdditional information about a build phase, especially to help troubleshoot a failed build.\n\n(structure)\n\nAdditional information about a build phase that has an error. You can use this information for troubleshooting.\n\nstatusCode -> (string)\n\nThe status code for the context of the build phase.\n\nmessage -> (string)\n\nAn explanation of the build phase’s context. This might include a command ID and an exit code.\n\nsource -> (structure)\n\nInformation about the source code to be built.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. Each ProjectSourceVersion must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nInformation about the output artifacts for the build.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of ProjectArtifacts objects.\n\n(structure)\n\nInformation about build output artifacts.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment for this build.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe name of a service role used for this build.\n\nlogs -> (structure)\n\nInformation about the build’s logs in CloudWatch Logs.\n\ngroupName -> (string)\n\nThe name of the CloudWatch Logs group for the build logs.\n\nstreamName -> (string)\n\nThe name of the CloudWatch Logs stream for the build logs.\n\ndeepLink -> (string)\n\nThe URL to an individual build log in CloudWatch Logs.\n\ns3DeepLink -> (string)\n\nThe URL to a build log in an S3 bucket.\n\ncloudWatchLogsArn -> (string)\n\nThe ARN of CloudWatch Logs for a build project. Its format is arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName} . For more information, see Resources Defined by CloudWatch Logs .\n\ns3LogsArn -> (string)\n\nThe ARN of S3 logs for a build project. Its format is arn:${Partition}:s3:::${BucketName}/${ObjectName} . For more information, see Resources Defined by Amazon S3 .\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about S3 logs for a build project.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ntimeoutInMinutes -> (integer)\n\nHow long, in minutes, for CodeBuild to wait before timing out this build if it does not get marked as completed.\n\nqueuedTimeoutInMinutes -> (integer)\n\nThe number of minutes a build is allowed to be queued before it times out.\n\nbuildComplete -> (boolean)\n\nWhether the build is complete. True if complete; otherwise, false.\n\ninitiator -> (string)\n\nThe entity that started the build. Valid values include:\n\nIf CodePipeline started the build, the pipeline’s name (for example, codepipeline/my-demo-pipeline ).\n\nIf an IAM user started the build, the user’s name (for example, MyUserName ).\n\nIf the Jenkins plugin for CodeBuild started the build, the string CodeBuild-Jenkins-Plugin .\n\nvpcConfig -> (structure)\n\nIf your CodeBuild project accesses resources in an Amazon VPC, you provide this parameter that identifies the VPC ID and the list of security group IDs and subnet IDs. The security groups and subnets must belong to the same VPC. You must provide at least one security group and one subnet ID.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nnetworkInterface -> (structure)\n\nDescribes a network interface.\n\nsubnetId -> (string)\n\nThe ID of the subnet.\n\nnetworkInterfaceId -> (string)\n\nThe ID of the network interface.\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\nexportedEnvironmentVariables -> (list)\n\nA list of exported environment variables for this build.\n\nExported environment variables are used in conjunction with CodePipeline to export environment variables from the current build stage to subsequent stages in the pipeline. For more information, see Working with variables in the CodePipeline User Guide .\n\n(structure)\n\nContains information about an exported environment variable.\n\nExported environment variables are used in conjunction with CodePipeline to export environment variables from the current build stage to subsequent stages in the pipeline. For more information, see Working with variables in the CodePipeline User Guide .\n\nNote\n\nDuring a build, the value of a variable is available starting with the install phase. It can be updated between the start of the install phase and the end of the post_build phase. After the post_build phase ends, the value of exported variables cannot change.\n\nname -> (string)\n\nThe name of the exported environment variable.\n\nvalue -> (string)\n\nThe value assigned to the exported environment variable.\n\nreportArns -> (list)\n\nAn array of the ARNs associated with this build’s reports.\n\n(string)\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\ndebugSession -> (structure)\n\nContains information about the debug session for this build.\n\nsessionEnabled -> (boolean)\n\nSpecifies if session debugging is enabled for this build.\n\nsessionTarget -> (string)\n\nContains the identifier of the Session Manager session used for the build. To work with the paused build, you open this session to examine, control, and resume the build.\n\nbuildBatchArn -> (string)\n\nThe ARN of the batch build that this build is a member of, if applicable.",
      "command_examples": "Examples\n\nTo retry a failed build in AWS CodeBuild.\n\nThe following retry-build example restarts the specified build.\n\naws codebuild retry-build \\\n    --id <project-name>:<build-ID>\n\n\nOutput:\n\n{\n    \"build\": {\n        \"id\": \"<project-name>:<build-ID>\",\n        \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n        \"buildNumber\": 9,\n        \"startTime\": \"2020-10-21T17:51:38.161000+00:00\",\n        \"currentPhase\": \"QUEUED\",\n        \"buildStatus\": \"IN_PROGRESS\",\n        \"projectName\": \"<project-name>\",\n        \"phases\": [\n            {\n                \"phaseType\": \"SUBMITTED\",\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"startTime\": \"2020-10-21T17:51:38.161000+00:00\",\n                \"endTime\": \"2020-10-21T17:51:38.210000+00:00\",\n                \"durationInSeconds\": 0\n            },\n            {\n                \"phaseType\": \"QUEUED\",\n                \"startTime\": \"2020-10-21T17:51:38.210000+00:00\"\n            }\n        ],\n        \"source\": {\n            \"type\": \"GITHUB\",\n            \"location\": \"<GitHub-repo-URL>\",\n            \"gitCloneDepth\": 1,\n            \"gitSubmodulesConfig\": {\n                \"fetchSubmodules\": false\n            },\n            \"reportBuildStatus\": false,\n            \"insecureSsl\": false\n        },\n        \"secondarySources\": [],\n        \"secondarySourceVersions\": [],\n        \"artifacts\": {\n            \"location\": \"\"\n        },\n        \"secondaryArtifacts\": [],\n        \"cache\": {\n            \"type\": \"NO_CACHE\"\n        },\n        \"environment\": {\n            \"type\": \"LINUX_CONTAINER\",\n            \"image\": \"aws/codebuild/amazonlinux2-x86_64-standard:3.0\",\n            \"computeType\": \"BUILD_GENERAL1_SMALL\",\n            \"environmentVariables\": [],\n            \"privilegedMode\": false,\n            \"imagePullCredentialsType\": \"CODEBUILD\"\n        },\n        \"serviceRole\": \"arn:aws:iam::<account-ID>:role/service-role/<service-role-name>\",\n        \"logs\": {\n            \"deepLink\": \"https://console.aws.amazon.com/cloudwatch/home?region=<region-ID>#logEvent:group=null;stream=null\",\n            \"cloudWatchLogsArn\": \"arn:aws:logs:<region-ID>:<account-ID>:log-group:null:log-stream:null\",\n            \"cloudWatchLogs\": {\n                \"status\": \"ENABLED\"\n            },\n            \"s3Logs\": {\n                \"status\": \"DISABLED\",\n                \"encryptionDisabled\": false\n            }\n        },\n        \"timeoutInMinutes\": 60,\n        \"queuedTimeoutInMinutes\": 480,\n        \"buildComplete\": false,\n        \"initiator\": \"<username>\",\n        \"encryptionKey\": \"arn:aws:kms:<region-ID>:<account-ID>:alias/aws/s3\"\n    }\n}\n\n\nFor more information, see Batch builds in AWS CodeBuild in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "retry-build-batch",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/retry-build-batch.html",
      "command_description": "Description\n\nRestarts a failed batch build. Only batch builds that have failed can be retried.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  retry-build-batch\n[--id <value>]\n[--idempotency-token <value>]\n[--retry-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--id <value>]",
        "[--idempotency-token <value>]",
        "[--retry-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nSpecifies the identifier of the batch build to restart.\n\n--idempotency-token (string)\n\nA unique, case sensitive identifier you provide to ensure the idempotency of the RetryBuildBatch request. The token is included in the RetryBuildBatch request and is valid for five minutes. If you repeat the RetryBuildBatch request with the same token, but change a parameter, CodeBuild returns a parameter mismatch error.\n\n--retry-type (string)\n\nSpecifies the type of retry to perform.\n\nPossible values:\n\nRETRY_ALL_BUILDS\n\nRETRY_FAILED_BUILDS\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuildBatch -> (structure)\n\nContains information about a batch build.\n\nid -> (string)\n\nThe identifier of the batch build.\n\narn -> (string)\n\nThe ARN of the batch build.\n\nstartTime -> (timestamp)\n\nThe date and time that the batch build started.\n\nendTime -> (timestamp)\n\nThe date and time that the batch build ended.\n\ncurrentPhase -> (string)\n\nThe current phase of the batch build.\n\nbuildBatchStatus -> (string)\n\nThe status of the batch build.\n\nsourceVersion -> (string)\n\nThe identifier of the version of the source code to be built.\n\nresolvedSourceVersion -> (string)\n\nThe identifier of the resolved version of this batch build’s source code.\n\nFor CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID.\n\nFor CodePipeline, the source revision provided by CodePipeline.\n\nFor Amazon S3, this does not apply.\n\nprojectName -> (string)\n\nThe name of the batch build project.\n\nphases -> (list)\n\nAn array of BuildBatchPhase objects the specify the phases of the batch build.\n\n(structure)\n\nContains information about a stage for a batch build.\n\nphaseType -> (string)\n\nThe name of the batch build phase. Valid values include:\n\nCOMBINE_ARTIFACTS\n\nBuild output artifacts are being combined and uploaded to the output location.\n\nDOWNLOAD_BATCHSPEC\n\nThe batch build specification is being downloaded.\n\nFAILED\n\nOne or more of the builds failed.\n\nIN_PROGRESS\n\nThe batch build is in progress.\n\nSTOPPED\n\nThe batch build was stopped.\n\nSUBMITTED\n\nThe btach build has been submitted.\n\nSUCCEEDED\n\nThe batch build succeeded.\n\nphaseStatus -> (string)\n\nThe current status of the batch build phase. Valid values include:\n\nFAILED\n\nThe build phase failed.\n\nFAULT\n\nThe build phase faulted.\n\nIN_PROGRESS\n\nThe build phase is still in progress.\n\nSTOPPED\n\nThe build phase stopped.\n\nSUCCEEDED\n\nThe build phase succeeded.\n\nTIMED_OUT\n\nThe build phase timed out.\n\nstartTime -> (timestamp)\n\nWhen the batch build phase started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the batch build phase ended, expressed in Unix time format.\n\ndurationInSeconds -> (long)\n\nHow long, in seconds, between the starting and ending times of the batch build’s phase.\n\ncontexts -> (list)\n\nAdditional information about the batch build phase. Especially to help troubleshoot a failed batch build.\n\n(structure)\n\nAdditional information about a build phase that has an error. You can use this information for troubleshooting.\n\nstatusCode -> (string)\n\nThe status code for the context of the build phase.\n\nmessage -> (string)\n\nAn explanation of the build phase’s context. This might include a command ID and an exit code.\n\nsource -> (structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects that define the sources for the batch build.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. Each ProjectSourceVersion must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nA BuildArtifacts object the defines the build artifacts for this batch build.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of BuildArtifacts objects the define the build artifacts for this batch build.\n\n(structure)\n\nInformation about build output artifacts.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build project.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment of the build project.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe name of a service role used for builds in the batch.\n\nlogConfig -> (structure)\n\nInformation about logs for a build project. These can be logs in CloudWatch Logs, built in a specified S3 bucket, or both.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nbuildTimeoutInMinutes -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the build in a batch must be completed in.\n\nqueuedTimeoutInMinutes -> (integer)\n\nSpecifies the amount of time, in minutes, that the batch build is allowed to be queued before it times out.\n\ncomplete -> (boolean)\n\nIndicates if the batch build is complete.\n\ninitiator -> (string)\n\nThe entity that started the batch build. Valid values include:\n\nIf CodePipeline started the build, the pipeline’s name (for example, codepipeline/my-demo-pipeline ).\n\nIf an IAM user started the build, the user’s name.\n\nIf the Jenkins plugin for CodeBuild started the build, the string CodeBuild-Jenkins-Plugin .\n\nvpcConfig -> (structure)\n\nInformation about the VPC configuration that CodeBuild accesses.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the batch build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\nbuildBatchNumber -> (long)\n\nThe number of the batch build. For each project, the buildBatchNumber of its first batch build is 1 . The buildBatchNumber of each subsequent batch build is incremented by 1 . If a batch build is deleted, the buildBatchNumber of other batch builds does not change.\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for the batch build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\nbuildBatchConfig -> (structure)\n\nContains configuration information about a batch build project.\n\nserviceRole -> (string)\n\nSpecifies the service role ARN for the batch build project.\n\ncombineArtifacts -> (boolean)\n\nSpecifies if the build artifacts for the batch build should be combined into a single artifact location.\n\nrestrictions -> (structure)\n\nA BatchRestrictions object that specifies the restrictions for the batch build.\n\nmaximumBuildsAllowed -> (integer)\n\nSpecifies the maximum number of builds allowed.\n\ncomputeTypesAllowed -> (list)\n\nAn array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the CodeBuild User Guide for these values.\n\n(string)\n\ntimeoutInMins -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the batch build must be completed in.\n\nbatchReportMode -> (string)\n\nSpecifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\nREPORT_AGGREGATED_BATCH\n\n(Default) Aggregate all of the build statuses into a single status report.\n\nREPORT_INDIVIDUAL_BUILDS\n\nSend a separate status report for each individual build.\n\nbuildGroups -> (list)\n\nAn array of BuildGroup objects that define the build groups for the batch build.\n\n(structure)\n\nContains information about a batch build build group. Build groups are used to combine builds that can run in parallel, while still being able to set dependencies on other build groups.\n\nidentifier -> (string)\n\nContains the identifier of the build group.\n\ndependsOn -> (list)\n\nAn array of strings that contain the identifiers of the build groups that this build group depends on.\n\n(string)\n\nignoreFailure -> (boolean)\n\nSpecifies if failures in this build group can be ignored.\n\ncurrentBuildSummary -> (structure)\n\nA BuildSummary object that contains a summary of the current build group.\n\narn -> (string)\n\nThe batch build ARN.\n\nrequestedOn -> (timestamp)\n\nWhen the build was started, expressed in Unix time format.\n\nbuildStatus -> (string)\n\nThe status of the build group.\n\nFAILED\n\nThe build group failed.\n\nFAULT\n\nThe build group faulted.\n\nIN_PROGRESS\n\nThe build group is still in progress.\n\nSTOPPED\n\nThe build group stopped.\n\nSUCCEEDED\n\nThe build group succeeded.\n\nTIMED_OUT\n\nThe build group timed out.\n\nprimaryArtifact -> (structure)\n\nA ResolvedArtifact object that represents the primary build artifacts for the build group.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\nsecondaryArtifacts -> (list)\n\nAn array of ResolvedArtifact objects that represents the secondary build artifacts for the build group.\n\n(structure)\n\nRepresents a resolved build artifact. A resolved artifact is an artifact that is built and deployed to the destination, such as Amazon S3.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\npriorBuildSummaryList -> (list)\n\nAn array of BuildSummary objects that contain summaries of previous build groups.\n\n(structure)\n\nContains summary information about a batch build group.\n\narn -> (string)\n\nThe batch build ARN.\n\nrequestedOn -> (timestamp)\n\nWhen the build was started, expressed in Unix time format.\n\nbuildStatus -> (string)\n\nThe status of the build group.\n\nFAILED\n\nThe build group failed.\n\nFAULT\n\nThe build group faulted.\n\nIN_PROGRESS\n\nThe build group is still in progress.\n\nSTOPPED\n\nThe build group stopped.\n\nSUCCEEDED\n\nThe build group succeeded.\n\nTIMED_OUT\n\nThe build group timed out.\n\nprimaryArtifact -> (structure)\n\nA ResolvedArtifact object that represents the primary build artifacts for the build group.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\nsecondaryArtifacts -> (list)\n\nAn array of ResolvedArtifact objects that represents the secondary build artifacts for the build group.\n\n(structure)\n\nRepresents a resolved build artifact. A resolved artifact is an artifact that is built and deployed to the destination, such as Amazon S3.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\ndebugSessionEnabled -> (boolean)\n\nSpecifies if session debugging is enabled for this batch build. For more information, see Viewing a running build in Session Manager . Batch session debugging is not supported for matrix batch builds.",
      "command_examples": "Examples\n\nTo retry a failed batch build in AWS CodeBuild.\n\nThe following retry-build-batch example restarts the specified batch build.\n\naws codebuild retry-build-batch \\\n    --id <project-name>:<batch-ID>\n\n\nOutput:\n\n{\n    \"buildBatch\": {\n        \"id\": \"<project-name>:<batch-ID>\",\n        \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build-batch/<project-name>:<batch-ID>\",\n        \"startTime\": \"2020-10-21T17:26:23.099000+00:00\",\n        \"currentPhase\": \"SUBMITTED\",\n        \"buildBatchStatus\": \"IN_PROGRESS\",\n        \"resolvedSourceVersion\": \"3a9e11cb419e8fff14b03883dc4e64f6155aaa7e\",\n        \"projectName\": \"<project-name>\",\n        \"phases\": [\n            {\n                \"phaseType\": \"SUBMITTED\",\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"startTime\": \"2020-10-21T17:26:23.099000+00:00\",\n                \"endTime\": \"2020-10-21T17:26:23.457000+00:00\",\n                \"durationInSeconds\": 0\n            },\n            {\n                \"phaseType\": \"DOWNLOAD_BATCHSPEC\",\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"startTime\": \"2020-10-21T17:26:23.457000+00:00\",\n                \"endTime\": \"2020-10-21T17:26:54.902000+00:00\",\n                \"durationInSeconds\": 31\n            },\n            {\n                \"phaseType\": \"IN_PROGRESS\",\n                \"phaseStatus\": \"CLIENT_ERROR\",\n                \"startTime\": \"2020-10-21T17:26:54.902000+00:00\",\n                \"endTime\": \"2020-10-21T17:28:16.060000+00:00\",\n                \"durationInSeconds\": 81\n            },\n            {\n                \"phaseType\": \"FAILED\",\n                \"phaseStatus\": \"RETRY\",\n                \"startTime\": \"2020-10-21T17:28:16.060000+00:00\",\n                \"endTime\": \"2020-10-21T17:29:39.709000+00:00\",\n                \"durationInSeconds\": 83\n            },\n            {\n                \"phaseType\": \"SUBMITTED\",\n                \"startTime\": \"2020-10-21T17:29:39.709000+00:00\"\n            }\n        ],\n        \"source\": {\n            \"type\": \"GITHUB\",\n            \"location\": \"https://github.com/strohm-a/<project-name>-graph.git\",\n            \"gitCloneDepth\": 1,\n            \"gitSubmodulesConfig\": {\n                \"fetchSubmodules\": false\n            },\n            \"reportBuildStatus\": false,\n            \"insecureSsl\": false\n        },\n        \"secondarySources\": [],\n        \"secondarySourceVersions\": [],\n        \"artifacts\": {\n            \"location\": \"\"\n        },\n        \"secondaryArtifacts\": [],\n        \"cache\": {\n            \"type\": \"NO_CACHE\"\n        },\n        \"environment\": {\n            \"type\": \"LINUX_CONTAINER\",\n            \"image\": \"aws/codebuild/amazonlinux2-x86_64-standard:3.0\",\n            \"computeType\": \"BUILD_GENERAL1_SMALL\",\n            \"environmentVariables\": [],\n            \"privilegedMode\": false,\n            \"imagePullCredentialsType\": \"CODEBUILD\"\n        },\n        \"logConfig\": {\n            \"cloudWatchLogs\": {\n                \"status\": \"ENABLED\"\n            },\n            \"s3Logs\": {\n                \"status\": \"DISABLED\",\n                \"encryptionDisabled\": false\n            }\n        },\n        \"buildTimeoutInMinutes\": 60,\n        \"queuedTimeoutInMinutes\": 480,\n        \"complete\": false,\n        \"initiator\": \"<username>\",\n        \"encryptionKey\": \"arn:aws:kms:<region-ID>:<account-ID>:alias/aws/s3\",\n        \"buildBatchNumber\": 4,\n        \"buildBatchConfig\": {\n            \"serviceRole\": \"arn:aws:iam::<account-ID>:role/service-role/<project-name>\",\n            \"restrictions\": {\n                \"maximumBuildsAllowed\": 100\n            },\n            \"timeoutInMins\": 480\n        },\n        \"buildGroups\": [\n            {\n                \"identifier\": \"DOWNLOAD_SOURCE\",\n                \"ignoreFailure\": false,\n                \"currentBuildSummary\": {\n                    \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n                    \"requestedOn\": \"2020-10-21T17:26:23.889000+00:00\",\n                    \"buildStatus\": \"SUCCEEDED\",\n                    \"primaryArtifact\": {\n                        \"type\": \"no_artifacts\",\n                        \"identifier\": \"DOWNLOAD_SOURCE\"\n                    },\n                    \"secondaryArtifacts\": []\n                }\n            },\n            {\n                \"identifier\": \"linux_small\",\n                \"dependsOn\": [],\n                \"ignoreFailure\": false,\n                \"currentBuildSummary\": {\n                    \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n                    \"requestedOn\": \"2020-10-21T17:26:55.115000+00:00\",\n                    \"buildStatus\": \"FAILED\",\n                    \"primaryArtifact\": {\n                        \"type\": \"no_artifacts\",\n                        \"identifier\": \"linux_small\"\n                    },\n                    \"secondaryArtifacts\": []\n                }\n            },\n            {\n                \"identifier\": \"linux_medium\",\n                \"dependsOn\": [\n                    \"linux_small\"\n                ],\n                \"ignoreFailure\": false,\n                \"currentBuildSummary\": {\n                    \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n                    \"requestedOn\": \"2020-10-21T17:26:54.594000+00:00\",\n                    \"buildStatus\": \"STOPPED\"\n                }\n            },\n            {\n                \"identifier\": \"linux_large\",\n                \"dependsOn\": [\n                    \"linux_medium\"\n                ],\n                \"ignoreFailure\": false,\n                \"currentBuildSummary\": {\n                    \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n                    \"requestedOn\": \"2020-10-21T17:26:54.701000+00:00\",\n                    \"buildStatus\": \"STOPPED\"\n                }\n            }\n        ]\n    }\n}\n\n\nFor more information, see Batch builds in AWS CodeBuild in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "start-build",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/start-build.html",
      "command_description": "Description\n\nStarts running a build.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-build\n--project-name <value>\n[--secondary-sources-override <value>]\n[--secondary-sources-version-override <value>]\n[--source-version <value>]\n[--artifacts-override <value>]\n[--secondary-artifacts-override <value>]\n[--environment-variables-override <value>]\n[--source-type-override <value>]\n[--source-location-override <value>]\n[--source-auth-override <value>]\n[--git-clone-depth-override <value>]\n[--git-submodules-config-override <value>]\n[--buildspec-override <value>]\n[--insecure-ssl-override | --no-insecure-ssl-override]\n[--report-build-status-override | --no-report-build-status-override]\n[--build-status-config-override <value>]\n[--environment-type-override <value>]\n[--image-override <value>]\n[--compute-type-override <value>]\n[--certificate-override <value>]\n[--cache-override <value>]\n[--service-role-override <value>]\n[--privileged-mode-override | --no-privileged-mode-override]\n[--timeout-in-minutes-override <value>]\n[--queued-timeout-in-minutes-override <value>]\n[--encryption-key-override <value>]\n[--idempotency-token <value>]\n[--logs-config-override <value>]\n[--registry-credential-override <value>]\n[--image-pull-credentials-type-override <value>]\n[--debug-session-enabled | --no-debug-session-enabled]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--secondary-sources-override <value>]",
        "[--secondary-sources-version-override <value>]",
        "[--source-version <value>]",
        "[--artifacts-override <value>]",
        "[--secondary-artifacts-override <value>]",
        "[--environment-variables-override <value>]",
        "[--source-type-override <value>]",
        "[--source-location-override <value>]",
        "[--source-auth-override <value>]",
        "[--git-clone-depth-override <value>]",
        "[--git-submodules-config-override <value>]",
        "[--buildspec-override <value>]",
        "[--insecure-ssl-override | --no-insecure-ssl-override]",
        "[--report-build-status-override | --no-report-build-status-override]",
        "[--build-status-config-override <value>]",
        "[--environment-type-override <value>]",
        "[--image-override <value>]",
        "[--compute-type-override <value>]",
        "[--certificate-override <value>]",
        "[--cache-override <value>]",
        "[--service-role-override <value>]",
        "[--privileged-mode-override | --no-privileged-mode-override]",
        "[--timeout-in-minutes-override <value>]",
        "[--queued-timeout-in-minutes-override <value>]",
        "[--encryption-key-override <value>]",
        "[--idempotency-token <value>]",
        "[--logs-config-override <value>]",
        "[--registry-credential-override <value>]",
        "[--image-pull-credentials-type-override <value>]",
        "[--debug-session-enabled | --no-debug-session-enabled]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the CodeBuild build project to start running a build.\n\n--secondary-sources-override (list)\n\nAn array of ProjectSource objects.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nShorthand Syntax:\n\ntype=string,location=string,gitCloneDepth=integer,gitSubmodulesConfig={fetchSubmodules=boolean},buildspec=string,auth={type=string,resource=string},reportBuildStatus=boolean,buildStatusConfig={context=string,targetUrl=string},insecureSsl=boolean,sourceIdentifier=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"type\": \"CODECOMMIT\"|\"CODEPIPELINE\"|\"GITHUB\"|\"S3\"|\"BITBUCKET\"|\"GITHUB_ENTERPRISE\"|\"NO_SOURCE\",\n    \"location\": \"string\",\n    \"gitCloneDepth\": integer,\n    \"gitSubmodulesConfig\": {\n      \"fetchSubmodules\": true|false\n    },\n    \"buildspec\": \"string\",\n    \"auth\": {\n      \"type\": \"OAUTH\",\n      \"resource\": \"string\"\n    },\n    \"reportBuildStatus\": true|false,\n    \"buildStatusConfig\": {\n      \"context\": \"string\",\n      \"targetUrl\": \"string\"\n    },\n    \"insecureSsl\": true|false,\n    \"sourceIdentifier\": \"string\"\n  }\n  ...\n]\n\n\n--secondary-sources-version-override (list)\n\nAn array of ProjectSourceVersion objects that specify one or more versions of the project’s secondary sources to be used for this build only.\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nShorthand Syntax:\n\nsourceIdentifier=string,sourceVersion=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"sourceIdentifier\": \"string\",\n    \"sourceVersion\": \"string\"\n  }\n  ...\n]\n\n\n--source-version (string)\n\nThe version of the build input to be built, for this build only. If not specified, the latest version is used. If specified, the contents depends on the source provider:\n\nCodeCommit\n\nThe commit ID, branch, or Git tag to use.\n\nGitHub\n\nThe commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nBitbucket\n\nThe commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nAmazon S3\n\nThe version ID of the object that represents the build input ZIP file to use.\n\nIf sourceVersion is specified at the project level, then this sourceVersion (at the build level) takes precedence.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\n--artifacts-override (structure)\n\nBuild output artifact settings that override, for this build only, the latest ones already defined in the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ntype=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"CODEPIPELINE\"|\"S3\"|\"NO_ARTIFACTS\",\n  \"location\": \"string\",\n  \"path\": \"string\",\n  \"namespaceType\": \"NONE\"|\"BUILD_ID\",\n  \"name\": \"string\",\n  \"packaging\": \"NONE\"|\"ZIP\",\n  \"overrideArtifactName\": true|false,\n  \"encryptionDisabled\": true|false,\n  \"artifactIdentifier\": \"string\",\n  \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n}\n\n\n--secondary-artifacts-override (list)\n\nAn array of ProjectArtifacts objects.\n\n(structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ntype=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"type\": \"CODEPIPELINE\"|\"S3\"|\"NO_ARTIFACTS\",\n    \"location\": \"string\",\n    \"path\": \"string\",\n    \"namespaceType\": \"NONE\"|\"BUILD_ID\",\n    \"name\": \"string\",\n    \"packaging\": \"NONE\"|\"ZIP\",\n    \"overrideArtifactName\": true|false,\n    \"encryptionDisabled\": true|false,\n    \"artifactIdentifier\": \"string\",\n    \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n  }\n  ...\n]\n\n\n--environment-variables-override (list)\n\nA set of environment variables that overrides, for this build only, the latest ones already defined in the build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nShorthand Syntax:\n\nname=string,value=string,type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"value\": \"string\",\n    \"type\": \"PLAINTEXT\"|\"PARAMETER_STORE\"|\"SECRETS_MANAGER\"\n  }\n  ...\n]\n\n\n--source-type-override (string)\n\nA source input type, for this build, that overrides the source input defined in the build project.\n\nPossible values:\n\nCODECOMMIT\n\nCODEPIPELINE\n\nGITHUB\n\nS3\n\nBITBUCKET\n\nGITHUB_ENTERPRISE\n\nNO_SOURCE\n\n--source-location-override (string)\n\nA location that overrides, for this build, the source location for the one defined in the build project.\n\n--source-auth-override (structure)\n\nAn authorization type for this build that overrides the one defined in the build project. This override applies only if the build project’s source is BitBucket or GitHub.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nShorthand Syntax:\n\ntype=string,resource=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"OAUTH\",\n  \"resource\": \"string\"\n}\n\n\n--git-clone-depth-override (integer)\n\nThe user-defined depth of history, with a minimum value of 0, that overrides, for this build only, any previous depth of history defined in the build project.\n\n--git-submodules-config-override (structure)\n\nInformation about the Git submodules configuration for this build of an CodeBuild build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nShorthand Syntax:\n\nfetchSubmodules=boolean\n\n\nJSON Syntax:\n\n{\n  \"fetchSubmodules\": true|false\n}\n\n\n--buildspec-override (string)\n\nA buildspec file declaration that overrides, for this build only, the latest one already defined in the build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\n--insecure-ssl-override | --no-insecure-ssl-override (boolean)\n\nEnable this flag to override the insecure SSL setting that is specified in the build project. The insecure SSL setting determines whether to ignore SSL warnings while connecting to the project source code. This override applies only if the build’s source is GitHub Enterprise.\n\n--report-build-status-override | --no-report-build-status-override (boolean)\n\nSet to true to report to your source provider the status of a build’s start and completion. If you use this option with a source provider other than GitHub, GitHub Enterprise, or Bitbucket, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nNote\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\n--build-status-config-override (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\nShorthand Syntax:\n\ncontext=string,targetUrl=string\n\n\nJSON Syntax:\n\n{\n  \"context\": \"string\",\n  \"targetUrl\": \"string\"\n}\n\n\n--environment-type-override (string)\n\nA container type for this build that overrides the one specified in the build project.\n\nPossible values:\n\nWINDOWS_CONTAINER\n\nLINUX_CONTAINER\n\nLINUX_GPU_CONTAINER\n\nARM_CONTAINER\n\nWINDOWS_SERVER_2019_CONTAINER\n\n--image-override (string)\n\nThe name of an image for this build that overrides the one specified in the build project.\n\n--compute-type-override (string)\n\nThe name of a compute type for this build that overrides the one specified in the build project.\n\nPossible values:\n\nBUILD_GENERAL1_SMALL\n\nBUILD_GENERAL1_MEDIUM\n\nBUILD_GENERAL1_LARGE\n\nBUILD_GENERAL1_2XLARGE\n\n--certificate-override (string)\n\nThe name of a certificate for this build that overrides the one specified in the build project.\n\n--cache-override (structure)\n\nA ProjectCache object specified for this build that overrides the one defined in the build project.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nShorthand Syntax:\n\ntype=string,location=string,modes=string,string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"NO_CACHE\"|\"S3\"|\"LOCAL\",\n  \"location\": \"string\",\n  \"modes\": [\"LOCAL_DOCKER_LAYER_CACHE\"|\"LOCAL_SOURCE_CACHE\"|\"LOCAL_CUSTOM_CACHE\", ...]\n}\n\n\n--service-role-override (string)\n\nThe name of a service role for this build that overrides the one specified in the build project.\n\n--privileged-mode-override | --no-privileged-mode-override (boolean)\n\nEnable this flag to override privileged mode in the build project.\n\n--timeout-in-minutes-override (integer)\n\nThe number of build timeout minutes, from 5 to 480 (8 hours), that overrides, for this build only, the latest setting already defined in the build project.\n\n--queued-timeout-in-minutes-override (integer)\n\nThe number of minutes a build is allowed to be queued before it times out.\n\n--encryption-key-override (string)\n\nThe Key Management Service customer master key (CMK) that overrides the one specified in the build project. The CMK key encrypts the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\n--idempotency-token (string)\n\nA unique, case sensitive identifier you provide to ensure the idempotency of the StartBuild request. The token is included in the StartBuild request and is valid for 5 minutes. If you repeat the StartBuild request with the same token, but change a parameter, CodeBuild returns a parameter mismatch error.\n\n--logs-config-override (structure)\n\nLog settings for this build that override the log settings defined in the build project.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ncloudWatchLogs={status=string,groupName=string,streamName=string},s3Logs={status=string,location=string,encryptionDisabled=boolean,bucketOwnerAccess=string}\n\n\nJSON Syntax:\n\n{\n  \"cloudWatchLogs\": {\n    \"status\": \"ENABLED\"|\"DISABLED\",\n    \"groupName\": \"string\",\n    \"streamName\": \"string\"\n  },\n  \"s3Logs\": {\n    \"status\": \"ENABLED\"|\"DISABLED\",\n    \"location\": \"string\",\n    \"encryptionDisabled\": true|false,\n    \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n  }\n}\n\n\n--registry-credential-override (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nShorthand Syntax:\n\ncredential=string,credentialProvider=string\n\n\nJSON Syntax:\n\n{\n  \"credential\": \"string\",\n  \"credentialProvider\": \"SECRETS_MANAGER\"\n}\n\n\n--image-pull-credentials-type-override (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD\n\nSpecifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild’s service principal.\n\nSERVICE_ROLE\n\nSpecifies that CodeBuild uses your build project’s service role.\n\nWhen using a cross-account or private registry image, you must use SERVICE_ROLE credentials. When using an CodeBuild curated image, you must use CODEBUILD credentials.\n\nPossible values:\n\nCODEBUILD\n\nSERVICE_ROLE\n\n--debug-session-enabled | --no-debug-session-enabled (boolean)\n\nSpecifies if session debugging is enabled for this build. For more information, see Viewing a running build in Session Manager .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuild -> (structure)\n\nInformation about the build to be run.\n\nid -> (string)\n\nThe unique ID for the build.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the build.\n\nbuildNumber -> (long)\n\nThe number of the build. For each project, the buildNumber of its first build is 1 . The buildNumber of each subsequent build is incremented by 1 . If a build is deleted, the buildNumber of other builds does not change.\n\nstartTime -> (timestamp)\n\nWhen the build process started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the build process ended, expressed in Unix time format.\n\ncurrentPhase -> (string)\n\nThe current build phase.\n\nbuildStatus -> (string)\n\nThe current status of the build. Valid values include:\n\nFAILED : The build failed.\n\nFAULT : The build faulted.\n\nIN_PROGRESS : The build is still in progress.\n\nSTOPPED : The build stopped.\n\nSUCCEEDED : The build succeeded.\n\nTIMED_OUT : The build timed out.\n\nsourceVersion -> (string)\n\nAny version identifier for the version of the source code to be built. If sourceVersion is specified at the project level, then this sourceVersion (at the build level) takes precedence.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nresolvedSourceVersion -> (string)\n\nAn identifier for the version of this build’s source code.\n\nFor CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID.\n\nFor CodePipeline, the source revision provided by CodePipeline.\n\nFor Amazon S3, this does not apply.\n\nprojectName -> (string)\n\nThe name of the CodeBuild project.\n\nphases -> (list)\n\nInformation about all previous build phases that are complete and information about any current build phase that is not yet complete.\n\n(structure)\n\nInformation about a stage for a build.\n\nphaseType -> (string)\n\nThe name of the build phase. Valid values include:\n\nBUILD\n\nCore build activities typically occur in this build phase.\n\nCOMPLETED\n\nThe build has been completed.\n\nDOWNLOAD_SOURCE\n\nSource code is being downloaded in this build phase.\n\nFINALIZING\n\nThe build process is completing in this build phase.\n\nINSTALL\n\nInstallation activities typically occur in this build phase.\n\nPOST_BUILD\n\nPost-build activities typically occur in this build phase.\n\nPRE_BUILD\n\nPre-build activities typically occur in this build phase.\n\nPROVISIONING\n\nThe build environment is being set up.\n\nQUEUED\n\nThe build has been submitted and is queued behind other submitted builds.\n\nSUBMITTED\n\nThe build has been submitted.\n\nUPLOAD_ARTIFACTS\n\nBuild output artifacts are being uploaded to the output location.\n\nphaseStatus -> (string)\n\nThe current status of the build phase. Valid values include:\n\nFAILED\n\nThe build phase failed.\n\nFAULT\n\nThe build phase faulted.\n\nIN_PROGRESS\n\nThe build phase is still in progress.\n\nSTOPPED\n\nThe build phase stopped.\n\nSUCCEEDED\n\nThe build phase succeeded.\n\nTIMED_OUT\n\nThe build phase timed out.\n\nstartTime -> (timestamp)\n\nWhen the build phase started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the build phase ended, expressed in Unix time format.\n\ndurationInSeconds -> (long)\n\nHow long, in seconds, between the starting and ending times of the build’s phase.\n\ncontexts -> (list)\n\nAdditional information about a build phase, especially to help troubleshoot a failed build.\n\n(structure)\n\nAdditional information about a build phase that has an error. You can use this information for troubleshooting.\n\nstatusCode -> (string)\n\nThe status code for the context of the build phase.\n\nmessage -> (string)\n\nAn explanation of the build phase’s context. This might include a command ID and an exit code.\n\nsource -> (structure)\n\nInformation about the source code to be built.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. Each ProjectSourceVersion must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nInformation about the output artifacts for the build.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of ProjectArtifacts objects.\n\n(structure)\n\nInformation about build output artifacts.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment for this build.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe name of a service role used for this build.\n\nlogs -> (structure)\n\nInformation about the build’s logs in CloudWatch Logs.\n\ngroupName -> (string)\n\nThe name of the CloudWatch Logs group for the build logs.\n\nstreamName -> (string)\n\nThe name of the CloudWatch Logs stream for the build logs.\n\ndeepLink -> (string)\n\nThe URL to an individual build log in CloudWatch Logs.\n\ns3DeepLink -> (string)\n\nThe URL to a build log in an S3 bucket.\n\ncloudWatchLogsArn -> (string)\n\nThe ARN of CloudWatch Logs for a build project. Its format is arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName} . For more information, see Resources Defined by CloudWatch Logs .\n\ns3LogsArn -> (string)\n\nThe ARN of S3 logs for a build project. Its format is arn:${Partition}:s3:::${BucketName}/${ObjectName} . For more information, see Resources Defined by Amazon S3 .\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about S3 logs for a build project.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ntimeoutInMinutes -> (integer)\n\nHow long, in minutes, for CodeBuild to wait before timing out this build if it does not get marked as completed.\n\nqueuedTimeoutInMinutes -> (integer)\n\nThe number of minutes a build is allowed to be queued before it times out.\n\nbuildComplete -> (boolean)\n\nWhether the build is complete. True if complete; otherwise, false.\n\ninitiator -> (string)\n\nThe entity that started the build. Valid values include:\n\nIf CodePipeline started the build, the pipeline’s name (for example, codepipeline/my-demo-pipeline ).\n\nIf an IAM user started the build, the user’s name (for example, MyUserName ).\n\nIf the Jenkins plugin for CodeBuild started the build, the string CodeBuild-Jenkins-Plugin .\n\nvpcConfig -> (structure)\n\nIf your CodeBuild project accesses resources in an Amazon VPC, you provide this parameter that identifies the VPC ID and the list of security group IDs and subnet IDs. The security groups and subnets must belong to the same VPC. You must provide at least one security group and one subnet ID.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nnetworkInterface -> (structure)\n\nDescribes a network interface.\n\nsubnetId -> (string)\n\nThe ID of the subnet.\n\nnetworkInterfaceId -> (string)\n\nThe ID of the network interface.\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\nexportedEnvironmentVariables -> (list)\n\nA list of exported environment variables for this build.\n\nExported environment variables are used in conjunction with CodePipeline to export environment variables from the current build stage to subsequent stages in the pipeline. For more information, see Working with variables in the CodePipeline User Guide .\n\n(structure)\n\nContains information about an exported environment variable.\n\nExported environment variables are used in conjunction with CodePipeline to export environment variables from the current build stage to subsequent stages in the pipeline. For more information, see Working with variables in the CodePipeline User Guide .\n\nNote\n\nDuring a build, the value of a variable is available starting with the install phase. It can be updated between the start of the install phase and the end of the post_build phase. After the post_build phase ends, the value of exported variables cannot change.\n\nname -> (string)\n\nThe name of the exported environment variable.\n\nvalue -> (string)\n\nThe value assigned to the exported environment variable.\n\nreportArns -> (list)\n\nAn array of the ARNs associated with this build’s reports.\n\n(string)\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\ndebugSession -> (structure)\n\nContains information about the debug session for this build.\n\nsessionEnabled -> (boolean)\n\nSpecifies if session debugging is enabled for this build.\n\nsessionTarget -> (string)\n\nContains the identifier of the Session Manager session used for the build. To work with the paused build, you open this session to examine, control, and resume the build.\n\nbuildBatchArn -> (string)\n\nThe ARN of the batch build that this build is a member of, if applicable.",
      "command_examples": "Examples\n\nTo start running a build of an AWS CodeBuild build project.\n\nThe following start-build example starts a build for the specified CodeBuild project. The build overrides both the project’s setting for the number of minutes the build is allowed to be queued before it times out and the project’s artifact settings.\n\naws codebuild start-build \\\n    --project-name \"my-demo-project\" \\\n    --queued-timeout-in-minutes-override 5 \\\n    --artifacts-override {\"\\\"type\\\": \\\"S3\\\",\\\"location\\\": \\\"arn:aws:s3:::artifacts-override\\\",\\\"overrideArtifactName\\\":true\"}\n\n\nOutput:\n\n{\n    \"build\": {\n        \"serviceRole\": \"arn:aws:iam::123456789012:role/service-role/my-codebuild-service-role\",\n        \"buildStatus\": \"IN_PROGRESS\",\n        \"buildComplete\": false,\n        \"projectName\": \"my-demo-project\",\n        \"timeoutInMinutes\": 60,\n        \"source\": {\n            \"insecureSsl\": false,\n            \"type\": \"S3\",\n            \"location\": \"codebuild-us-west-2-123456789012-input-bucket/my-source.zip\"\n        },\n        \"queuedTimeoutInMinutes\": 5,\n        \"encryptionKey\": \"arn:aws:kms:us-west-2:123456789012:alias/aws/s3\",\n        \"currentPhase\": \"QUEUED\",\n        \"startTime\": 1556905683.568,\n        \"environment\": {\n            \"computeType\": \"BUILD_GENERAL1_MEDIUM\",\n            \"environmentVariables\": [],\n            \"type\": \"LINUX_CONTAINER\",\n            \"privilegedMode\": false,\n            \"image\": \"aws/codebuild/standard:1.0\",\n            \"imagePullCredentialsType\": \"CODEBUILD\"\n        },\n        \"phases\": [\n            {\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"startTime\": 1556905683.568,\n                \"phaseType\": \"SUBMITTED\",\n                \"durationInSeconds\": 0,\n                \"endTime\": 1556905684.524\n            },\n            {\n                \"startTime\": 1556905684.524,\n                \"phaseType\": \"QUEUED\"\n            }\n        ],\n        \"logs\": {\n            \"deepLink\": \"https://console.aws.amazon.com/cloudwatch/home?region=us-west-2#logEvent:group=null;stream=null\"\n        },\n        \"artifacts\": {\n            \"encryptionDisabled\": false,\n            \"location\": \"arn:aws:s3:::artifacts-override/my-demo-project\",\n            \"overrideArtifactName\": true\n        },\n        \"cache\": {\n            \"type\": \"NO_CACHE\"\n        },\n        \"id\": \"my-demo-project::12345678-a1b2-c3d4-e5f6-11111EXAMPLE\",\n        \"initiator\": \"my-aws-account-name\",\n        \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:build/my-demo-project::12345678-a1b2-c3d4-e5f6-11111EXAMPLE\"\n    }\n}\n\n\nFor more information, see Run a Build (AWS CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "start-build-batch",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/start-build-batch.html",
      "command_description": "Description\n\nStarts a batch build for a project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-build-batch\n--project-name <value>\n[--secondary-sources-override <value>]\n[--secondary-sources-version-override <value>]\n[--source-version <value>]\n[--artifacts-override <value>]\n[--secondary-artifacts-override <value>]\n[--environment-variables-override <value>]\n[--source-type-override <value>]\n[--source-location-override <value>]\n[--source-auth-override <value>]\n[--git-clone-depth-override <value>]\n[--git-submodules-config-override <value>]\n[--buildspec-override <value>]\n[--insecure-ssl-override | --no-insecure-ssl-override]\n[--report-build-batch-status-override | --no-report-build-batch-status-override]\n[--environment-type-override <value>]\n[--image-override <value>]\n[--compute-type-override <value>]\n[--certificate-override <value>]\n[--cache-override <value>]\n[--service-role-override <value>]\n[--privileged-mode-override | --no-privileged-mode-override]\n[--build-timeout-in-minutes-override <value>]\n[--queued-timeout-in-minutes-override <value>]\n[--encryption-key-override <value>]\n[--idempotency-token <value>]\n[--logs-config-override <value>]\n[--registry-credential-override <value>]\n[--image-pull-credentials-type-override <value>]\n[--build-batch-config-override <value>]\n[--debug-session-enabled | --no-debug-session-enabled]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--secondary-sources-override <value>]",
        "[--secondary-sources-version-override <value>]",
        "[--source-version <value>]",
        "[--artifacts-override <value>]",
        "[--secondary-artifacts-override <value>]",
        "[--environment-variables-override <value>]",
        "[--source-type-override <value>]",
        "[--source-location-override <value>]",
        "[--source-auth-override <value>]",
        "[--git-clone-depth-override <value>]",
        "[--git-submodules-config-override <value>]",
        "[--buildspec-override <value>]",
        "[--insecure-ssl-override | --no-insecure-ssl-override]",
        "[--report-build-batch-status-override | --no-report-build-batch-status-override]",
        "[--environment-type-override <value>]",
        "[--image-override <value>]",
        "[--compute-type-override <value>]",
        "[--certificate-override <value>]",
        "[--cache-override <value>]",
        "[--service-role-override <value>]",
        "[--privileged-mode-override | --no-privileged-mode-override]",
        "[--build-timeout-in-minutes-override <value>]",
        "[--queued-timeout-in-minutes-override <value>]",
        "[--encryption-key-override <value>]",
        "[--idempotency-token <value>]",
        "[--logs-config-override <value>]",
        "[--registry-credential-override <value>]",
        "[--image-pull-credentials-type-override <value>]",
        "[--build-batch-config-override <value>]",
        "[--debug-session-enabled | --no-debug-session-enabled]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the project.\n\n--secondary-sources-override (list)\n\nAn array of ProjectSource objects that override the secondary sources defined in the batch build project.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nShorthand Syntax:\n\ntype=string,location=string,gitCloneDepth=integer,gitSubmodulesConfig={fetchSubmodules=boolean},buildspec=string,auth={type=string,resource=string},reportBuildStatus=boolean,buildStatusConfig={context=string,targetUrl=string},insecureSsl=boolean,sourceIdentifier=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"type\": \"CODECOMMIT\"|\"CODEPIPELINE\"|\"GITHUB\"|\"S3\"|\"BITBUCKET\"|\"GITHUB_ENTERPRISE\"|\"NO_SOURCE\",\n    \"location\": \"string\",\n    \"gitCloneDepth\": integer,\n    \"gitSubmodulesConfig\": {\n      \"fetchSubmodules\": true|false\n    },\n    \"buildspec\": \"string\",\n    \"auth\": {\n      \"type\": \"OAUTH\",\n      \"resource\": \"string\"\n    },\n    \"reportBuildStatus\": true|false,\n    \"buildStatusConfig\": {\n      \"context\": \"string\",\n      \"targetUrl\": \"string\"\n    },\n    \"insecureSsl\": true|false,\n    \"sourceIdentifier\": \"string\"\n  }\n  ...\n]\n\n\n--secondary-sources-version-override (list)\n\nAn array of ProjectSourceVersion objects that override the secondary source versions in the batch build project.\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nShorthand Syntax:\n\nsourceIdentifier=string,sourceVersion=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"sourceIdentifier\": \"string\",\n    \"sourceVersion\": \"string\"\n  }\n  ...\n]\n\n\n--source-version (string)\n\nThe version of the batch build input to be built, for this build only. If not specified, the latest version is used. If specified, the contents depends on the source provider:\n\nCodeCommit\n\nThe commit ID, branch, or Git tag to use.\n\nGitHub\n\nThe commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nBitbucket\n\nThe commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nAmazon S3\n\nThe version ID of the object that represents the build input ZIP file to use.\n\nIf sourceVersion is specified at the project level, then this sourceVersion (at the build level) takes precedence.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\n--artifacts-override (structure)\n\nAn array of ProjectArtifacts objects that contains information about the build output artifact overrides for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ntype=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"CODEPIPELINE\"|\"S3\"|\"NO_ARTIFACTS\",\n  \"location\": \"string\",\n  \"path\": \"string\",\n  \"namespaceType\": \"NONE\"|\"BUILD_ID\",\n  \"name\": \"string\",\n  \"packaging\": \"NONE\"|\"ZIP\",\n  \"overrideArtifactName\": true|false,\n  \"encryptionDisabled\": true|false,\n  \"artifactIdentifier\": \"string\",\n  \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n}\n\n\n--secondary-artifacts-override (list)\n\nAn array of ProjectArtifacts objects that override the secondary artifacts defined in the batch build project.\n\n(structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ntype=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"type\": \"CODEPIPELINE\"|\"S3\"|\"NO_ARTIFACTS\",\n    \"location\": \"string\",\n    \"path\": \"string\",\n    \"namespaceType\": \"NONE\"|\"BUILD_ID\",\n    \"name\": \"string\",\n    \"packaging\": \"NONE\"|\"ZIP\",\n    \"overrideArtifactName\": true|false,\n    \"encryptionDisabled\": true|false,\n    \"artifactIdentifier\": \"string\",\n    \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n  }\n  ...\n]\n\n\n--environment-variables-override (list)\n\nAn array of EnvironmentVariable objects that override, or add to, the environment variables defined in the batch build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nShorthand Syntax:\n\nname=string,value=string,type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"value\": \"string\",\n    \"type\": \"PLAINTEXT\"|\"PARAMETER_STORE\"|\"SECRETS_MANAGER\"\n  }\n  ...\n]\n\n\n--source-type-override (string)\n\nThe source input type that overrides the source input defined in the batch build project.\n\nPossible values:\n\nCODECOMMIT\n\nCODEPIPELINE\n\nGITHUB\n\nS3\n\nBITBUCKET\n\nGITHUB_ENTERPRISE\n\nNO_SOURCE\n\n--source-location-override (string)\n\nA location that overrides, for this batch build, the source location defined in the batch build project.\n\n--source-auth-override (structure)\n\nA SourceAuth object that overrides the one defined in the batch build project. This override applies only if the build project’s source is BitBucket or GitHub.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nShorthand Syntax:\n\ntype=string,resource=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"OAUTH\",\n  \"resource\": \"string\"\n}\n\n\n--git-clone-depth-override (integer)\n\nThe user-defined depth of history, with a minimum value of 0, that overrides, for this batch build only, any previous depth of history defined in the batch build project.\n\n--git-submodules-config-override (structure)\n\nA GitSubmodulesConfig object that overrides the Git submodules configuration for this batch build.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nShorthand Syntax:\n\nfetchSubmodules=boolean\n\n\nJSON Syntax:\n\n{\n  \"fetchSubmodules\": true|false\n}\n\n\n--buildspec-override (string)\n\nA buildspec file declaration that overrides, for this build only, the latest one already defined in the build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\n--insecure-ssl-override | --no-insecure-ssl-override (boolean)\n\nEnable this flag to override the insecure SSL setting that is specified in the batch build project. The insecure SSL setting determines whether to ignore SSL warnings while connecting to the project source code. This override applies only if the build’s source is GitHub Enterprise.\n\n--report-build-batch-status-override | --no-report-build-batch-status-override (boolean)\n\nSet to true to report to your source provider the status of a batch build’s start and completion. If you use this option with a source provider other than GitHub, GitHub Enterprise, or Bitbucket, an invalidInputException is thrown.\n\nNote\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\n--environment-type-override (string)\n\nA container type for this batch build that overrides the one specified in the batch build project.\n\nPossible values:\n\nWINDOWS_CONTAINER\n\nLINUX_CONTAINER\n\nLINUX_GPU_CONTAINER\n\nARM_CONTAINER\n\nWINDOWS_SERVER_2019_CONTAINER\n\n--image-override (string)\n\nThe name of an image for this batch build that overrides the one specified in the batch build project.\n\n--compute-type-override (string)\n\nThe name of a compute type for this batch build that overrides the one specified in the batch build project.\n\nPossible values:\n\nBUILD_GENERAL1_SMALL\n\nBUILD_GENERAL1_MEDIUM\n\nBUILD_GENERAL1_LARGE\n\nBUILD_GENERAL1_2XLARGE\n\n--certificate-override (string)\n\nThe name of a certificate for this batch build that overrides the one specified in the batch build project.\n\n--cache-override (structure)\n\nA ProjectCache object that specifies cache overrides.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nShorthand Syntax:\n\ntype=string,location=string,modes=string,string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"NO_CACHE\"|\"S3\"|\"LOCAL\",\n  \"location\": \"string\",\n  \"modes\": [\"LOCAL_DOCKER_LAYER_CACHE\"|\"LOCAL_SOURCE_CACHE\"|\"LOCAL_CUSTOM_CACHE\", ...]\n}\n\n\n--service-role-override (string)\n\nThe name of a service role for this batch build that overrides the one specified in the batch build project.\n\n--privileged-mode-override | --no-privileged-mode-override (boolean)\n\nEnable this flag to override privileged mode in the batch build project.\n\n--build-timeout-in-minutes-override (integer)\n\nOverrides the build timeout specified in the batch build project.\n\n--queued-timeout-in-minutes-override (integer)\n\nThe number of minutes a batch build is allowed to be queued before it times out.\n\n--encryption-key-override (string)\n\nThe Key Management Service customer master key (CMK) that overrides the one specified in the batch build project. The CMK key encrypts the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\n--idempotency-token (string)\n\nA unique, case sensitive identifier you provide to ensure the idempotency of the StartBuildBatch request. The token is included in the StartBuildBatch request and is valid for five minutes. If you repeat the StartBuildBatch request with the same token, but change a parameter, CodeBuild returns a parameter mismatch error.\n\n--logs-config-override (structure)\n\nA LogsConfig object that override the log settings defined in the batch build project.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ncloudWatchLogs={status=string,groupName=string,streamName=string},s3Logs={status=string,location=string,encryptionDisabled=boolean,bucketOwnerAccess=string}\n\n\nJSON Syntax:\n\n{\n  \"cloudWatchLogs\": {\n    \"status\": \"ENABLED\"|\"DISABLED\",\n    \"groupName\": \"string\",\n    \"streamName\": \"string\"\n  },\n  \"s3Logs\": {\n    \"status\": \"ENABLED\"|\"DISABLED\",\n    \"location\": \"string\",\n    \"encryptionDisabled\": true|false,\n    \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n  }\n}\n\n\n--registry-credential-override (structure)\n\nA RegistryCredential object that overrides credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nShorthand Syntax:\n\ncredential=string,credentialProvider=string\n\n\nJSON Syntax:\n\n{\n  \"credential\": \"string\",\n  \"credentialProvider\": \"SECRETS_MANAGER\"\n}\n\n\n--image-pull-credentials-type-override (string)\n\nThe type of credentials CodeBuild uses to pull images in your batch build. There are two valid values:\n\nCODEBUILD\n\nSpecifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild’s service principal.\n\nSERVICE_ROLE\n\nSpecifies that CodeBuild uses your build project’s service role.\n\nWhen using a cross-account or private registry image, you must use SERVICE_ROLE credentials. When using an CodeBuild curated image, you must use CODEBUILD credentials.\n\nPossible values:\n\nCODEBUILD\n\nSERVICE_ROLE\n\n--build-batch-config-override (structure)\n\nA BuildBatchConfigOverride object that contains batch build configuration overrides.\n\nserviceRole -> (string)\n\nSpecifies the service role ARN for the batch build project.\n\ncombineArtifacts -> (boolean)\n\nSpecifies if the build artifacts for the batch build should be combined into a single artifact location.\n\nrestrictions -> (structure)\n\nA BatchRestrictions object that specifies the restrictions for the batch build.\n\nmaximumBuildsAllowed -> (integer)\n\nSpecifies the maximum number of builds allowed.\n\ncomputeTypesAllowed -> (list)\n\nAn array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the CodeBuild User Guide for these values.\n\n(string)\n\ntimeoutInMins -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the batch build must be completed in.\n\nbatchReportMode -> (string)\n\nSpecifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\nREPORT_AGGREGATED_BATCH\n\n(Default) Aggregate all of the build statuses into a single status report.\n\nREPORT_INDIVIDUAL_BUILDS\n\nSend a separate status report for each individual build.\n\nShorthand Syntax:\n\nserviceRole=string,combineArtifacts=boolean,restrictions={maximumBuildsAllowed=integer,computeTypesAllowed=[string,string]},timeoutInMins=integer,batchReportMode=string\n\n\nJSON Syntax:\n\n{\n  \"serviceRole\": \"string\",\n  \"combineArtifacts\": true|false,\n  \"restrictions\": {\n    \"maximumBuildsAllowed\": integer,\n    \"computeTypesAllowed\": [\"string\", ...]\n  },\n  \"timeoutInMins\": integer,\n  \"batchReportMode\": \"REPORT_INDIVIDUAL_BUILDS\"|\"REPORT_AGGREGATED_BATCH\"\n}\n\n\n--debug-session-enabled | --no-debug-session-enabled (boolean)\n\nSpecifies if session debugging is enabled for this batch build. For more information, see Viewing a running build in Session Manager . Batch session debugging is not supported for matrix batch builds.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuildBatch -> (structure)\n\nA BuildBatch object that contains information about the batch build.\n\nid -> (string)\n\nThe identifier of the batch build.\n\narn -> (string)\n\nThe ARN of the batch build.\n\nstartTime -> (timestamp)\n\nThe date and time that the batch build started.\n\nendTime -> (timestamp)\n\nThe date and time that the batch build ended.\n\ncurrentPhase -> (string)\n\nThe current phase of the batch build.\n\nbuildBatchStatus -> (string)\n\nThe status of the batch build.\n\nsourceVersion -> (string)\n\nThe identifier of the version of the source code to be built.\n\nresolvedSourceVersion -> (string)\n\nThe identifier of the resolved version of this batch build’s source code.\n\nFor CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID.\n\nFor CodePipeline, the source revision provided by CodePipeline.\n\nFor Amazon S3, this does not apply.\n\nprojectName -> (string)\n\nThe name of the batch build project.\n\nphases -> (list)\n\nAn array of BuildBatchPhase objects the specify the phases of the batch build.\n\n(structure)\n\nContains information about a stage for a batch build.\n\nphaseType -> (string)\n\nThe name of the batch build phase. Valid values include:\n\nCOMBINE_ARTIFACTS\n\nBuild output artifacts are being combined and uploaded to the output location.\n\nDOWNLOAD_BATCHSPEC\n\nThe batch build specification is being downloaded.\n\nFAILED\n\nOne or more of the builds failed.\n\nIN_PROGRESS\n\nThe batch build is in progress.\n\nSTOPPED\n\nThe batch build was stopped.\n\nSUBMITTED\n\nThe btach build has been submitted.\n\nSUCCEEDED\n\nThe batch build succeeded.\n\nphaseStatus -> (string)\n\nThe current status of the batch build phase. Valid values include:\n\nFAILED\n\nThe build phase failed.\n\nFAULT\n\nThe build phase faulted.\n\nIN_PROGRESS\n\nThe build phase is still in progress.\n\nSTOPPED\n\nThe build phase stopped.\n\nSUCCEEDED\n\nThe build phase succeeded.\n\nTIMED_OUT\n\nThe build phase timed out.\n\nstartTime -> (timestamp)\n\nWhen the batch build phase started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the batch build phase ended, expressed in Unix time format.\n\ndurationInSeconds -> (long)\n\nHow long, in seconds, between the starting and ending times of the batch build’s phase.\n\ncontexts -> (list)\n\nAdditional information about the batch build phase. Especially to help troubleshoot a failed batch build.\n\n(structure)\n\nAdditional information about a build phase that has an error. You can use this information for troubleshooting.\n\nstatusCode -> (string)\n\nThe status code for the context of the build phase.\n\nmessage -> (string)\n\nAn explanation of the build phase’s context. This might include a command ID and an exit code.\n\nsource -> (structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects that define the sources for the batch build.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. Each ProjectSourceVersion must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nA BuildArtifacts object the defines the build artifacts for this batch build.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of BuildArtifacts objects the define the build artifacts for this batch build.\n\n(structure)\n\nInformation about build output artifacts.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build project.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment of the build project.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe name of a service role used for builds in the batch.\n\nlogConfig -> (structure)\n\nInformation about logs for a build project. These can be logs in CloudWatch Logs, built in a specified S3 bucket, or both.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nbuildTimeoutInMinutes -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the build in a batch must be completed in.\n\nqueuedTimeoutInMinutes -> (integer)\n\nSpecifies the amount of time, in minutes, that the batch build is allowed to be queued before it times out.\n\ncomplete -> (boolean)\n\nIndicates if the batch build is complete.\n\ninitiator -> (string)\n\nThe entity that started the batch build. Valid values include:\n\nIf CodePipeline started the build, the pipeline’s name (for example, codepipeline/my-demo-pipeline ).\n\nIf an IAM user started the build, the user’s name.\n\nIf the Jenkins plugin for CodeBuild started the build, the string CodeBuild-Jenkins-Plugin .\n\nvpcConfig -> (structure)\n\nInformation about the VPC configuration that CodeBuild accesses.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the batch build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\nbuildBatchNumber -> (long)\n\nThe number of the batch build. For each project, the buildBatchNumber of its first batch build is 1 . The buildBatchNumber of each subsequent batch build is incremented by 1 . If a batch build is deleted, the buildBatchNumber of other batch builds does not change.\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for the batch build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\nbuildBatchConfig -> (structure)\n\nContains configuration information about a batch build project.\n\nserviceRole -> (string)\n\nSpecifies the service role ARN for the batch build project.\n\ncombineArtifacts -> (boolean)\n\nSpecifies if the build artifacts for the batch build should be combined into a single artifact location.\n\nrestrictions -> (structure)\n\nA BatchRestrictions object that specifies the restrictions for the batch build.\n\nmaximumBuildsAllowed -> (integer)\n\nSpecifies the maximum number of builds allowed.\n\ncomputeTypesAllowed -> (list)\n\nAn array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the CodeBuild User Guide for these values.\n\n(string)\n\ntimeoutInMins -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the batch build must be completed in.\n\nbatchReportMode -> (string)\n\nSpecifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\nREPORT_AGGREGATED_BATCH\n\n(Default) Aggregate all of the build statuses into a single status report.\n\nREPORT_INDIVIDUAL_BUILDS\n\nSend a separate status report for each individual build.\n\nbuildGroups -> (list)\n\nAn array of BuildGroup objects that define the build groups for the batch build.\n\n(structure)\n\nContains information about a batch build build group. Build groups are used to combine builds that can run in parallel, while still being able to set dependencies on other build groups.\n\nidentifier -> (string)\n\nContains the identifier of the build group.\n\ndependsOn -> (list)\n\nAn array of strings that contain the identifiers of the build groups that this build group depends on.\n\n(string)\n\nignoreFailure -> (boolean)\n\nSpecifies if failures in this build group can be ignored.\n\ncurrentBuildSummary -> (structure)\n\nA BuildSummary object that contains a summary of the current build group.\n\narn -> (string)\n\nThe batch build ARN.\n\nrequestedOn -> (timestamp)\n\nWhen the build was started, expressed in Unix time format.\n\nbuildStatus -> (string)\n\nThe status of the build group.\n\nFAILED\n\nThe build group failed.\n\nFAULT\n\nThe build group faulted.\n\nIN_PROGRESS\n\nThe build group is still in progress.\n\nSTOPPED\n\nThe build group stopped.\n\nSUCCEEDED\n\nThe build group succeeded.\n\nTIMED_OUT\n\nThe build group timed out.\n\nprimaryArtifact -> (structure)\n\nA ResolvedArtifact object that represents the primary build artifacts for the build group.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\nsecondaryArtifacts -> (list)\n\nAn array of ResolvedArtifact objects that represents the secondary build artifacts for the build group.\n\n(structure)\n\nRepresents a resolved build artifact. A resolved artifact is an artifact that is built and deployed to the destination, such as Amazon S3.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\npriorBuildSummaryList -> (list)\n\nAn array of BuildSummary objects that contain summaries of previous build groups.\n\n(structure)\n\nContains summary information about a batch build group.\n\narn -> (string)\n\nThe batch build ARN.\n\nrequestedOn -> (timestamp)\n\nWhen the build was started, expressed in Unix time format.\n\nbuildStatus -> (string)\n\nThe status of the build group.\n\nFAILED\n\nThe build group failed.\n\nFAULT\n\nThe build group faulted.\n\nIN_PROGRESS\n\nThe build group is still in progress.\n\nSTOPPED\n\nThe build group stopped.\n\nSUCCEEDED\n\nThe build group succeeded.\n\nTIMED_OUT\n\nThe build group timed out.\n\nprimaryArtifact -> (structure)\n\nA ResolvedArtifact object that represents the primary build artifacts for the build group.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\nsecondaryArtifacts -> (list)\n\nAn array of ResolvedArtifact objects that represents the secondary build artifacts for the build group.\n\n(structure)\n\nRepresents a resolved build artifact. A resolved artifact is an artifact that is built and deployed to the destination, such as Amazon S3.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\ndebugSessionEnabled -> (boolean)\n\nSpecifies if session debugging is enabled for this batch build. For more information, see Viewing a running build in Session Manager . Batch session debugging is not supported for matrix batch builds.",
      "command_examples": "Examples\n\nTo start a batch build in AWS CodeBuild.\n\nThe following start-build-batch example starts a batch build of the specified project.\n\naws codebuild start-build-batch \\\n    --project-name <project-name>\n\n\nOutput:\n\n{\n    \"buildBatch\": {\n        \"id\": \"<project-name>:<batch-ID>\",\n        \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build-batch/<project-name>:<batch-ID>\",\n        \"startTime\": \"2020-10-21T16:54:24.740000+00:00\",\n        \"currentPhase\": \"SUBMITTED\",\n        \"buildBatchStatus\": \"IN_PROGRESS\",\n        \"projectName\": \"<project-name>\",\n        \"source\": {\n            \"type\": \"GITHUB\",\n            \"location\": \"<GitHub-repo-URL>\",\n            \"gitCloneDepth\": 1,\n            \"gitSubmodulesConfig\": {\n                \"fetchSubmodules\": false\n            },\n            \"reportBuildStatus\": false,\n            \"insecureSsl\": false\n        },\n        \"secondarySources\": [],\n        \"secondarySourceVersions\": [],\n        \"artifacts\": {\n            \"location\": \"\"\n        },\n        \"secondaryArtifacts\": [],\n        \"cache\": {\n            \"type\": \"NO_CACHE\"\n        },\n        \"environment\": {\n            \"type\": \"LINUX_CONTAINER\",\n            \"image\": \"aws/codebuild/amazonlinux2-x86_64-standard:3.0\",\n            \"computeType\": \"BUILD_GENERAL1_SMALL\",\n            \"environmentVariables\": [],\n            \"privilegedMode\": false,\n            \"imagePullCredentialsType\": \"CODEBUILD\"\n        },\n        \"logConfig\": {\n            \"cloudWatchLogs\": {\n                \"status\": \"ENABLED\"\n            },\n            \"s3Logs\": {\n                \"status\": \"DISABLED\",\n                \"encryptionDisabled\": false\n            }\n        },\n        \"buildTimeoutInMinutes\": 60,\n        \"queuedTimeoutInMinutes\": 480,\n        \"complete\": false,\n        \"initiator\": \"<username>\",\n        \"encryptionKey\": \"arn:aws:kms:<region-ID>:<account-ID>:alias/aws/s3\",\n        \"buildBatchNumber\": 3,\n        \"buildBatchConfig\": {\n            \"serviceRole\": \"arn:aws:iam::<account-ID>:role/service-role/<service-role-name>\",\n            \"restrictions\": {\n                \"maximumBuildsAllowed\": 100\n            },\n            \"timeoutInMins\": 480\n        }\n    }\n}\n\n\nFor more information, see Batch builds in AWS CodeBuild in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "stop-build",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/stop-build.html",
      "command_description": "Description\n\nAttempts to stop running a build.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-build\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the build.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuild -> (structure)\n\nInformation about the build.\n\nid -> (string)\n\nThe unique ID for the build.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the build.\n\nbuildNumber -> (long)\n\nThe number of the build. For each project, the buildNumber of its first build is 1 . The buildNumber of each subsequent build is incremented by 1 . If a build is deleted, the buildNumber of other builds does not change.\n\nstartTime -> (timestamp)\n\nWhen the build process started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the build process ended, expressed in Unix time format.\n\ncurrentPhase -> (string)\n\nThe current build phase.\n\nbuildStatus -> (string)\n\nThe current status of the build. Valid values include:\n\nFAILED : The build failed.\n\nFAULT : The build faulted.\n\nIN_PROGRESS : The build is still in progress.\n\nSTOPPED : The build stopped.\n\nSUCCEEDED : The build succeeded.\n\nTIMED_OUT : The build timed out.\n\nsourceVersion -> (string)\n\nAny version identifier for the version of the source code to be built. If sourceVersion is specified at the project level, then this sourceVersion (at the build level) takes precedence.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nresolvedSourceVersion -> (string)\n\nAn identifier for the version of this build’s source code.\n\nFor CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID.\n\nFor CodePipeline, the source revision provided by CodePipeline.\n\nFor Amazon S3, this does not apply.\n\nprojectName -> (string)\n\nThe name of the CodeBuild project.\n\nphases -> (list)\n\nInformation about all previous build phases that are complete and information about any current build phase that is not yet complete.\n\n(structure)\n\nInformation about a stage for a build.\n\nphaseType -> (string)\n\nThe name of the build phase. Valid values include:\n\nBUILD\n\nCore build activities typically occur in this build phase.\n\nCOMPLETED\n\nThe build has been completed.\n\nDOWNLOAD_SOURCE\n\nSource code is being downloaded in this build phase.\n\nFINALIZING\n\nThe build process is completing in this build phase.\n\nINSTALL\n\nInstallation activities typically occur in this build phase.\n\nPOST_BUILD\n\nPost-build activities typically occur in this build phase.\n\nPRE_BUILD\n\nPre-build activities typically occur in this build phase.\n\nPROVISIONING\n\nThe build environment is being set up.\n\nQUEUED\n\nThe build has been submitted and is queued behind other submitted builds.\n\nSUBMITTED\n\nThe build has been submitted.\n\nUPLOAD_ARTIFACTS\n\nBuild output artifacts are being uploaded to the output location.\n\nphaseStatus -> (string)\n\nThe current status of the build phase. Valid values include:\n\nFAILED\n\nThe build phase failed.\n\nFAULT\n\nThe build phase faulted.\n\nIN_PROGRESS\n\nThe build phase is still in progress.\n\nSTOPPED\n\nThe build phase stopped.\n\nSUCCEEDED\n\nThe build phase succeeded.\n\nTIMED_OUT\n\nThe build phase timed out.\n\nstartTime -> (timestamp)\n\nWhen the build phase started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the build phase ended, expressed in Unix time format.\n\ndurationInSeconds -> (long)\n\nHow long, in seconds, between the starting and ending times of the build’s phase.\n\ncontexts -> (list)\n\nAdditional information about a build phase, especially to help troubleshoot a failed build.\n\n(structure)\n\nAdditional information about a build phase that has an error. You can use this information for troubleshooting.\n\nstatusCode -> (string)\n\nThe status code for the context of the build phase.\n\nmessage -> (string)\n\nAn explanation of the build phase’s context. This might include a command ID and an exit code.\n\nsource -> (structure)\n\nInformation about the source code to be built.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. Each ProjectSourceVersion must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nInformation about the output artifacts for the build.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of ProjectArtifacts objects.\n\n(structure)\n\nInformation about build output artifacts.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment for this build.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe name of a service role used for this build.\n\nlogs -> (structure)\n\nInformation about the build’s logs in CloudWatch Logs.\n\ngroupName -> (string)\n\nThe name of the CloudWatch Logs group for the build logs.\n\nstreamName -> (string)\n\nThe name of the CloudWatch Logs stream for the build logs.\n\ndeepLink -> (string)\n\nThe URL to an individual build log in CloudWatch Logs.\n\ns3DeepLink -> (string)\n\nThe URL to a build log in an S3 bucket.\n\ncloudWatchLogsArn -> (string)\n\nThe ARN of CloudWatch Logs for a build project. Its format is arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName} . For more information, see Resources Defined by CloudWatch Logs .\n\ns3LogsArn -> (string)\n\nThe ARN of S3 logs for a build project. Its format is arn:${Partition}:s3:::${BucketName}/${ObjectName} . For more information, see Resources Defined by Amazon S3 .\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about S3 logs for a build project.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ntimeoutInMinutes -> (integer)\n\nHow long, in minutes, for CodeBuild to wait before timing out this build if it does not get marked as completed.\n\nqueuedTimeoutInMinutes -> (integer)\n\nThe number of minutes a build is allowed to be queued before it times out.\n\nbuildComplete -> (boolean)\n\nWhether the build is complete. True if complete; otherwise, false.\n\ninitiator -> (string)\n\nThe entity that started the build. Valid values include:\n\nIf CodePipeline started the build, the pipeline’s name (for example, codepipeline/my-demo-pipeline ).\n\nIf an IAM user started the build, the user’s name (for example, MyUserName ).\n\nIf the Jenkins plugin for CodeBuild started the build, the string CodeBuild-Jenkins-Plugin .\n\nvpcConfig -> (structure)\n\nIf your CodeBuild project accesses resources in an Amazon VPC, you provide this parameter that identifies the VPC ID and the list of security group IDs and subnet IDs. The security groups and subnets must belong to the same VPC. You must provide at least one security group and one subnet ID.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nnetworkInterface -> (structure)\n\nDescribes a network interface.\n\nsubnetId -> (string)\n\nThe ID of the subnet.\n\nnetworkInterfaceId -> (string)\n\nThe ID of the network interface.\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\nexportedEnvironmentVariables -> (list)\n\nA list of exported environment variables for this build.\n\nExported environment variables are used in conjunction with CodePipeline to export environment variables from the current build stage to subsequent stages in the pipeline. For more information, see Working with variables in the CodePipeline User Guide .\n\n(structure)\n\nContains information about an exported environment variable.\n\nExported environment variables are used in conjunction with CodePipeline to export environment variables from the current build stage to subsequent stages in the pipeline. For more information, see Working with variables in the CodePipeline User Guide .\n\nNote\n\nDuring a build, the value of a variable is available starting with the install phase. It can be updated between the start of the install phase and the end of the post_build phase. After the post_build phase ends, the value of exported variables cannot change.\n\nname -> (string)\n\nThe name of the exported environment variable.\n\nvalue -> (string)\n\nThe value assigned to the exported environment variable.\n\nreportArns -> (list)\n\nAn array of the ARNs associated with this build’s reports.\n\n(string)\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\ndebugSession -> (structure)\n\nContains information about the debug session for this build.\n\nsessionEnabled -> (boolean)\n\nSpecifies if session debugging is enabled for this build.\n\nsessionTarget -> (string)\n\nContains the identifier of the Session Manager session used for the build. To work with the paused build, you open this session to examine, control, and resume the build.\n\nbuildBatchArn -> (string)\n\nThe ARN of the batch build that this build is a member of, if applicable.",
      "command_examples": "Examples\n\nTo stop a build of an AWS CodeBuild build project.\n\nThe following stop-build example stops the specified CodeBuild build.\n\naws codebuild stop-build --id my-demo-project:12345678-a1b2-c3d4-e5f6-11111EXAMPLE\n\n\nOutput:\n\n{\n    \"build\": {\n        \"startTime\": 1556906956.318,\n        \"initiator\": \"my-aws-account-name\",\n        \"projectName\": \"my-demo-project\",\n        \"currentPhase\": \"COMPLETED\",\n        \"cache\": {\n            \"type\": \"NO_CACHE\"\n        },\n        \"source\": {\n            \"insecureSsl\": false,\n            \"location\": \"codebuild-us-west-2-123456789012-input-bucket/my-source.zip\",\n            \"type\": \"S3\"\n        },\n        \"id\": \"my-demo-project:1a2b3c4d-5678-90ab-cdef-11111EXAMPLE\",\n        \"endTime\": 1556906974.781,\n        \"phases\": [\n            {\n                \"durationInSeconds\": 0,\n                \"phaseType\": \"SUBMITTED\",\n                \"endTime\": 1556906956.935,\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"startTime\": 1556906956.318\n            },\n            {\n                \"durationInSeconds\": 1,\n                \"phaseType\": \"QUEUED\",\n                \"endTime\": 1556906958.272,\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"startTime\": 1556906956.935\n            },\n            {\n                \"phaseType\": \"PROVISIONING\",\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"durationInSeconds\": 14,\n                \"contexts\": [\n                    {\n                        \"message\": \"\",\n                        \"statusCode\": \"\"\n                    }\n                ],\n                \"endTime\": 1556906972.847,\n                \"startTime\": 1556906958.272\n            },\n            {\n                \"phaseType\": \"DOWNLOAD_SOURCE\",\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"durationInSeconds\": 0,\n                \"contexts\": [\n                        {\n                        \"message\": \"\",\n                        \"statusCode\": \"\"\n                    }\n                ],\n                \"endTime\": 1556906973.552,\n                \"startTime\": 1556906972.847\n            },\n            {\n                \"phaseType\": \"INSTALL\",\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"durationInSeconds\": 0,\n                \"contexts\": [\n                    {\n                        \"message\": \"\",\n                        \"statusCode\": \"\"\n                    }\n                ],\n                \"endTime\": 1556906973.75,\n                \"startTime\": 1556906973.552\n            },\n            {\n                \"phaseType\": \"PRE_BUILD\",\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"durationInSeconds\": 0,\n                \"contexts\": [\n                    {\n                        \"message\": \"\",\n                        \"statusCode\": \"\"\n                    }\n                ],\n                \"endTime\": 1556906973.937,\n                \"startTime\": 1556906973.75\n            },\n            {\n                \"durationInSeconds\": 0,\n                \"phaseType\": \"BUILD\",\n                \"endTime\": 1556906974.781,\n                \"phaseStatus\": \"STOPPED\",\n                \"startTime\": 1556906973.937\n            },\n            {\n                \"phaseType\": \"COMPLETED\",\n                \"startTime\": 1556906974.781\n            }\n        ],\n        \"artifacts\": {\n            \"location\": \"arn:aws:s3:::artifacts-override/my-demo-project\",\n            \"encryptionDisabled\": false,\n            \"overrideArtifactName\": true\n        },\n        \"buildComplete\": true,\n        \"buildStatus\": \"STOPPED\",\n        \"encryptionKey\": \"arn:aws:kms:us-west-2:123456789012:alias/aws/s3\",\n        \"serviceRole\": \"arn:aws:iam::123456789012:role/service-role/my-codebuild-service-role\",\n        \"queuedTimeoutInMinutes\": 5,\n        \"timeoutInMinutes\": 60,\n        \"environment\": {\n            \"type\": \"LINUX_CONTAINER\",\n            \"environmentVariables\": [],\n            \"computeType\": \"BUILD_GENERAL1_MEDIUM\",\n            \"privilegedMode\": false,\n            \"image\": \"aws/codebuild/standard:1.0\",\n            \"imagePullCredentialsType\": \"CODEBUILD\"\n        },\n        \"logs\": {\n            \"streamName\": \"1a2b3c4d-5678-90ab-cdef-11111EXAMPLE\",\n            \"deepLink\": \"https://console.aws.amazon.com/cloudwatch/home?region=us-west-2#logEvent:group=/aws/codebuild/my-demo-project;stream=1a2b3c4d-5678-90ab-cdef-11111EXAMPLE\",\n            \"groupName\": \"/aws/codebuild/my-demo-project\"\n        },\n        \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:build/my-demo-project:1a2b3c4d-5678-90ab-cdef-11111EXAMPLE\"\n    }\n}\n\n\nFor more information, see Stop a Build (AWS CLI) in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "stop-build-batch",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/stop-build-batch.html",
      "command_description": "Description\n\nStops a running batch build.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-build-batch\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe identifier of the batch build to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuildBatch -> (structure)\n\nContains information about a batch build.\n\nid -> (string)\n\nThe identifier of the batch build.\n\narn -> (string)\n\nThe ARN of the batch build.\n\nstartTime -> (timestamp)\n\nThe date and time that the batch build started.\n\nendTime -> (timestamp)\n\nThe date and time that the batch build ended.\n\ncurrentPhase -> (string)\n\nThe current phase of the batch build.\n\nbuildBatchStatus -> (string)\n\nThe status of the batch build.\n\nsourceVersion -> (string)\n\nThe identifier of the version of the source code to be built.\n\nresolvedSourceVersion -> (string)\n\nThe identifier of the resolved version of this batch build’s source code.\n\nFor CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID.\n\nFor CodePipeline, the source revision provided by CodePipeline.\n\nFor Amazon S3, this does not apply.\n\nprojectName -> (string)\n\nThe name of the batch build project.\n\nphases -> (list)\n\nAn array of BuildBatchPhase objects the specify the phases of the batch build.\n\n(structure)\n\nContains information about a stage for a batch build.\n\nphaseType -> (string)\n\nThe name of the batch build phase. Valid values include:\n\nCOMBINE_ARTIFACTS\n\nBuild output artifacts are being combined and uploaded to the output location.\n\nDOWNLOAD_BATCHSPEC\n\nThe batch build specification is being downloaded.\n\nFAILED\n\nOne or more of the builds failed.\n\nIN_PROGRESS\n\nThe batch build is in progress.\n\nSTOPPED\n\nThe batch build was stopped.\n\nSUBMITTED\n\nThe btach build has been submitted.\n\nSUCCEEDED\n\nThe batch build succeeded.\n\nphaseStatus -> (string)\n\nThe current status of the batch build phase. Valid values include:\n\nFAILED\n\nThe build phase failed.\n\nFAULT\n\nThe build phase faulted.\n\nIN_PROGRESS\n\nThe build phase is still in progress.\n\nSTOPPED\n\nThe build phase stopped.\n\nSUCCEEDED\n\nThe build phase succeeded.\n\nTIMED_OUT\n\nThe build phase timed out.\n\nstartTime -> (timestamp)\n\nWhen the batch build phase started, expressed in Unix time format.\n\nendTime -> (timestamp)\n\nWhen the batch build phase ended, expressed in Unix time format.\n\ndurationInSeconds -> (long)\n\nHow long, in seconds, between the starting and ending times of the batch build’s phase.\n\ncontexts -> (list)\n\nAdditional information about the batch build phase. Especially to help troubleshoot a failed batch build.\n\n(structure)\n\nAdditional information about a build phase that has an error. You can use this information for troubleshooting.\n\nstatusCode -> (string)\n\nThe status code for the context of the build phase.\n\nmessage -> (string)\n\nAn explanation of the build phase’s context. This might include a command ID and an exit code.\n\nsource -> (structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects that define the sources for the batch build.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. Each ProjectSourceVersion must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nA BuildArtifacts object the defines the build artifacts for this batch build.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of BuildArtifacts objects the define the build artifacts for this batch build.\n\n(structure)\n\nInformation about build output artifacts.\n\nlocation -> (string)\n\nInformation about the location of the build artifacts.\n\nsha256sum -> (string)\n\nThe SHA-256 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\nmd5sum -> (string)\n\nThe MD5 hash of the build artifact.\n\nYou can use this hash along with a checksum tool to confirm file integrity and authenticity.\n\nNote\n\nThis value is available only if the build project’s packaging value is set to ZIP .\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nInformation that tells you if encryption for build artifacts is disabled.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build project.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment of the build project.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe name of a service role used for builds in the batch.\n\nlogConfig -> (structure)\n\nInformation about logs for a build project. These can be logs in CloudWatch Logs, built in a specified S3 bucket, or both.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nbuildTimeoutInMinutes -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the build in a batch must be completed in.\n\nqueuedTimeoutInMinutes -> (integer)\n\nSpecifies the amount of time, in minutes, that the batch build is allowed to be queued before it times out.\n\ncomplete -> (boolean)\n\nIndicates if the batch build is complete.\n\ninitiator -> (string)\n\nThe entity that started the batch build. Valid values include:\n\nIf CodePipeline started the build, the pipeline’s name (for example, codepipeline/my-demo-pipeline ).\n\nIf an IAM user started the build, the user’s name.\n\nIf the Jenkins plugin for CodeBuild started the build, the string CodeBuild-Jenkins-Plugin .\n\nvpcConfig -> (structure)\n\nInformation about the VPC configuration that CodeBuild accesses.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the batch build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\nbuildBatchNumber -> (long)\n\nThe number of the batch build. For each project, the buildBatchNumber of its first batch build is 1 . The buildBatchNumber of each subsequent batch build is incremented by 1 . If a batch build is deleted, the buildBatchNumber of other batch builds does not change.\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for the batch build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\nbuildBatchConfig -> (structure)\n\nContains configuration information about a batch build project.\n\nserviceRole -> (string)\n\nSpecifies the service role ARN for the batch build project.\n\ncombineArtifacts -> (boolean)\n\nSpecifies if the build artifacts for the batch build should be combined into a single artifact location.\n\nrestrictions -> (structure)\n\nA BatchRestrictions object that specifies the restrictions for the batch build.\n\nmaximumBuildsAllowed -> (integer)\n\nSpecifies the maximum number of builds allowed.\n\ncomputeTypesAllowed -> (list)\n\nAn array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the CodeBuild User Guide for these values.\n\n(string)\n\ntimeoutInMins -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the batch build must be completed in.\n\nbatchReportMode -> (string)\n\nSpecifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\nREPORT_AGGREGATED_BATCH\n\n(Default) Aggregate all of the build statuses into a single status report.\n\nREPORT_INDIVIDUAL_BUILDS\n\nSend a separate status report for each individual build.\n\nbuildGroups -> (list)\n\nAn array of BuildGroup objects that define the build groups for the batch build.\n\n(structure)\n\nContains information about a batch build build group. Build groups are used to combine builds that can run in parallel, while still being able to set dependencies on other build groups.\n\nidentifier -> (string)\n\nContains the identifier of the build group.\n\ndependsOn -> (list)\n\nAn array of strings that contain the identifiers of the build groups that this build group depends on.\n\n(string)\n\nignoreFailure -> (boolean)\n\nSpecifies if failures in this build group can be ignored.\n\ncurrentBuildSummary -> (structure)\n\nA BuildSummary object that contains a summary of the current build group.\n\narn -> (string)\n\nThe batch build ARN.\n\nrequestedOn -> (timestamp)\n\nWhen the build was started, expressed in Unix time format.\n\nbuildStatus -> (string)\n\nThe status of the build group.\n\nFAILED\n\nThe build group failed.\n\nFAULT\n\nThe build group faulted.\n\nIN_PROGRESS\n\nThe build group is still in progress.\n\nSTOPPED\n\nThe build group stopped.\n\nSUCCEEDED\n\nThe build group succeeded.\n\nTIMED_OUT\n\nThe build group timed out.\n\nprimaryArtifact -> (structure)\n\nA ResolvedArtifact object that represents the primary build artifacts for the build group.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\nsecondaryArtifacts -> (list)\n\nAn array of ResolvedArtifact objects that represents the secondary build artifacts for the build group.\n\n(structure)\n\nRepresents a resolved build artifact. A resolved artifact is an artifact that is built and deployed to the destination, such as Amazon S3.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\npriorBuildSummaryList -> (list)\n\nAn array of BuildSummary objects that contain summaries of previous build groups.\n\n(structure)\n\nContains summary information about a batch build group.\n\narn -> (string)\n\nThe batch build ARN.\n\nrequestedOn -> (timestamp)\n\nWhen the build was started, expressed in Unix time format.\n\nbuildStatus -> (string)\n\nThe status of the build group.\n\nFAILED\n\nThe build group failed.\n\nFAULT\n\nThe build group faulted.\n\nIN_PROGRESS\n\nThe build group is still in progress.\n\nSTOPPED\n\nThe build group stopped.\n\nSUCCEEDED\n\nThe build group succeeded.\n\nTIMED_OUT\n\nThe build group timed out.\n\nprimaryArtifact -> (structure)\n\nA ResolvedArtifact object that represents the primary build artifacts for the build group.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\nsecondaryArtifacts -> (list)\n\nAn array of ResolvedArtifact objects that represents the secondary build artifacts for the build group.\n\n(structure)\n\nRepresents a resolved build artifact. A resolved artifact is an artifact that is built and deployed to the destination, such as Amazon S3.\n\ntype -> (string)\n\nSpecifies the type of artifact.\n\nlocation -> (string)\n\nThe location of the artifact.\n\nidentifier -> (string)\n\nThe identifier of the artifact.\n\ndebugSessionEnabled -> (boolean)\n\nSpecifies if session debugging is enabled for this batch build. For more information, see Viewing a running build in Session Manager . Batch session debugging is not supported for matrix batch builds.",
      "command_examples": "Examples\n\nTo stop an in-progress batch build in AWS CodeBuild.\n\nThe following stop-build-batch example stops the specified batch build.\n\naws codebuild stop-build-batch \\\n    --id <project-name>:<batch-ID>\n\n\nOutput:\n\n{\n    \"buildBatch\": {\n        \"id\": \"<project-name>:<batch-ID>\",\n        \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build-batch/<project-name>:<batch-ID>\",\n        \"startTime\": \"2020-10-21T16:54:24.740000+00:00\",\n        \"endTime\": \"2020-10-21T16:56:05.152000+00:00\",\n        \"currentPhase\": \"STOPPED\",\n        \"buildBatchStatus\": \"STOPPED\",\n        \"resolvedSourceVersion\": \"aef7744ed069c51098e15c360f4102cd2cd1ad64\",\n        \"projectName\": \"<project-name>\",\n        \"phases\": [\n            {\n                \"phaseType\": \"SUBMITTED\",\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"startTime\": \"2020-10-21T16:54:24.740000+00:00\",\n                \"endTime\": \"2020-10-21T16:54:25.039000+00:00\",\n                \"durationInSeconds\": 0\n            },\n            {\n                \"phaseType\": \"DOWNLOAD_BATCHSPEC\",\n                \"phaseStatus\": \"SUCCEEDED\",\n                \"startTime\": \"2020-10-21T16:54:25.039000+00:00\",\n                \"endTime\": \"2020-10-21T16:54:56.583000+00:00\",\n                \"durationInSeconds\": 31\n            },\n            {\n                \"phaseType\": \"IN_PROGRESS\",\n                \"phaseStatus\": \"STOPPED\",\n                \"startTime\": \"2020-10-21T16:54:56.583000+00:00\",\n                \"endTime\": \"2020-10-21T16:56:05.152000+00:00\",\n                \"durationInSeconds\": 68\n            },\n            {\n                \"phaseType\": \"STOPPED\",\n                \"startTime\": \"2020-10-21T16:56:05.152000+00:00\"\n            }\n        ],\n        \"source\": {\n            \"type\": \"GITHUB\",\n            \"location\": \"<GitHub-repo-URL>\",\n            \"gitCloneDepth\": 1,\n            \"gitSubmodulesConfig\": {\n                \"fetchSubmodules\": false\n            },\n            \"reportBuildStatus\": false,\n            \"insecureSsl\": false\n        },\n        \"secondarySources\": [],\n        \"secondarySourceVersions\": [],\n        \"artifacts\": {\n            \"location\": \"\"\n        },\n        \"secondaryArtifacts\": [],\n        \"cache\": {\n            \"type\": \"NO_CACHE\"\n        },\n        \"environment\": {\n            \"type\": \"LINUX_CONTAINER\",\n            \"image\": \"aws/codebuild/amazonlinux2-x86_64-standard:3.0\",\n            \"computeType\": \"BUILD_GENERAL1_SMALL\",\n            \"environmentVariables\": [],\n            \"privilegedMode\": false,\n            \"imagePullCredentialsType\": \"CODEBUILD\"\n        },\n        \"logConfig\": {\n            \"cloudWatchLogs\": {\n                \"status\": \"ENABLED\"\n            },\n            \"s3Logs\": {\n                \"status\": \"DISABLED\",\n                \"encryptionDisabled\": false\n            }\n        },\n        \"buildTimeoutInMinutes\": 60,\n        \"queuedTimeoutInMinutes\": 480,\n        \"complete\": true,\n        \"initiator\": \"Strohm\",\n        \"encryptionKey\": \"arn:aws:kms:<region-ID>:<account-ID>:alias/aws/s3\",\n        \"buildBatchNumber\": 3,\n        \"buildBatchConfig\": {\n            \"serviceRole\": \"arn:aws:iam::<account-ID>:role/service-role/<project-name>\",\n            \"restrictions\": {\n                \"maximumBuildsAllowed\": 100\n            },\n            \"timeoutInMins\": 480\n        },\n        \"buildGroups\": [\n            {\n                \"identifier\": \"DOWNLOAD_SOURCE\",\n                \"ignoreFailure\": false,\n                \"currentBuildSummary\": {\n                    \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n                    \"requestedOn\": \"2020-10-21T16:54:25.468000+00:00\",\n                    \"buildStatus\": \"SUCCEEDED\",\n                    \"primaryArtifact\": {\n                        \"type\": \"no_artifacts\",\n                        \"identifier\": \"DOWNLOAD_SOURCE\"\n                    },\n                    \"secondaryArtifacts\": []\n                }\n            },\n            {\n                \"identifier\": \"linux_small\",\n                \"dependsOn\": [],\n                \"ignoreFailure\": false,\n                \"currentBuildSummary\": {\n                    \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n                    \"requestedOn\": \"2020-10-21T16:54:56.833000+00:00\",\n                    \"buildStatus\": \"IN_PROGRESS\"\n                }\n            },\n            {\n                \"identifier\": \"linux_medium\",\n                \"dependsOn\": [\n                    \"linux_small\"\n                ],\n                \"ignoreFailure\": false,\n                \"currentBuildSummary\": {\n                    \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n                    \"requestedOn\": \"2020-10-21T16:54:56.211000+00:00\",\n                    \"buildStatus\": \"PENDING\"\n                }\n            },\n            {\n                \"identifier\": \"linux_large\",\n                \"dependsOn\": [\n                    \"linux_medium\"\n                ],\n                \"ignoreFailure\": false,\n                \"currentBuildSummary\": {\n                    \"arn\": \"arn:aws:codebuild:<region-ID>:<account-ID>:build/<project-name>:<build-ID>\",\n                    \"requestedOn\": \"2020-10-21T16:54:56.330000+00:00\",\n                    \"buildStatus\": \"PENDING\"\n                }\n            }\n        ]\n    }\n}\n\n\nFor more information, see Batch builds in AWS CodeBuild in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "update-project",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/update-project.html",
      "command_description": "Description\n\nChanges the settings of a build project.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-project\n--name <value>\n[--description <value>]\n[--source <value>]\n[--secondary-sources <value>]\n[--source-version <value>]\n[--secondary-source-versions <value>]\n[--artifacts <value>]\n[--secondary-artifacts <value>]\n[--cache <value>]\n[--environment <value>]\n[--service-role <value>]\n[--timeout-in-minutes <value>]\n[--queued-timeout-in-minutes <value>]\n[--encryption-key <value>]\n[--tags <value>]\n[--vpc-config <value>]\n[--badge-enabled | --no-badge-enabled]\n[--logs-config <value>]\n[--file-system-locations <value>]\n[--build-batch-config <value>]\n[--concurrent-build-limit <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--source <value>]",
        "[--secondary-sources <value>]",
        "[--source-version <value>]",
        "[--secondary-source-versions <value>]",
        "[--artifacts <value>]",
        "[--secondary-artifacts <value>]",
        "[--cache <value>]",
        "[--environment <value>]",
        "[--service-role <value>]",
        "[--timeout-in-minutes <value>]",
        "[--queued-timeout-in-minutes <value>]",
        "[--encryption-key <value>]",
        "[--tags <value>]",
        "[--vpc-config <value>]",
        "[--badge-enabled | --no-badge-enabled]",
        "[--logs-config <value>]",
        "[--file-system-locations <value>]",
        "[--build-batch-config <value>]",
        "[--concurrent-build-limit <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the build project.\n\nNote\n\nYou cannot change a build project’s name.\n\n--description (string)\n\nA new or replacement description of the build project.\n\n--source (structure)\n\nInformation to be changed about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nShorthand Syntax:\n\ntype=string,location=string,gitCloneDepth=integer,gitSubmodulesConfig={fetchSubmodules=boolean},buildspec=string,auth={type=string,resource=string},reportBuildStatus=boolean,buildStatusConfig={context=string,targetUrl=string},insecureSsl=boolean,sourceIdentifier=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"CODECOMMIT\"|\"CODEPIPELINE\"|\"GITHUB\"|\"S3\"|\"BITBUCKET\"|\"GITHUB_ENTERPRISE\"|\"NO_SOURCE\",\n  \"location\": \"string\",\n  \"gitCloneDepth\": integer,\n  \"gitSubmodulesConfig\": {\n    \"fetchSubmodules\": true|false\n  },\n  \"buildspec\": \"string\",\n  \"auth\": {\n    \"type\": \"OAUTH\",\n    \"resource\": \"string\"\n  },\n  \"reportBuildStatus\": true|false,\n  \"buildStatusConfig\": {\n    \"context\": \"string\",\n    \"targetUrl\": \"string\"\n  },\n  \"insecureSsl\": true|false,\n  \"sourceIdentifier\": \"string\"\n}\n\n\n--secondary-sources (list)\n\nAn array of ProjectSource objects.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nShorthand Syntax:\n\ntype=string,location=string,gitCloneDepth=integer,gitSubmodulesConfig={fetchSubmodules=boolean},buildspec=string,auth={type=string,resource=string},reportBuildStatus=boolean,buildStatusConfig={context=string,targetUrl=string},insecureSsl=boolean,sourceIdentifier=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"type\": \"CODECOMMIT\"|\"CODEPIPELINE\"|\"GITHUB\"|\"S3\"|\"BITBUCKET\"|\"GITHUB_ENTERPRISE\"|\"NO_SOURCE\",\n    \"location\": \"string\",\n    \"gitCloneDepth\": integer,\n    \"gitSubmodulesConfig\": {\n      \"fetchSubmodules\": true|false\n    },\n    \"buildspec\": \"string\",\n    \"auth\": {\n      \"type\": \"OAUTH\",\n      \"resource\": \"string\"\n    },\n    \"reportBuildStatus\": true|false,\n    \"buildStatusConfig\": {\n      \"context\": \"string\",\n      \"targetUrl\": \"string\"\n    },\n    \"insecureSsl\": true|false,\n    \"sourceIdentifier\": \"string\"\n  }\n  ...\n]\n\n\n--source-version (string)\n\nA version of the build input to be built for this project. If not specified, the latest version is used. If specified, it must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nIf sourceVersion is specified at the build level, then that version takes precedence over this sourceVersion (at the project level).\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\n--secondary-source-versions (list)\n\nAn array of ProjectSourceVersion objects. If secondarySourceVersions is specified at the build level, then they take over these secondarySourceVersions (at the project level).\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nShorthand Syntax:\n\nsourceIdentifier=string,sourceVersion=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"sourceIdentifier\": \"string\",\n    \"sourceVersion\": \"string\"\n  }\n  ...\n]\n\n\n--artifacts (structure)\n\nInformation to be changed about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ntype=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"CODEPIPELINE\"|\"S3\"|\"NO_ARTIFACTS\",\n  \"location\": \"string\",\n  \"path\": \"string\",\n  \"namespaceType\": \"NONE\"|\"BUILD_ID\",\n  \"name\": \"string\",\n  \"packaging\": \"NONE\"|\"ZIP\",\n  \"overrideArtifactName\": true|false,\n  \"encryptionDisabled\": true|false,\n  \"artifactIdentifier\": \"string\",\n  \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n}\n\n\n--secondary-artifacts (list)\n\nAn array of ProjectArtifact objects.\n\n(structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ntype=string,location=string,path=string,namespaceType=string,name=string,packaging=string,overrideArtifactName=boolean,encryptionDisabled=boolean,artifactIdentifier=string,bucketOwnerAccess=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"type\": \"CODEPIPELINE\"|\"S3\"|\"NO_ARTIFACTS\",\n    \"location\": \"string\",\n    \"path\": \"string\",\n    \"namespaceType\": \"NONE\"|\"BUILD_ID\",\n    \"name\": \"string\",\n    \"packaging\": \"NONE\"|\"ZIP\",\n    \"overrideArtifactName\": true|false,\n    \"encryptionDisabled\": true|false,\n    \"artifactIdentifier\": \"string\",\n    \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n  }\n  ...\n]\n\n\n--cache (structure)\n\nStores recently used information so that it can be quickly accessed at a later time.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nShorthand Syntax:\n\ntype=string,location=string,modes=string,string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"NO_CACHE\"|\"S3\"|\"LOCAL\",\n  \"location\": \"string\",\n  \"modes\": [\"LOCAL_DOCKER_LAYER_CACHE\"|\"LOCAL_SOURCE_CACHE\"|\"LOCAL_CUSTOM_CACHE\", ...]\n}\n\n\n--environment (structure)\n\nInformation to be changed about the build environment for the build project.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nShorthand Syntax:\n\ntype=string,image=string,computeType=string,environmentVariables=[{name=string,value=string,type=string},{name=string,value=string,type=string}],privilegedMode=boolean,certificate=string,registryCredential={credential=string,credentialProvider=string},imagePullCredentialsType=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"WINDOWS_CONTAINER\"|\"LINUX_CONTAINER\"|\"LINUX_GPU_CONTAINER\"|\"ARM_CONTAINER\"|\"WINDOWS_SERVER_2019_CONTAINER\",\n  \"image\": \"string\",\n  \"computeType\": \"BUILD_GENERAL1_SMALL\"|\"BUILD_GENERAL1_MEDIUM\"|\"BUILD_GENERAL1_LARGE\"|\"BUILD_GENERAL1_2XLARGE\",\n  \"environmentVariables\": [\n    {\n      \"name\": \"string\",\n      \"value\": \"string\",\n      \"type\": \"PLAINTEXT\"|\"PARAMETER_STORE\"|\"SECRETS_MANAGER\"\n    }\n    ...\n  ],\n  \"privilegedMode\": true|false,\n  \"certificate\": \"string\",\n  \"registryCredential\": {\n    \"credential\": \"string\",\n    \"credentialProvider\": \"SECRETS_MANAGER\"\n  },\n  \"imagePullCredentialsType\": \"CODEBUILD\"|\"SERVICE_ROLE\"\n}\n\n\n--service-role (string)\n\nThe replacement ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of the Amazon Web Services account.\n\n--timeout-in-minutes (integer)\n\nThe replacement value in minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing out any related build that did not get marked as completed.\n\n--queued-timeout-in-minutes (integer)\n\nThe number of minutes a build is allowed to be queued before it times out.\n\n--encryption-key (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ).\n\n--tags (list)\n\nAn updated list of tag key and value pairs associated with this build project.\n\nThese tags are available for use by Amazon Web Services services that support CodeBuild build project tags.\n\n(structure)\n\nA tag, consisting of a key and a value.\n\nThis tag is available for use by Amazon Web Services services that support tags in CodeBuild.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--vpc-config (structure)\n\nVpcConfig enables CodeBuild to access resources in an Amazon VPC.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nShorthand Syntax:\n\nvpcId=string,subnets=string,string,securityGroupIds=string,string\n\n\nJSON Syntax:\n\n{\n  \"vpcId\": \"string\",\n  \"subnets\": [\"string\", ...],\n  \"securityGroupIds\": [\"string\", ...]\n}\n\n\n--badge-enabled | --no-badge-enabled (boolean)\n\nSet this to true to generate a publicly accessible URL for your project’s build badge.\n\n--logs-config (structure)\n\nInformation about logs for the build project. A project can create logs in CloudWatch Logs, logs in an S3 bucket, or both.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nShorthand Syntax:\n\ncloudWatchLogs={status=string,groupName=string,streamName=string},s3Logs={status=string,location=string,encryptionDisabled=boolean,bucketOwnerAccess=string}\n\n\nJSON Syntax:\n\n{\n  \"cloudWatchLogs\": {\n    \"status\": \"ENABLED\"|\"DISABLED\",\n    \"groupName\": \"string\",\n    \"streamName\": \"string\"\n  },\n  \"s3Logs\": {\n    \"status\": \"ENABLED\"|\"DISABLED\",\n    \"location\": \"string\",\n    \"encryptionDisabled\": true|false,\n    \"bucketOwnerAccess\": \"NONE\"|\"READ_ONLY\"|\"FULL\"\n  }\n}\n\n\n--file-system-locations (list)\n\nAn array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\nShorthand Syntax:\n\ntype=string,location=string,mountPoint=string,identifier=string,mountOptions=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"type\": \"EFS\",\n    \"location\": \"string\",\n    \"mountPoint\": \"string\",\n    \"identifier\": \"string\",\n    \"mountOptions\": \"string\"\n  }\n  ...\n]\n\n\n--build-batch-config (structure)\n\nContains configuration information about a batch build project.\n\nserviceRole -> (string)\n\nSpecifies the service role ARN for the batch build project.\n\ncombineArtifacts -> (boolean)\n\nSpecifies if the build artifacts for the batch build should be combined into a single artifact location.\n\nrestrictions -> (structure)\n\nA BatchRestrictions object that specifies the restrictions for the batch build.\n\nmaximumBuildsAllowed -> (integer)\n\nSpecifies the maximum number of builds allowed.\n\ncomputeTypesAllowed -> (list)\n\nAn array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the CodeBuild User Guide for these values.\n\n(string)\n\ntimeoutInMins -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the batch build must be completed in.\n\nbatchReportMode -> (string)\n\nSpecifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\nREPORT_AGGREGATED_BATCH\n\n(Default) Aggregate all of the build statuses into a single status report.\n\nREPORT_INDIVIDUAL_BUILDS\n\nSend a separate status report for each individual build.\n\nShorthand Syntax:\n\nserviceRole=string,combineArtifacts=boolean,restrictions={maximumBuildsAllowed=integer,computeTypesAllowed=[string,string]},timeoutInMins=integer,batchReportMode=string\n\n\nJSON Syntax:\n\n{\n  \"serviceRole\": \"string\",\n  \"combineArtifacts\": true|false,\n  \"restrictions\": {\n    \"maximumBuildsAllowed\": integer,\n    \"computeTypesAllowed\": [\"string\", ...]\n  },\n  \"timeoutInMins\": integer,\n  \"batchReportMode\": \"REPORT_INDIVIDUAL_BUILDS\"|\"REPORT_AGGREGATED_BATCH\"\n}\n\n\n--concurrent-build-limit (integer)\n\nThe maximum number of concurrent builds that are allowed for this project.\n\nNew builds are only started if the current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds are throttled and are not run.\n\nTo remove this limit, set this value to -1.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nproject -> (structure)\n\nInformation about the build project that was changed.\n\nname -> (string)\n\nThe name of the build project.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the build project.\n\ndescription -> (string)\n\nA description that makes the build project easy to identify.\n\nsource -> (structure)\n\nInformation about the build input source code for this build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsecondarySources -> (list)\n\nAn array of ProjectSource objects.\n\n(structure)\n\nInformation about the build input source code for the build project.\n\ntype -> (string)\n\nThe type of repository that contains the source code to be built. Valid values include:\n\nBITBUCKET : The source code is in a Bitbucket repository.\n\nCODECOMMIT : The source code is in an CodeCommit repository.\n\nCODEPIPELINE : The source code settings are specified in the source action of a pipeline in CodePipeline.\n\nGITHUB : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n\nGITHUB_ENTERPRISE : The source code is in a GitHub Enterprise Server repository.\n\nNO_SOURCE : The project does not have input source code.\n\nS3 : The source code is in an Amazon S3 bucket.\n\nlocation -> (string)\n\nInformation about the location of the source code to be built. Valid values include:\n\nFor source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline’s source action instead of this value.\n\nFor source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name> ).\n\nFor source code in an Amazon S3 input bucket, one of the following.\n\nThe path to the ZIP file that contains the source code (for example, <bucket-name>/<path>/<object-name>.zip ).\n\nThe path to the folder that contains the source code (for example, <bucket-name>/<path-to-source-code>/<folder>/ ).\n\nFor source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access , choose Request access next to each repository you want to allow CodeBuild to have access to, and then choose Authorize application . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nFor source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket Confirm access to your account page, choose Grant access . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the source object, set the auth object’s type value to OAUTH .\n\nIf you specify CODEPIPELINE for the Type property, don’t specify this property. For all of the other types, you must specify Location .\n\ngitCloneDepth -> (integer)\n\nInformation about the Git clone depth for the build project.\n\ngitSubmodulesConfig -> (structure)\n\nInformation about the Git submodules configuration for the build project.\n\nfetchSubmodules -> (boolean)\n\nSet to true to fetch Git submodules for your CodeBuild build project.\n\nbuildspec -> (string)\n\nThe buildspec file declaration to use for the builds in this build project.\n\nIf this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in CODEBUILD_SRC_DIR environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, arn:aws:s3:::my-codebuild-sample2/buildspec.yml ). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see Buildspec File Name and Storage Location .\n\nauth -> (structure)\n\nInformation about the authorization settings for CodeBuild to access the source code to be built.\n\nThis information is for the CodeBuild console’s use only. Your code should not get or set this information directly.\n\ntype -> (string)\n\nNote\n\nThis data type is deprecated and is no longer accurate or used.\n\nThe authorization type to use. The only valid value is OAUTH , which represents the OAuth authorization type.\n\nresource -> (string)\n\nThe resource value that applies to the specified authorization type.\n\nreportBuildStatus -> (boolean)\n\nSet to true to report the status of a build’s start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an invalidInputException is thrown.\n\nTo be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see Source provider access in the CodeBuild User Guide .\n\nThe status of a build triggered by a webhook is always reported to your source provider.\n\nIf your project’s builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.\n\nbuildStatusConfig -> (structure)\n\nContains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is GITHUB , GITHUB_ENTERPRISE , or BITBUCKET .\n\ncontext -> (string)\n\nSpecifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the name parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the context parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ntargetUrl -> (string)\n\nSpecifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.\n\nBitbucket\n\nThis parameter is used for the url parameter in the Bitbucket commit status. For more information, see build in the Bitbucket API documentation.\n\nGitHub/GitHub Enterprise Server\n\nThis parameter is used for the target_url parameter in the GitHub commit status. For more information, see Create a commit status in the GitHub developer guide.\n\ninsecureSsl -> (boolean)\n\nEnable this flag to ignore SSL warnings while connecting to the project source code.\n\nsourceIdentifier -> (string)\n\nAn identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nA version of the build input to be built for this project. If not specified, the latest version is used. If specified, it must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nIf sourceVersion is specified at the build level, then that version takes precedence over this sourceVersion (at the project level).\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nsecondarySourceVersions -> (list)\n\nAn array of ProjectSourceVersion objects. If secondarySourceVersions is specified at the build level, then they take over these secondarySourceVersions (at the project level).\n\n(structure)\n\nA source identifier and its corresponding version.\n\nsourceIdentifier -> (string)\n\nAn identifier for a source in the build project. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.\n\nsourceVersion -> (string)\n\nThe source version for the corresponding source identifier. If specified, must be one of:\n\nFor CodeCommit: the commit ID, branch, or Git tag to use.\n\nFor GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example, pr/25 ). If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch’s HEAD commit ID is used. If not specified, the default branch’s HEAD commit ID is used.\n\nFor Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see Source Version Sample with CodeBuild in the CodeBuild User Guide .\n\nartifacts -> (structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nsecondaryArtifacts -> (list)\n\nAn array of ProjectArtifacts objects.\n\n(structure)\n\nInformation about the build output artifacts for the build project.\n\ntype -> (string)\n\nThe type of build output artifact. Valid values include:\n\nCODEPIPELINE : The build project has build output generated through CodePipeline.\n\nNote\n\nThe CODEPIPELINE type is not supported for secondaryArtifacts .\n\nNO_ARTIFACTS : The build project does not produce any build output.\n\nS3 : The build project stores build output in Amazon S3.\n\nlocation -> (string)\n\nInformation about the build output artifact location:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output bucket.\n\npath -> (string)\n\nAlong with namespaceType and name , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the path to the output artifact. If path is not specified, path is not used.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to NONE , and name is set to MyArtifact.zip , the output artifact is stored in the output bucket at MyArtifacts/MyArtifact.zip .\n\nnamespaceType -> (string)\n\nAlong with path and name , the pattern that CodeBuild uses to determine the name and location to store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nBUILD_ID : Include the build ID in the location of the build output artifact.\n\nNONE : Do not include the build ID. This is the default if namespaceType is not specified.\n\nFor example, if path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nname -> (string)\n\nAlong with path and namespaceType , the pattern that CodeBuild uses to name and store the output artifact:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , this is the name of the output artifact object. If you set the name to be a forward slash (“/”), the artifact is stored in the root of the output bucket.\n\nFor example:\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to MyArtifact.zip , then the output artifact is stored in MyArtifacts/<build-ID>/MyArtifact.zip .\n\nIf path is empty, namespaceType is set to NONE , and name is set to “/ “, the output artifact is stored in the root of the output bucket.\n\nIf path is set to MyArtifacts , namespaceType is set to BUILD_ID , and name is set to “/ “, the output artifact is stored in MyArtifacts/<build-ID> .\n\npackaging -> (string)\n\nThe type of build output artifact to create:\n\nIf type is set to CODEPIPELINE , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of CodeBuild.\n\nIf type is set to NO_ARTIFACTS , this value is ignored if specified, because no build output is produced.\n\nIf type is set to S3 , valid values include:\n\nNONE : CodeBuild creates in the output bucket a folder that contains the build output. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates in the output bucket a ZIP file that contains the build output.\n\noverrideArtifactName -> (boolean)\n\nIf this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique.\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown.\n\nartifactIdentifier -> (string)\n\nAn identifier for this artifact definition.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\ncache -> (structure)\n\nInformation about the cache for the build project.\n\ntype -> (string)\n\nThe type of cache used by the build project. Valid values include:\n\nNO_CACHE : The build project does not use any cache.\n\nS3 : The build project reads and writes from and to S3.\n\nLOCAL : The build project stores a cache locally on a build host that is only available to that build host.\n\nlocation -> (string)\n\nInformation about the cache location:\n\nNO_CACHE or LOCAL : This value is ignored.\n\nS3 : This is the S3 bucket name/prefix.\n\nmodes -> (list)\n\nAn array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for LOCAL cache types.\n\nPossible values are:\n\nLOCAL_SOURCE_CACHE\n\nCaches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n\nLOCAL_DOCKER_LAYER_CACHE\n\nCaches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\nNote\n\nYou can use a Docker layer cache in the Linux environment only.\n\nThe privileged flag must be set so that your project has the required Docker permissions.\n\nYou should consider the security implications before you use a Docker layer cache.\n\nLOCAL_CUSTOM_CACHE\n\nCaches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\nOnly directories can be specified for caching. You cannot specify individual files.\n\nSymlinks are used to reference cached directories.\n\nCached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.\n\n(string)\n\nenvironment -> (structure)\n\nInformation about the build environment for this build project.\n\ntype -> (string)\n\nThe type of build environment to use for related builds.\n\nThe environment type ARM_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n\nThe environment type LINUX_CONTAINER with compute type build.general1.2xlarge is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n\nThe environment type LINUX_GPU_CONTAINER is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\nThe environment types WINDOWS_CONTAINER and WINDOWS_SERVER_2019_CONTAINER are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see Build environment compute types in the CodeBuild user guide .\n\nimage -> (string)\n\nThe image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:\n\nFor an image tag: <registry>/<repository>:<tag> . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be aws/codebuild/standard:4.0 .\n\nFor an image digest: <registry>/<repository>@<digest> . For example, to specify an image with the digest “sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,” use <registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf .\n\nFor more information, see Docker images provided by CodeBuild in the CodeBuild user guide .\n\ncomputeType -> (string)\n\nInformation about the compute resources the build project uses. Available values include:\n\nBUILD_GENERAL1_SMALL : Use up to 3 GB memory and 2 vCPUs for builds.\n\nBUILD_GENERAL1_MEDIUM : Use up to 7 GB memory and 4 vCPUs for builds.\n\nBUILD_GENERAL1_LARGE : Use up to 16 GB memory and 8 vCPUs for builds, depending on your environment type.\n\nBUILD_GENERAL1_2XLARGE : Use up to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB uncompressed.\n\nIf you use BUILD_GENERAL1_LARGE :\n\nFor environment type LINUX_CONTAINER , you can use up to 15 GB memory and 8 vCPUs for builds.\n\nFor environment type LINUX_GPU_CONTAINER , you can use up to 255 GB memory, 32 vCPUs, and 4 NVIDIA Tesla V100 GPUs for builds.\n\nFor environment type ARM_CONTAINER , you can use up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.\n\nFor more information, see Build Environment Compute Types in the CodeBuild User Guide.\n\nenvironmentVariables -> (list)\n\nA set of environment variables to make available to builds for this build project.\n\n(structure)\n\nInformation about an environment variable for a build project or a build.\n\nname -> (string)\n\nThe name or key of the environment variable.\n\nvalue -> (string)\n\nThe value of the environment variable.\n\nWarning\n\nWe strongly discourage the use of PLAINTEXT environment variables to store sensitive values, especially Amazon Web Services secret key IDs and secret access keys. PLAINTEXT environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type PARAMETER_STORE or SECRETS_MANAGER .\n\ntype -> (string)\n\nThe type of environment variable. Valid values include:\n\nPARAMETER_STORE : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see env/parameter-store in the CodeBuild User Guide .\n\nPLAINTEXT : An environment variable in plain text format. This is the default value.\n\nSECRETS_MANAGER : An environment variable stored in Secrets Manager. To learn how to specify a secrets manager environment variable, see env/secrets-manager in the CodeBuild User Guide .\n\nprivilegedMode -> (boolean)\n\nEnables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is false .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system’s base image is Ubuntu Linux:\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\nIf the operating system’s base image is Alpine Linux and the previous command does not work, add the -t argument to timeout :\n\n- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&\n\n- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n\ncertificate -> (string)\n\nThe ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see certificate in the CodeBuild User Guide .\n\nregistryCredential -> (structure)\n\nThe credentials for access to a private registry.\n\ncredential -> (string)\n\nThe Amazon Resource Name (ARN) or name of credentials created using Secrets Manager.\n\nNote\n\nThe credential can use the name of the credentials only if they exist in your current Amazon Web Services Region.\n\ncredentialProvider -> (string)\n\nThe service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for Secrets Manager.\n\nimagePullCredentialsType -> (string)\n\nThe type of credentials CodeBuild uses to pull images in your build. There are two valid values:\n\nCODEBUILD specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild service principal.\n\nSERVICE_ROLE specifies that CodeBuild uses your build project’s service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials.\n\nserviceRole -> (string)\n\nThe ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of the Amazon Web Services account.\n\ntimeoutInMinutes -> (integer)\n\nHow long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing out any related build that did not get marked as completed. The default is 60 minutes.\n\nqueuedTimeoutInMinutes -> (integer)\n\nThe number of minutes a build is allowed to be queued before it times out.\n\nencryptionKey -> (string)\n\nThe Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.\n\nNote\n\nYou can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK’s alias (using the format alias/<alias-name> ). If you don’t specify a value, CodeBuild uses the managed CMK for Amazon Simple Storage Service (Amazon S3).\n\ntags -> (list)\n\nA list of tag key and value pairs associated with this build project.\n\nThese tags are available for use by Amazon Web Services services that support CodeBuild build project tags.\n\n(structure)\n\nA tag, consisting of a key and a value.\n\nThis tag is available for use by Amazon Web Services services that support tags in CodeBuild.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\ncreated -> (timestamp)\n\nWhen the build project was created, expressed in Unix time format.\n\nlastModified -> (timestamp)\n\nWhen the build project’s settings were last modified, expressed in Unix time format.\n\nwebhook -> (structure)\n\nInformation about a webhook that connects repository events to a build project in CodeBuild.\n\nurl -> (string)\n\nThe URL to the webhook.\n\npayloadUrl -> (string)\n\nThe CodeBuild endpoint where webhook events are sent.\n\nsecret -> (string)\n\nThe secret token of the associated repository.\n\nNote\n\nA Bitbucket webhook does not support secret .\n\nbranchFilter -> (string)\n\nA regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If branchFilter is empty, then all branches are built.\n\nNote\n\nIt is recommended that you use filterGroups instead of branchFilter .\n\nfilterGroups -> (list)\n\nAn array of arrays of WebhookFilter objects used to determine which webhooks are triggered. At least one WebhookFilter in the array must specify EVENT as its type .\n\nFor a build to be triggered, at least one filter group in the filterGroups array must pass. For a filter group to pass, each of its filters must pass.\n\n(list)\n\n(structure)\n\nA filter used to determine which webhooks trigger a build.\n\ntype -> (string)\n\nThe type of webhook filter. There are six webhook filter types: EVENT , ACTOR_ACCOUNT_ID , HEAD_REF , BASE_REF , FILE_PATH , and COMMIT_MESSAGE .\n\nEVENT\n\nA webhook event triggers a build when the provided pattern matches one of five event types: PUSH , PULL_REQUEST_CREATED , PULL_REQUEST_UPDATED , PULL_REQUEST_REOPENED , and PULL_REQUEST_MERGED . The EVENT patterns are specified as a comma-separated string. For example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED filters all push, pull request created, and pull request updated events.\n\nNote\n\nThe PULL_REQUEST_REOPENED works with GitHub and GitHub Enterprise only.\n\nACTOR_ACCOUNT_ID\n\nA webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression pattern .\n\nHEAD_REF\n\nA webhook event triggers a build when the head reference matches the regular expression pattern . For example, refs/heads/branch-name and refs/tags/tag-name .\n\nWorks with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.\n\nBASE_REF\n\nA webhook event triggers a build when the base reference matches the regular expression pattern . For example, refs/heads/branch-name .\n\nNote\n\nWorks with pull request events only.\n\nFILE_PATH\n\nA webhook triggers a build when the path of a changed file matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\nCOMMIT_MESSAGE\n\nA webhook triggers a build when the head commit message matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\npattern -> (string)\n\nFor a WebHookFilter that uses EVENT type, a comma-separated string that specifies one or more events. For example, the webhook filter PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED allows all push, pull request created, and pull request updated events to trigger a build.\n\nFor a WebHookFilter that uses any of the other filter types, a regular expression pattern. For example, a WebHookFilter that uses HEAD_REF for its type and the pattern ^refs/heads/ triggers a build when the head reference is a branch with a reference name refs/heads/branch-name .\n\nexcludeMatchedPattern -> (boolean)\n\nUsed to indicate that the pattern determines which webhook events do not trigger a build. If true, then a webhook event that does not match the pattern triggers a build. If false, then a webhook event that matches the pattern triggers a build.\n\nbuildType -> (string)\n\nSpecifies the type of build this webhook will trigger.\n\nlastModifiedSecret -> (timestamp)\n\nA timestamp that indicates the last time a repository’s secret token was modified.\n\nvpcConfig -> (structure)\n\nInformation about the VPC configuration that CodeBuild accesses.\n\nvpcId -> (string)\n\nThe ID of the Amazon VPC.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your Amazon VPC.\n\n(string)\n\nsecurityGroupIds -> (list)\n\nA list of one or more security groups IDs in your Amazon VPC.\n\n(string)\n\nbadge -> (structure)\n\nInformation about the build badge for the build project.\n\nbadgeEnabled -> (boolean)\n\nSet this to true to generate a publicly accessible URL for your project’s build badge.\n\nbadgeRequestUrl -> (string)\n\nThe publicly-accessible URL through which you can access the build badge for your project.\n\nlogsConfig -> (structure)\n\nInformation about logs for the build project. A project can create logs in CloudWatch Logs, an S3 bucket, or both.\n\ncloudWatchLogs -> (structure)\n\nInformation about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default.\n\nstatus -> (string)\n\nThe current status of the logs in CloudWatch Logs for a build project. Valid values are:\n\nENABLED : CloudWatch Logs are enabled for this build project.\n\nDISABLED : CloudWatch Logs are not enabled for this build project.\n\ngroupName -> (string)\n\nThe group name of the logs in CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\nstreamName -> (string)\n\nThe prefix of the stream name of the CloudWatch Logs. For more information, see Working with Log Groups and Log Streams .\n\ns3Logs -> (structure)\n\nInformation about logs built to an S3 bucket for a build project. S3 logs are not enabled by default.\n\nstatus -> (string)\n\nThe current status of the S3 build logs. Valid values are:\n\nENABLED : S3 build logs are enabled for this build project.\n\nDISABLED : S3 build logs are not enabled for this build project.\n\nlocation -> (string)\n\nThe ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is my-bucket , and your path prefix is build-log , then acceptable formats are my-bucket/build-log or arn:aws:s3:::my-bucket/build-log .\n\nencryptionDisabled -> (boolean)\n\nSet to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted.\n\nbucketOwnerAccess -> (string)\n\nSpecifies the bucket owner’s access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.\n\nNote\n\nTo use this property, your CodeBuild service role must have the s3:PutBucketAcl permission. This permission allows CodeBuild to modify the access control list for the bucket.\n\nThis property can be one of the following values:\n\nNONE\n\nThe bucket owner does not have access to the objects. This is the default.\n\nREAD_ONLY\n\nThe bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.\n\nFULL\n\nThe bucket owner has full access to the objects. Object ownership is determined by the following criteria:\n\nIf the bucket is configured with the Bucket owner preferred setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket’s policy.\n\nOtherwise, the uploading account retains ownership of the objects.\n\nFor more information about Amazon S3 object ownership, see Controlling ownership of uploaded objects using S3 Object Ownership in the Amazon Simple Storage Service User Guide .\n\nfileSystemLocations -> (list)\n\nAn array of ProjectFileSystemLocation objects for a CodeBuild build project. A ProjectFileSystemLocation object specifies the identifier , location , mountOptions , mountPoint , and type of a file system created using Amazon Elastic File System.\n\n(structure)\n\nInformation about a file system created by Amazon Elastic File System (EFS). For more information, see What Is Amazon Elastic File System?\n\ntype -> (string)\n\nThe type of the file system. The one supported type is EFS .\n\nlocation -> (string)\n\nA string that specifies the location of the file system created by Amazon EFS. Its format is efs-dns-name:/directory-path . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is fs-abcd1234.efs.us-west-2.amazonaws.com , and its mount directory is my-efs-mount-directory , then the location is fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory .\n\nThe directory path in the format efs-dns-name:/directory-path is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.\n\nmountPoint -> (string)\n\nThe location in the container where you mount the file system.\n\nidentifier -> (string)\n\nThe name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the identifier in all capital letters to CODEBUILD_ . For example, if you specify my_efs for identifier , a new environment variable is create named CODEBUILD_MY_EFS .\n\nThe identifier is used to mount your file system.\n\nmountOptions -> (string)\n\nThe mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 . For more information, see Recommended NFS Mount Options .\n\nbuildBatchConfig -> (structure)\n\nA ProjectBuildBatchConfig object that defines the batch build options for the project.\n\nserviceRole -> (string)\n\nSpecifies the service role ARN for the batch build project.\n\ncombineArtifacts -> (boolean)\n\nSpecifies if the build artifacts for the batch build should be combined into a single artifact location.\n\nrestrictions -> (structure)\n\nA BatchRestrictions object that specifies the restrictions for the batch build.\n\nmaximumBuildsAllowed -> (integer)\n\nSpecifies the maximum number of builds allowed.\n\ncomputeTypesAllowed -> (list)\n\nAn array of strings that specify the compute types that are allowed for the batch build. See Build environment compute types in the CodeBuild User Guide for these values.\n\n(string)\n\ntimeoutInMins -> (integer)\n\nSpecifies the maximum amount of time, in minutes, that the batch build must be completed in.\n\nbatchReportMode -> (string)\n\nSpecifies how build status reports are sent to the source provider for the batch build. This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\nREPORT_AGGREGATED_BATCH\n\n(Default) Aggregate all of the build statuses into a single status report.\n\nREPORT_INDIVIDUAL_BUILDS\n\nSend a separate status report for each individual build.\n\nconcurrentBuildLimit -> (integer)\n\nThe maximum number of concurrent builds that are allowed for this project.\n\nNew builds are only started if the current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds are throttled and are not run.\n\nprojectVisibility -> (string)\n\nSpecifies the visibility of the project’s builds. Possible values are:\n\nPUBLIC_READ\n\nThe project builds are visible to the public.\n\nPRIVATE\n\nThe project builds are not visible to the public.\n\npublicProjectAlias -> (string)\n\nContains the project identifier used with the public build APIs.\n\nresourceAccessRole -> (string)\n\nThe ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project’s builds.",
      "command_examples": "Examples\n\nTo change an AWS CodeBuild build project’s settings.\n\nThe following update-project example changes the settings of the specified CodeBuild build project named my-demo-project.\n\naws codebuild update-project --name \"my-demo-project\" \\\n    --description \"This project is updated\" \\\n    --source \"{\\\"type\\\": \\\"S3\\\",\\\"location\\\": \\\"codebuild-us-west-2-123456789012-input-bucket/my-source-2.zip\\\"}\" \\\n    --artifacts {\"\\\"type\\\": \\\"S3\\\",\\\"location\\\": \\\"codebuild-us-west-2-123456789012-output-bucket-2\\\"\"} \\\n    --environment \"{\\\"type\\\": \\\"LINUX_CONTAINER\\\",\\\"image\\\": \\\"aws/codebuild/standard:1.0\\\",\\\"computeType\\\": \\\"BUILD_GENERAL1_MEDIUM\\\"}\" \\\n    --service-role \"arn:aws:iam::123456789012:role/service-role/my-codebuild-service-role\"\n\n\nThe output displays the updated settings.\n\n{\n    \"project\": {\n        \"arn\": \"arn:aws:codebuild:us-west-2:123456789012:project/my-demo-project\",\n        \"environment\": {\n            \"privilegedMode\": false,\n            \"environmentVariables\": [],\n            \"type\": \"LINUX_CONTAINER\",\n            \"image\": \"aws/codebuild/standard:1.0\",\n            \"computeType\": \"BUILD_GENERAL1_MEDIUM\",\n            \"imagePullCredentialsType\": \"CODEBUILD\"\n        },\n        \"queuedTimeoutInMinutes\": 480,\n        \"description\": \"This project is updated\",\n        \"artifacts\": {\n            \"packaging\": \"NONE\",\n            \"name\": \"my-demo-project\",\n            \"type\": \"S3\",\n            \"namespaceType\": \"NONE\",\n            \"encryptionDisabled\": false,\n            \"location\": \"codebuild-us-west-2-123456789012-output-bucket-2\"\n        },\n        \"encryptionKey\": \"arn:aws:kms:us-west-2:123456789012:alias/aws/s3\",\n        \"badge\": {\n            \"badgeEnabled\": false\n        },\n        \"serviceRole\": \"arn:aws:iam::123456789012:role/service-role/my-codebuild-service-role\",\n        \"lastModified\": 1556840545.967,\n        \"tags\": [],\n        \"timeoutInMinutes\": 60,\n        \"created\": 1556839783.274,\n        \"name\": \"my-demo-project\",\n        \"cache\": {\n            \"type\": \"NO_CACHE\"\n        },\n        \"source\": {\n            \"type\": \"S3\",\n            \"insecureSsl\": false,\n            \"location\": \"codebuild-us-west-2-123456789012-input-bucket/my-source-2.zip\"\n        }\n    }\n}\n\n\nFor more information, see Change a Build Project’s Settings (AWS CLI) in the AWS CodeBuild User Guide"
    },
    {
      "command_name": "update-project-visibility",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/update-project-visibility.html",
      "command_description": "Description\n\nChanges the public visibility for a project. The project’s build results, logs, and artifacts are available to the general public. For more information, see Public build projects in the CodeBuild User Guide .\n\nWarning\n\nThe following should be kept in mind when making your projects public:\n\nAll of a project’s build results, logs, and artifacts, including builds that were run when the project was private, are available to the general public.\n\nAll build logs and artifacts are available to the public. Environment variables, source code, and other sensitive information may have been output to the build logs and artifacts. You must be careful about what information is output to the build logs. Some best practice are:\n\nDo not store sensitive values, especially Amazon Web Services access key IDs and secret access keys, in environment variables. We recommend that you use an Amazon EC2 Systems Manager Parameter Store or Secrets Manager to store sensitive values.\n\nFollow Best practices for using webhooks in the CodeBuild User Guide to limit which entities can trigger a build, and do not store the buildspec in the project itself, to ensure that your webhooks are as secure as possible.\n\nA malicious user can use public builds to distribute malicious artifacts. We recommend that you review all pull requests to verify that the pull request is a legitimate change. We also recommend that you validate any artifacts with their checksums to make sure that the correct artifacts are being downloaded.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-project-visibility\n--project-arn <value>\n--project-visibility <value>\n[--resource-access-role <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-arn <value>",
        "--project-visibility <value>",
        "[--resource-access-role <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-arn (string)\n\nThe Amazon Resource Name (ARN) of the build project.\n\n--project-visibility (string)\n\nSpecifies the visibility of the project’s builds. Possible values are:\n\nPUBLIC_READ\n\nThe project builds are visible to the public.\n\nPRIVATE\n\nThe project builds are not visible to the public.\n\nPossible values:\n\nPUBLIC_READ\n\nPRIVATE\n\n--resource-access-role (string)\n\nThe ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project’s builds.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nprojectArn -> (string)\n\nThe Amazon Resource Name (ARN) of the build project.\n\npublicProjectAlias -> (string)\n\nContains the project identifier used with the public build APIs.\n\nprojectVisibility -> (string)\n\nSpecifies the visibility of the project’s builds. Possible values are:\n\nPUBLIC_READ\n\nThe project builds are visible to the public.\n\nPRIVATE\n\nThe project builds are not visible to the public."
    },
    {
      "command_name": "update-report-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/update-report-group.html",
      "command_description": "Description\n\nUpdates a report group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-report-group\n--arn <value>\n[--export-config <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--export-config <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe ARN of the report group to update.\n\n--export-config (structure)\n\nUsed to specify an updated export type. Valid values are:\n\nS3 : The report results are exported to an S3 bucket.\n\nNO_EXPORT : The report results are not exported.\n\nexportConfigType -> (string)\n\nThe export configuration type. Valid values are:\n\nS3 : The report results are exported to an S3 bucket.\n\nNO_EXPORT : The report results are not exported.\n\ns3Destination -> (structure)\n\nA S3ReportExportConfig object that contains information about the S3 bucket where the run of a report is exported.\n\nbucket -> (string)\n\nThe name of the S3 bucket where the raw data of a report are exported.\n\nbucketOwner -> (string)\n\nThe Amazon Web Services account identifier of the owner of the Amazon S3 bucket. This allows report data to be exported to an Amazon S3 bucket that is owned by an account other than the account running the build.\n\npath -> (string)\n\nThe path to the exported report’s raw data results.\n\npackaging -> (string)\n\nThe type of build output artifact to create. Valid values include:\n\nNONE : CodeBuild creates the raw data in the output bucket. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates a ZIP file with the raw data in the output bucket.\n\nencryptionKey -> (string)\n\nThe encryption key for the report’s encrypted raw data.\n\nencryptionDisabled -> (boolean)\n\nA boolean value that specifies if the results of a report are encrypted.\n\nShorthand Syntax:\n\nexportConfigType=string,s3Destination={bucket=string,bucketOwner=string,path=string,packaging=string,encryptionKey=string,encryptionDisabled=boolean}\n\n\nJSON Syntax:\n\n{\n  \"exportConfigType\": \"S3\"|\"NO_EXPORT\",\n  \"s3Destination\": {\n    \"bucket\": \"string\",\n    \"bucketOwner\": \"string\",\n    \"path\": \"string\",\n    \"packaging\": \"ZIP\"|\"NONE\",\n    \"encryptionKey\": \"string\",\n    \"encryptionDisabled\": true|false\n  }\n}\n\n\n--tags (list)\n\nAn updated list of tag key and value pairs associated with this report group.\n\nThese tags are available for use by Amazon Web Services services that support CodeBuild report group tags.\n\n(structure)\n\nA tag, consisting of a key and a value.\n\nThis tag is available for use by Amazon Web Services services that support tags in CodeBuild.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nreportGroup -> (structure)\n\nInformation about the updated report group.\n\narn -> (string)\n\nThe ARN of the ReportGroup .\n\nname -> (string)\n\nThe name of the ReportGroup .\n\ntype -> (string)\n\nThe type of the ReportGroup . This can be one of the following values:\n\nCODE_COVERAGE\n\nThe report group contains code coverage reports.\n\nTEST\n\nThe report group contains test reports.\n\nexportConfig -> (structure)\n\nInformation about the destination where the raw data of this ReportGroup is exported.\n\nexportConfigType -> (string)\n\nThe export configuration type. Valid values are:\n\nS3 : The report results are exported to an S3 bucket.\n\nNO_EXPORT : The report results are not exported.\n\ns3Destination -> (structure)\n\nA S3ReportExportConfig object that contains information about the S3 bucket where the run of a report is exported.\n\nbucket -> (string)\n\nThe name of the S3 bucket where the raw data of a report are exported.\n\nbucketOwner -> (string)\n\nThe Amazon Web Services account identifier of the owner of the Amazon S3 bucket. This allows report data to be exported to an Amazon S3 bucket that is owned by an account other than the account running the build.\n\npath -> (string)\n\nThe path to the exported report’s raw data results.\n\npackaging -> (string)\n\nThe type of build output artifact to create. Valid values include:\n\nNONE : CodeBuild creates the raw data in the output bucket. This is the default if packaging is not specified.\n\nZIP : CodeBuild creates a ZIP file with the raw data in the output bucket.\n\nencryptionKey -> (string)\n\nThe encryption key for the report’s encrypted raw data.\n\nencryptionDisabled -> (boolean)\n\nA boolean value that specifies if the results of a report are encrypted.\n\ncreated -> (timestamp)\n\nThe date and time this ReportGroup was created.\n\nlastModified -> (timestamp)\n\nThe date and time this ReportGroup was last modified.\n\ntags -> (list)\n\nA list of tag key and value pairs associated with this report group.\n\nThese tags are available for use by Amazon Web Services services that support CodeBuild report group tags.\n\n(structure)\n\nA tag, consisting of a key and a value.\n\nThis tag is available for use by Amazon Web Services services that support tags in CodeBuild.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nstatus -> (string)\n\nThe status of the report group. This property is read-only.\n\nThis can be one of the following values:\n\nACTIVE\n\nThe report group is active.\n\nDELETING\n\nThe report group is in the process of being deleted.",
      "command_examples": "Examples\n\nTo update a report group in AWS CodeBuild.\n\nThe following update-report-group example changes the export type of the report group to “NO_EXPORT”.\n\naws codebuild update-report-group \\\n    --arn arn:aws:codebuild:<region-ID>:<user-ID>:report-group/cli-created-report-group \\\n    --export-config=\"exportConfigType=NO_EXPORT\"\n\n\nOutput:\n\n{\n    \"reportGroup\": {\n        \"arn\": \"arn:aws:codebuild:<region-ID>:<user-ID>:report-group/cli-created-report-group\",\n        \"name\": \"cli-created-report-group\",\n        \"type\": \"TEST\",\n        \"exportConfig\": {\n            \"exportConfigType\": \"NO_EXPORT\"\n        },\n        \"created\": 1602020686.009,\n        \"lastModified\": 1602021033.454,\n        \"tags\": []\n    }\n}\n\n\nFor more information, see Working with report groups in the AWS CodeBuild User Guide."
    },
    {
      "command_name": "update-webhook",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codebuild/update-webhook.html",
      "command_description": "Description\n\nUpdates the webhook associated with an CodeBuild build project.\n\nNote\n\nIf you use Bitbucket for your repository, rotateSecret is ignored.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-webhook\n--project-name <value>\n[--branch-filter <value>]\n[--rotate-secret | --no-rotate-secret]\n[--filter-groups <value>]\n[--build-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--project-name <value>",
        "[--branch-filter <value>]",
        "[--rotate-secret | --no-rotate-secret]",
        "[--filter-groups <value>]",
        "[--build-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--project-name (string)\n\nThe name of the CodeBuild project.\n\n--branch-filter (string)\n\nA regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If branchFilter is empty, then all branches are built.\n\nNote\n\nIt is recommended that you use filterGroups instead of branchFilter .\n\n--rotate-secret | --no-rotate-secret (boolean)\n\nA boolean value that specifies whether the associated GitHub repository’s secret token should be updated. If you use Bitbucket for your repository, rotateSecret is ignored.\n\n--filter-groups (list)\n\nAn array of arrays of WebhookFilter objects used to determine if a webhook event can trigger a build. A filter group must contain at least one EVENT WebhookFilter .\n\n(list)\n\n(structure)\n\nA filter used to determine which webhooks trigger a build.\n\ntype -> (string)\n\nThe type of webhook filter. There are six webhook filter types: EVENT , ACTOR_ACCOUNT_ID , HEAD_REF , BASE_REF , FILE_PATH , and COMMIT_MESSAGE .\n\nEVENT\n\nA webhook event triggers a build when the provided pattern matches one of five event types: PUSH , PULL_REQUEST_CREATED , PULL_REQUEST_UPDATED , PULL_REQUEST_REOPENED , and PULL_REQUEST_MERGED . The EVENT patterns are specified as a comma-separated string. For example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED filters all push, pull request created, and pull request updated events.\n\nNote\n\nThe PULL_REQUEST_REOPENED works with GitHub and GitHub Enterprise only.\n\nACTOR_ACCOUNT_ID\n\nA webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression pattern .\n\nHEAD_REF\n\nA webhook event triggers a build when the head reference matches the regular expression pattern . For example, refs/heads/branch-name and refs/tags/tag-name .\n\nWorks with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.\n\nBASE_REF\n\nA webhook event triggers a build when the base reference matches the regular expression pattern . For example, refs/heads/branch-name .\n\nNote\n\nWorks with pull request events only.\n\nFILE_PATH\n\nA webhook triggers a build when the path of a changed file matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\nCOMMIT_MESSAGE\n\nA webhook triggers a build when the head commit message matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\npattern -> (string)\n\nFor a WebHookFilter that uses EVENT type, a comma-separated string that specifies one or more events. For example, the webhook filter PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED allows all push, pull request created, and pull request updated events to trigger a build.\n\nFor a WebHookFilter that uses any of the other filter types, a regular expression pattern. For example, a WebHookFilter that uses HEAD_REF for its type and the pattern ^refs/heads/ triggers a build when the head reference is a branch with a reference name refs/heads/branch-name .\n\nexcludeMatchedPattern -> (boolean)\n\nUsed to indicate that the pattern determines which webhook events do not trigger a build. If true, then a webhook event that does not match the pattern triggers a build. If false, then a webhook event that matches the pattern triggers a build.\n\nShorthand Syntax:\n\n[{type=string,pattern=string,excludeMatchedPattern=boolean},{type=string,pattern=string,excludeMatchedPattern=boolean}] ...\n\n\nJSON Syntax:\n\n[\n  [\n    {\n      \"type\": \"EVENT\"|\"BASE_REF\"|\"HEAD_REF\"|\"ACTOR_ACCOUNT_ID\"|\"FILE_PATH\"|\"COMMIT_MESSAGE\",\n      \"pattern\": \"string\",\n      \"excludeMatchedPattern\": true|false\n    }\n    ...\n  ]\n  ...\n]\n\n\n--build-type (string)\n\nSpecifies the type of build this webhook will trigger.\n\nPossible values:\n\nBUILD\n\nBUILD_BATCH\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nwebhook -> (structure)\n\nInformation about a repository’s webhook that is associated with a project in CodeBuild.\n\nurl -> (string)\n\nThe URL to the webhook.\n\npayloadUrl -> (string)\n\nThe CodeBuild endpoint where webhook events are sent.\n\nsecret -> (string)\n\nThe secret token of the associated repository.\n\nNote\n\nA Bitbucket webhook does not support secret .\n\nbranchFilter -> (string)\n\nA regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If branchFilter is empty, then all branches are built.\n\nNote\n\nIt is recommended that you use filterGroups instead of branchFilter .\n\nfilterGroups -> (list)\n\nAn array of arrays of WebhookFilter objects used to determine which webhooks are triggered. At least one WebhookFilter in the array must specify EVENT as its type .\n\nFor a build to be triggered, at least one filter group in the filterGroups array must pass. For a filter group to pass, each of its filters must pass.\n\n(list)\n\n(structure)\n\nA filter used to determine which webhooks trigger a build.\n\ntype -> (string)\n\nThe type of webhook filter. There are six webhook filter types: EVENT , ACTOR_ACCOUNT_ID , HEAD_REF , BASE_REF , FILE_PATH , and COMMIT_MESSAGE .\n\nEVENT\n\nA webhook event triggers a build when the provided pattern matches one of five event types: PUSH , PULL_REQUEST_CREATED , PULL_REQUEST_UPDATED , PULL_REQUEST_REOPENED , and PULL_REQUEST_MERGED . The EVENT patterns are specified as a comma-separated string. For example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED filters all push, pull request created, and pull request updated events.\n\nNote\n\nThe PULL_REQUEST_REOPENED works with GitHub and GitHub Enterprise only.\n\nACTOR_ACCOUNT_ID\n\nA webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression pattern .\n\nHEAD_REF\n\nA webhook event triggers a build when the head reference matches the regular expression pattern . For example, refs/heads/branch-name and refs/tags/tag-name .\n\nWorks with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.\n\nBASE_REF\n\nA webhook event triggers a build when the base reference matches the regular expression pattern . For example, refs/heads/branch-name .\n\nNote\n\nWorks with pull request events only.\n\nFILE_PATH\n\nA webhook triggers a build when the path of a changed file matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\nCOMMIT_MESSAGE\n\nA webhook triggers a build when the head commit message matches the regular expression pattern .\n\nNote\n\nWorks with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n\npattern -> (string)\n\nFor a WebHookFilter that uses EVENT type, a comma-separated string that specifies one or more events. For example, the webhook filter PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED allows all push, pull request created, and pull request updated events to trigger a build.\n\nFor a WebHookFilter that uses any of the other filter types, a regular expression pattern. For example, a WebHookFilter that uses HEAD_REF for its type and the pattern ^refs/heads/ triggers a build when the head reference is a branch with a reference name refs/heads/branch-name .\n\nexcludeMatchedPattern -> (boolean)\n\nUsed to indicate that the pattern determines which webhook events do not trigger a build. If true, then a webhook event that does not match the pattern triggers a build. If false, then a webhook event that matches the pattern triggers a build.\n\nbuildType -> (string)\n\nSpecifies the type of build this webhook will trigger.\n\nlastModifiedSecret -> (timestamp)\n\nA timestamp that indicates the last time a repository’s secret token was modified.",
      "command_examples": "Examples\n\nTo update the webhook for an AWS CodeBuild project\n\nThe following update-webhook example updates a webhook for the specified CodeBuild project with two filter groups. The --rotate-secret parameter specifies that GitHub rotate the project’s secret key every time a code change triggers a build. The first filter group specifies pull requests that are created, updated, or reopened on branches with Git reference names that match the regular expression ^refs/heads/master$ and head references that match ^refs/heads/myBranch$. The second filter group specifies push requests on branches with Git reference names that do not match the regular expression ^refs/heads/myBranch$.\n\naws codebuild update-webhook \\\n    --project-name Project2 \\\n    --rotate-secret \\\n    --filter-groups \"[[{\\\"type\\\":\\\"EVENT\\\",\\\"pattern\\\":\\\"PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED\\\"},{\\\"type\\\":\\\"HEAD_REF\\\",\\\"pattern\\\":\\\"^refs/heads/myBranch$\\\",\\\"excludeMatchedPattern\\\":true},{\\\"type\\\":\\\"BASE_REF\\\",\\\"pattern\\\":\\\"^refs/heads/master$\\\",\\\"excludeMatchedPattern\\\":true}],[{\\\"type\\\":\\\"EVENT\\\",\\\"pattern\\\":\\\"PUSH\\\"},{\\\"type\\\":\\\"HEAD_REF\\\",\\\"pattern\\\":\\\"^refs/heads/myBranch$\\\",\\\"excludeMatchedPattern\\\":true}]]\"\n\n\nOutput:\n\n{\n    \"webhook\": {\n        \"filterGroups\": [\n            [\n                {\n                    \"pattern\": \"PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED\",\n                    \"type\": \"EVENT\"\n                },\n                {\n                    \"excludeMatchedPattern\": true,\n                    \"pattern\": \"refs/heads/myBranch$\",\n                    \"type\": \"HEAD_REF\"\n                },\n                {\n                    \"excludeMatchedPattern\": true,\n                    \"pattern\": \"refs/heads/master$\",\n                    \"type\": \"BASE_REF\"\n                }\n            ],\n            [\n                {\n                    \"pattern\": \"PUSH\",\n                    \"type\": \"EVENT\"\n                },\n                {\n                    \"excludeMatchedPattern\": true,\n                    \"pattern\": \"refs/heads/myBranch$\",\n                    \"type\": \"HEAD_REF\"\n                }\n            ]\n        ],\n        \"lastModifiedSecret\": 1556312220.133\n    }\n}\n\n\nFor more information, see Change a Build Project’s Settings (AWS CLI) in the AWS CodeBuild User Guide"
    }
  ],
  "service_description": "Description\n\nCodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the * CodeBuild User Guide .*"
}