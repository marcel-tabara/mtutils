{
  "service_name": "application-insights",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/index.html",
  "service_commands": [
    {
      "command_name": "create-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/create-application.html",
      "command_description": "Description\n\nAdds an application that is created from a resource group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-application\n--resource-group-name <value>\n[--ops-center-enabled | --no-ops-center-enabled]\n[--cwe-monitor-enabled | --no-cwe-monitor-enabled]\n[--ops-item-sns-topic-arn <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "[--ops-center-enabled | --no-ops-center-enabled]",
        "[--cwe-monitor-enabled | --no-cwe-monitor-enabled]",
        "[--ops-item-sns-topic-arn <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--ops-center-enabled | --no-ops-center-enabled (boolean)\n\nWhen set to true , creates opsItems for any problems detected on an application.\n\n--cwe-monitor-enabled | --no-cwe-monitor-enabled (boolean)\n\nIndicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated , failed deployment , and others.\n\n--ops-item-sns-topic-arn (string)\n\nThe SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.\n\n--tags (list)\n\nList of tags to add to the application. tag key (Key ) and an associated tag value (Value ). The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.\n\n(structure)\n\nAn object that defines the tags associated with an application. A tag is a label that you optionally define and associate with an application. Tags can help you categorize and manage resources in different ways, such as by purpose, owner, environment, or other criteria.\n\nEach tag consists of a required tag key and an associated tag value , both of which you define. A tag key is a general label that acts as a category for a more specific tag value. A tag value acts as a descriptor within a tag key. A tag key can contain as many as 128 characters. A tag value can contain as many as 256 characters. The characters can be Unicode letters, digits, white space, or one of the following symbols: _ . : / = + -. The following additional restrictions apply to tags:\n\nTag keys and values are case sensitive.\n\nFor each associated resource, each tag key must be unique and it can have only one value.\n\nThe aws: prefix is reserved for use by AWS; you can’t use it in any tag keys or values that you define. In addition, you can’t edit or remove tag keys or values that use this prefix.\n\nKey -> (string)\n\nOne part of a key-value pair that defines a tag. The maximum length of a tag key is 128 characters. The minimum length is 1 character.\n\nValue -> (string)\n\nThe optional part of a key-value pair that defines a tag. The maximum length of a tag value is 256 characters. The minimum length is 0 characters. If you don’t want an application to have a specific tag value, don’t specify a value for this parameter.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationInfo -> (structure)\n\nInformation about the application.\n\nResourceGroupName -> (string)\n\nThe name of the resource group used for the application.\n\nLifeCycle -> (string)\n\nThe lifecycle of the application.\n\nOpsItemSNSTopicArn -> (string)\n\nThe SNS topic provided to Application Insights that is associated to the created opsItems to receive SNS notifications for opsItem updates.\n\nOpsCenterEnabled -> (boolean)\n\nIndicates whether Application Insights will create opsItems for any problem detected by Application Insights for an application.\n\nCWEMonitorEnabled -> (boolean)\n\nIndicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated , failed deployment , and others.\n\nRemarks -> (string)\n\nThe issues on the user side that block Application Insights from successfully monitoring an application. Example remarks include:\n\n“Configuring application, detected 1 Errors, 3 Warnings”\n\n“Configuring application, detected 1 Unconfigured Components”"
    },
    {
      "command_name": "create-component",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/create-component.html",
      "command_description": "Description\n\nCreates a custom component by grouping similar standalone instances to monitor.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-component\n--resource-group-name <value>\n--component-name <value>\n--resource-list <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--component-name <value>",
        "--resource-list <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--component-name (string)\n\nThe name of the component.\n\n--resource-list (list)\n\nThe list of resource ARNs that belong to the component.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-log-pattern",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/create-log-pattern.html",
      "command_description": "Description\n\nAdds an log pattern to a LogPatternSet .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-log-pattern\n--resource-group-name <value>\n--pattern-set-name <value>\n--pattern-name <value>\n--pattern <value>\n--rank <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--pattern-set-name <value>",
        "--pattern-name <value>",
        "--pattern <value>",
        "--rank <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--pattern-set-name (string)\n\nThe name of the log pattern set.\n\n--pattern-name (string)\n\nThe name of the log pattern.\n\n--pattern (string)\n\nThe log pattern. The pattern must be DFA compatible. Patterns that utilize forward lookahead or backreference constructions are not supported.\n\n--rank (integer)\n\nRank of the log pattern. Must be a value between 1 and 1,000,000 . The patterns are sorted by rank, so we recommend that you set your highest priority patterns with the lowest rank. A pattern of rank 1 will be the first to get matched to a log line. A pattern of rank 1,000,000 will be last to get matched. When you configure custom log patterns from the console, a Low severity pattern translates to a 750,000 rank. A Medium severity pattern translates to a 500,000 rank. And a High severity pattern translates to a 250,000 rank. Rank values less than 1 or greater than 1,000,000 are reserved for AWS-provided patterns.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLogPattern -> (structure)\n\nThe successfully created log pattern.\n\nPatternSetName -> (string)\n\nThe name of the log pattern. A log pattern name can contain as many as 30 characters, and it cannot be empty. The characters can be Unicode letters, digits, or one of the following symbols: period, dash, underscore.\n\nPatternName -> (string)\n\nThe name of the log pattern. A log pattern name can contain as many as 50 characters, and it cannot be empty. The characters can be Unicode letters, digits, or one of the following symbols: period, dash, underscore.\n\nPattern -> (string)\n\nA regular expression that defines the log pattern. A log pattern can contain as many as 50 characters, and it cannot be empty. The pattern must be DFA compatible. Patterns that utilize forward lookahead or backreference constructions are not supported.\n\nRank -> (integer)\n\nRank of the log pattern. Must be a value between 1 and 1,000,000 . The patterns are sorted by rank, so we recommend that you set your highest priority patterns with the lowest rank. A pattern of rank 1 will be the first to get matched to a log line. A pattern of rank 1,000,000 will be last to get matched. When you configure custom log patterns from the console, a Low severity pattern translates to a 750,000 rank. A Medium severity pattern translates to a 500,000 rank. And a High severity pattern translates to a 250,000 rank. Rank values less than 1 or greater than 1,000,000 are reserved for AWS-provided patterns.\n\nResourceGroupName -> (string)\n\nThe name of the resource group."
    },
    {
      "command_name": "delete-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/delete-application.html",
      "command_description": "Description\n\nRemoves the specified application from monitoring. Does not delete the application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-application\n--resource-group-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-component",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/delete-component.html",
      "command_description": "Description\n\nUngroups a custom component. When you ungroup custom components, all applicable monitors that are set up for the component are removed and the instances revert to their standalone status.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-component\n--resource-group-name <value>\n--component-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--component-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--component-name (string)\n\nThe name of the component.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-log-pattern",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/delete-log-pattern.html",
      "command_description": "Description\n\nRemoves the specified log pattern from a LogPatternSet .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-log-pattern\n--resource-group-name <value>\n--pattern-set-name <value>\n--pattern-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--pattern-set-name <value>",
        "--pattern-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--pattern-set-name (string)\n\nThe name of the log pattern set.\n\n--pattern-name (string)\n\nThe name of the log pattern.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/describe-application.html",
      "command_description": "Description\n\nDescribes the application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-application\n--resource-group-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationInfo -> (structure)\n\nInformation about the application.\n\nResourceGroupName -> (string)\n\nThe name of the resource group used for the application.\n\nLifeCycle -> (string)\n\nThe lifecycle of the application.\n\nOpsItemSNSTopicArn -> (string)\n\nThe SNS topic provided to Application Insights that is associated to the created opsItems to receive SNS notifications for opsItem updates.\n\nOpsCenterEnabled -> (boolean)\n\nIndicates whether Application Insights will create opsItems for any problem detected by Application Insights for an application.\n\nCWEMonitorEnabled -> (boolean)\n\nIndicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated , failed deployment , and others.\n\nRemarks -> (string)\n\nThe issues on the user side that block Application Insights from successfully monitoring an application. Example remarks include:\n\n“Configuring application, detected 1 Errors, 3 Warnings”\n\n“Configuring application, detected 1 Unconfigured Components”"
    },
    {
      "command_name": "describe-component",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/describe-component.html",
      "command_description": "Description\n\nDescribes a component and lists the resources that are grouped together in a component.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-component\n--resource-group-name <value>\n--component-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--component-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--component-name (string)\n\nThe name of the component.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationComponent -> (structure)\n\nDescribes a standalone resource or similarly grouped resources that the application is made up of.\n\nComponentName -> (string)\n\nThe name of the component.\n\nComponentRemarks -> (string)\n\nIf logging is supported for the resource type, indicates whether the component has configured logs to be monitored.\n\nResourceType -> (string)\n\nThe resource type. Supported resource types include EC2 instances, Auto Scaling group, Classic ELB, Application ELB, and SQS Queue.\n\nOsType -> (string)\n\nThe operating system of the component.\n\nTier -> (string)\n\nThe stack tier of the application component.\n\nMonitor -> (boolean)\n\nIndicates whether the application component is monitored.\n\nDetectedWorkload -> (map)\n\nWorkloads detected in the application component.\n\nkey -> (string)\n\nvalue -> (map)\n\nkey -> (string)\n\nvalue -> (string)\n\nResourceList -> (list)\n\nThe list of resource ARNs that belong to the component.\n\n(string)"
    },
    {
      "command_name": "describe-component-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/describe-component-configuration.html",
      "command_description": "Description\n\nDescribes the monitoring configuration of the component.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-component-configuration\n--resource-group-name <value>\n--component-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--component-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--component-name (string)\n\nThe name of the component.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMonitor -> (boolean)\n\nIndicates whether the application component is monitored.\n\nTier -> (string)\n\nThe tier of the application component. Supported tiers include DOT_NET_CORE , DOT_NET_WORKER , DOT_NET_WEB , SQL_SERVER , and DEFAULT\n\nComponentConfiguration -> (string)\n\nThe configuration settings of the component. The value is the escaped JSON of the configuration."
    },
    {
      "command_name": "describe-component-configuration-recommendation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/describe-component-configuration-recommendation.html",
      "command_description": "Description\n\nDescribes the recommended monitoring configuration of the component.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-component-configuration-recommendation\n--resource-group-name <value>\n--component-name <value>\n--tier <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--component-name <value>",
        "--tier <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--component-name (string)\n\nThe name of the component.\n\n--tier (string)\n\nThe tier of the application component. Supported tiers include DOT_NET_CORE , DOT_NET_WORKER , DOT_NET_WEB , SQL_SERVER , and DEFAULT .\n\nPossible values:\n\nCUSTOM\n\nDEFAULT\n\nDOT_NET_CORE\n\nDOT_NET_WORKER\n\nDOT_NET_WEB_TIER\n\nDOT_NET_WEB\n\nSQL_SERVER\n\nSQL_SERVER_ALWAYSON_AVAILABILITY_GROUP\n\nMYSQL\n\nPOSTGRESQL\n\nJAVA_JMX\n\nORACLE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nComponentConfiguration -> (string)\n\nThe recommended configuration settings of the component. The value is the escaped JSON of the configuration."
    },
    {
      "command_name": "describe-log-pattern",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/describe-log-pattern.html",
      "command_description": "Description\n\nDescribe a specific log pattern from a LogPatternSet .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-log-pattern\n--resource-group-name <value>\n--pattern-set-name <value>\n--pattern-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--pattern-set-name <value>",
        "--pattern-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--pattern-set-name (string)\n\nThe name of the log pattern set.\n\n--pattern-name (string)\n\nThe name of the log pattern.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceGroupName -> (string)\n\nThe name of the resource group.\n\nLogPattern -> (structure)\n\nThe successfully created log pattern.\n\nPatternSetName -> (string)\n\nThe name of the log pattern. A log pattern name can contain as many as 30 characters, and it cannot be empty. The characters can be Unicode letters, digits, or one of the following symbols: period, dash, underscore.\n\nPatternName -> (string)\n\nThe name of the log pattern. A log pattern name can contain as many as 50 characters, and it cannot be empty. The characters can be Unicode letters, digits, or one of the following symbols: period, dash, underscore.\n\nPattern -> (string)\n\nA regular expression that defines the log pattern. A log pattern can contain as many as 50 characters, and it cannot be empty. The pattern must be DFA compatible. Patterns that utilize forward lookahead or backreference constructions are not supported.\n\nRank -> (integer)\n\nRank of the log pattern. Must be a value between 1 and 1,000,000 . The patterns are sorted by rank, so we recommend that you set your highest priority patterns with the lowest rank. A pattern of rank 1 will be the first to get matched to a log line. A pattern of rank 1,000,000 will be last to get matched. When you configure custom log patterns from the console, a Low severity pattern translates to a 750,000 rank. A Medium severity pattern translates to a 500,000 rank. And a High severity pattern translates to a 250,000 rank. Rank values less than 1 or greater than 1,000,000 are reserved for AWS-provided patterns."
    },
    {
      "command_name": "describe-observation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/describe-observation.html",
      "command_description": "Description\n\nDescribes an anomaly or error with the application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-observation\n--observation-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--observation-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--observation-id (string)\n\nThe ID of the observation.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nObservation -> (structure)\n\nInformation about the observation.\n\nId -> (string)\n\nThe ID of the observation type.\n\nStartTime -> (timestamp)\n\nThe time when the observation was first detected, in epoch seconds.\n\nEndTime -> (timestamp)\n\nThe time when the observation ended, in epoch seconds.\n\nSourceType -> (string)\n\nThe source type of the observation.\n\nSourceARN -> (string)\n\nThe source resource ARN of the observation.\n\nLogGroup -> (string)\n\nThe log group name.\n\nLineTime -> (timestamp)\n\nThe timestamp in the CloudWatch Logs that specifies when the matched line occurred.\n\nLogText -> (string)\n\nThe log text of the observation.\n\nLogFilter -> (string)\n\nThe log filter of the observation.\n\nMetricNamespace -> (string)\n\nThe namespace of the observation metric.\n\nMetricName -> (string)\n\nThe name of the observation metric.\n\nUnit -> (string)\n\nThe unit of the source observation metric.\n\nValue -> (double)\n\nThe value of the source observation metric.\n\nCloudWatchEventId -> (string)\n\nThe ID of the CloudWatch Event-based observation related to the detected problem.\n\nCloudWatchEventSource -> (string)\n\nThe source of the CloudWatch Event.\n\nCloudWatchEventDetailType -> (string)\n\nThe detail type of the CloudWatch Event-based observation, for example, EC2 Instance State-change Notification .\n\nHealthEventArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Health Event-based observation.\n\nHealthService -> (string)\n\nThe service to which the AWS Health Event belongs, such as EC2.\n\nHealthEventTypeCode -> (string)\n\nThe type of the AWS Health event, for example, AWS_EC2_POWER_CONNECTIVITY_ISSUE .\n\nHealthEventTypeCategory -> (string)\n\nThe category of the AWS Health event, such as issue .\n\nHealthEventDescription -> (string)\n\nThe description of the AWS Health event provided by the service, such as Amazon EC2.\n\nCodeDeployDeploymentId -> (string)\n\nThe deployment ID of the CodeDeploy-based observation related to the detected problem.\n\nCodeDeployDeploymentGroup -> (string)\n\nThe deployment group to which the CodeDeploy deployment belongs.\n\nCodeDeployState -> (string)\n\nThe status of the CodeDeploy deployment, for example SUCCESS or FAILURE .\n\nCodeDeployApplication -> (string)\n\nThe CodeDeploy application to which the deployment belongs.\n\nCodeDeployInstanceGroupId -> (string)\n\nThe instance group to which the CodeDeploy instance belongs.\n\nEc2State -> (string)\n\nThe state of the instance, such as STOPPING or TERMINATING .\n\nRdsEventCategories -> (string)\n\nThe category of an RDS event.\n\nRdsEventMessage -> (string)\n\nThe message of an RDS event.\n\nS3EventName -> (string)\n\nThe name of the S3 CloudWatch Event-based observation.\n\nStatesExecutionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the step function execution-based observation.\n\nStatesArn -> (string)\n\nThe Amazon Resource Name (ARN) of the step function-based observation.\n\nStatesStatus -> (string)\n\nThe status of the step function-related observation.\n\nStatesInput -> (string)\n\nThe input to the step function-based observation.\n\nEbsEvent -> (string)\n\nThe type of EBS CloudWatch event, such as createVolume , deleteVolume or attachVolume .\n\nEbsResult -> (string)\n\nThe result of an EBS CloudWatch event, such as failed or succeeded .\n\nEbsCause -> (string)\n\nThe cause of an EBS CloudWatch event.\n\nEbsRequestId -> (string)\n\nThe request ID of an EBS CloudWatch event.\n\nXRayFaultPercent -> (integer)\n\nThe X-Ray request fault percentage for this node.\n\nXRayThrottlePercent -> (integer)\n\nThe X-Ray request throttle percentage for this node.\n\nXRayErrorPercent -> (integer)\n\nThe X-Ray request error percentage for this node.\n\nXRayRequestCount -> (integer)\n\nThe X-Ray request count for this node.\n\nXRayRequestAverageLatency -> (long)\n\nThe X-Ray node request average latency for this node.\n\nXRayNodeName -> (string)\n\nThe name of the X-Ray node.\n\nXRayNodeType -> (string)\n\nThe type of the X-Ray node."
    },
    {
      "command_name": "describe-problem",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/describe-problem.html",
      "command_description": "Description\n\nDescribes an application problem.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-problem\n--problem-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--problem-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--problem-id (string)\n\nThe ID of the problem.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nProblem -> (structure)\n\nInformation about the problem.\n\nId -> (string)\n\nThe ID of the problem.\n\nTitle -> (string)\n\nThe name of the problem.\n\nInsights -> (string)\n\nA detailed analysis of the problem using machine learning.\n\nStatus -> (string)\n\nThe status of the problem.\n\nAffectedResource -> (string)\n\nThe resource affected by the problem.\n\nStartTime -> (timestamp)\n\nThe time when the problem started, in epoch seconds.\n\nEndTime -> (timestamp)\n\nThe time when the problem ended, in epoch seconds.\n\nSeverityLevel -> (string)\n\nA measure of the level of impact of the problem.\n\nResourceGroupName -> (string)\n\nThe name of the resource group affected by the problem.\n\nFeedback -> (map)\n\nFeedback provided by the user about the problem.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "describe-problem-observations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/describe-problem-observations.html",
      "command_description": "Description\n\nDescribes the anomalies or errors associated with the problem.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-problem-observations\n--problem-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--problem-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--problem-id (string)\n\nThe ID of the problem.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRelatedObservations -> (structure)\n\nObservations related to the problem.\n\nObservationList -> (list)\n\nThe list of observations related to the problem.\n\n(structure)\n\nDescribes an anomaly or error with the application.\n\nId -> (string)\n\nThe ID of the observation type.\n\nStartTime -> (timestamp)\n\nThe time when the observation was first detected, in epoch seconds.\n\nEndTime -> (timestamp)\n\nThe time when the observation ended, in epoch seconds.\n\nSourceType -> (string)\n\nThe source type of the observation.\n\nSourceARN -> (string)\n\nThe source resource ARN of the observation.\n\nLogGroup -> (string)\n\nThe log group name.\n\nLineTime -> (timestamp)\n\nThe timestamp in the CloudWatch Logs that specifies when the matched line occurred.\n\nLogText -> (string)\n\nThe log text of the observation.\n\nLogFilter -> (string)\n\nThe log filter of the observation.\n\nMetricNamespace -> (string)\n\nThe namespace of the observation metric.\n\nMetricName -> (string)\n\nThe name of the observation metric.\n\nUnit -> (string)\n\nThe unit of the source observation metric.\n\nValue -> (double)\n\nThe value of the source observation metric.\n\nCloudWatchEventId -> (string)\n\nThe ID of the CloudWatch Event-based observation related to the detected problem.\n\nCloudWatchEventSource -> (string)\n\nThe source of the CloudWatch Event.\n\nCloudWatchEventDetailType -> (string)\n\nThe detail type of the CloudWatch Event-based observation, for example, EC2 Instance State-change Notification .\n\nHealthEventArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Health Event-based observation.\n\nHealthService -> (string)\n\nThe service to which the AWS Health Event belongs, such as EC2.\n\nHealthEventTypeCode -> (string)\n\nThe type of the AWS Health event, for example, AWS_EC2_POWER_CONNECTIVITY_ISSUE .\n\nHealthEventTypeCategory -> (string)\n\nThe category of the AWS Health event, such as issue .\n\nHealthEventDescription -> (string)\n\nThe description of the AWS Health event provided by the service, such as Amazon EC2.\n\nCodeDeployDeploymentId -> (string)\n\nThe deployment ID of the CodeDeploy-based observation related to the detected problem.\n\nCodeDeployDeploymentGroup -> (string)\n\nThe deployment group to which the CodeDeploy deployment belongs.\n\nCodeDeployState -> (string)\n\nThe status of the CodeDeploy deployment, for example SUCCESS or FAILURE .\n\nCodeDeployApplication -> (string)\n\nThe CodeDeploy application to which the deployment belongs.\n\nCodeDeployInstanceGroupId -> (string)\n\nThe instance group to which the CodeDeploy instance belongs.\n\nEc2State -> (string)\n\nThe state of the instance, such as STOPPING or TERMINATING .\n\nRdsEventCategories -> (string)\n\nThe category of an RDS event.\n\nRdsEventMessage -> (string)\n\nThe message of an RDS event.\n\nS3EventName -> (string)\n\nThe name of the S3 CloudWatch Event-based observation.\n\nStatesExecutionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the step function execution-based observation.\n\nStatesArn -> (string)\n\nThe Amazon Resource Name (ARN) of the step function-based observation.\n\nStatesStatus -> (string)\n\nThe status of the step function-related observation.\n\nStatesInput -> (string)\n\nThe input to the step function-based observation.\n\nEbsEvent -> (string)\n\nThe type of EBS CloudWatch event, such as createVolume , deleteVolume or attachVolume .\n\nEbsResult -> (string)\n\nThe result of an EBS CloudWatch event, such as failed or succeeded .\n\nEbsCause -> (string)\n\nThe cause of an EBS CloudWatch event.\n\nEbsRequestId -> (string)\n\nThe request ID of an EBS CloudWatch event.\n\nXRayFaultPercent -> (integer)\n\nThe X-Ray request fault percentage for this node.\n\nXRayThrottlePercent -> (integer)\n\nThe X-Ray request throttle percentage for this node.\n\nXRayErrorPercent -> (integer)\n\nThe X-Ray request error percentage for this node.\n\nXRayRequestCount -> (integer)\n\nThe X-Ray request count for this node.\n\nXRayRequestAverageLatency -> (long)\n\nThe X-Ray node request average latency for this node.\n\nXRayNodeName -> (string)\n\nThe name of the X-Ray node.\n\nXRayNodeType -> (string)\n\nThe type of the X-Ray node."
    },
    {
      "command_name": "list-applications",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/list-applications.html",
      "command_description": "Description\n\nLists the IDs of the applications that you are monitoring.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-applications\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nThe maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.\n\n--next-token (string)\n\nThe token to request the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationInfoList -> (list)\n\nThe list of applications.\n\n(structure)\n\nDescribes the status of the application.\n\nResourceGroupName -> (string)\n\nThe name of the resource group used for the application.\n\nLifeCycle -> (string)\n\nThe lifecycle of the application.\n\nOpsItemSNSTopicArn -> (string)\n\nThe SNS topic provided to Application Insights that is associated to the created opsItems to receive SNS notifications for opsItem updates.\n\nOpsCenterEnabled -> (boolean)\n\nIndicates whether Application Insights will create opsItems for any problem detected by Application Insights for an application.\n\nCWEMonitorEnabled -> (boolean)\n\nIndicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated , failed deployment , and others.\n\nRemarks -> (string)\n\nThe issues on the user side that block Application Insights from successfully monitoring an application. Example remarks include:\n\n“Configuring application, detected 1 Errors, 3 Warnings”\n\n“Configuring application, detected 1 Unconfigured Components”\n\nNextToken -> (string)\n\nThe token used to retrieve the next page of results. This value is null when there are no more results to return."
    },
    {
      "command_name": "list-components",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/list-components.html",
      "command_description": "Description\n\nLists the auto-grouped, standalone, and custom components of the application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-components\n--resource-group-name <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--max-results (integer)\n\nThe maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.\n\n--next-token (string)\n\nThe token to request the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationComponentList -> (list)\n\nThe list of application components.\n\n(structure)\n\nDescribes a standalone resource or similarly grouped resources that the application is made up of.\n\nComponentName -> (string)\n\nThe name of the component.\n\nComponentRemarks -> (string)\n\nIf logging is supported for the resource type, indicates whether the component has configured logs to be monitored.\n\nResourceType -> (string)\n\nThe resource type. Supported resource types include EC2 instances, Auto Scaling group, Classic ELB, Application ELB, and SQS Queue.\n\nOsType -> (string)\n\nThe operating system of the component.\n\nTier -> (string)\n\nThe stack tier of the application component.\n\nMonitor -> (boolean)\n\nIndicates whether the application component is monitored.\n\nDetectedWorkload -> (map)\n\nWorkloads detected in the application component.\n\nkey -> (string)\n\nvalue -> (map)\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe token to request the next page of results."
    },
    {
      "command_name": "list-configuration-history",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/list-configuration-history.html",
      "command_description": "Description\n\nLists the INFO, WARN, and ERROR events for periodic configuration updates performed by Application Insights. Examples of events represented are:\n\nINFO: creating a new alarm or updating an alarm threshold.\n\nWARN: alarm not created due to insufficient data points used to predict thresholds.\n\nERROR: alarm not created due to permission errors or exceeding quotas.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-configuration-history\n[--resource-group-name <value>]\n[--start-time <value>]\n[--end-time <value>]\n[--event-status <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--resource-group-name <value>]",
        "[--start-time <value>]",
        "[--end-time <value>]",
        "[--event-status <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nResource group to which the application belongs.\n\n--start-time (timestamp)\n\nThe start time of the event.\n\n--end-time (timestamp)\n\nThe end time of the event.\n\n--event-status (string)\n\nThe status of the configuration update event. Possible values include INFO, WARN, and ERROR.\n\nPossible values:\n\nINFO\n\nWARN\n\nERROR\n\n--max-results (integer)\n\nThe maximum number of results returned by ListConfigurationHistory in paginated output. When this parameter is used, ListConfigurationHistory returns only MaxResults in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another ListConfigurationHistory request with the returned NextToken value. If this parameter is not used, then ListConfigurationHistory returns all results.\n\n--next-token (string)\n\nThe NextToken value returned from a previous paginated ListConfigurationHistory request where MaxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the NextToken value. This value is null when there are no more results to return.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEventList -> (list)\n\nThe list of configuration events and their corresponding details.\n\n(structure)\n\nThe event information.\n\nMonitoredResourceARN -> (string)\n\nThe resource monitored by Application Insights.\n\nEventStatus -> (string)\n\nThe status of the configuration update event. Possible values include INFO, WARN, and ERROR.\n\nEventResourceType -> (string)\n\nThe resource type that Application Insights attempted to configure, for example, CLOUDWATCH_ALARM.\n\nEventTime -> (timestamp)\n\nThe timestamp of the event.\n\nEventDetail -> (string)\n\nThe details of the event in plain text.\n\nEventResourceName -> (string)\n\nThe name of the resource Application Insights attempted to configure.\n\nNextToken -> (string)\n\nThe NextToken value to include in a future ListConfigurationHistory request. When the results of a ListConfigurationHistory request exceed MaxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return."
    },
    {
      "command_name": "list-log-pattern-sets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/list-log-pattern-sets.html",
      "command_description": "Description\n\nLists the log pattern sets in the specific application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-log-pattern-sets\n--resource-group-name <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--max-results (integer)\n\nThe maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.\n\n--next-token (string)\n\nThe token to request the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceGroupName -> (string)\n\nThe name of the resource group.\n\nLogPatternSets -> (list)\n\nThe list of log pattern sets.\n\n(string)\n\nNextToken -> (string)\n\nThe token used to retrieve the next page of results. This value is null when there are no more results to return."
    },
    {
      "command_name": "list-log-patterns",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/list-log-patterns.html",
      "command_description": "Description\n\nLists the log patterns in the specific log LogPatternSet .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-log-patterns\n--resource-group-name <value>\n[--pattern-set-name <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "[--pattern-set-name <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--pattern-set-name (string)\n\nThe name of the log pattern set.\n\n--max-results (integer)\n\nThe maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.\n\n--next-token (string)\n\nThe token to request the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceGroupName -> (string)\n\nThe name of the resource group.\n\nLogPatterns -> (list)\n\nThe list of log patterns.\n\n(structure)\n\nAn object that defines the log patterns that belongs to a LogPatternSet .\n\nPatternSetName -> (string)\n\nThe name of the log pattern. A log pattern name can contain as many as 30 characters, and it cannot be empty. The characters can be Unicode letters, digits, or one of the following symbols: period, dash, underscore.\n\nPatternName -> (string)\n\nThe name of the log pattern. A log pattern name can contain as many as 50 characters, and it cannot be empty. The characters can be Unicode letters, digits, or one of the following symbols: period, dash, underscore.\n\nPattern -> (string)\n\nA regular expression that defines the log pattern. A log pattern can contain as many as 50 characters, and it cannot be empty. The pattern must be DFA compatible. Patterns that utilize forward lookahead or backreference constructions are not supported.\n\nRank -> (integer)\n\nRank of the log pattern. Must be a value between 1 and 1,000,000 . The patterns are sorted by rank, so we recommend that you set your highest priority patterns with the lowest rank. A pattern of rank 1 will be the first to get matched to a log line. A pattern of rank 1,000,000 will be last to get matched. When you configure custom log patterns from the console, a Low severity pattern translates to a 750,000 rank. A Medium severity pattern translates to a 500,000 rank. And a High severity pattern translates to a 250,000 rank. Rank values less than 1 or greater than 1,000,000 are reserved for AWS-provided patterns.\n\nNextToken -> (string)\n\nThe token used to retrieve the next page of results. This value is null when there are no more results to return."
    },
    {
      "command_name": "list-problems",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/list-problems.html",
      "command_description": "Description\n\nLists the problems with your application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-problems\n[--resource-group-name <value>]\n[--start-time <value>]\n[--end-time <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--resource-group-name <value>]",
        "[--start-time <value>]",
        "[--end-time <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--start-time (timestamp)\n\nThe time when the problem was detected, in epoch seconds. If you don’t specify a time frame for the request, problems within the past seven days are returned.\n\n--end-time (timestamp)\n\nThe time when the problem ended, in epoch seconds. If not specified, problems within the past seven days are returned.\n\n--max-results (integer)\n\nThe maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.\n\n--next-token (string)\n\nThe token to request the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nProblemList -> (list)\n\nThe list of problems.\n\n(structure)\n\nDescribes a problem that is detected by correlating observations.\n\nId -> (string)\n\nThe ID of the problem.\n\nTitle -> (string)\n\nThe name of the problem.\n\nInsights -> (string)\n\nA detailed analysis of the problem using machine learning.\n\nStatus -> (string)\n\nThe status of the problem.\n\nAffectedResource -> (string)\n\nThe resource affected by the problem.\n\nStartTime -> (timestamp)\n\nThe time when the problem started, in epoch seconds.\n\nEndTime -> (timestamp)\n\nThe time when the problem ended, in epoch seconds.\n\nSeverityLevel -> (string)\n\nA measure of the level of impact of the problem.\n\nResourceGroupName -> (string)\n\nThe name of the resource group affected by the problem.\n\nFeedback -> (map)\n\nFeedback provided by the user about the problem.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe token used to retrieve the next page of results. This value is null when there are no more results to return."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/list-tags-for-resource.html",
      "command_description": "Description\n\nRetrieve a list of the tags (keys and values) that are associated with a specified application. A tag is a label that you optionally define and associate with an application. Each tag consists of a required tag key and an optional associated tag value . A tag key is a general label that acts as a category for more specific tag values. A tag value acts as a descriptor within a tag key.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the application that you want to retrieve tag information for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nAn array that lists all the tags that are associated with the application. Each tag consists of a required tag key (Key ) and an associated tag value (Value ).\n\n(structure)\n\nAn object that defines the tags associated with an application. A tag is a label that you optionally define and associate with an application. Tags can help you categorize and manage resources in different ways, such as by purpose, owner, environment, or other criteria.\n\nEach tag consists of a required tag key and an associated tag value , both of which you define. A tag key is a general label that acts as a category for a more specific tag value. A tag value acts as a descriptor within a tag key. A tag key can contain as many as 128 characters. A tag value can contain as many as 256 characters. The characters can be Unicode letters, digits, white space, or one of the following symbols: _ . : / = + -. The following additional restrictions apply to tags:\n\nTag keys and values are case sensitive.\n\nFor each associated resource, each tag key must be unique and it can have only one value.\n\nThe aws: prefix is reserved for use by AWS; you can’t use it in any tag keys or values that you define. In addition, you can’t edit or remove tag keys or values that use this prefix.\n\nKey -> (string)\n\nOne part of a key-value pair that defines a tag. The maximum length of a tag key is 128 characters. The minimum length is 1 character.\n\nValue -> (string)\n\nThe optional part of a key-value pair that defines a tag. The maximum length of a tag value is 256 characters. The minimum length is 0 characters. If you don’t want an application to have a specific tag value, don’t specify a value for this parameter."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/tag-resource.html",
      "command_description": "Description\n\nAdd one or more tags (keys and values) to a specified application. A tag is a label that you optionally define and associate with an application. Tags can help you categorize and manage application in different ways, such as by purpose, owner, environment, or other criteria.\n\nEach tag consists of a required tag key and an associated tag value , both of which you define. A tag key is a general label that acts as a category for more specific tag values. A tag value acts as a descriptor within a tag key.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the application that you want to add one or more tags to.\n\n--tags (list)\n\nA list of tags that to add to the application. A tag consists of a required tag key (Key ) and an associated tag value (Value ). The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.\n\n(structure)\n\nAn object that defines the tags associated with an application. A tag is a label that you optionally define and associate with an application. Tags can help you categorize and manage resources in different ways, such as by purpose, owner, environment, or other criteria.\n\nEach tag consists of a required tag key and an associated tag value , both of which you define. A tag key is a general label that acts as a category for a more specific tag value. A tag value acts as a descriptor within a tag key. A tag key can contain as many as 128 characters. A tag value can contain as many as 256 characters. The characters can be Unicode letters, digits, white space, or one of the following symbols: _ . : / = + -. The following additional restrictions apply to tags:\n\nTag keys and values are case sensitive.\n\nFor each associated resource, each tag key must be unique and it can have only one value.\n\nThe aws: prefix is reserved for use by AWS; you can’t use it in any tag keys or values that you define. In addition, you can’t edit or remove tag keys or values that use this prefix.\n\nKey -> (string)\n\nOne part of a key-value pair that defines a tag. The maximum length of a tag key is 128 characters. The minimum length is 1 character.\n\nValue -> (string)\n\nThe optional part of a key-value pair that defines a tag. The maximum length of a tag value is 256 characters. The minimum length is 0 characters. If you don’t want an application to have a specific tag value, don’t specify a value for this parameter.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/untag-resource.html",
      "command_description": "Description\n\nRemove one or more tags (keys and values) from a specified application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the application that you want to remove one or more tags from.\n\n--tag-keys (list)\n\nThe tags (tag keys) that you want to remove from the resource. When you specify a tag key, the action removes both that key and its associated tag value.\n\nTo remove more than one tag from the application, append the TagKeys parameter and argument for each additional tag to remove, separated by an ampersand.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/update-application.html",
      "command_description": "Description\n\nUpdates the application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-application\n--resource-group-name <value>\n[--ops-center-enabled | --no-ops-center-enabled]\n[--cwe-monitor-enabled | --no-cwe-monitor-enabled]\n[--ops-item-sns-topic-arn <value>]\n[--remove-sns-topic | --no-remove-sns-topic]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "[--ops-center-enabled | --no-ops-center-enabled]",
        "[--cwe-monitor-enabled | --no-cwe-monitor-enabled]",
        "[--ops-item-sns-topic-arn <value>]",
        "[--remove-sns-topic | --no-remove-sns-topic]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--ops-center-enabled | --no-ops-center-enabled (boolean)\n\nWhen set to true , creates opsItems for any problems detected on an application.\n\n--cwe-monitor-enabled | --no-cwe-monitor-enabled (boolean)\n\nIndicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated , failed deployment , and others.\n\n--ops-item-sns-topic-arn (string)\n\nThe SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.\n\n--remove-sns-topic | --no-remove-sns-topic (boolean)\n\nDisassociates the SNS topic from the opsItem created for detected problems.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationInfo -> (structure)\n\nInformation about the application.\n\nResourceGroupName -> (string)\n\nThe name of the resource group used for the application.\n\nLifeCycle -> (string)\n\nThe lifecycle of the application.\n\nOpsItemSNSTopicArn -> (string)\n\nThe SNS topic provided to Application Insights that is associated to the created opsItems to receive SNS notifications for opsItem updates.\n\nOpsCenterEnabled -> (boolean)\n\nIndicates whether Application Insights will create opsItems for any problem detected by Application Insights for an application.\n\nCWEMonitorEnabled -> (boolean)\n\nIndicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated , failed deployment , and others.\n\nRemarks -> (string)\n\nThe issues on the user side that block Application Insights from successfully monitoring an application. Example remarks include:\n\n“Configuring application, detected 1 Errors, 3 Warnings”\n\n“Configuring application, detected 1 Unconfigured Components”"
    },
    {
      "command_name": "update-component",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/update-component.html",
      "command_description": "Description\n\nUpdates the custom component name and/or the list of resources that make up the component.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-component\n--resource-group-name <value>\n--component-name <value>\n[--new-component-name <value>]\n[--resource-list <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--component-name <value>",
        "[--new-component-name <value>]",
        "[--resource-list <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--component-name (string)\n\nThe name of the component.\n\n--new-component-name (string)\n\nThe new name of the component.\n\n--resource-list (list)\n\nThe list of resource ARNs that belong to the component.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-component-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/update-component-configuration.html",
      "command_description": "Description\n\nUpdates the monitoring configurations for the component. The configuration input parameter is an escaped JSON of the configuration and should match the schema of what is returned by DescribeComponentConfigurationRecommendation .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-component-configuration\n--resource-group-name <value>\n--component-name <value>\n[--monitor | --no-monitor]\n[--tier <value>]\n[--component-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--component-name <value>",
        "[--monitor | --no-monitor]",
        "[--tier <value>]",
        "[--component-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--component-name (string)\n\nThe name of the component.\n\n--monitor | --no-monitor (boolean)\n\nIndicates whether the application component is monitored.\n\n--tier (string)\n\nThe tier of the application component. Supported tiers include DOT_NET_WORKER , DOT_NET_WEB , DOT_NET_CORE , SQL_SERVER , and DEFAULT .\n\nPossible values:\n\nCUSTOM\n\nDEFAULT\n\nDOT_NET_CORE\n\nDOT_NET_WORKER\n\nDOT_NET_WEB_TIER\n\nDOT_NET_WEB\n\nSQL_SERVER\n\nSQL_SERVER_ALWAYSON_AVAILABILITY_GROUP\n\nMYSQL\n\nPOSTGRESQL\n\nJAVA_JMX\n\nORACLE\n\n--component-configuration (string)\n\nThe configuration settings of the component. The value is the escaped JSON of the configuration. For more information about the JSON format, see Working with JSON . You can send a request to DescribeComponentConfigurationRecommendation to see the recommended configuration for a component. For the complete format of the component configuration file, see Component Configuration .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-log-pattern",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/application-insights/update-log-pattern.html",
      "command_description": "Description\n\nAdds a log pattern to a LogPatternSet .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-log-pattern\n--resource-group-name <value>\n--pattern-set-name <value>\n--pattern-name <value>\n[--pattern <value>]\n[--rank <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-group-name <value>",
        "--pattern-set-name <value>",
        "--pattern-name <value>",
        "[--pattern <value>]",
        "[--rank <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-group-name (string)\n\nThe name of the resource group.\n\n--pattern-set-name (string)\n\nThe name of the log pattern set.\n\n--pattern-name (string)\n\nThe name of the log pattern.\n\n--pattern (string)\n\nThe log pattern. The pattern must be DFA compatible. Patterns that utilize forward lookahead or backreference constructions are not supported.\n\n--rank (integer)\n\nRank of the log pattern. Must be a value between 1 and 1,000,000 . The patterns are sorted by rank, so we recommend that you set your highest priority patterns with the lowest rank. A pattern of rank 1 will be the first to get matched to a log line. A pattern of rank 1,000,000 will be last to get matched. When you configure custom log patterns from the console, a Low severity pattern translates to a 750,000 rank. A Medium severity pattern translates to a 500,000 rank. And a High severity pattern translates to a 250,000 rank. Rank values less than 1 or greater than 1,000,000 are reserved for AWS-provided patterns.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceGroupName -> (string)\n\nThe name of the resource group.\n\nLogPattern -> (structure)\n\nThe successfully created log pattern.\n\nPatternSetName -> (string)\n\nThe name of the log pattern. A log pattern name can contain as many as 30 characters, and it cannot be empty. The characters can be Unicode letters, digits, or one of the following symbols: period, dash, underscore.\n\nPatternName -> (string)\n\nThe name of the log pattern. A log pattern name can contain as many as 50 characters, and it cannot be empty. The characters can be Unicode letters, digits, or one of the following symbols: period, dash, underscore.\n\nPattern -> (string)\n\nA regular expression that defines the log pattern. A log pattern can contain as many as 50 characters, and it cannot be empty. The pattern must be DFA compatible. Patterns that utilize forward lookahead or backreference constructions are not supported.\n\nRank -> (integer)\n\nRank of the log pattern. Must be a value between 1 and 1,000,000 . The patterns are sorted by rank, so we recommend that you set your highest priority patterns with the lowest rank. A pattern of rank 1 will be the first to get matched to a log line. A pattern of rank 1,000,000 will be last to get matched. When you configure custom log patterns from the console, a Low severity pattern translates to a 750,000 rank. A Medium severity pattern translates to a 500,000 rank. And a High severity pattern translates to a 250,000 rank. Rank values less than 1 or greater than 1,000,000 are reserved for AWS-provided patterns."
    }
  ],
  "service_description": "Description\n\nAmazon CloudWatch Application Insights is a service that helps you detect common problems with your applications. It enables you to pinpoint the source of issues in your applications (built with technologies such as Microsoft IIS, .NET, and Microsoft SQL Server), by providing key insights into detected problems.\n\nAfter you onboard your application, CloudWatch Application Insights identifies, recommends, and sets up metrics and logs. It continuously analyzes and correlates your metrics and logs for unusual behavior to surface actionable problems with your application. For example, if your application is slow and unresponsive and leading to HTTP 500 errors in your Application Load Balancer (ALB), Application Insights informs you that a memory pressure problem with your SQL Server database is occurring. It bases this analysis on impactful metrics and log errors."
}