{
  "service_name": "athena",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/index.html",
  "service_commands": [
    {
      "command_name": "batch-get-named-query",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/batch-get-named-query.html",
      "command_description": "Description\n\nReturns the details of a single named query or a list of up to 50 queries, which you provide as an array of query ID strings. Requires you to have access to the workgroup in which the queries were saved. Use ListNamedQueriesInput to get the list of named query IDs in the specified workgroup. If information could not be retrieved for a submitted query ID, information about the query ID submitted is listed under UnprocessedNamedQueryId . Named queries differ from executed queries. Use BatchGetQueryExecutionInput to get details about each unique query execution, and ListQueryExecutionsInput to get a list of query execution IDs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-named-query\n--named-query-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--named-query-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--named-query-ids (list)\n\nAn array of query IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNamedQueries -> (list)\n\nInformation about the named query IDs submitted.\n\n(structure)\n\nA query, where QueryString is the list of SQL query statements that comprise the query.\n\nName -> (string)\n\nThe query name.\n\nDescription -> (string)\n\nThe query description.\n\nDatabase -> (string)\n\nThe database to which the query belongs.\n\nQueryString -> (string)\n\nThe SQL query statements that comprise the query.\n\nNamedQueryId -> (string)\n\nThe unique identifier of the query.\n\nWorkGroup -> (string)\n\nThe name of the workgroup that contains the named query.\n\nUnprocessedNamedQueryIds -> (list)\n\nInformation about provided query IDs.\n\n(structure)\n\nInformation about a named query ID that could not be processed.\n\nNamedQueryId -> (string)\n\nThe unique identifier of the named query.\n\nErrorCode -> (string)\n\nThe error code returned when the processing request for the named query failed, if applicable.\n\nErrorMessage -> (string)\n\nThe error message returned when the processing request for the named query failed, if applicable.",
      "command_examples": "Examples\n\nTo return information about more than one query\n\nThe following batch-get-named-query example returns information about the named queries that have the specified IDs.\n\naws athena batch-get-named-query \\\n    --named-query-ids a1b2c3d4-5678-90ab-cdef-EXAMPLE11111 a1b2c3d4-5678-90ab-cdef-EXAMPLE22222 a1b2c3d4-5678-90ab-cdef-EXAMPLE33333\n\n\nOutput:\n\n{\n    \"NamedQueries\": [\n        {\n            \"Name\": \"Flights Select Query\",\n            \"Description\": \"Sample query to get the top 10 airports with the most number of departures since 2000\",\n            \"Database\": \"sampledb\",\n            \"QueryString\": \"SELECT origin, count(*) AS total_departures\\nFROM\\nflights_parquet\\nWHERE year >= '2000'\\nGROUP BY origin\\nORDER BY total_departures DESC\\nLIMIT 10;\",\n            \"NamedQueryId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n            \"WorkGroup\": \"primary\"\n        },\n        {\n            \"Name\": \"Load flights table partitions\",\n            \"Description\": \"Sample query to load flights table partitions using MSCK REPAIR TABLE statement\",\n            \"Database\": \"sampledb\",\n            \"QueryString\": \"MSCK REPAIR TABLE flights_parquet;\",\n            \"NamedQueryId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n            \"WorkGroup\": \"primary\"\n        },\n        {\n            \"Name\": \"CloudFront Select Query\",\n            \"Description\": \"Sample query to view requests per operating system during a particular time frame\",\n            \"Database\": \"sampledb\",\n            \"QueryString\": \"SELECT os, COUNT(*) count FROM cloudfront_logs WHERE date BETWEEN date '2014-07-05' AND date '2014-08-05' GROUP BY os;\",\n            \"NamedQueryId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE33333\",\n            \"WorkGroup\": \"primary\"\n        }\n    ],\n    \"UnprocessedNamedQueryIds\": []\n}\n\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide."
    },
    {
      "command_name": "batch-get-query-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/batch-get-query-execution.html",
      "command_description": "Description\n\nReturns the details of a single query execution or a list of up to 50 query executions, which you provide as an array of query execution ID strings. Requires you to have access to the workgroup in which the queries ran. To get a list of query execution IDs, use ListQueryExecutionsInput$WorkGroup . Query executions differ from named (saved) queries. Use BatchGetNamedQueryInput to get details about named queries.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-query-execution\n--query-execution-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--query-execution-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--query-execution-ids (list)\n\nAn array of query execution IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueryExecutions -> (list)\n\nInformation about a query execution.\n\n(structure)\n\nInformation about a single instance of a query execution.\n\nQueryExecutionId -> (string)\n\nThe unique identifier for each query execution.\n\nQuery -> (string)\n\nThe SQL query statements which the query execution ran.\n\nStatementType -> (string)\n\nThe type of query statement that was run. DDL indicates DDL query statements. DML indicates DML (Data Manipulation Language) query statements, such as CREATE TABLE AS SELECT . UTILITY indicates query statements other than DDL and DML, such as SHOW CREATE TABLE , or DESCRIBE TABLE .\n\nResultConfiguration -> (structure)\n\nThe location in Amazon S3 where query results were stored and the encryption option, if any, used for query results. These are known as “client-side settings”. If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup.\n\nOutputLocation -> (string)\n\nThe location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/ . To run the query, you must specify the query results location using one of the ways: either for individual queries using either this setting (client-side), or in the workgroup, using WorkGroupConfiguration . If none of them is set, Athena issues an error that no output location is provided. For more information, see Query Results . If workgroup settings override client-side settings, then the query uses the settings specified for the workgroup. See WorkGroupConfiguration$EnforceWorkGroupConfiguration .\n\nEncryptionConfiguration -> (structure)\n\nIf query results are encrypted in Amazon S3, indicates the encryption option used (for example, SSE-KMS or CSE-KMS ) and key information. This is a client-side setting. If workgroup settings override client-side settings, then the query uses the encryption configuration that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See WorkGroupConfiguration$EnforceWorkGroupConfiguration and Workgroup Settings Override Client-Side Settings .\n\nEncryptionOption -> (string)\n\nIndicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3 ), server-side encryption with KMS-managed keys (SSE-KMS ), or client-side encryption with KMS-managed keys (CSE-KMS) is used.\n\nIf a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup’s setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.\n\nKmsKey -> (string)\n\nFor SSE-KMS and CSE-KMS , this is the KMS key ARN or ID.\n\nQueryExecutionContext -> (structure)\n\nThe database in which the query execution occurred.\n\nDatabase -> (string)\n\nThe name of the database used in the query execution. The database must exist in the catalog.\n\nCatalog -> (string)\n\nThe name of the data catalog used in the query execution.\n\nStatus -> (structure)\n\nThe completion date, current state, submission time, and state change reason (if applicable) for the query execution.\n\nState -> (string)\n\nThe state of query execution. QUEUED indicates that the query has been submitted to the service, and Athena will execute the query as soon as resources are available. RUNNING indicates that the query is in execution phase. SUCCEEDED indicates that the query completed without errors. FAILED indicates that the query experienced an error and did not complete processing. CANCELLED indicates that a user input interrupted query execution.\n\nNote\n\nAthena automatically retries your queries in cases of certain transient errors. As a result, you may see the query state transition from RUNNING or FAILED to QUEUED .\n\nStateChangeReason -> (string)\n\nFurther detail about the status of the query.\n\nSubmissionDateTime -> (timestamp)\n\nThe date and time that the query was submitted.\n\nCompletionDateTime -> (timestamp)\n\nThe date and time that the query completed.\n\nStatistics -> (structure)\n\nQuery execution statistics, such as the amount of data scanned, the amount of time that the query took to process, and the type of statement that was run.\n\nEngineExecutionTimeInMillis -> (long)\n\nThe number of milliseconds that the query took to execute.\n\nDataScannedInBytes -> (long)\n\nThe number of bytes in the data that was queried.\n\nDataManifestLocation -> (string)\n\nThe location and file name of a data manifest file. The manifest file is saved to the Athena query results location in Amazon S3. The manifest file tracks files that the query wrote to Amazon S3. If the query fails, the manifest file also tracks files that the query intended to write. The manifest is useful for identifying orphaned files resulting from a failed query. For more information, see Working with Query Results, Output Files, and Query History in the Amazon Athena User Guide .\n\nTotalExecutionTimeInMillis -> (long)\n\nThe number of milliseconds that Athena took to run the query.\n\nQueryQueueTimeInMillis -> (long)\n\nThe number of milliseconds that the query was in your query queue waiting for resources. Note that if transient errors occur, Athena might automatically add the query back to the queue.\n\nQueryPlanningTimeInMillis -> (long)\n\nThe number of milliseconds that Athena took to plan the query processing flow. This includes the time spent retrieving table partitions from the data source. Note that because the query engine performs the query planning, query planning time is a subset of engine processing time.\n\nServiceProcessingTimeInMillis -> (long)\n\nThe number of milliseconds that Athena took to finalize and publish the query results after the query engine finished running the query.\n\nWorkGroup -> (string)\n\nThe name of the workgroup in which the query ran.\n\nEngineVersion -> (structure)\n\nThe engine version that executed the query.\n\nSelectedEngineVersion -> (string)\n\nThe engine version requested by the user. Possible values are determined by the output of ListEngineVersions , including Auto. The default is Auto.\n\nEffectiveEngineVersion -> (string)\n\nRead only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a CreateWorkGroup or UpdateWorkGroup operation, the EffectiveEngineVersion field is ignored.\n\nUnprocessedQueryExecutionIds -> (list)\n\nInformation about the query executions that failed to run.\n\n(structure)\n\nDescribes a query execution that failed to process.\n\nQueryExecutionId -> (string)\n\nThe unique identifier of the query execution.\n\nErrorCode -> (string)\n\nThe error code returned when the query execution failed to process, if applicable.\n\nErrorMessage -> (string)\n\nThe error message returned when the query execution failed to process, if applicable.",
      "command_examples": "Examples\n\nTo return information about one or more query executions\n\nThe following batch-get-query-execution example returns query execution information for the queries that have the specified query IDs.\n\naws athena batch-get-query-execution \\\n    --query-execution-ids a1b2c3d4-5678-90ab-cdef-EXAMPLE11111 a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\n\n\nOutput:\n\n{\n    \"QueryExecutions\": [\n        {\n            \"QueryExecutionId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n            \"Query\": \"create database if not exists webdata\",\n            \"StatementType\": \"DDL\",\n            \"ResultConfiguration\": {\n                \"OutputLocation\": \"s3://awsdoc-example-bucket/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111.txt\"\n            },\n            \"QueryExecutionContext\": {},\n            \"Status\": {\n                \"State\": \"SUCCEEDED\",\n                \"SubmissionDateTime\": 1593470720.592,\n                \"CompletionDateTime\": 1593470720.902\n            },\n            \"Statistics\": {\n                \"EngineExecutionTimeInMillis\": 232,\n                \"DataScannedInBytes\": 0,\n                \"TotalExecutionTimeInMillis\": 310,\n            \"ResultConfiguration\": {\n\n                \"QueryQueueTimeInMillis\": 50,\n                \"ServiceProcessingTimeInMillis\": 28\n            },\n            \"WorkGroup\": \"AthenaAdmin\"\n        },\n        {\n            \"QueryExecutionId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n            \"Query\": \"select date, location, browser, uri, status from cloudfront_logs where method = 'GET' and status = 200 and location like 'SFO%' limit 10\",\n            \"StatementType\": \"DML\",\n            \"ResultConfiguration\": {\n                \"OutputLocation\": \"s3://awsdoc-example-bucket/a1b2c3d4-5678-90ab-cdef-EXAMPLE22222.csv\"\n            },\n            \"QueryExecutionContext\": {\n                \"Database\": \"mydatabase\",\n                \"Catalog\": \"awsdatacatalog\"\n            },\n            \"Status\": {\n                \"State\": \"SUCCEEDED\",\n                \"SubmissionDateTime\": 1593469842.665,\n                \"CompletionDateTime\": 1593469846.486\n            },\n            \"Statistics\": {\n                \"EngineExecutionTimeInMillis\": 3600,\n                \"DataScannedInBytes\": 203089,\n                \"TotalExecutionTimeInMillis\": 3821,\n                \"QueryQueueTimeInMillis\": 267,\n                \"QueryPlanningTimeInMillis\": 1175\n            },\n            \"WorkGroup\": \"AthenaAdmin\"\n        }\n    ],\n    \"UnprocessedQueryExecutionIds\": []\n}\n\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide."
    },
    {
      "command_name": "create-data-catalog",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/create-data-catalog.html",
      "command_description": "Description\n\nCreates (registers) a data catalog with the specified name and properties. Catalogs created are visible to all users of the same Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-data-catalog\n--name <value>\n--type <value>\n[--description <value>]\n[--parameters <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--type <value>",
        "[--description <value>]",
        "[--parameters <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the data catalog to create. The catalog name must be unique for the Amazon Web Services account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters.\n\n--type (string)\n\nThe type of data catalog to create: LAMBDA for a federated catalog, HIVE for an external hive metastore, or GLUE for an Glue Data Catalog.\n\nPossible values:\n\nLAMBDA\n\nGLUE\n\nHIVE\n\n--description (string)\n\nA description of the data catalog to be created.\n\n--parameters (map)\n\nSpecifies the Lambda function or functions to use for creating the data catalog. This is a mapping whose values depend on the catalog type.\n\nFor the HIVE data catalog type, use the following syntax. The metadata-function parameter is required. The sdk-version parameter is optional and defaults to the currently supported version. ``metadata-function=*lambda_arn* , sdk-version=*version_number* ``\n\nFor the LAMBDA data catalog type, use one of the following sets of required parameters, but not both.\n\nIf you have one Lambda function that processes metadata and another for reading the actual data, use the following syntax. Both parameters are required. ``metadata-function=*lambda_arn* , record-function=*lambda_arn* ``\n\nIf you have a composite Lambda function that processes both metadata and data, use the following syntax to specify your Lambda function. ``function=*lambda_arn* ``\n\nThe GLUE type takes a catalog ID parameter and is required. The `` catalog_id `` is the account ID of the Amazon Web Services account to which the Glue Data Catalog belongs. ``catalog-id=*catalog_id* ``\n\nThe GLUE data catalog type also applies to the default AwsDataCatalog that already exists in your account, of which you can have only one and cannot modify.\n\nQueries that specify a Glue Data Catalog other than the default AwsDataCatalog must be run on Athena engine version 2.\n\nIn Regions where Athena engine version 2 is not available, creating new Glue data catalogs results in an INVALID_INPUT error.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--tags (list)\n\nA list of comma separated tags to add to the data catalog that is created.\n\n(structure)\n\nA label that you assign to a resource. In Athena, a resource can be a workgroup or data catalog. Each tag consists of a key and an optional value, both of which you define. For example, you can use tags to categorize Athena workgroups or data catalogs by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups or data catalogs in your account. For best practices, see Tagging Best Practices . Tag keys can be from 1 to 128 UTF-8 Unicode characters, and tag values can be from 0 to 256 UTF-8 Unicode characters. Tags can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one tag, separate them by commas.\n\nKey -> (string)\n\nA tag key. The tag key length is from 1 to 128 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys are case-sensitive and must be unique per resource.\n\nValue -> (string)\n\nA tag value. The tag value length is from 0 to 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag values are case-sensitive.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo create a data catalog\n\nThe following create-data-catalog example creates the dynamo_db_catalog data catalog.\n\naws athena create-data-catalog \\\n    --name dynamo_db_catalog \\\n    --type LAMBDA \\\n    --description \"DynamoDB Catalog\" \\\n    --parameters function=arn:aws:lambda:us-west-2:111122223333:function:dynamo_db_lambda\n\n\nThis command produces no output. To see the result, use aws athena get-data-catalog --name dynamo_db_catalog.\n\nFor more information, see Registering a Catalog: create-data-catalog in the Amazon Athena User Guide."
    },
    {
      "command_name": "create-named-query",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/create-named-query.html",
      "command_description": "Description\n\nCreates a named query in the specified workgroup. Requires that you have access to the workgroup.\n\nFor code samples using the Amazon Web Services SDK for Java, see Examples and Code Samples in the Amazon Athena User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-named-query\n--name <value>\n[--description <value>]\n--database <value>\n--query-string <value>\n[--client-request-token <value>]\n[--work-group <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--database <value>",
        "--query-string <value>",
        "[--client-request-token <value>]",
        "[--work-group <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe query name.\n\n--description (string)\n\nThe query description.\n\n--database (string)\n\nThe database to which the query belongs.\n\n--query-string (string)\n\nThe contents of the query with all query statements.\n\n--client-request-token (string)\n\nA unique case-sensitive string used to ensure the request to create the query is idempotent (executes only once). If another CreateNamedQuery request is received, the same response is returned and another query is not created. If a parameter has changed, for example, the QueryString , an error is returned.\n\nWarning\n\nThis token is listed as not required because Amazon Web Services SDKs (for example the Amazon Web Services SDK for Java) auto-generate the token for users. If you are not using the Amazon Web Services SDK or the Amazon Web Services CLI, you must provide this token or the action will fail.\n\n--work-group (string)\n\nThe name of the workgroup in which the named query is being created.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNamedQueryId -> (string)\n\nThe unique ID of the query.",
      "command_examples": "Examples\n\nTo create a named query\n\nThe following create-named-query example creates a saved query in the AthenaAdmin workgroup that queries the flights_parquet table for flights from Seattle to New York in January, 2016 whose departure and arrival were both delayed by more than ten minutes. Because the airport code values in the table are strings that include double quotes (for example, “SEA”), they are escaped by backslashes and surrounded by single quotes.\n\naws athena create-named-query \\\n    --name \"SEA to JFK delayed flights Jan 2016\" \\\n    --description \"Both arrival and departure delayed more than 10 minutes.\" \\\n    --database sampledb \\\n    --query-string \"SELECT flightdate, carrier, flightnum, origin, dest, depdelayminutes, arrdelayminutes FROM sampledb.flights_parquet WHERE yr = 2016 AND month = 1 AND origin = '\\\"SEA\\\"' AND dest = '\\\"JFK\\\"' AND depdelayminutes > 10 AND arrdelayminutes > 10\" \\\n    --work-group AthenaAdmin\n\n\nOutput:\n\n{\n    \"NamedQueryId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\"\n}\n\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide."
    },
    {
      "command_name": "create-prepared-statement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/create-prepared-statement.html",
      "command_description": "Description\n\nCreates a prepared statement for use with SQL queries in Athena.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-prepared-statement\n--statement-name <value>\n--work-group <value>\n--query-statement <value>\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--statement-name <value>",
        "--work-group <value>",
        "--query-statement <value>",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--statement-name (string)\n\nThe name of the prepared statement.\n\n--work-group (string)\n\nThe name of the workgroup to which the prepared statement belongs.\n\n--query-statement (string)\n\nThe query string for the prepared statement.\n\n--description (string)\n\nThe description of the prepared statement.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-work-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/create-work-group.html",
      "command_description": "Description\n\nCreates a workgroup with the specified name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-work-group\n--name <value>\n[--configuration <value>]\n[--description <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--configuration <value>]",
        "[--description <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe workgroup name.\n\n--configuration (structure)\n\nThe configuration for the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption configuration, if any, used for encrypting query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, the limit for the amount of bytes scanned (cutoff) per query, if it is specified, and whether workgroup’s settings (specified with EnforceWorkGroupConfiguration ) in the WorkGroupConfiguration override client-side settings. See WorkGroupConfiguration$EnforceWorkGroupConfiguration .\n\nResultConfiguration -> (structure)\n\nThe configuration for the workgroup, which includes the location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. To run the query, you must specify the query results location using one of the ways: either in the workgroup using this setting, or for individual queries (client-side), using ResultConfiguration$OutputLocation . If none of them is set, Athena issues an error that no output location is provided. For more information, see Query Results .\n\nOutputLocation -> (string)\n\nThe location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/ . To run the query, you must specify the query results location using one of the ways: either for individual queries using either this setting (client-side), or in the workgroup, using WorkGroupConfiguration . If none of them is set, Athena issues an error that no output location is provided. For more information, see Query Results . If workgroup settings override client-side settings, then the query uses the settings specified for the workgroup. See WorkGroupConfiguration$EnforceWorkGroupConfiguration .\n\nEncryptionConfiguration -> (structure)\n\nIf query results are encrypted in Amazon S3, indicates the encryption option used (for example, SSE-KMS or CSE-KMS ) and key information. This is a client-side setting. If workgroup settings override client-side settings, then the query uses the encryption configuration that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See WorkGroupConfiguration$EnforceWorkGroupConfiguration and Workgroup Settings Override Client-Side Settings .\n\nEncryptionOption -> (string)\n\nIndicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3 ), server-side encryption with KMS-managed keys (SSE-KMS ), or client-side encryption with KMS-managed keys (CSE-KMS) is used.\n\nIf a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup’s setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.\n\nKmsKey -> (string)\n\nFor SSE-KMS and CSE-KMS , this is the KMS key ARN or ID.\n\nEnforceWorkGroupConfiguration -> (boolean)\n\nIf set to “true”, the settings for the workgroup override client-side settings. If set to “false”, client-side settings are used. For more information, see Workgroup Settings Override Client-Side Settings .\n\nPublishCloudWatchMetricsEnabled -> (boolean)\n\nIndicates that the Amazon CloudWatch metrics are enabled for the workgroup.\n\nBytesScannedCutoffPerQuery -> (long)\n\nThe upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan.\n\nRequesterPaysEnabled -> (boolean)\n\nIf set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see Requester Pays Buckets in the Amazon Simple Storage Service Developer Guide .\n\nEngineVersion -> (structure)\n\nThe engine version that all queries running on the workgroup use. Queries on the AmazonAthenaPreviewFunctionality workgroup run on the preview engine regardless of this setting.\n\nSelectedEngineVersion -> (string)\n\nThe engine version requested by the user. Possible values are determined by the output of ListEngineVersions , including Auto. The default is Auto.\n\nEffectiveEngineVersion -> (string)\n\nRead only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a CreateWorkGroup or UpdateWorkGroup operation, the EffectiveEngineVersion field is ignored.\n\nShorthand Syntax:\n\nResultConfiguration={OutputLocation=string,EncryptionConfiguration={EncryptionOption=string,KmsKey=string}},EnforceWorkGroupConfiguration=boolean,PublishCloudWatchMetricsEnabled=boolean,BytesScannedCutoffPerQuery=long,RequesterPaysEnabled=boolean,EngineVersion={SelectedEngineVersion=string,EffectiveEngineVersion=string}\n\n\nJSON Syntax:\n\n{\n  \"ResultConfiguration\": {\n    \"OutputLocation\": \"string\",\n    \"EncryptionConfiguration\": {\n      \"EncryptionOption\": \"SSE_S3\"|\"SSE_KMS\"|\"CSE_KMS\",\n      \"KmsKey\": \"string\"\n    }\n  },\n  \"EnforceWorkGroupConfiguration\": true|false,\n  \"PublishCloudWatchMetricsEnabled\": true|false,\n  \"BytesScannedCutoffPerQuery\": long,\n  \"RequesterPaysEnabled\": true|false,\n  \"EngineVersion\": {\n    \"SelectedEngineVersion\": \"string\",\n    \"EffectiveEngineVersion\": \"string\"\n  }\n}\n\n\n--description (string)\n\nThe workgroup description.\n\n--tags (list)\n\nA list of comma separated tags to add to the workgroup that is created.\n\n(structure)\n\nA label that you assign to a resource. In Athena, a resource can be a workgroup or data catalog. Each tag consists of a key and an optional value, both of which you define. For example, you can use tags to categorize Athena workgroups or data catalogs by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups or data catalogs in your account. For best practices, see Tagging Best Practices . Tag keys can be from 1 to 128 UTF-8 Unicode characters, and tag values can be from 0 to 256 UTF-8 Unicode characters. Tags can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one tag, separate them by commas.\n\nKey -> (string)\n\nA tag key. The tag key length is from 1 to 128 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys are case-sensitive and must be unique per resource.\n\nValue -> (string)\n\nA tag value. The tag value length is from 0 to 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag values are case-sensitive.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo create a workgroup\n\nThe following create-work-group example creates a workgroup called Data_Analyst_Group that has the query results output location s3://awsdoc-example-bucket. The command creates a workgroup that overrides client configuration settings, which includes the query results output location. The command also enables CloudWatch metrics and adds three key-value tag pairs to the workgroup to distinguish it from other workgroups. Note that the --configuration argument has no spaces before the commas that separate its options.\n\naws athena create-work-group \\\n    --name Data_Analyst_Group \\\n    --configuration ResultConfiguration={OutputLocation=\"s3://awsdoc-example-bucket\"},EnforceWorkGroupConfiguration=\"true\",PublishCloudWatchMetricsEnabled=\"true\" \\\n    --description \"Workgroup for data analysts\" \\\n    --tags Key=Division,Value=West Key=Location,Value=Seattle Key=Team,Value=\"Big Data\"\n\n\nThis command produces no output. To see the results, use aws athena get-work-group --work-group Data_Analyst_Group.\n\nFor more information, see Managing Workgroups in the Amazon Athena User Guide."
    },
    {
      "command_name": "delete-data-catalog",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/delete-data-catalog.html",
      "command_description": "Description\n\nDeletes a data catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-data-catalog\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the data catalog to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a data catalog\n\nThe following delete-data-catalog example deletes the UnusedDataCatalog data catalog.\n\naws athena delete-data-catalog \\\n    --name UnusedDataCatalog\n\n\nThis command produces no output.\n\nFor more information, see Deleting a Catalog: delete-data-catalog in the Amazon Athena User Guide."
    },
    {
      "command_name": "delete-named-query",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/delete-named-query.html",
      "command_description": "Description\n\nDeletes the named query if you have access to the workgroup in which the query was saved.\n\nFor code samples using the Amazon Web Services SDK for Java, see Examples and Code Samples in the Amazon Athena User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-named-query\n[--named-query-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--named-query-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--named-query-id (string)\n\nThe unique ID of the query to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a named query\n\nThe following delete-named-query example deletes the named query that has the specified ID.\n\naws athena delete-named-query \\\n    --named-query-id a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\n\n\nThis command produces no output.\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide."
    },
    {
      "command_name": "delete-prepared-statement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/delete-prepared-statement.html",
      "command_description": "Description\n\nDeletes the prepared statement with the specified name from the specified workgroup.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-prepared-statement\n--statement-name <value>\n--work-group <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--statement-name <value>",
        "--work-group <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--statement-name (string)\n\nThe name of the prepared statement to delete.\n\n--work-group (string)\n\nThe workgroup to which the statement to be deleted belongs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-work-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/delete-work-group.html",
      "command_description": "Description\n\nDeletes the workgroup with the specified name. The primary workgroup cannot be deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-work-group\n--work-group <value>\n[--recursive-delete-option | --no-recursive-delete-option]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--work-group <value>",
        "[--recursive-delete-option | --no-recursive-delete-option]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--work-group (string)\n\nThe unique name of the workgroup to delete.\n\n--recursive-delete-option | --no-recursive-delete-option (boolean)\n\nThe option to delete the workgroup and its contents even if the workgroup contains any named queries or query executions.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a workgroup\n\nThe following delete-work-group example deletes the TeamB workgroup.\n\naws athena delete-work-group \\\n    --work-group TeamB\n\n\nThis command produces no output. To confirm the deletion, use aws athena list-work-groups.\n\nFor more information, see Managing Workgroups in the Amazon Athena User Guide."
    },
    {
      "command_name": "get-data-catalog",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/get-data-catalog.html",
      "command_description": "Description\n\nReturns the specified data catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-data-catalog\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the data catalog to return.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDataCatalog -> (structure)\n\nThe data catalog returned.\n\nName -> (string)\n\nThe name of the data catalog. The catalog name must be unique for the Amazon Web Services account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters.\n\nDescription -> (string)\n\nAn optional description of the data catalog.\n\nType -> (string)\n\nThe type of data catalog to create: LAMBDA for a federated catalog, HIVE for an external hive metastore, or GLUE for an Glue Data Catalog.\n\nParameters -> (map)\n\nSpecifies the Lambda function or functions to use for the data catalog. This is a mapping whose values depend on the catalog type.\n\nFor the HIVE data catalog type, use the following syntax. The metadata-function parameter is required. The sdk-version parameter is optional and defaults to the currently supported version. ``metadata-function=*lambda_arn* , sdk-version=*version_number* ``\n\nFor the LAMBDA data catalog type, use one of the following sets of required parameters, but not both.\n\nIf you have one Lambda function that processes metadata and another for reading the actual data, use the following syntax. Both parameters are required. ``metadata-function=*lambda_arn* , record-function=*lambda_arn* ``\n\nIf you have a composite Lambda function that processes both metadata and data, use the following syntax to specify your Lambda function. ``function=*lambda_arn* ``\n\nThe GLUE type takes a catalog ID parameter and is required. The `` catalog_id `` is the account ID of the Amazon Web Services account to which the Glue catalog belongs. ``catalog-id=*catalog_id* ``\n\nThe GLUE data catalog type also applies to the default AwsDataCatalog that already exists in your account, of which you can have only one and cannot modify.\n\nQueries that specify a Glue Data Catalog other than the default AwsDataCatalog must be run on Athena engine version 2.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo return information about a data catalog\n\nThe following get-data-catalog example returns information about the dynamo_db_catalog data catalog.\n\naws athena get-data-catalog \\\n    --name dynamo_db_catalog\n\n\nOutput:\n\n{\n    \"DataCatalog\": {\n        \"Name\": \"dynamo_db_catalog\",\n        \"Description\": \"DynamoDB Catalog\",\n        \"Type\": \"LAMBDA\",\n        \"Parameters\": {\n            \"catalog\": \"dynamo_db_catalog\",\n            \"metadata-function\": \"arn:aws:lambda:us-west-2:111122223333:function:dynamo_db_lambda\",\n            \"record-function\": \"arn:aws:lambda:us-west-2:111122223333:function:dynamo_db_lambda\"\n        }\n    }\n}\n\n\nFor more information, see Showing Catalog Details: get-data-catalog in the Amazon Athena User Guide."
    },
    {
      "command_name": "get-database",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/get-database.html",
      "command_description": "Description\n\nReturns a database object for the specified database and data catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-database\n--catalog-name <value>\n--database-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--catalog-name <value>",
        "--database-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-name (string)\n\nThe name of the data catalog that contains the database to return.\n\n--database-name (string)\n\nThe name of the database to return.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatabase -> (structure)\n\nThe database returned.\n\nName -> (string)\n\nThe name of the database.\n\nDescription -> (string)\n\nAn optional description of the database.\n\nParameters -> (map)\n\nA set of custom key/value pairs.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo return information about a database in a data catalog\n\nThe following get-database example returns information about the sampledb database in the AwsDataCatalog data catalog.\n\naws athena get-database \\\n    --catalog-name AwsDataCatalog \\\n    --database-name sampledb\n\n\nOutput:\n\n{\n    \"Database\": {\n        \"Name\": \"sampledb\",\n        \"Description\": \"Sample database\",\n        \"Parameters\": {\n            \"CreatedBy\": \"Athena\",\n            \"EXTERNAL\": \"TRUE\"\n        }\n    }\n}\n\n\nFor more information, see Showing Database Details: get-database in the Amazon Athena User Guide."
    },
    {
      "command_name": "get-named-query",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/get-named-query.html",
      "command_description": "Description\n\nReturns information about a single query. Requires that you have access to the workgroup in which the query was saved.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-named-query\n--named-query-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--named-query-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--named-query-id (string)\n\nThe unique ID of the query. Use ListNamedQueries to get query IDs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNamedQuery -> (structure)\n\nInformation about the query.\n\nName -> (string)\n\nThe query name.\n\nDescription -> (string)\n\nThe query description.\n\nDatabase -> (string)\n\nThe database to which the query belongs.\n\nQueryString -> (string)\n\nThe SQL query statements that comprise the query.\n\nNamedQueryId -> (string)\n\nThe unique identifier of the query.\n\nWorkGroup -> (string)\n\nThe name of the workgroup that contains the named query.",
      "command_examples": "Examples\n\nTo return a named query\n\nThe following get-named-query example returns information about the query that has the specified ID.\n\naws athena get-named-query \\\n    --named-query-id a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\n\n\nOutput:\n\n{\n    \"NamedQuery\": {\n        \"Name\": \"CloudFront Logs - SFO\",\n        \"Description\": \"Shows successful GET request data for SFO\",\n        \"Database\": \"default\",\n        \"QueryString\": \"select date, location, browser, uri, status from cloudfront_logs where method = 'GET' and status = 200 and location like 'SFO%' limit 10\",\n        \"NamedQueryId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n        \"WorkGroup\": \"AthenaAdmin\"\n    }\n}\n\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide."
    },
    {
      "command_name": "get-prepared-statement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/get-prepared-statement.html",
      "command_description": "Description\n\nRetrieves the prepared statement with the specified name from the specified workgroup.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-prepared-statement\n--statement-name <value>\n--work-group <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--statement-name <value>",
        "--work-group <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--statement-name (string)\n\nThe name of the prepared statement to retrieve.\n\n--work-group (string)\n\nThe workgroup to which the statement to be retrieved belongs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPreparedStatement -> (structure)\n\nThe name of the prepared statement that was retrieved.\n\nStatementName -> (string)\n\nThe name of the prepared statement.\n\nQueryStatement -> (string)\n\nThe query string for the prepared statement.\n\nWorkGroupName -> (string)\n\nThe name of the workgroup to which the prepared statement belongs.\n\nDescription -> (string)\n\nThe description of the prepared statement.\n\nLastModifiedTime -> (timestamp)\n\nThe last modified time of the prepared statement."
    },
    {
      "command_name": "get-query-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/get-query-execution.html",
      "command_description": "Description\n\nReturns information about a single execution of a query if you have access to the workgroup in which the query ran. Each time a query executes, information about the query execution is saved with a unique ID.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-query-execution\n--query-execution-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--query-execution-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--query-execution-id (string)\n\nThe unique ID of the query execution.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueryExecution -> (structure)\n\nInformation about the query execution.\n\nQueryExecutionId -> (string)\n\nThe unique identifier for each query execution.\n\nQuery -> (string)\n\nThe SQL query statements which the query execution ran.\n\nStatementType -> (string)\n\nThe type of query statement that was run. DDL indicates DDL query statements. DML indicates DML (Data Manipulation Language) query statements, such as CREATE TABLE AS SELECT . UTILITY indicates query statements other than DDL and DML, such as SHOW CREATE TABLE , or DESCRIBE TABLE .\n\nResultConfiguration -> (structure)\n\nThe location in Amazon S3 where query results were stored and the encryption option, if any, used for query results. These are known as “client-side settings”. If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup.\n\nOutputLocation -> (string)\n\nThe location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/ . To run the query, you must specify the query results location using one of the ways: either for individual queries using either this setting (client-side), or in the workgroup, using WorkGroupConfiguration . If none of them is set, Athena issues an error that no output location is provided. For more information, see Query Results . If workgroup settings override client-side settings, then the query uses the settings specified for the workgroup. See WorkGroupConfiguration$EnforceWorkGroupConfiguration .\n\nEncryptionConfiguration -> (structure)\n\nIf query results are encrypted in Amazon S3, indicates the encryption option used (for example, SSE-KMS or CSE-KMS ) and key information. This is a client-side setting. If workgroup settings override client-side settings, then the query uses the encryption configuration that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See WorkGroupConfiguration$EnforceWorkGroupConfiguration and Workgroup Settings Override Client-Side Settings .\n\nEncryptionOption -> (string)\n\nIndicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3 ), server-side encryption with KMS-managed keys (SSE-KMS ), or client-side encryption with KMS-managed keys (CSE-KMS) is used.\n\nIf a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup’s setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.\n\nKmsKey -> (string)\n\nFor SSE-KMS and CSE-KMS , this is the KMS key ARN or ID.\n\nQueryExecutionContext -> (structure)\n\nThe database in which the query execution occurred.\n\nDatabase -> (string)\n\nThe name of the database used in the query execution. The database must exist in the catalog.\n\nCatalog -> (string)\n\nThe name of the data catalog used in the query execution.\n\nStatus -> (structure)\n\nThe completion date, current state, submission time, and state change reason (if applicable) for the query execution.\n\nState -> (string)\n\nThe state of query execution. QUEUED indicates that the query has been submitted to the service, and Athena will execute the query as soon as resources are available. RUNNING indicates that the query is in execution phase. SUCCEEDED indicates that the query completed without errors. FAILED indicates that the query experienced an error and did not complete processing. CANCELLED indicates that a user input interrupted query execution.\n\nNote\n\nAthena automatically retries your queries in cases of certain transient errors. As a result, you may see the query state transition from RUNNING or FAILED to QUEUED .\n\nStateChangeReason -> (string)\n\nFurther detail about the status of the query.\n\nSubmissionDateTime -> (timestamp)\n\nThe date and time that the query was submitted.\n\nCompletionDateTime -> (timestamp)\n\nThe date and time that the query completed.\n\nStatistics -> (structure)\n\nQuery execution statistics, such as the amount of data scanned, the amount of time that the query took to process, and the type of statement that was run.\n\nEngineExecutionTimeInMillis -> (long)\n\nThe number of milliseconds that the query took to execute.\n\nDataScannedInBytes -> (long)\n\nThe number of bytes in the data that was queried.\n\nDataManifestLocation -> (string)\n\nThe location and file name of a data manifest file. The manifest file is saved to the Athena query results location in Amazon S3. The manifest file tracks files that the query wrote to Amazon S3. If the query fails, the manifest file also tracks files that the query intended to write. The manifest is useful for identifying orphaned files resulting from a failed query. For more information, see Working with Query Results, Output Files, and Query History in the Amazon Athena User Guide .\n\nTotalExecutionTimeInMillis -> (long)\n\nThe number of milliseconds that Athena took to run the query.\n\nQueryQueueTimeInMillis -> (long)\n\nThe number of milliseconds that the query was in your query queue waiting for resources. Note that if transient errors occur, Athena might automatically add the query back to the queue.\n\nQueryPlanningTimeInMillis -> (long)\n\nThe number of milliseconds that Athena took to plan the query processing flow. This includes the time spent retrieving table partitions from the data source. Note that because the query engine performs the query planning, query planning time is a subset of engine processing time.\n\nServiceProcessingTimeInMillis -> (long)\n\nThe number of milliseconds that Athena took to finalize and publish the query results after the query engine finished running the query.\n\nWorkGroup -> (string)\n\nThe name of the workgroup in which the query ran.\n\nEngineVersion -> (structure)\n\nThe engine version that executed the query.\n\nSelectedEngineVersion -> (string)\n\nThe engine version requested by the user. Possible values are determined by the output of ListEngineVersions , including Auto. The default is Auto.\n\nEffectiveEngineVersion -> (string)\n\nRead only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a CreateWorkGroup or UpdateWorkGroup operation, the EffectiveEngineVersion field is ignored.",
      "command_examples": "Examples\n\nTo return information about a query execution\n\nThe following get-query-execution example returns information about the query that has the specified query ID.\n\naws athena get-query-execution \\\n    --query-execution-id a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\n\n\nOutput:\n\n{\n    \"QueryExecution\": {\n        \"QueryExecutionId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n        \"Query\": \"select date, location, browser, uri, status from cloudfront_logs where method = 'GET\n' and status = 200 and location like 'SFO%' limit 10\",\n        \"StatementType\": \"DML\",\n        \"ResultConfiguration\": {\n            \"OutputLocation\": \"s3://awsdoc-example-bucket/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111.csv\"\n        },\n        \"QueryExecutionContext\": {\n            \"Database\": \"mydatabase\",\n            \"Catalog\": \"awsdatacatalog\"\n        },\n        \"Status\": {\n            \"State\": \"SUCCEEDED\",\n            \"SubmissionDateTime\": 1593469842.665,\n            \"CompletionDateTime\": 1593469846.486\n        },\n        \"Statistics\": {\n            \"EngineExecutionTimeInMillis\": 3600,\n            \"DataScannedInBytes\": 203089,\n            \"TotalExecutionTimeInMillis\": 3821,\n            \"QueryQueueTimeInMillis\": 267,\n            \"QueryPlanningTimeInMillis\": 1175\n        },\n        \"WorkGroup\": \"AthenaAdmin\"\n    }\n}\n\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide."
    },
    {
      "command_name": "get-query-results",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/get-query-results.html",
      "command_description": "Description\n\nStreams the results of a single query execution specified by QueryExecutionId from the Athena query results location in Amazon S3. For more information, see Query Results in the Amazon Athena User Guide . This request does not execute the query but returns results. Use StartQueryExecution to run a query.\n\nTo stream query results successfully, the IAM principal with permission to call GetQueryResults also must have permissions to the Amazon S3 GetObject action for the Athena query results location.\n\nWarning\n\nIAM principals with permission to the Amazon S3 GetObject action for the query results location are able to retrieve query results from Amazon S3 even if permission to the GetQueryResults action is denied. To restrict user or role access, ensure that Amazon S3 permissions to the Athena query location are denied.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-query-results is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResultSet.Rows",
      "command_synopsis": "Synopsis\n  get-query-results\n--query-execution-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--query-execution-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--query-execution-id (string)\n\nThe unique ID of the query execution.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpdateCount -> (long)\n\nThe number of rows inserted with a CREATE TABLE AS SELECT statement.\n\nResultSet -> (structure)\n\nThe results of the query execution.\n\nRows -> (list)\n\nThe rows in the table.\n\n(structure)\n\nThe rows that comprise a query result table.\n\nData -> (list)\n\nThe data that populates a row in a query result table.\n\n(structure)\n\nA piece of data (a field in the table).\n\nVarCharValue -> (string)\n\nThe value of the datum.\n\nResultSetMetadata -> (structure)\n\nThe metadata that describes the column structure and data types of a table of query results.\n\nColumnInfo -> (list)\n\nInformation about the columns returned in a query result metadata.\n\n(structure)\n\nInformation about the columns in a query execution result.\n\nCatalogName -> (string)\n\nThe catalog to which the query results belong.\n\nSchemaName -> (string)\n\nThe schema name (database name) to which the query results belong.\n\nTableName -> (string)\n\nThe table name for the query results.\n\nName -> (string)\n\nThe name of the column.\n\nLabel -> (string)\n\nA column label.\n\nType -> (string)\n\nThe data type of the column.\n\nPrecision -> (integer)\n\nFor DECIMAL data types, specifies the total number of digits, up to 38. For performance reasons, we recommend up to 18 digits.\n\nScale -> (integer)\n\nFor DECIMAL data types, specifies the total number of digits in the fractional part of the value. Defaults to 0.\n\nNullable -> (string)\n\nIndicates the column’s nullable status.\n\nCaseSensitive -> (boolean)\n\nIndicates whether values in the column are case-sensitive.\n\nNextToken -> (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.",
      "command_examples": "Examples\n\nTo return the results of a query\n\nThe following get-query-results example returns the results of the query that has the specified query ID.\n\naws athena get-query-results \\\n    --query-execution-id a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\n\n\nOutput:\n\n{\n    \"ResultSet\": {\n        \"Rows\": [\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"date\"\n                    },\n                    {\n                        \"VarCharValue\": \"location\"\n                    },\n                    {\n                        \"VarCharValue\": \"browser\"\n                    },\n                    {\n                        \"VarCharValue\": \"uri\"\n                    },\n                    {\n                        \"VarCharValue\": \"status\"\n                    }\n                ]\n            },\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"2014-07-05\"\n                    },\n                    {\n                        \"VarCharValue\": \"SFO4\"\n                    },\n                    {\n                        \"VarCharValue\": \"Safari\"\n                    },\n                    {\n                        \"VarCharValue\": \"/test-image-2.jpeg\"\n                    },\n                    {\n                        \"VarCharValue\": \"200\"\n                    }\n                ]\n            },\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"2014-07-05\"\n                    },\n                    {\n                        \"VarCharValue\": \"SFO4\"\n                    },\n                    {\n                        \"VarCharValue\": \"Opera\"\n                    },\n                    {\n                        \"VarCharValue\": \"/test-image-2.jpeg\"\n                    },\n                    {\n                        \"VarCharValue\": \"200\"\n                    }\n                ]\n            },\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"2014-07-05\"\n                    },\n                    {\n                        \"VarCharValue\": \"SFO4\"\n                    },\n                    {\n                        \"VarCharValue\": \"Firefox\"\n                    },\n                    {\n                        \"VarCharValue\": \"/test-image-3.jpeg\"\n                    },\n                    {\n                        \"VarCharValue\": \"200\"\n                    }\n                ]\n            },\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"2014-07-05\"\n                    },\n                    {\n                        \"VarCharValue\": \"SFO4\"\n                    },\n                    {\n                        \"VarCharValue\": \"Lynx\"\n                    },\n                    {\n                        \"VarCharValue\": \"/test-image-3.jpeg\"\n                    },\n                    {\n                        \"VarCharValue\": \"200\"\n                    }\n                ]\n            },\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"2014-07-05\"\n                    },\n                    {\n                        \"VarCharValue\": \"SFO4\"\n                    },\n                    {\n                        \"VarCharValue\": \"IE\"\n                    },\n                    {\n                        \"VarCharValue\": \"/test-image-2.jpeg\"\n                    },\n                    {\n                        \"VarCharValue\": \"200\"\n                    }\n                ]\n            },\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"2014-07-05\"\n                    },\n                    {\n                        \"VarCharValue\": \"SFO4\"\n                    },\n                    {\n                        \"VarCharValue\": \"Opera\"\n                    },\n                    {\n                        \"VarCharValue\": \"/test-image-1.jpeg\"\n                    },\n                    {\n                        \"VarCharValue\": \"200\"\n                    }\n                ]\n            },\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"2014-07-05\"\n                    },\n                    {\n                        \"VarCharValue\": \"SFO4\"\n                    },\n                    {\n                        \"VarCharValue\": \"Chrome\"\n                    },\n                    {\n                        \"VarCharValue\": \"/test-image-3.jpeg\"\n                    },\n                    {\n                        \"VarCharValue\": \"200\"\n                    }\n                ]\n            },\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"2014-07-05\"\n                    },\n                    {\n                        \"VarCharValue\": \"SFO4\"\n                    },\n                    {\n                        \"VarCharValue\": \"Firefox\"\n                    },\n                    {\n                        \"VarCharValue\": \"/test-image-2.jpeg\"\n                    },\n                    {\n                        \"VarCharValue\": \"200\"\n                    }\n                ]\n            },\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"2014-07-05\"\n                    },\n                    {\n                        \"VarCharValue\": \"SFO4\"\n                    },\n                    {\n                        \"VarCharValue\": \"Chrome\"\n                    },\n                    {\n                        \"VarCharValue\": \"/test-image-3.jpeg\"\n                    },\n                    {\n                        \"VarCharValue\": \"200\"\n                    }\n                ]\n            },\n            {\n                \"Data\": [\n                    {\n                        \"VarCharValue\": \"2014-07-05\"\n                    },\n                    {\n                        \"VarCharValue\": \"SFO4\"\n                    },\n                    {\n                        \"VarCharValue\": \"IE\"\n                    },\n                    {\n                        \"VarCharValue\": \"/test-image-2.jpeg\"\n                    },\n                    {\n                        \"VarCharValue\": \"200\"\n                    }\n                ]\n            }\n        ],\n        \"ResultSetMetadata\": {\n            \"ColumnInfo\": [\n                {\n                    \"CatalogName\": \"hive\",\n                    \"SchemaName\": \"\",\n                    \"TableName\": \"\",\n                    \"Name\": \"date\",\n                    \"Label\": \"date\",\n                    \"Type\": \"date\",\n                    \"Precision\": 0,\n                    \"Scale\": 0,\n                    \"Nullable\": \"UNKNOWN\",\n                    \"CaseSensitive\": false\n                },\n                {\n                    \"CatalogName\": \"hive\",\n                    \"SchemaName\": \"\",\n                    \"TableName\": \"\",\n                    \"Name\": \"location\",\n                    \"Label\": \"location\",\n                    \"Type\": \"varchar\",\n                    \"Precision\": 2147483647,\n                \"Data\": [\n\n                    \"Scale\": 0,\n                    \"Nullable\": \"UNKNOWN\",\n                    \"CaseSensitive\": true\n                },\n                {\n                    \"CatalogName\": \"hive\",\n                    \"SchemaName\": \"\",\n                    \"TableName\": \"\",\n                    \"Name\": \"browser\",\n                    \"Label\": \"browser\",\n                    \"Type\": \"varchar\",\n                    \"Precision\": 2147483647,\n                    \"Scale\": 0,\n                    \"Nullable\": \"UNKNOWN\",\n                    \"CaseSensitive\": true\n                },\n                {\n                    \"CatalogName\": \"hive\",\n                    \"SchemaName\": \"\",\n                    \"TableName\": \"\",\n                    \"Name\": \"uri\",\n                    \"Label\": \"uri\",\n                    \"Type\": \"varchar\",\n                    \"Precision\": 2147483647,\n                    \"Scale\": 0,\n                    \"Nullable\": \"UNKNOWN\",\n                    \"CaseSensitive\": true\n                },\n                {\n                    \"CatalogName\": \"hive\",\n                    \"SchemaName\": \"\",\n                    \"TableName\": \"\",\n                    \"Name\": \"status\",\n                    \"Label\": \"status\",\n                    \"Type\": \"integer\",\n                    \"Precision\": 10,\n                    \"Scale\": 0,\n                    \"Nullable\": \"UNKNOWN\",\n                    \"CaseSensitive\": false\n                }\n            ]\n        }\n    },\n    \"UpdateCount\": 0\n}\n\n\nFor more information, see Working with Query Results, Output Files, and Query History in the Amazon Athena User Guide."
    },
    {
      "command_name": "get-table-metadata",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/get-table-metadata.html",
      "command_description": "Description\n\nReturns table metadata for the specified catalog, database, and table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-table-metadata\n--catalog-name <value>\n--database-name <value>\n--table-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--catalog-name <value>",
        "--database-name <value>",
        "--table-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-name (string)\n\nThe name of the data catalog that contains the database and table metadata to return.\n\n--database-name (string)\n\nThe name of the database that contains the table metadata to return.\n\n--table-name (string)\n\nThe name of the table for which metadata is returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTableMetadata -> (structure)\n\nAn object that contains table metadata.\n\nName -> (string)\n\nThe name of the table.\n\nCreateTime -> (timestamp)\n\nThe time that the table was created.\n\nLastAccessTime -> (timestamp)\n\nThe last time the table was accessed.\n\nTableType -> (string)\n\nThe type of table. In Athena, only EXTERNAL_TABLE is supported.\n\nColumns -> (list)\n\nA list of the columns in the table.\n\n(structure)\n\nContains metadata for a column in a table.\n\nName -> (string)\n\nThe name of the column.\n\nType -> (string)\n\nThe data type of the column.\n\nComment -> (string)\n\nOptional information about the column.\n\nPartitionKeys -> (list)\n\nA list of the partition keys in the table.\n\n(structure)\n\nContains metadata for a column in a table.\n\nName -> (string)\n\nThe name of the column.\n\nType -> (string)\n\nThe data type of the column.\n\nComment -> (string)\n\nOptional information about the column.\n\nParameters -> (map)\n\nA set of custom key/value pairs for table properties.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo return metadata information about a table\n\nThe following get-table-metadata example returns metadata information about the counties table, including including column names and their datatypes, from the sampledb database of the AwsDataCatalog data catalog.\n\naws athena get-table-metadata \\\n    --catalog-name AwsDataCatalog \\\n    --database-name sampledb \\\n    --table-name counties\n\n\nOutput:\n\n{\n    \"TableMetadata\": {\n        \"Name\": \"counties\",\n        \"CreateTime\": 1593559968.0,\n        \"LastAccessTime\": 0.0,\n        \"TableType\": \"EXTERNAL_TABLE\",\n        \"Columns\": [\n            {\n                \"Name\": \"name\",\n                \"Type\": \"string\",\n                \"Comment\": \"from deserializer\"\n            },\n            {\n                \"Name\": \"boundaryshape\",\n                \"Type\": \"binary\",\n                \"Comment\": \"from deserializer\"\n            },\n            {\n                \"Name\": \"motto\",\n                \"Type\": \"string\",\n                \"Comment\": \"from deserializer\"\n            },\n            {\n                \"Name\": \"population\",\n                \"Type\": \"int\",\n                \"Comment\": \"from deserializer\"\n            }\n        ],\n        \"PartitionKeys\": [],\n        \"Parameters\": {\n            \"EXTERNAL\": \"TRUE\",\n            \"inputformat\": \"com.esri.json.hadoop.EnclosedJsonInputFormat\",\n            \"location\": \"s3://awsdoc-example-bucket/json\",\n            \"outputformat\": \"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\",\n            \"serde.param.serialization.format\": \"1\",\n            \"serde.serialization.lib\": \"com.esri.hadoop.hive.serde.JsonSerde\",\n            \"transient_lastDdlTime\": \"1593559968\"\n        }\n    }\n}\n\n\nFor more information, see Showing Table Details: get-table-metadata in the Amazon Athena User Guide."
    },
    {
      "command_name": "get-work-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/get-work-group.html",
      "command_description": "Description\n\nReturns information about the workgroup with the specified name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-work-group\n--work-group <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--work-group <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--work-group (string)\n\nThe name of the workgroup.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nWorkGroup -> (structure)\n\nInformation about the workgroup.\n\nName -> (string)\n\nThe workgroup name.\n\nState -> (string)\n\nThe state of the workgroup: ENABLED or DISABLED.\n\nConfiguration -> (structure)\n\nThe configuration of the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption configuration, if any, used for query results; whether the Amazon CloudWatch Metrics are enabled for the workgroup; whether workgroup settings override client-side settings; and the data usage limits for the amount of data scanned per query or per workgroup. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration . See WorkGroupConfiguration$EnforceWorkGroupConfiguration .\n\nResultConfiguration -> (structure)\n\nThe configuration for the workgroup, which includes the location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. To run the query, you must specify the query results location using one of the ways: either in the workgroup using this setting, or for individual queries (client-side), using ResultConfiguration$OutputLocation . If none of them is set, Athena issues an error that no output location is provided. For more information, see Query Results .\n\nOutputLocation -> (string)\n\nThe location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/ . To run the query, you must specify the query results location using one of the ways: either for individual queries using either this setting (client-side), or in the workgroup, using WorkGroupConfiguration . If none of them is set, Athena issues an error that no output location is provided. For more information, see Query Results . If workgroup settings override client-side settings, then the query uses the settings specified for the workgroup. See WorkGroupConfiguration$EnforceWorkGroupConfiguration .\n\nEncryptionConfiguration -> (structure)\n\nIf query results are encrypted in Amazon S3, indicates the encryption option used (for example, SSE-KMS or CSE-KMS ) and key information. This is a client-side setting. If workgroup settings override client-side settings, then the query uses the encryption configuration that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See WorkGroupConfiguration$EnforceWorkGroupConfiguration and Workgroup Settings Override Client-Side Settings .\n\nEncryptionOption -> (string)\n\nIndicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3 ), server-side encryption with KMS-managed keys (SSE-KMS ), or client-side encryption with KMS-managed keys (CSE-KMS) is used.\n\nIf a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup’s setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.\n\nKmsKey -> (string)\n\nFor SSE-KMS and CSE-KMS , this is the KMS key ARN or ID.\n\nEnforceWorkGroupConfiguration -> (boolean)\n\nIf set to “true”, the settings for the workgroup override client-side settings. If set to “false”, client-side settings are used. For more information, see Workgroup Settings Override Client-Side Settings .\n\nPublishCloudWatchMetricsEnabled -> (boolean)\n\nIndicates that the Amazon CloudWatch metrics are enabled for the workgroup.\n\nBytesScannedCutoffPerQuery -> (long)\n\nThe upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan.\n\nRequesterPaysEnabled -> (boolean)\n\nIf set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see Requester Pays Buckets in the Amazon Simple Storage Service Developer Guide .\n\nEngineVersion -> (structure)\n\nThe engine version that all queries running on the workgroup use. Queries on the AmazonAthenaPreviewFunctionality workgroup run on the preview engine regardless of this setting.\n\nSelectedEngineVersion -> (string)\n\nThe engine version requested by the user. Possible values are determined by the output of ListEngineVersions , including Auto. The default is Auto.\n\nEffectiveEngineVersion -> (string)\n\nRead only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a CreateWorkGroup or UpdateWorkGroup operation, the EffectiveEngineVersion field is ignored.\n\nDescription -> (string)\n\nThe workgroup description.\n\nCreationTime -> (timestamp)\n\nThe date and time the workgroup was created.",
      "command_examples": "Examples\n\nTo return information about a workgroup\n\nThe following get-work-group example returns information about the AthenaAdmin workgroup.\n\naws athena get-work-group \\\n    --work-group AthenaAdmin\n\n\nOutput:\n\n{\n    \"WorkGroup\": {\n        \"Name\": \"AthenaAdmin\",\n        \"State\": \"ENABLED\",\n        \"Configuration\": {\n            \"ResultConfiguration\": {\n                \"OutputLocation\": \"s3://awsdoc-example-bucket/\"\n            },\n            \"EnforceWorkGroupConfiguration\": false,\n            \"PublishCloudWatchMetricsEnabled\": true,\n            \"RequesterPaysEnabled\": false\n        },\n        \"Description\": \"Workgroup for Athena administrators\",\n        \"CreationTime\": 1573677174.105\n    }\n}\n\n\nFor more information, see Managing Workgroups in the Amazon Athena User Guide."
    },
    {
      "command_name": "list-data-catalogs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/list-data-catalogs.html",
      "command_description": "Description\n\nLists the data catalogs in the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-data-catalogs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DataCatalogsSummary",
      "command_synopsis": "Synopsis\n  list-data-catalogs\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDataCatalogsSummary -> (list)\n\nA summary list of data catalogs.\n\n(structure)\n\nThe summary information for the data catalog, which includes its name and type.\n\nCatalogName -> (string)\n\nThe name of the data catalog.\n\nType -> (string)\n\nThe data catalog type.\n\nNextToken -> (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.",
      "command_examples": "Examples\n\nTo list the data catalogs registered with Athena\n\nThe following list-data-catalogs example lists the data catalogs registered with Athena.\n\naws athena list-data-catalogs\n\n\nOutput:\n\n{\n    \"DataCatalogsSummary\": [\n        {\n            \"CatalogName\": \"AwsDataCatalog\",\n            \"Type\": \"GLUE\"\n        },\n        {\n            \"CatalogName\": \"cw_logs_catalog\",\n            \"Type\": \"LAMBDA\"\n        },\n        {\n            \"CatalogName\": \"cw_metrics_catalog\",\n            \"Type\": \"LAMBDA\"\n        }\n    ]\n}\n\n\nFor more information, see Listing Registered Catalogs: list-data-catalogs in the Amazon Athena User Guide."
    },
    {
      "command_name": "list-databases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/list-databases.html",
      "command_description": "Description\n\nLists the databases in the specified data catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-databases is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DatabaseList",
      "command_synopsis": "Synopsis\n  list-databases\n--catalog-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--catalog-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-name (string)\n\nThe name of the data catalog that contains the databases to return.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatabaseList -> (list)\n\nA list of databases from a data catalog.\n\n(structure)\n\nContains metadata information for a database in a data catalog.\n\nName -> (string)\n\nThe name of the database.\n\nDescription -> (string)\n\nAn optional description of the database.\n\nParameters -> (map)\n\nA set of custom key/value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.",
      "command_examples": "Examples\n\nTo list the databases in a data catalog\n\nThe following list-databases example lists the databases in the AwsDataCatalog data catalog.\n\naws athena list-databases \\\n    --catalog-name AwsDataCatalog\n\n\nOutput:\n\n{\n    \"DatabaseList\": [\n        {\n            \"Name\": \"default\"\n        },\n        {\n            \"Name\": \"mydatabase\"\n        },\n        {\n            \"Name\": \"newdb\"\n        },\n        {\n            \"Name\": \"sampledb\",\n            \"Description\": \"Sample database\",\n            \"Parameters\": {\n                \"CreatedBy\": \"Athena\",\n                \"EXTERNAL\": \"TRUE\"\n            }\n        },\n        {\n            \"Name\": \"webdata\"\n        }\n    ]\n}\n\n\nFor more information, see Listing Databases in a Catalog: list-databases in the Amazon Athena User Guide."
    },
    {
      "command_name": "list-engine-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/list-engine-versions.html",
      "command_description": "Description\n\nReturns a list of engine versions that are available to choose from, including the Auto option.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-engine-versions\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.\n\n--max-results (integer)\n\nThe maximum number of engine versions to return in this request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEngineVersions -> (list)\n\nA list of engine versions that are available to choose from.\n\n(structure)\n\nThe Athena engine version for running queries.\n\nSelectedEngineVersion -> (string)\n\nThe engine version requested by the user. Possible values are determined by the output of ListEngineVersions , including Auto. The default is Auto.\n\nEffectiveEngineVersion -> (string)\n\nRead only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a CreateWorkGroup or UpdateWorkGroup operation, the EffectiveEngineVersion field is ignored.\n\nNextToken -> (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call."
    },
    {
      "command_name": "list-named-queries",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/list-named-queries.html",
      "command_description": "Description\n\nProvides a list of available query IDs only for queries saved in the specified workgroup. Requires that you have access to the specified workgroup. If a workgroup is not specified, lists the saved queries for the primary workgroup.\n\nFor code samples using the Amazon Web Services SDK for Java, see Examples and Code Samples in the Amazon Athena User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-named-queries is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: NamedQueryIds",
      "command_synopsis": "Synopsis\n  list-named-queries\n[--work-group <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--work-group <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--work-group (string)\n\nThe name of the workgroup from which the named queries are being returned. If a workgroup is not specified, the saved queries for the primary workgroup are returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNamedQueryIds -> (list)\n\nThe list of unique query IDs.\n\n(string)\n\nNextToken -> (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.",
      "command_examples": "Examples\n\nTo list the named queries for a workgroup\n\nThe following list-named-queries example lists the named queries for the AthenaAdmin workgroup.\n\naws athena list-named-queries \\\n    --work-group AthenaAdmin\n\n\nOutput:\n\n{\n    \"NamedQueryIds\": [\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE33333\"\n    ]\n}\n\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide."
    },
    {
      "command_name": "list-prepared-statements",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/list-prepared-statements.html",
      "command_description": "Description\n\nLists the prepared statements in the specfied workgroup.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-prepared-statements\n--work-group <value>\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--work-group <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--work-group (string)\n\nThe workgroup to list the prepared statements for.\n\n--next-token (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.\n\n--max-results (integer)\n\nThe maximum number of results to return in this request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPreparedStatements -> (list)\n\nThe list of prepared statements for the workgroup.\n\n(structure)\n\nThe name and last modified time of the prepared statement.\n\nStatementName -> (string)\n\nThe name of the prepared statement.\n\nLastModifiedTime -> (timestamp)\n\nThe last modified time of the prepared statement.\n\nNextToken -> (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call."
    },
    {
      "command_name": "list-query-executions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/list-query-executions.html",
      "command_description": "Description\n\nProvides a list of available query execution IDs for the queries in the specified workgroup. If a workgroup is not specified, returns a list of query execution IDs for the primary workgroup. Requires you to have access to the workgroup in which the queries ran.\n\nFor code samples using the Amazon Web Services SDK for Java, see Examples and Code Samples in the Amazon Athena User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-query-executions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: QueryExecutionIds",
      "command_synopsis": "Synopsis\n  list-query-executions\n[--work-group <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--work-group <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--work-group (string)\n\nThe name of the workgroup from which queries are being returned. If a workgroup is not specified, a list of available query execution IDs for the queries in the primary workgroup is returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueryExecutionIds -> (list)\n\nThe unique IDs of each query execution as an array of strings.\n\n(string)\n\nNextToken -> (string)\n\nA token to be used by the next request if this request is truncated.",
      "command_examples": "Examples\n\nTo list the query IDs of the queries in a specified workgroup\n\nThe following list-query-executions example lists a maximum of ten of the query IDs in the AthenaAdmin workgroup.\n\naws athena list-query-executions \\\n    --work-group AthenaAdmin \\\n    --max-items 10\n\n\nOutput:\n\n{\n    \"QueryExecutionIds\": [\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11110\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE33333\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11114\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11115\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11116\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11117\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11118\",\n        \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11119\"\n    ],\n    \"NextToken\": \"eyJOZXh0VG9rZW4iOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAxMH0=\"\n}\n\n\nFor more information, see Working with Query Results, Output Files, and Query History in the Amazon Athena User Guide."
    },
    {
      "command_name": "list-table-metadata",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/list-table-metadata.html",
      "command_description": "Description\n\nLists the metadata for the tables in the specified data catalog database.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-table-metadata is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: TableMetadataList",
      "command_synopsis": "Synopsis\n  list-table-metadata\n--catalog-name <value>\n--database-name <value>\n[--expression <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--catalog-name <value>",
        "--database-name <value>",
        "[--expression <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-name (string)\n\nThe name of the data catalog for which table metadata should be returned.\n\n--database-name (string)\n\nThe name of the database for which table metadata should be returned.\n\n--expression (string)\n\nA regex filter that pattern-matches table names. If no expression is supplied, metadata for all tables are listed.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTableMetadataList -> (list)\n\nA list of table metadata.\n\n(structure)\n\nContains metadata for a table.\n\nName -> (string)\n\nThe name of the table.\n\nCreateTime -> (timestamp)\n\nThe time that the table was created.\n\nLastAccessTime -> (timestamp)\n\nThe last time the table was accessed.\n\nTableType -> (string)\n\nThe type of table. In Athena, only EXTERNAL_TABLE is supported.\n\nColumns -> (list)\n\nA list of the columns in the table.\n\n(structure)\n\nContains metadata for a column in a table.\n\nName -> (string)\n\nThe name of the column.\n\nType -> (string)\n\nThe data type of the column.\n\nComment -> (string)\n\nOptional information about the column.\n\nPartitionKeys -> (list)\n\nA list of the partition keys in the table.\n\n(structure)\n\nContains metadata for a column in a table.\n\nName -> (string)\n\nThe name of the column.\n\nType -> (string)\n\nThe data type of the column.\n\nComment -> (string)\n\nOptional information about the column.\n\nParameters -> (map)\n\nA set of custom key/value pairs for table properties.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.",
      "command_examples": "Examples\n\nTo list the metadata for tables in the specified database of a data catalog\n\nThe following list-table-metadata example returns metadata information for a maximum of two tables in the geography database of the AwsDataCatalog data catalog.\n\naws athena list-table-metadata \\\n    --catalog-name AwsDataCatalog \\\n    --database-name geography \\\n    --max-items 2\n\n\nOutput:\n\n{\n    \"TableMetadataList\": [\n        {\n            \"Name\": \"country_codes\",\n            \"CreateTime\": 1586553454.0,\n            \"TableType\": \"EXTERNAL_TABLE\",\n            \"Columns\": [\n                {\n                    \"Name\": \"country\",\n                    \"Type\": \"string\",\n                    \"Comment\": \"geo id\"\n                },\n                {\n                    \"Name\": \"alpha-2 code\",\n                    \"Type\": \"string\",\n                    \"Comment\": \"geo id2\"\n                },\n                {\n                    \"Name\": \"alpha-3 code\",\n                    \"Type\": \"string\",\n                    \"Comment\": \"state name\"\n                },\n                {\n                    \"Name\": \"numeric code\",\n                    \"Type\": \"bigint\",\n                    \"Comment\": \"\"\n                },\n                {\n                    \"Name\": \"latitude\",\n                    \"Type\": \"bigint\",\n                    \"Comment\": \"location (latitude)\"\n                },\n                {\n                    \"Name\": \"longitude\",\n                    \"Type\": \"bigint\",\n                    \"Comment\": \"location (longitude)\"\n                }\n            ],\n            \"Parameters\": {\n                \"areColumnsQuoted\": \"false\",\n                \"classification\": \"csv\",\n                \"columnsOrdered\": \"true\",\n                \"delimiter\": \",\",\n                \"has_encrypted_data\": \"false\",\n                \"inputformat\": \"org.apache.hadoop.mapred.TextInputFormat\",\n                \"location\": \"s3://awsdoc-example-bucket/csv/countrycode\",\n                \"outputformat\": \"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\",\n                \"serde.param.field.delim\": \",\",\n                \"serde.serialization.lib\": \"org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\",\n                \"skip.header.line.count\": \"1\",\n                \"typeOfData\": \"file\"\n            }\n        },\n        {\n            \"Name\": \"county_populations\",\n            \"CreateTime\": 1586553446.0,\n            \"TableType\": \"EXTERNAL_TABLE\",\n            \"Columns\": [\n                {\n                    \"Name\": \"id\",\n                    \"Type\": \"string\",\n                    \"Comment\": \"geo id\"\n                },\n                {\n                    \"Name\": \"country\",\n\n                    \"Name\": \"id2\",\n                    \"Type\": \"string\",\n                    \"Comment\": \"geo id2\"\n                },\n                {\n                    \"Name\": \"county\",\n                    \"Type\": \"string\",\n                    \"Comment\": \"county name\"\n                },\n                {\n                    \"Name\": \"state\",\n                    \"Type\": \"string\",\n                    \"Comment\": \"state name\"\n                },\n                {\n                    \"Name\": \"population estimate 2018\",\n                    \"Type\": \"string\",\n                    \"Comment\": \"\"\n                }\n            ],\n            \"Parameters\": {\n                \"areColumnsQuoted\": \"false\",\n                \"classification\": \"csv\",\n                \"columnsOrdered\": \"true\",\n                \"delimiter\": \",\",\n                \"has_encrypted_data\": \"false\",\n                \"inputformat\": \"org.apache.hadoop.mapred.TextInputFormat\",\n                \"location\": \"s3://awsdoc-example-bucket/csv/CountyPopulation\",\n                \"outputformat\": \"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\",\n                \"serde.param.field.delim\": \",\",\n                \"serde.serialization.lib\": \"org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\",\n                \"skip.header.line.count\": \"1\",\n                \"typeOfData\": \"file\"\n            }\n        }\n    ],\n    \"NextToken\": \"eyJOZXh0VG9rZW4iOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ==\"\n}\n\n\nFor more information, see Showing Metadata for All Tables in a Database: list-table-metadata in the Amazon Athena User Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/list-tags-for-resource.html",
      "command_description": "Description\n\nLists the tags associated with an Athena workgroup or data catalog resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-tags-for-resource is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Tags",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nLists the tags for the resource with the specified ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tags associated with the specified resource.\n\n(structure)\n\nA label that you assign to a resource. In Athena, a resource can be a workgroup or data catalog. Each tag consists of a key and an optional value, both of which you define. For example, you can use tags to categorize Athena workgroups or data catalogs by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups or data catalogs in your account. For best practices, see Tagging Best Practices . Tag keys can be from 1 to 128 UTF-8 Unicode characters, and tag values can be from 0 to 256 UTF-8 Unicode characters. Tags can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one tag, separate them by commas.\n\nKey -> (string)\n\nA tag key. The tag key length is from 1 to 128 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys are case-sensitive and must be unique per resource.\n\nValue -> (string)\n\nA tag value. The tag value length is from 0 to 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag values are case-sensitive.\n\nNextToken -> (string)\n\nA token to be used by the next request if this request is truncated.",
      "command_examples": "Examples\n\nExample 1: To list the tags for a workgroup\n\nThe following list-tags-for-resource example lists the tags for the Data_Analyst_Group workgroup.\n\naws athena list-tags-for-resource \\\n    --resource-arn arn:aws:athena:us-west-2:111122223333:workgroup/Data_Analyst_Group\n\n\nOutput:\n\n{\n    \"Tags\": [\n        {\n            \"Key\": \"Division\",\n            \"Value\": \"West\"\n        },\n        {\n            \"Key\": \"Team\",\n            \"Value\": \"Big Data\"\n        },\n        {\n            \"Key\": \"Location\",\n            \"Value\": \"Seattle\"\n        }\n    ]\n}\n\n\nExample 2: To list the tags for a data catalog\n\nThe following list-tags-for-resource example lists the tags for the dynamo_db_catalog data catalog.\n\naws athena list-tags-for-resource \\\n    --resource-arn arn:aws:athena:us-west-2:111122223333:datacatalog/dynamo_db_catalog\n\n\nOutput:\n\n{\n    \"Tags\": [\n        {\n            \"Key\": \"Division\",\n            \"Value\": \"Mountain\"\n        },\n        {\n            \"Key\": \"Organization\",\n            \"Value\": \"Retail\"\n        },\n        {\n            \"Key\": \"Product_Line\",\n            \"Value\": \"Shoes\"\n        },\n        {\n            \"Key\": \"Location\",\n            \"Value\": \"Denver\"\n        }\n    ]\n}\n\n\nFor more information, see Listing the tags for a resource: list-tags-for-resource in the Amazon Athena User Guide."
    },
    {
      "command_name": "list-work-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/list-work-groups.html",
      "command_description": "Description\n\nLists available workgroups for the account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-work-groups\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.\n\n--max-results (integer)\n\nThe maximum number of workgroups to return in this request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nWorkGroups -> (list)\n\nA list of WorkGroupSummary objects that include the names, descriptions, creation times, and states for each workgroup.\n\n(structure)\n\nThe summary information for the workgroup, which includes its name, state, description, and the date and time it was created.\n\nName -> (string)\n\nThe name of the workgroup.\n\nState -> (string)\n\nThe state of the workgroup.\n\nDescription -> (string)\n\nThe workgroup description.\n\nCreationTime -> (timestamp)\n\nThe workgroup creation date and time.\n\nEngineVersion -> (structure)\n\nThe engine version setting for all queries on the workgroup. Queries on the AmazonAthenaPreviewFunctionality workgroup run on the preview engine regardless of this setting.\n\nSelectedEngineVersion -> (string)\n\nThe engine version requested by the user. Possible values are determined by the output of ListEngineVersions , including Auto. The default is Auto.\n\nEffectiveEngineVersion -> (string)\n\nRead only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a CreateWorkGroup or UpdateWorkGroup operation, the EffectiveEngineVersion field is ignored.\n\nNextToken -> (string)\n\nA token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.",
      "command_examples": "Examples\n\nTo list workgroups\n\nThe following list-work-groups example lists the workgroups in the current account.\n\naws athena list-work-groups\n\n\nOutput:\n\n{\n    \"WorkGroups\": [\n        {\n            \"Name\": \"Data_Analyst_Group\",\n            \"State\": \"ENABLED\",\n            \"Description\": \"\",\n            \"CreationTime\": 1578006683.016\n        },\n        {\n            \"Name\": \"AthenaAdmin\",\n            \"State\": \"ENABLED\",\n            \"Description\": \"\",\n            \"CreationTime\": 1573677174.105\n        },\n        {\n            \"Name\": \"primary\",\n            \"State\": \"ENABLED\",\n            \"Description\": \"\",\n            \"CreationTime\": 1567465222.723\n        }\n    ]\n}\n\n\nFor more information, see Managing Workgroups in the Amazon Athena User Guide."
    },
    {
      "command_name": "start-query-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/start-query-execution.html",
      "command_description": "Description\n\nRuns the SQL query statements contained in the Query . Requires you to have access to the workgroup in which the query ran. Running queries against an external catalog requires GetDataCatalog permission to the catalog. For code samples using the Amazon Web Services SDK for Java, see Examples and Code Samples in the Amazon Athena User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-query-execution\n--query-string <value>\n[--client-request-token <value>]\n[--query-execution-context <value>]\n[--result-configuration <value>]\n[--work-group <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--query-string <value>",
        "[--client-request-token <value>]",
        "[--query-execution-context <value>]",
        "[--result-configuration <value>]",
        "[--work-group <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--query-string (string)\n\nThe SQL query statements to be executed.\n\n--client-request-token (string)\n\nA unique case-sensitive string used to ensure the request to create the query is idempotent (executes only once). If another StartQueryExecution request is received, the same response is returned and another query is not created. If a parameter has changed, for example, the QueryString , an error is returned.\n\nWarning\n\nThis token is listed as not required because Amazon Web Services SDKs (for example the Amazon Web Services SDK for Java) auto-generate the token for users. If you are not using the Amazon Web Services SDK or the Amazon Web Services CLI, you must provide this token or the action will fail.\n\n--query-execution-context (structure)\n\nThe database within which the query executes.\n\nDatabase -> (string)\n\nThe name of the database used in the query execution. The database must exist in the catalog.\n\nCatalog -> (string)\n\nThe name of the data catalog used in the query execution.\n\nShorthand Syntax:\n\nDatabase=string,Catalog=string\n\n\nJSON Syntax:\n\n{\n  \"Database\": \"string\",\n  \"Catalog\": \"string\"\n}\n\n\n--result-configuration (structure)\n\nSpecifies information about where and how to save the results of the query execution. If the query runs in a workgroup, then workgroup’s settings may override query settings. This affects the query results location. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See WorkGroupConfiguration$EnforceWorkGroupConfiguration .\n\nOutputLocation -> (string)\n\nThe location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/ . To run the query, you must specify the query results location using one of the ways: either for individual queries using either this setting (client-side), or in the workgroup, using WorkGroupConfiguration . If none of them is set, Athena issues an error that no output location is provided. For more information, see Query Results . If workgroup settings override client-side settings, then the query uses the settings specified for the workgroup. See WorkGroupConfiguration$EnforceWorkGroupConfiguration .\n\nEncryptionConfiguration -> (structure)\n\nIf query results are encrypted in Amazon S3, indicates the encryption option used (for example, SSE-KMS or CSE-KMS ) and key information. This is a client-side setting. If workgroup settings override client-side settings, then the query uses the encryption configuration that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See WorkGroupConfiguration$EnforceWorkGroupConfiguration and Workgroup Settings Override Client-Side Settings .\n\nEncryptionOption -> (string)\n\nIndicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3 ), server-side encryption with KMS-managed keys (SSE-KMS ), or client-side encryption with KMS-managed keys (CSE-KMS) is used.\n\nIf a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup’s setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.\n\nKmsKey -> (string)\n\nFor SSE-KMS and CSE-KMS , this is the KMS key ARN or ID.\n\nShorthand Syntax:\n\nOutputLocation=string,EncryptionConfiguration={EncryptionOption=string,KmsKey=string}\n\n\nJSON Syntax:\n\n{\n  \"OutputLocation\": \"string\",\n  \"EncryptionConfiguration\": {\n    \"EncryptionOption\": \"SSE_S3\"|\"SSE_KMS\"|\"CSE_KMS\",\n    \"KmsKey\": \"string\"\n  }\n}\n\n\n--work-group (string)\n\nThe name of the workgroup in which the query is being started.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueryExecutionId -> (string)\n\nThe unique ID of the query that ran as a result of this request.",
      "command_examples": "Examples\n\nExample 1: To run a query in a workgroup on the specified table in the specified database and data catalog\n\nThe following start-query-execution example uses the AthenaAdmin workgroup to run a query on the cloudfront_logs table in the cflogsdatabase in the AwsDataCatalog data catalog.\n\naws athena start-query-execution \\\n    --query-string \"select date, location, browser, uri, status from cloudfront_logs where method = 'GET' and status = 200 and location like 'SFO%' limit 10\" \\\n    --work-group \"AthenaAdmin\" \\\n    --query-execution-context Database=cflogsdatabase,Catalog=AwsDataCatalog\n\n\nOutput:\n\n{\n\"QueryExecutionId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\"\n}\n\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide.\n\nExample 2: To run a query that uses a specified workgroup to create a database in the specified data catalog\n\nThe following start-query-execution example uses the AthenaAdmin workgroup to create the database newdb in the default data catalog AwsDataCatalog.\n\naws athena start-query-execution \\\n    --query-string \"create database if not exists newdb\" \\\n    --work-group \"AthenaAdmin\"\n\n\nOutput:\n\n{\n\"QueryExecutionId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11112\"\n}\n\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide.\n\nExample 3: To run a query that creates a view on a table in the specified database and data catalog\n\nThe following start-query-execution example uses a SELECT statement on the cloudfront_logs table in the cflogsdatabase to create the view cf10.\n\naws athena start-query-execution \\\n    --query-string  \"CREATE OR REPLACE VIEW cf10 AS SELECT * FROM cloudfront_logs limit 10\" \\\n    --query-execution-context Database=cflogsdatabase\n\n\nOutput:\n\n{\n\"QueryExecutionId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11113\"\n}\n\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide."
    },
    {
      "command_name": "stop-query-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/stop-query-execution.html",
      "command_description": "Description\n\nStops a query execution. Requires you to have access to the workgroup in which the query ran.\n\nFor code samples using the Amazon Web Services SDK for Java, see Examples and Code Samples in the Amazon Athena User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-query-execution\n[--query-execution-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--query-execution-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--query-execution-id (string)\n\nThe unique ID of the query execution to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo stop a running query\n\nThe following stop-query-execution example stops the query that has the specified query ID.\n\naws athena stop-query-execution \\\n    --query-execution-id a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\n\n\nThis command produces no output.\n\nFor more information, see Running SQL Queries Using Amazon Athena in the Amazon Athena User Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/tag-resource.html",
      "command_description": "Description\n\nAdds one or more tags to an Athena resource. A tag is a label that you assign to a resource. In Athena, a resource can be a workgroup or data catalog. Each tag consists of a key and an optional value, both of which you define. For example, you can use tags to categorize Athena workgroups or data catalogs by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups or data catalogs in your account. For best practices, see Tagging Best Practices . Tag keys can be from 1 to 128 UTF-8 Unicode characters, and tag values can be from 0 to 256 UTF-8 Unicode characters. Tags can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one tag, separate them by commas.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nSpecifies the ARN of the Athena resource (workgroup or data catalog) to which tags are to be added.\n\n--tags (list)\n\nA collection of one or more tags, separated by commas, to be added to an Athena workgroup or data catalog resource.\n\n(structure)\n\nA label that you assign to a resource. In Athena, a resource can be a workgroup or data catalog. Each tag consists of a key and an optional value, both of which you define. For example, you can use tags to categorize Athena workgroups or data catalogs by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups or data catalogs in your account. For best practices, see Tagging Best Practices . Tag keys can be from 1 to 128 UTF-8 Unicode characters, and tag values can be from 0 to 256 UTF-8 Unicode characters. Tags can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one tag, separate them by commas.\n\nKey -> (string)\n\nA tag key. The tag key length is from 1 to 128 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys are case-sensitive and must be unique per resource.\n\nValue -> (string)\n\nA tag value. The tag value length is from 0 to 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag values are case-sensitive.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a tag to a resource\n\nThe following tag-resource example adds three tags to the dynamo_db_catalog data catalog.\n\naws athena tag-resource \\\n    --resource-arn arn:aws:athena:us-west-2:111122223333:datacatalog/dynamo_db_catalog \\\n    --tags Key=Organization,Value=Retail Key=Division,Value=Mountain Key=Product_Line,Value=Shoes Key=Location,Value=Denver\n\n\nThis command produces no output. To see the result, use aws athena list-tags-for-resource --resource-arn arn:aws:athena:us-west-2:111122223333:datacatalog/dynamo_db_catalog.\n\nFor more information, see Adding tags to a resource: tag-resource in the Amazon Athena User Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/untag-resource.html",
      "command_description": "Description\n\nRemoves one or more tags from a data catalog or workgroup resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nSpecifies the ARN of the resource from which tags are to be removed.\n\n--tag-keys (list)\n\nA comma-separated list of one or more tag keys whose tags are to be removed from the specified resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a tag from a resource\n\nThe following untag-resource example removes the Specialization and Focus keys and their associated values from the dynamo_db_catalog data catalog resource.\n\naws athena untag-resource \\\n    --resource-arn arn:aws:athena:us-west-2:111122223333:datacatalog/dynamo_db_catalog \\\n    --tag-keys Specialization Focus\n\n\nThis command produces no output. To see the results, use the list-tags-for-resource command.\n\nFor more information, see Removing tags from a resource: untag-resource in the Amazon Athena User Guide."
    },
    {
      "command_name": "update-data-catalog",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/update-data-catalog.html",
      "command_description": "Description\n\nUpdates the data catalog that has the specified name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-data-catalog\n--name <value>\n--type <value>\n[--description <value>]\n[--parameters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--type <value>",
        "[--description <value>]",
        "[--parameters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the data catalog to update. The catalog name must be unique for the Amazon Web Services account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters.\n\n--type (string)\n\nSpecifies the type of data catalog to update. Specify LAMBDA for a federated catalog, HIVE for an external hive metastore, or GLUE for an Glue Data Catalog.\n\nPossible values:\n\nLAMBDA\n\nGLUE\n\nHIVE\n\n--description (string)\n\nNew or modified text that describes the data catalog.\n\n--parameters (map)\n\nSpecifies the Lambda function or functions to use for updating the data catalog. This is a mapping whose values depend on the catalog type.\n\nFor the HIVE data catalog type, use the following syntax. The metadata-function parameter is required. The sdk-version parameter is optional and defaults to the currently supported version. ``metadata-function=*lambda_arn* , sdk-version=*version_number* ``\n\nFor the LAMBDA data catalog type, use one of the following sets of required parameters, but not both.\n\nIf you have one Lambda function that processes metadata and another for reading the actual data, use the following syntax. Both parameters are required. ``metadata-function=*lambda_arn* , record-function=*lambda_arn* ``\n\nIf you have a composite Lambda function that processes both metadata and data, use the following syntax to specify your Lambda function. ``function=*lambda_arn* ``\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a data catalog\n\nThe following update-data-catalog example updates the Lambda function and description of the cw_logs_catalog data catalog.\n\naws athena update-data-catalog \\\n    --name cw_logs_catalog \\\n    --type LAMBDA \\\n    --description \"New CloudWatch Logs Catalog\" \\\n    --function=arn:aws:lambda:us-west-2:111122223333:function:new_cw_logs_lambda\n\n\nThis command produces no output. To see the result, use aws athena get-data-catalog --name cw_logs_catalog.\n\nFor more information, see Updating a Catalog: update-data-catalog in the Amazon Athena User Guide."
    },
    {
      "command_name": "update-prepared-statement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/update-prepared-statement.html",
      "command_description": "Description\n\nUpdates a prepared statement.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-prepared-statement\n--statement-name <value>\n--work-group <value>\n--query-statement <value>\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--statement-name <value>",
        "--work-group <value>",
        "--query-statement <value>",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--statement-name (string)\n\nThe name of the prepared statement.\n\n--work-group (string)\n\nThe workgroup for the prepared statement.\n\n--query-statement (string)\n\nThe query string for the prepared statement.\n\n--description (string)\n\nThe description of the prepared statement.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-work-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/athena/update-work-group.html",
      "command_description": "Description\n\nUpdates the workgroup with the specified name. The workgroup’s name cannot be changed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-work-group\n--work-group <value>\n[--description <value>]\n[--configuration-updates <value>]\n[--state <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--work-group <value>",
        "[--description <value>]",
        "[--configuration-updates <value>]",
        "[--state <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--work-group (string)\n\nThe specified workgroup that will be updated.\n\n--description (string)\n\nThe workgroup description.\n\n--configuration-updates (structure)\n\nThe workgroup configuration that will be updated for the given workgroup.\n\nEnforceWorkGroupConfiguration -> (boolean)\n\nIf set to “true”, the settings for the workgroup override client-side settings. If set to “false” client-side settings are used. For more information, see Workgroup Settings Override Client-Side Settings .\n\nResultConfigurationUpdates -> (structure)\n\nThe result configuration information about the queries in this workgroup that will be updated. Includes the updated results location and an updated option for encrypting query results.\n\nOutputLocation -> (string)\n\nThe location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/ . For more information, see Query Results If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup. The “workgroup settings override” is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration . See WorkGroupConfiguration$EnforceWorkGroupConfiguration .\n\nRemoveOutputLocation -> (boolean)\n\nIf set to “true”, indicates that the previously-specified query results location (also known as a client-side setting) for queries in this workgroup should be ignored and set to null. If set to “false” or not set, and a value is present in the OutputLocation in ResultConfigurationUpdates (the client-side setting), the OutputLocation in the workgroup’s ResultConfiguration will be updated with the new value. For more information, see Workgroup Settings Override Client-Side Settings .\n\nEncryptionConfiguration -> (structure)\n\nThe encryption configuration for the query results.\n\nEncryptionOption -> (string)\n\nIndicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3 ), server-side encryption with KMS-managed keys (SSE-KMS ), or client-side encryption with KMS-managed keys (CSE-KMS) is used.\n\nIf a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup’s setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.\n\nKmsKey -> (string)\n\nFor SSE-KMS and CSE-KMS , this is the KMS key ARN or ID.\n\nRemoveEncryptionConfiguration -> (boolean)\n\nIf set to “true”, indicates that the previously-specified encryption configuration (also known as the client-side setting) for queries in this workgroup should be ignored and set to null. If set to “false” or not set, and a value is present in the EncryptionConfiguration in ResultConfigurationUpdates (the client-side setting), the EncryptionConfiguration in the workgroup’s ResultConfiguration will be updated with the new value. For more information, see Workgroup Settings Override Client-Side Settings .\n\nPublishCloudWatchMetricsEnabled -> (boolean)\n\nIndicates whether this workgroup enables publishing metrics to Amazon CloudWatch.\n\nBytesScannedCutoffPerQuery -> (long)\n\nThe upper limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan.\n\nRemoveBytesScannedCutoffPerQuery -> (boolean)\n\nIndicates that the data usage control limit per query is removed. WorkGroupConfiguration$BytesScannedCutoffPerQuery\n\nRequesterPaysEnabled -> (boolean)\n\nIf set to true , allows members assigned to a workgroup to specify Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see Requester Pays Buckets in the Amazon Simple Storage Service Developer Guide .\n\nEngineVersion -> (structure)\n\nThe engine version requested when a workgroup is updated. After the update, all queries on the workgroup run on the requested engine version. If no value was previously set, the default is Auto. Queries on the AmazonAthenaPreviewFunctionality workgroup run on the preview engine regardless of this setting.\n\nSelectedEngineVersion -> (string)\n\nThe engine version requested by the user. Possible values are determined by the output of ListEngineVersions , including Auto. The default is Auto.\n\nEffectiveEngineVersion -> (string)\n\nRead only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a CreateWorkGroup or UpdateWorkGroup operation, the EffectiveEngineVersion field is ignored.\n\nShorthand Syntax:\n\nEnforceWorkGroupConfiguration=boolean,ResultConfigurationUpdates={OutputLocation=string,RemoveOutputLocation=boolean,EncryptionConfiguration={EncryptionOption=string,KmsKey=string},RemoveEncryptionConfiguration=boolean},PublishCloudWatchMetricsEnabled=boolean,BytesScannedCutoffPerQuery=long,RemoveBytesScannedCutoffPerQuery=boolean,RequesterPaysEnabled=boolean,EngineVersion={SelectedEngineVersion=string,EffectiveEngineVersion=string}\n\n\nJSON Syntax:\n\n{\n  \"EnforceWorkGroupConfiguration\": true|false,\n  \"ResultConfigurationUpdates\": {\n    \"OutputLocation\": \"string\",\n    \"RemoveOutputLocation\": true|false,\n    \"EncryptionConfiguration\": {\n      \"EncryptionOption\": \"SSE_S3\"|\"SSE_KMS\"|\"CSE_KMS\",\n      \"KmsKey\": \"string\"\n    },\n    \"RemoveEncryptionConfiguration\": true|false\n  },\n  \"PublishCloudWatchMetricsEnabled\": true|false,\n  \"BytesScannedCutoffPerQuery\": long,\n  \"RemoveBytesScannedCutoffPerQuery\": true|false,\n  \"RequesterPaysEnabled\": true|false,\n  \"EngineVersion\": {\n    \"SelectedEngineVersion\": \"string\",\n    \"EffectiveEngineVersion\": \"string\"\n  }\n}\n\n\n--state (string)\n\nThe workgroup state that will be updated for the given workgroup.\n\nPossible values:\n\nENABLED\n\nDISABLED\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a workgroup\n\nThe following update-work-group example disables the Data_Analyst_Group workgroup. Users cannot run or create queries in the disabled workgroup, but can still view metrics, data usage limit controls, workgroup settings, query history, and saved queries.\n\naws athena update-work-group \\\n    --work-group Data_Analyst_Group \\\n    --state DISABLED\n\n\nThis command produces no output. To verify the change in state, use aws athena get-work-group --work-group Data_Analyst_Group and check the State property in the output.\n\nFor more information, see Managing Workgroups in the Amazon Athena User Guide."
    }
  ],
  "service_description": "Description\n\nAmazon Athena is an interactive query service that lets you use standard SQL to analyze data directly in Amazon S3. You can point Athena at your data in Amazon S3 and run ad-hoc queries and get results in seconds. Athena is serverless, so there is no infrastructure to set up or manage. You pay only for the queries you run. Athena scales automatically—executing queries in parallel—so results are fast, even with large datasets and complex queries. For more information, see What is Amazon Athena in the Amazon Athena User Guide .\n\nIf you connect to Athena using the JDBC driver, use version 1.1.0 of the driver or later with the Amazon Athena API. Earlier version drivers do not support the API. For more information and to download the driver, see Accessing Amazon Athena with JDBC .\n\nFor code samples using the Amazon Web Services SDK for Java, see Examples and Code Samples in the Amazon Athena User Guide ."
}