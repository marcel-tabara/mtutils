{
  "service_name": "servicediscovery",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/index.html",
  "service_commands": [
    {
      "command_name": "create-http-namespace",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/create-http-namespace.html",
      "command_description": "Description\n\nCreates an HTTP namespace. Service instances registered using an HTTP namespace can be discovered using a DiscoverInstances request but can’t be discovered using DNS.\n\nFor the current quota on the number of namespaces that you can create using the same account, see Cloud Map quotas in the Cloud Map Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-http-namespace\n--name <value>\n[--creator-request-id <value>]\n[--description <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--creator-request-id <value>]",
        "[--description <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name that you want to assign to this namespace.\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows failed CreateHttpNamespace requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string (for example, a date/time stamp).\n\n--description (string)\n\nA description for the namespace.\n\n--tags (list)\n\nThe tags to add to the namespace. Each tag consists of a key and an optional value that you define. Tags keys can be up to 128 characters in length, and tag values can be up to 256 characters in length.\n\n(structure)\n\nA custom key-value pair that’s associated with a resource.\n\nKey -> (string)\n\nThe key identifier, or name, of the tag.\n\nValue -> (string)\n\nThe string value that’s associated with the key of the tag. You can set the value of a tag to an empty string, but you can’t set the value of a tag to null.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nA value that you can use to determine whether the request completed successfully. To get the status of the operation, see GetOperation ."
    },
    {
      "command_name": "create-private-dns-namespace",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/create-private-dns-namespace.html",
      "command_description": "Description\n\nCreates a private namespace based on DNS, which is visible only inside a specified Amazon VPC. The namespace defines your service naming scheme. For example, if you name your namespace example.com and name your service backend , the resulting DNS name for the service is backend.example.com . Service instances that are registered using a private DNS namespace can be discovered using either a DiscoverInstances request or using DNS. For the current quota on the number of namespaces that you can create using the same account, see Cloud Map quotas in the Cloud Map Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-private-dns-namespace\n--name <value>\n[--creator-request-id <value>]\n[--description <value>]\n--vpc <value>\n[--tags <value>]\n[--properties <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--creator-request-id <value>]",
        "[--description <value>]",
        "--vpc <value>",
        "[--tags <value>]",
        "[--properties <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name that you want to assign to this namespace. When you create a private DNS namespace, Cloud Map automatically creates an Amazon Route 53 private hosted zone that has the same name as the namespace.\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows failed CreatePrivateDnsNamespace requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string (for example, a date/timestamp).\n\n--description (string)\n\nA description for the namespace.\n\n--vpc (string)\n\nThe ID of the Amazon VPC that you want to associate the namespace with.\n\n--tags (list)\n\nThe tags to add to the namespace. Each tag consists of a key and an optional value that you define. Tags keys can be up to 128 characters in length, and tag values can be up to 256 characters in length.\n\n(structure)\n\nA custom key-value pair that’s associated with a resource.\n\nKey -> (string)\n\nThe key identifier, or name, of the tag.\n\nValue -> (string)\n\nThe string value that’s associated with the key of the tag. You can set the value of a tag to an empty string, but you can’t set the value of a tag to null.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--properties (structure)\n\nProperties for the private DNS namespace.\n\nDnsProperties -> (structure)\n\nDNS properties for the private DNS namespace.\n\nSOA -> (structure)\n\nFields for the Start of Authority (SOA) record for the hosted zone for the private DNS namespace.\n\nTTL -> (long)\n\nThe time to live (TTL) for purposes of negative caching.\n\nShorthand Syntax:\n\nDnsProperties={SOA={TTL=long}}\n\n\nJSON Syntax:\n\n{\n  \"DnsProperties\": {\n    \"SOA\": {\n      \"TTL\": long\n    }\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nA value that you can use to determine whether the request completed successfully. To get the status of the operation, see GetOperation .",
      "command_examples": "Examples\n\nTo create a private DNS namespace\n\nThe following create-private-dns-namespace example creates a private DNS namespace.\n\naws servicediscovery create-private-dns-namespace \\\n    --name example.com \\\n    --vpc vpc-1c56417b\n\n\nOutput:\n\n{\n    \"OperationId\": \"gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd\"\n}\n\n\nTo confirm that the operation succeeded, you can run get-operation. For more information, see get-operation .\n\nFor more information, see Creating namespaces in the AWS Cloud Map Developer Guide."
    },
    {
      "command_name": "create-public-dns-namespace",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/create-public-dns-namespace.html",
      "command_description": "Description\n\nCreates a public namespace based on DNS, which is visible on the internet. The namespace defines your service naming scheme. For example, if you name your namespace example.com and name your service backend , the resulting DNS name for the service is backend.example.com . You can discover instances that were registered with a public DNS namespace by using either a DiscoverInstances request or using DNS. For the current quota on the number of namespaces that you can create using the same account, see Cloud Map quotas in the Cloud Map Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-public-dns-namespace\n--name <value>\n[--creator-request-id <value>]\n[--description <value>]\n[--tags <value>]\n[--properties <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--creator-request-id <value>]",
        "[--description <value>]",
        "[--tags <value>]",
        "[--properties <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name that you want to assign to this namespace.\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows failed CreatePublicDnsNamespace requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string (for example, a date/timestamp).\n\n--description (string)\n\nA description for the namespace.\n\n--tags (list)\n\nThe tags to add to the namespace. Each tag consists of a key and an optional value that you define. Tags keys can be up to 128 characters in length, and tag values can be up to 256 characters in length.\n\n(structure)\n\nA custom key-value pair that’s associated with a resource.\n\nKey -> (string)\n\nThe key identifier, or name, of the tag.\n\nValue -> (string)\n\nThe string value that’s associated with the key of the tag. You can set the value of a tag to an empty string, but you can’t set the value of a tag to null.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--properties (structure)\n\nProperties for the public DNS namespace.\n\nDnsProperties -> (structure)\n\nDNS properties for the public DNS namespace.\n\nSOA -> (structure)\n\nStart of Authority (SOA) record for the hosted zone for the public DNS namespace.\n\nTTL -> (long)\n\nThe time to live (TTL) for purposes of negative caching.\n\nShorthand Syntax:\n\nDnsProperties={SOA={TTL=long}}\n\n\nJSON Syntax:\n\n{\n  \"DnsProperties\": {\n    \"SOA\": {\n      \"TTL\": long\n    }\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nA value that you can use to determine whether the request completed successfully. To get the status of the operation, see GetOperation ."
    },
    {
      "command_name": "create-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/create-service.html",
      "command_description": "Description\n\nCreates a service. This action defines the configuration for the following entities:\n\nFor public and private DNS namespaces, one of the following combinations of DNS records in Amazon Route 53:\n\nA\n\nAAAA\n\nA and AAAA\n\nSRV\n\nCNAME\n\nOptionally, a health check\n\nAfter you create the service, you can submit a RegisterInstance request, and Cloud Map uses the values in the configuration to create the specified entities.\n\nFor the current quota on the number of instances that you can register using the same namespace and using the same service, see Cloud Map quotas in the Cloud Map Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-service\n--name <value>\n[--namespace-id <value>]\n[--creator-request-id <value>]\n[--description <value>]\n[--dns-config <value>]\n[--health-check-config <value>]\n[--health-check-custom-config <value>]\n[--tags <value>]\n[--type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--namespace-id <value>]",
        "[--creator-request-id <value>]",
        "[--description <value>]",
        "[--dns-config <value>]",
        "[--health-check-config <value>]",
        "[--health-check-custom-config <value>]",
        "[--tags <value>]",
        "[--type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name that you want to assign to the service.\n\nIf you want Cloud Map to create an SRV record when you register an instance and you’re using a system that requires a specific SRV format, such as HAProxy , specify the following for Name :\n\nStart the name with an underscore (_), such as _exampleservice .\n\nEnd the name with ._protocol , such as ._tcp .\n\nWhen you register an instance, Cloud Map creates an SRV record and assigns a name to the record by concatenating the service name and the namespace name (for example,\n\n_exampleservice._tcp.example.com ).\n\nNote\n\nFor services that are accessible by DNS queries, you can’t create multiple services with names that differ only by case (such as EXAMPLE and example). Otherwise, these services have the same DNS name and can’t be distinguished. However, if you use a namespace that’s only accessible by API calls, then you can create services that with names that differ only by case.\n\n--namespace-id (string)\n\nThe ID of the namespace that you want to use to create the service. The namespace ID must be specified, but it can be specified either here or in the DnsConfig object.\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows failed CreateService requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string (for example, a date/timestamp).\n\n--description (string)\n\nA description for the service.\n\n--dns-config (structure)\n\nA complex type that contains information about the Amazon Route 53 records that you want Cloud Map to create when you register an instance.\n\nNamespaceId -> (string)\n\nThe ID of the namespace to use for DNS configuration.\n\nRoutingPolicy -> (string)\n\nThe routing policy that you want to apply to all Route 53 DNS records that Cloud Map creates when you register an instance and specify this service.\n\nNote\n\nIf you want to use this service to register instances that create alias records, specify WEIGHTED for the routing policy.\n\nYou can specify the following values:\n\nMULTIVALUE\n\nIf you define a health check for the service and the health check is healthy, Route 53 returns the applicable value for up to eight instances.\n\nFor example, suppose that the service includes configurations for one A record and a health check. You use the service to register 10 instances. Route 53 responds to DNS queries with IP addresses for up to eight healthy instances. If fewer than eight instances are healthy, Route 53 responds to every DNS query with the IP addresses for all of the healthy instances.\n\nIf you don’t define a health check for the service, Route 53 assumes that all instances are healthy and returns the values for up to eight instances.\n\nFor more information about the multivalue routing policy, see Multivalue Answer Routing in the Route 53 Developer Guide .\n\nWEIGHTED\n\nRoute 53 returns the applicable value from one randomly selected instance from among the instances that you registered using the same service. Currently, all records have the same weight, so you can’t route more or less traffic to any instances.\n\nFor example, suppose that the service includes configurations for one A record and a health check. You use the service to register 10 instances. Route 53 responds to DNS queries with the IP address for one randomly selected instance from among the healthy instances. If no instances are healthy, Route 53 responds to DNS queries as if all of the instances were healthy.\n\nIf you don’t define a health check for the service, Route 53 assumes that all instances are healthy and returns the applicable value for one randomly selected instance.\n\nFor more information about the weighted routing policy, see Weighted Routing in the Route 53 Developer Guide .\n\nDnsRecords -> (list)\n\nAn array that contains one DnsRecord object for each Route 53 DNS record that you want Cloud Map to create when you register an instance.\n\n(structure)\n\nA complex type that contains information about the Route 53 DNS records that you want Cloud Map to create when you register an instance.\n\nType -> (string)\n\nThe type of the resource, which indicates the type of value that Route 53 returns in response to DNS queries. You can specify values for Type in the following combinations:\n\n**A **\n\n**AAAA **\n\n**A ** and ** AAAA **\n\n**SRV **\n\n**CNAME **\n\nIf you want Cloud Map to create a Route 53 alias record when you register an instance, specify A or AAAA for Type .\n\nYou specify other settings, such as the IP address for A and AAAA records, when you register an instance. For more information, see RegisterInstance .\n\nThe following values are supported:\n\nA\n\nRoute 53 returns the IP address of the resource in IPv4 format, such as 192.0.2.44.\n\nAAAA\n\nRoute 53 returns the IP address of the resource in IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.\n\nCNAME\n\nRoute 53 returns the domain name of the resource, such as www.example.com. Note the following:\n\nYou specify the domain name that you want to route traffic to when you register an instance. For more information, see Attributes in the topic RegisterInstance .\n\nYou must specify WEIGHTED for the value of RoutingPolicy .\n\nYou can’t specify both CNAME for Type and settings for HealthCheckConfig . If you do, the request will fail with an InvalidInput error.\n\nSRV\n\nRoute 53 returns the value for an SRV record. The value for an SRV record uses the following values:\n\npriority weight port service-hostname\n\nNote the following about the values:\n\nThe values of priority and weight are both set to 1 and can’t be changed.\n\nThe value of port comes from the value that you specify for the AWS_INSTANCE_PORT attribute when you submit a RegisterInstance request.\n\nThe value of service-hostname is a concatenation of the following values:\n\nThe value that you specify for InstanceId when you register an instance.\n\nThe name of the service.\n\nThe name of the namespace.\n\nFor example, if the value of InstanceId is test , the name of the service is backend , and the name of the namespace is example.com , the value of service-hostname is the following:\n\ntest.backend.example.com\n\nIf you specify settings for an SRV record, note the following:\n\nIf you specify values for AWS_INSTANCE_IPV4 , AWS_INSTANCE_IPV6 , or both in the RegisterInstance request, Cloud Map automatically creates A and/or AAAA records that have the same name as the value of service-hostname in the SRV record. You can ignore these records.\n\nIf you’re using a system that requires a specific SRV format, such as HAProxy, see the Name element in the documentation about CreateService for information about how to specify the correct name format.\n\nTTL -> (long)\n\nThe amount of time, in seconds, that you want DNS resolvers to cache the settings for this record.\n\nNote\n\nAlias records don’t include a TTL because Route 53 uses the TTL for the Amazon Web Services resource that an alias record routes traffic to. If you include the AWS_ALIAS_DNS_NAME attribute when you submit a RegisterInstance request, the TTL value is ignored. Always specify a TTL for the service; you can use a service to register instances that create either alias or non-alias records.\n\nShorthand Syntax:\n\nNamespaceId=string,RoutingPolicy=string,DnsRecords=[{Type=string,TTL=long},{Type=string,TTL=long}]\n\n\nJSON Syntax:\n\n{\n  \"NamespaceId\": \"string\",\n  \"RoutingPolicy\": \"MULTIVALUE\"|\"WEIGHTED\",\n  \"DnsRecords\": [\n    {\n      \"Type\": \"SRV\"|\"A\"|\"AAAA\"|\"CNAME\",\n      \"TTL\": long\n    }\n    ...\n  ]\n}\n\n\n--health-check-config (structure)\n\nPublic DNS and HTTP namespaces only. A complex type that contains settings for an optional Route 53 health check. If you specify settings for a health check, Cloud Map associates the health check with all the Route 53 DNS records that you specify in DnsConfig .\n\nWarning\n\nIf you specify a health check configuration, you can specify either HealthCheckCustomConfig or HealthCheckConfig but not both.\n\nFor information about the charges for health checks, see Cloud Map Pricing .\n\nType -> (string)\n\nThe type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy.\n\nWarning\n\nYou can’t change the value of Type after you create a health check.\n\nYou can create the following types of health checks:\n\nHTTP : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.\n\nHTTPS : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.\n\nWarning\n\nIf you specify HTTPS for the value of Type , the endpoint must support TLS v1.0 or later.\n\nTCP : Route 53 tries to establish a TCP connection. If you specify TCP for Type , don’t specify a value for ResourcePath .\n\nFor more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Route 53 Developer Guide .\n\nResourcePath -> (string)\n\nThe path that you want Route 53 to request when performing health checks. The path can be any value that your endpoint returns an HTTP status code of a 2xx or 3xx format for when the endpoint is healthy. An example file is /docs/route53-health-check.html . Route 53 automatically adds the DNS name for the service. If you don’t specify a value for ResourcePath , the default value is / .\n\nIf you specify TCP for Type , you must not specify a value for ResourcePath .\n\nFailureThreshold -> (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or the other way around. For more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Route 53 Developer Guide .\n\nShorthand Syntax:\n\nType=string,ResourcePath=string,FailureThreshold=integer\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"HTTP\"|\"HTTPS\"|\"TCP\",\n  \"ResourcePath\": \"string\",\n  \"FailureThreshold\": integer\n}\n\n\n--health-check-custom-config (structure)\n\nA complex type that contains information about an optional custom health check.\n\nWarning\n\nIf you specify a health check configuration, you can specify either HealthCheckCustomConfig or HealthCheckConfig but not both.\n\nYou can’t add, update, or delete a HealthCheckCustomConfig configuration from an existing service.\n\nFailureThreshold -> (integer)\n\nWarning\n\nThis parameter is no longer supported and is always set to 1. Cloud Map waits for approximately 30 seconds after receiving an UpdateInstanceCustomHealthStatus request before changing the status of the service instance.\n\nThe number of 30-second intervals that you want Cloud Map to wait after receiving an UpdateInstanceCustomHealthStatus request before it changes the health status of a service instance.\n\nSending a second or subsequent UpdateInstanceCustomHealthStatus request with the same value before 30 seconds has passed doesn’t accelerate the change. Cloud Map still waits 30 seconds after the first request to make the change.\n\nShorthand Syntax:\n\nFailureThreshold=integer\n\n\nJSON Syntax:\n\n{\n  \"FailureThreshold\": integer\n}\n\n\n--tags (list)\n\nThe tags to add to the service. Each tag consists of a key and an optional value that you define. Tags keys can be up to 128 characters in length, and tag values can be up to 256 characters in length.\n\n(structure)\n\nA custom key-value pair that’s associated with a resource.\n\nKey -> (string)\n\nThe key identifier, or name, of the tag.\n\nValue -> (string)\n\nThe string value that’s associated with the key of the tag. You can set the value of a tag to an empty string, but you can’t set the value of a tag to null.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--type (string)\n\nIf present, specifies that the service instances are only discoverable using the DiscoverInstances API operation. No DNS records is registered for the service instances. The only valid value is HTTP .\n\nPossible values:\n\nHTTP\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nService -> (structure)\n\nA complex type that contains information about the new service.\n\nId -> (string)\n\nThe ID that Cloud Map assigned to the service when you created it.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that Cloud Map assigns to the service when you create it.\n\nName -> (string)\n\nThe name of the service.\n\nNamespaceId -> (string)\n\nThe ID of the namespace that was used to create the service.\n\nDescription -> (string)\n\nThe description of the service.\n\nInstanceCount -> (integer)\n\nThe number of instances that are currently associated with the service. Instances that were previously associated with the service but that are deleted aren’t included in the count. The count might not reflect pending registrations and deregistrations.\n\nDnsConfig -> (structure)\n\nA complex type that contains information about the Route 53 DNS records that you want Cloud Map to create when you register an instance.\n\nNamespaceId -> (string)\n\nThe ID of the namespace to use for DNS configuration.\n\nRoutingPolicy -> (string)\n\nThe routing policy that you want to apply to all Route 53 DNS records that Cloud Map creates when you register an instance and specify this service.\n\nNote\n\nIf you want to use this service to register instances that create alias records, specify WEIGHTED for the routing policy.\n\nYou can specify the following values:\n\nMULTIVALUE\n\nIf you define a health check for the service and the health check is healthy, Route 53 returns the applicable value for up to eight instances.\n\nFor example, suppose that the service includes configurations for one A record and a health check. You use the service to register 10 instances. Route 53 responds to DNS queries with IP addresses for up to eight healthy instances. If fewer than eight instances are healthy, Route 53 responds to every DNS query with the IP addresses for all of the healthy instances.\n\nIf you don’t define a health check for the service, Route 53 assumes that all instances are healthy and returns the values for up to eight instances.\n\nFor more information about the multivalue routing policy, see Multivalue Answer Routing in the Route 53 Developer Guide .\n\nWEIGHTED\n\nRoute 53 returns the applicable value from one randomly selected instance from among the instances that you registered using the same service. Currently, all records have the same weight, so you can’t route more or less traffic to any instances.\n\nFor example, suppose that the service includes configurations for one A record and a health check. You use the service to register 10 instances. Route 53 responds to DNS queries with the IP address for one randomly selected instance from among the healthy instances. If no instances are healthy, Route 53 responds to DNS queries as if all of the instances were healthy.\n\nIf you don’t define a health check for the service, Route 53 assumes that all instances are healthy and returns the applicable value for one randomly selected instance.\n\nFor more information about the weighted routing policy, see Weighted Routing in the Route 53 Developer Guide .\n\nDnsRecords -> (list)\n\nAn array that contains one DnsRecord object for each Route 53 DNS record that you want Cloud Map to create when you register an instance.\n\n(structure)\n\nA complex type that contains information about the Route 53 DNS records that you want Cloud Map to create when you register an instance.\n\nType -> (string)\n\nThe type of the resource, which indicates the type of value that Route 53 returns in response to DNS queries. You can specify values for Type in the following combinations:\n\n**A **\n\n**AAAA **\n\n**A ** and ** AAAA **\n\n**SRV **\n\n**CNAME **\n\nIf you want Cloud Map to create a Route 53 alias record when you register an instance, specify A or AAAA for Type .\n\nYou specify other settings, such as the IP address for A and AAAA records, when you register an instance. For more information, see RegisterInstance .\n\nThe following values are supported:\n\nA\n\nRoute 53 returns the IP address of the resource in IPv4 format, such as 192.0.2.44.\n\nAAAA\n\nRoute 53 returns the IP address of the resource in IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.\n\nCNAME\n\nRoute 53 returns the domain name of the resource, such as www.example.com. Note the following:\n\nYou specify the domain name that you want to route traffic to when you register an instance. For more information, see Attributes in the topic RegisterInstance .\n\nYou must specify WEIGHTED for the value of RoutingPolicy .\n\nYou can’t specify both CNAME for Type and settings for HealthCheckConfig . If you do, the request will fail with an InvalidInput error.\n\nSRV\n\nRoute 53 returns the value for an SRV record. The value for an SRV record uses the following values:\n\npriority weight port service-hostname\n\nNote the following about the values:\n\nThe values of priority and weight are both set to 1 and can’t be changed.\n\nThe value of port comes from the value that you specify for the AWS_INSTANCE_PORT attribute when you submit a RegisterInstance request.\n\nThe value of service-hostname is a concatenation of the following values:\n\nThe value that you specify for InstanceId when you register an instance.\n\nThe name of the service.\n\nThe name of the namespace.\n\nFor example, if the value of InstanceId is test , the name of the service is backend , and the name of the namespace is example.com , the value of service-hostname is the following:\n\ntest.backend.example.com\n\nIf you specify settings for an SRV record, note the following:\n\nIf you specify values for AWS_INSTANCE_IPV4 , AWS_INSTANCE_IPV6 , or both in the RegisterInstance request, Cloud Map automatically creates A and/or AAAA records that have the same name as the value of service-hostname in the SRV record. You can ignore these records.\n\nIf you’re using a system that requires a specific SRV format, such as HAProxy, see the Name element in the documentation about CreateService for information about how to specify the correct name format.\n\nTTL -> (long)\n\nThe amount of time, in seconds, that you want DNS resolvers to cache the settings for this record.\n\nNote\n\nAlias records don’t include a TTL because Route 53 uses the TTL for the Amazon Web Services resource that an alias record routes traffic to. If you include the AWS_ALIAS_DNS_NAME attribute when you submit a RegisterInstance request, the TTL value is ignored. Always specify a TTL for the service; you can use a service to register instances that create either alias or non-alias records.\n\nType -> (string)\n\nDescribes the systems that can be used to discover the service instances.\n\nDNS_HTTP\n\nThe service instances can be discovered using either DNS queries or the DiscoverInstances API operation.\n\nHTTP\n\nThe service instances can only be discovered using the DiscoverInstances API operation.\n\nDNS\n\nReserved.\n\nHealthCheckConfig -> (structure)\n\nPublic DNS and HTTP namespaces only. A complex type that contains settings for an optional health check. If you specify settings for a health check, Cloud Map associates the health check with the records that you specify in DnsConfig .\n\nFor information about the charges for health checks, see Amazon Route 53 Pricing .\n\nType -> (string)\n\nThe type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy.\n\nWarning\n\nYou can’t change the value of Type after you create a health check.\n\nYou can create the following types of health checks:\n\nHTTP : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.\n\nHTTPS : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.\n\nWarning\n\nIf you specify HTTPS for the value of Type , the endpoint must support TLS v1.0 or later.\n\nTCP : Route 53 tries to establish a TCP connection. If you specify TCP for Type , don’t specify a value for ResourcePath .\n\nFor more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Route 53 Developer Guide .\n\nResourcePath -> (string)\n\nThe path that you want Route 53 to request when performing health checks. The path can be any value that your endpoint returns an HTTP status code of a 2xx or 3xx format for when the endpoint is healthy. An example file is /docs/route53-health-check.html . Route 53 automatically adds the DNS name for the service. If you don’t specify a value for ResourcePath , the default value is / .\n\nIf you specify TCP for Type , you must not specify a value for ResourcePath .\n\nFailureThreshold -> (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or the other way around. For more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Route 53 Developer Guide .\n\nHealthCheckCustomConfig -> (structure)\n\nA complex type that contains information about an optional custom health check.\n\nWarning\n\nIf you specify a health check configuration, you can specify either HealthCheckCustomConfig or HealthCheckConfig but not both.\n\nFailureThreshold -> (integer)\n\nWarning\n\nThis parameter is no longer supported and is always set to 1. Cloud Map waits for approximately 30 seconds after receiving an UpdateInstanceCustomHealthStatus request before changing the status of the service instance.\n\nThe number of 30-second intervals that you want Cloud Map to wait after receiving an UpdateInstanceCustomHealthStatus request before it changes the health status of a service instance.\n\nSending a second or subsequent UpdateInstanceCustomHealthStatus request with the same value before 30 seconds has passed doesn’t accelerate the change. Cloud Map still waits 30 seconds after the first request to make the change.\n\nCreateDate -> (timestamp)\n\nThe date and time that the service was created, in Unix format and Coordinated Universal Time (UTC). The value of CreateDate is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string (for example, a date/timestamp).",
      "command_examples": "Examples\n\nTo create a service\n\nThe following create-service example creates a service.\n\naws servicediscovery create-service \\\n    --name myservice \\\n    --namespace-id  ns-ylexjili4cdxy3xm \\\n    --dns-config \"NamespaceId=ns-ylexjili4cdxy3xm,RoutingPolicy=MULTIVALUE,DnsRecords=[{Type=A,TTL=60}]\"\n\n\nOutput:\n\n{\n        \"Service\": {\n        \"Id\": \"srv-p5zdwlg5uvvzjita\",\n        \"Arn\": \"arn:aws:servicediscovery:us-west-2:803642222207:service/srv-p5zdwlg5uvvzjita\",\n        \"Name\": \"myservice\",\n        \"NamespaceId\": \"ns-ylexjili4cdxy3xm\",\n        \"DnsConfig\": {\n            \"NamespaceId\": \"ns-ylexjili4cdxy3xm\",\n            \"RoutingPolicy\": \"MULTIVALUE\",\n            \"DnsRecords\": [\n                {\n                    \"Type\": \"A\",\n                    \"TTL\": 60\n                }\n            ]\n        },\n        \"CreateDate\": 1587081768.334,\n        \"CreatorRequestId\": \"567c1193-6b00-4308-bd57-ad38a8822d25\"\n    }\n}\n\n\nFor more information, see Creating services in the AWS Cloud Map Developer Guide."
    },
    {
      "command_name": "delete-namespace",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/delete-namespace.html",
      "command_description": "Description\n\nDeletes a namespace from the current account. If the namespace still contains one or more services, the request fails.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-namespace\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the namespace that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nA value that you can use to determine whether the request completed successfully. To get the status of the operation, see GetOperation .",
      "command_examples": "Examples\n\nTo delete a namespace\n\nThe following delete-namespace example deletes a namespace.\n\naws servicediscovery delete-namespace \\\n    --id ns-ylexjili4cdxy3xm\n\n\nOutput:\n\n{\n    \"OperationId\": \"gv4g5meo7ndmeh4fqskygvk23d2fijwa-k98y6drk\"\n}\n\n\nTo confirm that the operation succeeded, you can run get-operation. For more information, see get-operation .\n\nFor more information, see Deleting namespaces in the AWS Cloud Map Developer Guide."
    },
    {
      "command_name": "delete-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/delete-service.html",
      "command_description": "Description\n\nDeletes a specified service. If the service still contains one or more registered instances, the request fails.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-service\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the service that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a service\n\nThe following delete-service example deletes a service.\n\naws servicediscovery delete-service \\\n    --id srv-p5zdwlg5uvvzjita\n\n\nThis command produces no output.\n\nFor more information, see Deleting services in the AWS Cloud Map Developer Guide."
    },
    {
      "command_name": "deregister-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/deregister-instance.html",
      "command_description": "Description\n\nDeletes the Amazon Route 53 DNS records and health check, if any, that Cloud Map created for the specified instance.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister-instance\n--service-id <value>\n--instance-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-id <value>",
        "--instance-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-id (string)\n\nThe ID of the service that the instance is associated with.\n\n--instance-id (string)\n\nThe value that you specified for Id in the RegisterInstance request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nA value that you can use to determine whether the request completed successfully. To get the status of the operation, see GetOperation .",
      "command_examples": "Examples\n\nTo deregister a service instance\n\nThe following deregister-instance example deregisters a service instance.\n\naws servicediscovery deregister-instance \\\n    --service-id srv-p5zdwlg5uvvzjita \\\n    --instance-id myservice-53\n\n\nOutput:\n\n{\n    \"OperationId\": \"4yejorelbukcjzpnr6tlmrghsjwpngf4-k98rnaiq\"\n}\n\n\nTo confirm that the operation succeeded, you can run get-operation. For more information, see get-operation .\n\nFor more information, see Deregistering service instances in the AWS Cloud Map Developer Guide."
    },
    {
      "command_name": "discover-instances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/discover-instances.html",
      "command_description": "Description\n\nDiscovers registered instances for a specified namespace and service. You can use DiscoverInstances to discover instances for any type of namespace. For public and private DNS namespaces, you can also use DNS queries to discover instances.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  discover-instances\n--namespace-name <value>\n--service-name <value>\n[--max-results <value>]\n[--query-parameters <value>]\n[--optional-parameters <value>]\n[--health-status <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--namespace-name <value>",
        "--service-name <value>",
        "[--max-results <value>]",
        "[--query-parameters <value>]",
        "[--optional-parameters <value>]",
        "[--health-status <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--namespace-name (string)\n\nThe HttpName name of the namespace. It’s found in the HttpProperties member of the Properties member of the namespace.\n\n--service-name (string)\n\nThe name of the service that you specified when you registered the instance.\n\n--max-results (integer)\n\nThe maximum number of instances that you want Cloud Map to return in the response to a DiscoverInstances request. If you don’t specify a value for MaxResults , Cloud Map returns up to 100 instances.\n\n--query-parameters (map)\n\nFilters to scope the results based on custom attributes for the instance (for example, {version=v1, az=1a} ). Only instances that match all the specified key-value pairs are returned.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--optional-parameters (map)\n\nOpportunistic filters to scope the results based on custom attributes. If there are instances that match both the filters specified in both the QueryParameters parameter and this parameter, all of these instances are returned. Otherwise, the filters are ignored, and only instances that match the filters that are specified in the QueryParameters parameter are returned.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--health-status (string)\n\nThe health status of the instances that you want to discover. This parameter is ignored for services that don’t have a health check configured, and all instances are returned.\n\nHEALTHY\n\nReturns healthy instances.\n\nUNHEALTHY\n\nReturns unhealthy instances.\n\nALL\n\nReturns all instances.\n\nHEALTHY_OR_ELSE_ALL\n\nReturns healthy instances, unless none are reporting a healthy state. In that case, return all instances. This is also called failing open.\n\nPossible values:\n\nHEALTHY\n\nUNHEALTHY\n\nALL\n\nHEALTHY_OR_ELSE_ALL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstances -> (list)\n\nA complex type that contains one HttpInstanceSummary for each registered instance.\n\n(structure)\n\nIn a response to a DiscoverInstances request, HttpInstanceSummary contains information about one instance that matches the values that you specified in the request.\n\nInstanceId -> (string)\n\nThe ID of an instance that matches the values that you specified in the request.\n\nNamespaceName -> (string)\n\nThe HttpName name of the namespace. It’s found in the HttpProperties member of the Properties member of the namespace.\n\nServiceName -> (string)\n\nThe name of the service that you specified when you registered the instance.\n\nHealthStatus -> (string)\n\nIf you configured health checking in the service, the current health status of the service instance.\n\nAttributes -> (map)\n\nIf you included any attributes when you registered the instance, the values of those attributes.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo discover registered instances\n\nThe following discover-instances example discovers registered instances.\n\naws servicediscovery discover-instances \\\n    --namespace-name example.com \\\n    --service-name myservice \\\n    --max-results 10 \\\n    --health-status ALL\n\n\nOutput:\n\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"myservice-53\",\n            \"NamespaceName\": \"example.com\",\n            \"ServiceName\": \"myservice\",\n            \"HealthStatus\": \"UNKNOWN\",\n            \"Attributes\": {\n                \"AWS_INSTANCE_IPV4\": \"172.2.1.3\",\n                \"AWS_INSTANCE_PORT\": \"808\"\n            }\n        }\n    ]\n}\n"
    },
    {
      "command_name": "get-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/get-instance.html",
      "command_description": "Description\n\nGets information about a specified instance.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-instance\n--service-id <value>\n--instance-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-id <value>",
        "--instance-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-id (string)\n\nThe ID of the service that the instance is associated with.\n\n--instance-id (string)\n\nThe ID of the instance that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstance -> (structure)\n\nA complex type that contains information about a specified instance.\n\nId -> (string)\n\nAn identifier that you want to associate with the instance. Note the following:\n\nIf the service that’s specified by ServiceId includes settings for an SRV record, the value of InstanceId is automatically included as part of the value for the SRV record. For more information, see DnsRecord > Type .\n\nYou can use this value to update an existing instance.\n\nTo register a new instance, you must specify a value that’s unique among instances that you register by using the same service.\n\nIf you specify an existing InstanceId and ServiceId , Cloud Map updates the existing DNS records. If there’s also an existing health check, Cloud Map deletes the old health check and creates a new one.\n\nNote\n\nThe health check isn’t deleted immediately, so it will still appear for a while if you submit a ListHealthChecks request, for example.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request and that allows failed RegisterInstance requests to be retried without the risk of executing the operation twice. You must use a unique CreatorRequestId string every time you submit a RegisterInstance request if you’re registering additional instances for the same namespace and service. CreatorRequestId can be any unique string (for example, a date/time stamp).\n\nAttributes -> (map)\n\nA string map that contains the following information for the service that you specify in ServiceId :\n\nThe attributes that apply to the records that are defined in the service.\n\nFor each attribute, the applicable value.\n\nSupported attribute keys include the following:\n\nAWS_ALIAS_DNS_NAME\n\nIf you want Cloud Map to create a Route 53 alias record that routes traffic to an Elastic Load Balancing load balancer, specify the DNS name that’s associated with the load balancer. For information about how to get the DNS name, see AliasTarget->DNSName in the Route 53 API Reference .\n\nNote the following:\n\nThe configuration for the service that’s specified by ServiceId must include settings for an A record, an AAAA record, or both.\n\nIn the service that’s specified by ServiceId , the value of RoutingPolicy must be WEIGHTED .\n\nIf the service that’s specified by ServiceId includes HealthCheckConfig settings, Cloud Map creates the health check, but it won’t associate the health check with the alias record.\n\nAuto naming currently doesn’t support creating alias records that route traffic to Amazon Web Services resources other than ELB load balancers.\n\nIf you specify a value for AWS_ALIAS_DNS_NAME , don’t specify values for any of the AWS_INSTANCE attributes.\n\nAWS_EC2_INSTANCE_ID\n\nHTTP namespaces only. The Amazon EC2 instance ID for the instance. The AWS_INSTANCE_IPV4 attribute contains the primary private IPv4 address.\n\nAWS_INIT_HEALTH_STATUS\n\nIf the service configuration includes HealthCheckCustomConfig , you can optionally use AWS_INIT_HEALTH_STATUS to specify the initial status of the custom health check, HEALTHY or UNHEALTHY . If you don’t specify a value for AWS_INIT_HEALTH_STATUS , the initial status is HEALTHY .\n\nAWS_INSTANCE_CNAME\n\nIf the service configuration includes a CNAME record, the domain name that you want Route 53 to return in response to DNS queries (for example, example.com ).\n\nThis value is required if the service specified by ServiceId includes settings for an CNAME record.\n\nAWS_INSTANCE_IPV4\n\nIf the service configuration includes an A record, the IPv4 address that you want Route 53 to return in response to DNS queries (for example, 192.0.2.44 ).\n\nThis value is required if the service specified by ServiceId includes settings for an A record. If the service includes settings for an SRV record, you must specify a value for AWS_INSTANCE_IPV4 , AWS_INSTANCE_IPV6 , or both.\n\nAWS_INSTANCE_IPV6\n\nIf the service configuration includes an AAAA record, the IPv6 address that you want Route 53 to return in response to DNS queries (for example, 2001:0db8:85a3:0000:0000:abcd:0001:2345 ).\n\nThis value is required if the service specified by ServiceId includes settings for an AAAA record. If the service includes settings for an SRV record, you must specify a value for AWS_INSTANCE_IPV4 , AWS_INSTANCE_IPV6 , or both.\n\nAWS_INSTANCE_PORT\n\nIf the service includes an SRV record, the value that you want Route 53 to return for the port.\n\nIf the service includes HealthCheckConfig , the port on the endpoint that you want Route 53 to send requests to.\n\nThis value is required if you specified settings for an SRV record or a Route 53 health check when you created the service.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "get-instances-health-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/get-instances-health-status.html",
      "command_description": "Description\n\nGets the current health status (Healthy , Unhealthy , or Unknown ) of one or more instances that are associated with a specified service.\n\nNote\n\nThere’s a brief delay between when you register an instance and when the health status for the instance is available.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-instances-health-status\n--service-id <value>\n[--instances <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-id <value>",
        "[--instances <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-id (string)\n\nThe ID of the service that the instance is associated with.\n\n--instances (list)\n\nAn array that contains the IDs of all the instances that you want to get the health status for.\n\nIf you omit Instances , Cloud Map returns the health status for all the instances that are associated with the specified service.\n\nNote\n\nTo get the IDs for the instances that you’ve registered by using a specified service, submit a ListInstances request.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--max-results (integer)\n\nThe maximum number of instances that you want Cloud Map to return in the response to a GetInstancesHealthStatus request. If you don’t specify a value for MaxResults , Cloud Map returns up to 100 instances.\n\n--next-token (string)\n\nFor the first GetInstancesHealthStatus request, omit this value.\n\nIf more than MaxResults instances match the specified criteria, you can submit another GetInstancesHealthStatus request to get the next group of results. Specify the value of NextToken from the previous response in the next request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatus -> (map)\n\nA complex type that contains the IDs and the health status of the instances that you specified in the GetInstancesHealthStatus request.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nIf more than MaxResults instances match the specified criteria, you can submit another GetInstancesHealthStatus request to get the next group of results. Specify the value of NextToken from the previous response in the next request."
    },
    {
      "command_name": "get-namespace",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/get-namespace.html",
      "command_description": "Description\n\nGets information about a namespace.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-namespace\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the namespace that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNamespace -> (structure)\n\nA complex type that contains information about the specified namespace.\n\nId -> (string)\n\nThe ID of a namespace.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that Cloud Map assigns to the namespace when you create it.\n\nName -> (string)\n\nThe name of the namespace, such as example.com .\n\nType -> (string)\n\nThe type of the namespace. The methods for discovering instances depends on the value that you specify:\n\nHTTP\n\nInstances can be discovered only programmatically, using the Cloud Map DiscoverInstances API.\n\nDNS_PUBLIC\n\nInstances can be discovered using public DNS queries and using the DiscoverInstances API.\n\nDNS_PRIVATE\n\nInstances can be discovered using DNS queries in VPCs and using the DiscoverInstances API.\n\nDescription -> (string)\n\nThe description that you specify for the namespace when you create it.\n\nServiceCount -> (integer)\n\nThe number of services that are associated with the namespace.\n\nProperties -> (structure)\n\nA complex type that contains information that’s specific to the type of the namespace.\n\nDnsProperties -> (structure)\n\nA complex type that contains the ID for the Route 53 hosted zone that Cloud Map creates when you create a namespace.\n\nHostedZoneId -> (string)\n\nThe ID for the Route 53 hosted zone that Cloud Map creates when you create a namespace.\n\nSOA -> (structure)\n\nStart of Authority (SOA) record for the hosted zone.\n\nTTL -> (long)\n\nThe time to live (TTL) for purposes of negative caching.\n\nHttpProperties -> (structure)\n\nA complex type that contains the name of an HTTP namespace.\n\nHttpName -> (string)\n\nThe name of an HTTP namespace.\n\nCreateDate -> (timestamp)\n\nThe date that the namespace was created, in Unix date/time format and Coordinated Universal Time (UTC). The value of CreateDate is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request and that allows failed requests to be retried without the risk of running an operation twice."
    },
    {
      "command_name": "get-operation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/get-operation.html",
      "command_description": "Description\n\nGets information about any operation that returns an operation ID in the response, such as a CreateService request.\n\nNote\n\nTo get a list of operations that match specified criteria, see ListOperations .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-operation\n--operation-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--operation-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--operation-id (string)\n\nThe ID of the operation that you want to get more information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperation -> (structure)\n\nA complex type that contains information about the operation.\n\nId -> (string)\n\nThe ID of the operation that you want to get information about.\n\nType -> (string)\n\nThe name of the operation that’s associated with the specified ID.\n\nStatus -> (string)\n\nThe status of the operation. Values include the following:\n\nSUBMITTED\n\nThis is the initial state that occurs immediately after you submit a request.\n\nPENDING\n\nCloud Map is performing the operation.\n\nSUCCESS\n\nThe operation succeeded.\n\nFAIL\n\nThe operation failed. For the failure reason, see ErrorMessage .\n\nErrorMessage -> (string)\n\nIf the value of Status is FAIL , the reason that the operation failed.\n\nErrorCode -> (string)\n\nThe code associated with ErrorMessage . Values for ErrorCode include the following:\n\nACCESS_DENIED\n\nCANNOT_CREATE_HOSTED_ZONE\n\nEXPIRED_TOKEN\n\nHOSTED_ZONE_NOT_FOUND\n\nINTERNAL_FAILURE\n\nINVALID_CHANGE_BATCH\n\nTHROTTLED_REQUEST\n\nCreateDate -> (timestamp)\n\nThe date and time that the request was submitted, in Unix date/time format and Coordinated Universal Time (UTC). The value of CreateDate is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.\n\nUpdateDate -> (timestamp)\n\nThe date and time that the value of Status changed to the current value, in Unix date/time format and Coordinated Universal Time (UTC). The value of UpdateDate is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.\n\nTargets -> (map)\n\nThe name of the target entity that’s associated with the operation:\n\nNAMESPACE\n\nThe namespace ID is returned in the ResourceId property.\n\nSERVICE\n\nThe service ID is returned in the ResourceId property.\n\nINSTANCE\n\nThe instance ID is returned in the ResourceId property.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo get the result of an operation\n\nThe following get-operation example gets the result of an operation.\n\naws servicediscovery get-operation \\\n    --operation-id gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd\n\n\nOutput:\n\n{\n    \"Operation\": {\n        \"Id\": \"gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd\",\n        \"Type\": \"CREATE_NAMESPACE\",\n        \"Status\": \"SUCCESS\",\n        \"CreateDate\": 1587055860.121,\n        \"UpdateDate\": 1587055900.469,\n        \"Targets\": {\n            \"NAMESPACE\": \"ns-ylexjili4cdxy3xm\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/get-service.html",
      "command_description": "Description\n\nGets the settings for a specified service.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-service\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the service that you want to get settings for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nService -> (structure)\n\nA complex type that contains information about the service.\n\nId -> (string)\n\nThe ID that Cloud Map assigned to the service when you created it.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that Cloud Map assigns to the service when you create it.\n\nName -> (string)\n\nThe name of the service.\n\nNamespaceId -> (string)\n\nThe ID of the namespace that was used to create the service.\n\nDescription -> (string)\n\nThe description of the service.\n\nInstanceCount -> (integer)\n\nThe number of instances that are currently associated with the service. Instances that were previously associated with the service but that are deleted aren’t included in the count. The count might not reflect pending registrations and deregistrations.\n\nDnsConfig -> (structure)\n\nA complex type that contains information about the Route 53 DNS records that you want Cloud Map to create when you register an instance.\n\nNamespaceId -> (string)\n\nThe ID of the namespace to use for DNS configuration.\n\nRoutingPolicy -> (string)\n\nThe routing policy that you want to apply to all Route 53 DNS records that Cloud Map creates when you register an instance and specify this service.\n\nNote\n\nIf you want to use this service to register instances that create alias records, specify WEIGHTED for the routing policy.\n\nYou can specify the following values:\n\nMULTIVALUE\n\nIf you define a health check for the service and the health check is healthy, Route 53 returns the applicable value for up to eight instances.\n\nFor example, suppose that the service includes configurations for one A record and a health check. You use the service to register 10 instances. Route 53 responds to DNS queries with IP addresses for up to eight healthy instances. If fewer than eight instances are healthy, Route 53 responds to every DNS query with the IP addresses for all of the healthy instances.\n\nIf you don’t define a health check for the service, Route 53 assumes that all instances are healthy and returns the values for up to eight instances.\n\nFor more information about the multivalue routing policy, see Multivalue Answer Routing in the Route 53 Developer Guide .\n\nWEIGHTED\n\nRoute 53 returns the applicable value from one randomly selected instance from among the instances that you registered using the same service. Currently, all records have the same weight, so you can’t route more or less traffic to any instances.\n\nFor example, suppose that the service includes configurations for one A record and a health check. You use the service to register 10 instances. Route 53 responds to DNS queries with the IP address for one randomly selected instance from among the healthy instances. If no instances are healthy, Route 53 responds to DNS queries as if all of the instances were healthy.\n\nIf you don’t define a health check for the service, Route 53 assumes that all instances are healthy and returns the applicable value for one randomly selected instance.\n\nFor more information about the weighted routing policy, see Weighted Routing in the Route 53 Developer Guide .\n\nDnsRecords -> (list)\n\nAn array that contains one DnsRecord object for each Route 53 DNS record that you want Cloud Map to create when you register an instance.\n\n(structure)\n\nA complex type that contains information about the Route 53 DNS records that you want Cloud Map to create when you register an instance.\n\nType -> (string)\n\nThe type of the resource, which indicates the type of value that Route 53 returns in response to DNS queries. You can specify values for Type in the following combinations:\n\n**A **\n\n**AAAA **\n\n**A ** and ** AAAA **\n\n**SRV **\n\n**CNAME **\n\nIf you want Cloud Map to create a Route 53 alias record when you register an instance, specify A or AAAA for Type .\n\nYou specify other settings, such as the IP address for A and AAAA records, when you register an instance. For more information, see RegisterInstance .\n\nThe following values are supported:\n\nA\n\nRoute 53 returns the IP address of the resource in IPv4 format, such as 192.0.2.44.\n\nAAAA\n\nRoute 53 returns the IP address of the resource in IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.\n\nCNAME\n\nRoute 53 returns the domain name of the resource, such as www.example.com. Note the following:\n\nYou specify the domain name that you want to route traffic to when you register an instance. For more information, see Attributes in the topic RegisterInstance .\n\nYou must specify WEIGHTED for the value of RoutingPolicy .\n\nYou can’t specify both CNAME for Type and settings for HealthCheckConfig . If you do, the request will fail with an InvalidInput error.\n\nSRV\n\nRoute 53 returns the value for an SRV record. The value for an SRV record uses the following values:\n\npriority weight port service-hostname\n\nNote the following about the values:\n\nThe values of priority and weight are both set to 1 and can’t be changed.\n\nThe value of port comes from the value that you specify for the AWS_INSTANCE_PORT attribute when you submit a RegisterInstance request.\n\nThe value of service-hostname is a concatenation of the following values:\n\nThe value that you specify for InstanceId when you register an instance.\n\nThe name of the service.\n\nThe name of the namespace.\n\nFor example, if the value of InstanceId is test , the name of the service is backend , and the name of the namespace is example.com , the value of service-hostname is the following:\n\ntest.backend.example.com\n\nIf you specify settings for an SRV record, note the following:\n\nIf you specify values for AWS_INSTANCE_IPV4 , AWS_INSTANCE_IPV6 , or both in the RegisterInstance request, Cloud Map automatically creates A and/or AAAA records that have the same name as the value of service-hostname in the SRV record. You can ignore these records.\n\nIf you’re using a system that requires a specific SRV format, such as HAProxy, see the Name element in the documentation about CreateService for information about how to specify the correct name format.\n\nTTL -> (long)\n\nThe amount of time, in seconds, that you want DNS resolvers to cache the settings for this record.\n\nNote\n\nAlias records don’t include a TTL because Route 53 uses the TTL for the Amazon Web Services resource that an alias record routes traffic to. If you include the AWS_ALIAS_DNS_NAME attribute when you submit a RegisterInstance request, the TTL value is ignored. Always specify a TTL for the service; you can use a service to register instances that create either alias or non-alias records.\n\nType -> (string)\n\nDescribes the systems that can be used to discover the service instances.\n\nDNS_HTTP\n\nThe service instances can be discovered using either DNS queries or the DiscoverInstances API operation.\n\nHTTP\n\nThe service instances can only be discovered using the DiscoverInstances API operation.\n\nDNS\n\nReserved.\n\nHealthCheckConfig -> (structure)\n\nPublic DNS and HTTP namespaces only. A complex type that contains settings for an optional health check. If you specify settings for a health check, Cloud Map associates the health check with the records that you specify in DnsConfig .\n\nFor information about the charges for health checks, see Amazon Route 53 Pricing .\n\nType -> (string)\n\nThe type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy.\n\nWarning\n\nYou can’t change the value of Type after you create a health check.\n\nYou can create the following types of health checks:\n\nHTTP : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.\n\nHTTPS : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.\n\nWarning\n\nIf you specify HTTPS for the value of Type , the endpoint must support TLS v1.0 or later.\n\nTCP : Route 53 tries to establish a TCP connection. If you specify TCP for Type , don’t specify a value for ResourcePath .\n\nFor more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Route 53 Developer Guide .\n\nResourcePath -> (string)\n\nThe path that you want Route 53 to request when performing health checks. The path can be any value that your endpoint returns an HTTP status code of a 2xx or 3xx format for when the endpoint is healthy. An example file is /docs/route53-health-check.html . Route 53 automatically adds the DNS name for the service. If you don’t specify a value for ResourcePath , the default value is / .\n\nIf you specify TCP for Type , you must not specify a value for ResourcePath .\n\nFailureThreshold -> (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or the other way around. For more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Route 53 Developer Guide .\n\nHealthCheckCustomConfig -> (structure)\n\nA complex type that contains information about an optional custom health check.\n\nWarning\n\nIf you specify a health check configuration, you can specify either HealthCheckCustomConfig or HealthCheckConfig but not both.\n\nFailureThreshold -> (integer)\n\nWarning\n\nThis parameter is no longer supported and is always set to 1. Cloud Map waits for approximately 30 seconds after receiving an UpdateInstanceCustomHealthStatus request before changing the status of the service instance.\n\nThe number of 30-second intervals that you want Cloud Map to wait after receiving an UpdateInstanceCustomHealthStatus request before it changes the health status of a service instance.\n\nSending a second or subsequent UpdateInstanceCustomHealthStatus request with the same value before 30 seconds has passed doesn’t accelerate the change. Cloud Map still waits 30 seconds after the first request to make the change.\n\nCreateDate -> (timestamp)\n\nThe date and time that the service was created, in Unix format and Coordinated Universal Time (UTC). The value of CreateDate is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.\n\nCreatorRequestId -> (string)\n\nA unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. CreatorRequestId can be any unique string (for example, a date/timestamp)."
    },
    {
      "command_name": "list-instances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/list-instances.html",
      "command_description": "Description\n\nLists summary information about the instances that you registered by using a specified service.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-instances is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Instances",
      "command_synopsis": "Synopsis\n  list-instances\n--service-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-id (string)\n\nThe ID of the service that you want to list instances for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstances -> (list)\n\nSummary information about the instances that are associated with the specified service.\n\n(structure)\n\nA complex type that contains information about the instances that you registered by using a specified service.\n\nId -> (string)\n\nThe ID for an instance that you created by using a specified service.\n\nAttributes -> (map)\n\nA string map that contains the following information:\n\nThe attributes that are associated with the instance.\n\nFor each attribute, the applicable value.\n\nSupported attribute keys include the following:\n\nAWS_ALIAS_DNS_NAME\n\nFor an alias record that routes traffic to an Elastic Load Balancing load balancer, the DNS name that’s associated with the load balancer.\n\nAWS_EC2_INSTANCE_ID (HTTP namespaces only)\n\nThe Amazon EC2 instance ID for the instance. When the AWS_EC2_INSTANCE_ID attribute is specified, then the AWS_INSTANCE_IPV4 attribute contains the primary private IPv4 address.\n\nAWS_INIT_HEALTH_STATUS\n\nIf the service configuration includes HealthCheckCustomConfig , you can optionally use AWS_INIT_HEALTH_STATUS to specify the initial status of the custom health check, HEALTHY or UNHEALTHY . If you don’t specify a value for AWS_INIT_HEALTH_STATUS , the initial status is HEALTHY .\n\nAWS_INSTANCE_CNAME\n\nFor a CNAME record, the domain name that Route 53 returns in response to DNS queries (for example, example.com ).\n\nAWS_INSTANCE_IPV4\n\nFor an A record, the IPv4 address that Route 53 returns in response to DNS queries (for example, 192.0.2.44 ).\n\nAWS_INSTANCE_IPV6\n\nFor an AAAA record, the IPv6 address that Route 53 returns in response to DNS queries (for example, 2001:0db8:85a3:0000:0000:abcd:0001:2345 ).\n\nAWS_INSTANCE_PORT\n\nFor an SRV record, the value that Route 53 returns for the port. In addition, if the service includes HealthCheckConfig , the port on the endpoint that Route 53 sends requests to.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nIf more than MaxResults instances match the specified criteria, you can submit another ListInstances request to get the next group of results. Specify the value of NextToken from the previous response in the next request.",
      "command_examples": "Examples\n\nTo list service instances\n\nThe following list-instances example lists service instances.\n\naws servicediscovery list-instances \\\n    --service-id srv-qzpwvt2tfqcegapy\n\n\nOutput:\n\n{\n    \"Instances\": [\n        {\n            \"Id\": \"i-06bdabbae60f65a4e\",\n            \"Attributes\": {\n                \"AWS_INSTANCE_IPV4\": \"172.2.1.3\",\n                \"AWS_INSTANCE_PORT\": \"808\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see Viewing a list of service instances in the AWS Cloud Map Developer Guide."
    },
    {
      "command_name": "list-namespaces",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/list-namespaces.html",
      "command_description": "Description\n\nLists summary information about the namespaces that were created by the current account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-namespaces is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Namespaces",
      "command_synopsis": "Synopsis\n  list-namespaces\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nA complex type that contains specifications for the namespaces that you want to list.\n\nIf you specify more than one filter, a namespace must match all filters to be returned by ListNamespaces .\n\n(structure)\n\nA complex type that identifies the namespaces that you want to list. You can choose to list public or private namespaces.\n\nName -> (string)\n\nSpecify TYPE .\n\nValues -> (list)\n\nIf you specify EQ for Condition , specify either DNS_PUBLIC or DNS_PRIVATE .\n\nIf you specify IN for Condition , you can specify DNS_PUBLIC , DNS_PRIVATE , or both.\n\n(string)\n\nCondition -> (string)\n\nThe operator that you want to use to determine whether ListNamespaces returns a namespace. Valid values for condition include:\n\nEQ\n\nWhen you specify EQ for the condition, you can choose to list only public namespaces or private namespaces, but not both. EQ is the default condition and can be omitted.\n\nIN\n\nWhen you specify IN for the condition, you can choose to list public namespaces, private namespaces, or both.\n\nBETWEEN\n\nNot applicable\n\nShorthand Syntax:\n\nName=string,Values=string,string,Condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"TYPE\",\n    \"Values\": [\"string\", ...],\n    \"Condition\": \"EQ\"|\"IN\"|\"BETWEEN\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNamespaces -> (list)\n\nAn array that contains one NamespaceSummary object for each namespace that matches the specified filter criteria.\n\n(structure)\n\nA complex type that contains information about a namespace.\n\nId -> (string)\n\nThe ID of the namespace.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that Cloud Map assigns to the namespace when you create it.\n\nName -> (string)\n\nThe name of the namespace. When you create a namespace, Cloud Map automatically creates a Route 53 hosted zone that has the same name as the namespace.\n\nType -> (string)\n\nThe type of the namespace, either public or private.\n\nDescription -> (string)\n\nA description for the namespace.\n\nServiceCount -> (integer)\n\nThe number of services that were created using the namespace.\n\nProperties -> (structure)\n\nThe properties of the namespace.\n\nDnsProperties -> (structure)\n\nA complex type that contains the ID for the Route 53 hosted zone that Cloud Map creates when you create a namespace.\n\nHostedZoneId -> (string)\n\nThe ID for the Route 53 hosted zone that Cloud Map creates when you create a namespace.\n\nSOA -> (structure)\n\nStart of Authority (SOA) record for the hosted zone.\n\nTTL -> (long)\n\nThe time to live (TTL) for purposes of negative caching.\n\nHttpProperties -> (structure)\n\nA complex type that contains the name of an HTTP namespace.\n\nHttpName -> (string)\n\nThe name of an HTTP namespace.\n\nCreateDate -> (timestamp)\n\nThe date and time that the namespace was created.\n\nNextToken -> (string)\n\nIf the response contains NextToken , submit another ListNamespaces request to get the next group of results. Specify the value of NextToken from the previous response in the next request.\n\nNote\n\nCloud Map gets MaxResults namespaces and then filters them based on the specified criteria. It’s possible that no namespaces in the first MaxResults namespaces matched the specified criteria but that subsequent groups of MaxResults namespaces do contain namespaces that match the criteria.",
      "command_examples": "Examples\n\nTo list namespaces\n\nThe following list-namespaces example lists namespaces.\n\naws servicediscovery list-namespaces\n\n\nOutput:\n\n{\n    \"Namespaces\": [\n        {\n            \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-a3ccy2e7e3a7rile\",\n            \"CreateDate\": 1585354387.357,\n            \"Id\": \"ns-a3ccy2e7e3a7rile\",\n            \"Name\": \"local\",\n            \"Properties\": {\n                \"DnsProperties\": {\n                    \"HostedZoneId\": \"Z06752353VBUDTC32S84S\"\n                },\n                \"HttpProperties\": {\n                    \"HttpName\": \"local\"\n                 }\n            },\n            \"Type\": \"DNS_PRIVATE\"\n        },\n        {\n            \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-pocfyjtrsmwtvcxx\",\n            \"CreateDate\": 1586468974.698,\n            \"Description\": \"My second namespace\",\n            \"Id\": \"ns-pocfyjtrsmwtvcxx\",\n            \"Name\": \"My-second-namespace\",\n            \"Properties\": {\n                \"DnsProperties\": {},\n                \"HttpProperties\": {\n                    \"HttpName\": \"My-second-namespace\"\n                }\n            },\n            \"Type\": \"HTTP\"\n        },\n        {\n            \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-ylexjili4cdxy3xm\",\n            \"CreateDate\": 1587055896.798,\n            \"Id\": \"ns-ylexjili4cdxy3xm\",\n            \"Name\": \"example.com\",\n            \"Properties\": {\n                \"DnsProperties\": {\n                    \"HostedZoneId\": \"Z09983722P0QME1B3KC8I\"\n                },\n                 \"HttpProperties\": {\n                     \"HttpName\": \"example.com\"\n                }\n            },\n            \"Type\": \"DNS_PRIVATE\"\n        }\n    ]\n}\n\n\nFor more information, see Viewing a list of namespaces in the AWS Cloud Map Developer Guide."
    },
    {
      "command_name": "list-operations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/list-operations.html",
      "command_description": "Description\n\nLists operations that match the criteria that you specify.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-operations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Operations",
      "command_synopsis": "Synopsis\n  list-operations\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nA complex type that contains specifications for the operations that you want to list, for example, operations that you started between a specified start date and end date.\n\nIf you specify more than one filter, an operation must match all filters to be returned by ListOperations .\n\n(structure)\n\nA complex type that lets you select the operations that you want to list.\n\nName -> (string)\n\nSpecify the operations that you want to get:\n\nNAMESPACE_ID : Gets operations related to specified namespaces.\n\nSERVICE_ID : Gets operations related to specified services.\n\nSTATUS : Gets operations based on the status of the operations: SUBMITTED , PENDING , SUCCEED , or FAIL .\n\nTYPE : Gets specified types of operation.\n\nUPDATE_DATE : Gets operations that changed status during a specified date/time range.\n\nValues -> (list)\n\nSpecify values that are applicable to the value that you specify for Name :\n\nNAMESPACE_ID : Specify one namespace ID.\n\nSERVICE_ID : Specify one service ID.\n\nSTATUS : Specify one or more statuses: SUBMITTED , PENDING , SUCCEED , or FAIL .\n\nTYPE : Specify one or more of the following types: CREATE_NAMESPACE , DELETE_NAMESPACE , UPDATE_SERVICE , REGISTER_INSTANCE , or DEREGISTER_INSTANCE .\n\nUPDATE_DATE : Specify a start date and an end date in Unix date/time format and Coordinated Universal Time (UTC). The start date must be the first value.\n\n(string)\n\nCondition -> (string)\n\nThe operator that you want to use to determine whether an operation matches the specified value. Valid values for condition include:\n\nEQ : When you specify EQ for the condition, you can specify only one value. EQ is supported for NAMESPACE_ID , SERVICE_ID , STATUS , and TYPE . EQ is the default condition and can be omitted.\n\nIN : When you specify IN for the condition, you can specify a list of one or more values. IN is supported for STATUS and TYPE . An operation must match one of the specified values to be returned in the response.\n\nBETWEEN : Specify a start date and an end date in Unix date/time format and Coordinated Universal Time (UTC). The start date must be the first value. BETWEEN is supported for UPDATE_DATE .\n\nShorthand Syntax:\n\nName=string,Values=string,string,Condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"NAMESPACE_ID\"|\"SERVICE_ID\"|\"STATUS\"|\"TYPE\"|\"UPDATE_DATE\",\n    \"Values\": [\"string\", ...],\n    \"Condition\": \"EQ\"|\"IN\"|\"BETWEEN\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperations -> (list)\n\nSummary information about the operations that match the specified criteria.\n\n(structure)\n\nA complex type that contains information about an operation that matches the criteria that you specified in a ListOperations request.\n\nId -> (string)\n\nThe ID for an operation.\n\nStatus -> (string)\n\nThe status of the operation. Values include the following:\n\nSUBMITTED : This is the initial state immediately after you submit a request.\n\nPENDING : Cloud Map is performing the operation.\n\nSUCCESS : The operation succeeded.\n\nFAIL : The operation failed. For the failure reason, see ErrorMessage .\n\nNextToken -> (string)\n\nIf the response contains NextToken , submit another ListOperations request to get the next group of results. Specify the value of NextToken from the previous response in the next request.\n\nNote\n\nCloud Map gets MaxResults operations and then filters them based on the specified criteria. It’s possible that no operations in the first MaxResults operations matched the specified criteria but that subsequent groups of MaxResults operations do contain operations that match the criteria."
    },
    {
      "command_name": "list-services",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/list-services.html",
      "command_description": "Description\n\nLists summary information for all the services that are associated with one or more specified namespaces.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-services is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Services",
      "command_synopsis": "Synopsis\n  list-services\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nA complex type that contains specifications for the namespaces that you want to list services for.\n\nIf you specify more than one filter, an operation must match all filters to be returned by ListServices .\n\n(structure)\n\nA complex type that lets you specify the namespaces that you want to list services for.\n\nName -> (string)\n\nSpecify NAMESPACE_ID .\n\nValues -> (list)\n\nThe values that are applicable to the value that you specify for Condition to filter the list of services.\n\n(string)\n\nCondition -> (string)\n\nThe operator that you want to use to determine whether a service is returned by ListServices . Valid values for Condition include the following:\n\nEQ : When you specify EQ , specify one namespace ID for Values . EQ is the default condition and can be omitted.\n\nIN : When you specify IN , specify a list of the IDs for the namespaces that you want ListServices to return a list of services for.\n\nBETWEEN : Not applicable.\n\nShorthand Syntax:\n\nName=string,Values=string,string,Condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"NAMESPACE_ID\",\n    \"Values\": [\"string\", ...],\n    \"Condition\": \"EQ\"|\"IN\"|\"BETWEEN\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServices -> (list)\n\nAn array that contains one ServiceSummary object for each service that matches the specified filter criteria.\n\n(structure)\n\nA complex type that contains information about a specified service.\n\nId -> (string)\n\nThe ID that Cloud Map assigned to the service when you created it.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) that Cloud Map assigns to the service when you create it.\n\nName -> (string)\n\nThe name of the service.\n\nType -> (string)\n\nDescribes the systems that can be used to discover the service instances.\n\nDNS_HTTP\n\nThe service instances can be discovered using either DNS queries or the DiscoverInstances API operation.\n\nHTTP\n\nThe service instances can only be discovered using the DiscoverInstances API operation.\n\nDNS\n\nReserved.\n\nDescription -> (string)\n\nThe description that you specify when you create the service.\n\nInstanceCount -> (integer)\n\nThe number of instances that are currently associated with the service. Instances that were previously associated with the service but that are deleted aren’t included in the count. The count might not reflect pending registrations and deregistrations.\n\nDnsConfig -> (structure)\n\nInformation about the Route 53 DNS records that you want Cloud Map to create when you register an instance.\n\nNamespaceId -> (string)\n\nThe ID of the namespace to use for DNS configuration.\n\nRoutingPolicy -> (string)\n\nThe routing policy that you want to apply to all Route 53 DNS records that Cloud Map creates when you register an instance and specify this service.\n\nNote\n\nIf you want to use this service to register instances that create alias records, specify WEIGHTED for the routing policy.\n\nYou can specify the following values:\n\nMULTIVALUE\n\nIf you define a health check for the service and the health check is healthy, Route 53 returns the applicable value for up to eight instances.\n\nFor example, suppose that the service includes configurations for one A record and a health check. You use the service to register 10 instances. Route 53 responds to DNS queries with IP addresses for up to eight healthy instances. If fewer than eight instances are healthy, Route 53 responds to every DNS query with the IP addresses for all of the healthy instances.\n\nIf you don’t define a health check for the service, Route 53 assumes that all instances are healthy and returns the values for up to eight instances.\n\nFor more information about the multivalue routing policy, see Multivalue Answer Routing in the Route 53 Developer Guide .\n\nWEIGHTED\n\nRoute 53 returns the applicable value from one randomly selected instance from among the instances that you registered using the same service. Currently, all records have the same weight, so you can’t route more or less traffic to any instances.\n\nFor example, suppose that the service includes configurations for one A record and a health check. You use the service to register 10 instances. Route 53 responds to DNS queries with the IP address for one randomly selected instance from among the healthy instances. If no instances are healthy, Route 53 responds to DNS queries as if all of the instances were healthy.\n\nIf you don’t define a health check for the service, Route 53 assumes that all instances are healthy and returns the applicable value for one randomly selected instance.\n\nFor more information about the weighted routing policy, see Weighted Routing in the Route 53 Developer Guide .\n\nDnsRecords -> (list)\n\nAn array that contains one DnsRecord object for each Route 53 DNS record that you want Cloud Map to create when you register an instance.\n\n(structure)\n\nA complex type that contains information about the Route 53 DNS records that you want Cloud Map to create when you register an instance.\n\nType -> (string)\n\nThe type of the resource, which indicates the type of value that Route 53 returns in response to DNS queries. You can specify values for Type in the following combinations:\n\n**A **\n\n**AAAA **\n\n**A ** and ** AAAA **\n\n**SRV **\n\n**CNAME **\n\nIf you want Cloud Map to create a Route 53 alias record when you register an instance, specify A or AAAA for Type .\n\nYou specify other settings, such as the IP address for A and AAAA records, when you register an instance. For more information, see RegisterInstance .\n\nThe following values are supported:\n\nA\n\nRoute 53 returns the IP address of the resource in IPv4 format, such as 192.0.2.44.\n\nAAAA\n\nRoute 53 returns the IP address of the resource in IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.\n\nCNAME\n\nRoute 53 returns the domain name of the resource, such as www.example.com. Note the following:\n\nYou specify the domain name that you want to route traffic to when you register an instance. For more information, see Attributes in the topic RegisterInstance .\n\nYou must specify WEIGHTED for the value of RoutingPolicy .\n\nYou can’t specify both CNAME for Type and settings for HealthCheckConfig . If you do, the request will fail with an InvalidInput error.\n\nSRV\n\nRoute 53 returns the value for an SRV record. The value for an SRV record uses the following values:\n\npriority weight port service-hostname\n\nNote the following about the values:\n\nThe values of priority and weight are both set to 1 and can’t be changed.\n\nThe value of port comes from the value that you specify for the AWS_INSTANCE_PORT attribute when you submit a RegisterInstance request.\n\nThe value of service-hostname is a concatenation of the following values:\n\nThe value that you specify for InstanceId when you register an instance.\n\nThe name of the service.\n\nThe name of the namespace.\n\nFor example, if the value of InstanceId is test , the name of the service is backend , and the name of the namespace is example.com , the value of service-hostname is the following:\n\ntest.backend.example.com\n\nIf you specify settings for an SRV record, note the following:\n\nIf you specify values for AWS_INSTANCE_IPV4 , AWS_INSTANCE_IPV6 , or both in the RegisterInstance request, Cloud Map automatically creates A and/or AAAA records that have the same name as the value of service-hostname in the SRV record. You can ignore these records.\n\nIf you’re using a system that requires a specific SRV format, such as HAProxy, see the Name element in the documentation about CreateService for information about how to specify the correct name format.\n\nTTL -> (long)\n\nThe amount of time, in seconds, that you want DNS resolvers to cache the settings for this record.\n\nNote\n\nAlias records don’t include a TTL because Route 53 uses the TTL for the Amazon Web Services resource that an alias record routes traffic to. If you include the AWS_ALIAS_DNS_NAME attribute when you submit a RegisterInstance request, the TTL value is ignored. Always specify a TTL for the service; you can use a service to register instances that create either alias or non-alias records.\n\nHealthCheckConfig -> (structure)\n\nPublic DNS and HTTP namespaces only. Settings for an optional health check. If you specify settings for a health check, Cloud Map associates the health check with the records that you specify in DnsConfig .\n\nType -> (string)\n\nThe type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy.\n\nWarning\n\nYou can’t change the value of Type after you create a health check.\n\nYou can create the following types of health checks:\n\nHTTP : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.\n\nHTTPS : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.\n\nWarning\n\nIf you specify HTTPS for the value of Type , the endpoint must support TLS v1.0 or later.\n\nTCP : Route 53 tries to establish a TCP connection. If you specify TCP for Type , don’t specify a value for ResourcePath .\n\nFor more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Route 53 Developer Guide .\n\nResourcePath -> (string)\n\nThe path that you want Route 53 to request when performing health checks. The path can be any value that your endpoint returns an HTTP status code of a 2xx or 3xx format for when the endpoint is healthy. An example file is /docs/route53-health-check.html . Route 53 automatically adds the DNS name for the service. If you don’t specify a value for ResourcePath , the default value is / .\n\nIf you specify TCP for Type , you must not specify a value for ResourcePath .\n\nFailureThreshold -> (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or the other way around. For more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Route 53 Developer Guide .\n\nHealthCheckCustomConfig -> (structure)\n\nInformation about an optional custom health check. A custom health check, which requires that you use a third-party health checker to evaluate the health of your resources, is useful in the following circumstances:\n\nYou can’t use a health check that’s defined by HealthCheckConfig because the resource isn’t available over the internet. For example, you can use a custom health check when the instance is in an Amazon VPC. (To check the health of resources in a VPC, the health checker must also be in the VPC.)\n\nYou want to use a third-party health checker regardless of where your resources are located.\n\nWarning\n\nIf you specify a health check configuration, you can specify either HealthCheckCustomConfig or HealthCheckConfig but not both.\n\nFailureThreshold -> (integer)\n\nWarning\n\nThis parameter is no longer supported and is always set to 1. Cloud Map waits for approximately 30 seconds after receiving an UpdateInstanceCustomHealthStatus request before changing the status of the service instance.\n\nThe number of 30-second intervals that you want Cloud Map to wait after receiving an UpdateInstanceCustomHealthStatus request before it changes the health status of a service instance.\n\nSending a second or subsequent UpdateInstanceCustomHealthStatus request with the same value before 30 seconds has passed doesn’t accelerate the change. Cloud Map still waits 30 seconds after the first request to make the change.\n\nCreateDate -> (timestamp)\n\nThe date and time that the service was created.\n\nNextToken -> (string)\n\nIf the response contains NextToken , submit another ListServices request to get the next group of results. Specify the value of NextToken from the previous response in the next request.\n\nNote\n\nCloud Map gets MaxResults services and then filters them based on the specified criteria. It’s possible that no services in the first MaxResults services matched the specified criteria but that subsequent groups of MaxResults services do contain services that match the criteria.",
      "command_examples": "Examples\n\nTo list services\n\nThe following list-services example lists services.\n\naws servicediscovery list-services\n\n\nOutput:\n\n{\n    \"Services\": [\n        {\n            \"Id\": \"srv-p5zdwlg5uvvzjita\",\n            \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:service/srv-p5zdwlg5uvvzjita\",\n            \"Name\": \"myservice\",\n            \"DnsConfig\": {\n                \"RoutingPolicy\": \"MULTIVALUE\",\n                \"DnsRecords\": [\n                    {\n                        \"Type\": \"A\",\n                        \"TTL\": 60\n                    }\n                ]\n            },\n            \"CreateDate\": 1587081768.334\n        }\n    ]\n}\n\n\nFor more information, see Viewing a list of services in the AWS Cloud Map Developer Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/list-tags-for-resource.html",
      "command_description": "Description\n\nLists tags for the specified resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe tags that are assigned to the resource.\n\n(structure)\n\nA custom key-value pair that’s associated with a resource.\n\nKey -> (string)\n\nThe key identifier, or name, of the tag.\n\nValue -> (string)\n\nThe string value that’s associated with the key of the tag. You can set the value of a tag to an empty string, but you can’t set the value of a tag to null."
    },
    {
      "command_name": "register-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/register-instance.html",
      "command_description": "Description\n\nCreates or updates one or more records and, optionally, creates a health check based on the settings in a specified service. When you submit a RegisterInstance request, the following occurs:\n\nFor each DNS record that you define in the service that’s specified by ServiceId , a record is created or updated in the hosted zone that’s associated with the corresponding namespace.\n\nIf the service includes HealthCheckConfig , a health check is created based on the settings in the health check configuration.\n\nThe health check, if any, is associated with each of the new or updated records.\n\nWarning\n\nOne RegisterInstance request must complete before you can submit another request and specify the same service ID and instance ID.\n\nFor more information, see CreateService .\n\nWhen Cloud Map receives a DNS query for the specified DNS name, it returns the applicable value:\n\nIf the health check is healthy : returns all the records\n\nIf the health check is unhealthy : returns the applicable value for the last healthy instance\n\nIf you didn’t specify a health check configuration : returns all the records\n\nFor the current quota on the number of instances that you can register using the same namespace and using the same service, see Cloud Map quotas in the Cloud Map Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-instance\n--service-id <value>\n--instance-id <value>\n[--creator-request-id <value>]\n--attributes <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-id <value>",
        "--instance-id <value>",
        "[--creator-request-id <value>]",
        "--attributes <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-id (string)\n\nThe ID of the service that you want to use for settings for the instance.\n\n--instance-id (string)\n\nAn identifier that you want to associate with the instance. Note the following:\n\nIf the service that’s specified by ServiceId includes settings for an SRV record, the value of InstanceId is automatically included as part of the value for the SRV record. For more information, see DnsRecord > Type .\n\nYou can use this value to update an existing instance.\n\nTo register a new instance, you must specify a value that’s unique among instances that you register by using the same service.\n\nIf you specify an existing InstanceId and ServiceId , Cloud Map updates the existing DNS records, if any. If there’s also an existing health check, Cloud Map deletes the old health check and creates a new one.\n\nNote\n\nThe health check isn’t deleted immediately, so it will still appear for a while if you submit a ListHealthChecks request, for example.\n\n--creator-request-id (string)\n\nA unique string that identifies the request and that allows failed RegisterInstance requests to be retried without the risk of executing the operation twice. You must use a unique CreatorRequestId string every time you submit a RegisterInstance request if you’re registering additional instances for the same namespace and service. CreatorRequestId can be any unique string (for example, a date/time stamp).\n\n--attributes (map)\n\nA string map that contains the following information for the service that you specify in ServiceId :\n\nThe attributes that apply to the records that are defined in the service.\n\nFor each attribute, the applicable value.\n\nSupported attribute keys include the following:\n\nAWS_ALIAS_DNS_NAME\n\nIf you want Cloud Map to create an Amazon Route 53 alias record that routes traffic to an Elastic Load Balancing load balancer, specify the DNS name that’s associated with the load balancer. For information about how to get the DNS name, see “DNSName” in the topic AliasTarget in the Route 53 API Reference .\n\nNote the following:\n\nThe configuration for the service that’s specified by ServiceId must include settings for an A record, an AAAA record, or both.\n\nIn the service that’s specified by ServiceId , the value of RoutingPolicy must be WEIGHTED .\n\nIf the service that’s specified by ServiceId includes HealthCheckConfig settings, Cloud Map will create the Route 53 health check, but it doesn’t associate the health check with the alias record.\n\nAuto naming currently doesn’t support creating alias records that route traffic to Amazon Web Services resources other than Elastic Load Balancing load balancers.\n\nIf you specify a value for AWS_ALIAS_DNS_NAME , don’t specify values for any of the AWS_INSTANCE attributes.\n\nAWS_EC2_INSTANCE_ID\n\nHTTP namespaces only. The Amazon EC2 instance ID for the instance. If the AWS_EC2_INSTANCE_ID attribute is specified, then the only other attribute that can be specified is AWS_INIT_HEALTH_STATUS . When the AWS_EC2_INSTANCE_ID attribute is specified, then the AWS_INSTANCE_IPV4 attribute will be filled out with the primary private IPv4 address.\n\nAWS_INIT_HEALTH_STATUS\n\nIf the service configuration includes HealthCheckCustomConfig , you can optionally use AWS_INIT_HEALTH_STATUS to specify the initial status of the custom health check, HEALTHY or UNHEALTHY . If you don’t specify a value for AWS_INIT_HEALTH_STATUS , the initial status is HEALTHY .\n\nAWS_INSTANCE_CNAME\n\nIf the service configuration includes a CNAME record, the domain name that you want Route 53 to return in response to DNS queries (for example, example.com ).\n\nThis value is required if the service specified by ServiceId includes settings for an CNAME record.\n\nAWS_INSTANCE_IPV4\n\nIf the service configuration includes an A record, the IPv4 address that you want Route 53 to return in response to DNS queries (for example, 192.0.2.44 ).\n\nThis value is required if the service specified by ServiceId includes settings for an A record. If the service includes settings for an SRV record, you must specify a value for AWS_INSTANCE_IPV4 , AWS_INSTANCE_IPV6 , or both.\n\nAWS_INSTANCE_IPV6\n\nIf the service configuration includes an AAAA record, the IPv6 address that you want Route 53 to return in response to DNS queries (for example, 2001:0db8:85a3:0000:0000:abcd:0001:2345 ).\n\nThis value is required if the service specified by ServiceId includes settings for an AAAA record. If the service includes settings for an SRV record, you must specify a value for AWS_INSTANCE_IPV4 , AWS_INSTANCE_IPV6 , or both.\n\nAWS_INSTANCE_PORT\n\nIf the service includes an SRV record, the value that you want Route 53 to return for the port.\n\nIf the service includes HealthCheckConfig , the port on the endpoint that you want Route 53 to send requests to.\n\nThis value is required if you specified settings for an SRV record or a Route 53 health check when you created the service.\n\nCustom attributes\n\nYou can add up to 30 custom attributes. For each key-value pair, the maximum length of the attribute name is 255 characters, and the maximum length of the attribute value is 1,024 characters. The total size of all provided attributes (sum of all keys and values) must not exceed 5,000 characters.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nA value that you can use to determine whether the request completed successfully. To get the status of the operation, see GetOperation .",
      "command_examples": "Examples\n\nTo register a service instance\n\nThe following register-instance example registers a service instance.\n\naws servicediscovery register-instance \\\n    --service-id srv-p5zdwlg5uvvzjita \\\n    --instance-id myservice-53 \\\n    --attributes=AWS_INSTANCE_IPV4=172.2.1.3,AWS_INSTANCE_PORT=808\n\n\nOutput:\n\n{\n    \"OperationId\": \"4yejorelbukcjzpnr6tlmrghsjwpngf4-k95yg2u7\"\n}\n\n\nTo confirm that the operation succeeded, you can run get-operation. For more information, see get-operation .\n\nFor more information, see Registering instances in the AWS Cloud Map Developer Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/tag-resource.html",
      "command_description": "Description\n\nAdds one or more tags to the specified resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.\n\n--tags (list)\n\nThe tags to add to the specified resource. Specifying the tag key is required. You can set the value of a tag to an empty string, but you can’t set the value of a tag to null.\n\n(structure)\n\nA custom key-value pair that’s associated with a resource.\n\nKey -> (string)\n\nThe key identifier, or name, of the tag.\n\nValue -> (string)\n\nThe string value that’s associated with the key of the tag. You can set the value of a tag to an empty string, but you can’t set the value of a tag to null.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/untag-resource.html",
      "command_description": "Description\n\nRemoves one or more tags from the specified resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.\n\n--tag-keys (list)\n\nThe tag keys to remove from the specified resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-http-namespace",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/update-http-namespace.html",
      "command_description": "Description\n\nUpdates an HTTP namespace.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-http-namespace\n--id <value>\n[--updater-request-id <value>]\n--namespace <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--updater-request-id <value>]",
        "--namespace <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the namespace that you want to update.\n\n--updater-request-id (string)\n\nA unique string that identifies the request and that allows failed UpdateHttpNamespace requests to be retried without the risk of running the operation twice. UpdaterRequestId can be any unique string (for example, a date/timestamp).\n\n--namespace (structure)\n\nUpdated properties for the the HTTP namespace.\n\nDescription -> (string)\n\nAn updated description for the HTTP namespace.\n\nShorthand Syntax:\n\nDescription=string\n\n\nJSON Syntax:\n\n{\n  \"Description\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nA value that you can use to determine whether the request completed successfully. To get the status of the operation, see GetOperation ."
    },
    {
      "command_name": "update-instance-custom-health-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/update-instance-custom-health-status.html",
      "command_description": "Description\n\nSubmits a request to change the health status of a custom health check to healthy or unhealthy.\n\nYou can use UpdateInstanceCustomHealthStatus to change the status only for custom health checks, which you define using HealthCheckCustomConfig when you create a service. You can’t use it to change the status for Route 53 health checks, which you define using HealthCheckConfig .\n\nFor more information, see HealthCheckCustomConfig .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-instance-custom-health-status\n--service-id <value>\n--instance-id <value>\n--status <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-id <value>",
        "--instance-id <value>",
        "--status <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-id (string)\n\nThe ID of the service that includes the configuration for the custom health check that you want to change the status for.\n\n--instance-id (string)\n\nThe ID of the instance that you want to change the health status for.\n\n--status (string)\n\nThe new status of the instance, HEALTHY or UNHEALTHY .\n\nPossible values:\n\nHEALTHY\n\nUNHEALTHY\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-private-dns-namespace",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/update-private-dns-namespace.html",
      "command_description": "Description\n\nUpdates a private DNS namespace.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-private-dns-namespace\n--id <value>\n[--updater-request-id <value>]\n--namespace <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--updater-request-id <value>]",
        "--namespace <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the namespace that you want to update.\n\n--updater-request-id (string)\n\nA unique string that identifies the request and that allows failed UpdatePrivateDnsNamespace requests to be retried without the risk of running the operation twice. UpdaterRequestId can be any unique string (for example, a date/timestamp).\n\n--namespace (structure)\n\nUpdated properties for the private DNS namespace.\n\nDescription -> (string)\n\nAn updated description for the private DNS namespace.\n\nProperties -> (structure)\n\nProperties to be updated in the private DNS namespace.\n\nDnsProperties -> (structure)\n\nUpdated DNS properties for the private DNS namespace.\n\nSOA -> (structure)\n\nUpdated fields for the Start of Authority (SOA) record for the hosted zone for the private DNS namespace.\n\nTTL -> (long)\n\nThe updated time to live (TTL) for purposes of negative caching.\n\nJSON Syntax:\n\n{\n  \"Description\": \"string\",\n  \"Properties\": {\n    \"DnsProperties\": {\n      \"SOA\": {\n        \"TTL\": long\n      }\n    }\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nA value that you can use to determine whether the request completed successfully. To get the status of the operation, see GetOperation ."
    },
    {
      "command_name": "update-public-dns-namespace",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/update-public-dns-namespace.html",
      "command_description": "Description\n\nUpdates a public DNS namespace.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-public-dns-namespace\n--id <value>\n[--updater-request-id <value>]\n--namespace <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--updater-request-id <value>]",
        "--namespace <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the namespace being updated.\n\n--updater-request-id (string)\n\nA unique string that identifies the request and that allows failed UpdatePublicDnsNamespace requests to be retried without the risk of running the operation twice. UpdaterRequestId can be any unique string (for example, a date/timestamp).\n\n--namespace (structure)\n\nUpdated properties for the public DNS namespace.\n\nDescription -> (string)\n\nAn updated description for the public DNS namespace.\n\nProperties -> (structure)\n\nProperties to be updated in the public DNS namespace.\n\nDnsProperties -> (structure)\n\nUpdated DNS properties for the hosted zone for the public DNS namespace.\n\nSOA -> (structure)\n\nUpdated fields for the Start of Authority (SOA) record for the hosted zone for the public DNS namespace.\n\nTTL -> (long)\n\nThe updated time to live (TTL) for purposes of negative caching.\n\nJSON Syntax:\n\n{\n  \"Description\": \"string\",\n  \"Properties\": {\n    \"DnsProperties\": {\n      \"SOA\": {\n        \"TTL\": long\n      }\n    }\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nA value that you can use to determine whether the request completed successfully. To get the status of the operation, see GetOperation ."
    },
    {
      "command_name": "update-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/servicediscovery/update-service.html",
      "command_description": "Description\n\nSubmits a request to perform the following operations:\n\nUpdate the TTL setting for existing DnsRecords configurations\n\nAdd, update, or delete HealthCheckConfig for a specified service\n\nNote\n\nYou can’t add, update, or delete a HealthCheckCustomConfig configuration.\n\nFor public and private DNS namespaces, note the following:\n\nIf you omit any existing DnsRecords or HealthCheckConfig configurations from an UpdateService request, the configurations are deleted from the service.\n\nIf you omit an existing HealthCheckCustomConfig configuration from an UpdateService request, the configuration isn’t deleted from the service.\n\nWhen you update settings for a service, Cloud Map also updates the corresponding settings in all the records and health checks that were created by using the specified service.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-service\n--id <value>\n--service <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "--service <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the service that you want to update.\n\n--service (structure)\n\nA complex type that contains the new settings for the service.\n\nDescription -> (string)\n\nA description for the service.\n\nDnsConfig -> (structure)\n\nInformation about the Route 53 DNS records that you want Cloud Map to create when you register an instance.\n\nDnsRecords -> (list)\n\nAn array that contains one DnsRecord object for each Route 53 record that you want Cloud Map to create when you register an instance.\n\n(structure)\n\nA complex type that contains information about the Route 53 DNS records that you want Cloud Map to create when you register an instance.\n\nType -> (string)\n\nThe type of the resource, which indicates the type of value that Route 53 returns in response to DNS queries. You can specify values for Type in the following combinations:\n\n**A **\n\n**AAAA **\n\n**A ** and ** AAAA **\n\n**SRV **\n\n**CNAME **\n\nIf you want Cloud Map to create a Route 53 alias record when you register an instance, specify A or AAAA for Type .\n\nYou specify other settings, such as the IP address for A and AAAA records, when you register an instance. For more information, see RegisterInstance .\n\nThe following values are supported:\n\nA\n\nRoute 53 returns the IP address of the resource in IPv4 format, such as 192.0.2.44.\n\nAAAA\n\nRoute 53 returns the IP address of the resource in IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.\n\nCNAME\n\nRoute 53 returns the domain name of the resource, such as www.example.com. Note the following:\n\nYou specify the domain name that you want to route traffic to when you register an instance. For more information, see Attributes in the topic RegisterInstance .\n\nYou must specify WEIGHTED for the value of RoutingPolicy .\n\nYou can’t specify both CNAME for Type and settings for HealthCheckConfig . If you do, the request will fail with an InvalidInput error.\n\nSRV\n\nRoute 53 returns the value for an SRV record. The value for an SRV record uses the following values:\n\npriority weight port service-hostname\n\nNote the following about the values:\n\nThe values of priority and weight are both set to 1 and can’t be changed.\n\nThe value of port comes from the value that you specify for the AWS_INSTANCE_PORT attribute when you submit a RegisterInstance request.\n\nThe value of service-hostname is a concatenation of the following values:\n\nThe value that you specify for InstanceId when you register an instance.\n\nThe name of the service.\n\nThe name of the namespace.\n\nFor example, if the value of InstanceId is test , the name of the service is backend , and the name of the namespace is example.com , the value of service-hostname is the following:\n\ntest.backend.example.com\n\nIf you specify settings for an SRV record, note the following:\n\nIf you specify values for AWS_INSTANCE_IPV4 , AWS_INSTANCE_IPV6 , or both in the RegisterInstance request, Cloud Map automatically creates A and/or AAAA records that have the same name as the value of service-hostname in the SRV record. You can ignore these records.\n\nIf you’re using a system that requires a specific SRV format, such as HAProxy, see the Name element in the documentation about CreateService for information about how to specify the correct name format.\n\nTTL -> (long)\n\nThe amount of time, in seconds, that you want DNS resolvers to cache the settings for this record.\n\nNote\n\nAlias records don’t include a TTL because Route 53 uses the TTL for the Amazon Web Services resource that an alias record routes traffic to. If you include the AWS_ALIAS_DNS_NAME attribute when you submit a RegisterInstance request, the TTL value is ignored. Always specify a TTL for the service; you can use a service to register instances that create either alias or non-alias records.\n\nHealthCheckConfig -> (structure)\n\nPublic DNS and HTTP namespaces only. Settings for an optional health check. If you specify settings for a health check, Cloud Map associates the health check with the records that you specify in DnsConfig .\n\nType -> (string)\n\nThe type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy.\n\nWarning\n\nYou can’t change the value of Type after you create a health check.\n\nYou can create the following types of health checks:\n\nHTTP : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.\n\nHTTPS : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.\n\nWarning\n\nIf you specify HTTPS for the value of Type , the endpoint must support TLS v1.0 or later.\n\nTCP : Route 53 tries to establish a TCP connection. If you specify TCP for Type , don’t specify a value for ResourcePath .\n\nFor more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Route 53 Developer Guide .\n\nResourcePath -> (string)\n\nThe path that you want Route 53 to request when performing health checks. The path can be any value that your endpoint returns an HTTP status code of a 2xx or 3xx format for when the endpoint is healthy. An example file is /docs/route53-health-check.html . Route 53 automatically adds the DNS name for the service. If you don’t specify a value for ResourcePath , the default value is / .\n\nIf you specify TCP for Type , you must not specify a value for ResourcePath .\n\nFailureThreshold -> (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or the other way around. For more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Route 53 Developer Guide .\n\nJSON Syntax:\n\n{\n  \"Description\": \"string\",\n  \"DnsConfig\": {\n    \"DnsRecords\": [\n      {\n        \"Type\": \"SRV\"|\"A\"|\"AAAA\"|\"CNAME\",\n        \"TTL\": long\n      }\n      ...\n    ]\n  },\n  \"HealthCheckConfig\": {\n    \"Type\": \"HTTP\"|\"HTTPS\"|\"TCP\",\n    \"ResourcePath\": \"string\",\n    \"FailureThreshold\": integer\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nA value that you can use to determine whether the request completed successfully. To get the status of the operation, see GetOperation ."
    }
  ],
  "service_description": "Description\n\nWith Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records."
}