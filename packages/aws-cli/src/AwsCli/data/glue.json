{
  "service_name": "glue",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/index.html",
  "service_commands": [
    {
      "command_name": "batch-create-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-create-partition.html",
      "command_description": "Description\n\nCreates one or more partitions in a batch operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-create-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partition-input-list <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partition-input-list <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the catalog in which the partition is to be created. Currently, this should be the Amazon Web Services account ID.\n\n--database-name (string)\n\nThe name of the metadata database in which the partition is to be created.\n\n--table-name (string)\n\nThe name of the metadata table in which the partition is to be created.\n\n--partition-input-list (list)\n\nA list of PartitionInput structures that define the partitions to be created.\n\n(structure)\n\nThe structure used to create and update a partition.\n\nValues -> (list)\n\nThe values of the partition. Although this parameter is not required by the SDK, you must specify this parameter for a valid input.\n\nThe values for the keys for the new partition must be passed as an array of String objects that must be ordered in the same order as the partition keys appearing in the Amazon S3 prefix. Otherwise Glue will add the values to the wrong keys.\n\n(string)\n\nLastAccessTime -> (timestamp)\n\nThe last time at which the partition was accessed.\n\nStorageDescriptor -> (structure)\n\nProvides information about the physical location where the partition is stored.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nParameters -> (map)\n\nThese key-value pairs define partition parameters.\n\nkey -> (string)\n\nvalue -> (string)\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time at which column statistics were computed for this partition.\n\nJSON Syntax:\n\n[\n  {\n    \"Values\": [\"string\", ...],\n    \"LastAccessTime\": timestamp,\n    \"StorageDescriptor\": {\n      \"Columns\": [\n        {\n          \"Name\": \"string\",\n          \"Type\": \"string\",\n          \"Comment\": \"string\",\n          \"Parameters\": {\"string\": \"string\"\n            ...}\n        }\n        ...\n      ],\n      \"Location\": \"string\",\n      \"InputFormat\": \"string\",\n      \"OutputFormat\": \"string\",\n      \"Compressed\": true|false,\n      \"NumberOfBuckets\": integer,\n      \"SerdeInfo\": {\n        \"Name\": \"string\",\n        \"SerializationLibrary\": \"string\",\n        \"Parameters\": {\"string\": \"string\"\n          ...}\n      },\n      \"BucketColumns\": [\"string\", ...],\n      \"SortColumns\": [\n        {\n          \"Column\": \"string\",\n          \"SortOrder\": integer\n        }\n        ...\n      ],\n      \"Parameters\": {\"string\": \"string\"\n        ...},\n      \"SkewedInfo\": {\n        \"SkewedColumnNames\": [\"string\", ...],\n        \"SkewedColumnValues\": [\"string\", ...],\n        \"SkewedColumnValueLocationMaps\": {\"string\": \"string\"\n          ...}\n      },\n      \"StoredAsSubDirectories\": true|false,\n      \"SchemaReference\": {\n        \"SchemaId\": {\n          \"SchemaArn\": \"string\",\n          \"SchemaName\": \"string\",\n          \"RegistryName\": \"string\"\n        },\n        \"SchemaVersionId\": \"string\",\n        \"SchemaVersionNumber\": long\n      }\n    },\n    \"Parameters\": {\"string\": \"string\"\n      ...},\n    \"LastAnalyzedTime\": timestamp\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nErrors -> (list)\n\nThe errors encountered when trying to create the requested partitions.\n\n(structure)\n\nContains information about a partition error.\n\nPartitionValues -> (list)\n\nThe values that define the partition.\n\n(string)\n\nErrorDetail -> (structure)\n\nThe details about the partition error.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error."
    },
    {
      "command_name": "batch-delete-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-delete-connection.html",
      "command_description": "Description\n\nDeletes a list of connection definitions from the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-delete-connection\n[--catalog-id <value>]\n--connection-name-list <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--connection-name-list <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which the connections reside. If none is provided, the Amazon Web Services account ID is used by default.\n\n--connection-name-list (list)\n\nA list of names of the connections to delete.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSucceeded -> (list)\n\nA list of names of the connection definitions that were successfully deleted.\n\n(string)\n\nErrors -> (map)\n\nA map of the names of connections that were not successfully deleted to error details.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains details about an error.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error."
    },
    {
      "command_name": "batch-delete-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-delete-partition.html",
      "command_description": "Description\n\nDeletes one or more partitions in a batch operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-delete-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partitions-to-delete <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partitions-to-delete <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partition to be deleted resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database in which the table in question resides.\n\n--table-name (string)\n\nThe name of the table that contains the partitions to be deleted.\n\n--partitions-to-delete (list)\n\nA list of PartitionInput structures that define the partitions to be deleted.\n\n(structure)\n\nContains a list of values defining partitions.\n\nValues -> (list)\n\nThe list of values.\n\n(string)\n\nShorthand Syntax:\n\nValues=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nErrors -> (list)\n\nThe errors encountered when trying to delete the requested partitions.\n\n(structure)\n\nContains information about a partition error.\n\nPartitionValues -> (list)\n\nThe values that define the partition.\n\n(string)\n\nErrorDetail -> (structure)\n\nThe details about the partition error.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error."
    },
    {
      "command_name": "batch-delete-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-delete-table.html",
      "command_description": "Description\n\nDeletes multiple tables at once.\n\nNote\n\nAfter completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. Glue deletes these “orphaned” resources asynchronously in a timely manner, at the discretion of the service.\n\nTo ensure the immediate deletion of all related resources, before calling BatchDeleteTable , use DeleteTableVersion or BatchDeleteTableVersion , and DeletePartition or BatchDeletePartition , to delete any resources that belong to the table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-delete-table\n[--catalog-id <value>]\n--database-name <value>\n--tables-to-delete <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--tables-to-delete <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the table resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database in which the tables to delete reside. For Hive compatibility, this name is entirely lowercase.\n\n--tables-to-delete (list)\n\nA list of the table to delete.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nErrors -> (list)\n\nA list of errors encountered in attempting to delete the specified tables.\n\n(structure)\n\nAn error record for table operations.\n\nTableName -> (string)\n\nThe name of the table. For Hive compatibility, this must be entirely lowercase.\n\nErrorDetail -> (structure)\n\nThe details about the error.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error."
    },
    {
      "command_name": "batch-delete-table-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-delete-table-version.html",
      "command_description": "Description\n\nDeletes a specified batch of versions of a table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-delete-table-version\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--version-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--version-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the tables reside. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.\n\n--table-name (string)\n\nThe name of the table. For Hive compatibility, this name is entirely lowercase.\n\n--version-ids (list)\n\nA list of the IDs of versions to be deleted. A VersionId is a string representation of an integer. Each version is incremented by 1.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nErrors -> (list)\n\nA list of errors encountered while trying to delete the specified table versions.\n\n(structure)\n\nAn error record for table-version operations.\n\nTableName -> (string)\n\nThe name of the table in question.\n\nVersionId -> (string)\n\nThe ID value of the version in question. A VersionID is a string representation of an integer. Each version is incremented by 1.\n\nErrorDetail -> (structure)\n\nThe details about the error.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error."
    },
    {
      "command_name": "batch-get-blueprints",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-get-blueprints.html",
      "command_description": "Description\n\nRetrieves information about a list of blueprints.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-blueprints\n--names <value>\n[--include-blueprint | --no-include-blueprint]\n[--include-parameter-spec | --no-include-parameter-spec]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--names <value>",
        "[--include-blueprint | --no-include-blueprint]",
        "[--include-parameter-spec | --no-include-parameter-spec]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--names (list)\n\nA list of blueprint names.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--include-blueprint | --no-include-blueprint (boolean)\n\nSpecifies whether or not to include the blueprint in the response.\n\n--include-parameter-spec | --no-include-parameter-spec (boolean)\n\nSpecifies whether or not to include the parameters, as a JSON string, for the blueprint in the response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBlueprints -> (list)\n\nReturns a list of blueprint as a Blueprints object.\n\n(structure)\n\nThe details of a blueprint.\n\nName -> (string)\n\nThe name of the blueprint.\n\nDescription -> (string)\n\nThe description of the blueprint.\n\nCreatedOn -> (timestamp)\n\nThe date and time the blueprint was registered.\n\nLastModifiedOn -> (timestamp)\n\nThe date and time the blueprint was last modified.\n\nParameterSpec -> (string)\n\nA JSON string that indicates the list of parameter specifications for the blueprint.\n\nBlueprintLocation -> (string)\n\nSpecifies the path in Amazon S3 where the blueprint is published.\n\nBlueprintServiceLocation -> (string)\n\nSpecifies a path in Amazon S3 where the blueprint is copied when you call CreateBlueprint/UpdateBlueprint to register the blueprint in Glue.\n\nStatus -> (string)\n\nThe status of the blueprint registration.\n\nCreating — The blueprint registration is in progress.\n\nActive — The blueprint has been successfully registered.\n\nUpdating — An update to the blueprint registration is in progress.\n\nFailed — The blueprint registration failed.\n\nErrorMessage -> (string)\n\nAn error message.\n\nLastActiveDefinition -> (structure)\n\nWhen there are multiple versions of a blueprint and the latest version has some errors, this attribute indicates the last successful blueprint definition that is available with the service.\n\nDescription -> (string)\n\nThe description of the blueprint.\n\nLastModifiedOn -> (timestamp)\n\nThe date and time the blueprint was last modified.\n\nParameterSpec -> (string)\n\nA JSON string specifying the parameters for the blueprint.\n\nBlueprintLocation -> (string)\n\nSpecifies a path in Amazon S3 where the blueprint is published by the Glue developer.\n\nBlueprintServiceLocation -> (string)\n\nSpecifies a path in Amazon S3 where the blueprint is copied when you create or update the blueprint.\n\nMissingBlueprints -> (list)\n\nReturns a list of BlueprintNames that were not found.\n\n(string)"
    },
    {
      "command_name": "batch-get-crawlers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-get-crawlers.html",
      "command_description": "Description\n\nReturns a list of resource metadata for a given list of crawler names. After calling the ListCrawlers operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-crawlers\n--crawler-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--crawler-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--crawler-names (list)\n\nA list of crawler names, which might be the names returned from the ListCrawlers operation.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCrawlers -> (list)\n\nA list of crawler definitions.\n\n(structure)\n\nSpecifies a crawler program that examines a data source and uses classifiers to try to determine its schema. If successful, the crawler records metadata concerning the data source in the Glue Data Catalog.\n\nName -> (string)\n\nThe name of the crawler.\n\nRole -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that’s used to access customer resources, such as Amazon Simple Storage Service (Amazon S3) data.\n\nTargets -> (structure)\n\nA collection of targets to crawl.\n\nS3Targets -> (list)\n\nSpecifies Amazon Simple Storage Service (Amazon S3) targets.\n\n(structure)\n\nSpecifies a data store in Amazon Simple Storage Service (Amazon S3).\n\nPath -> (string)\n\nThe path to the Amazon S3 target.\n\nExclusions -> (list)\n\nA list of glob patterns used to exclude from the crawl. For more information, see Catalog Tables with a Crawler .\n\n(string)\n\nConnectionName -> (string)\n\nThe name of a connection which allows a job or crawler to access data in Amazon S3 within an Amazon Virtual Private Cloud environment (Amazon VPC).\n\nSampleSize -> (integer)\n\nSets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.\n\nEventQueueArn -> (string)\n\nA valid Amazon SQS ARN. For example, arn:aws:sqs:region:account:sqs .\n\nDlqEventQueueArn -> (string)\n\nA valid Amazon dead-letter SQS ARN. For example, arn:aws:sqs:region:account:deadLetterQueue .\n\nJdbcTargets -> (list)\n\nSpecifies JDBC targets.\n\n(structure)\n\nSpecifies a JDBC data store to crawl.\n\nConnectionName -> (string)\n\nThe name of the connection to use to connect to the JDBC target.\n\nPath -> (string)\n\nThe path of the JDBC target.\n\nExclusions -> (list)\n\nA list of glob patterns used to exclude from the crawl. For more information, see Catalog Tables with a Crawler .\n\n(string)\n\nMongoDBTargets -> (list)\n\nSpecifies Amazon DocumentDB or MongoDB targets.\n\n(structure)\n\nSpecifies an Amazon DocumentDB or MongoDB data store to crawl.\n\nConnectionName -> (string)\n\nThe name of the connection to use to connect to the Amazon DocumentDB or MongoDB target.\n\nPath -> (string)\n\nThe path of the Amazon DocumentDB or MongoDB target (database/collection).\n\nScanAll -> (boolean)\n\nIndicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.\n\nA value of true means to scan all records, while a value of false means to sample the records. If no value is specified, the value defaults to true .\n\nDynamoDBTargets -> (list)\n\nSpecifies Amazon DynamoDB targets.\n\n(structure)\n\nSpecifies an Amazon DynamoDB table to crawl.\n\nPath -> (string)\n\nThe name of the DynamoDB table to crawl.\n\nscanAll -> (boolean)\n\nIndicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.\n\nA value of true means to scan all records, while a value of false means to sample the records. If no value is specified, the value defaults to true .\n\nscanRate -> (double)\n\nThe percentage of the configured read capacity units to use by the Glue crawler. Read capacity units is a term defined by DynamoDB, and is a numeric value that acts as rate limiter for the number of reads that can be performed on that table per second.\n\nThe valid values are null or a value between 0.1 to 1.5. A null value is used when user does not provide a value, and defaults to 0.5 of the configured Read Capacity Unit (for provisioned tables), or 0.25 of the max configured Read Capacity Unit (for tables using on-demand mode).\n\nCatalogTargets -> (list)\n\nSpecifies Glue Data Catalog targets.\n\n(structure)\n\nSpecifies an Glue Data Catalog target.\n\nDatabaseName -> (string)\n\nThe name of the database to be synchronized.\n\nTables -> (list)\n\nA list of the tables to be synchronized.\n\n(string)\n\nDatabaseName -> (string)\n\nThe name of the database in which the crawler’s output is stored.\n\nDescription -> (string)\n\nA description of the crawler.\n\nClassifiers -> (list)\n\nA list of UTF-8 strings that specify the custom classifiers that are associated with the crawler.\n\n(string)\n\nRecrawlPolicy -> (structure)\n\nA policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.\n\nRecrawlBehavior -> (string)\n\nSpecifies whether to crawl the entire dataset again or to crawl only folders that were added since the last crawler run.\n\nA value of CRAWL_EVERYTHING specifies crawling the entire dataset again.\n\nA value of CRAWL_NEW_FOLDERS_ONLY specifies crawling only folders that were added since the last crawler run.\n\nA value of CRAWL_EVENT_MODE specifies crawling only the changes identified by Amazon S3 events.\n\nSchemaChangePolicy -> (structure)\n\nThe policy that specifies update and delete behaviors for the crawler.\n\nUpdateBehavior -> (string)\n\nThe update behavior when the crawler finds a changed schema.\n\nDeleteBehavior -> (string)\n\nThe deletion behavior when the crawler finds a deleted object.\n\nLineageConfiguration -> (structure)\n\nA configuration that specifies whether data lineage is enabled for the crawler.\n\nCrawlerLineageSettings -> (string)\n\nSpecifies whether data lineage is enabled for the crawler. Valid values are:\n\nENABLE: enables data lineage for the crawler\n\nDISABLE: disables data lineage for the crawler\n\nState -> (string)\n\nIndicates whether the crawler is running, or whether a run is pending.\n\nTablePrefix -> (string)\n\nThe prefix added to the names of tables that are created.\n\nSchedule -> (structure)\n\nFor scheduled crawlers, the schedule when the crawler runs.\n\nScheduleExpression -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nState -> (string)\n\nThe state of the schedule.\n\nCrawlElapsedTime -> (long)\n\nIf the crawler is running, contains the total time elapsed since the last crawl began.\n\nCreationTime -> (timestamp)\n\nThe time that the crawler was created.\n\nLastUpdated -> (timestamp)\n\nThe time that the crawler was last updated.\n\nLastCrawl -> (structure)\n\nThe status of the last crawl, and potentially error information if an error occurred.\n\nStatus -> (string)\n\nStatus of the last crawl.\n\nErrorMessage -> (string)\n\nIf an error occurred, the error information about the last crawl.\n\nLogGroup -> (string)\n\nThe log group for the last crawl.\n\nLogStream -> (string)\n\nThe log stream for the last crawl.\n\nMessagePrefix -> (string)\n\nThe prefix for a message about this crawl.\n\nStartTime -> (timestamp)\n\nThe time at which the crawl started.\n\nVersion -> (long)\n\nThe version of the crawler.\n\nConfiguration -> (string)\n\nCrawler configuration information. This versioned JSON string allows users to specify aspects of a crawler’s behavior. For more information, see Include and Exclude Patterns .\n\nCrawlerSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used by this crawler.\n\nCrawlersNotFound -> (list)\n\nA list of names of crawlers that were not found.\n\n(string)"
    },
    {
      "command_name": "batch-get-dev-endpoints",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-get-dev-endpoints.html",
      "command_description": "Description\n\nReturns a list of resource metadata for a given list of development endpoint names. After calling the ListDevEndpoints operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-dev-endpoints\n--dev-endpoint-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dev-endpoint-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dev-endpoint-names (list)\n\nThe list of DevEndpoint names, which might be the names returned from the ListDevEndpoint operation.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDevEndpoints -> (list)\n\nA list of DevEndpoint definitions.\n\n(structure)\n\nA development endpoint where a developer can remotely debug extract, transform, and load (ETL) scripts.\n\nEndpointName -> (string)\n\nThe name of the DevEndpoint .\n\nRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used in this DevEndpoint .\n\nSecurityGroupIds -> (list)\n\nA list of security group identifiers used in this DevEndpoint .\n\n(string)\n\nSubnetId -> (string)\n\nThe subnet ID for this DevEndpoint .\n\nYarnEndpointAddress -> (string)\n\nThe YARN endpoint address used by this DevEndpoint .\n\nPrivateAddress -> (string)\n\nA private IP address to access the DevEndpoint within a VPC if the DevEndpoint is created within one. The PrivateAddress field is present only when you create the DevEndpoint within your VPC.\n\nZeppelinRemoteSparkInterpreterPort -> (integer)\n\nThe Apache Zeppelin port for the remote Apache Spark interpreter.\n\nPublicAddress -> (string)\n\nThe public IP address used by this DevEndpoint . The PublicAddress field is present only when you create a non-virtual private cloud (VPC) DevEndpoint .\n\nStatus -> (string)\n\nThe current status of this DevEndpoint .\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nFor the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nKnown issue: when a development endpoint is created with the G.2X WorkerType configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nDevelopment endpoints that are created without specifying a Glue version default to Glue 0.9.\n\nYou can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated to the development endpoint.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nNumberOfNodes -> (integer)\n\nThe number of Glue Data Processing Units (DPUs) allocated to this DevEndpoint .\n\nAvailabilityZone -> (string)\n\nThe AWS Availability Zone where this DevEndpoint is located.\n\nVpcId -> (string)\n\nThe ID of the virtual private cloud (VPC) used by this DevEndpoint .\n\nExtraPythonLibsS3Path -> (string)\n\nThe paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your DevEndpoint . Multiple values must be complete paths separated by a comma.\n\nNote\n\nYou can only use pure Python libraries with a DevEndpoint . Libraries that rely on C extensions, such as the pandas Python data analysis library, are not currently supported.\n\nExtraJarsS3Path -> (string)\n\nThe path to one or more Java .jar files in an S3 bucket that should be loaded in your DevEndpoint .\n\nNote\n\nYou can only use pure Java/Scala libraries with a DevEndpoint .\n\nFailureReason -> (string)\n\nThe reason for a current failure in this DevEndpoint .\n\nLastUpdateStatus -> (string)\n\nThe status of the last update.\n\nCreatedTimestamp -> (timestamp)\n\nThe point in time at which this DevEndpoint was created.\n\nLastModifiedTimestamp -> (timestamp)\n\nThe point in time at which this DevEndpoint was last modified.\n\nPublicKey -> (string)\n\nThe public key to be used by this DevEndpoint for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.\n\nPublicKeys -> (list)\n\nA list of public keys to be used by the DevEndpoints for authentication. Using this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.\n\nNote\n\nIf you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the UpdateDevEndpoint API operation with the public key content in the deletePublicKeys attribute, and the list of new keys in the addPublicKeys attribute.\n\n(string)\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this DevEndpoint .\n\nArguments -> (map)\n\nA map of arguments used to configure the DevEndpoint .\n\nValid arguments are:\n\n\"--enable-glue-datacatalog\": \"\"\n\nYou can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.\n\nkey -> (string)\n\nvalue -> (string)\n\nDevEndpointsNotFound -> (list)\n\nA list of DevEndpoints not found.\n\n(string)"
    },
    {
      "command_name": "batch-get-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-get-jobs.html",
      "command_description": "Description\n\nReturns a list of resource metadata for a given list of job names. After calling the ListJobs operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-jobs\n--job-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-names (list)\n\nA list of job names, which might be the names returned from the ListJobs operation.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobs -> (list)\n\nA list of job definitions.\n\n(structure)\n\nSpecifies a job definition.\n\nName -> (string)\n\nThe name you assign to this job definition.\n\nDescription -> (string)\n\nA description of the job.\n\nLogUri -> (string)\n\nThis field is reserved for future use.\n\nRole -> (string)\n\nThe name or Amazon Resource Name (ARN) of the IAM role associated with this job.\n\nCreatedOn -> (timestamp)\n\nThe time and date that this job definition was created.\n\nLastModifiedOn -> (timestamp)\n\nThe last point in time when this job definition was modified.\n\nExecutionProperty -> (structure)\n\nAn ExecutionProperty specifying the maximum number of concurrent runs allowed for this job.\n\nMaxConcurrentRuns -> (integer)\n\nThe maximum number of concurrent runs allowed for the job. The default is 1. An error is returned when this threshold is reached. The maximum value you can specify is controlled by a service limit.\n\nCommand -> (structure)\n\nThe JobCommand that runs this job.\n\nName -> (string)\n\nThe name of the job command. For an Apache Spark ETL job, this must be glueetl . For a Python shell job, it must be pythonshell . For an Apache Spark streaming ETL job, this must be gluestreaming .\n\nScriptLocation -> (string)\n\nSpecifies the Amazon Simple Storage Service (Amazon S3) path to a script that runs a job.\n\nPythonVersion -> (string)\n\nThe Python version being used to run a Python shell job. Allowed values are 2 or 3.\n\nDefaultArguments -> (map)\n\nThe default arguments for this job, specified as name-value pairs.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nNonOverridableArguments -> (map)\n\nNon-overridable arguments for this job, specified as name-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nConnections -> (structure)\n\nThe connections used for this job.\n\nConnections -> (list)\n\nA list of connections used by the job.\n\n(string)\n\nMaxRetries -> (integer)\n\nThe maximum number of times to retry this job after a JobRun fails.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to runs of this job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nTimeout -> (integer)\n\nThe job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).\n\nMaxCapacity -> (double)\n\nFor Glue version 1.0 or earlier jobs, using the standard worker type, the number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job, an Apache Spark ETL job, or an Apache Spark streaming ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”) or Apache Spark streaming ETL job (JobCommand.Name =”gluestreaming”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nFor Glue version 2.0 jobs, you cannot instead specify a Maximum capacity . Instead, you should specify a Worker type and the Number of workers .\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nFor the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.\n\nJobsNotFound -> (list)\n\nA list of names of jobs not found.\n\n(string)"
    },
    {
      "command_name": "batch-get-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-get-partition.html",
      "command_description": "Description\n\nRetrieves partitions in a batch request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partitions-to-get <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partitions-to-get <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the partitions reside.\n\n--table-name (string)\n\nThe name of the partitions’ table.\n\n--partitions-to-get (list)\n\nA list of partition values identifying the partitions to retrieve.\n\n(structure)\n\nContains a list of values defining partitions.\n\nValues -> (list)\n\nThe list of values.\n\n(string)\n\nShorthand Syntax:\n\nValues=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPartitions -> (list)\n\nA list of the requested partitions.\n\n(structure)\n\nRepresents a slice of table data.\n\nValues -> (list)\n\nThe values of the partition.\n\n(string)\n\nDatabaseName -> (string)\n\nThe name of the catalog database in which to create the partition.\n\nTableName -> (string)\n\nThe name of the database table in which to create the partition.\n\nCreationTime -> (timestamp)\n\nThe time at which the partition was created.\n\nLastAccessTime -> (timestamp)\n\nThe last time at which the partition was accessed.\n\nStorageDescriptor -> (structure)\n\nProvides information about the physical location where the partition is stored.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nParameters -> (map)\n\nThese key-value pairs define partition parameters.\n\nkey -> (string)\n\nvalue -> (string)\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time at which column statistics were computed for this partition.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the partition resides.\n\nUnprocessedKeys -> (list)\n\nA list of the partition values in the request for which partitions were not returned.\n\n(structure)\n\nContains a list of values defining partitions.\n\nValues -> (list)\n\nThe list of values.\n\n(string)"
    },
    {
      "command_name": "batch-get-triggers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-get-triggers.html",
      "command_description": "Description\n\nReturns a list of resource metadata for a given list of trigger names. After calling the ListTriggers operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-triggers\n--trigger-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--trigger-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--trigger-names (list)\n\nA list of trigger names, which may be the names returned from the ListTriggers operation.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTriggers -> (list)\n\nA list of trigger definitions.\n\n(structure)\n\nInformation about a specific trigger.\n\nName -> (string)\n\nThe name of the trigger.\n\nWorkflowName -> (string)\n\nThe name of the workflow associated with the trigger.\n\nId -> (string)\n\nReserved for future use.\n\nType -> (string)\n\nThe type of trigger that this is.\n\nState -> (string)\n\nThe current state of the trigger.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\nTriggersNotFound -> (list)\n\nA list of names of triggers not found.\n\n(string)"
    },
    {
      "command_name": "batch-get-workflows",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-get-workflows.html",
      "command_description": "Description\n\nReturns a list of resource metadata for a given list of workflow names. After calling the ListWorkflows operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-get-workflows\n--names <value>\n[--include-graph | --no-include-graph]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--names <value>",
        "[--include-graph | --no-include-graph]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--names (list)\n\nA list of workflow names, which may be the names returned from the ListWorkflows operation.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--include-graph | --no-include-graph (boolean)\n\nSpecifies whether to include a graph when returning the workflow resource metadata.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nWorkflows -> (list)\n\nA list of workflow resource metadata.\n\n(structure)\n\nA workflow is a collection of multiple dependent Glue jobs and crawlers that are run to complete a complex ETL task. A workflow manages the execution and monitoring of all its jobs and crawlers.\n\nName -> (string)\n\nThe name of the workflow.\n\nDescription -> (string)\n\nA description of the workflow.\n\nDefaultRunProperties -> (map)\n\nA collection of properties to be used as part of each execution of the workflow. The run properties are made available to each job in the workflow. A job can modify the properties for the next jobs in the flow.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreatedOn -> (timestamp)\n\nThe date and time when the workflow was created.\n\nLastModifiedOn -> (timestamp)\n\nThe date and time when the workflow was last modified.\n\nLastRun -> (structure)\n\nThe information about the last execution of the workflow.\n\nName -> (string)\n\nName of the workflow that was run.\n\nWorkflowRunId -> (string)\n\nThe ID of this workflow run.\n\nPreviousRunId -> (string)\n\nThe ID of the previous workflow run.\n\nWorkflowRunProperties -> (map)\n\nThe workflow run properties which were set during the run.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartedOn -> (timestamp)\n\nThe date and time when the workflow run was started.\n\nCompletedOn -> (timestamp)\n\nThe date and time when the workflow run completed.\n\nStatus -> (string)\n\nThe status of the workflow run.\n\nErrorMessage -> (string)\n\nThis error message describes any error that may have occurred in starting the workflow run. Currently the only error message is “Concurrent runs exceeded for workflow: foo .”\n\nStatistics -> (structure)\n\nThe statistics of the run.\n\nTotalActions -> (integer)\n\nTotal number of Actions in the workflow run.\n\nTimeoutActions -> (integer)\n\nTotal number of Actions that timed out.\n\nFailedActions -> (integer)\n\nTotal number of Actions that have failed.\n\nStoppedActions -> (integer)\n\nTotal number of Actions that have stopped.\n\nSucceededActions -> (integer)\n\nTotal number of Actions that have succeeded.\n\nRunningActions -> (integer)\n\nTotal number Actions in running state.\n\nGraph -> (structure)\n\nThe graph representing all the Glue components that belong to the workflow as nodes and directed connections between them as edges.\n\nNodes -> (list)\n\nA list of the the Glue components belong to the workflow represented as nodes.\n\n(structure)\n\nA node represents an Glue component (trigger, crawler, or job) on a workflow graph.\n\nType -> (string)\n\nThe type of Glue component represented by the node.\n\nName -> (string)\n\nThe name of the Glue component represented by the node.\n\nUniqueId -> (string)\n\nThe unique Id assigned to the node within the workflow.\n\nTriggerDetails -> (structure)\n\nDetails of the Trigger when the node represents a Trigger.\n\nTrigger -> (structure)\n\nThe information of the trigger represented by the trigger node.\n\nName -> (string)\n\nThe name of the trigger.\n\nWorkflowName -> (string)\n\nThe name of the workflow associated with the trigger.\n\nId -> (string)\n\nReserved for future use.\n\nType -> (string)\n\nThe type of trigger that this is.\n\nState -> (string)\n\nThe current state of the trigger.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\nJobDetails -> (structure)\n\nDetails of the Job when the node represents a Job.\n\nJobRuns -> (list)\n\nThe information for the job runs represented by the job node.\n\n(structure)\n\nContains information about a job run.\n\nId -> (string)\n\nThe ID of this job run.\n\nAttempt -> (integer)\n\nThe number of the attempt to run this job.\n\nPreviousRunId -> (string)\n\nThe ID of the previous run of this job. For example, the JobRunId specified in the StartJobRun action.\n\nTriggerName -> (string)\n\nThe name of the trigger that started this job run.\n\nJobName -> (string)\n\nThe name of the job definition being used in this run.\n\nStartedOn -> (timestamp)\n\nThe date and time at which this job run was started.\n\nLastModifiedOn -> (timestamp)\n\nThe last time that this job run was modified.\n\nCompletedOn -> (timestamp)\n\nThe date and time that this job run completed.\n\nJobRunState -> (string)\n\nThe current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see Glue Job Run Statuses .\n\nArguments -> (map)\n\nThe job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nErrorMessage -> (string)\n\nAn error message associated with this job run.\n\nPredecessorRuns -> (list)\n\nA list of predecessors to this job run.\n\n(structure)\n\nA job run that was used in the predicate of a conditional trigger that triggered this job run.\n\nJobName -> (string)\n\nThe name of the job definition used by the predecessor job run.\n\nRunId -> (string)\n\nThe job-run ID of the predecessor job run.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nExecutionTime -> (integer)\n\nThe amount of time (in seconds) that the job run consumed resources.\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nMaxCapacity -> (double)\n\nThe number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job run.\n\nLogGroupName -> (string)\n\nThe name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using KMS. This name can be /aws-glue/jobs/ , in which case the default encryption is NONE . If you add a role name and SecurityConfiguration name (in other words, /aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/ ), then that security configuration is used to encrypt the log group.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.\n\nCrawlerDetails -> (structure)\n\nDetails of the crawler when the node represents a crawler.\n\nCrawls -> (list)\n\nA list of crawls represented by the crawl node.\n\n(structure)\n\nThe details of a crawl in the workflow.\n\nState -> (string)\n\nThe state of the crawler.\n\nStartedOn -> (timestamp)\n\nThe date and time on which the crawl started.\n\nCompletedOn -> (timestamp)\n\nThe date and time on which the crawl completed.\n\nErrorMessage -> (string)\n\nThe error message associated with the crawl.\n\nLogGroup -> (string)\n\nThe log group associated with the crawl.\n\nLogStream -> (string)\n\nThe log stream associated with the crawl.\n\nEdges -> (list)\n\nA list of all the directed connections between the nodes belonging to the workflow.\n\n(structure)\n\nAn edge represents a directed connection between two components on a workflow graph.\n\nSourceId -> (string)\n\nThe unique of the node within the workflow where the edge starts.\n\nDestinationId -> (string)\n\nThe unique of the node within the workflow where the edge ends.\n\nStartingEventBatchCondition -> (structure)\n\nThe batch condition that started the workflow run.\n\nBatchSize -> (integer)\n\nNumber of events in the batch.\n\nBatchWindow -> (integer)\n\nDuration of the batch window in seconds.\n\nGraph -> (structure)\n\nThe graph representing all the Glue components that belong to the workflow as nodes and directed connections between them as edges.\n\nNodes -> (list)\n\nA list of the the Glue components belong to the workflow represented as nodes.\n\n(structure)\n\nA node represents an Glue component (trigger, crawler, or job) on a workflow graph.\n\nType -> (string)\n\nThe type of Glue component represented by the node.\n\nName -> (string)\n\nThe name of the Glue component represented by the node.\n\nUniqueId -> (string)\n\nThe unique Id assigned to the node within the workflow.\n\nTriggerDetails -> (structure)\n\nDetails of the Trigger when the node represents a Trigger.\n\nTrigger -> (structure)\n\nThe information of the trigger represented by the trigger node.\n\nName -> (string)\n\nThe name of the trigger.\n\nWorkflowName -> (string)\n\nThe name of the workflow associated with the trigger.\n\nId -> (string)\n\nReserved for future use.\n\nType -> (string)\n\nThe type of trigger that this is.\n\nState -> (string)\n\nThe current state of the trigger.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\nJobDetails -> (structure)\n\nDetails of the Job when the node represents a Job.\n\nJobRuns -> (list)\n\nThe information for the job runs represented by the job node.\n\n(structure)\n\nContains information about a job run.\n\nId -> (string)\n\nThe ID of this job run.\n\nAttempt -> (integer)\n\nThe number of the attempt to run this job.\n\nPreviousRunId -> (string)\n\nThe ID of the previous run of this job. For example, the JobRunId specified in the StartJobRun action.\n\nTriggerName -> (string)\n\nThe name of the trigger that started this job run.\n\nJobName -> (string)\n\nThe name of the job definition being used in this run.\n\nStartedOn -> (timestamp)\n\nThe date and time at which this job run was started.\n\nLastModifiedOn -> (timestamp)\n\nThe last time that this job run was modified.\n\nCompletedOn -> (timestamp)\n\nThe date and time that this job run completed.\n\nJobRunState -> (string)\n\nThe current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see Glue Job Run Statuses .\n\nArguments -> (map)\n\nThe job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nErrorMessage -> (string)\n\nAn error message associated with this job run.\n\nPredecessorRuns -> (list)\n\nA list of predecessors to this job run.\n\n(structure)\n\nA job run that was used in the predicate of a conditional trigger that triggered this job run.\n\nJobName -> (string)\n\nThe name of the job definition used by the predecessor job run.\n\nRunId -> (string)\n\nThe job-run ID of the predecessor job run.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nExecutionTime -> (integer)\n\nThe amount of time (in seconds) that the job run consumed resources.\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nMaxCapacity -> (double)\n\nThe number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job run.\n\nLogGroupName -> (string)\n\nThe name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using KMS. This name can be /aws-glue/jobs/ , in which case the default encryption is NONE . If you add a role name and SecurityConfiguration name (in other words, /aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/ ), then that security configuration is used to encrypt the log group.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.\n\nCrawlerDetails -> (structure)\n\nDetails of the crawler when the node represents a crawler.\n\nCrawls -> (list)\n\nA list of crawls represented by the crawl node.\n\n(structure)\n\nThe details of a crawl in the workflow.\n\nState -> (string)\n\nThe state of the crawler.\n\nStartedOn -> (timestamp)\n\nThe date and time on which the crawl started.\n\nCompletedOn -> (timestamp)\n\nThe date and time on which the crawl completed.\n\nErrorMessage -> (string)\n\nThe error message associated with the crawl.\n\nLogGroup -> (string)\n\nThe log group associated with the crawl.\n\nLogStream -> (string)\n\nThe log stream associated with the crawl.\n\nEdges -> (list)\n\nA list of all the directed connections between the nodes belonging to the workflow.\n\n(structure)\n\nAn edge represents a directed connection between two components on a workflow graph.\n\nSourceId -> (string)\n\nThe unique of the node within the workflow where the edge starts.\n\nDestinationId -> (string)\n\nThe unique of the node within the workflow where the edge ends.\n\nMaxConcurrentRuns -> (integer)\n\nYou can use this parameter to prevent unwanted multiple updates to data, to control costs, or in some cases, to prevent exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.\n\nBlueprintDetails -> (structure)\n\nThis structure indicates the details of the blueprint that this particular workflow is created from.\n\nBlueprintName -> (string)\n\nThe name of the blueprint.\n\nRunId -> (string)\n\nThe run ID for this blueprint.\n\nMissingWorkflows -> (list)\n\nA list of names of workflows not found.\n\n(string)"
    },
    {
      "command_name": "batch-stop-job-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-stop-job-run.html",
      "command_description": "Description\n\nStops one or more job runs for a specified job definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-stop-job-run\n--job-name <value>\n--job-run-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-name <value>",
        "--job-run-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe name of the job definition for which to stop job runs.\n\n--job-run-ids (list)\n\nA list of the JobRunIds that should be stopped for that job definition.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSuccessfulSubmissions -> (list)\n\nA list of the JobRuns that were successfully submitted for stopping.\n\n(structure)\n\nRecords a successful request to stop a specified JobRun .\n\nJobName -> (string)\n\nThe name of the job definition used in the job run that was stopped.\n\nJobRunId -> (string)\n\nThe JobRunId of the job run that was stopped.\n\nErrors -> (list)\n\nA list of the errors that were encountered in trying to stop JobRuns , including the JobRunId for which each error was encountered and details about the error.\n\n(structure)\n\nRecords an error that occurred when attempting to stop a specified job run.\n\nJobName -> (string)\n\nThe name of the job definition that is used in the job run in question.\n\nJobRunId -> (string)\n\nThe JobRunId of the job run in question.\n\nErrorDetail -> (structure)\n\nSpecifies details about the error that was encountered.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error.",
      "command_examples": "Examples\n\nTo stop job runs\n\nThe following batch-stop-job-run example stops a job runs.\n\naws glue batch-stop-job-run \\\n    --job-name \"my-testing-job\" \\\n    --job-run-id jr_852f1de1f29fb62e0ba4166c33970803935d87f14f96cfdee5089d5274a61d3f\n\n\nOutput:\n\n{\n    \"SuccessfulSubmissions\": [\n        {\n            \"JobName\": \"my-testing-job\",\n            \"JobRunId\": \"jr_852f1de1f29fb62e0ba4166c33970803935d87f14f96cfdee5089d5274a61d3f\"\n        }\n    ],\n    \"Errors\": [],\n    \"ResponseMetadata\": {\n        \"RequestId\": \"66bd6b90-01db-44ab-95b9-6aeff0e73d88\",\n        \"HTTPStatusCode\": 200,\n        \"HTTPHeaders\": {\n            \"date\": \"Fri, 16 Oct 2020 20:54:51 GMT\",\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"content-length\": \"148\",\n            \"connection\": \"keep-alive\",\n            \"x-amzn-requestid\": \"66bd6b90-01db-44ab-95b9-6aeff0e73d88\"\n        },\n        \"RetryAttempts\": 0\n    }\n}\n\n\nFor more information, see Job Runs in the AWS Glue Developer Guide."
    },
    {
      "command_name": "batch-update-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/batch-update-partition.html",
      "command_description": "Description\n\nUpdates one or more partitions in a batch operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-update-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--entries <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--entries <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the catalog in which the partition is to be updated. Currently, this should be the Amazon Web Services account ID.\n\n--database-name (string)\n\nThe name of the metadata database in which the partition is to be updated.\n\n--table-name (string)\n\nThe name of the metadata table in which the partition is to be updated.\n\n--entries (list)\n\nA list of up to 100 BatchUpdatePartitionRequestEntry objects to update.\n\n(structure)\n\nA structure that contains the values and structure used to update a partition.\n\nPartitionValueList -> (list)\n\nA list of values defining the partitions.\n\n(string)\n\nPartitionInput -> (structure)\n\nThe structure used to update a partition.\n\nValues -> (list)\n\nThe values of the partition. Although this parameter is not required by the SDK, you must specify this parameter for a valid input.\n\nThe values for the keys for the new partition must be passed as an array of String objects that must be ordered in the same order as the partition keys appearing in the Amazon S3 prefix. Otherwise Glue will add the values to the wrong keys.\n\n(string)\n\nLastAccessTime -> (timestamp)\n\nThe last time at which the partition was accessed.\n\nStorageDescriptor -> (structure)\n\nProvides information about the physical location where the partition is stored.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nParameters -> (map)\n\nThese key-value pairs define partition parameters.\n\nkey -> (string)\n\nvalue -> (string)\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time at which column statistics were computed for this partition.\n\nJSON Syntax:\n\n[\n  {\n    \"PartitionValueList\": [\"string\", ...],\n    \"PartitionInput\": {\n      \"Values\": [\"string\", ...],\n      \"LastAccessTime\": timestamp,\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"string\",\n            \"Type\": \"string\",\n            \"Comment\": \"string\",\n            \"Parameters\": {\"string\": \"string\"\n              ...}\n          }\n          ...\n        ],\n        \"Location\": \"string\",\n        \"InputFormat\": \"string\",\n        \"OutputFormat\": \"string\",\n        \"Compressed\": true|false,\n        \"NumberOfBuckets\": integer,\n        \"SerdeInfo\": {\n          \"Name\": \"string\",\n          \"SerializationLibrary\": \"string\",\n          \"Parameters\": {\"string\": \"string\"\n            ...}\n        },\n        \"BucketColumns\": [\"string\", ...],\n        \"SortColumns\": [\n          {\n            \"Column\": \"string\",\n            \"SortOrder\": integer\n          }\n          ...\n        ],\n        \"Parameters\": {\"string\": \"string\"\n          ...},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\"string\", ...],\n          \"SkewedColumnValues\": [\"string\", ...],\n          \"SkewedColumnValueLocationMaps\": {\"string\": \"string\"\n            ...}\n        },\n        \"StoredAsSubDirectories\": true|false,\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"string\",\n            \"SchemaName\": \"string\",\n            \"RegistryName\": \"string\"\n          },\n          \"SchemaVersionId\": \"string\",\n          \"SchemaVersionNumber\": long\n        }\n      },\n      \"Parameters\": {\"string\": \"string\"\n        ...},\n      \"LastAnalyzedTime\": timestamp\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nErrors -> (list)\n\nThe errors encountered when trying to update the requested partitions. A list of BatchUpdatePartitionFailureEntry objects.\n\n(structure)\n\nContains information about a batch update partition error.\n\nPartitionValueList -> (list)\n\nA list of values defining the partitions.\n\n(string)\n\nErrorDetail -> (structure)\n\nThe details about the batch update partition error.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error."
    },
    {
      "command_name": "cancel-ml-task-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/cancel-ml-task-run.html",
      "command_description": "Description\n\nCancels (stops) a task run. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can cancel a machine learning task run at any time by calling CancelMLTaskRun with a task run’s parent transform’s TransformID and the task run’s TaskRunId .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-ml-task-run\n--transform-id <value>\n--task-run-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--transform-id <value>",
        "--task-run-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--transform-id (string)\n\nThe unique identifier of the machine learning transform.\n\n--task-run-id (string)\n\nA unique identifier for the task run.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTransformId -> (string)\n\nThe unique identifier of the machine learning transform.\n\nTaskRunId -> (string)\n\nThe unique identifier for the task run.\n\nStatus -> (string)\n\nThe status for this run."
    },
    {
      "command_name": "check-schema-version-validity",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/check-schema-version-validity.html",
      "command_description": "Description\n\nValidates the supplied schema. This call has no side effects, it simply validates using the supplied schema using DataFormat as the format. Since it does not take a schema set name, no compatibility checks are performed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  check-schema-version-validity\n--data-format <value>\n--schema-definition <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--data-format <value>",
        "--schema-definition <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--data-format (string)\n\nThe data format of the schema definition. Currently AVRO and JSON are supported.\n\nPossible values:\n\nAVRO\n\nJSON\n\n--schema-definition (string)\n\nThe definition of the schema that has to be validated.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nValid -> (boolean)\n\nReturn true, if the schema is valid and false otherwise.\n\nError -> (string)\n\nA validation failure error message."
    },
    {
      "command_name": "create-blueprint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-blueprint.html",
      "command_description": "Description\n\nRegisters a blueprint with Glue.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-blueprint\n--name <value>\n[--description <value>]\n--blueprint-location <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--blueprint-location <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the blueprint.\n\n--description (string)\n\nA description of the blueprint.\n\n--blueprint-location (string)\n\nSpecifies a path in Amazon S3 where the blueprint is published.\n\n--tags (map)\n\nThe tags to be applied to this blueprint.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nReturns the name of the blueprint that was registered."
    },
    {
      "command_name": "create-classifier",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-classifier.html",
      "command_description": "Description\n\nCreates a classifier in the user’s account. This can be a GrokClassifier , an XMLClassifier , a JsonClassifier , or a CsvClassifier , depending on which field of the request is present.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-classifier\n[--grok-classifier <value>]\n[--xml-classifier <value>]\n[--json-classifier <value>]\n[--csv-classifier <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--grok-classifier <value>]",
        "[--xml-classifier <value>]",
        "[--json-classifier <value>]",
        "[--csv-classifier <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--grok-classifier (structure)\n\nA GrokClassifier object specifying the classifier to create.\n\nClassification -> (string)\n\nAn identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.\n\nName -> (string)\n\nThe name of the new classifier.\n\nGrokPattern -> (string)\n\nThe grok pattern used by this classifier.\n\nCustomPatterns -> (string)\n\nOptional custom grok patterns used by this classifier.\n\nShorthand Syntax:\n\nClassification=string,Name=string,GrokPattern=string,CustomPatterns=string\n\n\nJSON Syntax:\n\n{\n  \"Classification\": \"string\",\n  \"Name\": \"string\",\n  \"GrokPattern\": \"string\",\n  \"CustomPatterns\": \"string\"\n}\n\n\n--xml-classifier (structure)\n\nAn XMLClassifier object specifying the classifier to create.\n\nClassification -> (string)\n\nAn identifier of the data format that the classifier matches.\n\nName -> (string)\n\nThe name of the classifier.\n\nRowTag -> (string)\n\nThe XML tag designating the element that contains each record in an XML document being parsed. This can’t identify a self-closing element (closed by /> ). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <row item_a=\"A\" item_b=\"B\"></row> is okay, but <row item_a=\"A\" item_b=\"B\" /> is not).\n\nShorthand Syntax:\n\nClassification=string,Name=string,RowTag=string\n\n\nJSON Syntax:\n\n{\n  \"Classification\": \"string\",\n  \"Name\": \"string\",\n  \"RowTag\": \"string\"\n}\n\n\n--json-classifier (structure)\n\nA JsonClassifier object specifying the classifier to create.\n\nName -> (string)\n\nThe name of the classifier.\n\nJsonPath -> (string)\n\nA JsonPath string defining the JSON data for the classifier to classify. Glue supports a subset of JsonPath, as described in Writing JsonPath Custom Classifiers .\n\nShorthand Syntax:\n\nName=string,JsonPath=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"JsonPath\": \"string\"\n}\n\n\n--csv-classifier (structure)\n\nA CsvClassifier object specifying the classifier to create.\n\nName -> (string)\n\nThe name of the classifier.\n\nDelimiter -> (string)\n\nA custom symbol to denote what separates each column entry in the row.\n\nQuoteSymbol -> (string)\n\nA custom symbol to denote what combines content into a single column value. Must be different from the column delimiter.\n\nContainsHeader -> (string)\n\nIndicates whether the CSV file contains a header.\n\nHeader -> (list)\n\nA list of strings representing column names.\n\n(string)\n\nDisableValueTrimming -> (boolean)\n\nSpecifies not to trim values before identifying the type of column values. The default value is true.\n\nAllowSingleColumn -> (boolean)\n\nEnables the processing of files that contain only one column.\n\nShorthand Syntax:\n\nName=string,Delimiter=string,QuoteSymbol=string,ContainsHeader=string,Header=string,string,DisableValueTrimming=boolean,AllowSingleColumn=boolean\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Delimiter\": \"string\",\n  \"QuoteSymbol\": \"string\",\n  \"ContainsHeader\": \"UNKNOWN\"|\"PRESENT\"|\"ABSENT\",\n  \"Header\": [\"string\", ...],\n  \"DisableValueTrimming\": true|false,\n  \"AllowSingleColumn\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-connection.html",
      "command_description": "Description\n\nCreates a connection definition in the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-connection\n[--catalog-id <value>]\n--connection-input <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--connection-input <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which to create the connection. If none is provided, the Amazon Web Services account ID is used by default.\n\n--connection-input (structure)\n\nA ConnectionInput object defining the connection to create.\n\nName -> (string)\n\nThe name of the connection.\n\nDescription -> (string)\n\nThe description of the connection.\n\nConnectionType -> (string)\n\nThe type of the connection. Currently, these types are supported:\n\nJDBC - Designates a connection to a database through Java Database Connectivity (JDBC).\n\nKAFKA - Designates a connection to an Apache Kafka streaming platform.\n\nMONGODB - Designates a connection to a MongoDB document database.\n\nNETWORK - Designates a network connection to a data source within an Amazon Virtual Private Cloud environment (Amazon VPC).\n\nMARKETPLACE - Uses configuration settings contained in a connector purchased from Amazon Web Services Marketplace to read from and write to data stores that are not natively supported by Glue.\n\nCUSTOM - Uses configuration settings contained in a custom connector to read from and write to data stores that are not natively supported by Glue.\n\nSFTP is not supported.\n\nMatchCriteria -> (list)\n\nA list of criteria that can be used in selecting this connection.\n\n(string)\n\nConnectionProperties -> (map)\n\nThese key-value pairs define parameters for the connection.\n\nkey -> (string)\n\nvalue -> (string)\n\nPhysicalConnectionRequirements -> (structure)\n\nA map of physical connection requirements, such as virtual private cloud (VPC) and SecurityGroup , that are needed to successfully make this connection.\n\nSubnetId -> (string)\n\nThe subnet ID used by the connection.\n\nSecurityGroupIdList -> (list)\n\nThe security group ID list used by the connection.\n\n(string)\n\nAvailabilityZone -> (string)\n\nThe connection’s Availability Zone. This field is redundant because the specified subnet implies the Availability Zone to be used. Currently the field must be populated, but it will be deprecated in the future.\n\nShorthand Syntax:\n\nName=string,Description=string,ConnectionType=string,MatchCriteria=string,string,ConnectionProperties={KeyName1=string,KeyName2=string},PhysicalConnectionRequirements={SubnetId=string,SecurityGroupIdList=[string,string],AvailabilityZone=string}\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Description\": \"string\",\n  \"ConnectionType\": \"JDBC\"|\"SFTP\"|\"MONGODB\"|\"KAFKA\"|\"NETWORK\"|\"MARKETPLACE\"|\"CUSTOM\",\n  \"MatchCriteria\": [\"string\", ...],\n  \"ConnectionProperties\": {\"HOST\"|\"PORT\"|\"USERNAME\"|\"PASSWORD\"|\"ENCRYPTED_PASSWORD\"|\"JDBC_DRIVER_JAR_URI\"|\"JDBC_DRIVER_CLASS_NAME\"|\"JDBC_ENGINE\"|\"JDBC_ENGINE_VERSION\"|\"CONFIG_FILES\"|\"INSTANCE_ID\"|\"JDBC_CONNECTION_URL\"|\"JDBC_ENFORCE_SSL\"|\"CUSTOM_JDBC_CERT\"|\"SKIP_CUSTOM_JDBC_CERT_VALIDATION\"|\"CUSTOM_JDBC_CERT_STRING\"|\"CONNECTION_URL\"|\"KAFKA_BOOTSTRAP_SERVERS\"|\"KAFKA_SSL_ENABLED\"|\"KAFKA_CUSTOM_CERT\"|\"KAFKA_SKIP_CUSTOM_CERT_VALIDATION\"|\"KAFKA_CLIENT_KEYSTORE\"|\"KAFKA_CLIENT_KEYSTORE_PASSWORD\"|\"KAFKA_CLIENT_KEY_PASSWORD\"|\"ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD\"|\"ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD\"|\"SECRET_ID\"|\"CONNECTOR_URL\"|\"CONNECTOR_TYPE\"|\"CONNECTOR_CLASS_NAME\": \"string\"\n    ...},\n  \"PhysicalConnectionRequirements\": {\n    \"SubnetId\": \"string\",\n    \"SecurityGroupIdList\": [\"string\", ...],\n    \"AvailabilityZone\": \"string\"\n  }\n}\n\n\n--tags (map)\n\nThe tags you assign to the connection.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo create a connection for AWS Glue data stores\n\nThe following create-connection example creates a connection in the AWS Glue Data Catalog that provides connection information for a Kafka data store.\n\naws glue create-connection \\\n    --connection-input '{ \\\n        \"Name\":\"conn-kafka-custom\", \\\n        \"Description\":\"kafka connection with ssl to custom kafka\", \\\n        \"ConnectionType\":\"KAFKA\",  \\\n        \"ConnectionProperties\":{  \\\n            \"KAFKA_BOOTSTRAP_SERVERS\":\"<Kafka-broker-server-url>:<SSL-Port>\", \\\n            \"KAFKA_SSL_ENABLED\":\"true\", \\\n            \"KAFKA_CUSTOM_CERT\": \"s3://bucket/prefix/cert-file.pem\" \\\n        }, \\\n        \"PhysicalConnectionRequirements\":{ \\\n            \"SubnetId\":\"subnet-1234\", \\\n            \"SecurityGroupIdList\":[\"sg-1234\"], \\\n            \"AvailabilityZone\":\"us-east-1a\"} \\\n    }' \\\n    --region us-east-1\n    --endpoint https://glue.us-east-1.amazonaws.com\n\n\nThis command produces no output.\n\nFor more information, see Defining Connections in the AWS Glue Data Catalog in the AWS Glue Developer Guide."
    },
    {
      "command_name": "create-crawler",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-crawler.html",
      "command_description": "Description\n\nCreates a new crawler with specified targets, role, configuration, and optional schedule. At least one crawl target must be specified, in the s3Targets field, the jdbcTargets field, or the DynamoDBTargets field.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-crawler\n--name <value>\n--role <value>\n[--database-name <value>]\n[--description <value>]\n--targets <value>\n[--schedule <value>]\n[--classifiers <value>]\n[--table-prefix <value>]\n[--schema-change-policy <value>]\n[--recrawl-policy <value>]\n[--lineage-configuration <value>]\n[--configuration <value>]\n[--crawler-security-configuration <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--role <value>",
        "[--database-name <value>]",
        "[--description <value>]",
        "--targets <value>",
        "[--schedule <value>]",
        "[--classifiers <value>]",
        "[--table-prefix <value>]",
        "[--schema-change-policy <value>]",
        "[--recrawl-policy <value>]",
        "[--lineage-configuration <value>]",
        "[--configuration <value>]",
        "[--crawler-security-configuration <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the new crawler.\n\n--role (string)\n\nThe IAM role or Amazon Resource Name (ARN) of an IAM role used by the new crawler to access customer resources.\n\n--database-name (string)\n\nThe Glue database where results are written, such as: arn:aws:daylight:us-east-1::database/sometable/* .\n\n--description (string)\n\nA description of the new crawler.\n\n--targets (structure)\n\nA list of collection of targets to crawl.\n\nS3Targets -> (list)\n\nSpecifies Amazon Simple Storage Service (Amazon S3) targets.\n\n(structure)\n\nSpecifies a data store in Amazon Simple Storage Service (Amazon S3).\n\nPath -> (string)\n\nThe path to the Amazon S3 target.\n\nExclusions -> (list)\n\nA list of glob patterns used to exclude from the crawl. For more information, see Catalog Tables with a Crawler .\n\n(string)\n\nConnectionName -> (string)\n\nThe name of a connection which allows a job or crawler to access data in Amazon S3 within an Amazon Virtual Private Cloud environment (Amazon VPC).\n\nSampleSize -> (integer)\n\nSets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.\n\nEventQueueArn -> (string)\n\nA valid Amazon SQS ARN. For example, arn:aws:sqs:region:account:sqs .\n\nDlqEventQueueArn -> (string)\n\nA valid Amazon dead-letter SQS ARN. For example, arn:aws:sqs:region:account:deadLetterQueue .\n\nJdbcTargets -> (list)\n\nSpecifies JDBC targets.\n\n(structure)\n\nSpecifies a JDBC data store to crawl.\n\nConnectionName -> (string)\n\nThe name of the connection to use to connect to the JDBC target.\n\nPath -> (string)\n\nThe path of the JDBC target.\n\nExclusions -> (list)\n\nA list of glob patterns used to exclude from the crawl. For more information, see Catalog Tables with a Crawler .\n\n(string)\n\nMongoDBTargets -> (list)\n\nSpecifies Amazon DocumentDB or MongoDB targets.\n\n(structure)\n\nSpecifies an Amazon DocumentDB or MongoDB data store to crawl.\n\nConnectionName -> (string)\n\nThe name of the connection to use to connect to the Amazon DocumentDB or MongoDB target.\n\nPath -> (string)\n\nThe path of the Amazon DocumentDB or MongoDB target (database/collection).\n\nScanAll -> (boolean)\n\nIndicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.\n\nA value of true means to scan all records, while a value of false means to sample the records. If no value is specified, the value defaults to true .\n\nDynamoDBTargets -> (list)\n\nSpecifies Amazon DynamoDB targets.\n\n(structure)\n\nSpecifies an Amazon DynamoDB table to crawl.\n\nPath -> (string)\n\nThe name of the DynamoDB table to crawl.\n\nscanAll -> (boolean)\n\nIndicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.\n\nA value of true means to scan all records, while a value of false means to sample the records. If no value is specified, the value defaults to true .\n\nscanRate -> (double)\n\nThe percentage of the configured read capacity units to use by the Glue crawler. Read capacity units is a term defined by DynamoDB, and is a numeric value that acts as rate limiter for the number of reads that can be performed on that table per second.\n\nThe valid values are null or a value between 0.1 to 1.5. A null value is used when user does not provide a value, and defaults to 0.5 of the configured Read Capacity Unit (for provisioned tables), or 0.25 of the max configured Read Capacity Unit (for tables using on-demand mode).\n\nCatalogTargets -> (list)\n\nSpecifies Glue Data Catalog targets.\n\n(structure)\n\nSpecifies an Glue Data Catalog target.\n\nDatabaseName -> (string)\n\nThe name of the database to be synchronized.\n\nTables -> (list)\n\nA list of the tables to be synchronized.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"S3Targets\": [\n    {\n      \"Path\": \"string\",\n      \"Exclusions\": [\"string\", ...],\n      \"ConnectionName\": \"string\",\n      \"SampleSize\": integer,\n      \"EventQueueArn\": \"string\",\n      \"DlqEventQueueArn\": \"string\"\n    }\n    ...\n  ],\n  \"JdbcTargets\": [\n    {\n      \"ConnectionName\": \"string\",\n      \"Path\": \"string\",\n      \"Exclusions\": [\"string\", ...]\n    }\n    ...\n  ],\n  \"MongoDBTargets\": [\n    {\n      \"ConnectionName\": \"string\",\n      \"Path\": \"string\",\n      \"ScanAll\": true|false\n    }\n    ...\n  ],\n  \"DynamoDBTargets\": [\n    {\n      \"Path\": \"string\",\n      \"scanAll\": true|false,\n      \"scanRate\": double\n    }\n    ...\n  ],\n  \"CatalogTargets\": [\n    {\n      \"DatabaseName\": \"string\",\n      \"Tables\": [\"string\", ...]\n    }\n    ...\n  ]\n}\n\n\n--schedule (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\n--classifiers (list)\n\nA list of custom classifiers that the user has registered. By default, all built-in classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--table-prefix (string)\n\nThe table prefix used for catalog tables that are created.\n\n--schema-change-policy (structure)\n\nThe policy for the crawler’s update and deletion behavior.\n\nUpdateBehavior -> (string)\n\nThe update behavior when the crawler finds a changed schema.\n\nDeleteBehavior -> (string)\n\nThe deletion behavior when the crawler finds a deleted object.\n\nShorthand Syntax:\n\nUpdateBehavior=string,DeleteBehavior=string\n\n\nJSON Syntax:\n\n{\n  \"UpdateBehavior\": \"LOG\"|\"UPDATE_IN_DATABASE\",\n  \"DeleteBehavior\": \"LOG\"|\"DELETE_FROM_DATABASE\"|\"DEPRECATE_IN_DATABASE\"\n}\n\n\n--recrawl-policy (structure)\n\nA policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.\n\nRecrawlBehavior -> (string)\n\nSpecifies whether to crawl the entire dataset again or to crawl only folders that were added since the last crawler run.\n\nA value of CRAWL_EVERYTHING specifies crawling the entire dataset again.\n\nA value of CRAWL_NEW_FOLDERS_ONLY specifies crawling only folders that were added since the last crawler run.\n\nA value of CRAWL_EVENT_MODE specifies crawling only the changes identified by Amazon S3 events.\n\nShorthand Syntax:\n\nRecrawlBehavior=string\n\n\nJSON Syntax:\n\n{\n  \"RecrawlBehavior\": \"CRAWL_EVERYTHING\"|\"CRAWL_NEW_FOLDERS_ONLY\"|\"CRAWL_EVENT_MODE\"\n}\n\n\n--lineage-configuration (structure)\n\nSpecifies data lineage configuration settings for the crawler.\n\nCrawlerLineageSettings -> (string)\n\nSpecifies whether data lineage is enabled for the crawler. Valid values are:\n\nENABLE: enables data lineage for the crawler\n\nDISABLE: disables data lineage for the crawler\n\nShorthand Syntax:\n\nCrawlerLineageSettings=string\n\n\nJSON Syntax:\n\n{\n  \"CrawlerLineageSettings\": \"ENABLE\"|\"DISABLE\"\n}\n\n\n--configuration (string)\n\nCrawler configuration information. This versioned JSON string allows users to specify aspects of a crawler’s behavior. For more information, see Configuring a Crawler .\n\n--crawler-security-configuration (string)\n\nThe name of the SecurityConfiguration structure to be used by this crawler.\n\n--tags (map)\n\nThe tags to use with this crawler request. You may use tags to limit access to the crawler. For more information about tags in Glue, see Amazon Web Services Tags in Glue in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-database",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-database.html",
      "command_description": "Description\n\nCreates a new database in a Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-database\n[--catalog-id <value>]\n--database-input <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-input <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which to create the database. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-input (structure)\n\nThe metadata for the database.\n\nName -> (string)\n\nThe name of the database. For Hive compatibility, this is folded to lowercase when it is stored.\n\nDescription -> (string)\n\nA description of the database.\n\nLocationUri -> (string)\n\nThe location of the database (for example, an HDFS path).\n\nParameters -> (map)\n\nThese key-value pairs define parameters and properties of the database.\n\nThese key-value pairs define parameters and properties of the database.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreateTableDefaultPermissions -> (list)\n\nCreates a set of default permissions on the table for principals.\n\n(structure)\n\nPermissions granted to a principal.\n\nPrincipal -> (structure)\n\nThe principal who is granted permissions.\n\nDataLakePrincipalIdentifier -> (string)\n\nAn identifier for the Lake Formation principal.\n\nPermissions -> (list)\n\nThe permissions that are granted to the principal.\n\n(string)\n\nTargetDatabase -> (structure)\n\nA DatabaseIdentifier structure that describes a target database for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the database resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database.\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Description\": \"string\",\n  \"LocationUri\": \"string\",\n  \"Parameters\": {\"string\": \"string\"\n    ...},\n  \"CreateTableDefaultPermissions\": [\n    {\n      \"Principal\": {\n        \"DataLakePrincipalIdentifier\": \"string\"\n      },\n      \"Permissions\": [\"ALL\"|\"SELECT\"|\"ALTER\"|\"DROP\"|\"DELETE\"|\"INSERT\"|\"CREATE_DATABASE\"|\"CREATE_TABLE\"|\"DATA_LOCATION_ACCESS\", ...]\n    }\n    ...\n  ],\n  \"TargetDatabase\": {\n    \"CatalogId\": \"string\",\n    \"DatabaseName\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo create a database\n\nThe following create-database example creates a database in the AWS Glue Data Catalog.\n\naws glue create-database \\\n    --database-input \"{\\\"Name\\\":\\\"tempdb\\\"}\" \\\n    --profile my_profile \\\n    --endpoint https://glue.us-east-1.amazonaws.com\n\n\nThis command produces no output.\n\nFor more information, see Defining a Database in Your Data Catalog in the AWS Glue Developer Guide."
    },
    {
      "command_name": "create-dev-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-dev-endpoint.html",
      "command_description": "Description\n\nCreates a new development endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-dev-endpoint\n--endpoint-name <value>\n--role-arn <value>\n[--security-group-ids <value>]\n[--subnet-id <value>]\n[--public-key <value>]\n[--public-keys <value>]\n[--number-of-nodes <value>]\n[--worker-type <value>]\n[--glue-version <value>]\n[--number-of-workers <value>]\n[--extra-python-libs-s3-path <value>]\n[--extra-jars-s3-path <value>]\n[--security-configuration <value>]\n[--tags <value>]\n[--arguments <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--endpoint-name <value>",
        "--role-arn <value>",
        "[--security-group-ids <value>]",
        "[--subnet-id <value>]",
        "[--public-key <value>]",
        "[--public-keys <value>]",
        "[--number-of-nodes <value>]",
        "[--worker-type <value>]",
        "[--glue-version <value>]",
        "[--number-of-workers <value>]",
        "[--extra-python-libs-s3-path <value>]",
        "[--extra-jars-s3-path <value>]",
        "[--security-configuration <value>]",
        "[--tags <value>]",
        "[--arguments <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--endpoint-name (string)\n\nThe name to be assigned to the new DevEndpoint .\n\n--role-arn (string)\n\nThe IAM role for the DevEndpoint .\n\n--security-group-ids (list)\n\nSecurity group IDs for the security groups to be used by the new DevEndpoint .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--subnet-id (string)\n\nThe subnet ID for the new DevEndpoint to use.\n\n--public-key (string)\n\nThe public key to be used by this DevEndpoint for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.\n\n--public-keys (list)\n\nA list of public keys to be used by the development endpoints for authentication. The use of this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.\n\nNote\n\nIf you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the UpdateDevEndpoint API with the public key content in the deletePublicKeys attribute, and the list of new keys in the addPublicKeys attribute.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--number-of-nodes (integer)\n\nThe number of Glue Data Processing Units (DPUs) to allocate to this DevEndpoint .\n\n--worker-type (string)\n\nThe type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nFor the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nKnown issue: when a development endpoint is created with the G.2X WorkerType configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk.\n\nPossible values:\n\nStandard\n\nG.1X\n\nG.2X\n\n--glue-version (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nDevelopment endpoints that are created without specifying a Glue version default to Glue 0.9.\n\nYou can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.\n\n--number-of-workers (integer)\n\nThe number of workers of a defined workerType that are allocated to the development endpoint.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\n--extra-python-libs-s3-path (string)\n\nThe paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your DevEndpoint . Multiple values must be complete paths separated by a comma.\n\nNote\n\nYou can only use pure Python libraries with a DevEndpoint . Libraries that rely on C extensions, such as the pandas Python data analysis library, are not yet supported.\n\n--extra-jars-s3-path (string)\n\nThe path to one or more Java .jar files in an S3 bucket that should be loaded in your DevEndpoint .\n\n--security-configuration (string)\n\nThe name of the SecurityConfiguration structure to be used with this DevEndpoint .\n\n--tags (map)\n\nThe tags to use with this DevEndpoint. You may use tags to limit access to the DevEndpoint. For more information about tags in Glue, see Amazon Web Services Tags in Glue in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--arguments (map)\n\nA map of arguments used to configure the DevEndpoint .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEndpointName -> (string)\n\nThe name assigned to the new DevEndpoint .\n\nStatus -> (string)\n\nThe current status of the new DevEndpoint .\n\nSecurityGroupIds -> (list)\n\nThe security groups assigned to the new DevEndpoint .\n\n(string)\n\nSubnetId -> (string)\n\nThe subnet ID assigned to the new DevEndpoint .\n\nRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the role assigned to the new DevEndpoint .\n\nYarnEndpointAddress -> (string)\n\nThe address of the YARN endpoint used by this DevEndpoint .\n\nZeppelinRemoteSparkInterpreterPort -> (integer)\n\nThe Apache Zeppelin port for the remote Apache Spark interpreter.\n\nNumberOfNodes -> (integer)\n\nThe number of Glue Data Processing Units (DPUs) allocated to this DevEndpoint.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated to the development endpoint. May be a value of Standard, G.1X, or G.2X.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated to the development endpoint.\n\nAvailabilityZone -> (string)\n\nThe AWS Availability Zone where this DevEndpoint is located.\n\nVpcId -> (string)\n\nThe ID of the virtual private cloud (VPC) used by this DevEndpoint .\n\nExtraPythonLibsS3Path -> (string)\n\nThe paths to one or more Python libraries in an S3 bucket that will be loaded in your DevEndpoint .\n\nExtraJarsS3Path -> (string)\n\nPath to one or more Java .jar files in an S3 bucket that will be loaded in your DevEndpoint .\n\nFailureReason -> (string)\n\nThe reason for a current failure in this DevEndpoint .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure being used with this DevEndpoint .\n\nCreatedTimestamp -> (timestamp)\n\nThe point in time at which this DevEndpoint was created.\n\nArguments -> (map)\n\nThe map of arguments used to configure this DevEndpoint .\n\nValid arguments are:\n\n\"--enable-glue-datacatalog\": \"\"\n\nYou can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "create-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-job.html",
      "command_description": "Description\n\nCreates a new job definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-job\n--name <value>\n[--description <value>]\n[--log-uri <value>]\n--role <value>\n[--execution-property <value>]\n--command <value>\n[--default-arguments <value>]\n[--non-overridable-arguments <value>]\n[--connections <value>]\n[--max-retries <value>]\n[--allocated-capacity <value>]\n[--timeout <value>]\n[--max-capacity <value>]\n[--security-configuration <value>]\n[--tags <value>]\n[--notification-property <value>]\n[--glue-version <value>]\n[--number-of-workers <value>]\n[--worker-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--log-uri <value>]",
        "--role <value>",
        "[--execution-property <value>]",
        "--command <value>",
        "[--default-arguments <value>]",
        "[--non-overridable-arguments <value>]",
        "[--connections <value>]",
        "[--max-retries <value>]",
        "[--allocated-capacity <value>]",
        "[--timeout <value>]",
        "[--max-capacity <value>]",
        "[--security-configuration <value>]",
        "[--tags <value>]",
        "[--notification-property <value>]",
        "[--glue-version <value>]",
        "[--number-of-workers <value>]",
        "[--worker-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name you assign to this job definition. It must be unique in your account.\n\n--description (string)\n\nDescription of the job being defined.\n\n--log-uri (string)\n\nThis field is reserved for future use.\n\n--role (string)\n\nThe name or Amazon Resource Name (ARN) of the IAM role associated with this job.\n\n--execution-property (structure)\n\nAn ExecutionProperty specifying the maximum number of concurrent runs allowed for this job.\n\nMaxConcurrentRuns -> (integer)\n\nThe maximum number of concurrent runs allowed for the job. The default is 1. An error is returned when this threshold is reached. The maximum value you can specify is controlled by a service limit.\n\nShorthand Syntax:\n\nMaxConcurrentRuns=integer\n\n\nJSON Syntax:\n\n{\n  \"MaxConcurrentRuns\": integer\n}\n\n\n--command (structure)\n\nThe JobCommand that runs this job.\n\nName -> (string)\n\nThe name of the job command. For an Apache Spark ETL job, this must be glueetl . For a Python shell job, it must be pythonshell . For an Apache Spark streaming ETL job, this must be gluestreaming .\n\nScriptLocation -> (string)\n\nSpecifies the Amazon Simple Storage Service (Amazon S3) path to a script that runs a job.\n\nPythonVersion -> (string)\n\nThe Python version being used to run a Python shell job. Allowed values are 2 or 3.\n\nShorthand Syntax:\n\nName=string,ScriptLocation=string,PythonVersion=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"ScriptLocation\": \"string\",\n  \"PythonVersion\": \"string\"\n}\n\n\n--default-arguments (map)\n\nThe default arguments for this job.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--non-overridable-arguments (map)\n\nNon-overridable arguments for this job, specified as name-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--connections (structure)\n\nThe connections used for this job.\n\nConnections -> (list)\n\nA list of connections used by the job.\n\n(string)\n\nShorthand Syntax:\n\nConnections=string,string\n\n\nJSON Syntax:\n\n{\n  \"Connections\": [\"string\", ...]\n}\n\n\n--max-retries (integer)\n\nThe maximum number of times to retry this job if it fails.\n\n--allocated-capacity (integer)\n\nThis parameter is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) to allocate to this Job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\n--timeout (integer)\n\nThe job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).\n\n--max-capacity (double)\n\nFor Glue version 1.0 or earlier jobs, using the standard worker type, the number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”) or Apache Spark streaming ETL job (JobCommand.Name =”gluestreaming”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nFor Glue version 2.0 jobs, you cannot instead specify a Maximum capacity . Instead, you should specify a Worker type and the Number of workers .\n\n--security-configuration (string)\n\nThe name of the SecurityConfiguration structure to be used with this job.\n\n--tags (map)\n\nThe tags to use with this job. You may use tags to limit access to the job. For more information about tags in Glue, see Amazon Web Services Tags in Glue in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--notification-property (structure)\n\nSpecifies configuration properties of a job notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nShorthand Syntax:\n\nNotifyDelayAfter=integer\n\n\nJSON Syntax:\n\n{\n  \"NotifyDelayAfter\": integer\n}\n\n\n--glue-version (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.\n\n--number-of-workers (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\n--worker-type (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nFor the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nPossible values:\n\nStandard\n\nG.1X\n\nG.2X\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe unique name that was provided for this job definition.",
      "command_examples": "Examples\n\nTo create a job to transform data\n\nThe following create-job example creates a streaming job that runs a script stored in S3.\n\naws glue create-job \\\n    --name my-testing-job \\\n    --role AWSGlueServiceRoleDefault \\\n    --command '{ \\\n        \"Name\": \"gluestreaming\", \\\n        \"ScriptLocation\": \"s3://DOC-EXAMPLE-BUCKET/folder/\" \\\n    }' \\\n    --region us-east-1 \\\n    --output json \\\n    --default-arguments '{ \\\n        \"--job-language\":\"scala\", \\\n        \"--class\":\"GlueApp\" \\\n    }' \\\n    --profile my-profile \\\n    --endpoint https://glue.us-east-1.amazonaws.com\n\n\nContents of test_script.scala:\n\nimport com.amazonaws.services.glue.ChoiceOption\nimport com.amazonaws.services.glue.GlueContext\nimport com.amazonaws.services.glue.MappingSpec\nimport com.amazonaws.services.glue.ResolveSpec\nimport com.amazonaws.services.glue.errors.CallSite\nimport com.amazonaws.services.glue.util.GlueArgParser\nimport com.amazonaws.services.glue.util.Job\nimport com.amazonaws.services.glue.util.JsonOptions\nimport org.apache.spark.SparkContext\nimport scala.collection.JavaConverters._\n\nobject GlueApp {\n    def main(sysArgs: Array[String]) {\n        val spark: SparkContext = new SparkContext()\n        val glueContext: GlueContext = new GlueContext(spark)\n        // @params: [JOB_NAME]\n        val args = GlueArgParser.getResolvedOptions(sysArgs, Seq(\"JOB_NAME\").toArray)\n        Job.init(args(\"JOB_NAME\"), glueContext, args.asJava)\n        // @type: DataSource\n        // @args: [database = \"tempdb\", table_name = \"s3-source\", transformation_ctx = \"datasource0\"]\n        // @return: datasource0\n        // @inputs: []\n        val datasource0 = glueContext.getCatalogSource(database = \"tempdb\", tableName = \"s3-source\", redshiftTmpDir = \"\", transformationContext = \"datasource0\").getDynamicFrame()\n        // @type: ApplyMapping\n        // @args: [mapping = [(\"sensorid\", \"int\", \"sensorid\", \"int\"), (\"currenttemperature\", \"int\", \"currenttemperature\", \"int\"), (\"status\", \"string\", \"status\", \"string\")], transformation_ctx = \"applymapping1\"]\n        // @return: applymapping1\n        // @inputs: [frame = datasource0]\n        val applymapping1 = datasource0.applyMapping(mappings = Seq((\"sensorid\", \"int\", \"sensorid\", \"int\"), (\"currenttemperature\", \"int\", \"currenttemperature\", \"int\"), (\"status\", \"string\", \"status\", \"string\")), caseSensitive = false, transformationContext = \"applymapping1\")\n        // @type: SelectFields\n        // @args: [paths = [\"sensorid\", \"currenttemperature\", \"status\"], transformation_ctx = \"selectfields2\"]\n        // @return: selectfields2\n        // @inputs: [frame = applymapping1]\n        val selectfields2 = applymapping1.selectFields(paths = Seq(\"sensorid\", \"currenttemperature\", \"status\"), transformationContext = \"selectfields2\")\n        // @type: ResolveChoice\n        // @args: [choice = \"MATCH_CATALOG\", database = \"tempdb\", table_name = \"my-s3-sink\", transformation_ctx = \"resolvechoice3\"]\n        // @return: resolvechoice3\n        // @inputs: [frame = selectfields2]\n        val resolvechoice3 = selectfields2.resolveChoice(choiceOption = Some(ChoiceOption(\"MATCH_CATALOG\")), database = Some(\"tempdb\"), tableName = Some(\"my-s3-sink\"), transformationContext = \"resolvechoice3\")\n        // @type: DataSink\n        // @args: [database = \"tempdb\", table_name = \"my-s3-sink\", transformation_ctx = \"datasink4\"]\n        // @return: datasink4\n        // @inputs: [frame = resolvechoice3]\n        val datasink4 = glueContext.getCatalogSink(database = \"tempdb\", tableName = \"my-s3-sink\", redshiftTmpDir = \"\", transformationContext = \"datasink4\").writeDynamicFrame(resolvechoice3)\n        Job.commit()\n    }\n}\n\n\nOutput:\n\n{\n    \"Name\": \"my-testing-job\"\n}\n\n\nFor more information, see Authoring Jobs in AWS Glue in the AWS Glue Developer Guide."
    },
    {
      "command_name": "create-ml-transform",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-ml-transform.html",
      "command_description": "Description\n\nCreates an Glue machine learning transform. This operation creates the transform and all the necessary parameters to train it.\n\nCall this operation as the first step in the process of using a machine learning transform (such as the FindMatches transform) for deduplicating data. You can provide an optional Description , in addition to the parameters that you want to use for your algorithm.\n\nYou must also specify certain parameters for the tasks that Glue runs on your behalf as part of learning from your data and creating a high-quality machine learning transform. These parameters include Role , and optionally, AllocatedCapacity , Timeout , and MaxRetries . For more information, see Jobs .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-ml-transform\n--name <value>\n[--description <value>]\n--input-record-tables <value>\n--parameters <value>\n--role <value>\n[--glue-version <value>]\n[--max-capacity <value>]\n[--worker-type <value>]\n[--number-of-workers <value>]\n[--timeout <value>]\n[--max-retries <value>]\n[--tags <value>]\n[--transform-encryption <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--input-record-tables <value>",
        "--parameters <value>",
        "--role <value>",
        "[--glue-version <value>]",
        "[--max-capacity <value>]",
        "[--worker-type <value>]",
        "[--number-of-workers <value>]",
        "[--timeout <value>]",
        "[--max-retries <value>]",
        "[--tags <value>]",
        "[--transform-encryption <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe unique name that you give the transform when you create it.\n\n--description (string)\n\nA description of the machine learning transform that is being defined. The default is an empty string.\n\n--input-record-tables (list)\n\nA list of Glue table definitions used by the transform.\n\n(structure)\n\nThe database and table in the Glue Data Catalog that is used for input or output data.\n\nDatabaseName -> (string)\n\nA database name in the Glue Data Catalog.\n\nTableName -> (string)\n\nA table name in the Glue Data Catalog.\n\nCatalogId -> (string)\n\nA unique identifier for the Glue Data Catalog.\n\nConnectionName -> (string)\n\nThe name of the connection to the Glue Data Catalog.\n\nShorthand Syntax:\n\nDatabaseName=string,TableName=string,CatalogId=string,ConnectionName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"DatabaseName\": \"string\",\n    \"TableName\": \"string\",\n    \"CatalogId\": \"string\",\n    \"ConnectionName\": \"string\"\n  }\n  ...\n]\n\n\n--parameters (structure)\n\nThe algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type.\n\nTransformType -> (string)\n\nThe type of machine learning transform.\n\nFor information about the types of machine learning transforms, see Creating Machine Learning Transforms .\n\nFindMatchesParameters -> (structure)\n\nThe parameters for the find matches algorithm.\n\nPrimaryKeyColumnName -> (string)\n\nThe name of a column that uniquely identifies rows in the source table. Used to help identify matching records.\n\nPrecisionRecallTradeoff -> (double)\n\nThe value selected when tuning your transform for a balance between precision and recall. A value of 0.5 means no preference; a value of 1.0 means a bias purely for precision, and a value of 0.0 means a bias for recall. Because this is a tradeoff, choosing values close to 1.0 means very low recall, and choosing values close to 0.0 results in very low precision.\n\nThe precision metric indicates how often your model is correct when it predicts a match.\n\nThe recall metric indicates that for an actual match, how often your model predicts the match.\n\nAccuracyCostTradeoff -> (double)\n\nThe value that is selected when tuning your transform for a balance between accuracy and cost. A value of 0.5 means that the system balances accuracy and cost concerns. A value of 1.0 means a bias purely for accuracy, which typically results in a higher cost, sometimes substantially higher. A value of 0.0 means a bias purely for cost, which results in a less accurate FindMatches transform, sometimes with unacceptable accuracy.\n\nAccuracy measures how well the transform finds true positives and true negatives. Increasing accuracy requires more machine resources and cost. But it also results in increased recall.\n\nCost measures how many compute resources, and thus money, are consumed to run the transform.\n\nEnforceProvidedLabels -> (boolean)\n\nThe value to switch on or off to force the output to match the provided labels from users. If the value is True , the find matches transform forces the output to match the provided labels. The results override the normal conflation results. If the value is False , the find matches transform does not ensure all the labels provided are respected, and the results rely on the trained model.\n\nNote that setting this value to true may increase the conflation execution time.\n\nShorthand Syntax:\n\nTransformType=string,FindMatchesParameters={PrimaryKeyColumnName=string,PrecisionRecallTradeoff=double,AccuracyCostTradeoff=double,EnforceProvidedLabels=boolean}\n\n\nJSON Syntax:\n\n{\n  \"TransformType\": \"FIND_MATCHES\",\n  \"FindMatchesParameters\": {\n    \"PrimaryKeyColumnName\": \"string\",\n    \"PrecisionRecallTradeoff\": double,\n    \"AccuracyCostTradeoff\": double,\n    \"EnforceProvidedLabels\": true|false\n  }\n}\n\n\n--role (string)\n\nThe name or Amazon Resource Name (ARN) of the IAM role with the required permissions. The required permissions include both Glue service role permissions to Glue resources, and Amazon S3 permissions required by the transform.\n\nThis role needs Glue service role permissions to allow access to resources in Glue. See Attach a Policy to IAM Users That Access Glue .\n\nThis role needs permission to your Amazon Simple Storage Service (Amazon S3) sources, targets, temporary directory, scripts, and any libraries used by the task run for this transform.\n\n--glue-version (string)\n\nThis value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see Glue Versions in the developer guide.\n\n--max-capacity (double)\n\nThe number of Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nMaxCapacity is a mutually exclusive option with NumberOfWorkers and WorkerType .\n\nIf either NumberOfWorkers or WorkerType is set, then MaxCapacity cannot be set.\n\nIf MaxCapacity is set then neither NumberOfWorkers or WorkerType can be set.\n\nIf WorkerType is set, then NumberOfWorkers is required (and vice versa).\n\nMaxCapacity and NumberOfWorkers must both be at least 1.\n\nWhen the WorkerType field is set to a value other than Standard , the MaxCapacity field is set automatically and becomes read-only.\n\nWhen the WorkerType field is set to a value other than Standard , the MaxCapacity field is set automatically and becomes read-only.\n\n--worker-type (string)\n\nThe type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nMaxCapacity is a mutually exclusive option with NumberOfWorkers and WorkerType .\n\nIf either NumberOfWorkers or WorkerType is set, then MaxCapacity cannot be set.\n\nIf MaxCapacity is set then neither NumberOfWorkers or WorkerType can be set.\n\nIf WorkerType is set, then NumberOfWorkers is required (and vice versa).\n\nMaxCapacity and NumberOfWorkers must both be at least 1.\n\nPossible values:\n\nStandard\n\nG.1X\n\nG.2X\n\n--number-of-workers (integer)\n\nThe number of workers of a defined workerType that are allocated when this task runs.\n\nIf WorkerType is set, then NumberOfWorkers is required (and vice versa).\n\n--timeout (integer)\n\nThe timeout of the task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).\n\n--max-retries (integer)\n\nThe maximum number of times to retry a task for this transform after a task run fails.\n\n--tags (map)\n\nThe tags to use with this machine learning transform. You may use tags to limit access to the machine learning transform. For more information about tags in Glue, see Amazon Web Services Tags in Glue in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--transform-encryption (structure)\n\nThe encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.\n\nMlUserDataEncryption -> (structure)\n\nAn MLUserDataEncryption object containing the encryption mode and customer-provided KMS key ID.\n\nMlUserDataEncryptionMode -> (string)\n\nThe encryption mode applied to user data. Valid values are:\n\nDISABLED: encryption is disabled\n\nSSEKMS: use of server-side encryption with Key Management Service (SSE-KMS) for user data stored in Amazon S3.\n\nKmsKeyId -> (string)\n\nThe ID for the customer-provided KMS key.\n\nTaskRunSecurityConfigurationName -> (string)\n\nThe name of the security configuration.\n\nShorthand Syntax:\n\nMlUserDataEncryption={MlUserDataEncryptionMode=string,KmsKeyId=string},TaskRunSecurityConfigurationName=string\n\n\nJSON Syntax:\n\n{\n  \"MlUserDataEncryption\": {\n    \"MlUserDataEncryptionMode\": \"DISABLED\"|\"SSE-KMS\",\n    \"KmsKeyId\": \"string\"\n  },\n  \"TaskRunSecurityConfigurationName\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTransformId -> (string)\n\nA unique identifier that is generated for the transform."
    },
    {
      "command_name": "create-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-partition.html",
      "command_description": "Description\n\nCreates a new partition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partition-input <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partition-input <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe Amazon Web Services account ID of the catalog in which the partition is to be created.\n\n--database-name (string)\n\nThe name of the metadata database in which the partition is to be created.\n\n--table-name (string)\n\nThe name of the metadata table in which the partition is to be created.\n\n--partition-input (structure)\n\nA PartitionInput structure defining the partition to be created.\n\nValues -> (list)\n\nThe values of the partition. Although this parameter is not required by the SDK, you must specify this parameter for a valid input.\n\nThe values for the keys for the new partition must be passed as an array of String objects that must be ordered in the same order as the partition keys appearing in the Amazon S3 prefix. Otherwise Glue will add the values to the wrong keys.\n\n(string)\n\nLastAccessTime -> (timestamp)\n\nThe last time at which the partition was accessed.\n\nStorageDescriptor -> (structure)\n\nProvides information about the physical location where the partition is stored.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nParameters -> (map)\n\nThese key-value pairs define partition parameters.\n\nkey -> (string)\n\nvalue -> (string)\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time at which column statistics were computed for this partition.\n\nJSON Syntax:\n\n{\n  \"Values\": [\"string\", ...],\n  \"LastAccessTime\": timestamp,\n  \"StorageDescriptor\": {\n    \"Columns\": [\n      {\n        \"Name\": \"string\",\n        \"Type\": \"string\",\n        \"Comment\": \"string\",\n        \"Parameters\": {\"string\": \"string\"\n          ...}\n      }\n      ...\n    ],\n    \"Location\": \"string\",\n    \"InputFormat\": \"string\",\n    \"OutputFormat\": \"string\",\n    \"Compressed\": true|false,\n    \"NumberOfBuckets\": integer,\n    \"SerdeInfo\": {\n      \"Name\": \"string\",\n      \"SerializationLibrary\": \"string\",\n      \"Parameters\": {\"string\": \"string\"\n        ...}\n    },\n    \"BucketColumns\": [\"string\", ...],\n    \"SortColumns\": [\n      {\n        \"Column\": \"string\",\n        \"SortOrder\": integer\n      }\n      ...\n    ],\n    \"Parameters\": {\"string\": \"string\"\n      ...},\n    \"SkewedInfo\": {\n      \"SkewedColumnNames\": [\"string\", ...],\n      \"SkewedColumnValues\": [\"string\", ...],\n      \"SkewedColumnValueLocationMaps\": {\"string\": \"string\"\n        ...}\n    },\n    \"StoredAsSubDirectories\": true|false,\n    \"SchemaReference\": {\n      \"SchemaId\": {\n        \"SchemaArn\": \"string\",\n        \"SchemaName\": \"string\",\n        \"RegistryName\": \"string\"\n      },\n      \"SchemaVersionId\": \"string\",\n      \"SchemaVersionNumber\": long\n    }\n  },\n  \"Parameters\": {\"string\": \"string\"\n    ...},\n  \"LastAnalyzedTime\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-partition-index",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-partition-index.html",
      "command_description": "Description\n\nCreates a specified partition index in an existing table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-partition-index\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partition-index <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partition-index <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe catalog ID where the table resides.\n\n--database-name (string)\n\nSpecifies the name of a database in which you want to create a partition index.\n\n--table-name (string)\n\nSpecifies the name of a table in which you want to create a partition index.\n\n--partition-index (structure)\n\nSpecifies a PartitionIndex structure to create a partition index in an existing table.\n\nKeys -> (list)\n\nThe keys for the partition index.\n\n(string)\n\nIndexName -> (string)\n\nThe name of the partition index.\n\nShorthand Syntax:\n\nKeys=string,string,IndexName=string\n\n\nJSON Syntax:\n\n{\n  \"Keys\": [\"string\", ...],\n  \"IndexName\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-registry",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-registry.html",
      "command_description": "Description\n\nCreates a new registry which may be used to hold a collection of schemas.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-registry\n--registry-name <value>\n[--description <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--registry-name <value>",
        "[--description <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-name (string)\n\nName of the registry to be created of max length of 255, and may only contain letters, numbers, hyphen, underscore, dollar sign, or hash mark. No whitespace.\n\n--description (string)\n\nA description of the registry. If description is not provided, there will not be any default value for this.\n\n--tags (map)\n\nAmazon Web Services tags that contain a key value pair and may be searched by console, command line, or API.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRegistryArn -> (string)\n\nThe Amazon Resource Name (ARN) of the newly created registry.\n\nRegistryName -> (string)\n\nThe name of the registry.\n\nDescription -> (string)\n\nA description of the registry.\n\nTags -> (map)\n\nThe tags for the registry.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "create-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-schema.html",
      "command_description": "Description\n\nCreates a new schema set and registers the schema definition. Returns an error if the schema set already exists without actually registering the version.\n\nWhen the schema set is created, a version checkpoint will be set to the first version. Compatibility mode “DISABLED” restricts any additional schema versions from being added after the first schema version. For all other compatibility modes, validation of compatibility settings will be applied only from the second version onwards when the RegisterSchemaVersion API is used.\n\nWhen this API is called without a RegistryId , this will create an entry for a “default-registry” in the registry database tables, if it is not already present.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-schema\n[--registry-id <value>]\n--schema-name <value>\n--data-format <value>\n[--compatibility <value>]\n[--description <value>]\n[--tags <value>]\n[--schema-definition <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "--schema-name <value>",
        "--data-format <value>",
        "[--compatibility <value>]",
        "[--description <value>]",
        "[--tags <value>]",
        "[--schema-definition <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (structure)\n\nThis is a wrapper shape to contain the registry identity fields. If this is not provided, the default registry will be used. The ARN format for the same will be: arn:aws:glue:us-east-2:<customer id>:registry/default-registry:random-5-letter-id .\n\nRegistryName -> (string)\n\nName of the registry. Used only for lookup. One of RegistryArn or RegistryName has to be provided.\n\nRegistryArn -> (string)\n\nArn of the registry to be updated. One of RegistryArn or RegistryName has to be provided.\n\nShorthand Syntax:\n\nRegistryName=string,RegistryArn=string\n\n\nJSON Syntax:\n\n{\n  \"RegistryName\": \"string\",\n  \"RegistryArn\": \"string\"\n}\n\n\n--schema-name (string)\n\nName of the schema to be created of max length of 255, and may only contain letters, numbers, hyphen, underscore, dollar sign, or hash mark. No whitespace.\n\n--data-format (string)\n\nThe data format of the schema definition. Currently AVRO and JSON are supported.\n\nPossible values:\n\nAVRO\n\nJSON\n\n--compatibility (string)\n\nThe compatibility mode of the schema. The possible values are:\n\nNONE : No compatibility mode applies. You can use this choice in development scenarios or if you do not know the compatibility mode that you want to apply to schemas. Any new version added will be accepted without undergoing a compatibility check.\n\nDISABLED : This compatibility choice prevents versioning for a particular schema. You can use this choice to prevent future versioning of a schema.\n\nBACKWARD : This compatibility choice is recommended as it allows data receivers to read both the current and one previous schema version. This means that for instance, a new schema version cannot drop data fields or change the type of these fields, so they can’t be read by readers using the previous version.\n\nBACKWARD_ALL : This compatibility choice allows data receivers to read both the current and all previous schema versions. You can use this choice when you need to delete fields or add optional fields, and check compatibility against all previous schema versions.\n\nFORWARD : This compatibility choice allows data receivers to read both the current and one next schema version, but not necessarily later versions. You can use this choice when you need to add fields or delete optional fields, but only check compatibility against the last schema version.\n\nFORWARD_ALL : This compatibility choice allows data receivers to read written by producers of any new registered schema. You can use this choice when you need to add fields or delete optional fields, and check compatibility against all previous schema versions.\n\nFULL : This compatibility choice allows data receivers to read data written by producers using the previous or next version of the schema, but not necessarily earlier or later versions. You can use this choice when you need to add or remove optional fields, but only check compatibility against the last schema version.\n\nFULL_ALL : This compatibility choice allows data receivers to read data written by producers using all previous schema versions. You can use this choice when you need to add or remove optional fields, and check compatibility against all previous schema versions.\n\nPossible values:\n\nNONE\n\nDISABLED\n\nBACKWARD\n\nBACKWARD_ALL\n\nFORWARD\n\nFORWARD_ALL\n\nFULL\n\nFULL_ALL\n\n--description (string)\n\nAn optional description of the schema. If description is not provided, there will not be any automatic default value for this.\n\n--tags (map)\n\nAmazon Web Services tags that contain a key value pair and may be searched by console, command line, or API. If specified, follows the Amazon Web Services tags-on-create pattern.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--schema-definition (string)\n\nThe schema definition using the DataFormat setting for SchemaName .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRegistryName -> (string)\n\nThe name of the registry.\n\nRegistryArn -> (string)\n\nThe Amazon Resource Name (ARN) of the registry.\n\nSchemaName -> (string)\n\nThe name of the schema.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema.\n\nDescription -> (string)\n\nA description of the schema if specified when created.\n\nDataFormat -> (string)\n\nThe data format of the schema definition. Currently AVRO and JSON are supported.\n\nCompatibility -> (string)\n\nThe schema compatibility mode.\n\nSchemaCheckpoint -> (long)\n\nThe version number of the checkpoint (the last time the compatibility mode was changed).\n\nLatestSchemaVersion -> (long)\n\nThe latest version of the schema associated with the returned schema definition.\n\nNextSchemaVersion -> (long)\n\nThe next version of the schema associated with the returned schema definition.\n\nSchemaStatus -> (string)\n\nThe status of the schema.\n\nTags -> (map)\n\nThe tags for the schema.\n\nkey -> (string)\n\nvalue -> (string)\n\nSchemaVersionId -> (string)\n\nThe unique identifier of the first schema version.\n\nSchemaVersionStatus -> (string)\n\nThe status of the first schema version created."
    },
    {
      "command_name": "create-script",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-script.html",
      "command_description": "Description\n\nTransforms a directed acyclic graph (DAG) into code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-script\n[--dag-nodes <value>]\n[--dag-edges <value>]\n[--language <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--dag-nodes <value>]",
        "[--dag-edges <value>]",
        "[--language <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dag-nodes (list)\n\nA list of the nodes in the DAG.\n\n(structure)\n\nRepresents a node in a directed acyclic graph (DAG)\n\nId -> (string)\n\nA node identifier that is unique within the node’s graph.\n\nNodeType -> (string)\n\nThe type of node that this is.\n\nArgs -> (list)\n\nProperties of the node, in the form of name-value pairs.\n\n(structure)\n\nAn argument or property of a node.\n\nName -> (string)\n\nThe name of the argument or property.\n\nValue -> (string)\n\nThe value of the argument or property.\n\nParam -> (boolean)\n\nTrue if the value is used as a parameter.\n\nLineNumber -> (integer)\n\nThe line number of the node.\n\nShorthand Syntax:\n\nId=string,NodeType=string,Args=[{Name=string,Value=string,Param=boolean},{Name=string,Value=string,Param=boolean}],LineNumber=integer ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Id\": \"string\",\n    \"NodeType\": \"string\",\n    \"Args\": [\n      {\n        \"Name\": \"string\",\n        \"Value\": \"string\",\n        \"Param\": true|false\n      }\n      ...\n    ],\n    \"LineNumber\": integer\n  }\n  ...\n]\n\n\n--dag-edges (list)\n\nA list of the edges in the DAG.\n\n(structure)\n\nRepresents a directional edge in a directed acyclic graph (DAG).\n\nSource -> (string)\n\nThe ID of the node at which the edge starts.\n\nTarget -> (string)\n\nThe ID of the node at which the edge ends.\n\nTargetParameter -> (string)\n\nThe target of the edge.\n\nShorthand Syntax:\n\nSource=string,Target=string,TargetParameter=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Source\": \"string\",\n    \"Target\": \"string\",\n    \"TargetParameter\": \"string\"\n  }\n  ...\n]\n\n\n--language (string)\n\nThe programming language of the resulting code from the DAG.\n\nPossible values:\n\nPYTHON\n\nSCALA\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPythonScript -> (string)\n\nThe Python script generated from the DAG.\n\nScalaCode -> (string)\n\nThe Scala code generated from the DAG."
    },
    {
      "command_name": "create-security-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-security-configuration.html",
      "command_description": "Description\n\nCreates a new security configuration. A security configuration is a set of security properties that can be used by Glue. You can use a security configuration to encrypt data at rest. For information about using security configurations in Glue, see Encrypting Data Written by Crawlers, Jobs, and Development Endpoints .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-security-configuration\n--name <value>\n--encryption-configuration <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--encryption-configuration <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name for the new security configuration.\n\n--encryption-configuration (structure)\n\nThe encryption configuration for the new security configuration.\n\nS3Encryption -> (list)\n\nThe encryption configuration for Amazon Simple Storage Service (Amazon S3) data.\n\n(structure)\n\nSpecifies how Amazon Simple Storage Service (Amazon S3) data should be encrypted.\n\nS3EncryptionMode -> (string)\n\nThe encryption mode to use for Amazon S3 data.\n\nKmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.\n\nCloudWatchEncryption -> (structure)\n\nThe encryption configuration for Amazon CloudWatch.\n\nCloudWatchEncryptionMode -> (string)\n\nThe encryption mode to use for CloudWatch data.\n\nKmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.\n\nJobBookmarksEncryption -> (structure)\n\nThe encryption configuration for job bookmarks.\n\nJobBookmarksEncryptionMode -> (string)\n\nThe encryption mode to use for job bookmarks data.\n\nKmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.\n\nShorthand Syntax:\n\nS3Encryption=[{S3EncryptionMode=string,KmsKeyArn=string},{S3EncryptionMode=string,KmsKeyArn=string}],CloudWatchEncryption={CloudWatchEncryptionMode=string,KmsKeyArn=string},JobBookmarksEncryption={JobBookmarksEncryptionMode=string,KmsKeyArn=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Encryption\": [\n    {\n      \"S3EncryptionMode\": \"DISABLED\"|\"SSE-KMS\"|\"SSE-S3\",\n      \"KmsKeyArn\": \"string\"\n    }\n    ...\n  ],\n  \"CloudWatchEncryption\": {\n    \"CloudWatchEncryptionMode\": \"DISABLED\"|\"SSE-KMS\",\n    \"KmsKeyArn\": \"string\"\n  },\n  \"JobBookmarksEncryption\": {\n    \"JobBookmarksEncryptionMode\": \"DISABLED\"|\"CSE-KMS\",\n    \"KmsKeyArn\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name assigned to the new security configuration.\n\nCreatedTimestamp -> (timestamp)\n\nThe time at which the new security configuration was created."
    },
    {
      "command_name": "create-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-table.html",
      "command_description": "Description\n\nCreates a new table definition in the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-table\n[--catalog-id <value>]\n--database-name <value>\n--table-input <value>\n[--partition-indexes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-input <value>",
        "[--partition-indexes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which to create the Table . If none is supplied, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe catalog database in which to create the new table. For Hive compatibility, this name is entirely lowercase.\n\n--table-input (structure)\n\nThe TableInput object that defines the metadata table to create in the catalog.\n\nName -> (string)\n\nThe table name. For Hive compatibility, this is folded to lowercase when it is stored.\n\nDescription -> (string)\n\nA description of the table.\n\nOwner -> (string)\n\nThe table owner.\n\nLastAccessTime -> (timestamp)\n\nThe last time that the table was accessed.\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time that column statistics were computed for this table.\n\nRetention -> (integer)\n\nThe retention time for this table.\n\nStorageDescriptor -> (structure)\n\nA storage descriptor containing information about the physical storage of this table.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nPartitionKeys -> (list)\n\nA list of columns by which the table is partitioned. Only primitive types are supported as partition keys.\n\nWhen you create a table used by Amazon Athena, and you do not specify any partitionKeys , you must at least set the value of partitionKeys to an empty list. For example:\n\n\"PartitionKeys\": []\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nViewOriginalText -> (string)\n\nIf the table is a view, the original text of the view; otherwise null .\n\nViewExpandedText -> (string)\n\nIf the table is a view, the expanded text of the view; otherwise null .\n\nTableType -> (string)\n\nThe type of this table (EXTERNAL_TABLE , VIRTUAL_VIEW , etc.).\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the table.\n\nkey -> (string)\n\nvalue -> (string)\n\nTargetTable -> (structure)\n\nA TableIdentifier structure that describes a target table for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database that contains the target table.\n\nName -> (string)\n\nThe name of the target table.\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Description\": \"string\",\n  \"Owner\": \"string\",\n  \"LastAccessTime\": timestamp,\n  \"LastAnalyzedTime\": timestamp,\n  \"Retention\": integer,\n  \"StorageDescriptor\": {\n    \"Columns\": [\n      {\n        \"Name\": \"string\",\n        \"Type\": \"string\",\n        \"Comment\": \"string\",\n        \"Parameters\": {\"string\": \"string\"\n          ...}\n      }\n      ...\n    ],\n    \"Location\": \"string\",\n    \"InputFormat\": \"string\",\n    \"OutputFormat\": \"string\",\n    \"Compressed\": true|false,\n    \"NumberOfBuckets\": integer,\n    \"SerdeInfo\": {\n      \"Name\": \"string\",\n      \"SerializationLibrary\": \"string\",\n      \"Parameters\": {\"string\": \"string\"\n        ...}\n    },\n    \"BucketColumns\": [\"string\", ...],\n    \"SortColumns\": [\n      {\n        \"Column\": \"string\",\n        \"SortOrder\": integer\n      }\n      ...\n    ],\n    \"Parameters\": {\"string\": \"string\"\n      ...},\n    \"SkewedInfo\": {\n      \"SkewedColumnNames\": [\"string\", ...],\n      \"SkewedColumnValues\": [\"string\", ...],\n      \"SkewedColumnValueLocationMaps\": {\"string\": \"string\"\n        ...}\n    },\n    \"StoredAsSubDirectories\": true|false,\n    \"SchemaReference\": {\n      \"SchemaId\": {\n        \"SchemaArn\": \"string\",\n        \"SchemaName\": \"string\",\n        \"RegistryName\": \"string\"\n      },\n      \"SchemaVersionId\": \"string\",\n      \"SchemaVersionNumber\": long\n    }\n  },\n  \"PartitionKeys\": [\n    {\n      \"Name\": \"string\",\n      \"Type\": \"string\",\n      \"Comment\": \"string\",\n      \"Parameters\": {\"string\": \"string\"\n        ...}\n    }\n    ...\n  ],\n  \"ViewOriginalText\": \"string\",\n  \"ViewExpandedText\": \"string\",\n  \"TableType\": \"string\",\n  \"Parameters\": {\"string\": \"string\"\n    ...},\n  \"TargetTable\": {\n    \"CatalogId\": \"string\",\n    \"DatabaseName\": \"string\",\n    \"Name\": \"string\"\n  }\n}\n\n\n--partition-indexes (list)\n\nA list of partition indexes, PartitionIndex structures, to create in the table.\n\n(structure)\n\nA structure for a partition index.\n\nKeys -> (list)\n\nThe keys for the partition index.\n\n(string)\n\nIndexName -> (string)\n\nThe name of the partition index.\n\nShorthand Syntax:\n\nKeys=string,string,IndexName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Keys\": [\"string\", ...],\n    \"IndexName\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nExample 1: To create a table for a Kinesis data stream\n\nThe following create-table example creates a table in the AWS Glue Data Catalog that describes a Kinesis data stream.\n\naws glue create-table \\\n    --database-name tempdb \\\n    --table-input  '{\"Name\":\"test-kinesis-input\", \"StorageDescriptor\":{ \\\n        \"Columns\":[ \\\n            {\"Name\":\"sensorid\", \"Type\":\"int\"}, \\\n            {\"Name\":\"currenttemperature\", \"Type\":\"int\"}, \\\n            {\"Name\":\"status\", \"Type\":\"string\"}\n        ], \\\n        \"Location\":\"my-testing-stream\", \\\n        \"Parameters\":{ \\\n            \"typeOfData\":\"kinesis\",\"streamName\":\"my-testing-stream\", \\\n            \"kinesisUrl\":\"https://kinesis.us-east-1.amazonaws.com\" \\\n        }, \\\n        \"SerdeInfo\":{ \\\n            \"SerializationLibrary\":\"org.openx.data.jsonserde.JsonSerDe\"} \\\n        }, \\\n        \"Parameters\":{ \\\n            \"classification\":\"json\"} \\\n        }' \\\n    --profile my-profile \\\n    --endpoint https://glue.us-east-1.amazonaws.com\n\n\nThis command produces no output.\n\nFor more information, see Defining Tables in the AWS Glue Data Catalog in the AWS Glue Developer Guide.\n\nExample 2: To create a table for a Kafka data store\n\nThe following create-table example creates a table in the AWS Glue Data Catalog that describes a Kafka data store.\n\naws glue create-table \\\n    --database-name tempdb \\\n    --table-input  '{\"Name\":\"test-kafka-input\", \"StorageDescriptor\":{ \\\n        \"Columns\":[ \\\n            {\"Name\":\"sensorid\", \"Type\":\"int\"}, \\\n            {\"Name\":\"currenttemperature\", \"Type\":\"int\"}, \\\n            {\"Name\":\"status\", \"Type\":\"string\"}\n        ], \\\n        \"Location\":\"glue-topic\", \\\n        \"Parameters\":{ \\\n            \"typeOfData\":\"kafka\",\"topicName\":\"glue-topic\", \\\n            \"connectionName\":\"my-kafka-connection\"\n        }, \\\n        \"SerdeInfo\":{ \\\n            \"SerializationLibrary\":\"org.apache.hadoop.hive.serde2.OpenCSVSerde\"} \\\n        }, \\\n        \"Parameters\":{ \\\n            \"separatorChar\":\",\"} \\\n        }' \\\n    --profile my-profile \\\n    --endpoint https://glue.us-east-1.amazonaws.com\n\n\nThis command produces no output.\n\nFor more information, see Defining Tables in the AWS Glue Data Catalog in the AWS Glue Developer Guide.\n\nExample 3: To create a table for a AWS S3 data store\n\nThe following create-table example creates a table in the AWS Glue Data Catalog that describes a AWS Simple Storage Service (AWS S3) data store.\n\naws glue create-table \\\n    --database-name tempdb \\\n    --table-input  '{\"Name\":\"s3-output\", \"StorageDescriptor\":{ \\\n        \"Columns\":[ \\\n            {\"Name\":\"s1\", \"Type\":\"string\"}, \\\n            {\"Name\":\"s2\", \"Type\":\"int\"}, \\\n            {\"Name\":\"s3\", \"Type\":\"string\"}\n        ], \\\n        \"Location\":\"s3://bucket-path/\"}, \\\n        \"SerdeInfo\":{ \\\n            \"SerializationLibrary\":\"org.openx.data.jsonserde.JsonSerDe\"}, \\\n        \"Parameters\":{ \\\n            \"classification\":\"json\"} \\\n        }' \\\n    --profile my-profile \\\n    --endpoint https://glue.us-east-1.amazonaws.com\n\n\nThis command produces no output.\n\nFor more information, see Defining Tables in the AWS Glue Data Catalog in the AWS Glue Developer Guide."
    },
    {
      "command_name": "create-trigger",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-trigger.html",
      "command_description": "Description\n\nCreates a new trigger.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-trigger\n--name <value>\n[--workflow-name <value>]\n--type <value>\n[--schedule <value>]\n[--predicate <value>]\n--actions <value>\n[--description <value>]\n[--start-on-creation | --no-start-on-creation]\n[--tags <value>]\n[--event-batching-condition <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--workflow-name <value>]",
        "--type <value>",
        "[--schedule <value>]",
        "[--predicate <value>]",
        "--actions <value>",
        "[--description <value>]",
        "[--start-on-creation | --no-start-on-creation]",
        "[--tags <value>]",
        "[--event-batching-condition <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the trigger.\n\n--workflow-name (string)\n\nThe name of the workflow associated with the trigger.\n\n--type (string)\n\nThe type of the new trigger.\n\nPossible values:\n\nSCHEDULED\n\nCONDITIONAL\n\nON_DEMAND\n\nEVENT\n\n--schedule (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nThis field is required when the trigger type is SCHEDULED.\n\n--predicate (structure)\n\nA predicate to specify when the new trigger should fire.\n\nThis field is required when the trigger type is CONDITIONAL .\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nShorthand Syntax:\n\nLogical=string,Conditions=[{LogicalOperator=string,JobName=string,State=string,CrawlerName=string,CrawlState=string},{LogicalOperator=string,JobName=string,State=string,CrawlerName=string,CrawlState=string}]\n\n\nJSON Syntax:\n\n{\n  \"Logical\": \"AND\"|\"ANY\",\n  \"Conditions\": [\n    {\n      \"LogicalOperator\": \"EQUALS\",\n      \"JobName\": \"string\",\n      \"State\": \"STARTING\"|\"RUNNING\"|\"STOPPING\"|\"STOPPED\"|\"SUCCEEDED\"|\"FAILED\"|\"TIMEOUT\",\n      \"CrawlerName\": \"string\",\n      \"CrawlState\": \"RUNNING\"|\"CANCELLING\"|\"CANCELLED\"|\"SUCCEEDED\"|\"FAILED\"\n    }\n    ...\n  ]\n}\n\n\n--actions (list)\n\nThe actions initiated by this trigger when it fires.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nShorthand Syntax:\n\nJobName=string,Arguments={KeyName1=string,KeyName2=string},Timeout=integer,SecurityConfiguration=string,NotificationProperty={NotifyDelayAfter=integer},CrawlerName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"JobName\": \"string\",\n    \"Arguments\": {\"string\": \"string\"\n      ...},\n    \"Timeout\": integer,\n    \"SecurityConfiguration\": \"string\",\n    \"NotificationProperty\": {\n      \"NotifyDelayAfter\": integer\n    },\n    \"CrawlerName\": \"string\"\n  }\n  ...\n]\n\n\n--description (string)\n\nA description of the new trigger.\n\n--start-on-creation | --no-start-on-creation (boolean)\n\nSet to true to start SCHEDULED and CONDITIONAL triggers when created. True is not supported for ON_DEMAND triggers.\n\n--tags (map)\n\nThe tags to use with this trigger. You may use tags to limit access to the trigger. For more information about tags in Glue, see Amazon Web Services Tags in Glue in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--event-batching-condition (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\nShorthand Syntax:\n\nBatchSize=integer,BatchWindow=integer\n\n\nJSON Syntax:\n\n{\n  \"BatchSize\": integer,\n  \"BatchWindow\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the trigger."
    },
    {
      "command_name": "create-user-defined-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-user-defined-function.html",
      "command_description": "Description\n\nCreates a new function definition in the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-user-defined-function\n[--catalog-id <value>]\n--database-name <value>\n--function-input <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--function-input <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which to create the function. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database in which to create the function.\n\n--function-input (structure)\n\nA FunctionInput object that defines the function to create in the Data Catalog.\n\nFunctionName -> (string)\n\nThe name of the function.\n\nClassName -> (string)\n\nThe Java class that contains the function code.\n\nOwnerName -> (string)\n\nThe owner of the function.\n\nOwnerType -> (string)\n\nThe owner type.\n\nResourceUris -> (list)\n\nThe resource URIs for the function.\n\n(structure)\n\nThe URIs for function resources.\n\nResourceType -> (string)\n\nThe type of the resource.\n\nUri -> (string)\n\nThe URI for accessing the resource.\n\nShorthand Syntax:\n\nFunctionName=string,ClassName=string,OwnerName=string,OwnerType=string,ResourceUris=[{ResourceType=string,Uri=string},{ResourceType=string,Uri=string}]\n\n\nJSON Syntax:\n\n{\n  \"FunctionName\": \"string\",\n  \"ClassName\": \"string\",\n  \"OwnerName\": \"string\",\n  \"OwnerType\": \"USER\"|\"ROLE\"|\"GROUP\",\n  \"ResourceUris\": [\n    {\n      \"ResourceType\": \"JAR\"|\"FILE\"|\"ARCHIVE\",\n      \"Uri\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-workflow",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/create-workflow.html",
      "command_description": "Description\n\nCreates a new workflow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-workflow\n--name <value>\n[--description <value>]\n[--default-run-properties <value>]\n[--tags <value>]\n[--max-concurrent-runs <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--default-run-properties <value>]",
        "[--tags <value>]",
        "[--max-concurrent-runs <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name to be assigned to the workflow. It should be unique within your account.\n\n--description (string)\n\nA description of the workflow.\n\n--default-run-properties (map)\n\nA collection of properties to be used as part of each execution of the workflow.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--tags (map)\n\nThe tags to be used with this workflow.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--max-concurrent-runs (integer)\n\nYou can use this parameter to prevent unwanted multiple updates to data, to control costs, or in some cases, to prevent exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the workflow which was provided as part of the request."
    },
    {
      "command_name": "delete-blueprint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-blueprint.html",
      "command_description": "Description\n\nDeletes an existing blueprint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-blueprint\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the blueprint to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nReturns the name of the blueprint that was deleted."
    },
    {
      "command_name": "delete-classifier",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-classifier.html",
      "command_description": "Description\n\nRemoves a classifier from the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-classifier\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the classifier to remove.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-column-statistics-for-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-column-statistics-for-partition.html",
      "command_description": "Description\n\nDelete the partition column statistics of a column.\n\nThe Identity and Access Management (IAM) permission required for this operation is DeletePartition .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-column-statistics-for-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partition-values <value>\n--column-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partition-values <value>",
        "--column-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the partitions reside.\n\n--table-name (string)\n\nThe name of the partitions’ table.\n\n--partition-values (list)\n\nA list of partition values identifying the partition.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--column-name (string)\n\nName of the column.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-column-statistics-for-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-column-statistics-for-table.html",
      "command_description": "Description\n\nRetrieves table statistics of columns.\n\nThe Identity and Access Management (IAM) permission required for this operation is DeleteTable .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-column-statistics-for-table\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--column-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--column-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the partitions reside.\n\n--table-name (string)\n\nThe name of the partitions’ table.\n\n--column-name (string)\n\nThe name of the column.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-connection.html",
      "command_description": "Description\n\nDeletes a connection from the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-connection\n[--catalog-id <value>]\n--connection-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--connection-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which the connection resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--connection-name (string)\n\nThe name of the connection to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-crawler",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-crawler.html",
      "command_description": "Description\n\nRemoves a specified crawler from the Glue Data Catalog, unless the crawler state is RUNNING .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-crawler\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the crawler to remove.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-database",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-database.html",
      "command_description": "Description\n\nRemoves a specified database from a Data Catalog.\n\nNote\n\nAfter completing this operation, you no longer have access to the tables (and all table versions and partitions that might belong to the tables) and the user-defined functions in the deleted database. Glue deletes these “orphaned” resources asynchronously in a timely manner, at the discretion of the service.\n\nTo ensure the immediate deletion of all related resources, before calling DeleteDatabase , use DeleteTableVersion or BatchDeleteTableVersion , DeletePartition or BatchDeletePartition , DeleteUserDefinedFunction , and DeleteTable or BatchDeleteTable , to delete any resources that belong to the database.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-database\n[--catalog-id <value>]\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which the database resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--name (string)\n\nThe name of the database to delete. For Hive compatibility, this must be all lowercase.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-dev-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-dev-endpoint.html",
      "command_description": "Description\n\nDeletes a specified development endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-dev-endpoint\n--endpoint-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--endpoint-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--endpoint-name (string)\n\nThe name of the DevEndpoint .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-job.html",
      "command_description": "Description\n\nDeletes a specified job definition. If the job definition is not found, no exception is thrown.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-job\n--job-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe name of the job definition to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobName -> (string)\n\nThe name of the job definition that was deleted.",
      "command_examples": "Examples\n\nTo delete a job\n\nThe following delete-job example deletes a job that is no longer needed.\n\naws glue delete-job \\\n    --job-name my-testing-job\n\n\nOutput:\n\n{\n    \"JobName\": \"my-testing-job\"\n}\n\n\nFor more information, see Working with Jobs on the AWS Glue Console in the AWS Glue Developer Guide."
    },
    {
      "command_name": "delete-ml-transform",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-ml-transform.html",
      "command_description": "Description\n\nDeletes an Glue machine learning transform. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue. If you no longer need a transform, you can delete it by calling DeleteMLTransforms . However, any Glue jobs that still reference the deleted transform will no longer succeed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-ml-transform\n--transform-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--transform-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--transform-id (string)\n\nThe unique identifier of the transform to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTransformId -> (string)\n\nThe unique identifier of the transform that was deleted."
    },
    {
      "command_name": "delete-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-partition.html",
      "command_description": "Description\n\nDeletes a specified partition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partition-values <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partition-values <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partition to be deleted resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database in which the table in question resides.\n\n--table-name (string)\n\nThe name of the table that contains the partition to be deleted.\n\n--partition-values (list)\n\nThe values that define the partition.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-partition-index",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-partition-index.html",
      "command_description": "Description\n\nDeletes a specified partition index from an existing table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-partition-index\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--index-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--index-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe catalog ID where the table resides.\n\n--database-name (string)\n\nSpecifies the name of a database from which you want to delete a partition index.\n\n--table-name (string)\n\nSpecifies the name of a table from which you want to delete a partition index.\n\n--index-name (string)\n\nThe name of the partition index to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-registry",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-registry.html",
      "command_description": "Description\n\nDelete the entire registry including schema and all of its versions. To get the status of the delete operation, you can call the GetRegistry API after the asynchronous call. Deleting a registry will deactivate all online operations for the registry such as the UpdateRegistry , CreateSchema , UpdateSchema , and RegisterSchemaVersion APIs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-registry\n--registry-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--registry-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (structure)\n\nThis is a wrapper structure that may contain the registry name and Amazon Resource Name (ARN).\n\nRegistryName -> (string)\n\nName of the registry. Used only for lookup. One of RegistryArn or RegistryName has to be provided.\n\nRegistryArn -> (string)\n\nArn of the registry to be updated. One of RegistryArn or RegistryName has to be provided.\n\nShorthand Syntax:\n\nRegistryName=string,RegistryArn=string\n\n\nJSON Syntax:\n\n{\n  \"RegistryName\": \"string\",\n  \"RegistryArn\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRegistryName -> (string)\n\nThe name of the registry being deleted.\n\nRegistryArn -> (string)\n\nThe Amazon Resource Name (ARN) of the registry being deleted.\n\nStatus -> (string)\n\nThe status of the registry. A successful operation will return the Deleting status."
    },
    {
      "command_name": "delete-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-resource-policy.html",
      "command_description": "Description\n\nDeletes a specified policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resource-policy\n[--policy-hash-condition <value>]\n[--resource-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--policy-hash-condition <value>]",
        "[--resource-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-hash-condition (string)\n\nThe hash value returned when this policy was set.\n\n--resource-arn (string)\n\nThe ARN of the Glue resource for the resource policy to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-schema.html",
      "command_description": "Description\n\nDeletes the entire schema set, including the schema set and all of its versions. To get the status of the delete operation, you can call GetSchema API after the asynchronous call. Deleting a registry will deactivate all online operations for the schema, such as the GetSchemaByDefinition , and RegisterSchemaVersion APIs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-schema\n--schema-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nThis is a wrapper structure that may contain the schema name and Amazon Resource Name (ARN).\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema being deleted.\n\nSchemaName -> (string)\n\nThe name of the schema being deleted.\n\nStatus -> (string)\n\nThe status of the schema."
    },
    {
      "command_name": "delete-schema-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-schema-versions.html",
      "command_description": "Description\n\nRemove versions from the specified schema. A version number or range may be supplied. If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned. Calling the GetSchemaVersions API after this call will list the status of the deleted versions.\n\nWhen the range of version numbers contain check pointed version, the API will return a 409 conflict and will not proceed with the deletion. You have to remove the checkpoint first using the DeleteSchemaCheckpoint API before using this API.\n\nYou cannot use the DeleteSchemaVersions API to delete the first schema version in the schema set. The first schema version can only be deleted by the DeleteSchema API. This operation will also delete the attached SchemaVersionMetadata under the schema versions. Hard deletes will be enforced on the database.\n\nIf the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-schema-versions\n--schema-id <value>\n--versions <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-id <value>",
        "--versions <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nThis is a wrapper structure that may contain the schema name and Amazon Resource Name (ARN).\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--versions (string)\n\nA version range may be supplied which may be of the format:\n\na single version number, 5\n\na range, 5-8 : deletes versions 5, 6, 7, 8\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaVersionErrors -> (list)\n\nA list of SchemaVersionErrorItem objects, each containing an error and schema version.\n\n(structure)\n\nAn object that contains the error details for an operation on a schema version.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nErrorDetails -> (structure)\n\nThe details of the error for the schema version.\n\nErrorCode -> (string)\n\nThe error code for an error.\n\nErrorMessage -> (string)\n\nThe error message for an error."
    },
    {
      "command_name": "delete-security-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-security-configuration.html",
      "command_description": "Description\n\nDeletes a specified security configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-security-configuration\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the security configuration to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-table.html",
      "command_description": "Description\n\nRemoves a table definition from the Data Catalog.\n\nNote\n\nAfter completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. Glue deletes these “orphaned” resources asynchronously in a timely manner, at the discretion of the service.\n\nTo ensure the immediate deletion of all related resources, before calling DeleteTable , use DeleteTableVersion or BatchDeleteTableVersion , and DeletePartition or BatchDeletePartition , to delete any resources that belong to the table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-table\n[--catalog-id <value>]\n--database-name <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the table resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database in which the table resides. For Hive compatibility, this name is entirely lowercase.\n\n--name (string)\n\nThe name of the table to be deleted. For Hive compatibility, this name is entirely lowercase.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-table-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-table-version.html",
      "command_description": "Description\n\nDeletes a specified version of a table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-table-version\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--version-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--version-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the tables reside. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.\n\n--table-name (string)\n\nThe name of the table. For Hive compatibility, this name is entirely lowercase.\n\n--version-id (string)\n\nThe ID of the table version to be deleted. A VersionID is a string representation of an integer. Each version is incremented by 1.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-trigger",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-trigger.html",
      "command_description": "Description\n\nDeletes a specified trigger. If the trigger is not found, no exception is thrown.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-trigger\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the trigger to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the trigger that was deleted."
    },
    {
      "command_name": "delete-user-defined-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-user-defined-function.html",
      "command_description": "Description\n\nDeletes an existing function definition from the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-user-defined-function\n[--catalog-id <value>]\n--database-name <value>\n--function-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--function-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the function to be deleted is located. If none is supplied, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the function is located.\n\n--function-name (string)\n\nThe name of the function definition to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-workflow",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/delete-workflow.html",
      "command_description": "Description\n\nDeletes a workflow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-workflow\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the workflow to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nName of the workflow specified in input."
    },
    {
      "command_name": "get-blueprint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-blueprint.html",
      "command_description": "Description\n\nRetrieves the details of a blueprint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-blueprint\n--name <value>\n[--include-blueprint | --no-include-blueprint]\n[--include-parameter-spec | --no-include-parameter-spec]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--include-blueprint | --no-include-blueprint]",
        "[--include-parameter-spec | --no-include-parameter-spec]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the blueprint.\n\n--include-blueprint | --no-include-blueprint (boolean)\n\nSpecifies whether or not to include the blueprint in the response.\n\n--include-parameter-spec | --no-include-parameter-spec (boolean)\n\nSpecifies whether or not to include the parameter specification.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBlueprint -> (structure)\n\nReturns a Blueprint object.\n\nName -> (string)\n\nThe name of the blueprint.\n\nDescription -> (string)\n\nThe description of the blueprint.\n\nCreatedOn -> (timestamp)\n\nThe date and time the blueprint was registered.\n\nLastModifiedOn -> (timestamp)\n\nThe date and time the blueprint was last modified.\n\nParameterSpec -> (string)\n\nA JSON string that indicates the list of parameter specifications for the blueprint.\n\nBlueprintLocation -> (string)\n\nSpecifies the path in Amazon S3 where the blueprint is published.\n\nBlueprintServiceLocation -> (string)\n\nSpecifies a path in Amazon S3 where the blueprint is copied when you call CreateBlueprint/UpdateBlueprint to register the blueprint in Glue.\n\nStatus -> (string)\n\nThe status of the blueprint registration.\n\nCreating — The blueprint registration is in progress.\n\nActive — The blueprint has been successfully registered.\n\nUpdating — An update to the blueprint registration is in progress.\n\nFailed — The blueprint registration failed.\n\nErrorMessage -> (string)\n\nAn error message.\n\nLastActiveDefinition -> (structure)\n\nWhen there are multiple versions of a blueprint and the latest version has some errors, this attribute indicates the last successful blueprint definition that is available with the service.\n\nDescription -> (string)\n\nThe description of the blueprint.\n\nLastModifiedOn -> (timestamp)\n\nThe date and time the blueprint was last modified.\n\nParameterSpec -> (string)\n\nA JSON string specifying the parameters for the blueprint.\n\nBlueprintLocation -> (string)\n\nSpecifies a path in Amazon S3 where the blueprint is published by the Glue developer.\n\nBlueprintServiceLocation -> (string)\n\nSpecifies a path in Amazon S3 where the blueprint is copied when you create or update the blueprint."
    },
    {
      "command_name": "get-blueprint-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-blueprint-run.html",
      "command_description": "Description\n\nRetrieves the details of a blueprint run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-blueprint-run\n--blueprint-name <value>\n--run-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--blueprint-name <value>",
        "--run-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--blueprint-name (string)\n\nThe name of the blueprint.\n\n--run-id (string)\n\nThe run ID for the blueprint run you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBlueprintRun -> (structure)\n\nReturns a BlueprintRun object.\n\nBlueprintName -> (string)\n\nThe name of the blueprint.\n\nRunId -> (string)\n\nThe run ID for this blueprint run.\n\nWorkflowName -> (string)\n\nThe name of a workflow that is created as a result of a successful blueprint run. If a blueprint run has an error, there will not be a workflow created.\n\nState -> (string)\n\nThe state of the blueprint run. Possible values are:\n\nRunning — The blueprint run is in progress.\n\nSucceeded — The blueprint run completed successfully.\n\nFailed — The blueprint run failed and rollback is complete.\n\nRolling Back — The blueprint run failed and rollback is in progress.\n\nStartedOn -> (timestamp)\n\nThe date and time that the blueprint run started.\n\nCompletedOn -> (timestamp)\n\nThe date and time that the blueprint run completed.\n\nErrorMessage -> (string)\n\nIndicates any errors that are seen while running the blueprint.\n\nRollbackErrorMessage -> (string)\n\nIf there are any errors while creating the entities of a workflow, we try to roll back the created entities until that point and delete them. This attribute indicates the errors seen while trying to delete the entities that are created.\n\nParameters -> (string)\n\nThe blueprint parameters as a string. You will have to provide a value for each key that is required from the parameter spec that is defined in the Blueprint$ParameterSpec .\n\nRoleArn -> (string)\n\nThe role ARN. This role will be assumed by the Glue service and will be used to create the workflow and other entities of a workflow."
    },
    {
      "command_name": "get-blueprint-runs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-blueprint-runs.html",
      "command_description": "Description\n\nRetrieves the details of blueprint runs for a specified blueprint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-blueprint-runs\n--blueprint-name <value>\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--blueprint-name <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--blueprint-name (string)\n\nThe name of the blueprint.\n\n--next-token (string)\n\nA continuation token, if this is a continuation request.\n\n--max-results (integer)\n\nThe maximum size of a list to return.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBlueprintRuns -> (list)\n\nReturns a list of BlueprintRun objects.\n\n(structure)\n\nThe details of a blueprint run.\n\nBlueprintName -> (string)\n\nThe name of the blueprint.\n\nRunId -> (string)\n\nThe run ID for this blueprint run.\n\nWorkflowName -> (string)\n\nThe name of a workflow that is created as a result of a successful blueprint run. If a blueprint run has an error, there will not be a workflow created.\n\nState -> (string)\n\nThe state of the blueprint run. Possible values are:\n\nRunning — The blueprint run is in progress.\n\nSucceeded — The blueprint run completed successfully.\n\nFailed — The blueprint run failed and rollback is complete.\n\nRolling Back — The blueprint run failed and rollback is in progress.\n\nStartedOn -> (timestamp)\n\nThe date and time that the blueprint run started.\n\nCompletedOn -> (timestamp)\n\nThe date and time that the blueprint run completed.\n\nErrorMessage -> (string)\n\nIndicates any errors that are seen while running the blueprint.\n\nRollbackErrorMessage -> (string)\n\nIf there are any errors while creating the entities of a workflow, we try to roll back the created entities until that point and delete them. This attribute indicates the errors seen while trying to delete the entities that are created.\n\nParameters -> (string)\n\nThe blueprint parameters as a string. You will have to provide a value for each key that is required from the parameter spec that is defined in the Blueprint$ParameterSpec .\n\nRoleArn -> (string)\n\nThe role ARN. This role will be assumed by the Glue service and will be used to create the workflow and other entities of a workflow.\n\nNextToken -> (string)\n\nA continuation token, if not all blueprint runs have been returned."
    },
    {
      "command_name": "get-catalog-import-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-catalog-import-status.html",
      "command_description": "Description\n\nRetrieves the status of a migration operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-catalog-import-status\n[--catalog-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the catalog to migrate. Currently, this should be the Amazon Web Services account ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nImportStatus -> (structure)\n\nThe status of the specified catalog migration.\n\nImportCompleted -> (boolean)\n\nTrue if the migration has completed, or False otherwise.\n\nImportTime -> (timestamp)\n\nThe time that the migration was started.\n\nImportedBy -> (string)\n\nThe name of the person who initiated the migration."
    },
    {
      "command_name": "get-classifier",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-classifier.html",
      "command_description": "Description\n\nRetrieve a classifier by name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-classifier\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the classifier to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nClassifier -> (structure)\n\nThe requested classifier.\n\nGrokClassifier -> (structure)\n\nA classifier that uses grok .\n\nName -> (string)\n\nThe name of the classifier.\n\nClassification -> (string)\n\nAn identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, and so on.\n\nCreationTime -> (timestamp)\n\nThe time that this classifier was registered.\n\nLastUpdated -> (timestamp)\n\nThe time that this classifier was last updated.\n\nVersion -> (long)\n\nThe version of this classifier.\n\nGrokPattern -> (string)\n\nThe grok pattern applied to a data store by this classifier. For more information, see built-in patterns in Writing Custom Classifiers .\n\nCustomPatterns -> (string)\n\nOptional custom grok patterns defined by this classifier. For more information, see custom patterns in Writing Custom Classifiers .\n\nXMLClassifier -> (structure)\n\nA classifier for XML content.\n\nName -> (string)\n\nThe name of the classifier.\n\nClassification -> (string)\n\nAn identifier of the data format that the classifier matches.\n\nCreationTime -> (timestamp)\n\nThe time that this classifier was registered.\n\nLastUpdated -> (timestamp)\n\nThe time that this classifier was last updated.\n\nVersion -> (long)\n\nThe version of this classifier.\n\nRowTag -> (string)\n\nThe XML tag designating the element that contains each record in an XML document being parsed. This can’t identify a self-closing element (closed by /> ). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <row item_a=\"A\" item_b=\"B\"></row> is okay, but <row item_a=\"A\" item_b=\"B\" /> is not).\n\nJsonClassifier -> (structure)\n\nA classifier for JSON content.\n\nName -> (string)\n\nThe name of the classifier.\n\nCreationTime -> (timestamp)\n\nThe time that this classifier was registered.\n\nLastUpdated -> (timestamp)\n\nThe time that this classifier was last updated.\n\nVersion -> (long)\n\nThe version of this classifier.\n\nJsonPath -> (string)\n\nA JsonPath string defining the JSON data for the classifier to classify. Glue supports a subset of JsonPath, as described in Writing JsonPath Custom Classifiers .\n\nCsvClassifier -> (structure)\n\nA classifier for comma-separated values (CSV).\n\nName -> (string)\n\nThe name of the classifier.\n\nCreationTime -> (timestamp)\n\nThe time that this classifier was registered.\n\nLastUpdated -> (timestamp)\n\nThe time that this classifier was last updated.\n\nVersion -> (long)\n\nThe version of this classifier.\n\nDelimiter -> (string)\n\nA custom symbol to denote what separates each column entry in the row.\n\nQuoteSymbol -> (string)\n\nA custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.\n\nContainsHeader -> (string)\n\nIndicates whether the CSV file contains a header.\n\nHeader -> (list)\n\nA list of strings representing column names.\n\n(string)\n\nDisableValueTrimming -> (boolean)\n\nSpecifies not to trim values before identifying the type of column values. The default value is true .\n\nAllowSingleColumn -> (boolean)\n\nEnables the processing of files that contain only one column."
    },
    {
      "command_name": "get-classifiers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-classifiers.html",
      "command_description": "Description\n\nLists all classifier objects in the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-classifiers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Classifiers",
      "command_synopsis": "Synopsis\n  get-classifiers\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nClassifiers -> (list)\n\nThe requested list of classifier objects.\n\n(structure)\n\nClassifiers are triggered during a crawl task. A classifier checks whether a given file is in a format it can handle. If it is, the classifier creates a schema in the form of a StructType object that matches that data format.\n\nYou can use the standard classifiers that Glue provides, or you can write your own classifiers to best categorize your data sources and specify the appropriate schemas to use for them. A classifier can be a grok classifier, an XML classifier, a JSON classifier, or a custom CSV classifier, as specified in one of the fields in the Classifier object.\n\nGrokClassifier -> (structure)\n\nA classifier that uses grok .\n\nName -> (string)\n\nThe name of the classifier.\n\nClassification -> (string)\n\nAn identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, and so on.\n\nCreationTime -> (timestamp)\n\nThe time that this classifier was registered.\n\nLastUpdated -> (timestamp)\n\nThe time that this classifier was last updated.\n\nVersion -> (long)\n\nThe version of this classifier.\n\nGrokPattern -> (string)\n\nThe grok pattern applied to a data store by this classifier. For more information, see built-in patterns in Writing Custom Classifiers .\n\nCustomPatterns -> (string)\n\nOptional custom grok patterns defined by this classifier. For more information, see custom patterns in Writing Custom Classifiers .\n\nXMLClassifier -> (structure)\n\nA classifier for XML content.\n\nName -> (string)\n\nThe name of the classifier.\n\nClassification -> (string)\n\nAn identifier of the data format that the classifier matches.\n\nCreationTime -> (timestamp)\n\nThe time that this classifier was registered.\n\nLastUpdated -> (timestamp)\n\nThe time that this classifier was last updated.\n\nVersion -> (long)\n\nThe version of this classifier.\n\nRowTag -> (string)\n\nThe XML tag designating the element that contains each record in an XML document being parsed. This can’t identify a self-closing element (closed by /> ). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <row item_a=\"A\" item_b=\"B\"></row> is okay, but <row item_a=\"A\" item_b=\"B\" /> is not).\n\nJsonClassifier -> (structure)\n\nA classifier for JSON content.\n\nName -> (string)\n\nThe name of the classifier.\n\nCreationTime -> (timestamp)\n\nThe time that this classifier was registered.\n\nLastUpdated -> (timestamp)\n\nThe time that this classifier was last updated.\n\nVersion -> (long)\n\nThe version of this classifier.\n\nJsonPath -> (string)\n\nA JsonPath string defining the JSON data for the classifier to classify. Glue supports a subset of JsonPath, as described in Writing JsonPath Custom Classifiers .\n\nCsvClassifier -> (structure)\n\nA classifier for comma-separated values (CSV).\n\nName -> (string)\n\nThe name of the classifier.\n\nCreationTime -> (timestamp)\n\nThe time that this classifier was registered.\n\nLastUpdated -> (timestamp)\n\nThe time that this classifier was last updated.\n\nVersion -> (long)\n\nThe version of this classifier.\n\nDelimiter -> (string)\n\nA custom symbol to denote what separates each column entry in the row.\n\nQuoteSymbol -> (string)\n\nA custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.\n\nContainsHeader -> (string)\n\nIndicates whether the CSV file contains a header.\n\nHeader -> (list)\n\nA list of strings representing column names.\n\n(string)\n\nDisableValueTrimming -> (boolean)\n\nSpecifies not to trim values before identifying the type of column values. The default value is true .\n\nAllowSingleColumn -> (boolean)\n\nEnables the processing of files that contain only one column.\n\nNextToken -> (string)\n\nA continuation token."
    },
    {
      "command_name": "get-column-statistics-for-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-column-statistics-for-partition.html",
      "command_description": "Description\n\nRetrieves partition statistics of columns.\n\nThe Identity and Access Management (IAM) permission required for this operation is GetPartition .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-column-statistics-for-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partition-values <value>\n--column-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partition-values <value>",
        "--column-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the partitions reside.\n\n--table-name (string)\n\nThe name of the partitions’ table.\n\n--partition-values (list)\n\nA list of partition values identifying the partition.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--column-names (list)\n\nA list of the column names.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nColumnStatisticsList -> (list)\n\nList of ColumnStatistics that failed to be retrieved.\n\n(structure)\n\nRepresents the generated column-level statistics for a table or partition.\n\nColumnName -> (string)\n\nName of column which statistics belong to.\n\nColumnType -> (string)\n\nThe data type of the column.\n\nAnalyzedTime -> (timestamp)\n\nThe timestamp of when column statistics were generated.\n\nStatisticsData -> (structure)\n\nA ColumnStatisticData object that contains the statistics data values.\n\nType -> (string)\n\nThe type of column statistics data.\n\nBooleanColumnStatisticsData -> (structure)\n\nBoolean column statistics data.\n\nNumberOfTrues -> (long)\n\nThe number of true values in the column.\n\nNumberOfFalses -> (long)\n\nThe number of false values in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nDateColumnStatisticsData -> (structure)\n\nDate column statistics data.\n\nMinimumValue -> (timestamp)\n\nThe lowest value in the column.\n\nMaximumValue -> (timestamp)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDecimalColumnStatisticsData -> (structure)\n\nDecimal column statistics data.\n\nMinimumValue -> (structure)\n\nThe lowest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nMaximumValue -> (structure)\n\nThe highest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDoubleColumnStatisticsData -> (structure)\n\nDouble column statistics data.\n\nMinimumValue -> (double)\n\nThe lowest value in the column.\n\nMaximumValue -> (double)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nLongColumnStatisticsData -> (structure)\n\nLong column statistics data.\n\nMinimumValue -> (long)\n\nThe lowest value in the column.\n\nMaximumValue -> (long)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nStringColumnStatisticsData -> (structure)\n\nString column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest string in the column.\n\nAverageLength -> (double)\n\nThe average string length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nBinaryColumnStatisticsData -> (structure)\n\nBinary column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest bit sequence in the column.\n\nAverageLength -> (double)\n\nThe average bit sequence length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nErrors -> (list)\n\nError occurred during retrieving column statistics data.\n\n(structure)\n\nEncapsulates a column name that failed and the reason for failure.\n\nColumnName -> (string)\n\nThe name of the column that failed.\n\nError -> (structure)\n\nAn error message with the reason for the failure of an operation.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error."
    },
    {
      "command_name": "get-column-statistics-for-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-column-statistics-for-table.html",
      "command_description": "Description\n\nRetrieves table statistics of columns.\n\nThe Identity and Access Management (IAM) permission required for this operation is GetTable .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-column-statistics-for-table\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--column-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--column-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the partitions reside.\n\n--table-name (string)\n\nThe name of the partitions’ table.\n\n--column-names (list)\n\nA list of the column names.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nColumnStatisticsList -> (list)\n\nList of ColumnStatistics that failed to be retrieved.\n\n(structure)\n\nRepresents the generated column-level statistics for a table or partition.\n\nColumnName -> (string)\n\nName of column which statistics belong to.\n\nColumnType -> (string)\n\nThe data type of the column.\n\nAnalyzedTime -> (timestamp)\n\nThe timestamp of when column statistics were generated.\n\nStatisticsData -> (structure)\n\nA ColumnStatisticData object that contains the statistics data values.\n\nType -> (string)\n\nThe type of column statistics data.\n\nBooleanColumnStatisticsData -> (structure)\n\nBoolean column statistics data.\n\nNumberOfTrues -> (long)\n\nThe number of true values in the column.\n\nNumberOfFalses -> (long)\n\nThe number of false values in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nDateColumnStatisticsData -> (structure)\n\nDate column statistics data.\n\nMinimumValue -> (timestamp)\n\nThe lowest value in the column.\n\nMaximumValue -> (timestamp)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDecimalColumnStatisticsData -> (structure)\n\nDecimal column statistics data.\n\nMinimumValue -> (structure)\n\nThe lowest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nMaximumValue -> (structure)\n\nThe highest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDoubleColumnStatisticsData -> (structure)\n\nDouble column statistics data.\n\nMinimumValue -> (double)\n\nThe lowest value in the column.\n\nMaximumValue -> (double)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nLongColumnStatisticsData -> (structure)\n\nLong column statistics data.\n\nMinimumValue -> (long)\n\nThe lowest value in the column.\n\nMaximumValue -> (long)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nStringColumnStatisticsData -> (structure)\n\nString column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest string in the column.\n\nAverageLength -> (double)\n\nThe average string length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nBinaryColumnStatisticsData -> (structure)\n\nBinary column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest bit sequence in the column.\n\nAverageLength -> (double)\n\nThe average bit sequence length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nErrors -> (list)\n\nList of ColumnStatistics that failed to be retrieved.\n\n(structure)\n\nEncapsulates a column name that failed and the reason for failure.\n\nColumnName -> (string)\n\nThe name of the column that failed.\n\nError -> (structure)\n\nAn error message with the reason for the failure of an operation.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error."
    },
    {
      "command_name": "get-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-connection.html",
      "command_description": "Description\n\nRetrieves a connection definition from the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-connection\n[--catalog-id <value>]\n--name <value>\n[--hide-password | --no-hide-password]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--name <value>",
        "[--hide-password | --no-hide-password]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which the connection resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--name (string)\n\nThe name of the connection definition to retrieve.\n\n--hide-password | --no-hide-password (boolean)\n\nAllows you to retrieve the connection metadata without returning the password. For instance, the AWS Glue console uses this flag to retrieve the connection, and does not display the password. Set this parameter when the caller might not have permission to use the KMS key to decrypt the password, but it does have permission to access the rest of the connection properties.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnection -> (structure)\n\nThe requested connection definition.\n\nName -> (string)\n\nThe name of the connection definition.\n\nDescription -> (string)\n\nThe description of the connection.\n\nConnectionType -> (string)\n\nThe type of the connection. Currently, SFTP is not supported.\n\nMatchCriteria -> (list)\n\nA list of criteria that can be used in selecting this connection.\n\n(string)\n\nConnectionProperties -> (map)\n\nThese key-value pairs define parameters for the connection:\n\nHOST - The host URI: either the fully qualified domain name (FQDN) or the IPv4 address of the database host.\n\nPORT - The port number, between 1024 and 65535, of the port on which the database host is listening for database connections.\n\nUSER_NAME - The name under which to log in to the database. The value string for USER_NAME is “USERNAME “.\n\nPASSWORD - A password, if one is used, for the user name.\n\nENCRYPTED_PASSWORD - When you enable connection password protection by setting ConnectionPasswordEncryption in the Data Catalog encryption settings, this field stores the encrypted password.\n\nJDBC_DRIVER_JAR_URI - The Amazon Simple Storage Service (Amazon S3) path of the JAR file that contains the JDBC driver to use.\n\nJDBC_DRIVER_CLASS_NAME - The class name of the JDBC driver to use.\n\nJDBC_ENGINE - The name of the JDBC engine to use.\n\nJDBC_ENGINE_VERSION - The version of the JDBC engine to use.\n\nCONFIG_FILES - (Reserved for future use.)\n\nINSTANCE_ID - The instance ID to use.\n\nJDBC_CONNECTION_URL - The URL for connecting to a JDBC data source.\n\nJDBC_ENFORCE_SSL - A Boolean string (true, false) specifying whether Secure Sockets Layer (SSL) with hostname matching is enforced for the JDBC connection on the client. The default is false.\n\nCUSTOM_JDBC_CERT - An Amazon S3 location specifying the customer’s root certificate. Glue uses this root certificate to validate the customer’s certificate when connecting to the customer database. Glue only handles X.509 certificates. The certificate provided must be DER-encoded and supplied in Base64 encoding PEM format.\n\nSKIP_CUSTOM_JDBC_CERT_VALIDATION - By default, this is false . Glue validates the Signature algorithm and Subject Public Key Algorithm for the customer certificate. The only permitted algorithms for the Signature algorithm are SHA256withRSA, SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm, the key length must be at least 2048. You can set the value of this property to true to skip Glue’s validation of the customer certificate.\n\nCUSTOM_JDBC_CERT_STRING - A custom JDBC certificate string which is used for domain match or distinguished name match to prevent a man-in-the-middle attack. In Oracle database, this is used as the SSL_SERVER_CERT_DN ; in Microsoft SQL Server, this is used as the hostNameInCertificate .\n\nCONNECTION_URL - The URL for connecting to a general (non-JDBC) data source.\n\nKAFKA_BOOTSTRAP_SERVERS - A comma-separated list of host and port pairs that are the addresses of the Apache Kafka brokers in a Kafka cluster to which a Kafka client will connect to and bootstrap itself.\n\nKAFKA_SSL_ENABLED - Whether to enable or disable SSL on an Apache Kafka connection. Default value is “true”.\n\nKAFKA_CUSTOM_CERT - The Amazon S3 URL for the private CA cert file (.pem format). The default is an empty string.\n\nKAFKA_SKIP_CUSTOM_CERT_VALIDATION - Whether to skip the validation of the CA cert file or not. Glue validates for three algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default value is “false”.\n\nSECRET_ID - The secret ID used for the secret manager of credentials.\n\nCONNECTOR_URL - The connector URL for a MARKETPLACE or CUSTOM connection.\n\nCONNECTOR_TYPE - The connector type for a MARKETPLACE or CUSTOM connection.\n\nCONNECTOR_CLASS_NAME - The connector class name for a MARKETPLACE or CUSTOM connection.\n\nKAFKA_CLIENT_KEYSTORE - The Amazon S3 location of the client keystore file for Kafka client side authentication (Optional).\n\nKAFKA_CLIENT_KEYSTORE_PASSWORD - The password to access the provided keystore (Optional).\n\nKAFKA_CLIENT_KEY_PASSWORD - A keystore can consist of multiple keys, so this is the password to access the client key to be used with the Kafka server side key (Optional).\n\nENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD - The encrypted version of the Kafka client keystore password (if the user has the Glue encrypt passwords setting selected).\n\nENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD - The encrypted version of the Kafka client key password (if the user has the Glue encrypt passwords setting selected).\n\nkey -> (string)\n\nvalue -> (string)\n\nPhysicalConnectionRequirements -> (structure)\n\nA map of physical connection requirements, such as virtual private cloud (VPC) and SecurityGroup , that are needed to make this connection successfully.\n\nSubnetId -> (string)\n\nThe subnet ID used by the connection.\n\nSecurityGroupIdList -> (list)\n\nThe security group ID list used by the connection.\n\n(string)\n\nAvailabilityZone -> (string)\n\nThe connection’s Availability Zone. This field is redundant because the specified subnet implies the Availability Zone to be used. Currently the field must be populated, but it will be deprecated in the future.\n\nCreationTime -> (timestamp)\n\nThe time that this connection definition was created.\n\nLastUpdatedTime -> (timestamp)\n\nThe last time that this connection definition was updated.\n\nLastUpdatedBy -> (string)\n\nThe user, group, or role that last updated this connection definition."
    },
    {
      "command_name": "get-connections",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-connections.html",
      "command_description": "Description\n\nRetrieves a list of connection definitions from the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-connections is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ConnectionList",
      "command_synopsis": "Synopsis\n  get-connections\n[--catalog-id <value>]\n[--filter <value>]\n[--hide-password | --no-hide-password]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "[--filter <value>]",
        "[--hide-password | --no-hide-password]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which the connections reside. If none is provided, the Amazon Web Services account ID is used by default.\n\n--filter (structure)\n\nA filter that controls which connections are returned.\n\nMatchCriteria -> (list)\n\nA criteria string that must match the criteria recorded in the connection definition for that connection definition to be returned.\n\n(string)\n\nConnectionType -> (string)\n\nThe type of connections to return. Currently, SFTP is not supported.\n\nShorthand Syntax:\n\nMatchCriteria=string,string,ConnectionType=string\n\n\nJSON Syntax:\n\n{\n  \"MatchCriteria\": [\"string\", ...],\n  \"ConnectionType\": \"JDBC\"|\"SFTP\"|\"MONGODB\"|\"KAFKA\"|\"NETWORK\"|\"MARKETPLACE\"|\"CUSTOM\"\n}\n\n\n--hide-password | --no-hide-password (boolean)\n\nAllows you to retrieve the connection metadata without returning the password. For instance, the AWS Glue console uses this flag to retrieve the connection, and does not display the password. Set this parameter when the caller might not have permission to use the KMS key to decrypt the password, but it does have permission to access the rest of the connection properties.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnectionList -> (list)\n\nA list of requested connection definitions.\n\n(structure)\n\nDefines a connection to a data source.\n\nName -> (string)\n\nThe name of the connection definition.\n\nDescription -> (string)\n\nThe description of the connection.\n\nConnectionType -> (string)\n\nThe type of the connection. Currently, SFTP is not supported.\n\nMatchCriteria -> (list)\n\nA list of criteria that can be used in selecting this connection.\n\n(string)\n\nConnectionProperties -> (map)\n\nThese key-value pairs define parameters for the connection:\n\nHOST - The host URI: either the fully qualified domain name (FQDN) or the IPv4 address of the database host.\n\nPORT - The port number, between 1024 and 65535, of the port on which the database host is listening for database connections.\n\nUSER_NAME - The name under which to log in to the database. The value string for USER_NAME is “USERNAME “.\n\nPASSWORD - A password, if one is used, for the user name.\n\nENCRYPTED_PASSWORD - When you enable connection password protection by setting ConnectionPasswordEncryption in the Data Catalog encryption settings, this field stores the encrypted password.\n\nJDBC_DRIVER_JAR_URI - The Amazon Simple Storage Service (Amazon S3) path of the JAR file that contains the JDBC driver to use.\n\nJDBC_DRIVER_CLASS_NAME - The class name of the JDBC driver to use.\n\nJDBC_ENGINE - The name of the JDBC engine to use.\n\nJDBC_ENGINE_VERSION - The version of the JDBC engine to use.\n\nCONFIG_FILES - (Reserved for future use.)\n\nINSTANCE_ID - The instance ID to use.\n\nJDBC_CONNECTION_URL - The URL for connecting to a JDBC data source.\n\nJDBC_ENFORCE_SSL - A Boolean string (true, false) specifying whether Secure Sockets Layer (SSL) with hostname matching is enforced for the JDBC connection on the client. The default is false.\n\nCUSTOM_JDBC_CERT - An Amazon S3 location specifying the customer’s root certificate. Glue uses this root certificate to validate the customer’s certificate when connecting to the customer database. Glue only handles X.509 certificates. The certificate provided must be DER-encoded and supplied in Base64 encoding PEM format.\n\nSKIP_CUSTOM_JDBC_CERT_VALIDATION - By default, this is false . Glue validates the Signature algorithm and Subject Public Key Algorithm for the customer certificate. The only permitted algorithms for the Signature algorithm are SHA256withRSA, SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm, the key length must be at least 2048. You can set the value of this property to true to skip Glue’s validation of the customer certificate.\n\nCUSTOM_JDBC_CERT_STRING - A custom JDBC certificate string which is used for domain match or distinguished name match to prevent a man-in-the-middle attack. In Oracle database, this is used as the SSL_SERVER_CERT_DN ; in Microsoft SQL Server, this is used as the hostNameInCertificate .\n\nCONNECTION_URL - The URL for connecting to a general (non-JDBC) data source.\n\nKAFKA_BOOTSTRAP_SERVERS - A comma-separated list of host and port pairs that are the addresses of the Apache Kafka brokers in a Kafka cluster to which a Kafka client will connect to and bootstrap itself.\n\nKAFKA_SSL_ENABLED - Whether to enable or disable SSL on an Apache Kafka connection. Default value is “true”.\n\nKAFKA_CUSTOM_CERT - The Amazon S3 URL for the private CA cert file (.pem format). The default is an empty string.\n\nKAFKA_SKIP_CUSTOM_CERT_VALIDATION - Whether to skip the validation of the CA cert file or not. Glue validates for three algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default value is “false”.\n\nSECRET_ID - The secret ID used for the secret manager of credentials.\n\nCONNECTOR_URL - The connector URL for a MARKETPLACE or CUSTOM connection.\n\nCONNECTOR_TYPE - The connector type for a MARKETPLACE or CUSTOM connection.\n\nCONNECTOR_CLASS_NAME - The connector class name for a MARKETPLACE or CUSTOM connection.\n\nKAFKA_CLIENT_KEYSTORE - The Amazon S3 location of the client keystore file for Kafka client side authentication (Optional).\n\nKAFKA_CLIENT_KEYSTORE_PASSWORD - The password to access the provided keystore (Optional).\n\nKAFKA_CLIENT_KEY_PASSWORD - A keystore can consist of multiple keys, so this is the password to access the client key to be used with the Kafka server side key (Optional).\n\nENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD - The encrypted version of the Kafka client keystore password (if the user has the Glue encrypt passwords setting selected).\n\nENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD - The encrypted version of the Kafka client key password (if the user has the Glue encrypt passwords setting selected).\n\nkey -> (string)\n\nvalue -> (string)\n\nPhysicalConnectionRequirements -> (structure)\n\nA map of physical connection requirements, such as virtual private cloud (VPC) and SecurityGroup , that are needed to make this connection successfully.\n\nSubnetId -> (string)\n\nThe subnet ID used by the connection.\n\nSecurityGroupIdList -> (list)\n\nThe security group ID list used by the connection.\n\n(string)\n\nAvailabilityZone -> (string)\n\nThe connection’s Availability Zone. This field is redundant because the specified subnet implies the Availability Zone to be used. Currently the field must be populated, but it will be deprecated in the future.\n\nCreationTime -> (timestamp)\n\nThe time that this connection definition was created.\n\nLastUpdatedTime -> (timestamp)\n\nThe last time that this connection definition was updated.\n\nLastUpdatedBy -> (string)\n\nThe user, group, or role that last updated this connection definition.\n\nNextToken -> (string)\n\nA continuation token, if the list of connections returned does not include the last of the filtered connections."
    },
    {
      "command_name": "get-crawler",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-crawler.html",
      "command_description": "Description\n\nRetrieves metadata for a specified crawler.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-crawler\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the crawler to retrieve metadata for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCrawler -> (structure)\n\nThe metadata for the specified crawler.\n\nName -> (string)\n\nThe name of the crawler.\n\nRole -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that’s used to access customer resources, such as Amazon Simple Storage Service (Amazon S3) data.\n\nTargets -> (structure)\n\nA collection of targets to crawl.\n\nS3Targets -> (list)\n\nSpecifies Amazon Simple Storage Service (Amazon S3) targets.\n\n(structure)\n\nSpecifies a data store in Amazon Simple Storage Service (Amazon S3).\n\nPath -> (string)\n\nThe path to the Amazon S3 target.\n\nExclusions -> (list)\n\nA list of glob patterns used to exclude from the crawl. For more information, see Catalog Tables with a Crawler .\n\n(string)\n\nConnectionName -> (string)\n\nThe name of a connection which allows a job or crawler to access data in Amazon S3 within an Amazon Virtual Private Cloud environment (Amazon VPC).\n\nSampleSize -> (integer)\n\nSets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.\n\nEventQueueArn -> (string)\n\nA valid Amazon SQS ARN. For example, arn:aws:sqs:region:account:sqs .\n\nDlqEventQueueArn -> (string)\n\nA valid Amazon dead-letter SQS ARN. For example, arn:aws:sqs:region:account:deadLetterQueue .\n\nJdbcTargets -> (list)\n\nSpecifies JDBC targets.\n\n(structure)\n\nSpecifies a JDBC data store to crawl.\n\nConnectionName -> (string)\n\nThe name of the connection to use to connect to the JDBC target.\n\nPath -> (string)\n\nThe path of the JDBC target.\n\nExclusions -> (list)\n\nA list of glob patterns used to exclude from the crawl. For more information, see Catalog Tables with a Crawler .\n\n(string)\n\nMongoDBTargets -> (list)\n\nSpecifies Amazon DocumentDB or MongoDB targets.\n\n(structure)\n\nSpecifies an Amazon DocumentDB or MongoDB data store to crawl.\n\nConnectionName -> (string)\n\nThe name of the connection to use to connect to the Amazon DocumentDB or MongoDB target.\n\nPath -> (string)\n\nThe path of the Amazon DocumentDB or MongoDB target (database/collection).\n\nScanAll -> (boolean)\n\nIndicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.\n\nA value of true means to scan all records, while a value of false means to sample the records. If no value is specified, the value defaults to true .\n\nDynamoDBTargets -> (list)\n\nSpecifies Amazon DynamoDB targets.\n\n(structure)\n\nSpecifies an Amazon DynamoDB table to crawl.\n\nPath -> (string)\n\nThe name of the DynamoDB table to crawl.\n\nscanAll -> (boolean)\n\nIndicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.\n\nA value of true means to scan all records, while a value of false means to sample the records. If no value is specified, the value defaults to true .\n\nscanRate -> (double)\n\nThe percentage of the configured read capacity units to use by the Glue crawler. Read capacity units is a term defined by DynamoDB, and is a numeric value that acts as rate limiter for the number of reads that can be performed on that table per second.\n\nThe valid values are null or a value between 0.1 to 1.5. A null value is used when user does not provide a value, and defaults to 0.5 of the configured Read Capacity Unit (for provisioned tables), or 0.25 of the max configured Read Capacity Unit (for tables using on-demand mode).\n\nCatalogTargets -> (list)\n\nSpecifies Glue Data Catalog targets.\n\n(structure)\n\nSpecifies an Glue Data Catalog target.\n\nDatabaseName -> (string)\n\nThe name of the database to be synchronized.\n\nTables -> (list)\n\nA list of the tables to be synchronized.\n\n(string)\n\nDatabaseName -> (string)\n\nThe name of the database in which the crawler’s output is stored.\n\nDescription -> (string)\n\nA description of the crawler.\n\nClassifiers -> (list)\n\nA list of UTF-8 strings that specify the custom classifiers that are associated with the crawler.\n\n(string)\n\nRecrawlPolicy -> (structure)\n\nA policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.\n\nRecrawlBehavior -> (string)\n\nSpecifies whether to crawl the entire dataset again or to crawl only folders that were added since the last crawler run.\n\nA value of CRAWL_EVERYTHING specifies crawling the entire dataset again.\n\nA value of CRAWL_NEW_FOLDERS_ONLY specifies crawling only folders that were added since the last crawler run.\n\nA value of CRAWL_EVENT_MODE specifies crawling only the changes identified by Amazon S3 events.\n\nSchemaChangePolicy -> (structure)\n\nThe policy that specifies update and delete behaviors for the crawler.\n\nUpdateBehavior -> (string)\n\nThe update behavior when the crawler finds a changed schema.\n\nDeleteBehavior -> (string)\n\nThe deletion behavior when the crawler finds a deleted object.\n\nLineageConfiguration -> (structure)\n\nA configuration that specifies whether data lineage is enabled for the crawler.\n\nCrawlerLineageSettings -> (string)\n\nSpecifies whether data lineage is enabled for the crawler. Valid values are:\n\nENABLE: enables data lineage for the crawler\n\nDISABLE: disables data lineage for the crawler\n\nState -> (string)\n\nIndicates whether the crawler is running, or whether a run is pending.\n\nTablePrefix -> (string)\n\nThe prefix added to the names of tables that are created.\n\nSchedule -> (structure)\n\nFor scheduled crawlers, the schedule when the crawler runs.\n\nScheduleExpression -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nState -> (string)\n\nThe state of the schedule.\n\nCrawlElapsedTime -> (long)\n\nIf the crawler is running, contains the total time elapsed since the last crawl began.\n\nCreationTime -> (timestamp)\n\nThe time that the crawler was created.\n\nLastUpdated -> (timestamp)\n\nThe time that the crawler was last updated.\n\nLastCrawl -> (structure)\n\nThe status of the last crawl, and potentially error information if an error occurred.\n\nStatus -> (string)\n\nStatus of the last crawl.\n\nErrorMessage -> (string)\n\nIf an error occurred, the error information about the last crawl.\n\nLogGroup -> (string)\n\nThe log group for the last crawl.\n\nLogStream -> (string)\n\nThe log stream for the last crawl.\n\nMessagePrefix -> (string)\n\nThe prefix for a message about this crawl.\n\nStartTime -> (timestamp)\n\nThe time at which the crawl started.\n\nVersion -> (long)\n\nThe version of the crawler.\n\nConfiguration -> (string)\n\nCrawler configuration information. This versioned JSON string allows users to specify aspects of a crawler’s behavior. For more information, see Include and Exclude Patterns .\n\nCrawlerSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used by this crawler."
    },
    {
      "command_name": "get-crawler-metrics",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-crawler-metrics.html",
      "command_description": "Description\n\nRetrieves metrics about specified crawlers.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-crawler-metrics is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: CrawlerMetricsList",
      "command_synopsis": "Synopsis\n  get-crawler-metrics\n[--crawler-name-list <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--crawler-name-list <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--crawler-name-list (list)\n\nA list of the names of crawlers about which to retrieve metrics.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCrawlerMetricsList -> (list)\n\nA list of metrics for the specified crawler.\n\n(structure)\n\nMetrics for a specified crawler.\n\nCrawlerName -> (string)\n\nThe name of the crawler.\n\nTimeLeftSeconds -> (double)\n\nThe estimated time left to complete a running crawl.\n\nStillEstimating -> (boolean)\n\nTrue if the crawler is still estimating how long it will take to complete this run.\n\nLastRuntimeSeconds -> (double)\n\nThe duration of the crawler’s most recent run, in seconds.\n\nMedianRuntimeSeconds -> (double)\n\nThe median duration of this crawler’s runs, in seconds.\n\nTablesCreated -> (integer)\n\nThe number of tables created by this crawler.\n\nTablesUpdated -> (integer)\n\nThe number of tables updated by this crawler.\n\nTablesDeleted -> (integer)\n\nThe number of tables deleted by this crawler.\n\nNextToken -> (string)\n\nA continuation token, if the returned list does not contain the last metric available."
    },
    {
      "command_name": "get-crawlers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-crawlers.html",
      "command_description": "Description\n\nRetrieves metadata for all crawlers defined in the customer account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-crawlers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Crawlers",
      "command_synopsis": "Synopsis\n  get-crawlers\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCrawlers -> (list)\n\nA list of crawler metadata.\n\n(structure)\n\nSpecifies a crawler program that examines a data source and uses classifiers to try to determine its schema. If successful, the crawler records metadata concerning the data source in the Glue Data Catalog.\n\nName -> (string)\n\nThe name of the crawler.\n\nRole -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that’s used to access customer resources, such as Amazon Simple Storage Service (Amazon S3) data.\n\nTargets -> (structure)\n\nA collection of targets to crawl.\n\nS3Targets -> (list)\n\nSpecifies Amazon Simple Storage Service (Amazon S3) targets.\n\n(structure)\n\nSpecifies a data store in Amazon Simple Storage Service (Amazon S3).\n\nPath -> (string)\n\nThe path to the Amazon S3 target.\n\nExclusions -> (list)\n\nA list of glob patterns used to exclude from the crawl. For more information, see Catalog Tables with a Crawler .\n\n(string)\n\nConnectionName -> (string)\n\nThe name of a connection which allows a job or crawler to access data in Amazon S3 within an Amazon Virtual Private Cloud environment (Amazon VPC).\n\nSampleSize -> (integer)\n\nSets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.\n\nEventQueueArn -> (string)\n\nA valid Amazon SQS ARN. For example, arn:aws:sqs:region:account:sqs .\n\nDlqEventQueueArn -> (string)\n\nA valid Amazon dead-letter SQS ARN. For example, arn:aws:sqs:region:account:deadLetterQueue .\n\nJdbcTargets -> (list)\n\nSpecifies JDBC targets.\n\n(structure)\n\nSpecifies a JDBC data store to crawl.\n\nConnectionName -> (string)\n\nThe name of the connection to use to connect to the JDBC target.\n\nPath -> (string)\n\nThe path of the JDBC target.\n\nExclusions -> (list)\n\nA list of glob patterns used to exclude from the crawl. For more information, see Catalog Tables with a Crawler .\n\n(string)\n\nMongoDBTargets -> (list)\n\nSpecifies Amazon DocumentDB or MongoDB targets.\n\n(structure)\n\nSpecifies an Amazon DocumentDB or MongoDB data store to crawl.\n\nConnectionName -> (string)\n\nThe name of the connection to use to connect to the Amazon DocumentDB or MongoDB target.\n\nPath -> (string)\n\nThe path of the Amazon DocumentDB or MongoDB target (database/collection).\n\nScanAll -> (boolean)\n\nIndicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.\n\nA value of true means to scan all records, while a value of false means to sample the records. If no value is specified, the value defaults to true .\n\nDynamoDBTargets -> (list)\n\nSpecifies Amazon DynamoDB targets.\n\n(structure)\n\nSpecifies an Amazon DynamoDB table to crawl.\n\nPath -> (string)\n\nThe name of the DynamoDB table to crawl.\n\nscanAll -> (boolean)\n\nIndicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.\n\nA value of true means to scan all records, while a value of false means to sample the records. If no value is specified, the value defaults to true .\n\nscanRate -> (double)\n\nThe percentage of the configured read capacity units to use by the Glue crawler. Read capacity units is a term defined by DynamoDB, and is a numeric value that acts as rate limiter for the number of reads that can be performed on that table per second.\n\nThe valid values are null or a value between 0.1 to 1.5. A null value is used when user does not provide a value, and defaults to 0.5 of the configured Read Capacity Unit (for provisioned tables), or 0.25 of the max configured Read Capacity Unit (for tables using on-demand mode).\n\nCatalogTargets -> (list)\n\nSpecifies Glue Data Catalog targets.\n\n(structure)\n\nSpecifies an Glue Data Catalog target.\n\nDatabaseName -> (string)\n\nThe name of the database to be synchronized.\n\nTables -> (list)\n\nA list of the tables to be synchronized.\n\n(string)\n\nDatabaseName -> (string)\n\nThe name of the database in which the crawler’s output is stored.\n\nDescription -> (string)\n\nA description of the crawler.\n\nClassifiers -> (list)\n\nA list of UTF-8 strings that specify the custom classifiers that are associated with the crawler.\n\n(string)\n\nRecrawlPolicy -> (structure)\n\nA policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.\n\nRecrawlBehavior -> (string)\n\nSpecifies whether to crawl the entire dataset again or to crawl only folders that were added since the last crawler run.\n\nA value of CRAWL_EVERYTHING specifies crawling the entire dataset again.\n\nA value of CRAWL_NEW_FOLDERS_ONLY specifies crawling only folders that were added since the last crawler run.\n\nA value of CRAWL_EVENT_MODE specifies crawling only the changes identified by Amazon S3 events.\n\nSchemaChangePolicy -> (structure)\n\nThe policy that specifies update and delete behaviors for the crawler.\n\nUpdateBehavior -> (string)\n\nThe update behavior when the crawler finds a changed schema.\n\nDeleteBehavior -> (string)\n\nThe deletion behavior when the crawler finds a deleted object.\n\nLineageConfiguration -> (structure)\n\nA configuration that specifies whether data lineage is enabled for the crawler.\n\nCrawlerLineageSettings -> (string)\n\nSpecifies whether data lineage is enabled for the crawler. Valid values are:\n\nENABLE: enables data lineage for the crawler\n\nDISABLE: disables data lineage for the crawler\n\nState -> (string)\n\nIndicates whether the crawler is running, or whether a run is pending.\n\nTablePrefix -> (string)\n\nThe prefix added to the names of tables that are created.\n\nSchedule -> (structure)\n\nFor scheduled crawlers, the schedule when the crawler runs.\n\nScheduleExpression -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nState -> (string)\n\nThe state of the schedule.\n\nCrawlElapsedTime -> (long)\n\nIf the crawler is running, contains the total time elapsed since the last crawl began.\n\nCreationTime -> (timestamp)\n\nThe time that the crawler was created.\n\nLastUpdated -> (timestamp)\n\nThe time that the crawler was last updated.\n\nLastCrawl -> (structure)\n\nThe status of the last crawl, and potentially error information if an error occurred.\n\nStatus -> (string)\n\nStatus of the last crawl.\n\nErrorMessage -> (string)\n\nIf an error occurred, the error information about the last crawl.\n\nLogGroup -> (string)\n\nThe log group for the last crawl.\n\nLogStream -> (string)\n\nThe log stream for the last crawl.\n\nMessagePrefix -> (string)\n\nThe prefix for a message about this crawl.\n\nStartTime -> (timestamp)\n\nThe time at which the crawl started.\n\nVersion -> (long)\n\nThe version of the crawler.\n\nConfiguration -> (string)\n\nCrawler configuration information. This versioned JSON string allows users to specify aspects of a crawler’s behavior. For more information, see Include and Exclude Patterns .\n\nCrawlerSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used by this crawler.\n\nNextToken -> (string)\n\nA continuation token, if the returned list has not reached the end of those defined in this customer account."
    },
    {
      "command_name": "get-data-catalog-encryption-settings",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-data-catalog-encryption-settings.html",
      "command_description": "Description\n\nRetrieves the security configuration for a specified catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-data-catalog-encryption-settings\n[--catalog-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog to retrieve the security configuration for. If none is provided, the Amazon Web Services account ID is used by default.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDataCatalogEncryptionSettings -> (structure)\n\nThe requested security configuration.\n\nEncryptionAtRest -> (structure)\n\nSpecifies the encryption-at-rest configuration for the Data Catalog.\n\nCatalogEncryptionMode -> (string)\n\nThe encryption-at-rest mode for encrypting Data Catalog data.\n\nSseAwsKmsKeyId -> (string)\n\nThe ID of the KMS key to use for encryption at rest.\n\nConnectionPasswordEncryption -> (structure)\n\nWhen connection password protection is enabled, the Data Catalog uses a customer-provided key to encrypt the password as part of CreateConnection or UpdateConnection and store it in the ENCRYPTED_PASSWORD field in the connection properties. You can enable catalog encryption or only password encryption.\n\nReturnConnectionPasswordEncrypted -> (boolean)\n\nWhen the ReturnConnectionPasswordEncrypted flag is set to “true”, passwords remain encrypted in the responses of GetConnection and GetConnections . This encryption takes effect independently from catalog encryption.\n\nAwsKmsKeyId -> (string)\n\nAn KMS key that is used to encrypt the connection password.\n\nIf connection password protection is enabled, the caller of CreateConnection and UpdateConnection needs at least kms:Encrypt permission on the specified KMS key, to encrypt passwords before storing them in the Data Catalog.\n\nYou can set the decrypt permission to enable or restrict access on the password key according to your security requirements."
    },
    {
      "command_name": "get-database",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-database.html",
      "command_description": "Description\n\nRetrieves the definition of a specified database.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-database\n[--catalog-id <value>]\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which the database resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--name (string)\n\nThe name of the database to retrieve. For Hive compatibility, this should be all lowercase.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatabase -> (structure)\n\nThe definition of the specified database in the Data Catalog.\n\nName -> (string)\n\nThe name of the database. For Hive compatibility, this is folded to lowercase when it is stored.\n\nDescription -> (string)\n\nA description of the database.\n\nLocationUri -> (string)\n\nThe location of the database (for example, an HDFS path).\n\nParameters -> (map)\n\nThese key-value pairs define parameters and properties of the database.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreateTime -> (timestamp)\n\nThe time at which the metadata database was created in the catalog.\n\nCreateTableDefaultPermissions -> (list)\n\nCreates a set of default permissions on the table for principals.\n\n(structure)\n\nPermissions granted to a principal.\n\nPrincipal -> (structure)\n\nThe principal who is granted permissions.\n\nDataLakePrincipalIdentifier -> (string)\n\nAn identifier for the Lake Formation principal.\n\nPermissions -> (list)\n\nThe permissions that are granted to the principal.\n\n(string)\n\nTargetDatabase -> (structure)\n\nA DatabaseIdentifier structure that describes a target database for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the database resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the database resides."
    },
    {
      "command_name": "get-databases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-databases.html",
      "command_description": "Description\n\nRetrieves all databases defined in a given Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-databases is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DatabaseList",
      "command_synopsis": "Synopsis\n  get-databases\n[--catalog-id <value>]\n[--resource-share-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "[--resource-share-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog from which to retrieve Databases . If none is provided, the Amazon Web Services account ID is used by default.\n\n--resource-share-type (string)\n\nAllows you to specify that you want to list the databases shared with your account. The allowable values are FOREIGN or ALL .\n\nIf set to FOREIGN , will list the databases shared with your account.\n\nIf set to ALL , will list the databases shared with your account, as well as the databases in yor local account.\n\nPossible values:\n\nFOREIGN\n\nALL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatabaseList -> (list)\n\nA list of Database objects from the specified catalog.\n\n(structure)\n\nThe Database object represents a logical grouping of tables that might reside in a Hive metastore or an RDBMS.\n\nName -> (string)\n\nThe name of the database. For Hive compatibility, this is folded to lowercase when it is stored.\n\nDescription -> (string)\n\nA description of the database.\n\nLocationUri -> (string)\n\nThe location of the database (for example, an HDFS path).\n\nParameters -> (map)\n\nThese key-value pairs define parameters and properties of the database.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreateTime -> (timestamp)\n\nThe time at which the metadata database was created in the catalog.\n\nCreateTableDefaultPermissions -> (list)\n\nCreates a set of default permissions on the table for principals.\n\n(structure)\n\nPermissions granted to a principal.\n\nPrincipal -> (structure)\n\nThe principal who is granted permissions.\n\nDataLakePrincipalIdentifier -> (string)\n\nAn identifier for the Lake Formation principal.\n\nPermissions -> (list)\n\nThe permissions that are granted to the principal.\n\n(string)\n\nTargetDatabase -> (structure)\n\nA DatabaseIdentifier structure that describes a target database for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the database resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the database resides.\n\nNextToken -> (string)\n\nA continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.",
      "command_examples": "Examples\n\nTo list the definitions of some or all of the databases in the AWS Glue Data Catalog\n\nThe following get-databases example returns information about the databases in the Data Catalog.\n\naws glue get-databases\n\n\nOutput:\n\n{\n    \"DatabaseList\": [\n        {\n            \"Name\": \"default\",\n            \"Description\": \"Default Hive database\",\n            \"LocationUri\": \"file:/spark-warehouse\",\n            \"CreateTime\": 1602084052.0,\n            \"CreateTableDefaultPermissions\": [\n                {\n                    \"Principal\": {\n                        \"DataLakePrincipalIdentifier\": \"IAM_ALLOWED_PRINCIPALS\"\n                    },\n                    \"Permissions\": [\n                        \"ALL\"\n                    ]\n                }\n            ],\n            \"CatalogId\": \"111122223333\"\n        },\n        {\n            \"Name\": \"flights-db\",\n            \"CreateTime\": 1587072847.0,\n            \"CreateTableDefaultPermissions\": [\n                {\n                    \"Principal\": {\n                        \"DataLakePrincipalIdentifier\": \"IAM_ALLOWED_PRINCIPALS\"\n                    },\n                    \"Permissions\": [\n                        \"ALL\"\n                    ]\n                }\n            ],\n            \"CatalogId\": \"111122223333\"\n        },\n        {\n            \"Name\": \"legislators\",\n            \"CreateTime\": 1601415625.0,\n            \"CreateTableDefaultPermissions\": [\n                {\n                    \"Principal\": {\n                        \"DataLakePrincipalIdentifier\": \"IAM_ALLOWED_PRINCIPALS\"\n                    },\n                    \"Permissions\": [\n                        \"ALL\"\n                    ]\n                }\n            ],\n            \"CatalogId\": \"111122223333\"\n        },\n        {\n            \"Name\": \"tempdb\",\n            \"CreateTime\": 1601498566.0,\n            \"CreateTableDefaultPermissions\": [\n                {\n                    \"Principal\": {\n                        \"DataLakePrincipalIdentifier\": \"IAM_ALLOWED_PRINCIPALS\"\n                    },\n                    \"Permissions\": [\n                        \"ALL\"\n                    ]\n                }\n            ],\n            \"CatalogId\": \"111122223333\"\n        }\n    ]\n}\n\n\nFor more information, see Defining a Database in Your Data Catalog in the AWS Glue Developer Guide."
    },
    {
      "command_name": "get-dataflow-graph",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-dataflow-graph.html",
      "command_description": "Description\n\nTransforms a Python script into a directed acyclic graph (DAG).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-dataflow-graph\n[--python-script <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--python-script <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--python-script (string)\n\nThe Python script to transform.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDagNodes -> (list)\n\nA list of the nodes in the resulting DAG.\n\n(structure)\n\nRepresents a node in a directed acyclic graph (DAG)\n\nId -> (string)\n\nA node identifier that is unique within the node’s graph.\n\nNodeType -> (string)\n\nThe type of node that this is.\n\nArgs -> (list)\n\nProperties of the node, in the form of name-value pairs.\n\n(structure)\n\nAn argument or property of a node.\n\nName -> (string)\n\nThe name of the argument or property.\n\nValue -> (string)\n\nThe value of the argument or property.\n\nParam -> (boolean)\n\nTrue if the value is used as a parameter.\n\nLineNumber -> (integer)\n\nThe line number of the node.\n\nDagEdges -> (list)\n\nA list of the edges in the resulting DAG.\n\n(structure)\n\nRepresents a directional edge in a directed acyclic graph (DAG).\n\nSource -> (string)\n\nThe ID of the node at which the edge starts.\n\nTarget -> (string)\n\nThe ID of the node at which the edge ends.\n\nTargetParameter -> (string)\n\nThe target of the edge."
    },
    {
      "command_name": "get-dev-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-dev-endpoint.html",
      "command_description": "Description\n\nRetrieves information about a specified development endpoint.\n\nNote\n\nWhen you create a development endpoint in a virtual private cloud (VPC), Glue returns only a private IP address, and the public IP address field is not populated. When you create a non-VPC development endpoint, Glue returns only a public IP address.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-dev-endpoint\n--endpoint-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--endpoint-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--endpoint-name (string)\n\nName of the DevEndpoint to retrieve information for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDevEndpoint -> (structure)\n\nA DevEndpoint definition.\n\nEndpointName -> (string)\n\nThe name of the DevEndpoint .\n\nRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used in this DevEndpoint .\n\nSecurityGroupIds -> (list)\n\nA list of security group identifiers used in this DevEndpoint .\n\n(string)\n\nSubnetId -> (string)\n\nThe subnet ID for this DevEndpoint .\n\nYarnEndpointAddress -> (string)\n\nThe YARN endpoint address used by this DevEndpoint .\n\nPrivateAddress -> (string)\n\nA private IP address to access the DevEndpoint within a VPC if the DevEndpoint is created within one. The PrivateAddress field is present only when you create the DevEndpoint within your VPC.\n\nZeppelinRemoteSparkInterpreterPort -> (integer)\n\nThe Apache Zeppelin port for the remote Apache Spark interpreter.\n\nPublicAddress -> (string)\n\nThe public IP address used by this DevEndpoint . The PublicAddress field is present only when you create a non-virtual private cloud (VPC) DevEndpoint .\n\nStatus -> (string)\n\nThe current status of this DevEndpoint .\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nFor the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nKnown issue: when a development endpoint is created with the G.2X WorkerType configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nDevelopment endpoints that are created without specifying a Glue version default to Glue 0.9.\n\nYou can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated to the development endpoint.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nNumberOfNodes -> (integer)\n\nThe number of Glue Data Processing Units (DPUs) allocated to this DevEndpoint .\n\nAvailabilityZone -> (string)\n\nThe AWS Availability Zone where this DevEndpoint is located.\n\nVpcId -> (string)\n\nThe ID of the virtual private cloud (VPC) used by this DevEndpoint .\n\nExtraPythonLibsS3Path -> (string)\n\nThe paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your DevEndpoint . Multiple values must be complete paths separated by a comma.\n\nNote\n\nYou can only use pure Python libraries with a DevEndpoint . Libraries that rely on C extensions, such as the pandas Python data analysis library, are not currently supported.\n\nExtraJarsS3Path -> (string)\n\nThe path to one or more Java .jar files in an S3 bucket that should be loaded in your DevEndpoint .\n\nNote\n\nYou can only use pure Java/Scala libraries with a DevEndpoint .\n\nFailureReason -> (string)\n\nThe reason for a current failure in this DevEndpoint .\n\nLastUpdateStatus -> (string)\n\nThe status of the last update.\n\nCreatedTimestamp -> (timestamp)\n\nThe point in time at which this DevEndpoint was created.\n\nLastModifiedTimestamp -> (timestamp)\n\nThe point in time at which this DevEndpoint was last modified.\n\nPublicKey -> (string)\n\nThe public key to be used by this DevEndpoint for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.\n\nPublicKeys -> (list)\n\nA list of public keys to be used by the DevEndpoints for authentication. Using this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.\n\nNote\n\nIf you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the UpdateDevEndpoint API operation with the public key content in the deletePublicKeys attribute, and the list of new keys in the addPublicKeys attribute.\n\n(string)\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this DevEndpoint .\n\nArguments -> (map)\n\nA map of arguments used to configure the DevEndpoint .\n\nValid arguments are:\n\n\"--enable-glue-datacatalog\": \"\"\n\nYou can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "get-dev-endpoints",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-dev-endpoints.html",
      "command_description": "Description\n\nRetrieves all the development endpoints in this AWS account.\n\nNote\n\nWhen you create a development endpoint in a virtual private cloud (VPC), Glue returns only a private IP address and the public IP address field is not populated. When you create a non-VPC development endpoint, Glue returns only a public IP address.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-dev-endpoints is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DevEndpoints",
      "command_synopsis": "Synopsis\n  get-dev-endpoints\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDevEndpoints -> (list)\n\nA list of DevEndpoint definitions.\n\n(structure)\n\nA development endpoint where a developer can remotely debug extract, transform, and load (ETL) scripts.\n\nEndpointName -> (string)\n\nThe name of the DevEndpoint .\n\nRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used in this DevEndpoint .\n\nSecurityGroupIds -> (list)\n\nA list of security group identifiers used in this DevEndpoint .\n\n(string)\n\nSubnetId -> (string)\n\nThe subnet ID for this DevEndpoint .\n\nYarnEndpointAddress -> (string)\n\nThe YARN endpoint address used by this DevEndpoint .\n\nPrivateAddress -> (string)\n\nA private IP address to access the DevEndpoint within a VPC if the DevEndpoint is created within one. The PrivateAddress field is present only when you create the DevEndpoint within your VPC.\n\nZeppelinRemoteSparkInterpreterPort -> (integer)\n\nThe Apache Zeppelin port for the remote Apache Spark interpreter.\n\nPublicAddress -> (string)\n\nThe public IP address used by this DevEndpoint . The PublicAddress field is present only when you create a non-virtual private cloud (VPC) DevEndpoint .\n\nStatus -> (string)\n\nThe current status of this DevEndpoint .\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nFor the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nKnown issue: when a development endpoint is created with the G.2X WorkerType configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nDevelopment endpoints that are created without specifying a Glue version default to Glue 0.9.\n\nYou can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated to the development endpoint.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nNumberOfNodes -> (integer)\n\nThe number of Glue Data Processing Units (DPUs) allocated to this DevEndpoint .\n\nAvailabilityZone -> (string)\n\nThe AWS Availability Zone where this DevEndpoint is located.\n\nVpcId -> (string)\n\nThe ID of the virtual private cloud (VPC) used by this DevEndpoint .\n\nExtraPythonLibsS3Path -> (string)\n\nThe paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your DevEndpoint . Multiple values must be complete paths separated by a comma.\n\nNote\n\nYou can only use pure Python libraries with a DevEndpoint . Libraries that rely on C extensions, such as the pandas Python data analysis library, are not currently supported.\n\nExtraJarsS3Path -> (string)\n\nThe path to one or more Java .jar files in an S3 bucket that should be loaded in your DevEndpoint .\n\nNote\n\nYou can only use pure Java/Scala libraries with a DevEndpoint .\n\nFailureReason -> (string)\n\nThe reason for a current failure in this DevEndpoint .\n\nLastUpdateStatus -> (string)\n\nThe status of the last update.\n\nCreatedTimestamp -> (timestamp)\n\nThe point in time at which this DevEndpoint was created.\n\nLastModifiedTimestamp -> (timestamp)\n\nThe point in time at which this DevEndpoint was last modified.\n\nPublicKey -> (string)\n\nThe public key to be used by this DevEndpoint for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.\n\nPublicKeys -> (list)\n\nA list of public keys to be used by the DevEndpoints for authentication. Using this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.\n\nNote\n\nIf you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the UpdateDevEndpoint API operation with the public key content in the deletePublicKeys attribute, and the list of new keys in the addPublicKeys attribute.\n\n(string)\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this DevEndpoint .\n\nArguments -> (map)\n\nA map of arguments used to configure the DevEndpoint .\n\nValid arguments are:\n\n\"--enable-glue-datacatalog\": \"\"\n\nYou can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nA continuation token, if not all DevEndpoint definitions have yet been returned."
    },
    {
      "command_name": "get-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-job.html",
      "command_description": "Description\n\nRetrieves an existing job definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-job\n--job-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe name of the job definition to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJob -> (structure)\n\nThe requested job definition.\n\nName -> (string)\n\nThe name you assign to this job definition.\n\nDescription -> (string)\n\nA description of the job.\n\nLogUri -> (string)\n\nThis field is reserved for future use.\n\nRole -> (string)\n\nThe name or Amazon Resource Name (ARN) of the IAM role associated with this job.\n\nCreatedOn -> (timestamp)\n\nThe time and date that this job definition was created.\n\nLastModifiedOn -> (timestamp)\n\nThe last point in time when this job definition was modified.\n\nExecutionProperty -> (structure)\n\nAn ExecutionProperty specifying the maximum number of concurrent runs allowed for this job.\n\nMaxConcurrentRuns -> (integer)\n\nThe maximum number of concurrent runs allowed for the job. The default is 1. An error is returned when this threshold is reached. The maximum value you can specify is controlled by a service limit.\n\nCommand -> (structure)\n\nThe JobCommand that runs this job.\n\nName -> (string)\n\nThe name of the job command. For an Apache Spark ETL job, this must be glueetl . For a Python shell job, it must be pythonshell . For an Apache Spark streaming ETL job, this must be gluestreaming .\n\nScriptLocation -> (string)\n\nSpecifies the Amazon Simple Storage Service (Amazon S3) path to a script that runs a job.\n\nPythonVersion -> (string)\n\nThe Python version being used to run a Python shell job. Allowed values are 2 or 3.\n\nDefaultArguments -> (map)\n\nThe default arguments for this job, specified as name-value pairs.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nNonOverridableArguments -> (map)\n\nNon-overridable arguments for this job, specified as name-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nConnections -> (structure)\n\nThe connections used for this job.\n\nConnections -> (list)\n\nA list of connections used by the job.\n\n(string)\n\nMaxRetries -> (integer)\n\nThe maximum number of times to retry this job after a JobRun fails.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to runs of this job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nTimeout -> (integer)\n\nThe job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).\n\nMaxCapacity -> (double)\n\nFor Glue version 1.0 or earlier jobs, using the standard worker type, the number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job, an Apache Spark ETL job, or an Apache Spark streaming ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”) or Apache Spark streaming ETL job (JobCommand.Name =”gluestreaming”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nFor Glue version 2.0 jobs, you cannot instead specify a Maximum capacity . Instead, you should specify a Worker type and the Number of workers .\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nFor the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.",
      "command_examples": "Examples\n\nTo retrieve information about a job\n\nThe following get-job example retrieves information about a job.\n\naws glue get-job \\\n    --job-name my-testing-job\n\n\nOutput:\n\n{\n    \"Job\": {\n        \"Name\": \"my-testing-job\",\n        \"Role\": \"Glue_DefaultRole\",\n        \"CreatedOn\": 1602805698.167,\n        \"LastModifiedOn\": 1602805698.167,\n        \"ExecutionProperty\": {\n            \"MaxConcurrentRuns\": 1\n        },\n        \"Command\": {\n            \"Name\": \"gluestreaming\",\n            \"ScriptLocation\": \"s3://janetst-bucket-01/Scripts/test_script.scala\",\n            \"PythonVersion\": \"2\"\n        },\n        \"DefaultArguments\": {\n            \"--class\": \"GlueApp\",\n            \"--job-language\": \"scala\"\n        },\n        \"MaxRetries\": 0,\n        \"AllocatedCapacity\": 10,\n        \"MaxCapacity\": 10.0,\n        \"GlueVersion\": \"1.0\"\n    }\n}\n\n\nFor more information, see Jobs in the AWS Glue Developer Guide."
    },
    {
      "command_name": "get-job-bookmark",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-job-bookmark.html",
      "command_description": "Description\n\nReturns information on a job bookmark entry.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-job-bookmark\n--job-name <value>\n[--run-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-name <value>",
        "[--run-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe name of the job in question.\n\n--run-id (string)\n\nThe unique run identifier associated with this job run.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobBookmarkEntry -> (structure)\n\nA structure that defines a point that a job can resume processing.\n\nJobName -> (string)\n\nThe name of the job in question.\n\nVersion -> (integer)\n\nThe version of the job.\n\nRun -> (integer)\n\nThe run ID number.\n\nAttempt -> (integer)\n\nThe attempt ID number.\n\nPreviousRunId -> (string)\n\nThe unique run identifier associated with the previous job run.\n\nRunId -> (string)\n\nThe run ID number.\n\nJobBookmark -> (string)\n\nThe bookmark itself."
    },
    {
      "command_name": "get-job-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-job-run.html",
      "command_description": "Description\n\nRetrieves the metadata for a given job run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-job-run\n--job-name <value>\n--run-id <value>\n[--predecessors-included | --no-predecessors-included]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-name <value>",
        "--run-id <value>",
        "[--predecessors-included | --no-predecessors-included]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nName of the job definition being run.\n\n--run-id (string)\n\nThe ID of the job run.\n\n--predecessors-included | --no-predecessors-included (boolean)\n\nTrue if a list of predecessor runs should be returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobRun -> (structure)\n\nThe requested job-run metadata.\n\nId -> (string)\n\nThe ID of this job run.\n\nAttempt -> (integer)\n\nThe number of the attempt to run this job.\n\nPreviousRunId -> (string)\n\nThe ID of the previous run of this job. For example, the JobRunId specified in the StartJobRun action.\n\nTriggerName -> (string)\n\nThe name of the trigger that started this job run.\n\nJobName -> (string)\n\nThe name of the job definition being used in this run.\n\nStartedOn -> (timestamp)\n\nThe date and time at which this job run was started.\n\nLastModifiedOn -> (timestamp)\n\nThe last time that this job run was modified.\n\nCompletedOn -> (timestamp)\n\nThe date and time that this job run completed.\n\nJobRunState -> (string)\n\nThe current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see Glue Job Run Statuses .\n\nArguments -> (map)\n\nThe job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nErrorMessage -> (string)\n\nAn error message associated with this job run.\n\nPredecessorRuns -> (list)\n\nA list of predecessors to this job run.\n\n(structure)\n\nA job run that was used in the predicate of a conditional trigger that triggered this job run.\n\nJobName -> (string)\n\nThe name of the job definition used by the predecessor job run.\n\nRunId -> (string)\n\nThe job-run ID of the predecessor job run.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nExecutionTime -> (integer)\n\nThe amount of time (in seconds) that the job run consumed resources.\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nMaxCapacity -> (double)\n\nThe number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job run.\n\nLogGroupName -> (string)\n\nThe name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using KMS. This name can be /aws-glue/jobs/ , in which case the default encryption is NONE . If you add a role name and SecurityConfiguration name (in other words, /aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/ ), then that security configuration is used to encrypt the log group.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.",
      "command_examples": "Examples\n\nTo get information about a job run\n\nThe following get-job-run example retrieves information about a job run.\n\naws glue get-job-run \\\n    --job-name \"Combine legistators data\" \\\n    --run-id jr_012e176506505074d94d761755e5c62538ee1aad6f17d39f527e9140cf0c9a5e\n\n\nOutput:\n\n{\n    \"JobRun\": {\n        \"Id\": \"jr_012e176506505074d94d761755e5c62538ee1aad6f17d39f527e9140cf0c9a5e\",\n        \"Attempt\": 0,\n        \"JobName\": \"Combine legistators data\",\n        \"StartedOn\": 1602873931.255,\n        \"LastModifiedOn\": 1602874075.985,\n        \"CompletedOn\": 1602874075.985,\n        \"JobRunState\": \"SUCCEEDED\",\n        \"Arguments\": {\n            \"--enable-continuous-cloudwatch-log\": \"true\",\n            \"--enable-metrics\": \"\",\n            \"--enable-spark-ui\": \"true\",\n            \"--job-bookmark-option\": \"job-bookmark-enable\",\n            \"--spark-event-logs-path\": \"s3://aws-glue-assets-111122223333-us-east-1/sparkHistoryLogs/\"\n        },\n        \"PredecessorRuns\": [],\n        \"AllocatedCapacity\": 10,\n        \"ExecutionTime\": 117,\n        \"Timeout\": 2880,\n        \"MaxCapacity\": 10.0,\n        \"WorkerType\": \"G.1X\",\n        \"NumberOfWorkers\": 10,\n        \"LogGroupName\": \"/aws-glue/jobs\",\n        \"GlueVersion\": \"2.0\"\n    }\n}\n\n\nFor more information, see Job Runs in the AWS Glue Developer Guide."
    },
    {
      "command_name": "get-job-runs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-job-runs.html",
      "command_description": "Description\n\nRetrieves metadata for all runs of a given job definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-job-runs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: JobRuns",
      "command_synopsis": "Synopsis\n  get-job-runs\n--job-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe name of the job definition for which to retrieve all job runs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobRuns -> (list)\n\nA list of job-run metadata objects.\n\n(structure)\n\nContains information about a job run.\n\nId -> (string)\n\nThe ID of this job run.\n\nAttempt -> (integer)\n\nThe number of the attempt to run this job.\n\nPreviousRunId -> (string)\n\nThe ID of the previous run of this job. For example, the JobRunId specified in the StartJobRun action.\n\nTriggerName -> (string)\n\nThe name of the trigger that started this job run.\n\nJobName -> (string)\n\nThe name of the job definition being used in this run.\n\nStartedOn -> (timestamp)\n\nThe date and time at which this job run was started.\n\nLastModifiedOn -> (timestamp)\n\nThe last time that this job run was modified.\n\nCompletedOn -> (timestamp)\n\nThe date and time that this job run completed.\n\nJobRunState -> (string)\n\nThe current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see Glue Job Run Statuses .\n\nArguments -> (map)\n\nThe job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nErrorMessage -> (string)\n\nAn error message associated with this job run.\n\nPredecessorRuns -> (list)\n\nA list of predecessors to this job run.\n\n(structure)\n\nA job run that was used in the predicate of a conditional trigger that triggered this job run.\n\nJobName -> (string)\n\nThe name of the job definition used by the predecessor job run.\n\nRunId -> (string)\n\nThe job-run ID of the predecessor job run.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nExecutionTime -> (integer)\n\nThe amount of time (in seconds) that the job run consumed resources.\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nMaxCapacity -> (double)\n\nThe number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job run.\n\nLogGroupName -> (string)\n\nThe name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using KMS. This name can be /aws-glue/jobs/ , in which case the default encryption is NONE . If you add a role name and SecurityConfiguration name (in other words, /aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/ ), then that security configuration is used to encrypt the log group.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.\n\nNextToken -> (string)\n\nA continuation token, if not all requested job runs have been returned.",
      "command_examples": "Examples\n\nTo get information about all job runs for a job\n\nThe following get-job-runs example retrieves information about job runs for a job.\n\naws glue get-job-runs \\\n    --job-name \"my-testing-job\"\n\n\nOutput:\n\n{\n    \"JobRuns\": [\n        {\n            \"Id\": \"jr_012e176506505074d94d761755e5c62538ee1aad6f17d39f527e9140cf0c9a5e\",\n            \"Attempt\": 0,\n            \"JobName\": \"my-testing-job\",\n            \"StartedOn\": 1602873931.255,\n            \"LastModifiedOn\": 1602874075.985,\n            \"CompletedOn\": 1602874075.985,\n            \"JobRunState\": \"SUCCEEDED\",\n            \"Arguments\": {\n                \"--enable-continuous-cloudwatch-log\": \"true\",\n                \"--enable-metrics\": \"\",\n                \"--enable-spark-ui\": \"true\",\n                \"--job-bookmark-option\": \"job-bookmark-enable\",\n                \"--spark-event-logs-path\": \"s3://aws-glue-assets-111122223333-us-east-1/sparkHistoryLogs/\"\n            },\n            \"PredecessorRuns\": [],\n            \"AllocatedCapacity\": 10,\n            \"ExecutionTime\": 117,\n            \"Timeout\": 2880,\n            \"MaxCapacity\": 10.0,\n            \"WorkerType\": \"G.1X\",\n            \"NumberOfWorkers\": 10,\n            \"LogGroupName\": \"/aws-glue/jobs\",\n            \"GlueVersion\": \"2.0\"\n        },\n        {\n            \"Id\": \"jr_03cc19ddab11c4e244d3f735567de74ff93b0b3ef468a713ffe73e53d1aec08f_attempt_2\",\n            \"Attempt\": 2,\n            \"PreviousRunId\": \"jr_03cc19ddab11c4e244d3f735567de74ff93b0b3ef468a713ffe73e53d1aec08f_attempt_1\",\n            \"JobName\": \"my-testing-job\",\n            \"StartedOn\": 1602811168.496,\n            \"LastModifiedOn\": 1602811282.39,\n            \"CompletedOn\": 1602811282.39,\n            \"JobRunState\": \"FAILED\",\n            \"ErrorMessage\": \"An error occurred while calling o122.pyWriteDynamicFrame.\n                Access Denied (Service: Amazon S3; Status Code: 403; Error Code: AccessDenied;\n                Request ID: 021AAB703DB20A2D;\n                S3 Extended Request ID: teZk24Y09TkXzBvMPG502L5VJBhe9DJuWA9/TXtuGOqfByajkfL/Tlqt5JBGdEGpigAqzdMDM/U=)\",\n            \"PredecessorRuns\": [],\n            \"AllocatedCapacity\": 10,\n            \"ExecutionTime\": 110,\n            \"Timeout\": 2880,\n            \"MaxCapacity\": 10.0,\n            \"WorkerType\": \"G.1X\",\n            \"NumberOfWorkers\": 10,\n            \"LogGroupName\": \"/aws-glue/jobs\",\n            \"GlueVersion\": \"2.0\"\n        },\n        {\n            \"Id\": \"jr_03cc19ddab11c4e244d3f735567de74ff93b0b3ef468a713ffe73e53d1aec08f_attempt_1\",\n            \"Attempt\": 1,\n            \"PreviousRunId\": \"jr_03cc19ddab11c4e244d3f735567de74ff93b0b3ef468a713ffe73e53d1aec08f\",\n            \"JobName\": \"my-testing-job\",\n            \"StartedOn\": 1602811020.518,\n            \"LastModifiedOn\": 1602811138.364,\n            \"CompletedOn\": 1602811138.364,\n            \"JobRunState\": \"FAILED\",\n            \"ErrorMessage\": \"An error occurred while calling o122.pyWriteDynamicFrame.\n                 Access Denied (Service: Amazon S3; Status Code: 403; Error Code: AccessDenied;\n                 Request ID: 2671D37856AE7ABB;\n                 S3 Extended Request ID: RLJCJw20brV+PpC6GpORahyF2fp9flB5SSb2bTGPnUSPVizLXRl1PN3QZldb+v1o9qRVktNYbW8=)\",\n            \"PredecessorRuns\": [],\n            \"AllocatedCapacity\": 10,\n            \"ExecutionTime\": 113,\n            \"Timeout\": 2880,\n            \"MaxCapacity\": 10.0,\n            \"WorkerType\": \"G.1X\",\n            \"NumberOfWorkers\": 10,\n            \"LogGroupName\": \"/aws-glue/jobs\",\n            \"GlueVersion\": \"2.0\"\n        }\n    ]\n}\n\n\nFor more information, see Job Runs in the AWS Glue Developer Guide."
    },
    {
      "command_name": "get-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-jobs.html",
      "command_description": "Description\n\nRetrieves all current job definitions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Jobs",
      "command_synopsis": "Synopsis\n  get-jobs\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobs -> (list)\n\nA list of job definitions.\n\n(structure)\n\nSpecifies a job definition.\n\nName -> (string)\n\nThe name you assign to this job definition.\n\nDescription -> (string)\n\nA description of the job.\n\nLogUri -> (string)\n\nThis field is reserved for future use.\n\nRole -> (string)\n\nThe name or Amazon Resource Name (ARN) of the IAM role associated with this job.\n\nCreatedOn -> (timestamp)\n\nThe time and date that this job definition was created.\n\nLastModifiedOn -> (timestamp)\n\nThe last point in time when this job definition was modified.\n\nExecutionProperty -> (structure)\n\nAn ExecutionProperty specifying the maximum number of concurrent runs allowed for this job.\n\nMaxConcurrentRuns -> (integer)\n\nThe maximum number of concurrent runs allowed for the job. The default is 1. An error is returned when this threshold is reached. The maximum value you can specify is controlled by a service limit.\n\nCommand -> (structure)\n\nThe JobCommand that runs this job.\n\nName -> (string)\n\nThe name of the job command. For an Apache Spark ETL job, this must be glueetl . For a Python shell job, it must be pythonshell . For an Apache Spark streaming ETL job, this must be gluestreaming .\n\nScriptLocation -> (string)\n\nSpecifies the Amazon Simple Storage Service (Amazon S3) path to a script that runs a job.\n\nPythonVersion -> (string)\n\nThe Python version being used to run a Python shell job. Allowed values are 2 or 3.\n\nDefaultArguments -> (map)\n\nThe default arguments for this job, specified as name-value pairs.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nNonOverridableArguments -> (map)\n\nNon-overridable arguments for this job, specified as name-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nConnections -> (structure)\n\nThe connections used for this job.\n\nConnections -> (list)\n\nA list of connections used by the job.\n\n(string)\n\nMaxRetries -> (integer)\n\nThe maximum number of times to retry this job after a JobRun fails.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to runs of this job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nTimeout -> (integer)\n\nThe job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).\n\nMaxCapacity -> (double)\n\nFor Glue version 1.0 or earlier jobs, using the standard worker type, the number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job, an Apache Spark ETL job, or an Apache Spark streaming ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”) or Apache Spark streaming ETL job (JobCommand.Name =”gluestreaming”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nFor Glue version 2.0 jobs, you cannot instead specify a Maximum capacity . Instead, you should specify a Worker type and the Number of workers .\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nFor the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.\n\nNextToken -> (string)\n\nA continuation token, if not all job definitions have yet been returned."
    },
    {
      "command_name": "get-mapping",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-mapping.html",
      "command_description": "Description\n\nCreates mappings.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-mapping\n--source <value>\n[--sinks <value>]\n[--location <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--source <value>",
        "[--sinks <value>]",
        "[--location <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--source (structure)\n\nSpecifies the source table.\n\nDatabaseName -> (string)\n\nThe database in which the table metadata resides.\n\nTableName -> (string)\n\nThe name of the table in question.\n\nShorthand Syntax:\n\nDatabaseName=string,TableName=string\n\n\nJSON Syntax:\n\n{\n  \"DatabaseName\": \"string\",\n  \"TableName\": \"string\"\n}\n\n\n--sinks (list)\n\nA list of target tables.\n\n(structure)\n\nSpecifies a table definition in the Glue Data Catalog.\n\nDatabaseName -> (string)\n\nThe database in which the table metadata resides.\n\nTableName -> (string)\n\nThe name of the table in question.\n\nShorthand Syntax:\n\nDatabaseName=string,TableName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"DatabaseName\": \"string\",\n    \"TableName\": \"string\"\n  }\n  ...\n]\n\n\n--location (structure)\n\nParameters for the mapping.\n\nJdbc -> (list)\n\nA JDBC location.\n\n(structure)\n\nAn argument or property of a node.\n\nName -> (string)\n\nThe name of the argument or property.\n\nValue -> (string)\n\nThe value of the argument or property.\n\nParam -> (boolean)\n\nTrue if the value is used as a parameter.\n\nS3 -> (list)\n\nAn Amazon Simple Storage Service (Amazon S3) location.\n\n(structure)\n\nAn argument or property of a node.\n\nName -> (string)\n\nThe name of the argument or property.\n\nValue -> (string)\n\nThe value of the argument or property.\n\nParam -> (boolean)\n\nTrue if the value is used as a parameter.\n\nDynamoDB -> (list)\n\nAn Amazon DynamoDB table location.\n\n(structure)\n\nAn argument or property of a node.\n\nName -> (string)\n\nThe name of the argument or property.\n\nValue -> (string)\n\nThe value of the argument or property.\n\nParam -> (boolean)\n\nTrue if the value is used as a parameter.\n\nShorthand Syntax:\n\nJdbc=[{Name=string,Value=string,Param=boolean},{Name=string,Value=string,Param=boolean}],S3=[{Name=string,Value=string,Param=boolean},{Name=string,Value=string,Param=boolean}],DynamoDB=[{Name=string,Value=string,Param=boolean},{Name=string,Value=string,Param=boolean}]\n\n\nJSON Syntax:\n\n{\n  \"Jdbc\": [\n    {\n      \"Name\": \"string\",\n      \"Value\": \"string\",\n      \"Param\": true|false\n    }\n    ...\n  ],\n  \"S3\": [\n    {\n      \"Name\": \"string\",\n      \"Value\": \"string\",\n      \"Param\": true|false\n    }\n    ...\n  ],\n  \"DynamoDB\": [\n    {\n      \"Name\": \"string\",\n      \"Value\": \"string\",\n      \"Param\": true|false\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMapping -> (list)\n\nA list of mappings to the specified targets.\n\n(structure)\n\nDefines a mapping.\n\nSourceTable -> (string)\n\nThe name of the source table.\n\nSourcePath -> (string)\n\nThe source path.\n\nSourceType -> (string)\n\nThe source type.\n\nTargetTable -> (string)\n\nThe target table.\n\nTargetPath -> (string)\n\nThe target path.\n\nTargetType -> (string)\n\nThe target type."
    },
    {
      "command_name": "get-ml-task-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-ml-task-run.html",
      "command_description": "Description\n\nGets details for a specific task run on a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can check the stats of any task run by calling GetMLTaskRun with the TaskRunID and its parent transform’s TransformID .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-ml-task-run\n--transform-id <value>\n--task-run-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--transform-id <value>",
        "--task-run-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--transform-id (string)\n\nThe unique identifier of the machine learning transform.\n\n--task-run-id (string)\n\nThe unique identifier of the task run.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTransformId -> (string)\n\nThe unique identifier of the task run.\n\nTaskRunId -> (string)\n\nThe unique run identifier associated with this run.\n\nStatus -> (string)\n\nThe status for this task run.\n\nLogGroupName -> (string)\n\nThe names of the log groups that are associated with the task run.\n\nProperties -> (structure)\n\nThe list of properties that are associated with the task run.\n\nTaskType -> (string)\n\nThe type of task run.\n\nImportLabelsTaskRunProperties -> (structure)\n\nThe configuration properties for an importing labels task run.\n\nInputS3Path -> (string)\n\nThe Amazon Simple Storage Service (Amazon S3) path from where you will import the labels.\n\nReplace -> (boolean)\n\nIndicates whether to overwrite your existing labels.\n\nExportLabelsTaskRunProperties -> (structure)\n\nThe configuration properties for an exporting labels task run.\n\nOutputS3Path -> (string)\n\nThe Amazon Simple Storage Service (Amazon S3) path where you will export the labels.\n\nLabelingSetGenerationTaskRunProperties -> (structure)\n\nThe configuration properties for a labeling set generation task run.\n\nOutputS3Path -> (string)\n\nThe Amazon Simple Storage Service (Amazon S3) path where you will generate the labeling set.\n\nFindMatchesTaskRunProperties -> (structure)\n\nThe configuration properties for a find matches task run.\n\nJobId -> (string)\n\nThe job ID for the Find Matches task run.\n\nJobName -> (string)\n\nThe name assigned to the job for the Find Matches task run.\n\nJobRunId -> (string)\n\nThe job run ID for the Find Matches task run.\n\nErrorString -> (string)\n\nThe error strings that are associated with the task run.\n\nStartedOn -> (timestamp)\n\nThe date and time when this task run started.\n\nLastModifiedOn -> (timestamp)\n\nThe date and time when this task run was last modified.\n\nCompletedOn -> (timestamp)\n\nThe date and time when this task run was completed.\n\nExecutionTime -> (integer)\n\nThe amount of time (in seconds) that the task run consumed resources."
    },
    {
      "command_name": "get-ml-task-runs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-ml-task-runs.html",
      "command_description": "Description\n\nGets a list of runs for a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can get a sortable, filterable list of machine learning task runs by calling GetMLTaskRuns with their parent transform’s TransformID and other optional parameters as documented in this section.\n\nThis operation returns a list of historic runs and must be paginated.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-ml-task-runs\n--transform-id <value>\n[--next-token <value>]\n[--max-results <value>]\n[--filter <value>]\n[--sort <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--transform-id <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--filter <value>]",
        "[--sort <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--transform-id (string)\n\nThe unique identifier of the machine learning transform.\n\n--next-token (string)\n\nA token for pagination of the results. The default is empty.\n\n--max-results (integer)\n\nThe maximum number of results to return.\n\n--filter (structure)\n\nThe filter criteria, in the TaskRunFilterCriteria structure, for the task run.\n\nTaskRunType -> (string)\n\nThe type of task run.\n\nStatus -> (string)\n\nThe current status of the task run.\n\nStartedBefore -> (timestamp)\n\nFilter on task runs started before this date.\n\nStartedAfter -> (timestamp)\n\nFilter on task runs started after this date.\n\nShorthand Syntax:\n\nTaskRunType=string,Status=string,StartedBefore=timestamp,StartedAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"TaskRunType\": \"EVALUATION\"|\"LABELING_SET_GENERATION\"|\"IMPORT_LABELS\"|\"EXPORT_LABELS\"|\"FIND_MATCHES\",\n  \"Status\": \"STARTING\"|\"RUNNING\"|\"STOPPING\"|\"STOPPED\"|\"SUCCEEDED\"|\"FAILED\"|\"TIMEOUT\",\n  \"StartedBefore\": timestamp,\n  \"StartedAfter\": timestamp\n}\n\n\n--sort (structure)\n\nThe sorting criteria, in the TaskRunSortCriteria structure, for the task run.\n\nColumn -> (string)\n\nThe column to be used to sort the list of task runs for the machine learning transform.\n\nSortDirection -> (string)\n\nThe sort direction to be used to sort the list of task runs for the machine learning transform.\n\nShorthand Syntax:\n\nColumn=string,SortDirection=string\n\n\nJSON Syntax:\n\n{\n  \"Column\": \"TASK_RUN_TYPE\"|\"STATUS\"|\"STARTED\",\n  \"SortDirection\": \"DESCENDING\"|\"ASCENDING\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTaskRuns -> (list)\n\nA list of task runs that are associated with the transform.\n\n(structure)\n\nThe sampling parameters that are associated with the machine learning transform.\n\nTransformId -> (string)\n\nThe unique identifier for the transform.\n\nTaskRunId -> (string)\n\nThe unique identifier for this task run.\n\nStatus -> (string)\n\nThe current status of the requested task run.\n\nLogGroupName -> (string)\n\nThe names of the log group for secure logging, associated with this task run.\n\nProperties -> (structure)\n\nSpecifies configuration properties associated with this task run.\n\nTaskType -> (string)\n\nThe type of task run.\n\nImportLabelsTaskRunProperties -> (structure)\n\nThe configuration properties for an importing labels task run.\n\nInputS3Path -> (string)\n\nThe Amazon Simple Storage Service (Amazon S3) path from where you will import the labels.\n\nReplace -> (boolean)\n\nIndicates whether to overwrite your existing labels.\n\nExportLabelsTaskRunProperties -> (structure)\n\nThe configuration properties for an exporting labels task run.\n\nOutputS3Path -> (string)\n\nThe Amazon Simple Storage Service (Amazon S3) path where you will export the labels.\n\nLabelingSetGenerationTaskRunProperties -> (structure)\n\nThe configuration properties for a labeling set generation task run.\n\nOutputS3Path -> (string)\n\nThe Amazon Simple Storage Service (Amazon S3) path where you will generate the labeling set.\n\nFindMatchesTaskRunProperties -> (structure)\n\nThe configuration properties for a find matches task run.\n\nJobId -> (string)\n\nThe job ID for the Find Matches task run.\n\nJobName -> (string)\n\nThe name assigned to the job for the Find Matches task run.\n\nJobRunId -> (string)\n\nThe job run ID for the Find Matches task run.\n\nErrorString -> (string)\n\nThe list of error strings associated with this task run.\n\nStartedOn -> (timestamp)\n\nThe date and time that this task run started.\n\nLastModifiedOn -> (timestamp)\n\nThe last point in time that the requested task run was updated.\n\nCompletedOn -> (timestamp)\n\nThe last point in time that the requested task run was completed.\n\nExecutionTime -> (integer)\n\nThe amount of time (in seconds) that the task run consumed resources.\n\nNextToken -> (string)\n\nA pagination token, if more results are available."
    },
    {
      "command_name": "get-ml-transform",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-ml-transform.html",
      "command_description": "Description\n\nGets an Glue machine learning transform artifact and all its corresponding metadata. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue. You can retrieve their metadata by calling GetMLTransform .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-ml-transform\n--transform-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--transform-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--transform-id (string)\n\nThe unique identifier of the transform, generated at the time that the transform was created.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTransformId -> (string)\n\nThe unique identifier of the transform, generated at the time that the transform was created.\n\nName -> (string)\n\nThe unique name given to the transform when it was created.\n\nDescription -> (string)\n\nA description of the transform.\n\nStatus -> (string)\n\nThe last known status of the transform (to indicate whether it can be used or not). One of “NOT_READY”, “READY”, or “DELETING”.\n\nCreatedOn -> (timestamp)\n\nThe date and time when the transform was created.\n\nLastModifiedOn -> (timestamp)\n\nThe date and time when the transform was last modified.\n\nInputRecordTables -> (list)\n\nA list of Glue table definitions used by the transform.\n\n(structure)\n\nThe database and table in the Glue Data Catalog that is used for input or output data.\n\nDatabaseName -> (string)\n\nA database name in the Glue Data Catalog.\n\nTableName -> (string)\n\nA table name in the Glue Data Catalog.\n\nCatalogId -> (string)\n\nA unique identifier for the Glue Data Catalog.\n\nConnectionName -> (string)\n\nThe name of the connection to the Glue Data Catalog.\n\nParameters -> (structure)\n\nThe configuration parameters that are specific to the algorithm used.\n\nTransformType -> (string)\n\nThe type of machine learning transform.\n\nFor information about the types of machine learning transforms, see Creating Machine Learning Transforms .\n\nFindMatchesParameters -> (structure)\n\nThe parameters for the find matches algorithm.\n\nPrimaryKeyColumnName -> (string)\n\nThe name of a column that uniquely identifies rows in the source table. Used to help identify matching records.\n\nPrecisionRecallTradeoff -> (double)\n\nThe value selected when tuning your transform for a balance between precision and recall. A value of 0.5 means no preference; a value of 1.0 means a bias purely for precision, and a value of 0.0 means a bias for recall. Because this is a tradeoff, choosing values close to 1.0 means very low recall, and choosing values close to 0.0 results in very low precision.\n\nThe precision metric indicates how often your model is correct when it predicts a match.\n\nThe recall metric indicates that for an actual match, how often your model predicts the match.\n\nAccuracyCostTradeoff -> (double)\n\nThe value that is selected when tuning your transform for a balance between accuracy and cost. A value of 0.5 means that the system balances accuracy and cost concerns. A value of 1.0 means a bias purely for accuracy, which typically results in a higher cost, sometimes substantially higher. A value of 0.0 means a bias purely for cost, which results in a less accurate FindMatches transform, sometimes with unacceptable accuracy.\n\nAccuracy measures how well the transform finds true positives and true negatives. Increasing accuracy requires more machine resources and cost. But it also results in increased recall.\n\nCost measures how many compute resources, and thus money, are consumed to run the transform.\n\nEnforceProvidedLabels -> (boolean)\n\nThe value to switch on or off to force the output to match the provided labels from users. If the value is True , the find matches transform forces the output to match the provided labels. The results override the normal conflation results. If the value is False , the find matches transform does not ensure all the labels provided are respected, and the results rely on the trained model.\n\nNote that setting this value to true may increase the conflation execution time.\n\nEvaluationMetrics -> (structure)\n\nThe latest evaluation metrics.\n\nTransformType -> (string)\n\nThe type of machine learning transform.\n\nFindMatchesMetrics -> (structure)\n\nThe evaluation metrics for the find matches algorithm.\n\nAreaUnderPRCurve -> (double)\n\nThe area under the precision/recall curve (AUPRC) is a single number measuring the overall quality of the transform, that is independent of the choice made for precision vs. recall. Higher values indicate that you have a more attractive precision vs. recall tradeoff.\n\nFor more information, see Precision and recall in Wikipedia.\n\nPrecision -> (double)\n\nThe precision metric indicates when often your transform is correct when it predicts a match. Specifically, it measures how well the transform finds true positives from the total true positives possible.\n\nFor more information, see Precision and recall in Wikipedia.\n\nRecall -> (double)\n\nThe recall metric indicates that for an actual match, how often your transform predicts the match. Specifically, it measures how well the transform finds true positives from the total records in the source data.\n\nFor more information, see Precision and recall in Wikipedia.\n\nF1 -> (double)\n\nThe maximum F1 metric indicates the transform’s accuracy between 0 and 1, where 1 is the best accuracy.\n\nFor more information, see F1 score in Wikipedia.\n\nConfusionMatrix -> (structure)\n\nThe confusion matrix shows you what your transform is predicting accurately and what types of errors it is making.\n\nFor more information, see Confusion matrix in Wikipedia.\n\nNumTruePositives -> (long)\n\nThe number of matches in the data that the transform correctly found, in the confusion matrix for your transform.\n\nNumFalsePositives -> (long)\n\nThe number of nonmatches in the data that the transform incorrectly classified as a match, in the confusion matrix for your transform.\n\nNumTrueNegatives -> (long)\n\nThe number of nonmatches in the data that the transform correctly rejected, in the confusion matrix for your transform.\n\nNumFalseNegatives -> (long)\n\nThe number of matches in the data that the transform didn’t find, in the confusion matrix for your transform.\n\nColumnImportances -> (list)\n\nA list of ColumnImportance structures containing column importance metrics, sorted in order of descending importance.\n\n(structure)\n\nA structure containing the column name and column importance score for a column.\n\nColumn importance helps you understand how columns contribute to your model, by identifying which columns in your records are more important than others.\n\nColumnName -> (string)\n\nThe name of a column.\n\nImportance -> (double)\n\nThe column importance score for the column, as a decimal.\n\nLabelCount -> (integer)\n\nThe number of labels available for this transform.\n\nSchema -> (list)\n\nThe Map<Column, Type> object that represents the schema that this transform accepts. Has an upper bound of 100 columns.\n\n(structure)\n\nA key-value pair representing a column and data type that this transform can run against. The Schema parameter of the MLTransform may contain up to 100 of these structures.\n\nName -> (string)\n\nThe name of the column.\n\nDataType -> (string)\n\nThe type of data in the column.\n\nRole -> (string)\n\nThe name or Amazon Resource Name (ARN) of the IAM role with the required permissions.\n\nGlueVersion -> (string)\n\nThis value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see Glue Versions in the developer guide.\n\nMaxCapacity -> (double)\n\nThe number of Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nWhen the WorkerType field is set to a value other than Standard , the MaxCapacity field is set automatically and becomes read-only.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when this task runs.\n\nTimeout -> (integer)\n\nThe timeout for a task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).\n\nMaxRetries -> (integer)\n\nThe maximum number of times to retry a task for this transform after a task run fails.\n\nTransformEncryption -> (structure)\n\nThe encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.\n\nMlUserDataEncryption -> (structure)\n\nAn MLUserDataEncryption object containing the encryption mode and customer-provided KMS key ID.\n\nMlUserDataEncryptionMode -> (string)\n\nThe encryption mode applied to user data. Valid values are:\n\nDISABLED: encryption is disabled\n\nSSEKMS: use of server-side encryption with Key Management Service (SSE-KMS) for user data stored in Amazon S3.\n\nKmsKeyId -> (string)\n\nThe ID for the customer-provided KMS key.\n\nTaskRunSecurityConfigurationName -> (string)\n\nThe name of the security configuration."
    },
    {
      "command_name": "get-ml-transforms",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-ml-transforms.html",
      "command_description": "Description\n\nGets a sortable, filterable list of existing Glue machine learning transforms. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue, and you can retrieve their metadata by calling GetMLTransforms .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-ml-transforms\n[--next-token <value>]\n[--max-results <value>]\n[--filter <value>]\n[--sort <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--filter <value>]",
        "[--sort <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA paginated token to offset the results.\n\n--max-results (integer)\n\nThe maximum number of results to return.\n\n--filter (structure)\n\nThe filter transformation criteria.\n\nName -> (string)\n\nA unique transform name that is used to filter the machine learning transforms.\n\nTransformType -> (string)\n\nThe type of machine learning transform that is used to filter the machine learning transforms.\n\nStatus -> (string)\n\nFilters the list of machine learning transforms by the last known status of the transforms (to indicate whether a transform can be used or not). One of “NOT_READY”, “READY”, or “DELETING”.\n\nGlueVersion -> (string)\n\nThis value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see Glue Versions in the developer guide.\n\nCreatedBefore -> (timestamp)\n\nThe time and date before which the transforms were created.\n\nCreatedAfter -> (timestamp)\n\nThe time and date after which the transforms were created.\n\nLastModifiedBefore -> (timestamp)\n\nFilter on transforms last modified before this date.\n\nLastModifiedAfter -> (timestamp)\n\nFilter on transforms last modified after this date.\n\nSchema -> (list)\n\nFilters on datasets with a specific schema. The Map<Column, Type> object is an array of key-value pairs representing the schema this transform accepts, where Column is the name of a column, and Type is the type of the data such as an integer or string. Has an upper bound of 100 columns.\n\n(structure)\n\nA key-value pair representing a column and data type that this transform can run against. The Schema parameter of the MLTransform may contain up to 100 of these structures.\n\nName -> (string)\n\nThe name of the column.\n\nDataType -> (string)\n\nThe type of data in the column.\n\nShorthand Syntax:\n\nName=string,TransformType=string,Status=string,GlueVersion=string,CreatedBefore=timestamp,CreatedAfter=timestamp,LastModifiedBefore=timestamp,LastModifiedAfter=timestamp,Schema=[{Name=string,DataType=string},{Name=string,DataType=string}]\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"TransformType\": \"FIND_MATCHES\",\n  \"Status\": \"NOT_READY\"|\"READY\"|\"DELETING\",\n  \"GlueVersion\": \"string\",\n  \"CreatedBefore\": timestamp,\n  \"CreatedAfter\": timestamp,\n  \"LastModifiedBefore\": timestamp,\n  \"LastModifiedAfter\": timestamp,\n  \"Schema\": [\n    {\n      \"Name\": \"string\",\n      \"DataType\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--sort (structure)\n\nThe sorting criteria.\n\nColumn -> (string)\n\nThe column to be used in the sorting criteria that are associated with the machine learning transform.\n\nSortDirection -> (string)\n\nThe sort direction to be used in the sorting criteria that are associated with the machine learning transform.\n\nShorthand Syntax:\n\nColumn=string,SortDirection=string\n\n\nJSON Syntax:\n\n{\n  \"Column\": \"NAME\"|\"TRANSFORM_TYPE\"|\"STATUS\"|\"CREATED\"|\"LAST_MODIFIED\",\n  \"SortDirection\": \"DESCENDING\"|\"ASCENDING\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTransforms -> (list)\n\nA list of machine learning transforms.\n\n(structure)\n\nA structure for a machine learning transform.\n\nTransformId -> (string)\n\nThe unique transform ID that is generated for the machine learning transform. The ID is guaranteed to be unique and does not change.\n\nName -> (string)\n\nA user-defined name for the machine learning transform. Names are not guaranteed unique and can be changed at any time.\n\nDescription -> (string)\n\nA user-defined, long-form description text for the machine learning transform. Descriptions are not guaranteed to be unique and can be changed at any time.\n\nStatus -> (string)\n\nThe current status of the machine learning transform.\n\nCreatedOn -> (timestamp)\n\nA timestamp. The time and date that this machine learning transform was created.\n\nLastModifiedOn -> (timestamp)\n\nA timestamp. The last point in time when this machine learning transform was modified.\n\nInputRecordTables -> (list)\n\nA list of Glue table definitions used by the transform.\n\n(structure)\n\nThe database and table in the Glue Data Catalog that is used for input or output data.\n\nDatabaseName -> (string)\n\nA database name in the Glue Data Catalog.\n\nTableName -> (string)\n\nA table name in the Glue Data Catalog.\n\nCatalogId -> (string)\n\nA unique identifier for the Glue Data Catalog.\n\nConnectionName -> (string)\n\nThe name of the connection to the Glue Data Catalog.\n\nParameters -> (structure)\n\nA TransformParameters object. You can use parameters to tune (customize) the behavior of the machine learning transform by specifying what data it learns from and your preference on various tradeoffs (such as precious vs. recall, or accuracy vs. cost).\n\nTransformType -> (string)\n\nThe type of machine learning transform.\n\nFor information about the types of machine learning transforms, see Creating Machine Learning Transforms .\n\nFindMatchesParameters -> (structure)\n\nThe parameters for the find matches algorithm.\n\nPrimaryKeyColumnName -> (string)\n\nThe name of a column that uniquely identifies rows in the source table. Used to help identify matching records.\n\nPrecisionRecallTradeoff -> (double)\n\nThe value selected when tuning your transform for a balance between precision and recall. A value of 0.5 means no preference; a value of 1.0 means a bias purely for precision, and a value of 0.0 means a bias for recall. Because this is a tradeoff, choosing values close to 1.0 means very low recall, and choosing values close to 0.0 results in very low precision.\n\nThe precision metric indicates how often your model is correct when it predicts a match.\n\nThe recall metric indicates that for an actual match, how often your model predicts the match.\n\nAccuracyCostTradeoff -> (double)\n\nThe value that is selected when tuning your transform for a balance between accuracy and cost. A value of 0.5 means that the system balances accuracy and cost concerns. A value of 1.0 means a bias purely for accuracy, which typically results in a higher cost, sometimes substantially higher. A value of 0.0 means a bias purely for cost, which results in a less accurate FindMatches transform, sometimes with unacceptable accuracy.\n\nAccuracy measures how well the transform finds true positives and true negatives. Increasing accuracy requires more machine resources and cost. But it also results in increased recall.\n\nCost measures how many compute resources, and thus money, are consumed to run the transform.\n\nEnforceProvidedLabels -> (boolean)\n\nThe value to switch on or off to force the output to match the provided labels from users. If the value is True , the find matches transform forces the output to match the provided labels. The results override the normal conflation results. If the value is False , the find matches transform does not ensure all the labels provided are respected, and the results rely on the trained model.\n\nNote that setting this value to true may increase the conflation execution time.\n\nEvaluationMetrics -> (structure)\n\nAn EvaluationMetrics object. Evaluation metrics provide an estimate of the quality of your machine learning transform.\n\nTransformType -> (string)\n\nThe type of machine learning transform.\n\nFindMatchesMetrics -> (structure)\n\nThe evaluation metrics for the find matches algorithm.\n\nAreaUnderPRCurve -> (double)\n\nThe area under the precision/recall curve (AUPRC) is a single number measuring the overall quality of the transform, that is independent of the choice made for precision vs. recall. Higher values indicate that you have a more attractive precision vs. recall tradeoff.\n\nFor more information, see Precision and recall in Wikipedia.\n\nPrecision -> (double)\n\nThe precision metric indicates when often your transform is correct when it predicts a match. Specifically, it measures how well the transform finds true positives from the total true positives possible.\n\nFor more information, see Precision and recall in Wikipedia.\n\nRecall -> (double)\n\nThe recall metric indicates that for an actual match, how often your transform predicts the match. Specifically, it measures how well the transform finds true positives from the total records in the source data.\n\nFor more information, see Precision and recall in Wikipedia.\n\nF1 -> (double)\n\nThe maximum F1 metric indicates the transform’s accuracy between 0 and 1, where 1 is the best accuracy.\n\nFor more information, see F1 score in Wikipedia.\n\nConfusionMatrix -> (structure)\n\nThe confusion matrix shows you what your transform is predicting accurately and what types of errors it is making.\n\nFor more information, see Confusion matrix in Wikipedia.\n\nNumTruePositives -> (long)\n\nThe number of matches in the data that the transform correctly found, in the confusion matrix for your transform.\n\nNumFalsePositives -> (long)\n\nThe number of nonmatches in the data that the transform incorrectly classified as a match, in the confusion matrix for your transform.\n\nNumTrueNegatives -> (long)\n\nThe number of nonmatches in the data that the transform correctly rejected, in the confusion matrix for your transform.\n\nNumFalseNegatives -> (long)\n\nThe number of matches in the data that the transform didn’t find, in the confusion matrix for your transform.\n\nColumnImportances -> (list)\n\nA list of ColumnImportance structures containing column importance metrics, sorted in order of descending importance.\n\n(structure)\n\nA structure containing the column name and column importance score for a column.\n\nColumn importance helps you understand how columns contribute to your model, by identifying which columns in your records are more important than others.\n\nColumnName -> (string)\n\nThe name of a column.\n\nImportance -> (double)\n\nThe column importance score for the column, as a decimal.\n\nLabelCount -> (integer)\n\nA count identifier for the labeling files generated by Glue for this transform. As you create a better transform, you can iteratively download, label, and upload the labeling file.\n\nSchema -> (list)\n\nA map of key-value pairs representing the columns and data types that this transform can run against. Has an upper bound of 100 columns.\n\n(structure)\n\nA key-value pair representing a column and data type that this transform can run against. The Schema parameter of the MLTransform may contain up to 100 of these structures.\n\nName -> (string)\n\nThe name of the column.\n\nDataType -> (string)\n\nThe type of data in the column.\n\nRole -> (string)\n\nThe name or Amazon Resource Name (ARN) of the IAM role with the required permissions. The required permissions include both Glue service role permissions to Glue resources, and Amazon S3 permissions required by the transform.\n\nThis role needs Glue service role permissions to allow access to resources in Glue. See Attach a Policy to IAM Users That Access Glue .\n\nThis role needs permission to your Amazon Simple Storage Service (Amazon S3) sources, targets, temporary directory, scripts, and any libraries used by the task run for this transform.\n\nGlueVersion -> (string)\n\nThis value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see Glue Versions in the developer guide.\n\nMaxCapacity -> (double)\n\nThe number of Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nMaxCapacity is a mutually exclusive option with NumberOfWorkers and WorkerType .\n\nIf either NumberOfWorkers or WorkerType is set, then MaxCapacity cannot be set.\n\nIf MaxCapacity is set then neither NumberOfWorkers or WorkerType can be set.\n\nIf WorkerType is set, then NumberOfWorkers is required (and vice versa).\n\nMaxCapacity and NumberOfWorkers must both be at least 1.\n\nWhen the WorkerType field is set to a value other than Standard , the MaxCapacity field is set automatically and becomes read-only.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a task of this transform runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nMaxCapacity is a mutually exclusive option with NumberOfWorkers and WorkerType .\n\nIf either NumberOfWorkers or WorkerType is set, then MaxCapacity cannot be set.\n\nIf MaxCapacity is set then neither NumberOfWorkers or WorkerType can be set.\n\nIf WorkerType is set, then NumberOfWorkers is required (and vice versa).\n\nMaxCapacity and NumberOfWorkers must both be at least 1.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a task of the transform runs.\n\nIf WorkerType is set, then NumberOfWorkers is required (and vice versa).\n\nTimeout -> (integer)\n\nThe timeout in minutes of the machine learning transform.\n\nMaxRetries -> (integer)\n\nThe maximum number of times to retry after an MLTaskRun of the machine learning transform fails.\n\nTransformEncryption -> (structure)\n\nThe encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.\n\nMlUserDataEncryption -> (structure)\n\nAn MLUserDataEncryption object containing the encryption mode and customer-provided KMS key ID.\n\nMlUserDataEncryptionMode -> (string)\n\nThe encryption mode applied to user data. Valid values are:\n\nDISABLED: encryption is disabled\n\nSSEKMS: use of server-side encryption with Key Management Service (SSE-KMS) for user data stored in Amazon S3.\n\nKmsKeyId -> (string)\n\nThe ID for the customer-provided KMS key.\n\nTaskRunSecurityConfigurationName -> (string)\n\nThe name of the security configuration.\n\nNextToken -> (string)\n\nA pagination token, if more results are available."
    },
    {
      "command_name": "get-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-partition.html",
      "command_description": "Description\n\nRetrieves information about a specified partition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partition-values <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partition-values <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partition in question resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the partition resides.\n\n--table-name (string)\n\nThe name of the partition’s table.\n\n--partition-values (list)\n\nThe values that define the partition.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPartition -> (structure)\n\nThe requested information, in the form of a Partition object.\n\nValues -> (list)\n\nThe values of the partition.\n\n(string)\n\nDatabaseName -> (string)\n\nThe name of the catalog database in which to create the partition.\n\nTableName -> (string)\n\nThe name of the database table in which to create the partition.\n\nCreationTime -> (timestamp)\n\nThe time at which the partition was created.\n\nLastAccessTime -> (timestamp)\n\nThe last time at which the partition was accessed.\n\nStorageDescriptor -> (structure)\n\nProvides information about the physical location where the partition is stored.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nParameters -> (map)\n\nThese key-value pairs define partition parameters.\n\nkey -> (string)\n\nvalue -> (string)\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time at which column statistics were computed for this partition.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the partition resides."
    },
    {
      "command_name": "get-partition-indexes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-partition-indexes.html",
      "command_description": "Description\n\nRetrieves the partition indexes associated with a table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-partition-indexes is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: PartitionIndexDescriptorList",
      "command_synopsis": "Synopsis\n  get-partition-indexes\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe catalog ID where the table resides.\n\n--database-name (string)\n\nSpecifies the name of a database from which you want to retrieve partition indexes.\n\n--table-name (string)\n\nSpecifies the name of a table for which you want to retrieve the partition indexes.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPartitionIndexDescriptorList -> (list)\n\nA list of index descriptors.\n\n(structure)\n\nA descriptor for a partition index in a table.\n\nIndexName -> (string)\n\nThe name of the partition index.\n\nKeys -> (list)\n\nA list of one or more keys, as KeySchemaElement structures, for the partition index.\n\n(structure)\n\nA partition key pair consisting of a name and a type.\n\nName -> (string)\n\nThe name of a partition key.\n\nType -> (string)\n\nThe type of a partition key.\n\nIndexStatus -> (string)\n\nThe status of the partition index.\n\nThe possible statuses are:\n\nCREATING: The index is being created. When an index is in a CREATING state, the index or its table cannot be deleted.\n\nACTIVE: The index creation succeeds.\n\nFAILED: The index creation fails.\n\nDELETING: The index is deleted from the list of indexes.\n\nBackfillErrors -> (list)\n\nA list of errors that can occur when registering partition indexes for an existing table.\n\n(structure)\n\nA list of errors that can occur when registering partition indexes for an existing table.\n\nThese errors give the details about why an index registration failed and provide a limited number of partitions in the response, so that you can fix the partitions at fault and try registering the index again. The most common set of errors that can occur are categorized as follows:\n\nEncryptedPartitionError: The partitions are encrypted.\n\nInvalidPartitionTypeDataError: The partition value doesn’t match the data type for that partition column.\n\nMissingPartitionValueError: The partitions are encrypted.\n\nUnsupportedPartitionCharacterError: Characters inside the partition value are not supported. For example: U+0000 , U+0001, U+0002.\n\nInternalError: Any error which does not belong to other error codes.\n\nCode -> (string)\n\nThe error code for an error that occurred when registering partition indexes for an existing table.\n\nPartitions -> (list)\n\nA list of a limited number of partitions in the response.\n\n(structure)\n\nContains a list of values defining partitions.\n\nValues -> (list)\n\nThe list of values.\n\n(string)\n\nNextToken -> (string)\n\nA continuation token, present if the current list segment is not the last."
    },
    {
      "command_name": "get-partitions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-partitions.html",
      "command_description": "Description\n\nRetrieves information about the partitions in a table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-partitions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Partitions",
      "command_synopsis": "Synopsis\n  get-partitions\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n[--expression <value>]\n[--segment <value>]\n[--exclude-column-schema | --no-exclude-column-schema]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "[--expression <value>]",
        "[--segment <value>]",
        "[--exclude-column-schema | --no-exclude-column-schema]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partitions in question reside. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the partitions reside.\n\n--table-name (string)\n\nThe name of the partitions’ table.\n\n--expression (string)\n\nAn expression that filters the partitions to be returned.\n\nThe expression uses SQL syntax similar to the SQL WHERE filter clause. The SQL statement parser JSQLParser parses the expression.\n\nOperators : The following are the operators that you can use in the Expression API call:\n\n=\n\nChecks whether the values of the two operands are equal; if yes, then the condition becomes true.\n\nExample: Assume ‘variable a’ holds 10 and ‘variable b’ holds 20.\n\n(a = b) is not true.\n\n< >\n\nChecks whether the values of two operands are equal; if the values are not equal, then the condition becomes true.\n\nExample: (a < > b) is true.\n\n>\n\nChecks whether the value of the left operand is greater than the value of the right operand; if yes, then the condition becomes true.\n\nExample: (a > b) is not true.\n\n<\n\nChecks whether the value of the left operand is less than the value of the right operand; if yes, then the condition becomes true.\n\nExample: (a < b) is true.\n\n>=\n\nChecks whether the value of the left operand is greater than or equal to the value of the right operand; if yes, then the condition becomes true.\n\nExample: (a >= b) is not true.\n\n<=\n\nChecks whether the value of the left operand is less than or equal to the value of the right operand; if yes, then the condition becomes true.\n\nExample: (a <= b) is true.\n\nAND, OR, IN, BETWEEN, LIKE, NOT, IS NULL\n\nLogical operators.\n\nSupported Partition Key Types : The following are the supported partition keys.\n\nstring\n\ndate\n\ntimestamp\n\nint\n\nbigint\n\nlong\n\ntinyint\n\nsmallint\n\ndecimal\n\nIf an type is encountered that is not valid, an exception is thrown.\n\nThe following list shows the valid operators on each type. When you define a crawler, the partitionKey type is created as a STRING , to be compatible with the catalog partitions.\n\nSample API Call :\n\n--segment (structure)\n\nThe segment of the table’s partitions to scan in this request.\n\nSegmentNumber -> (integer)\n\nThe zero-based index number of the segment. For example, if the total number of segments is 4, SegmentNumber values range from 0 through 3.\n\nTotalSegments -> (integer)\n\nThe total number of segments.\n\nShorthand Syntax:\n\nSegmentNumber=integer,TotalSegments=integer\n\n\nJSON Syntax:\n\n{\n  \"SegmentNumber\": integer,\n  \"TotalSegments\": integer\n}\n\n\n--exclude-column-schema | --no-exclude-column-schema (boolean)\n\nWhen true, specifies not returning the partition column schema. Useful when you are interested only in other partition attributes such as partition values or location. This approach avoids the problem of a large response by not returning duplicate data.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPartitions -> (list)\n\nA list of requested partitions.\n\n(structure)\n\nRepresents a slice of table data.\n\nValues -> (list)\n\nThe values of the partition.\n\n(string)\n\nDatabaseName -> (string)\n\nThe name of the catalog database in which to create the partition.\n\nTableName -> (string)\n\nThe name of the database table in which to create the partition.\n\nCreationTime -> (timestamp)\n\nThe time at which the partition was created.\n\nLastAccessTime -> (timestamp)\n\nThe last time at which the partition was accessed.\n\nStorageDescriptor -> (structure)\n\nProvides information about the physical location where the partition is stored.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nParameters -> (map)\n\nThese key-value pairs define partition parameters.\n\nkey -> (string)\n\nvalue -> (string)\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time at which column statistics were computed for this partition.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the partition resides.\n\nNextToken -> (string)\n\nA continuation token, if the returned list of partitions does not include the last one."
    },
    {
      "command_name": "get-plan",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-plan.html",
      "command_description": "Description\n\nGets code to perform a specified mapping.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-plan\n--mapping <value>\n--source <value>\n[--sinks <value>]\n[--location <value>]\n[--language <value>]\n[--additional-plan-options-map <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mapping <value>",
        "--source <value>",
        "[--sinks <value>]",
        "[--location <value>]",
        "[--language <value>]",
        "[--additional-plan-options-map <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mapping (list)\n\nThe list of mappings from a source table to target tables.\n\n(structure)\n\nDefines a mapping.\n\nSourceTable -> (string)\n\nThe name of the source table.\n\nSourcePath -> (string)\n\nThe source path.\n\nSourceType -> (string)\n\nThe source type.\n\nTargetTable -> (string)\n\nThe target table.\n\nTargetPath -> (string)\n\nThe target path.\n\nTargetType -> (string)\n\nThe target type.\n\nShorthand Syntax:\n\nSourceTable=string,SourcePath=string,SourceType=string,TargetTable=string,TargetPath=string,TargetType=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"SourceTable\": \"string\",\n    \"SourcePath\": \"string\",\n    \"SourceType\": \"string\",\n    \"TargetTable\": \"string\",\n    \"TargetPath\": \"string\",\n    \"TargetType\": \"string\"\n  }\n  ...\n]\n\n\n--source (structure)\n\nThe source table.\n\nDatabaseName -> (string)\n\nThe database in which the table metadata resides.\n\nTableName -> (string)\n\nThe name of the table in question.\n\nShorthand Syntax:\n\nDatabaseName=string,TableName=string\n\n\nJSON Syntax:\n\n{\n  \"DatabaseName\": \"string\",\n  \"TableName\": \"string\"\n}\n\n\n--sinks (list)\n\nThe target tables.\n\n(structure)\n\nSpecifies a table definition in the Glue Data Catalog.\n\nDatabaseName -> (string)\n\nThe database in which the table metadata resides.\n\nTableName -> (string)\n\nThe name of the table in question.\n\nShorthand Syntax:\n\nDatabaseName=string,TableName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"DatabaseName\": \"string\",\n    \"TableName\": \"string\"\n  }\n  ...\n]\n\n\n--location (structure)\n\nThe parameters for the mapping.\n\nJdbc -> (list)\n\nA JDBC location.\n\n(structure)\n\nAn argument or property of a node.\n\nName -> (string)\n\nThe name of the argument or property.\n\nValue -> (string)\n\nThe value of the argument or property.\n\nParam -> (boolean)\n\nTrue if the value is used as a parameter.\n\nS3 -> (list)\n\nAn Amazon Simple Storage Service (Amazon S3) location.\n\n(structure)\n\nAn argument or property of a node.\n\nName -> (string)\n\nThe name of the argument or property.\n\nValue -> (string)\n\nThe value of the argument or property.\n\nParam -> (boolean)\n\nTrue if the value is used as a parameter.\n\nDynamoDB -> (list)\n\nAn Amazon DynamoDB table location.\n\n(structure)\n\nAn argument or property of a node.\n\nName -> (string)\n\nThe name of the argument or property.\n\nValue -> (string)\n\nThe value of the argument or property.\n\nParam -> (boolean)\n\nTrue if the value is used as a parameter.\n\nShorthand Syntax:\n\nJdbc=[{Name=string,Value=string,Param=boolean},{Name=string,Value=string,Param=boolean}],S3=[{Name=string,Value=string,Param=boolean},{Name=string,Value=string,Param=boolean}],DynamoDB=[{Name=string,Value=string,Param=boolean},{Name=string,Value=string,Param=boolean}]\n\n\nJSON Syntax:\n\n{\n  \"Jdbc\": [\n    {\n      \"Name\": \"string\",\n      \"Value\": \"string\",\n      \"Param\": true|false\n    }\n    ...\n  ],\n  \"S3\": [\n    {\n      \"Name\": \"string\",\n      \"Value\": \"string\",\n      \"Param\": true|false\n    }\n    ...\n  ],\n  \"DynamoDB\": [\n    {\n      \"Name\": \"string\",\n      \"Value\": \"string\",\n      \"Param\": true|false\n    }\n    ...\n  ]\n}\n\n\n--language (string)\n\nThe programming language of the code to perform the mapping.\n\nPossible values:\n\nPYTHON\n\nSCALA\n\n--additional-plan-options-map (map)\n\nA map to hold additional optional key-value parameters.\n\nCurrently, these key-value pairs are supported:\n\ninferSchema — Specifies whether to set inferSchema to true or false for the default script generated by an Glue job. For example, to set inferSchema to true, pass the following key value pair: --additional-plan-options-map '{\"inferSchema\":\"true\"}'\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPythonScript -> (string)\n\nA Python script to perform the mapping.\n\nScalaCode -> (string)\n\nThe Scala code to perform the mapping.",
      "command_examples": "Examples\n\nTo get the generated code for mapping data from source tables to target tables\n\nThe following get-plan retrieves the generated code for mapping columns from the data source to the data target.\n\naws glue get-plan --mapping '[ \\\n    { \\\n        \"SourcePath\":\"sensorid\", \\\n        \"SourceTable\":\"anything\", \\\n        \"SourceType\":\"int\", \\\n        \"TargetPath\":\"sensorid\", \\\n        \"TargetTable\":\"anything\", \\\n        \"TargetType\":\"int\" \\\n    }, \\\n    { \\\n        \"SourcePath\":\"currenttemperature\", \\\n        \"SourceTable\":\"anything\", \\\n        \"SourceType\":\"int\", \\\n        \"TargetPath\":\"currenttemperature\", \\\n        \"TargetTable\":\"anything\", \\\n        \"TargetType\":\"int\" \\\n    }, \\\n    { \\\n        \"SourcePath\":\"status\", \\\n        \"SourceTable\":\"anything\", \\\n        \"SourceType\":\"string\", \\\n        \"TargetPath\":\"status\", \\\n        \"TargetTable\":\"anything\", \\\n        \"TargetType\":\"string\" \\\n    }]' \\\n    --source '{ \\\n        \"DatabaseName\":\"tempdb\", \\\n        \"TableName\":\"s3-source\" \\\n    }' \\\n    --sinks '[ \\\n        { \\\n            \"DatabaseName\":\"tempdb\", \\\n            \"TableName\":\"my-s3-sink\" \\\n        }]'\n    --language \"scala\"\n    --endpoint https://glue.us-east-1.amazonaws.com\n    --output \"text\"\n\n\nOutput:\n\nimport com.amazonaws.services.glue.ChoiceOption\nimport com.amazonaws.services.glue.GlueContext\nimport com.amazonaws.services.glue.MappingSpec\nimport com.amazonaws.services.glue.ResolveSpec\nimport com.amazonaws.services.glue.errors.CallSite\nimport com.amazonaws.services.glue.util.GlueArgParser\nimport com.amazonaws.services.glue.util.Job\nimport com.amazonaws.services.glue.util.JsonOptions\nimport org.apache.spark.SparkContext\nimport scala.collection.JavaConverters._\n\nobject GlueApp {\n  def main(sysArgs: Array[String]) {\n    val spark: SparkContext = new SparkContext()\n    val glueContext: GlueContext = new GlueContext(spark)\n    // @params: [JOB_NAME]\n    val args = GlueArgParser.getResolvedOptions(sysArgs, Seq(\"JOB_NAME\").toArray)\n    Job.init(args(\"JOB_NAME\"), glueContext, args.asJava)\n    // @type: DataSource\n    // @args: [database = \"tempdb\", table_name = \"s3-source\", transformation_ctx = \"datasource0\"]\n    // @return: datasource0\n    // @inputs: []\n    val datasource0 = glueContext.getCatalogSource(database = \"tempdb\", tableName = \"s3-source\", redshiftTmpDir = \"\", transformationContext = \"datasource0\").getDynamicFrame()\n    // @type: ApplyMapping\n    // @args: [mapping = [(\"sensorid\", \"int\", \"sensorid\", \"int\"), (\"currenttemperature\", \"int\", \"currenttemperature\", \"int\"), (\"status\", \"string\", \"status\", \"string\")], transformation_ctx = \"applymapping1\"]\n    // @return: applymapping1\n    // @inputs: [frame = datasource0]\n    val applymapping1 = datasource0.applyMapping(mappings = Seq((\"sensorid\", \"int\", \"sensorid\", \"int\"), (\"currenttemperature\", \"int\", \"currenttemperature\", \"int\"), (\"status\", \"string\", \"status\", \"string\")), caseSensitive = false, transformationContext = \"applymapping1\")\n    // @type: SelectFields\n    // @args: [paths = [\"sensorid\", \"currenttemperature\", \"status\"], transformation_ctx = \"selectfields2\"]\n    // @return: selectfields2\n    // @inputs: [frame = applymapping1]\n    val selectfields2 = applymapping1.selectFields(paths = Seq(\"sensorid\", \"currenttemperature\", \"status\"), transformationContext = \"selectfields2\")\n    // @type: ResolveChoice\n    // @args: [choice = \"MATCH_CATALOG\", database = \"tempdb\", table_name = \"my-s3-sink\", transformation_ctx = \"resolvechoice3\"]\n    // @return: resolvechoice3\n    // @inputs: [frame = selectfields2]\n    val resolvechoice3 = selectfields2.resolveChoice(choiceOption = Some(ChoiceOption(\"MATCH_CATALOG\")), database = Some(\"tempdb\"), tableName = Some(\"my-s3-sink\"), transformationContext = \"resolvechoice3\")\n    // @type: DataSink\n    // @args: [database = \"tempdb\", table_name = \"my-s3-sink\", transformation_ctx = \"datasink4\"]\n    // @return: datasink4\n    // @inputs: [frame = resolvechoice3]\n    val datasink4 = glueContext.getCatalogSink(database = \"tempdb\", tableName = \"my-s3-sink\", redshiftTmpDir = \"\", transformationContext = \"datasink4\").writeDynamicFrame(resolvechoice3)\n    Job.commit()\n  }\n}\n\n\nFor more information, see Editing Scripts in AWS Glue in the AWS Glue Developer Guide."
    },
    {
      "command_name": "get-registry",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-registry.html",
      "command_description": "Description\n\nDescribes the specified registry in detail.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-registry\n--registry-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--registry-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (structure)\n\nThis is a wrapper structure that may contain the registry name and Amazon Resource Name (ARN).\n\nRegistryName -> (string)\n\nName of the registry. Used only for lookup. One of RegistryArn or RegistryName has to be provided.\n\nRegistryArn -> (string)\n\nArn of the registry to be updated. One of RegistryArn or RegistryName has to be provided.\n\nShorthand Syntax:\n\nRegistryName=string,RegistryArn=string\n\n\nJSON Syntax:\n\n{\n  \"RegistryName\": \"string\",\n  \"RegistryArn\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRegistryName -> (string)\n\nThe name of the registry.\n\nRegistryArn -> (string)\n\nThe Amazon Resource Name (ARN) of the registry.\n\nDescription -> (string)\n\nA description of the registry.\n\nStatus -> (string)\n\nThe status of the registry.\n\nCreatedTime -> (string)\n\nThe date and time the registry was created.\n\nUpdatedTime -> (string)\n\nThe date and time the registry was updated."
    },
    {
      "command_name": "get-resource-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-resource-policies.html",
      "command_description": "Description\n\nRetrieves the resource policies set on individual resources by Resource Access Manager during cross-account permission grants. Also retrieves the Data Catalog resource policy.\n\nIf you enabled metadata encryption in Data Catalog settings, and you do not have permission on the KMS key, the operation can’t return the Data Catalog resource policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-resource-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: GetResourcePoliciesResponseList",
      "command_synopsis": "Synopsis\n  get-resource-policies\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGetResourcePoliciesResponseList -> (list)\n\nA list of the individual resource policies and the account-level resource policy.\n\n(structure)\n\nA structure for returning a resource policy.\n\nPolicyInJson -> (string)\n\nContains the requested policy document, in JSON format.\n\nPolicyHash -> (string)\n\nContains the hash value associated with this policy.\n\nCreateTime -> (timestamp)\n\nThe date and time at which the policy was created.\n\nUpdateTime -> (timestamp)\n\nThe date and time at which the policy was last updated.\n\nNextToken -> (string)\n\nA continuation token, if the returned list does not contain the last resource policy available."
    },
    {
      "command_name": "get-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-resource-policy.html",
      "command_description": "Description\n\nRetrieves a specified resource policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resource-policy\n[--resource-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--resource-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the Glue resource for which to retrieve the resource policy. If not supplied, the Data Catalog resource policy is returned. Use GetResourcePolicies to view all existing resource policies. For more information see Specifying Glue Resource ARNs .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyInJson -> (string)\n\nContains the requested policy document, in JSON format.\n\nPolicyHash -> (string)\n\nContains the hash value associated with this policy.\n\nCreateTime -> (timestamp)\n\nThe date and time at which the policy was created.\n\nUpdateTime -> (timestamp)\n\nThe date and time at which the policy was last updated."
    },
    {
      "command_name": "get-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-schema.html",
      "command_description": "Description\n\nDescribes the specified schema in detail.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-schema\n--schema-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nThis is a wrapper structure to contain schema identity fields. The structure contains:\n\nSchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. Either SchemaArn or SchemaName and RegistryName has to be provided.\n\nSchemaId$SchemaName: The name of the schema. Either SchemaArn or SchemaName and RegistryName has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRegistryName -> (string)\n\nThe name of the registry.\n\nRegistryArn -> (string)\n\nThe Amazon Resource Name (ARN) of the registry.\n\nSchemaName -> (string)\n\nThe name of the schema.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema.\n\nDescription -> (string)\n\nA description of schema if specified when created\n\nDataFormat -> (string)\n\nThe data format of the schema definition. Currently AVRO and JSON are supported.\n\nCompatibility -> (string)\n\nThe compatibility mode of the schema.\n\nSchemaCheckpoint -> (long)\n\nThe version number of the checkpoint (the last time the compatibility mode was changed).\n\nLatestSchemaVersion -> (long)\n\nThe latest version of the schema associated with the returned schema definition.\n\nNextSchemaVersion -> (long)\n\nThe next version of the schema associated with the returned schema definition.\n\nSchemaStatus -> (string)\n\nThe status of the schema.\n\nCreatedTime -> (string)\n\nThe date and time the schema was created.\n\nUpdatedTime -> (string)\n\nThe date and time the schema was updated."
    },
    {
      "command_name": "get-schema-by-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-schema-by-definition.html",
      "command_description": "Description\n\nRetrieves a schema by the SchemaDefinition . The schema definition is sent to the Schema Registry, canonicalized, and hashed. If the hash is matched within the scope of the SchemaName or ARN (or the default registry, if none is supplied), that schema’s metadata is returned. Otherwise, a 404 or NotFound error is returned. Schema versions in Deleted statuses will not be included in the results.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-schema-by-definition\n--schema-id <value>\n--schema-definition <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-id <value>",
        "--schema-definition <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nThis is a wrapper structure to contain schema identity fields. The structure contains:\n\nSchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaId$SchemaName: The name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--schema-definition (string)\n\nThe definition of the schema for which schema details are required.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaVersionId -> (string)\n\nThe schema ID of the schema version.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema.\n\nDataFormat -> (string)\n\nThe data format of the schema definition. Currently only AVRO and JSON are supported.\n\nStatus -> (string)\n\nThe status of the schema version.\n\nCreatedTime -> (string)\n\nThe date and time the schema was created."
    },
    {
      "command_name": "get-schema-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-schema-version.html",
      "command_description": "Description\n\nGet the specified schema by its unique ID assigned when a version of the schema is created or registered. Schema versions in Deleted status will not be included in the results.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-schema-version\n[--schema-id <value>]\n[--schema-version-id <value>]\n[--schema-version-number <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--schema-id <value>]",
        "[--schema-version-id <value>]",
        "[--schema-version-number <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nThis is a wrapper structure to contain schema identity fields. The structure contains:\n\nSchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. Either SchemaArn or SchemaName and RegistryName has to be provided.\n\nSchemaId$SchemaName: The name of the schema. Either SchemaArn or SchemaName and RegistryName has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--schema-version-id (string)\n\nThe SchemaVersionId of the schema version. This field is required for fetching by schema ID. Either this or the SchemaId wrapper has to be provided.\n\n--schema-version-number (structure)\n\nThe version number of the schema.\n\nLatestVersion -> (boolean)\n\nThe latest version available for the schema.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nShorthand Syntax:\n\nLatestVersion=boolean,VersionNumber=long\n\n\nJSON Syntax:\n\n{\n  \"LatestVersion\": true|false,\n  \"VersionNumber\": long\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaVersionId -> (string)\n\nThe SchemaVersionId of the schema version.\n\nSchemaDefinition -> (string)\n\nThe schema definition for the schema ID.\n\nDataFormat -> (string)\n\nThe data format of the schema definition. Currently AVRO and JSON are supported.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nStatus -> (string)\n\nThe status of the schema version.\n\nCreatedTime -> (string)\n\nThe date and time the schema version was created."
    },
    {
      "command_name": "get-schema-versions-diff",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-schema-versions-diff.html",
      "command_description": "Description\n\nFetches the schema version difference in the specified difference type between two stored schema versions in the Schema Registry.\n\nThis API allows you to compare two schema versions between two schema definitions under the same schema.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-schema-versions-diff\n--schema-id <value>\n--first-schema-version-number <value>\n--second-schema-version-number <value>\n--schema-diff-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-id <value>",
        "--first-schema-version-number <value>",
        "--second-schema-version-number <value>",
        "--schema-diff-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nThis is a wrapper structure to contain schema identity fields. The structure contains:\n\nSchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaId$SchemaName: The name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--first-schema-version-number (structure)\n\nThe first of the two schema versions to be compared.\n\nLatestVersion -> (boolean)\n\nThe latest version available for the schema.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nShorthand Syntax:\n\nLatestVersion=boolean,VersionNumber=long\n\n\nJSON Syntax:\n\n{\n  \"LatestVersion\": true|false,\n  \"VersionNumber\": long\n}\n\n\n--second-schema-version-number (structure)\n\nThe second of the two schema versions to be compared.\n\nLatestVersion -> (boolean)\n\nThe latest version available for the schema.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nShorthand Syntax:\n\nLatestVersion=boolean,VersionNumber=long\n\n\nJSON Syntax:\n\n{\n  \"LatestVersion\": true|false,\n  \"VersionNumber\": long\n}\n\n\n--schema-diff-type (string)\n\nRefers to SYNTAX_DIFF , which is the currently supported diff type.\n\nPossible values:\n\nSYNTAX_DIFF\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDiff -> (string)\n\nThe difference between schemas as a string in JsonPatch format."
    },
    {
      "command_name": "get-security-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-security-configuration.html",
      "command_description": "Description\n\nRetrieves a specified security configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-security-configuration\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the security configuration to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSecurityConfiguration -> (structure)\n\nThe requested security configuration.\n\nName -> (string)\n\nThe name of the security configuration.\n\nCreatedTimeStamp -> (timestamp)\n\nThe time at which this security configuration was created.\n\nEncryptionConfiguration -> (structure)\n\nThe encryption configuration associated with this security configuration.\n\nS3Encryption -> (list)\n\nThe encryption configuration for Amazon Simple Storage Service (Amazon S3) data.\n\n(structure)\n\nSpecifies how Amazon Simple Storage Service (Amazon S3) data should be encrypted.\n\nS3EncryptionMode -> (string)\n\nThe encryption mode to use for Amazon S3 data.\n\nKmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.\n\nCloudWatchEncryption -> (structure)\n\nThe encryption configuration for Amazon CloudWatch.\n\nCloudWatchEncryptionMode -> (string)\n\nThe encryption mode to use for CloudWatch data.\n\nKmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.\n\nJobBookmarksEncryption -> (structure)\n\nThe encryption configuration for job bookmarks.\n\nJobBookmarksEncryptionMode -> (string)\n\nThe encryption mode to use for job bookmarks data.\n\nKmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data."
    },
    {
      "command_name": "get-security-configurations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-security-configurations.html",
      "command_description": "Description\n\nRetrieves a list of all security configurations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-security-configurations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SecurityConfigurations",
      "command_synopsis": "Synopsis\n  get-security-configurations\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSecurityConfigurations -> (list)\n\nA list of security configurations.\n\n(structure)\n\nSpecifies a security configuration.\n\nName -> (string)\n\nThe name of the security configuration.\n\nCreatedTimeStamp -> (timestamp)\n\nThe time at which this security configuration was created.\n\nEncryptionConfiguration -> (structure)\n\nThe encryption configuration associated with this security configuration.\n\nS3Encryption -> (list)\n\nThe encryption configuration for Amazon Simple Storage Service (Amazon S3) data.\n\n(structure)\n\nSpecifies how Amazon Simple Storage Service (Amazon S3) data should be encrypted.\n\nS3EncryptionMode -> (string)\n\nThe encryption mode to use for Amazon S3 data.\n\nKmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.\n\nCloudWatchEncryption -> (structure)\n\nThe encryption configuration for Amazon CloudWatch.\n\nCloudWatchEncryptionMode -> (string)\n\nThe encryption mode to use for CloudWatch data.\n\nKmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.\n\nJobBookmarksEncryption -> (structure)\n\nThe encryption configuration for job bookmarks.\n\nJobBookmarksEncryptionMode -> (string)\n\nThe encryption mode to use for job bookmarks data.\n\nKmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.\n\nNextToken -> (string)\n\nA continuation token, if there are more security configurations to return."
    },
    {
      "command_name": "get-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-table.html",
      "command_description": "Description\n\nRetrieves the Table definition in a Data Catalog for a specified table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-table\n[--catalog-id <value>]\n--database-name <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the table resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.\n\n--name (string)\n\nThe name of the table for which to retrieve the definition. For Hive compatibility, this name is entirely lowercase.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTable -> (structure)\n\nThe Table object that defines the specified table.\n\nName -> (string)\n\nThe table name. For Hive compatibility, this must be entirely lowercase.\n\nDatabaseName -> (string)\n\nThe name of the database where the table metadata resides. For Hive compatibility, this must be all lowercase.\n\nDescription -> (string)\n\nA description of the table.\n\nOwner -> (string)\n\nThe owner of the table.\n\nCreateTime -> (timestamp)\n\nThe time when the table definition was created in the Data Catalog.\n\nUpdateTime -> (timestamp)\n\nThe last time that the table was updated.\n\nLastAccessTime -> (timestamp)\n\nThe last time that the table was accessed. This is usually taken from HDFS, and might not be reliable.\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time that column statistics were computed for this table.\n\nRetention -> (integer)\n\nThe retention time for this table.\n\nStorageDescriptor -> (structure)\n\nA storage descriptor containing information about the physical storage of this table.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nPartitionKeys -> (list)\n\nA list of columns by which the table is partitioned. Only primitive types are supported as partition keys.\n\nWhen you create a table used by Amazon Athena, and you do not specify any partitionKeys , you must at least set the value of partitionKeys to an empty list. For example:\n\n\"PartitionKeys\": []\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nViewOriginalText -> (string)\n\nIf the table is a view, the original text of the view; otherwise null .\n\nViewExpandedText -> (string)\n\nIf the table is a view, the expanded text of the view; otherwise null .\n\nTableType -> (string)\n\nThe type of this table (EXTERNAL_TABLE , VIRTUAL_VIEW , etc.).\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the table.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreatedBy -> (string)\n\nThe person or entity who created the table.\n\nIsRegisteredWithLakeFormation -> (boolean)\n\nIndicates whether the table has been registered with Lake Formation.\n\nTargetTable -> (structure)\n\nA TableIdentifier structure that describes a target table for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database that contains the target table.\n\nName -> (string)\n\nThe name of the target table.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides."
    },
    {
      "command_name": "get-table-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-table-version.html",
      "command_description": "Description\n\nRetrieves a specified version of a table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-table-version\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n[--version-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "[--version-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the tables reside. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.\n\n--table-name (string)\n\nThe name of the table. For Hive compatibility, this name is entirely lowercase.\n\n--version-id (string)\n\nThe ID value of the table version to be retrieved. A VersionID is a string representation of an integer. Each version is incremented by 1.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTableVersion -> (structure)\n\nThe requested table version.\n\nTable -> (structure)\n\nThe table in question.\n\nName -> (string)\n\nThe table name. For Hive compatibility, this must be entirely lowercase.\n\nDatabaseName -> (string)\n\nThe name of the database where the table metadata resides. For Hive compatibility, this must be all lowercase.\n\nDescription -> (string)\n\nA description of the table.\n\nOwner -> (string)\n\nThe owner of the table.\n\nCreateTime -> (timestamp)\n\nThe time when the table definition was created in the Data Catalog.\n\nUpdateTime -> (timestamp)\n\nThe last time that the table was updated.\n\nLastAccessTime -> (timestamp)\n\nThe last time that the table was accessed. This is usually taken from HDFS, and might not be reliable.\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time that column statistics were computed for this table.\n\nRetention -> (integer)\n\nThe retention time for this table.\n\nStorageDescriptor -> (structure)\n\nA storage descriptor containing information about the physical storage of this table.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nPartitionKeys -> (list)\n\nA list of columns by which the table is partitioned. Only primitive types are supported as partition keys.\n\nWhen you create a table used by Amazon Athena, and you do not specify any partitionKeys , you must at least set the value of partitionKeys to an empty list. For example:\n\n\"PartitionKeys\": []\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nViewOriginalText -> (string)\n\nIf the table is a view, the original text of the view; otherwise null .\n\nViewExpandedText -> (string)\n\nIf the table is a view, the expanded text of the view; otherwise null .\n\nTableType -> (string)\n\nThe type of this table (EXTERNAL_TABLE , VIRTUAL_VIEW , etc.).\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the table.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreatedBy -> (string)\n\nThe person or entity who created the table.\n\nIsRegisteredWithLakeFormation -> (boolean)\n\nIndicates whether the table has been registered with Lake Formation.\n\nTargetTable -> (structure)\n\nA TableIdentifier structure that describes a target table for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database that contains the target table.\n\nName -> (string)\n\nThe name of the target table.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides.\n\nVersionId -> (string)\n\nThe ID value that identifies this table version. A VersionId is a string representation of an integer. Each version is incremented by 1."
    },
    {
      "command_name": "get-table-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-table-versions.html",
      "command_description": "Description\n\nRetrieves a list of strings that identify available versions of a specified table.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-table-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: TableVersions",
      "command_synopsis": "Synopsis\n  get-table-versions\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the tables reside. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.\n\n--table-name (string)\n\nThe name of the table. For Hive compatibility, this name is entirely lowercase.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTableVersions -> (list)\n\nA list of strings identifying available versions of the specified table.\n\n(structure)\n\nSpecifies a version of a table.\n\nTable -> (structure)\n\nThe table in question.\n\nName -> (string)\n\nThe table name. For Hive compatibility, this must be entirely lowercase.\n\nDatabaseName -> (string)\n\nThe name of the database where the table metadata resides. For Hive compatibility, this must be all lowercase.\n\nDescription -> (string)\n\nA description of the table.\n\nOwner -> (string)\n\nThe owner of the table.\n\nCreateTime -> (timestamp)\n\nThe time when the table definition was created in the Data Catalog.\n\nUpdateTime -> (timestamp)\n\nThe last time that the table was updated.\n\nLastAccessTime -> (timestamp)\n\nThe last time that the table was accessed. This is usually taken from HDFS, and might not be reliable.\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time that column statistics were computed for this table.\n\nRetention -> (integer)\n\nThe retention time for this table.\n\nStorageDescriptor -> (structure)\n\nA storage descriptor containing information about the physical storage of this table.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nPartitionKeys -> (list)\n\nA list of columns by which the table is partitioned. Only primitive types are supported as partition keys.\n\nWhen you create a table used by Amazon Athena, and you do not specify any partitionKeys , you must at least set the value of partitionKeys to an empty list. For example:\n\n\"PartitionKeys\": []\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nViewOriginalText -> (string)\n\nIf the table is a view, the original text of the view; otherwise null .\n\nViewExpandedText -> (string)\n\nIf the table is a view, the expanded text of the view; otherwise null .\n\nTableType -> (string)\n\nThe type of this table (EXTERNAL_TABLE , VIRTUAL_VIEW , etc.).\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the table.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreatedBy -> (string)\n\nThe person or entity who created the table.\n\nIsRegisteredWithLakeFormation -> (boolean)\n\nIndicates whether the table has been registered with Lake Formation.\n\nTargetTable -> (structure)\n\nA TableIdentifier structure that describes a target table for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database that contains the target table.\n\nName -> (string)\n\nThe name of the target table.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides.\n\nVersionId -> (string)\n\nThe ID value that identifies this table version. A VersionId is a string representation of an integer. Each version is incremented by 1.\n\nNextToken -> (string)\n\nA continuation token, if the list of available versions does not include the last one."
    },
    {
      "command_name": "get-tables",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-tables.html",
      "command_description": "Description\n\nRetrieves the definitions of some or all of the tables in a given Database .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-tables is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: TableList",
      "command_synopsis": "Synopsis\n  get-tables\n[--catalog-id <value>]\n--database-name <value>\n[--expression <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "[--expression <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the tables reside. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe database in the catalog whose tables to list. For Hive compatibility, this name is entirely lowercase.\n\n--expression (string)\n\nA regular expression pattern. If present, only those tables whose names match the pattern are returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTableList -> (list)\n\nA list of the requested Table objects.\n\n(structure)\n\nRepresents a collection of related data organized in columns and rows.\n\nName -> (string)\n\nThe table name. For Hive compatibility, this must be entirely lowercase.\n\nDatabaseName -> (string)\n\nThe name of the database where the table metadata resides. For Hive compatibility, this must be all lowercase.\n\nDescription -> (string)\n\nA description of the table.\n\nOwner -> (string)\n\nThe owner of the table.\n\nCreateTime -> (timestamp)\n\nThe time when the table definition was created in the Data Catalog.\n\nUpdateTime -> (timestamp)\n\nThe last time that the table was updated.\n\nLastAccessTime -> (timestamp)\n\nThe last time that the table was accessed. This is usually taken from HDFS, and might not be reliable.\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time that column statistics were computed for this table.\n\nRetention -> (integer)\n\nThe retention time for this table.\n\nStorageDescriptor -> (structure)\n\nA storage descriptor containing information about the physical storage of this table.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nPartitionKeys -> (list)\n\nA list of columns by which the table is partitioned. Only primitive types are supported as partition keys.\n\nWhen you create a table used by Amazon Athena, and you do not specify any partitionKeys , you must at least set the value of partitionKeys to an empty list. For example:\n\n\"PartitionKeys\": []\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nViewOriginalText -> (string)\n\nIf the table is a view, the original text of the view; otherwise null .\n\nViewExpandedText -> (string)\n\nIf the table is a view, the expanded text of the view; otherwise null .\n\nTableType -> (string)\n\nThe type of this table (EXTERNAL_TABLE , VIRTUAL_VIEW , etc.).\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the table.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreatedBy -> (string)\n\nThe person or entity who created the table.\n\nIsRegisteredWithLakeFormation -> (boolean)\n\nIndicates whether the table has been registered with Lake Formation.\n\nTargetTable -> (structure)\n\nA TableIdentifier structure that describes a target table for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database that contains the target table.\n\nName -> (string)\n\nThe name of the target table.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides.\n\nNextToken -> (string)\n\nA continuation token, present if the current list segment is not the last.",
      "command_examples": "Examples\n\nTo list the definitions of some or all of the tables in the specified database\n\nThe following get-tables example returns information about the tables in the specified database.\n\naws glue get-tables --database-name 'tempdb'\n\n\nOutput:\n\n{\n    \"TableList\": [\n        {\n            \"Name\": \"my-s3-sink\",\n            \"DatabaseName\": \"tempdb\",\n            \"CreateTime\": 1602730539.0,\n            \"UpdateTime\": 1602730539.0,\n            \"Retention\": 0,\n            \"StorageDescriptor\": {\n                \"Columns\": [\n                    {\n                        \"Name\": \"sensorid\",\n                        \"Type\": \"int\"\n                    },\n                    {\n                        \"Name\": \"currenttemperature\",\n                        \"Type\": \"int\"\n                    },\n                    {\n                        \"Name\": \"status\",\n                        \"Type\": \"string\"\n                    }\n                ],\n                \"Location\": \"s3://janetst-bucket-01/test-s3-output/\",\n                \"Compressed\": false,\n                \"NumberOfBuckets\": 0,\n                \"SerdeInfo\": {\n                    \"SerializationLibrary\": \"org.openx.data.jsonserde.JsonSerDe\"\n                },\n                \"SortColumns\": [],\n                \"StoredAsSubDirectories\": false\n            },\n            \"Parameters\": {\n                \"classification\": \"json\"\n            },\n            \"CreatedBy\": \"arn:aws:iam::007436865787:user/JRSTERN\",\n            \"IsRegisteredWithLakeFormation\": false,\n            \"CatalogId\": \"007436865787\"\n        },\n        {\n            \"Name\": \"s3-source\",\n            \"DatabaseName\": \"tempdb\",\n            \"CreateTime\": 1602730658.0,\n            \"UpdateTime\": 1602730658.0,\n            \"Retention\": 0,\n            \"StorageDescriptor\": {\n                \"Columns\": [\n                    {\n                        \"Name\": \"sensorid\",\n                        \"Type\": \"int\"\n                    },\n                    {\n                        \"Name\": \"currenttemperature\",\n                        \"Type\": \"int\"\n                    },\n                    {\n                        \"Name\": \"status\",\n                        \"Type\": \"string\"\n                    }\n                ],\n                \"Location\": \"s3://janetst-bucket-01/\",\n                \"Compressed\": false,\n                \"NumberOfBuckets\": 0,\n                \"SortColumns\": [],\n                \"StoredAsSubDirectories\": false\n            },\n            \"Parameters\": {\n                \"classification\": \"json\"\n            },\n            \"CreatedBy\": \"arn:aws:iam::007436865787:user/JRSTERN\",\n            \"IsRegisteredWithLakeFormation\": false,\n            \"CatalogId\": \"007436865787\"\n        },\n        {\n            \"Name\": \"test-kinesis-input\",\n            \"DatabaseName\": \"tempdb\",\n            \"CreateTime\": 1601507001.0,\n            \"UpdateTime\": 1601507001.0,\n            \"Retention\": 0,\n            \"StorageDescriptor\": {\n                \"Columns\": [\n                    {\n                        \"Name\": \"sensorid\",\n                        \"Type\": \"int\"\n                    },\n                    {\n                        \"Name\": \"currenttemperature\",\n                        \"Type\": \"int\"\n                    },\n                    {\n                        \"Name\": \"status\",\n                        \"Type\": \"string\"\n                    }\n                ],\n                \"Location\": \"my-testing-stream\",\n                \"Compressed\": false,\n                \"NumberOfBuckets\": 0,\n                \"SerdeInfo\": {\n                    \"SerializationLibrary\": \"org.openx.data.jsonserde.JsonSerDe\"\n                },\n                \"SortColumns\": [],\n                \"Parameters\": {\n                    \"kinesisUrl\": \"https://kinesis.us-east-1.amazonaws.com\",\n                    \"streamName\": \"my-testing-stream\",\n                    \"typeOfData\": \"kinesis\"\n                },\n                \"StoredAsSubDirectories\": false\n            },\n            \"Parameters\": {\n                \"classification\": \"json\"\n            },\n            \"CreatedBy\": \"arn:aws:iam::007436865787:user/JRSTERN\",\n            \"IsRegisteredWithLakeFormation\": false,\n            \"CatalogId\": \"007436865787\"\n        }\n    ]\n}\n\n\nFor more information, see Defining Tables in the AWS Glue Data Catalog in the AWS Glue Developer Guide."
    },
    {
      "command_name": "get-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-tags.html",
      "command_description": "Description\n\nRetrieves a list of tags associated with a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-tags\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource for which to retrieve tags.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (map)\n\nThe requested tags.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "get-trigger",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-trigger.html",
      "command_description": "Description\n\nRetrieves the definition of a trigger.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-trigger\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the trigger to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrigger -> (structure)\n\nThe requested trigger definition.\n\nName -> (string)\n\nThe name of the trigger.\n\nWorkflowName -> (string)\n\nThe name of the workflow associated with the trigger.\n\nId -> (string)\n\nReserved for future use.\n\nType -> (string)\n\nThe type of trigger that this is.\n\nState -> (string)\n\nThe current state of the trigger.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received."
    },
    {
      "command_name": "get-triggers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-triggers.html",
      "command_description": "Description\n\nGets all the triggers associated with a job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-triggers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Triggers",
      "command_synopsis": "Synopsis\n  get-triggers\n[--dependent-job-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--dependent-job-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dependent-job-name (string)\n\nThe name of the job to retrieve triggers for. The trigger that can start this job is returned, and if there is no such trigger, all triggers are returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTriggers -> (list)\n\nA list of triggers for the specified job.\n\n(structure)\n\nInformation about a specific trigger.\n\nName -> (string)\n\nThe name of the trigger.\n\nWorkflowName -> (string)\n\nThe name of the workflow associated with the trigger.\n\nId -> (string)\n\nReserved for future use.\n\nType -> (string)\n\nThe type of trigger that this is.\n\nState -> (string)\n\nThe current state of the trigger.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\nNextToken -> (string)\n\nA continuation token, if not all the requested triggers have yet been returned."
    },
    {
      "command_name": "get-user-defined-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-user-defined-function.html",
      "command_description": "Description\n\nRetrieves a specified function definition from the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-user-defined-function\n[--catalog-id <value>]\n--database-name <value>\n--function-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--function-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the function to be retrieved is located. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the function is located.\n\n--function-name (string)\n\nThe name of the function.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUserDefinedFunction -> (structure)\n\nThe requested function definition.\n\nFunctionName -> (string)\n\nThe name of the function.\n\nDatabaseName -> (string)\n\nThe name of the catalog database that contains the function.\n\nClassName -> (string)\n\nThe Java class that contains the function code.\n\nOwnerName -> (string)\n\nThe owner of the function.\n\nOwnerType -> (string)\n\nThe owner type.\n\nCreateTime -> (timestamp)\n\nThe time at which the function was created.\n\nResourceUris -> (list)\n\nThe resource URIs for the function.\n\n(structure)\n\nThe URIs for function resources.\n\nResourceType -> (string)\n\nThe type of the resource.\n\nUri -> (string)\n\nThe URI for accessing the resource.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the function resides."
    },
    {
      "command_name": "get-user-defined-functions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-user-defined-functions.html",
      "command_description": "Description\n\nRetrieves multiple function definitions from the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-user-defined-functions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: UserDefinedFunctions",
      "command_synopsis": "Synopsis\n  get-user-defined-functions\n[--catalog-id <value>]\n[--database-name <value>]\n--pattern <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "[--database-name <value>]",
        "--pattern <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the functions to be retrieved are located. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the functions are located. If none is provided, functions from all the databases across the catalog will be returned.\n\n--pattern (string)\n\nAn optional function-name pattern string that filters the function definitions returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUserDefinedFunctions -> (list)\n\nA list of requested function definitions.\n\n(structure)\n\nRepresents the equivalent of a Hive user-defined function (UDF ) definition.\n\nFunctionName -> (string)\n\nThe name of the function.\n\nDatabaseName -> (string)\n\nThe name of the catalog database that contains the function.\n\nClassName -> (string)\n\nThe Java class that contains the function code.\n\nOwnerName -> (string)\n\nThe owner of the function.\n\nOwnerType -> (string)\n\nThe owner type.\n\nCreateTime -> (timestamp)\n\nThe time at which the function was created.\n\nResourceUris -> (list)\n\nThe resource URIs for the function.\n\n(structure)\n\nThe URIs for function resources.\n\nResourceType -> (string)\n\nThe type of the resource.\n\nUri -> (string)\n\nThe URI for accessing the resource.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the function resides.\n\nNextToken -> (string)\n\nA continuation token, if the list of functions returned does not include the last requested function."
    },
    {
      "command_name": "get-workflow",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-workflow.html",
      "command_description": "Description\n\nRetrieves resource metadata for a workflow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-workflow\n--name <value>\n[--include-graph | --no-include-graph]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--include-graph | --no-include-graph]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the workflow to retrieve.\n\n--include-graph | --no-include-graph (boolean)\n\nSpecifies whether to include a graph when returning the workflow resource metadata.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nWorkflow -> (structure)\n\nThe resource metadata for the workflow.\n\nName -> (string)\n\nThe name of the workflow.\n\nDescription -> (string)\n\nA description of the workflow.\n\nDefaultRunProperties -> (map)\n\nA collection of properties to be used as part of each execution of the workflow. The run properties are made available to each job in the workflow. A job can modify the properties for the next jobs in the flow.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreatedOn -> (timestamp)\n\nThe date and time when the workflow was created.\n\nLastModifiedOn -> (timestamp)\n\nThe date and time when the workflow was last modified.\n\nLastRun -> (structure)\n\nThe information about the last execution of the workflow.\n\nName -> (string)\n\nName of the workflow that was run.\n\nWorkflowRunId -> (string)\n\nThe ID of this workflow run.\n\nPreviousRunId -> (string)\n\nThe ID of the previous workflow run.\n\nWorkflowRunProperties -> (map)\n\nThe workflow run properties which were set during the run.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartedOn -> (timestamp)\n\nThe date and time when the workflow run was started.\n\nCompletedOn -> (timestamp)\n\nThe date and time when the workflow run completed.\n\nStatus -> (string)\n\nThe status of the workflow run.\n\nErrorMessage -> (string)\n\nThis error message describes any error that may have occurred in starting the workflow run. Currently the only error message is “Concurrent runs exceeded for workflow: foo .”\n\nStatistics -> (structure)\n\nThe statistics of the run.\n\nTotalActions -> (integer)\n\nTotal number of Actions in the workflow run.\n\nTimeoutActions -> (integer)\n\nTotal number of Actions that timed out.\n\nFailedActions -> (integer)\n\nTotal number of Actions that have failed.\n\nStoppedActions -> (integer)\n\nTotal number of Actions that have stopped.\n\nSucceededActions -> (integer)\n\nTotal number of Actions that have succeeded.\n\nRunningActions -> (integer)\n\nTotal number Actions in running state.\n\nGraph -> (structure)\n\nThe graph representing all the Glue components that belong to the workflow as nodes and directed connections between them as edges.\n\nNodes -> (list)\n\nA list of the the Glue components belong to the workflow represented as nodes.\n\n(structure)\n\nA node represents an Glue component (trigger, crawler, or job) on a workflow graph.\n\nType -> (string)\n\nThe type of Glue component represented by the node.\n\nName -> (string)\n\nThe name of the Glue component represented by the node.\n\nUniqueId -> (string)\n\nThe unique Id assigned to the node within the workflow.\n\nTriggerDetails -> (structure)\n\nDetails of the Trigger when the node represents a Trigger.\n\nTrigger -> (structure)\n\nThe information of the trigger represented by the trigger node.\n\nName -> (string)\n\nThe name of the trigger.\n\nWorkflowName -> (string)\n\nThe name of the workflow associated with the trigger.\n\nId -> (string)\n\nReserved for future use.\n\nType -> (string)\n\nThe type of trigger that this is.\n\nState -> (string)\n\nThe current state of the trigger.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\nJobDetails -> (structure)\n\nDetails of the Job when the node represents a Job.\n\nJobRuns -> (list)\n\nThe information for the job runs represented by the job node.\n\n(structure)\n\nContains information about a job run.\n\nId -> (string)\n\nThe ID of this job run.\n\nAttempt -> (integer)\n\nThe number of the attempt to run this job.\n\nPreviousRunId -> (string)\n\nThe ID of the previous run of this job. For example, the JobRunId specified in the StartJobRun action.\n\nTriggerName -> (string)\n\nThe name of the trigger that started this job run.\n\nJobName -> (string)\n\nThe name of the job definition being used in this run.\n\nStartedOn -> (timestamp)\n\nThe date and time at which this job run was started.\n\nLastModifiedOn -> (timestamp)\n\nThe last time that this job run was modified.\n\nCompletedOn -> (timestamp)\n\nThe date and time that this job run completed.\n\nJobRunState -> (string)\n\nThe current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see Glue Job Run Statuses .\n\nArguments -> (map)\n\nThe job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nErrorMessage -> (string)\n\nAn error message associated with this job run.\n\nPredecessorRuns -> (list)\n\nA list of predecessors to this job run.\n\n(structure)\n\nA job run that was used in the predicate of a conditional trigger that triggered this job run.\n\nJobName -> (string)\n\nThe name of the job definition used by the predecessor job run.\n\nRunId -> (string)\n\nThe job-run ID of the predecessor job run.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nExecutionTime -> (integer)\n\nThe amount of time (in seconds) that the job run consumed resources.\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nMaxCapacity -> (double)\n\nThe number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job run.\n\nLogGroupName -> (string)\n\nThe name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using KMS. This name can be /aws-glue/jobs/ , in which case the default encryption is NONE . If you add a role name and SecurityConfiguration name (in other words, /aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/ ), then that security configuration is used to encrypt the log group.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.\n\nCrawlerDetails -> (structure)\n\nDetails of the crawler when the node represents a crawler.\n\nCrawls -> (list)\n\nA list of crawls represented by the crawl node.\n\n(structure)\n\nThe details of a crawl in the workflow.\n\nState -> (string)\n\nThe state of the crawler.\n\nStartedOn -> (timestamp)\n\nThe date and time on which the crawl started.\n\nCompletedOn -> (timestamp)\n\nThe date and time on which the crawl completed.\n\nErrorMessage -> (string)\n\nThe error message associated with the crawl.\n\nLogGroup -> (string)\n\nThe log group associated with the crawl.\n\nLogStream -> (string)\n\nThe log stream associated with the crawl.\n\nEdges -> (list)\n\nA list of all the directed connections between the nodes belonging to the workflow.\n\n(structure)\n\nAn edge represents a directed connection between two components on a workflow graph.\n\nSourceId -> (string)\n\nThe unique of the node within the workflow where the edge starts.\n\nDestinationId -> (string)\n\nThe unique of the node within the workflow where the edge ends.\n\nStartingEventBatchCondition -> (structure)\n\nThe batch condition that started the workflow run.\n\nBatchSize -> (integer)\n\nNumber of events in the batch.\n\nBatchWindow -> (integer)\n\nDuration of the batch window in seconds.\n\nGraph -> (structure)\n\nThe graph representing all the Glue components that belong to the workflow as nodes and directed connections between them as edges.\n\nNodes -> (list)\n\nA list of the the Glue components belong to the workflow represented as nodes.\n\n(structure)\n\nA node represents an Glue component (trigger, crawler, or job) on a workflow graph.\n\nType -> (string)\n\nThe type of Glue component represented by the node.\n\nName -> (string)\n\nThe name of the Glue component represented by the node.\n\nUniqueId -> (string)\n\nThe unique Id assigned to the node within the workflow.\n\nTriggerDetails -> (structure)\n\nDetails of the Trigger when the node represents a Trigger.\n\nTrigger -> (structure)\n\nThe information of the trigger represented by the trigger node.\n\nName -> (string)\n\nThe name of the trigger.\n\nWorkflowName -> (string)\n\nThe name of the workflow associated with the trigger.\n\nId -> (string)\n\nReserved for future use.\n\nType -> (string)\n\nThe type of trigger that this is.\n\nState -> (string)\n\nThe current state of the trigger.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\nJobDetails -> (structure)\n\nDetails of the Job when the node represents a Job.\n\nJobRuns -> (list)\n\nThe information for the job runs represented by the job node.\n\n(structure)\n\nContains information about a job run.\n\nId -> (string)\n\nThe ID of this job run.\n\nAttempt -> (integer)\n\nThe number of the attempt to run this job.\n\nPreviousRunId -> (string)\n\nThe ID of the previous run of this job. For example, the JobRunId specified in the StartJobRun action.\n\nTriggerName -> (string)\n\nThe name of the trigger that started this job run.\n\nJobName -> (string)\n\nThe name of the job definition being used in this run.\n\nStartedOn -> (timestamp)\n\nThe date and time at which this job run was started.\n\nLastModifiedOn -> (timestamp)\n\nThe last time that this job run was modified.\n\nCompletedOn -> (timestamp)\n\nThe date and time that this job run completed.\n\nJobRunState -> (string)\n\nThe current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see Glue Job Run Statuses .\n\nArguments -> (map)\n\nThe job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nErrorMessage -> (string)\n\nAn error message associated with this job run.\n\nPredecessorRuns -> (list)\n\nA list of predecessors to this job run.\n\n(structure)\n\nA job run that was used in the predicate of a conditional trigger that triggered this job run.\n\nJobName -> (string)\n\nThe name of the job definition used by the predecessor job run.\n\nRunId -> (string)\n\nThe job-run ID of the predecessor job run.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nExecutionTime -> (integer)\n\nThe amount of time (in seconds) that the job run consumed resources.\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nMaxCapacity -> (double)\n\nThe number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job run.\n\nLogGroupName -> (string)\n\nThe name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using KMS. This name can be /aws-glue/jobs/ , in which case the default encryption is NONE . If you add a role name and SecurityConfiguration name (in other words, /aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/ ), then that security configuration is used to encrypt the log group.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.\n\nCrawlerDetails -> (structure)\n\nDetails of the crawler when the node represents a crawler.\n\nCrawls -> (list)\n\nA list of crawls represented by the crawl node.\n\n(structure)\n\nThe details of a crawl in the workflow.\n\nState -> (string)\n\nThe state of the crawler.\n\nStartedOn -> (timestamp)\n\nThe date and time on which the crawl started.\n\nCompletedOn -> (timestamp)\n\nThe date and time on which the crawl completed.\n\nErrorMessage -> (string)\n\nThe error message associated with the crawl.\n\nLogGroup -> (string)\n\nThe log group associated with the crawl.\n\nLogStream -> (string)\n\nThe log stream associated with the crawl.\n\nEdges -> (list)\n\nA list of all the directed connections between the nodes belonging to the workflow.\n\n(structure)\n\nAn edge represents a directed connection between two components on a workflow graph.\n\nSourceId -> (string)\n\nThe unique of the node within the workflow where the edge starts.\n\nDestinationId -> (string)\n\nThe unique of the node within the workflow where the edge ends.\n\nMaxConcurrentRuns -> (integer)\n\nYou can use this parameter to prevent unwanted multiple updates to data, to control costs, or in some cases, to prevent exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.\n\nBlueprintDetails -> (structure)\n\nThis structure indicates the details of the blueprint that this particular workflow is created from.\n\nBlueprintName -> (string)\n\nThe name of the blueprint.\n\nRunId -> (string)\n\nThe run ID for this blueprint."
    },
    {
      "command_name": "get-workflow-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-workflow-run.html",
      "command_description": "Description\n\nRetrieves the metadata for a given workflow run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-workflow-run\n--name <value>\n--run-id <value>\n[--include-graph | --no-include-graph]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--run-id <value>",
        "[--include-graph | --no-include-graph]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the workflow being run.\n\n--run-id (string)\n\nThe ID of the workflow run.\n\n--include-graph | --no-include-graph (boolean)\n\nSpecifies whether to include the workflow graph in response or not.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRun -> (structure)\n\nThe requested workflow run metadata.\n\nName -> (string)\n\nName of the workflow that was run.\n\nWorkflowRunId -> (string)\n\nThe ID of this workflow run.\n\nPreviousRunId -> (string)\n\nThe ID of the previous workflow run.\n\nWorkflowRunProperties -> (map)\n\nThe workflow run properties which were set during the run.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartedOn -> (timestamp)\n\nThe date and time when the workflow run was started.\n\nCompletedOn -> (timestamp)\n\nThe date and time when the workflow run completed.\n\nStatus -> (string)\n\nThe status of the workflow run.\n\nErrorMessage -> (string)\n\nThis error message describes any error that may have occurred in starting the workflow run. Currently the only error message is “Concurrent runs exceeded for workflow: foo .”\n\nStatistics -> (structure)\n\nThe statistics of the run.\n\nTotalActions -> (integer)\n\nTotal number of Actions in the workflow run.\n\nTimeoutActions -> (integer)\n\nTotal number of Actions that timed out.\n\nFailedActions -> (integer)\n\nTotal number of Actions that have failed.\n\nStoppedActions -> (integer)\n\nTotal number of Actions that have stopped.\n\nSucceededActions -> (integer)\n\nTotal number of Actions that have succeeded.\n\nRunningActions -> (integer)\n\nTotal number Actions in running state.\n\nGraph -> (structure)\n\nThe graph representing all the Glue components that belong to the workflow as nodes and directed connections between them as edges.\n\nNodes -> (list)\n\nA list of the the Glue components belong to the workflow represented as nodes.\n\n(structure)\n\nA node represents an Glue component (trigger, crawler, or job) on a workflow graph.\n\nType -> (string)\n\nThe type of Glue component represented by the node.\n\nName -> (string)\n\nThe name of the Glue component represented by the node.\n\nUniqueId -> (string)\n\nThe unique Id assigned to the node within the workflow.\n\nTriggerDetails -> (structure)\n\nDetails of the Trigger when the node represents a Trigger.\n\nTrigger -> (structure)\n\nThe information of the trigger represented by the trigger node.\n\nName -> (string)\n\nThe name of the trigger.\n\nWorkflowName -> (string)\n\nThe name of the workflow associated with the trigger.\n\nId -> (string)\n\nReserved for future use.\n\nType -> (string)\n\nThe type of trigger that this is.\n\nState -> (string)\n\nThe current state of the trigger.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\nJobDetails -> (structure)\n\nDetails of the Job when the node represents a Job.\n\nJobRuns -> (list)\n\nThe information for the job runs represented by the job node.\n\n(structure)\n\nContains information about a job run.\n\nId -> (string)\n\nThe ID of this job run.\n\nAttempt -> (integer)\n\nThe number of the attempt to run this job.\n\nPreviousRunId -> (string)\n\nThe ID of the previous run of this job. For example, the JobRunId specified in the StartJobRun action.\n\nTriggerName -> (string)\n\nThe name of the trigger that started this job run.\n\nJobName -> (string)\n\nThe name of the job definition being used in this run.\n\nStartedOn -> (timestamp)\n\nThe date and time at which this job run was started.\n\nLastModifiedOn -> (timestamp)\n\nThe last time that this job run was modified.\n\nCompletedOn -> (timestamp)\n\nThe date and time that this job run completed.\n\nJobRunState -> (string)\n\nThe current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see Glue Job Run Statuses .\n\nArguments -> (map)\n\nThe job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nErrorMessage -> (string)\n\nAn error message associated with this job run.\n\nPredecessorRuns -> (list)\n\nA list of predecessors to this job run.\n\n(structure)\n\nA job run that was used in the predicate of a conditional trigger that triggered this job run.\n\nJobName -> (string)\n\nThe name of the job definition used by the predecessor job run.\n\nRunId -> (string)\n\nThe job-run ID of the predecessor job run.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nExecutionTime -> (integer)\n\nThe amount of time (in seconds) that the job run consumed resources.\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nMaxCapacity -> (double)\n\nThe number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job run.\n\nLogGroupName -> (string)\n\nThe name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using KMS. This name can be /aws-glue/jobs/ , in which case the default encryption is NONE . If you add a role name and SecurityConfiguration name (in other words, /aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/ ), then that security configuration is used to encrypt the log group.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.\n\nCrawlerDetails -> (structure)\n\nDetails of the crawler when the node represents a crawler.\n\nCrawls -> (list)\n\nA list of crawls represented by the crawl node.\n\n(structure)\n\nThe details of a crawl in the workflow.\n\nState -> (string)\n\nThe state of the crawler.\n\nStartedOn -> (timestamp)\n\nThe date and time on which the crawl started.\n\nCompletedOn -> (timestamp)\n\nThe date and time on which the crawl completed.\n\nErrorMessage -> (string)\n\nThe error message associated with the crawl.\n\nLogGroup -> (string)\n\nThe log group associated with the crawl.\n\nLogStream -> (string)\n\nThe log stream associated with the crawl.\n\nEdges -> (list)\n\nA list of all the directed connections between the nodes belonging to the workflow.\n\n(structure)\n\nAn edge represents a directed connection between two components on a workflow graph.\n\nSourceId -> (string)\n\nThe unique of the node within the workflow where the edge starts.\n\nDestinationId -> (string)\n\nThe unique of the node within the workflow where the edge ends.\n\nStartingEventBatchCondition -> (structure)\n\nThe batch condition that started the workflow run.\n\nBatchSize -> (integer)\n\nNumber of events in the batch.\n\nBatchWindow -> (integer)\n\nDuration of the batch window in seconds."
    },
    {
      "command_name": "get-workflow-run-properties",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-workflow-run-properties.html",
      "command_description": "Description\n\nRetrieves the workflow run properties which were set during the run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-workflow-run-properties\n--name <value>\n--run-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--run-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the workflow which was run.\n\n--run-id (string)\n\nThe ID of the workflow run whose run properties should be returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRunProperties -> (map)\n\nThe workflow run properties which were set during the specified run.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "get-workflow-runs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-workflow-runs.html",
      "command_description": "Description\n\nRetrieves metadata for all runs of a given workflow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-workflow-runs\n--name <value>\n[--include-graph | --no-include-graph]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--include-graph | --no-include-graph]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the workflow whose metadata of runs should be returned.\n\n--include-graph | --no-include-graph (boolean)\n\nSpecifies whether to include the workflow graph in response or not.\n\n--next-token (string)\n\nThe maximum size of the response.\n\n--max-results (integer)\n\nThe maximum number of workflow runs to be included in the response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRuns -> (list)\n\nA list of workflow run metadata objects.\n\n(structure)\n\nA workflow run is an execution of a workflow providing all the runtime information.\n\nName -> (string)\n\nName of the workflow that was run.\n\nWorkflowRunId -> (string)\n\nThe ID of this workflow run.\n\nPreviousRunId -> (string)\n\nThe ID of the previous workflow run.\n\nWorkflowRunProperties -> (map)\n\nThe workflow run properties which were set during the run.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartedOn -> (timestamp)\n\nThe date and time when the workflow run was started.\n\nCompletedOn -> (timestamp)\n\nThe date and time when the workflow run completed.\n\nStatus -> (string)\n\nThe status of the workflow run.\n\nErrorMessage -> (string)\n\nThis error message describes any error that may have occurred in starting the workflow run. Currently the only error message is “Concurrent runs exceeded for workflow: foo .”\n\nStatistics -> (structure)\n\nThe statistics of the run.\n\nTotalActions -> (integer)\n\nTotal number of Actions in the workflow run.\n\nTimeoutActions -> (integer)\n\nTotal number of Actions that timed out.\n\nFailedActions -> (integer)\n\nTotal number of Actions that have failed.\n\nStoppedActions -> (integer)\n\nTotal number of Actions that have stopped.\n\nSucceededActions -> (integer)\n\nTotal number of Actions that have succeeded.\n\nRunningActions -> (integer)\n\nTotal number Actions in running state.\n\nGraph -> (structure)\n\nThe graph representing all the Glue components that belong to the workflow as nodes and directed connections between them as edges.\n\nNodes -> (list)\n\nA list of the the Glue components belong to the workflow represented as nodes.\n\n(structure)\n\nA node represents an Glue component (trigger, crawler, or job) on a workflow graph.\n\nType -> (string)\n\nThe type of Glue component represented by the node.\n\nName -> (string)\n\nThe name of the Glue component represented by the node.\n\nUniqueId -> (string)\n\nThe unique Id assigned to the node within the workflow.\n\nTriggerDetails -> (structure)\n\nDetails of the Trigger when the node represents a Trigger.\n\nTrigger -> (structure)\n\nThe information of the trigger represented by the trigger node.\n\nName -> (string)\n\nThe name of the trigger.\n\nWorkflowName -> (string)\n\nThe name of the workflow associated with the trigger.\n\nId -> (string)\n\nReserved for future use.\n\nType -> (string)\n\nThe type of trigger that this is.\n\nState -> (string)\n\nThe current state of the trigger.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\nJobDetails -> (structure)\n\nDetails of the Job when the node represents a Job.\n\nJobRuns -> (list)\n\nThe information for the job runs represented by the job node.\n\n(structure)\n\nContains information about a job run.\n\nId -> (string)\n\nThe ID of this job run.\n\nAttempt -> (integer)\n\nThe number of the attempt to run this job.\n\nPreviousRunId -> (string)\n\nThe ID of the previous run of this job. For example, the JobRunId specified in the StartJobRun action.\n\nTriggerName -> (string)\n\nThe name of the trigger that started this job run.\n\nJobName -> (string)\n\nThe name of the job definition being used in this run.\n\nStartedOn -> (timestamp)\n\nThe date and time at which this job run was started.\n\nLastModifiedOn -> (timestamp)\n\nThe last time that this job run was modified.\n\nCompletedOn -> (timestamp)\n\nThe date and time that this job run completed.\n\nJobRunState -> (string)\n\nThe current state of the job run. For more information about the statuses of jobs that have terminated abnormally, see Glue Job Run Statuses .\n\nArguments -> (map)\n\nThe job arguments associated with this run. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nErrorMessage -> (string)\n\nAn error message associated with this job run.\n\nPredecessorRuns -> (list)\n\nA list of predecessors to this job run.\n\n(structure)\n\nA job run that was used in the predicate of a conditional trigger that triggered this job run.\n\nJobName -> (string)\n\nThe name of the job definition used by the predecessor job run.\n\nRunId -> (string)\n\nThe job-run ID of the predecessor job run.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) allocated to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nExecutionTime -> (integer)\n\nThe amount of time (in seconds) that the job run consumed resources.\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nMaxCapacity -> (double)\n\nThe number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job run.\n\nLogGroupName -> (string)\n\nThe name of the log group for secure logging that can be server-side encrypted in Amazon CloudWatch using KMS. This name can be /aws-glue/jobs/ , in which case the default encryption is NONE . If you add a role name and SecurityConfiguration name (in other words, /aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/ ), then that security configuration is used to encrypt the log group.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nJobs that are created without specifying a Glue version default to Glue 0.9.\n\nCrawlerDetails -> (structure)\n\nDetails of the crawler when the node represents a crawler.\n\nCrawls -> (list)\n\nA list of crawls represented by the crawl node.\n\n(structure)\n\nThe details of a crawl in the workflow.\n\nState -> (string)\n\nThe state of the crawler.\n\nStartedOn -> (timestamp)\n\nThe date and time on which the crawl started.\n\nCompletedOn -> (timestamp)\n\nThe date and time on which the crawl completed.\n\nErrorMessage -> (string)\n\nThe error message associated with the crawl.\n\nLogGroup -> (string)\n\nThe log group associated with the crawl.\n\nLogStream -> (string)\n\nThe log stream associated with the crawl.\n\nEdges -> (list)\n\nA list of all the directed connections between the nodes belonging to the workflow.\n\n(structure)\n\nAn edge represents a directed connection between two components on a workflow graph.\n\nSourceId -> (string)\n\nThe unique of the node within the workflow where the edge starts.\n\nDestinationId -> (string)\n\nThe unique of the node within the workflow where the edge ends.\n\nStartingEventBatchCondition -> (structure)\n\nThe batch condition that started the workflow run.\n\nBatchSize -> (integer)\n\nNumber of events in the batch.\n\nBatchWindow -> (integer)\n\nDuration of the batch window in seconds.\n\nNextToken -> (string)\n\nA continuation token, if not all requested workflow runs have been returned."
    },
    {
      "command_name": "import-catalog-to-glue",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/import-catalog-to-glue.html",
      "command_description": "Description\n\nImports an existing Amazon Athena Data Catalog to Glue.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  import-catalog-to-glue\n[--catalog-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the catalog to import. Currently, this should be the Amazon Web Services account ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "list-blueprints",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/list-blueprints.html",
      "command_description": "Description\n\nLists all the blueprint names in an account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-blueprints\n[--next-token <value>]\n[--max-results <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA continuation token, if this is a continuation request.\n\n--max-results (integer)\n\nThe maximum size of a list to return.\n\n--tags (map)\n\nFilters the list by an Amazon Web Services resource tag.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBlueprints -> (list)\n\nList of names of blueprints in the account.\n\n(string)\n\nNextToken -> (string)\n\nA continuation token, if not all blueprint names have been returned."
    },
    {
      "command_name": "list-crawlers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/list-crawlers.html",
      "command_description": "Description\n\nRetrieves the names of all crawler resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.\n\nThis operation takes the optional Tags field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-crawlers\n[--max-results <value>]\n[--next-token <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nThe maximum size of a list to return.\n\n--next-token (string)\n\nA continuation token, if this is a continuation request.\n\n--tags (map)\n\nSpecifies to return only these tagged resources.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCrawlerNames -> (list)\n\nThe names of all crawlers in the account, or the crawlers with the specified tags.\n\n(string)\n\nNextToken -> (string)\n\nA continuation token, if the returned list does not contain the last metric available."
    },
    {
      "command_name": "list-dev-endpoints",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/list-dev-endpoints.html",
      "command_description": "Description\n\nRetrieves the names of all DevEndpoint resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.\n\nThis operation takes the optional Tags field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-dev-endpoints\n[--next-token <value>]\n[--max-results <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA continuation token, if this is a continuation request.\n\n--max-results (integer)\n\nThe maximum size of a list to return.\n\n--tags (map)\n\nSpecifies to return only these tagged resources.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDevEndpointNames -> (list)\n\nThe names of all the DevEndpoint s in the account, or the DevEndpoint s with the specified tags.\n\n(string)\n\nNextToken -> (string)\n\nA continuation token, if the returned list does not contain the last metric available."
    },
    {
      "command_name": "list-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/list-jobs.html",
      "command_description": "Description\n\nRetrieves the names of all job resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.\n\nThis operation takes the optional Tags field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-jobs\n[--next-token <value>]\n[--max-results <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA continuation token, if this is a continuation request.\n\n--max-results (integer)\n\nThe maximum size of a list to return.\n\n--tags (map)\n\nSpecifies to return only these tagged resources.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobNames -> (list)\n\nThe names of all jobs in the account, or the jobs with the specified tags.\n\n(string)\n\nNextToken -> (string)\n\nA continuation token, if the returned list does not contain the last metric available."
    },
    {
      "command_name": "list-ml-transforms",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/list-ml-transforms.html",
      "command_description": "Description\n\nRetrieves a sortable, filterable list of existing Glue machine learning transforms in this Amazon Web Services account, or the resources with the specified tag. This operation takes the optional Tags field, which you can use as a filter of the responses so that tagged resources can be retrieved as a group. If you choose to use tag filtering, only resources with the tags are retrieved.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-ml-transforms\n[--next-token <value>]\n[--max-results <value>]\n[--filter <value>]\n[--sort <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--filter <value>]",
        "[--sort <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA continuation token, if this is a continuation request.\n\n--max-results (integer)\n\nThe maximum size of a list to return.\n\n--filter (structure)\n\nA TransformFilterCriteria used to filter the machine learning transforms.\n\nName -> (string)\n\nA unique transform name that is used to filter the machine learning transforms.\n\nTransformType -> (string)\n\nThe type of machine learning transform that is used to filter the machine learning transforms.\n\nStatus -> (string)\n\nFilters the list of machine learning transforms by the last known status of the transforms (to indicate whether a transform can be used or not). One of “NOT_READY”, “READY”, or “DELETING”.\n\nGlueVersion -> (string)\n\nThis value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see Glue Versions in the developer guide.\n\nCreatedBefore -> (timestamp)\n\nThe time and date before which the transforms were created.\n\nCreatedAfter -> (timestamp)\n\nThe time and date after which the transforms were created.\n\nLastModifiedBefore -> (timestamp)\n\nFilter on transforms last modified before this date.\n\nLastModifiedAfter -> (timestamp)\n\nFilter on transforms last modified after this date.\n\nSchema -> (list)\n\nFilters on datasets with a specific schema. The Map<Column, Type> object is an array of key-value pairs representing the schema this transform accepts, where Column is the name of a column, and Type is the type of the data such as an integer or string. Has an upper bound of 100 columns.\n\n(structure)\n\nA key-value pair representing a column and data type that this transform can run against. The Schema parameter of the MLTransform may contain up to 100 of these structures.\n\nName -> (string)\n\nThe name of the column.\n\nDataType -> (string)\n\nThe type of data in the column.\n\nShorthand Syntax:\n\nName=string,TransformType=string,Status=string,GlueVersion=string,CreatedBefore=timestamp,CreatedAfter=timestamp,LastModifiedBefore=timestamp,LastModifiedAfter=timestamp,Schema=[{Name=string,DataType=string},{Name=string,DataType=string}]\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"TransformType\": \"FIND_MATCHES\",\n  \"Status\": \"NOT_READY\"|\"READY\"|\"DELETING\",\n  \"GlueVersion\": \"string\",\n  \"CreatedBefore\": timestamp,\n  \"CreatedAfter\": timestamp,\n  \"LastModifiedBefore\": timestamp,\n  \"LastModifiedAfter\": timestamp,\n  \"Schema\": [\n    {\n      \"Name\": \"string\",\n      \"DataType\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--sort (structure)\n\nA TransformSortCriteria used to sort the machine learning transforms.\n\nColumn -> (string)\n\nThe column to be used in the sorting criteria that are associated with the machine learning transform.\n\nSortDirection -> (string)\n\nThe sort direction to be used in the sorting criteria that are associated with the machine learning transform.\n\nShorthand Syntax:\n\nColumn=string,SortDirection=string\n\n\nJSON Syntax:\n\n{\n  \"Column\": \"NAME\"|\"TRANSFORM_TYPE\"|\"STATUS\"|\"CREATED\"|\"LAST_MODIFIED\",\n  \"SortDirection\": \"DESCENDING\"|\"ASCENDING\"\n}\n\n\n--tags (map)\n\nSpecifies to return only these tagged resources.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTransformIds -> (list)\n\nThe identifiers of all the machine learning transforms in the account, or the machine learning transforms with the specified tags.\n\n(string)\n\nNextToken -> (string)\n\nA continuation token, if the returned list does not contain the last metric available."
    },
    {
      "command_name": "list-registries",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/list-registries.html",
      "command_description": "Description\n\nReturns a list of registries that you have created, with minimal registry information. Registries in the Deleting status will not be included in the results. Empty results will be returned if there are no registries available.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-registries is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Registries",
      "command_synopsis": "Synopsis\n  list-registries\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRegistries -> (list)\n\nAn array of RegistryDetailedListItem objects containing minimal details of each registry.\n\n(structure)\n\nA structure containing the details for a registry.\n\nRegistryName -> (string)\n\nThe name of the registry.\n\nRegistryArn -> (string)\n\nThe Amazon Resource Name (ARN) of the registry.\n\nDescription -> (string)\n\nA description of the registry.\n\nStatus -> (string)\n\nThe status of the registry.\n\nCreatedTime -> (string)\n\nThe data the registry was created.\n\nUpdatedTime -> (string)\n\nThe date the registry was updated.\n\nNextToken -> (string)\n\nA continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last."
    },
    {
      "command_name": "list-schema-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/list-schema-versions.html",
      "command_description": "Description\n\nReturns a list of schema versions that you have created, with minimal information. Schema versions in Deleted status will not be included in the results. Empty results will be returned if there are no schema versions available.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-schema-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Schemas",
      "command_synopsis": "Synopsis\n  list-schema-versions\n--schema-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nThis is a wrapper structure to contain schema identity fields. The structure contains:\n\nSchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. Either SchemaArn or SchemaName and RegistryName has to be provided.\n\nSchemaId$SchemaName: The name of the schema. Either SchemaArn or SchemaName and RegistryName has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemas -> (list)\n\nAn array of SchemaVersionList objects containing details of each schema version.\n\n(structure)\n\nAn object containing the details about a schema version.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema.\n\nSchemaVersionId -> (string)\n\nThe unique identifier of the schema version.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nStatus -> (string)\n\nThe status of the schema version.\n\nCreatedTime -> (string)\n\nThe date and time the schema version was created.\n\nNextToken -> (string)\n\nA continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last."
    },
    {
      "command_name": "list-schemas",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/list-schemas.html",
      "command_description": "Description\n\nReturns a list of schemas with minimal details. Schemas in Deleting status will not be included in the results. Empty results will be returned if there are no schemas available.\n\nWhen the RegistryId is not provided, all the schemas across registries will be part of the API response.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-schemas is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Schemas",
      "command_synopsis": "Synopsis\n  list-schemas\n[--registry-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--registry-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (structure)\n\nA wrapper structure that may contain the registry name and Amazon Resource Name (ARN).\n\nRegistryName -> (string)\n\nName of the registry. Used only for lookup. One of RegistryArn or RegistryName has to be provided.\n\nRegistryArn -> (string)\n\nArn of the registry to be updated. One of RegistryArn or RegistryName has to be provided.\n\nShorthand Syntax:\n\nRegistryName=string,RegistryArn=string\n\n\nJSON Syntax:\n\n{\n  \"RegistryName\": \"string\",\n  \"RegistryArn\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemas -> (list)\n\nAn array of SchemaListItem objects containing details of each schema.\n\n(structure)\n\nAn object that contains minimal details for a schema.\n\nRegistryName -> (string)\n\nthe name of the registry where the schema resides.\n\nSchemaName -> (string)\n\nThe name of the schema.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) for the schema.\n\nDescription -> (string)\n\nA description for the schema.\n\nSchemaStatus -> (string)\n\nThe status of the schema.\n\nCreatedTime -> (string)\n\nThe date and time that a schema was created.\n\nUpdatedTime -> (string)\n\nThe date and time that a schema was updated.\n\nNextToken -> (string)\n\nA continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last."
    },
    {
      "command_name": "list-triggers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/list-triggers.html",
      "command_description": "Description\n\nRetrieves the names of all trigger resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.\n\nThis operation takes the optional Tags field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-triggers\n[--next-token <value>]\n[--dependent-job-name <value>]\n[--max-results <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--dependent-job-name <value>]",
        "[--max-results <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA continuation token, if this is a continuation request.\n\n--dependent-job-name (string)\n\nThe name of the job for which to retrieve triggers. The trigger that can start this job is returned. If there is no such trigger, all triggers are returned.\n\n--max-results (integer)\n\nThe maximum size of a list to return.\n\n--tags (map)\n\nSpecifies to return only these tagged resources.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTriggerNames -> (list)\n\nThe names of all triggers in the account, or the triggers with the specified tags.\n\n(string)\n\nNextToken -> (string)\n\nA continuation token, if the returned list does not contain the last metric available."
    },
    {
      "command_name": "list-workflows",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/list-workflows.html",
      "command_description": "Description\n\nLists names of workflows created in the account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-workflows\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA continuation token, if this is a continuation request.\n\n--max-results (integer)\n\nThe maximum size of a list to return.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nWorkflows -> (list)\n\nList of names of workflows in the account.\n\n(string)\n\nNextToken -> (string)\n\nA continuation token, if not all workflow names have been returned."
    },
    {
      "command_name": "put-data-catalog-encryption-settings",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/put-data-catalog-encryption-settings.html",
      "command_description": "Description\n\nSets the security configuration for a specified catalog. After the configuration has been set, the specified encryption is applied to every catalog write thereafter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-data-catalog-encryption-settings\n[--catalog-id <value>]\n--data-catalog-encryption-settings <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--data-catalog-encryption-settings <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog to set the security configuration for. If none is provided, the Amazon Web Services account ID is used by default.\n\n--data-catalog-encryption-settings (structure)\n\nThe security configuration to set.\n\nEncryptionAtRest -> (structure)\n\nSpecifies the encryption-at-rest configuration for the Data Catalog.\n\nCatalogEncryptionMode -> (string)\n\nThe encryption-at-rest mode for encrypting Data Catalog data.\n\nSseAwsKmsKeyId -> (string)\n\nThe ID of the KMS key to use for encryption at rest.\n\nConnectionPasswordEncryption -> (structure)\n\nWhen connection password protection is enabled, the Data Catalog uses a customer-provided key to encrypt the password as part of CreateConnection or UpdateConnection and store it in the ENCRYPTED_PASSWORD field in the connection properties. You can enable catalog encryption or only password encryption.\n\nReturnConnectionPasswordEncrypted -> (boolean)\n\nWhen the ReturnConnectionPasswordEncrypted flag is set to “true”, passwords remain encrypted in the responses of GetConnection and GetConnections . This encryption takes effect independently from catalog encryption.\n\nAwsKmsKeyId -> (string)\n\nAn KMS key that is used to encrypt the connection password.\n\nIf connection password protection is enabled, the caller of CreateConnection and UpdateConnection needs at least kms:Encrypt permission on the specified KMS key, to encrypt passwords before storing them in the Data Catalog.\n\nYou can set the decrypt permission to enable or restrict access on the password key according to your security requirements.\n\nShorthand Syntax:\n\nEncryptionAtRest={CatalogEncryptionMode=string,SseAwsKmsKeyId=string},ConnectionPasswordEncryption={ReturnConnectionPasswordEncrypted=boolean,AwsKmsKeyId=string}\n\n\nJSON Syntax:\n\n{\n  \"EncryptionAtRest\": {\n    \"CatalogEncryptionMode\": \"DISABLED\"|\"SSE-KMS\",\n    \"SseAwsKmsKeyId\": \"string\"\n  },\n  \"ConnectionPasswordEncryption\": {\n    \"ReturnConnectionPasswordEncrypted\": true|false,\n    \"AwsKmsKeyId\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "put-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/put-resource-policy.html",
      "command_description": "Description\n\nSets the Data Catalog resource policy for access control.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-resource-policy\n--policy-in-json <value>\n[--resource-arn <value>]\n[--policy-hash-condition <value>]\n[--policy-exists-condition <value>]\n[--enable-hybrid <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--policy-in-json <value>",
        "[--resource-arn <value>]",
        "[--policy-hash-condition <value>]",
        "[--policy-exists-condition <value>]",
        "[--enable-hybrid <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--policy-in-json (string)\n\nContains the policy document to set, in JSON format.\n\n--resource-arn (string)\n\nDo not use. For internal use only.\n\n--policy-hash-condition (string)\n\nThe hash value returned when the previous policy was set using PutResourcePolicy . Its purpose is to prevent concurrent modifications of a policy. Do not use this parameter if no previous policy has been set.\n\n--policy-exists-condition (string)\n\nA value of MUST_EXIST is used to update a policy. A value of NOT_EXIST is used to create a new policy. If a value of NONE or a null value is used, the call does not depend on the existence of a policy.\n\nPossible values:\n\nMUST_EXIST\n\nNOT_EXIST\n\nNONE\n\n--enable-hybrid (string)\n\nIf 'TRUE' , indicates that you are using both methods to grant cross-account access to Data Catalog resources:\n\nBy directly updating the resource policy with PutResourePolicy\n\nBy using the Grant permissions command on the Amazon Web Services Management Console.\n\nMust be set to 'TRUE' if you have already used the Management Console to grant cross-account access, otherwise the call fails. Default is ‘FALSE’.\n\nPossible values:\n\nTRUE\n\nFALSE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyHash -> (string)\n\nA hash of the policy that has just been set. This must be included in a subsequent call that overwrites or updates this policy."
    },
    {
      "command_name": "put-schema-version-metadata",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/put-schema-version-metadata.html",
      "command_description": "Description\n\nPuts the metadata key value pair for a specified schema version ID. A maximum of 10 key value pairs will be allowed per schema version. They can be added over one or more calls.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-schema-version-metadata\n[--schema-id <value>]\n[--schema-version-number <value>]\n[--schema-version-id <value>]\n--metadata-key-value <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--schema-id <value>]",
        "[--schema-version-number <value>]",
        "[--schema-version-id <value>]",
        "--metadata-key-value <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nThe unique ID for the schema.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--schema-version-number (structure)\n\nThe version number of the schema.\n\nLatestVersion -> (boolean)\n\nThe latest version available for the schema.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nShorthand Syntax:\n\nLatestVersion=boolean,VersionNumber=long\n\n\nJSON Syntax:\n\n{\n  \"LatestVersion\": true|false,\n  \"VersionNumber\": long\n}\n\n\n--schema-version-id (string)\n\nThe unique version ID of the schema version.\n\n--metadata-key-value (structure)\n\nThe metadata key’s corresponding value.\n\nMetadataKey -> (string)\n\nA metadata key.\n\nMetadataValue -> (string)\n\nA metadata key’s corresponding value.\n\nShorthand Syntax:\n\nMetadataKey=string,MetadataValue=string\n\n\nJSON Syntax:\n\n{\n  \"MetadataKey\": \"string\",\n  \"MetadataValue\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) for the schema.\n\nSchemaName -> (string)\n\nThe name for the schema.\n\nRegistryName -> (string)\n\nThe name for the registry.\n\nLatestVersion -> (boolean)\n\nThe latest version of the schema.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nSchemaVersionId -> (string)\n\nThe unique version ID of the schema version.\n\nMetadataKey -> (string)\n\nThe metadata key.\n\nMetadataValue -> (string)\n\nThe value of the metadata key."
    },
    {
      "command_name": "put-workflow-run-properties",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/put-workflow-run-properties.html",
      "command_description": "Description\n\nPuts the specified workflow run properties for the given workflow run. If a property already exists for the specified run, then it overrides the value otherwise adds the property to existing properties.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-workflow-run-properties\n--name <value>\n--run-id <value>\n--run-properties <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--run-id <value>",
        "--run-properties <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the workflow which was run.\n\n--run-id (string)\n\nThe ID of the workflow run for which the run properties should be updated.\n\n--run-properties (map)\n\nThe properties to put for the specified run.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "query-schema-version-metadata",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/query-schema-version-metadata.html",
      "command_description": "Description\n\nQueries for the schema version metadata information.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  query-schema-version-metadata\n[--schema-id <value>]\n[--schema-version-number <value>]\n[--schema-version-id <value>]\n[--metadata-list <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--schema-id <value>]",
        "[--schema-version-number <value>]",
        "[--schema-version-id <value>]",
        "[--metadata-list <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nA wrapper structure that may contain the schema name and Amazon Resource Name (ARN).\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--schema-version-number (structure)\n\nThe version number of the schema.\n\nLatestVersion -> (boolean)\n\nThe latest version available for the schema.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nShorthand Syntax:\n\nLatestVersion=boolean,VersionNumber=long\n\n\nJSON Syntax:\n\n{\n  \"LatestVersion\": true|false,\n  \"VersionNumber\": long\n}\n\n\n--schema-version-id (string)\n\nThe unique version ID of the schema version.\n\n--metadata-list (list)\n\nSearch key-value pairs for metadata, if they are not provided all the metadata information will be fetched.\n\n(structure)\n\nA structure containing a key value pair for metadata.\n\nMetadataKey -> (string)\n\nA metadata key.\n\nMetadataValue -> (string)\n\nA metadata key’s corresponding value.\n\nShorthand Syntax:\n\nMetadataKey=string,MetadataValue=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"MetadataKey\": \"string\",\n    \"MetadataValue\": \"string\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nMaximum number of results required per page. If the value is not supplied, this will be defaulted to 25 per page.\n\n--next-token (string)\n\nA continuation token, if this is a continuation call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMetadataInfoMap -> (map)\n\nA map of a metadata key and associated values.\n\nkey -> (string)\n\nvalue -> (structure)\n\nA structure containing metadata information for a schema version.\n\nMetadataValue -> (string)\n\nThe metadata key’s corresponding value.\n\nCreatedTime -> (string)\n\nThe time at which the entry was created.\n\nOtherMetadataValueList -> (list)\n\nOther metadata belonging to the same metadata key.\n\n(structure)\n\nA structure containing other metadata for a schema version belonging to the same metadata key.\n\nMetadataValue -> (string)\n\nThe metadata key’s corresponding value for the other metadata belonging to the same metadata key.\n\nCreatedTime -> (string)\n\nThe time at which the entry was created.\n\nSchemaVersionId -> (string)\n\nThe unique version ID of the schema version.\n\nNextToken -> (string)\n\nA continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last."
    },
    {
      "command_name": "register-schema-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/register-schema-version.html",
      "command_description": "Description\n\nAdds a new version to the existing schema. Returns an error if new version of schema does not meet the compatibility requirements of the schema set. This API will not create a new schema set and will return a 404 error if the schema set is not already present in the Schema Registry.\n\nIf this is the first schema definition to be registered in the Schema Registry, this API will store the schema version and return immediately. Otherwise, this call has the potential to run longer than other operations due to compatibility modes. You can call the GetSchemaVersion API with the SchemaVersionId to check compatibility modes.\n\nIf the same schema definition is already stored in Schema Registry as a version, the schema ID of the existing schema is returned to the caller.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-schema-version\n--schema-id <value>\n--schema-definition <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-id <value>",
        "--schema-definition <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nThis is a wrapper structure to contain schema identity fields. The structure contains:\n\nSchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. Either SchemaArn or SchemaName and RegistryName has to be provided.\n\nSchemaId$SchemaName: The name of the schema. Either SchemaArn or SchemaName and RegistryName has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--schema-definition (string)\n\nThe schema definition using the DataFormat setting for the SchemaName .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaVersionId -> (string)\n\nThe unique ID that represents the version of this schema.\n\nVersionNumber -> (long)\n\nThe version of this schema (for sync flow only, in case this is the first version).\n\nStatus -> (string)\n\nThe status of the schema version."
    },
    {
      "command_name": "remove-schema-version-metadata",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/remove-schema-version-metadata.html",
      "command_description": "Description\n\nRemoves a key value pair from the schema version metadata for the specified schema version ID.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-schema-version-metadata\n[--schema-id <value>]\n[--schema-version-number <value>]\n[--schema-version-id <value>]\n--metadata-key-value <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--schema-id <value>]",
        "[--schema-version-number <value>]",
        "[--schema-version-id <value>]",
        "--metadata-key-value <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nA wrapper structure that may contain the schema name and Amazon Resource Name (ARN).\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--schema-version-number (structure)\n\nThe version number of the schema.\n\nLatestVersion -> (boolean)\n\nThe latest version available for the schema.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nShorthand Syntax:\n\nLatestVersion=boolean,VersionNumber=long\n\n\nJSON Syntax:\n\n{\n  \"LatestVersion\": true|false,\n  \"VersionNumber\": long\n}\n\n\n--schema-version-id (string)\n\nThe unique version ID of the schema version.\n\n--metadata-key-value (structure)\n\nThe value of the metadata key.\n\nMetadataKey -> (string)\n\nA metadata key.\n\nMetadataValue -> (string)\n\nA metadata key’s corresponding value.\n\nShorthand Syntax:\n\nMetadataKey=string,MetadataValue=string\n\n\nJSON Syntax:\n\n{\n  \"MetadataKey\": \"string\",\n  \"MetadataValue\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema.\n\nSchemaName -> (string)\n\nThe name of the schema.\n\nRegistryName -> (string)\n\nThe name of the registry.\n\nLatestVersion -> (boolean)\n\nThe latest version of the schema.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nSchemaVersionId -> (string)\n\nThe version ID for the schema version.\n\nMetadataKey -> (string)\n\nThe metadata key.\n\nMetadataValue -> (string)\n\nThe value of the metadata key."
    },
    {
      "command_name": "reset-job-bookmark",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/reset-job-bookmark.html",
      "command_description": "Description\n\nResets a bookmark entry.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  reset-job-bookmark\n--job-name <value>\n[--run-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-name <value>",
        "[--run-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe name of the job in question.\n\n--run-id (string)\n\nThe unique run identifier associated with this job run.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobBookmarkEntry -> (structure)\n\nThe reset bookmark entry.\n\nJobName -> (string)\n\nThe name of the job in question.\n\nVersion -> (integer)\n\nThe version of the job.\n\nRun -> (integer)\n\nThe run ID number.\n\nAttempt -> (integer)\n\nThe attempt ID number.\n\nPreviousRunId -> (string)\n\nThe unique run identifier associated with the previous job run.\n\nRunId -> (string)\n\nThe run ID number.\n\nJobBookmark -> (string)\n\nThe bookmark itself."
    },
    {
      "command_name": "resume-workflow-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/resume-workflow-run.html",
      "command_description": "Description\n\nRestarts selected nodes of a previous partially completed workflow run and resumes the workflow run. The selected nodes and all nodes that are downstream from the selected nodes are run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  resume-workflow-run\n--name <value>\n--run-id <value>\n--node-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--run-id <value>",
        "--node-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the workflow to resume.\n\n--run-id (string)\n\nThe ID of the workflow run to resume.\n\n--node-ids (list)\n\nA list of the node IDs for the nodes you want to restart. The nodes that are to be restarted must have a run attempt in the original run.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRunId -> (string)\n\nThe new ID assigned to the resumed workflow run. Each resume of a workflow run will have a new run ID.\n\nNodeIds -> (list)\n\nA list of the node IDs for the nodes that were actually restarted.\n\n(string)"
    },
    {
      "command_name": "search-tables",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/search-tables.html",
      "command_description": "Description\n\nSearches a set of tables based on properties in the table metadata as well as on the parent database. You can search against text or filter conditions.\n\nYou can only get tables that you have access to based on the security policies defined in Lake Formation. You need at least a read-only access to the table for it to be returned. If you do not have access to all the columns in the table, these columns will not be searched against when returning the list of tables back to you. If you have access to the columns but not the data in the columns, those columns and the associated metadata for those columns will be included in the search.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  search-tables\n[--catalog-id <value>]\n[--next-token <value>]\n[--filters <value>]\n[--search-text <value>]\n[--sort-criteria <value>]\n[--max-results <value>]\n[--resource-share-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "[--next-token <value>]",
        "[--filters <value>]",
        "[--search-text <value>]",
        "[--sort-criteria <value>]",
        "[--max-results <value>]",
        "[--resource-share-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nA unique identifier, consisting of `` account_id `` .\n\n--next-token (string)\n\nA continuation token, included if this is a continuation call.\n\n--filters (list)\n\nA list of key-value pairs, and a comparator used to filter the search results. Returns all entities matching the predicate.\n\nThe Comparator member of the PropertyPredicate struct is used only for time fields, and can be omitted for other field types. Also, when comparing string values, such as when Key=Name , a fuzzy match algorithm is used. The Key field (for example, the value of the Name field) is split on certain punctuation characters, for example, -, :, #, etc. into tokens. Then each token is exact-match compared with the Value member of PropertyPredicate . For example, if Key=Name and Value=link , tables named customer-link and xx-link-yy are returned, but xxlinkyy is not returned.\n\n(structure)\n\nDefines a property predicate.\n\nKey -> (string)\n\nThe key of the property.\n\nValue -> (string)\n\nThe value of the property.\n\nComparator -> (string)\n\nThe comparator used to compare this property to others.\n\nShorthand Syntax:\n\nKey=string,Value=string,Comparator=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Comparator\": \"EQUALS\"|\"GREATER_THAN\"|\"LESS_THAN\"|\"GREATER_THAN_EQUALS\"|\"LESS_THAN_EQUALS\"\n  }\n  ...\n]\n\n\n--search-text (string)\n\nA string used for a text search.\n\nSpecifying a value in quotes filters based on an exact match to the value.\n\n--sort-criteria (list)\n\nA list of criteria for sorting the results by a field name, in an ascending or descending order.\n\n(structure)\n\nSpecifies a field to sort by and a sort order.\n\nFieldName -> (string)\n\nThe name of the field on which to sort.\n\nSort -> (string)\n\nAn ascending or descending sort.\n\nShorthand Syntax:\n\nFieldName=string,Sort=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"FieldName\": \"string\",\n    \"Sort\": \"ASC\"|\"DESC\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of tables to return in a single response.\n\n--resource-share-type (string)\n\nAllows you to specify that you want to search the tables shared with your account. The allowable values are FOREIGN or ALL .\n\nIf set to FOREIGN , will search the tables shared with your account.\n\nIf set to ALL , will search the tables shared with your account, as well as the tables in yor local account.\n\nPossible values:\n\nFOREIGN\n\nALL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nA continuation token, present if the current list segment is not the last.\n\nTableList -> (list)\n\nA list of the requested Table objects. The SearchTables response returns only the tables that you have access to.\n\n(structure)\n\nRepresents a collection of related data organized in columns and rows.\n\nName -> (string)\n\nThe table name. For Hive compatibility, this must be entirely lowercase.\n\nDatabaseName -> (string)\n\nThe name of the database where the table metadata resides. For Hive compatibility, this must be all lowercase.\n\nDescription -> (string)\n\nA description of the table.\n\nOwner -> (string)\n\nThe owner of the table.\n\nCreateTime -> (timestamp)\n\nThe time when the table definition was created in the Data Catalog.\n\nUpdateTime -> (timestamp)\n\nThe last time that the table was updated.\n\nLastAccessTime -> (timestamp)\n\nThe last time that the table was accessed. This is usually taken from HDFS, and might not be reliable.\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time that column statistics were computed for this table.\n\nRetention -> (integer)\n\nThe retention time for this table.\n\nStorageDescriptor -> (structure)\n\nA storage descriptor containing information about the physical storage of this table.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nPartitionKeys -> (list)\n\nA list of columns by which the table is partitioned. Only primitive types are supported as partition keys.\n\nWhen you create a table used by Amazon Athena, and you do not specify any partitionKeys , you must at least set the value of partitionKeys to an empty list. For example:\n\n\"PartitionKeys\": []\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nViewOriginalText -> (string)\n\nIf the table is a view, the original text of the view; otherwise null .\n\nViewExpandedText -> (string)\n\nIf the table is a view, the expanded text of the view; otherwise null .\n\nTableType -> (string)\n\nThe type of this table (EXTERNAL_TABLE , VIRTUAL_VIEW , etc.).\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the table.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreatedBy -> (string)\n\nThe person or entity who created the table.\n\nIsRegisteredWithLakeFormation -> (boolean)\n\nIndicates whether the table has been registered with Lake Formation.\n\nTargetTable -> (structure)\n\nA TableIdentifier structure that describes a target table for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database that contains the target table.\n\nName -> (string)\n\nThe name of the target table.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides."
    },
    {
      "command_name": "start-blueprint-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/start-blueprint-run.html",
      "command_description": "Description\n\nStarts a new run of the specified blueprint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-blueprint-run\n--blueprint-name <value>\n[--parameters <value>]\n--role-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--blueprint-name <value>",
        "[--parameters <value>]",
        "--role-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--blueprint-name (string)\n\nThe name of the blueprint.\n\n--parameters (string)\n\nSpecifies the parameters as a BlueprintParameters object.\n\n--role-arn (string)\n\nSpecifies the IAM role used to create the workflow.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRunId -> (string)\n\nThe run ID for this blueprint run."
    },
    {
      "command_name": "start-crawler",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/start-crawler.html",
      "command_description": "Description\n\nStarts a crawl using the specified crawler, regardless of what is scheduled. If the crawler is already running, returns a CrawlerRunningException .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-crawler\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the crawler to start.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo start a crawler\n\nThe following start-crawler example starts a crawler.\n\naws glue start-crawler --name my-crawler\n\n\nOutput:\n\nNone\n\n\nFor more information, see Defining Crawlers in the AWS Glue Developer Guide."
    },
    {
      "command_name": "start-crawler-schedule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/start-crawler-schedule.html",
      "command_description": "Description\n\nChanges the schedule state of the specified crawler to SCHEDULED , unless the crawler is already running or the schedule state is already SCHEDULED .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-crawler-schedule\n--crawler-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--crawler-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--crawler-name (string)\n\nName of the crawler to schedule.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "start-export-labels-task-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/start-export-labels-task-run.html",
      "command_description": "Description\n\nBegins an asynchronous task to export all labeled data for a particular transform. This task is the only label-related API call that is not part of the typical active learning workflow. You typically use StartExportLabelsTaskRun when you want to work with all of your existing labels at the same time, such as when you want to remove or change labels that were previously submitted as truth. This API operation accepts the TransformId whose labels you want to export and an Amazon Simple Storage Service (Amazon S3) path to export the labels to. The operation returns a TaskRunId . You can check on the status of your task run by calling the GetMLTaskRun API.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-export-labels-task-run\n--transform-id <value>\n--output-s3-path <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--transform-id <value>",
        "--output-s3-path <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--transform-id (string)\n\nThe unique identifier of the machine learning transform.\n\n--output-s3-path (string)\n\nThe Amazon S3 path where you export the labels.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTaskRunId -> (string)\n\nThe unique identifier for the task run."
    },
    {
      "command_name": "start-import-labels-task-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/start-import-labels-task-run.html",
      "command_description": "Description\n\nEnables you to provide additional labels (examples of truth) to be used to teach the machine learning transform and improve its quality. This API operation is generally used as part of the active learning workflow that starts with the StartMLLabelingSetGenerationTaskRun call and that ultimately results in improving the quality of your machine learning transform.\n\nAfter the StartMLLabelingSetGenerationTaskRun finishes, Glue machine learning will have generated a series of questions for humans to answer. (Answering these questions is often called ‘labeling’ in the machine learning workflows). In the case of the FindMatches transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” After the labeling process is finished, users upload their answers/labels with a call to StartImportLabelsTaskRun . After StartImportLabelsTaskRun finishes, all future runs of the machine learning transform use the new and improved labels and perform a higher-quality transformation.\n\nBy default, StartMLLabelingSetGenerationTaskRun continually learns from and combines all labels that you upload unless you set Replace to true. If you set Replace to true, StartImportLabelsTaskRun deletes and forgets all previously uploaded labels and learns only from the exact set that you upload. Replacing labels can be helpful if you realize that you previously uploaded incorrect labels, and you believe that they are having a negative effect on your transform quality.\n\nYou can check on the status of your task run by calling the GetMLTaskRun operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-import-labels-task-run\n--transform-id <value>\n--input-s3-path <value>\n[--replace-all-labels | --no-replace-all-labels]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--transform-id <value>",
        "--input-s3-path <value>",
        "[--replace-all-labels | --no-replace-all-labels]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--transform-id (string)\n\nThe unique identifier of the machine learning transform.\n\n--input-s3-path (string)\n\nThe Amazon Simple Storage Service (Amazon S3) path from where you import the labels.\n\n--replace-all-labels | --no-replace-all-labels (boolean)\n\nIndicates whether to overwrite your existing labels.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTaskRunId -> (string)\n\nThe unique identifier for the task run."
    },
    {
      "command_name": "start-job-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/start-job-run.html",
      "command_description": "Description\n\nStarts a job run using a job definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-job-run\n--job-name <value>\n[--job-run-id <value>]\n[--arguments <value>]\n[--allocated-capacity <value>]\n[--timeout <value>]\n[--max-capacity <value>]\n[--security-configuration <value>]\n[--notification-property <value>]\n[--worker-type <value>]\n[--number-of-workers <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-name <value>",
        "[--job-run-id <value>]",
        "[--arguments <value>]",
        "[--allocated-capacity <value>]",
        "[--timeout <value>]",
        "[--max-capacity <value>]",
        "[--security-configuration <value>]",
        "[--notification-property <value>]",
        "[--worker-type <value>]",
        "[--number-of-workers <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe name of the job definition to use.\n\n--job-run-id (string)\n\nThe ID of a previous JobRun to retry.\n\n--arguments (map)\n\nThe job arguments specifically for this run. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--allocated-capacity (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) to allocate to this JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\n--timeout (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\n--max-capacity (double)\n\nThe number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job, or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\n--security-configuration (string)\n\nThe name of the SecurityConfiguration structure to be used with this job run.\n\n--notification-property (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nShorthand Syntax:\n\nNotifyDelayAfter=integer\n\n\nJSON Syntax:\n\n{\n  \"NotifyDelayAfter\": integer\n}\n\n\n--worker-type (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nPossible values:\n\nStandard\n\nG.1X\n\nG.2X\n\n--number-of-workers (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobRunId -> (string)\n\nThe ID assigned to this job run.",
      "command_examples": "Examples\n\nTo start running a job\n\nThe following start-job-run example starts a job.\n\naws glue start-job-run \\\n    --job-name my-job\n\n\nOutput:\n\n{\n    \"JobRunId\": \"jr_22208b1f44eb5376a60569d4b21dd20fcb8621e1a366b4e7b2494af764b82ded\"\n}\n\n\nFor more information, see Authoring Jobs in the AWS Glue Developer Guide."
    },
    {
      "command_name": "start-ml-evaluation-task-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/start-ml-evaluation-task-run.html",
      "command_description": "Description\n\nStarts a task to estimate the quality of the transform.\n\nWhen you provide label sets as examples of truth, Glue machine learning uses some of those examples to learn from them. The rest of the labels are used as a test to estimate quality.\n\nReturns a unique identifier for the run. You can call GetMLTaskRun to get more information about the stats of the EvaluationTaskRun .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-ml-evaluation-task-run\n--transform-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--transform-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--transform-id (string)\n\nThe unique identifier of the machine learning transform.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTaskRunId -> (string)\n\nThe unique identifier associated with this run."
    },
    {
      "command_name": "start-ml-labeling-set-generation-task-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/start-ml-labeling-set-generation-task-run.html",
      "command_description": "Description\n\nStarts the active learning workflow for your machine learning transform to improve the transform’s quality by generating label sets and adding labels.\n\nWhen the StartMLLabelingSetGenerationTaskRun finishes, Glue will have generated a “labeling set” or a set of questions for humans to answer.\n\nIn the case of the FindMatches transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?”\n\nAfter the labeling process is finished, you can upload your labels with a call to StartImportLabelsTaskRun . After StartImportLabelsTaskRun finishes, all future runs of the machine learning transform will use the new and improved labels and perform a higher-quality transformation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-ml-labeling-set-generation-task-run\n--transform-id <value>\n--output-s3-path <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--transform-id <value>",
        "--output-s3-path <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--transform-id (string)\n\nThe unique identifier of the machine learning transform.\n\n--output-s3-path (string)\n\nThe Amazon Simple Storage Service (Amazon S3) path where you generate the labeling set.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTaskRunId -> (string)\n\nThe unique run identifier that is associated with this task run."
    },
    {
      "command_name": "start-trigger",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/start-trigger.html",
      "command_description": "Description\n\nStarts an existing trigger. See Triggering Jobs for information about how different types of trigger are started.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-trigger\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the trigger to start.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the trigger that was started."
    },
    {
      "command_name": "start-workflow-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/start-workflow-run.html",
      "command_description": "Description\n\nStarts a new run of the specified workflow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-workflow-run\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the workflow to start.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRunId -> (string)\n\nAn Id for the new run."
    },
    {
      "command_name": "stop-crawler",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/stop-crawler.html",
      "command_description": "Description\n\nIf the specified crawler is running, stops the crawl.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-crawler\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the crawler to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "stop-crawler-schedule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/stop-crawler-schedule.html",
      "command_description": "Description\n\nSets the schedule state of the specified crawler to NOT_SCHEDULED , but does not stop the crawler if it is already running.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-crawler-schedule\n--crawler-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--crawler-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--crawler-name (string)\n\nName of the crawler whose schedule state to set.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "stop-trigger",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/stop-trigger.html",
      "command_description": "Description\n\nStops a specified trigger.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-trigger\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the trigger to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the trigger that was stopped."
    },
    {
      "command_name": "stop-workflow-run",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/stop-workflow-run.html",
      "command_description": "Description\n\nStops the execution of the specified workflow run.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-workflow-run\n--name <value>\n--run-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--run-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the workflow to stop.\n\n--run-id (string)\n\nThe ID of the workflow run to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/tag-resource.html",
      "command_description": "Description\n\nAdds tags to a resource. A tag is a label you can assign to an Amazon Web Services resource. In Glue, you can tag only certain resources. For information about what resources you can tag, see Amazon Web Services Tags in Glue .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags-to-add <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags-to-add <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the Glue resource to which to add the tags. For more information about Glue resource ARNs, see the Glue ARN string pattern .\n\n--tags-to-add (map)\n\nTags to add to this resource.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/untag-resource.html",
      "command_description": "Description\n\nRemoves tags from a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tags-to-remove <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags-to-remove <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource from which to remove the tags.\n\n--tags-to-remove (list)\n\nTags to remove from this resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-blueprint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-blueprint.html",
      "command_description": "Description\n\nUpdates a registered blueprint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-blueprint\n--name <value>\n[--description <value>]\n--blueprint-location <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--blueprint-location <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the blueprint.\n\n--description (string)\n\nA description of the blueprint.\n\n--blueprint-location (string)\n\nSpecifies a path in Amazon S3 where the blueprint is published.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nReturns the name of the blueprint that was updated."
    },
    {
      "command_name": "update-classifier",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-classifier.html",
      "command_description": "Description\n\nModifies an existing classifier (a GrokClassifier , an XMLClassifier , a JsonClassifier , or a CsvClassifier , depending on which field is present).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-classifier\n[--grok-classifier <value>]\n[--xml-classifier <value>]\n[--json-classifier <value>]\n[--csv-classifier <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--grok-classifier <value>]",
        "[--xml-classifier <value>]",
        "[--json-classifier <value>]",
        "[--csv-classifier <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--grok-classifier (structure)\n\nA GrokClassifier object with updated fields.\n\nName -> (string)\n\nThe name of the GrokClassifier .\n\nClassification -> (string)\n\nAn identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.\n\nGrokPattern -> (string)\n\nThe grok pattern used by this classifier.\n\nCustomPatterns -> (string)\n\nOptional custom grok patterns used by this classifier.\n\nShorthand Syntax:\n\nName=string,Classification=string,GrokPattern=string,CustomPatterns=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Classification\": \"string\",\n  \"GrokPattern\": \"string\",\n  \"CustomPatterns\": \"string\"\n}\n\n\n--xml-classifier (structure)\n\nAn XMLClassifier object with updated fields.\n\nName -> (string)\n\nThe name of the classifier.\n\nClassification -> (string)\n\nAn identifier of the data format that the classifier matches.\n\nRowTag -> (string)\n\nThe XML tag designating the element that contains each record in an XML document being parsed. This cannot identify a self-closing element (closed by /> ). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <row item_a=\"A\" item_b=\"B\"></row> is okay, but <row item_a=\"A\" item_b=\"B\" /> is not).\n\nShorthand Syntax:\n\nName=string,Classification=string,RowTag=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Classification\": \"string\",\n  \"RowTag\": \"string\"\n}\n\n\n--json-classifier (structure)\n\nA JsonClassifier object with updated fields.\n\nName -> (string)\n\nThe name of the classifier.\n\nJsonPath -> (string)\n\nA JsonPath string defining the JSON data for the classifier to classify. Glue supports a subset of JsonPath, as described in Writing JsonPath Custom Classifiers .\n\nShorthand Syntax:\n\nName=string,JsonPath=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"JsonPath\": \"string\"\n}\n\n\n--csv-classifier (structure)\n\nA CsvClassifier object with updated fields.\n\nName -> (string)\n\nThe name of the classifier.\n\nDelimiter -> (string)\n\nA custom symbol to denote what separates each column entry in the row.\n\nQuoteSymbol -> (string)\n\nA custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.\n\nContainsHeader -> (string)\n\nIndicates whether the CSV file contains a header.\n\nHeader -> (list)\n\nA list of strings representing column names.\n\n(string)\n\nDisableValueTrimming -> (boolean)\n\nSpecifies not to trim values before identifying the type of column values. The default value is true.\n\nAllowSingleColumn -> (boolean)\n\nEnables the processing of files that contain only one column.\n\nShorthand Syntax:\n\nName=string,Delimiter=string,QuoteSymbol=string,ContainsHeader=string,Header=string,string,DisableValueTrimming=boolean,AllowSingleColumn=boolean\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Delimiter\": \"string\",\n  \"QuoteSymbol\": \"string\",\n  \"ContainsHeader\": \"UNKNOWN\"|\"PRESENT\"|\"ABSENT\",\n  \"Header\": [\"string\", ...],\n  \"DisableValueTrimming\": true|false,\n  \"AllowSingleColumn\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-column-statistics-for-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-column-statistics-for-partition.html",
      "command_description": "Description\n\nCreates or updates partition statistics of columns.\n\nThe Identity and Access Management (IAM) permission required for this operation is UpdatePartition .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-column-statistics-for-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partition-values <value>\n--column-statistics-list <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partition-values <value>",
        "--column-statistics-list <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the partitions reside.\n\n--table-name (string)\n\nThe name of the partitions’ table.\n\n--partition-values (list)\n\nA list of partition values identifying the partition.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--column-statistics-list (list)\n\nA list of the column statistics.\n\n(structure)\n\nRepresents the generated column-level statistics for a table or partition.\n\nColumnName -> (string)\n\nName of column which statistics belong to.\n\nColumnType -> (string)\n\nThe data type of the column.\n\nAnalyzedTime -> (timestamp)\n\nThe timestamp of when column statistics were generated.\n\nStatisticsData -> (structure)\n\nA ColumnStatisticData object that contains the statistics data values.\n\nType -> (string)\n\nThe type of column statistics data.\n\nBooleanColumnStatisticsData -> (structure)\n\nBoolean column statistics data.\n\nNumberOfTrues -> (long)\n\nThe number of true values in the column.\n\nNumberOfFalses -> (long)\n\nThe number of false values in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nDateColumnStatisticsData -> (structure)\n\nDate column statistics data.\n\nMinimumValue -> (timestamp)\n\nThe lowest value in the column.\n\nMaximumValue -> (timestamp)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDecimalColumnStatisticsData -> (structure)\n\nDecimal column statistics data.\n\nMinimumValue -> (structure)\n\nThe lowest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nMaximumValue -> (structure)\n\nThe highest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDoubleColumnStatisticsData -> (structure)\n\nDouble column statistics data.\n\nMinimumValue -> (double)\n\nThe lowest value in the column.\n\nMaximumValue -> (double)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nLongColumnStatisticsData -> (structure)\n\nLong column statistics data.\n\nMinimumValue -> (long)\n\nThe lowest value in the column.\n\nMaximumValue -> (long)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nStringColumnStatisticsData -> (structure)\n\nString column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest string in the column.\n\nAverageLength -> (double)\n\nThe average string length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nBinaryColumnStatisticsData -> (structure)\n\nBinary column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest bit sequence in the column.\n\nAverageLength -> (double)\n\nThe average bit sequence length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nJSON Syntax:\n\n[\n  {\n    \"ColumnName\": \"string\",\n    \"ColumnType\": \"string\",\n    \"AnalyzedTime\": timestamp,\n    \"StatisticsData\": {\n      \"Type\": \"BOOLEAN\"|\"DATE\"|\"DECIMAL\"|\"DOUBLE\"|\"LONG\"|\"STRING\"|\"BINARY\",\n      \"BooleanColumnStatisticsData\": {\n        \"NumberOfTrues\": long,\n        \"NumberOfFalses\": long,\n        \"NumberOfNulls\": long\n      },\n      \"DateColumnStatisticsData\": {\n        \"MinimumValue\": timestamp,\n        \"MaximumValue\": timestamp,\n        \"NumberOfNulls\": long,\n        \"NumberOfDistinctValues\": long\n      },\n      \"DecimalColumnStatisticsData\": {\n        \"MinimumValue\": {\n          \"UnscaledValue\": blob,\n          \"Scale\": integer\n        },\n        \"MaximumValue\": {\n          \"UnscaledValue\": blob,\n          \"Scale\": integer\n        },\n        \"NumberOfNulls\": long,\n        \"NumberOfDistinctValues\": long\n      },\n      \"DoubleColumnStatisticsData\": {\n        \"MinimumValue\": double,\n        \"MaximumValue\": double,\n        \"NumberOfNulls\": long,\n        \"NumberOfDistinctValues\": long\n      },\n      \"LongColumnStatisticsData\": {\n        \"MinimumValue\": long,\n        \"MaximumValue\": long,\n        \"NumberOfNulls\": long,\n        \"NumberOfDistinctValues\": long\n      },\n      \"StringColumnStatisticsData\": {\n        \"MaximumLength\": long,\n        \"AverageLength\": double,\n        \"NumberOfNulls\": long,\n        \"NumberOfDistinctValues\": long\n      },\n      \"BinaryColumnStatisticsData\": {\n        \"MaximumLength\": long,\n        \"AverageLength\": double,\n        \"NumberOfNulls\": long\n      }\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nErrors -> (list)\n\nError occurred during updating column statistics data.\n\n(structure)\n\nEncapsulates a ColumnStatistics object that failed and the reason for failure.\n\nColumnStatistics -> (structure)\n\nThe ColumnStatistics of the column.\n\nColumnName -> (string)\n\nName of column which statistics belong to.\n\nColumnType -> (string)\n\nThe data type of the column.\n\nAnalyzedTime -> (timestamp)\n\nThe timestamp of when column statistics were generated.\n\nStatisticsData -> (structure)\n\nA ColumnStatisticData object that contains the statistics data values.\n\nType -> (string)\n\nThe type of column statistics data.\n\nBooleanColumnStatisticsData -> (structure)\n\nBoolean column statistics data.\n\nNumberOfTrues -> (long)\n\nThe number of true values in the column.\n\nNumberOfFalses -> (long)\n\nThe number of false values in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nDateColumnStatisticsData -> (structure)\n\nDate column statistics data.\n\nMinimumValue -> (timestamp)\n\nThe lowest value in the column.\n\nMaximumValue -> (timestamp)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDecimalColumnStatisticsData -> (structure)\n\nDecimal column statistics data.\n\nMinimumValue -> (structure)\n\nThe lowest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nMaximumValue -> (structure)\n\nThe highest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDoubleColumnStatisticsData -> (structure)\n\nDouble column statistics data.\n\nMinimumValue -> (double)\n\nThe lowest value in the column.\n\nMaximumValue -> (double)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nLongColumnStatisticsData -> (structure)\n\nLong column statistics data.\n\nMinimumValue -> (long)\n\nThe lowest value in the column.\n\nMaximumValue -> (long)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nStringColumnStatisticsData -> (structure)\n\nString column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest string in the column.\n\nAverageLength -> (double)\n\nThe average string length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nBinaryColumnStatisticsData -> (structure)\n\nBinary column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest bit sequence in the column.\n\nAverageLength -> (double)\n\nThe average bit sequence length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nError -> (structure)\n\nAn error message with the reason for the failure of an operation.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error."
    },
    {
      "command_name": "update-column-statistics-for-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-column-statistics-for-table.html",
      "command_description": "Description\n\nCreates or updates table statistics of columns.\n\nThe Identity and Access Management (IAM) permission required for this operation is UpdateTable .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-column-statistics-for-table\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--column-statistics-list <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--column-statistics-list <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partitions in question reside. If none is supplied, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the partitions reside.\n\n--table-name (string)\n\nThe name of the partitions’ table.\n\n--column-statistics-list (list)\n\nA list of the column statistics.\n\n(structure)\n\nRepresents the generated column-level statistics for a table or partition.\n\nColumnName -> (string)\n\nName of column which statistics belong to.\n\nColumnType -> (string)\n\nThe data type of the column.\n\nAnalyzedTime -> (timestamp)\n\nThe timestamp of when column statistics were generated.\n\nStatisticsData -> (structure)\n\nA ColumnStatisticData object that contains the statistics data values.\n\nType -> (string)\n\nThe type of column statistics data.\n\nBooleanColumnStatisticsData -> (structure)\n\nBoolean column statistics data.\n\nNumberOfTrues -> (long)\n\nThe number of true values in the column.\n\nNumberOfFalses -> (long)\n\nThe number of false values in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nDateColumnStatisticsData -> (structure)\n\nDate column statistics data.\n\nMinimumValue -> (timestamp)\n\nThe lowest value in the column.\n\nMaximumValue -> (timestamp)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDecimalColumnStatisticsData -> (structure)\n\nDecimal column statistics data.\n\nMinimumValue -> (structure)\n\nThe lowest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nMaximumValue -> (structure)\n\nThe highest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDoubleColumnStatisticsData -> (structure)\n\nDouble column statistics data.\n\nMinimumValue -> (double)\n\nThe lowest value in the column.\n\nMaximumValue -> (double)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nLongColumnStatisticsData -> (structure)\n\nLong column statistics data.\n\nMinimumValue -> (long)\n\nThe lowest value in the column.\n\nMaximumValue -> (long)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nStringColumnStatisticsData -> (structure)\n\nString column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest string in the column.\n\nAverageLength -> (double)\n\nThe average string length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nBinaryColumnStatisticsData -> (structure)\n\nBinary column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest bit sequence in the column.\n\nAverageLength -> (double)\n\nThe average bit sequence length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nJSON Syntax:\n\n[\n  {\n    \"ColumnName\": \"string\",\n    \"ColumnType\": \"string\",\n    \"AnalyzedTime\": timestamp,\n    \"StatisticsData\": {\n      \"Type\": \"BOOLEAN\"|\"DATE\"|\"DECIMAL\"|\"DOUBLE\"|\"LONG\"|\"STRING\"|\"BINARY\",\n      \"BooleanColumnStatisticsData\": {\n        \"NumberOfTrues\": long,\n        \"NumberOfFalses\": long,\n        \"NumberOfNulls\": long\n      },\n      \"DateColumnStatisticsData\": {\n        \"MinimumValue\": timestamp,\n        \"MaximumValue\": timestamp,\n        \"NumberOfNulls\": long,\n        \"NumberOfDistinctValues\": long\n      },\n      \"DecimalColumnStatisticsData\": {\n        \"MinimumValue\": {\n          \"UnscaledValue\": blob,\n          \"Scale\": integer\n        },\n        \"MaximumValue\": {\n          \"UnscaledValue\": blob,\n          \"Scale\": integer\n        },\n        \"NumberOfNulls\": long,\n        \"NumberOfDistinctValues\": long\n      },\n      \"DoubleColumnStatisticsData\": {\n        \"MinimumValue\": double,\n        \"MaximumValue\": double,\n        \"NumberOfNulls\": long,\n        \"NumberOfDistinctValues\": long\n      },\n      \"LongColumnStatisticsData\": {\n        \"MinimumValue\": long,\n        \"MaximumValue\": long,\n        \"NumberOfNulls\": long,\n        \"NumberOfDistinctValues\": long\n      },\n      \"StringColumnStatisticsData\": {\n        \"MaximumLength\": long,\n        \"AverageLength\": double,\n        \"NumberOfNulls\": long,\n        \"NumberOfDistinctValues\": long\n      },\n      \"BinaryColumnStatisticsData\": {\n        \"MaximumLength\": long,\n        \"AverageLength\": double,\n        \"NumberOfNulls\": long\n      }\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nErrors -> (list)\n\nList of ColumnStatisticsErrors.\n\n(structure)\n\nEncapsulates a ColumnStatistics object that failed and the reason for failure.\n\nColumnStatistics -> (structure)\n\nThe ColumnStatistics of the column.\n\nColumnName -> (string)\n\nName of column which statistics belong to.\n\nColumnType -> (string)\n\nThe data type of the column.\n\nAnalyzedTime -> (timestamp)\n\nThe timestamp of when column statistics were generated.\n\nStatisticsData -> (structure)\n\nA ColumnStatisticData object that contains the statistics data values.\n\nType -> (string)\n\nThe type of column statistics data.\n\nBooleanColumnStatisticsData -> (structure)\n\nBoolean column statistics data.\n\nNumberOfTrues -> (long)\n\nThe number of true values in the column.\n\nNumberOfFalses -> (long)\n\nThe number of false values in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nDateColumnStatisticsData -> (structure)\n\nDate column statistics data.\n\nMinimumValue -> (timestamp)\n\nThe lowest value in the column.\n\nMaximumValue -> (timestamp)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDecimalColumnStatisticsData -> (structure)\n\nDecimal column statistics data.\n\nMinimumValue -> (structure)\n\nThe lowest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nMaximumValue -> (structure)\n\nThe highest value in the column.\n\nUnscaledValue -> (blob)\n\nThe unscaled numeric value.\n\nScale -> (integer)\n\nThe scale that determines where the decimal point falls in the unscaled value.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nDoubleColumnStatisticsData -> (structure)\n\nDouble column statistics data.\n\nMinimumValue -> (double)\n\nThe lowest value in the column.\n\nMaximumValue -> (double)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nLongColumnStatisticsData -> (structure)\n\nLong column statistics data.\n\nMinimumValue -> (long)\n\nThe lowest value in the column.\n\nMaximumValue -> (long)\n\nThe highest value in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nStringColumnStatisticsData -> (structure)\n\nString column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest string in the column.\n\nAverageLength -> (double)\n\nThe average string length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nNumberOfDistinctValues -> (long)\n\nThe number of distinct values in a column.\n\nBinaryColumnStatisticsData -> (structure)\n\nBinary column statistics data.\n\nMaximumLength -> (long)\n\nThe size of the longest bit sequence in the column.\n\nAverageLength -> (double)\n\nThe average bit sequence length in the column.\n\nNumberOfNulls -> (long)\n\nThe number of null values in the column.\n\nError -> (structure)\n\nAn error message with the reason for the failure of an operation.\n\nErrorCode -> (string)\n\nThe code associated with this error.\n\nErrorMessage -> (string)\n\nA message describing the error."
    },
    {
      "command_name": "update-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-connection.html",
      "command_description": "Description\n\nUpdates a connection definition in the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-connection\n[--catalog-id <value>]\n--name <value>\n--connection-input <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--name <value>",
        "--connection-input <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which the connection resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--name (string)\n\nThe name of the connection definition to update.\n\n--connection-input (structure)\n\nA ConnectionInput object that redefines the connection in question.\n\nName -> (string)\n\nThe name of the connection.\n\nDescription -> (string)\n\nThe description of the connection.\n\nConnectionType -> (string)\n\nThe type of the connection. Currently, these types are supported:\n\nJDBC - Designates a connection to a database through Java Database Connectivity (JDBC).\n\nKAFKA - Designates a connection to an Apache Kafka streaming platform.\n\nMONGODB - Designates a connection to a MongoDB document database.\n\nNETWORK - Designates a network connection to a data source within an Amazon Virtual Private Cloud environment (Amazon VPC).\n\nMARKETPLACE - Uses configuration settings contained in a connector purchased from Amazon Web Services Marketplace to read from and write to data stores that are not natively supported by Glue.\n\nCUSTOM - Uses configuration settings contained in a custom connector to read from and write to data stores that are not natively supported by Glue.\n\nSFTP is not supported.\n\nMatchCriteria -> (list)\n\nA list of criteria that can be used in selecting this connection.\n\n(string)\n\nConnectionProperties -> (map)\n\nThese key-value pairs define parameters for the connection.\n\nkey -> (string)\n\nvalue -> (string)\n\nPhysicalConnectionRequirements -> (structure)\n\nA map of physical connection requirements, such as virtual private cloud (VPC) and SecurityGroup , that are needed to successfully make this connection.\n\nSubnetId -> (string)\n\nThe subnet ID used by the connection.\n\nSecurityGroupIdList -> (list)\n\nThe security group ID list used by the connection.\n\n(string)\n\nAvailabilityZone -> (string)\n\nThe connection’s Availability Zone. This field is redundant because the specified subnet implies the Availability Zone to be used. Currently the field must be populated, but it will be deprecated in the future.\n\nShorthand Syntax:\n\nName=string,Description=string,ConnectionType=string,MatchCriteria=string,string,ConnectionProperties={KeyName1=string,KeyName2=string},PhysicalConnectionRequirements={SubnetId=string,SecurityGroupIdList=[string,string],AvailabilityZone=string}\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Description\": \"string\",\n  \"ConnectionType\": \"JDBC\"|\"SFTP\"|\"MONGODB\"|\"KAFKA\"|\"NETWORK\"|\"MARKETPLACE\"|\"CUSTOM\",\n  \"MatchCriteria\": [\"string\", ...],\n  \"ConnectionProperties\": {\"HOST\"|\"PORT\"|\"USERNAME\"|\"PASSWORD\"|\"ENCRYPTED_PASSWORD\"|\"JDBC_DRIVER_JAR_URI\"|\"JDBC_DRIVER_CLASS_NAME\"|\"JDBC_ENGINE\"|\"JDBC_ENGINE_VERSION\"|\"CONFIG_FILES\"|\"INSTANCE_ID\"|\"JDBC_CONNECTION_URL\"|\"JDBC_ENFORCE_SSL\"|\"CUSTOM_JDBC_CERT\"|\"SKIP_CUSTOM_JDBC_CERT_VALIDATION\"|\"CUSTOM_JDBC_CERT_STRING\"|\"CONNECTION_URL\"|\"KAFKA_BOOTSTRAP_SERVERS\"|\"KAFKA_SSL_ENABLED\"|\"KAFKA_CUSTOM_CERT\"|\"KAFKA_SKIP_CUSTOM_CERT_VALIDATION\"|\"KAFKA_CLIENT_KEYSTORE\"|\"KAFKA_CLIENT_KEYSTORE_PASSWORD\"|\"KAFKA_CLIENT_KEY_PASSWORD\"|\"ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD\"|\"ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD\"|\"SECRET_ID\"|\"CONNECTOR_URL\"|\"CONNECTOR_TYPE\"|\"CONNECTOR_CLASS_NAME\": \"string\"\n    ...},\n  \"PhysicalConnectionRequirements\": {\n    \"SubnetId\": \"string\",\n    \"SecurityGroupIdList\": [\"string\", ...],\n    \"AvailabilityZone\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-crawler",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-crawler.html",
      "command_description": "Description\n\nUpdates a crawler. If a crawler is running, you must stop it using StopCrawler before updating it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-crawler\n--name <value>\n[--role <value>]\n[--database-name <value>]\n[--description <value>]\n[--targets <value>]\n[--schedule <value>]\n[--classifiers <value>]\n[--table-prefix <value>]\n[--schema-change-policy <value>]\n[--recrawl-policy <value>]\n[--lineage-configuration <value>]\n[--configuration <value>]\n[--crawler-security-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--role <value>]",
        "[--database-name <value>]",
        "[--description <value>]",
        "[--targets <value>]",
        "[--schedule <value>]",
        "[--classifiers <value>]",
        "[--table-prefix <value>]",
        "[--schema-change-policy <value>]",
        "[--recrawl-policy <value>]",
        "[--lineage-configuration <value>]",
        "[--configuration <value>]",
        "[--crawler-security-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the new crawler.\n\n--role (string)\n\nThe IAM role or Amazon Resource Name (ARN) of an IAM role that is used by the new crawler to access customer resources.\n\n--database-name (string)\n\nThe Glue database where results are stored, such as: arn:aws:daylight:us-east-1::database/sometable/* .\n\n--description (string)\n\nA description of the new crawler.\n\n--targets (structure)\n\nA list of targets to crawl.\n\nS3Targets -> (list)\n\nSpecifies Amazon Simple Storage Service (Amazon S3) targets.\n\n(structure)\n\nSpecifies a data store in Amazon Simple Storage Service (Amazon S3).\n\nPath -> (string)\n\nThe path to the Amazon S3 target.\n\nExclusions -> (list)\n\nA list of glob patterns used to exclude from the crawl. For more information, see Catalog Tables with a Crawler .\n\n(string)\n\nConnectionName -> (string)\n\nThe name of a connection which allows a job or crawler to access data in Amazon S3 within an Amazon Virtual Private Cloud environment (Amazon VPC).\n\nSampleSize -> (integer)\n\nSets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.\n\nEventQueueArn -> (string)\n\nA valid Amazon SQS ARN. For example, arn:aws:sqs:region:account:sqs .\n\nDlqEventQueueArn -> (string)\n\nA valid Amazon dead-letter SQS ARN. For example, arn:aws:sqs:region:account:deadLetterQueue .\n\nJdbcTargets -> (list)\n\nSpecifies JDBC targets.\n\n(structure)\n\nSpecifies a JDBC data store to crawl.\n\nConnectionName -> (string)\n\nThe name of the connection to use to connect to the JDBC target.\n\nPath -> (string)\n\nThe path of the JDBC target.\n\nExclusions -> (list)\n\nA list of glob patterns used to exclude from the crawl. For more information, see Catalog Tables with a Crawler .\n\n(string)\n\nMongoDBTargets -> (list)\n\nSpecifies Amazon DocumentDB or MongoDB targets.\n\n(structure)\n\nSpecifies an Amazon DocumentDB or MongoDB data store to crawl.\n\nConnectionName -> (string)\n\nThe name of the connection to use to connect to the Amazon DocumentDB or MongoDB target.\n\nPath -> (string)\n\nThe path of the Amazon DocumentDB or MongoDB target (database/collection).\n\nScanAll -> (boolean)\n\nIndicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.\n\nA value of true means to scan all records, while a value of false means to sample the records. If no value is specified, the value defaults to true .\n\nDynamoDBTargets -> (list)\n\nSpecifies Amazon DynamoDB targets.\n\n(structure)\n\nSpecifies an Amazon DynamoDB table to crawl.\n\nPath -> (string)\n\nThe name of the DynamoDB table to crawl.\n\nscanAll -> (boolean)\n\nIndicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.\n\nA value of true means to scan all records, while a value of false means to sample the records. If no value is specified, the value defaults to true .\n\nscanRate -> (double)\n\nThe percentage of the configured read capacity units to use by the Glue crawler. Read capacity units is a term defined by DynamoDB, and is a numeric value that acts as rate limiter for the number of reads that can be performed on that table per second.\n\nThe valid values are null or a value between 0.1 to 1.5. A null value is used when user does not provide a value, and defaults to 0.5 of the configured Read Capacity Unit (for provisioned tables), or 0.25 of the max configured Read Capacity Unit (for tables using on-demand mode).\n\nCatalogTargets -> (list)\n\nSpecifies Glue Data Catalog targets.\n\n(structure)\n\nSpecifies an Glue Data Catalog target.\n\nDatabaseName -> (string)\n\nThe name of the database to be synchronized.\n\nTables -> (list)\n\nA list of the tables to be synchronized.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"S3Targets\": [\n    {\n      \"Path\": \"string\",\n      \"Exclusions\": [\"string\", ...],\n      \"ConnectionName\": \"string\",\n      \"SampleSize\": integer,\n      \"EventQueueArn\": \"string\",\n      \"DlqEventQueueArn\": \"string\"\n    }\n    ...\n  ],\n  \"JdbcTargets\": [\n    {\n      \"ConnectionName\": \"string\",\n      \"Path\": \"string\",\n      \"Exclusions\": [\"string\", ...]\n    }\n    ...\n  ],\n  \"MongoDBTargets\": [\n    {\n      \"ConnectionName\": \"string\",\n      \"Path\": \"string\",\n      \"ScanAll\": true|false\n    }\n    ...\n  ],\n  \"DynamoDBTargets\": [\n    {\n      \"Path\": \"string\",\n      \"scanAll\": true|false,\n      \"scanRate\": double\n    }\n    ...\n  ],\n  \"CatalogTargets\": [\n    {\n      \"DatabaseName\": \"string\",\n      \"Tables\": [\"string\", ...]\n    }\n    ...\n  ]\n}\n\n\n--schedule (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\n--classifiers (list)\n\nA list of custom classifiers that the user has registered. By default, all built-in classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--table-prefix (string)\n\nThe table prefix used for catalog tables that are created.\n\n--schema-change-policy (structure)\n\nThe policy for the crawler’s update and deletion behavior.\n\nUpdateBehavior -> (string)\n\nThe update behavior when the crawler finds a changed schema.\n\nDeleteBehavior -> (string)\n\nThe deletion behavior when the crawler finds a deleted object.\n\nShorthand Syntax:\n\nUpdateBehavior=string,DeleteBehavior=string\n\n\nJSON Syntax:\n\n{\n  \"UpdateBehavior\": \"LOG\"|\"UPDATE_IN_DATABASE\",\n  \"DeleteBehavior\": \"LOG\"|\"DELETE_FROM_DATABASE\"|\"DEPRECATE_IN_DATABASE\"\n}\n\n\n--recrawl-policy (structure)\n\nA policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.\n\nRecrawlBehavior -> (string)\n\nSpecifies whether to crawl the entire dataset again or to crawl only folders that were added since the last crawler run.\n\nA value of CRAWL_EVERYTHING specifies crawling the entire dataset again.\n\nA value of CRAWL_NEW_FOLDERS_ONLY specifies crawling only folders that were added since the last crawler run.\n\nA value of CRAWL_EVENT_MODE specifies crawling only the changes identified by Amazon S3 events.\n\nShorthand Syntax:\n\nRecrawlBehavior=string\n\n\nJSON Syntax:\n\n{\n  \"RecrawlBehavior\": \"CRAWL_EVERYTHING\"|\"CRAWL_NEW_FOLDERS_ONLY\"|\"CRAWL_EVENT_MODE\"\n}\n\n\n--lineage-configuration (structure)\n\nSpecifies data lineage configuration settings for the crawler.\n\nCrawlerLineageSettings -> (string)\n\nSpecifies whether data lineage is enabled for the crawler. Valid values are:\n\nENABLE: enables data lineage for the crawler\n\nDISABLE: disables data lineage for the crawler\n\nShorthand Syntax:\n\nCrawlerLineageSettings=string\n\n\nJSON Syntax:\n\n{\n  \"CrawlerLineageSettings\": \"ENABLE\"|\"DISABLE\"\n}\n\n\n--configuration (string)\n\nCrawler configuration information. This versioned JSON string allows users to specify aspects of a crawler’s behavior. For more information, see Configuring a Crawler .\n\n--crawler-security-configuration (string)\n\nThe name of the SecurityConfiguration structure to be used by this crawler.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-crawler-schedule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-crawler-schedule.html",
      "command_description": "Description\n\nUpdates the schedule of a crawler using a cron expression.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-crawler-schedule\n--crawler-name <value>\n[--schedule <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--crawler-name <value>",
        "[--schedule <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--crawler-name (string)\n\nThe name of the crawler whose schedule to update.\n\n--schedule (string)\n\nThe updated cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-database",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-database.html",
      "command_description": "Description\n\nUpdates an existing database definition in a Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-database\n[--catalog-id <value>]\n--name <value>\n--database-input <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--name <value>",
        "--database-input <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog in which the metadata database resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--name (string)\n\nThe name of the database to update in the catalog. For Hive compatibility, this is folded to lowercase.\n\n--database-input (structure)\n\nA DatabaseInput object specifying the new definition of the metadata database in the catalog.\n\nName -> (string)\n\nThe name of the database. For Hive compatibility, this is folded to lowercase when it is stored.\n\nDescription -> (string)\n\nA description of the database.\n\nLocationUri -> (string)\n\nThe location of the database (for example, an HDFS path).\n\nParameters -> (map)\n\nThese key-value pairs define parameters and properties of the database.\n\nThese key-value pairs define parameters and properties of the database.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreateTableDefaultPermissions -> (list)\n\nCreates a set of default permissions on the table for principals.\n\n(structure)\n\nPermissions granted to a principal.\n\nPrincipal -> (structure)\n\nThe principal who is granted permissions.\n\nDataLakePrincipalIdentifier -> (string)\n\nAn identifier for the Lake Formation principal.\n\nPermissions -> (list)\n\nThe permissions that are granted to the principal.\n\n(string)\n\nTargetDatabase -> (structure)\n\nA DatabaseIdentifier structure that describes a target database for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the database resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database.\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Description\": \"string\",\n  \"LocationUri\": \"string\",\n  \"Parameters\": {\"string\": \"string\"\n    ...},\n  \"CreateTableDefaultPermissions\": [\n    {\n      \"Principal\": {\n        \"DataLakePrincipalIdentifier\": \"string\"\n      },\n      \"Permissions\": [\"ALL\"|\"SELECT\"|\"ALTER\"|\"DROP\"|\"DELETE\"|\"INSERT\"|\"CREATE_DATABASE\"|\"CREATE_TABLE\"|\"DATA_LOCATION_ACCESS\", ...]\n    }\n    ...\n  ],\n  \"TargetDatabase\": {\n    \"CatalogId\": \"string\",\n    \"DatabaseName\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-dev-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-dev-endpoint.html",
      "command_description": "Description\n\nUpdates a specified development endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-dev-endpoint\n--endpoint-name <value>\n[--public-key <value>]\n[--add-public-keys <value>]\n[--delete-public-keys <value>]\n[--custom-libraries <value>]\n[--update-etl-libraries | --no-update-etl-libraries]\n[--delete-arguments <value>]\n[--add-arguments <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--endpoint-name <value>",
        "[--public-key <value>]",
        "[--add-public-keys <value>]",
        "[--delete-public-keys <value>]",
        "[--custom-libraries <value>]",
        "[--update-etl-libraries | --no-update-etl-libraries]",
        "[--delete-arguments <value>]",
        "[--add-arguments <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--endpoint-name (string)\n\nThe name of the DevEndpoint to be updated.\n\n--public-key (string)\n\nThe public key for the DevEndpoint to use.\n\n--add-public-keys (list)\n\nThe list of public keys for the DevEndpoint to use.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--delete-public-keys (list)\n\nThe list of public keys to be deleted from the DevEndpoint .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--custom-libraries (structure)\n\nCustom Python or Java libraries to be loaded in the DevEndpoint .\n\nExtraPythonLibsS3Path -> (string)\n\nThe paths to one or more Python libraries in an Amazon Simple Storage Service (Amazon S3) bucket that should be loaded in your DevEndpoint . Multiple values must be complete paths separated by a comma.\n\nNote\n\nYou can only use pure Python libraries with a DevEndpoint . Libraries that rely on C extensions, such as the pandas Python data analysis library, are not currently supported.\n\nExtraJarsS3Path -> (string)\n\nThe path to one or more Java .jar files in an S3 bucket that should be loaded in your DevEndpoint .\n\nNote\n\nYou can only use pure Java/Scala libraries with a DevEndpoint .\n\nShorthand Syntax:\n\nExtraPythonLibsS3Path=string,ExtraJarsS3Path=string\n\n\nJSON Syntax:\n\n{\n  \"ExtraPythonLibsS3Path\": \"string\",\n  \"ExtraJarsS3Path\": \"string\"\n}\n\n\n--update-etl-libraries | --no-update-etl-libraries (boolean)\n\nTrue if the list of custom libraries to be loaded in the development endpoint needs to be updated, or False if otherwise.\n\n--delete-arguments (list)\n\nThe list of argument keys to be deleted from the map of arguments used to configure the DevEndpoint .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--add-arguments (map)\n\nThe map of arguments to add the map of arguments used to configure the DevEndpoint .\n\nValid arguments are:\n\n\"--enable-glue-datacatalog\": \"\"\n\nYou can specify a version of Python support for development endpoints by using the Arguments parameter in the CreateDevEndpoint or UpdateDevEndpoint APIs. If no arguments are provided, the version defaults to Python 2.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-job.html",
      "command_description": "Description\n\nUpdates an existing job definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-job\n--job-name <value>\n--job-update <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-name <value>",
        "--job-update <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe name of the job definition to update.\n\n--job-update (structure)\n\nSpecifies the values with which to update the job definition.\n\nDescription -> (string)\n\nDescription of the job being defined.\n\nLogUri -> (string)\n\nThis field is reserved for future use.\n\nRole -> (string)\n\nThe name or Amazon Resource Name (ARN) of the IAM role associated with this job (required).\n\nExecutionProperty -> (structure)\n\nAn ExecutionProperty specifying the maximum number of concurrent runs allowed for this job.\n\nMaxConcurrentRuns -> (integer)\n\nThe maximum number of concurrent runs allowed for the job. The default is 1. An error is returned when this threshold is reached. The maximum value you can specify is controlled by a service limit.\n\nCommand -> (structure)\n\nThe JobCommand that runs this job (required).\n\nName -> (string)\n\nThe name of the job command. For an Apache Spark ETL job, this must be glueetl . For a Python shell job, it must be pythonshell . For an Apache Spark streaming ETL job, this must be gluestreaming .\n\nScriptLocation -> (string)\n\nSpecifies the Amazon Simple Storage Service (Amazon S3) path to a script that runs a job.\n\nPythonVersion -> (string)\n\nThe Python version being used to run a Python shell job. Allowed values are 2 or 3.\n\nDefaultArguments -> (map)\n\nThe default arguments for this job.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nNonOverridableArguments -> (map)\n\nNon-overridable arguments for this job, specified as name-value pairs.\n\nkey -> (string)\n\nvalue -> (string)\n\nConnections -> (structure)\n\nThe connections used for this job.\n\nConnections -> (list)\n\nA list of connections used by the job.\n\n(string)\n\nMaxRetries -> (integer)\n\nThe maximum number of times to retry this job if it fails.\n\nAllocatedCapacity -> (integer)\n\nThis field is deprecated. Use MaxCapacity instead.\n\nThe number of Glue data processing units (DPUs) to allocate to this job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nTimeout -> (integer)\n\nThe job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).\n\nMaxCapacity -> (double)\n\nFor Glue version 1.0 or earlier jobs, using the standard worker type, the number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nDo not set Max Capacity if using WorkerType and NumberOfWorkers .\n\nThe value that can be allocated for MaxCapacity depends on whether you are running a Python shell job or an Apache Spark ETL job:\n\nWhen you specify a Python shell job (JobCommand.Name =”pythonshell”), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.\n\nWhen you specify an Apache Spark ETL job (JobCommand.Name =”glueetl”) or Apache Spark streaming ETL job (JobCommand.Name =”gluestreaming”), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.\n\nFor Glue version 2.0 jobs, you cannot instead specify a Maximum capacity . Instead, you should specify a Worker type and the Number of workers .\n\nWorkerType -> (string)\n\nThe type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nFor the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.\n\nNumberOfWorkers -> (integer)\n\nThe number of workers of a defined workerType that are allocated when a job runs.\n\nThe maximum number of workers you can define are 299 for G.1X , and 149 for G.2X .\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this job.\n\nNotificationProperty -> (structure)\n\nSpecifies the configuration properties of a job notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nGlueVersion -> (string)\n\nGlue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for jobs of type Spark.\n\nFor more information about the available Glue versions and corresponding Spark and Python versions, see Glue version in the developer guide.\n\nShorthand Syntax:\n\nDescription=string,LogUri=string,Role=string,ExecutionProperty={MaxConcurrentRuns=integer},Command={Name=string,ScriptLocation=string,PythonVersion=string},DefaultArguments={KeyName1=string,KeyName2=string},NonOverridableArguments={KeyName1=string,KeyName2=string},Connections={Connections=[string,string]},MaxRetries=integer,AllocatedCapacity=integer,Timeout=integer,MaxCapacity=double,WorkerType=string,NumberOfWorkers=integer,SecurityConfiguration=string,NotificationProperty={NotifyDelayAfter=integer},GlueVersion=string\n\n\nJSON Syntax:\n\n{\n  \"Description\": \"string\",\n  \"LogUri\": \"string\",\n  \"Role\": \"string\",\n  \"ExecutionProperty\": {\n    \"MaxConcurrentRuns\": integer\n  },\n  \"Command\": {\n    \"Name\": \"string\",\n    \"ScriptLocation\": \"string\",\n    \"PythonVersion\": \"string\"\n  },\n  \"DefaultArguments\": {\"string\": \"string\"\n    ...},\n  \"NonOverridableArguments\": {\"string\": \"string\"\n    ...},\n  \"Connections\": {\n    \"Connections\": [\"string\", ...]\n  },\n  \"MaxRetries\": integer,\n  \"AllocatedCapacity\": integer,\n  \"Timeout\": integer,\n  \"MaxCapacity\": double,\n  \"WorkerType\": \"Standard\"|\"G.1X\"|\"G.2X\",\n  \"NumberOfWorkers\": integer,\n  \"SecurityConfiguration\": \"string\",\n  \"NotificationProperty\": {\n    \"NotifyDelayAfter\": integer\n  },\n  \"GlueVersion\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobName -> (string)\n\nReturns the name of the updated job definition."
    },
    {
      "command_name": "update-ml-transform",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-ml-transform.html",
      "command_description": "Description\n\nUpdates an existing machine learning transform. Call this operation to tune the algorithm parameters to achieve better results.\n\nAfter calling this operation, you can call the StartMLEvaluationTaskRun operation to assess how well your new parameters achieved your goals (such as improving the quality of your machine learning transform, or making it more cost-effective).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-ml-transform\n--transform-id <value>\n[--name <value>]\n[--description <value>]\n[--parameters <value>]\n[--role <value>]\n[--glue-version <value>]\n[--max-capacity <value>]\n[--worker-type <value>]\n[--number-of-workers <value>]\n[--timeout <value>]\n[--max-retries <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--transform-id <value>",
        "[--name <value>]",
        "[--description <value>]",
        "[--parameters <value>]",
        "[--role <value>]",
        "[--glue-version <value>]",
        "[--max-capacity <value>]",
        "[--worker-type <value>]",
        "[--number-of-workers <value>]",
        "[--timeout <value>]",
        "[--max-retries <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--transform-id (string)\n\nA unique identifier that was generated when the transform was created.\n\n--name (string)\n\nThe unique name that you gave the transform when you created it.\n\n--description (string)\n\nA description of the transform. The default is an empty string.\n\n--parameters (structure)\n\nThe configuration parameters that are specific to the transform type (algorithm) used. Conditionally dependent on the transform type.\n\nTransformType -> (string)\n\nThe type of machine learning transform.\n\nFor information about the types of machine learning transforms, see Creating Machine Learning Transforms .\n\nFindMatchesParameters -> (structure)\n\nThe parameters for the find matches algorithm.\n\nPrimaryKeyColumnName -> (string)\n\nThe name of a column that uniquely identifies rows in the source table. Used to help identify matching records.\n\nPrecisionRecallTradeoff -> (double)\n\nThe value selected when tuning your transform for a balance between precision and recall. A value of 0.5 means no preference; a value of 1.0 means a bias purely for precision, and a value of 0.0 means a bias for recall. Because this is a tradeoff, choosing values close to 1.0 means very low recall, and choosing values close to 0.0 results in very low precision.\n\nThe precision metric indicates how often your model is correct when it predicts a match.\n\nThe recall metric indicates that for an actual match, how often your model predicts the match.\n\nAccuracyCostTradeoff -> (double)\n\nThe value that is selected when tuning your transform for a balance between accuracy and cost. A value of 0.5 means that the system balances accuracy and cost concerns. A value of 1.0 means a bias purely for accuracy, which typically results in a higher cost, sometimes substantially higher. A value of 0.0 means a bias purely for cost, which results in a less accurate FindMatches transform, sometimes with unacceptable accuracy.\n\nAccuracy measures how well the transform finds true positives and true negatives. Increasing accuracy requires more machine resources and cost. But it also results in increased recall.\n\nCost measures how many compute resources, and thus money, are consumed to run the transform.\n\nEnforceProvidedLabels -> (boolean)\n\nThe value to switch on or off to force the output to match the provided labels from users. If the value is True , the find matches transform forces the output to match the provided labels. The results override the normal conflation results. If the value is False , the find matches transform does not ensure all the labels provided are respected, and the results rely on the trained model.\n\nNote that setting this value to true may increase the conflation execution time.\n\nShorthand Syntax:\n\nTransformType=string,FindMatchesParameters={PrimaryKeyColumnName=string,PrecisionRecallTradeoff=double,AccuracyCostTradeoff=double,EnforceProvidedLabels=boolean}\n\n\nJSON Syntax:\n\n{\n  \"TransformType\": \"FIND_MATCHES\",\n  \"FindMatchesParameters\": {\n    \"PrimaryKeyColumnName\": \"string\",\n    \"PrecisionRecallTradeoff\": double,\n    \"AccuracyCostTradeoff\": double,\n    \"EnforceProvidedLabels\": true|false\n  }\n}\n\n\n--role (string)\n\nThe name or Amazon Resource Name (ARN) of the IAM role with the required permissions.\n\n--glue-version (string)\n\nThis value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see Glue Versions in the developer guide.\n\n--max-capacity (double)\n\nThe number of Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the Glue pricing page .\n\nWhen the WorkerType field is set to a value other than Standard , the MaxCapacity field is set automatically and becomes read-only.\n\n--worker-type (string)\n\nThe type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.\n\nFor the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n\nFor the G.1X worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.\n\nFor the G.2X worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.\n\nPossible values:\n\nStandard\n\nG.1X\n\nG.2X\n\n--number-of-workers (integer)\n\nThe number of workers of a defined workerType that are allocated when this task runs.\n\n--timeout (integer)\n\nThe timeout for a task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours).\n\n--max-retries (integer)\n\nThe maximum number of times to retry a task for this transform after a task run fails.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTransformId -> (string)\n\nThe unique identifier for the transform that was updated."
    },
    {
      "command_name": "update-partition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-partition.html",
      "command_description": "Description\n\nUpdates a partition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-partition\n[--catalog-id <value>]\n--database-name <value>\n--table-name <value>\n--partition-value-list <value>\n--partition-input <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-name <value>",
        "--partition-value-list <value>",
        "--partition-input <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the partition to be updated resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database in which the table in question resides.\n\n--table-name (string)\n\nThe name of the table in which the partition to be updated is located.\n\n--partition-value-list (list)\n\nList of partition key values that define the partition to update.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--partition-input (structure)\n\nThe new partition object to update the partition to.\n\nThe Values property can’t be changed. If you want to change the partition key values for a partition, delete and recreate the partition.\n\nValues -> (list)\n\nThe values of the partition. Although this parameter is not required by the SDK, you must specify this parameter for a valid input.\n\nThe values for the keys for the new partition must be passed as an array of String objects that must be ordered in the same order as the partition keys appearing in the Amazon S3 prefix. Otherwise Glue will add the values to the wrong keys.\n\n(string)\n\nLastAccessTime -> (timestamp)\n\nThe last time at which the partition was accessed.\n\nStorageDescriptor -> (structure)\n\nProvides information about the physical location where the partition is stored.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nParameters -> (map)\n\nThese key-value pairs define partition parameters.\n\nkey -> (string)\n\nvalue -> (string)\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time at which column statistics were computed for this partition.\n\nJSON Syntax:\n\n{\n  \"Values\": [\"string\", ...],\n  \"LastAccessTime\": timestamp,\n  \"StorageDescriptor\": {\n    \"Columns\": [\n      {\n        \"Name\": \"string\",\n        \"Type\": \"string\",\n        \"Comment\": \"string\",\n        \"Parameters\": {\"string\": \"string\"\n          ...}\n      }\n      ...\n    ],\n    \"Location\": \"string\",\n    \"InputFormat\": \"string\",\n    \"OutputFormat\": \"string\",\n    \"Compressed\": true|false,\n    \"NumberOfBuckets\": integer,\n    \"SerdeInfo\": {\n      \"Name\": \"string\",\n      \"SerializationLibrary\": \"string\",\n      \"Parameters\": {\"string\": \"string\"\n        ...}\n    },\n    \"BucketColumns\": [\"string\", ...],\n    \"SortColumns\": [\n      {\n        \"Column\": \"string\",\n        \"SortOrder\": integer\n      }\n      ...\n    ],\n    \"Parameters\": {\"string\": \"string\"\n      ...},\n    \"SkewedInfo\": {\n      \"SkewedColumnNames\": [\"string\", ...],\n      \"SkewedColumnValues\": [\"string\", ...],\n      \"SkewedColumnValueLocationMaps\": {\"string\": \"string\"\n        ...}\n    },\n    \"StoredAsSubDirectories\": true|false,\n    \"SchemaReference\": {\n      \"SchemaId\": {\n        \"SchemaArn\": \"string\",\n        \"SchemaName\": \"string\",\n        \"RegistryName\": \"string\"\n      },\n      \"SchemaVersionId\": \"string\",\n      \"SchemaVersionNumber\": long\n    }\n  },\n  \"Parameters\": {\"string\": \"string\"\n    ...},\n  \"LastAnalyzedTime\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-registry",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-registry.html",
      "command_description": "Description\n\nUpdates an existing registry which is used to hold a collection of schemas. The updated properties relate to the registry, and do not modify any of the schemas within the registry.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-registry\n--registry-id <value>\n--description <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--registry-id <value>",
        "--description <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--registry-id (structure)\n\nThis is a wrapper structure that may contain the registry name and Amazon Resource Name (ARN).\n\nRegistryName -> (string)\n\nName of the registry. Used only for lookup. One of RegistryArn or RegistryName has to be provided.\n\nRegistryArn -> (string)\n\nArn of the registry to be updated. One of RegistryArn or RegistryName has to be provided.\n\nShorthand Syntax:\n\nRegistryName=string,RegistryArn=string\n\n\nJSON Syntax:\n\n{\n  \"RegistryName\": \"string\",\n  \"RegistryArn\": \"string\"\n}\n\n\n--description (string)\n\nA description of the registry. If description is not provided, this field will not be updated.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRegistryName -> (string)\n\nThe name of the updated registry.\n\nRegistryArn -> (string)\n\nThe Amazon Resource name (ARN) of the updated registry."
    },
    {
      "command_name": "update-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-schema.html",
      "command_description": "Description\n\nUpdates the description, compatibility setting, or version checkpoint for a schema set.\n\nFor updating the compatibility setting, the call will not validate compatibility for the entire set of schema versions with the new compatibility setting. If the value for Compatibility is provided, the VersionNumber (a checkpoint) is also required. The API will validate the checkpoint version number for consistency.\n\nIf the value for the VersionNumber (checkpoint) is provided, Compatibility is optional and this can be used to set/reset a checkpoint for the schema.\n\nThis update will happen only if the schema is in the AVAILABLE state.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-schema\n--schema-id <value>\n[--schema-version-number <value>]\n[--compatibility <value>]\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-id <value>",
        "[--schema-version-number <value>]",
        "[--compatibility <value>]",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-id (structure)\n\nThis is a wrapper structure to contain schema identity fields. The structure contains:\n\nSchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaId$SchemaName: The name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nShorthand Syntax:\n\nSchemaArn=string,SchemaName=string,RegistryName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"SchemaName\": \"string\",\n  \"RegistryName\": \"string\"\n}\n\n\n--schema-version-number (structure)\n\nVersion number required for check pointing. One of VersionNumber or Compatibility has to be provided.\n\nLatestVersion -> (boolean)\n\nThe latest version available for the schema.\n\nVersionNumber -> (long)\n\nThe version number of the schema.\n\nShorthand Syntax:\n\nLatestVersion=boolean,VersionNumber=long\n\n\nJSON Syntax:\n\n{\n  \"LatestVersion\": true|false,\n  \"VersionNumber\": long\n}\n\n\n--compatibility (string)\n\nThe new compatibility setting for the schema.\n\nPossible values:\n\nNONE\n\nDISABLED\n\nBACKWARD\n\nBACKWARD_ALL\n\nFORWARD\n\nFORWARD_ALL\n\nFULL\n\nFULL_ALL\n\n--description (string)\n\nThe new description for the schema.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema.\n\nSchemaName -> (string)\n\nThe name of the schema.\n\nRegistryName -> (string)\n\nThe name of the registry that contains the schema."
    },
    {
      "command_name": "update-table",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-table.html",
      "command_description": "Description\n\nUpdates a metadata table in the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-table\n[--catalog-id <value>]\n--database-name <value>\n--table-input <value>\n[--skip-archive | --no-skip-archive]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--table-input <value>",
        "[--skip-archive | --no-skip-archive]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the table resides. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database in which the table resides. For Hive compatibility, this name is entirely lowercase.\n\n--table-input (structure)\n\nAn updated TableInput object to define the metadata table in the catalog.\n\nName -> (string)\n\nThe table name. For Hive compatibility, this is folded to lowercase when it is stored.\n\nDescription -> (string)\n\nA description of the table.\n\nOwner -> (string)\n\nThe table owner.\n\nLastAccessTime -> (timestamp)\n\nThe last time that the table was accessed.\n\nLastAnalyzedTime -> (timestamp)\n\nThe last time that column statistics were computed for this table.\n\nRetention -> (integer)\n\nThe retention time for this table.\n\nStorageDescriptor -> (structure)\n\nA storage descriptor containing information about the physical storage of this table.\n\nColumns -> (list)\n\nA list of the Columns in the table.\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nLocation -> (string)\n\nThe physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.\n\nInputFormat -> (string)\n\nThe input format: SequenceFileInputFormat (binary), or TextInputFormat , or a custom format.\n\nOutputFormat -> (string)\n\nThe output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat , or a custom format.\n\nCompressed -> (boolean)\n\nTrue if the data in the table is compressed, or False if not.\n\nNumberOfBuckets -> (integer)\n\nMust be specified if the table contains any dimension columns.\n\nSerdeInfo -> (structure)\n\nThe serialization/deserialization (SerDe) information.\n\nName -> (string)\n\nName of the SerDe.\n\nSerializationLibrary -> (string)\n\nUsually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .\n\nParameters -> (map)\n\nThese key-value pairs define initialization parameters for the SerDe.\n\nkey -> (string)\n\nvalue -> (string)\n\nBucketColumns -> (list)\n\nA list of reducer grouping columns, clustering columns, and bucketing columns in the table.\n\n(string)\n\nSortColumns -> (list)\n\nA list specifying the sort order of each bucket in the table.\n\n(structure)\n\nSpecifies the sort order of a sorted column.\n\nColumn -> (string)\n\nThe name of the column.\n\nSortOrder -> (integer)\n\nIndicates that the column is sorted in ascending order (== 1 ), or in descending order (==0 ).\n\nParameters -> (map)\n\nThe user-supplied properties in key-value form.\n\nkey -> (string)\n\nvalue -> (string)\n\nSkewedInfo -> (structure)\n\nThe information about values that appear frequently in a column (skewed values).\n\nSkewedColumnNames -> (list)\n\nA list of names of columns that contain skewed values.\n\n(string)\n\nSkewedColumnValues -> (list)\n\nA list of values that appear so frequently as to be considered skewed.\n\n(string)\n\nSkewedColumnValueLocationMaps -> (map)\n\nA mapping of skewed values to the columns that contain them.\n\nkey -> (string)\n\nvalue -> (string)\n\nStoredAsSubDirectories -> (boolean)\n\nTrue if the table data is stored in subdirectories, or False if not.\n\nSchemaReference -> (structure)\n\nAn object that references a schema stored in the Glue Schema Registry.\n\nWhen creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.\n\nSchemaId -> (structure)\n\nA structure that contains schema identity fields. Either this or the SchemaVersionId has to be provided.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema. One of SchemaArn or SchemaName has to be provided.\n\nSchemaName -> (string)\n\nThe name of the schema. One of SchemaArn or SchemaName has to be provided.\n\nRegistryName -> (string)\n\nThe name of the schema registry that contains the schema.\n\nSchemaVersionId -> (string)\n\nThe unique ID assigned to a version of the schema. Either this or the SchemaId has to be provided.\n\nSchemaVersionNumber -> (long)\n\nThe version number of the schema.\n\nPartitionKeys -> (list)\n\nA list of columns by which the table is partitioned. Only primitive types are supported as partition keys.\n\nWhen you create a table used by Amazon Athena, and you do not specify any partitionKeys , you must at least set the value of partitionKeys to an empty list. For example:\n\n\"PartitionKeys\": []\n\n(structure)\n\nA column in a Table .\n\nName -> (string)\n\nThe name of the Column .\n\nType -> (string)\n\nThe data type of the Column .\n\nComment -> (string)\n\nA free-form text comment.\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the column.\n\nkey -> (string)\n\nvalue -> (string)\n\nViewOriginalText -> (string)\n\nIf the table is a view, the original text of the view; otherwise null .\n\nViewExpandedText -> (string)\n\nIf the table is a view, the expanded text of the view; otherwise null .\n\nTableType -> (string)\n\nThe type of this table (EXTERNAL_TABLE , VIRTUAL_VIEW , etc.).\n\nParameters -> (map)\n\nThese key-value pairs define properties associated with the table.\n\nkey -> (string)\n\nvalue -> (string)\n\nTargetTable -> (structure)\n\nA TableIdentifier structure that describes a target table for resource linking.\n\nCatalogId -> (string)\n\nThe ID of the Data Catalog in which the table resides.\n\nDatabaseName -> (string)\n\nThe name of the catalog database that contains the target table.\n\nName -> (string)\n\nThe name of the target table.\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Description\": \"string\",\n  \"Owner\": \"string\",\n  \"LastAccessTime\": timestamp,\n  \"LastAnalyzedTime\": timestamp,\n  \"Retention\": integer,\n  \"StorageDescriptor\": {\n    \"Columns\": [\n      {\n        \"Name\": \"string\",\n        \"Type\": \"string\",\n        \"Comment\": \"string\",\n        \"Parameters\": {\"string\": \"string\"\n          ...}\n      }\n      ...\n    ],\n    \"Location\": \"string\",\n    \"InputFormat\": \"string\",\n    \"OutputFormat\": \"string\",\n    \"Compressed\": true|false,\n    \"NumberOfBuckets\": integer,\n    \"SerdeInfo\": {\n      \"Name\": \"string\",\n      \"SerializationLibrary\": \"string\",\n      \"Parameters\": {\"string\": \"string\"\n        ...}\n    },\n    \"BucketColumns\": [\"string\", ...],\n    \"SortColumns\": [\n      {\n        \"Column\": \"string\",\n        \"SortOrder\": integer\n      }\n      ...\n    ],\n    \"Parameters\": {\"string\": \"string\"\n      ...},\n    \"SkewedInfo\": {\n      \"SkewedColumnNames\": [\"string\", ...],\n      \"SkewedColumnValues\": [\"string\", ...],\n      \"SkewedColumnValueLocationMaps\": {\"string\": \"string\"\n        ...}\n    },\n    \"StoredAsSubDirectories\": true|false,\n    \"SchemaReference\": {\n      \"SchemaId\": {\n        \"SchemaArn\": \"string\",\n        \"SchemaName\": \"string\",\n        \"RegistryName\": \"string\"\n      },\n      \"SchemaVersionId\": \"string\",\n      \"SchemaVersionNumber\": long\n    }\n  },\n  \"PartitionKeys\": [\n    {\n      \"Name\": \"string\",\n      \"Type\": \"string\",\n      \"Comment\": \"string\",\n      \"Parameters\": {\"string\": \"string\"\n        ...}\n    }\n    ...\n  ],\n  \"ViewOriginalText\": \"string\",\n  \"ViewExpandedText\": \"string\",\n  \"TableType\": \"string\",\n  \"Parameters\": {\"string\": \"string\"\n    ...},\n  \"TargetTable\": {\n    \"CatalogId\": \"string\",\n    \"DatabaseName\": \"string\",\n    \"Name\": \"string\"\n  }\n}\n\n\n--skip-archive | --no-skip-archive (boolean)\n\nBy default, UpdateTable always creates an archived version of the table before updating it. However, if skipArchive is set to true, UpdateTable does not create the archived version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-trigger",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-trigger.html",
      "command_description": "Description\n\nUpdates a trigger definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-trigger\n--name <value>\n--trigger-update <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--trigger-update <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the trigger to update.\n\n--trigger-update (structure)\n\nThe new values with which to update the trigger.\n\nName -> (string)\n\nReserved for future use.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Description\": \"string\",\n  \"Schedule\": \"string\",\n  \"Actions\": [\n    {\n      \"JobName\": \"string\",\n      \"Arguments\": {\"string\": \"string\"\n        ...},\n      \"Timeout\": integer,\n      \"SecurityConfiguration\": \"string\",\n      \"NotificationProperty\": {\n        \"NotifyDelayAfter\": integer\n      },\n      \"CrawlerName\": \"string\"\n    }\n    ...\n  ],\n  \"Predicate\": {\n    \"Logical\": \"AND\"|\"ANY\",\n    \"Conditions\": [\n      {\n        \"LogicalOperator\": \"EQUALS\",\n        \"JobName\": \"string\",\n        \"State\": \"STARTING\"|\"RUNNING\"|\"STOPPING\"|\"STOPPED\"|\"SUCCEEDED\"|\"FAILED\"|\"TIMEOUT\",\n        \"CrawlerName\": \"string\",\n        \"CrawlState\": \"RUNNING\"|\"CANCELLING\"|\"CANCELLED\"|\"SUCCEEDED\"|\"FAILED\"\n      }\n      ...\n    ]\n  },\n  \"EventBatchingCondition\": {\n    \"BatchSize\": integer,\n    \"BatchWindow\": integer\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrigger -> (structure)\n\nThe resulting trigger definition.\n\nName -> (string)\n\nThe name of the trigger.\n\nWorkflowName -> (string)\n\nThe name of the workflow associated with the trigger.\n\nId -> (string)\n\nReserved for future use.\n\nType -> (string)\n\nThe type of trigger that this is.\n\nState -> (string)\n\nThe current state of the trigger.\n\nDescription -> (string)\n\nA description of this trigger.\n\nSchedule -> (string)\n\nA cron expression used to specify the schedule (see Time-Based Schedules for Jobs and Crawlers . For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *) .\n\nActions -> (list)\n\nThe actions initiated by this trigger.\n\n(structure)\n\nDefines an action to be initiated by a trigger.\n\nJobName -> (string)\n\nThe name of a job to be run.\n\nArguments -> (map)\n\nThe job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\nYou can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.\n\nFor information about how to specify and consume your own Job arguments, see the Calling Glue APIs in Python topic in the developer guide.\n\nFor information about the key-value pairs that Glue consumes to set up your job, see the Special Parameters Used by Glue topic in the developer guide.\n\nkey -> (string)\n\nvalue -> (string)\n\nTimeout -> (integer)\n\nThe JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\nSecurityConfiguration -> (string)\n\nThe name of the SecurityConfiguration structure to be used with this action.\n\nNotificationProperty -> (structure)\n\nSpecifies configuration properties of a job run notification.\n\nNotifyDelayAfter -> (integer)\n\nAfter a job run starts, the number of minutes to wait before sending a job run delay notification.\n\nCrawlerName -> (string)\n\nThe name of the crawler to be used with this action.\n\nPredicate -> (structure)\n\nThe predicate of this trigger, which defines when it will fire.\n\nLogical -> (string)\n\nAn optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\nConditions -> (list)\n\nA list of the conditions that determine when the trigger will fire.\n\n(structure)\n\nDefines a condition under which a trigger fires.\n\nLogicalOperator -> (string)\n\nA logical operator.\n\nJobName -> (string)\n\nThe name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\nState -> (string)\n\nThe condition state. Currently, the only job states that a trigger can listen for are SUCCEEDED , STOPPED , FAILED , and TIMEOUT . The only crawler states that a trigger can listen for are SUCCEEDED , FAILED , and CANCELLED .\n\nCrawlerName -> (string)\n\nThe name of the crawler to which this condition applies.\n\nCrawlState -> (string)\n\nThe state of the crawler to which this condition applies.\n\nEventBatchingCondition -> (structure)\n\nBatch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\nBatchSize -> (integer)\n\nNumber of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\nBatchWindow -> (integer)\n\nWindow of time in seconds after which EventBridge event trigger fires. Window starts when first event is received."
    },
    {
      "command_name": "update-user-defined-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-user-defined-function.html",
      "command_description": "Description\n\nUpdates an existing function definition in the Data Catalog.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-user-defined-function\n[--catalog-id <value>]\n--database-name <value>\n--function-name <value>\n--function-input <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--catalog-id <value>]",
        "--database-name <value>",
        "--function-name <value>",
        "--function-input <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--catalog-id (string)\n\nThe ID of the Data Catalog where the function to be updated is located. If none is provided, the Amazon Web Services account ID is used by default.\n\n--database-name (string)\n\nThe name of the catalog database where the function to be updated is located.\n\n--function-name (string)\n\nThe name of the function.\n\n--function-input (structure)\n\nA FunctionInput object that redefines the function in the Data Catalog.\n\nFunctionName -> (string)\n\nThe name of the function.\n\nClassName -> (string)\n\nThe Java class that contains the function code.\n\nOwnerName -> (string)\n\nThe owner of the function.\n\nOwnerType -> (string)\n\nThe owner type.\n\nResourceUris -> (list)\n\nThe resource URIs for the function.\n\n(structure)\n\nThe URIs for function resources.\n\nResourceType -> (string)\n\nThe type of the resource.\n\nUri -> (string)\n\nThe URI for accessing the resource.\n\nShorthand Syntax:\n\nFunctionName=string,ClassName=string,OwnerName=string,OwnerType=string,ResourceUris=[{ResourceType=string,Uri=string},{ResourceType=string,Uri=string}]\n\n\nJSON Syntax:\n\n{\n  \"FunctionName\": \"string\",\n  \"ClassName\": \"string\",\n  \"OwnerName\": \"string\",\n  \"OwnerType\": \"USER\"|\"ROLE\"|\"GROUP\",\n  \"ResourceUris\": [\n    {\n      \"ResourceType\": \"JAR\"|\"FILE\"|\"ARCHIVE\",\n      \"Uri\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-workflow",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/update-workflow.html",
      "command_description": "Description\n\nUpdates an existing workflow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-workflow\n--name <value>\n[--description <value>]\n[--default-run-properties <value>]\n[--max-concurrent-runs <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--default-run-properties <value>]",
        "[--max-concurrent-runs <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the workflow to be updated.\n\n--description (string)\n\nThe description of the workflow.\n\n--default-run-properties (map)\n\nA collection of properties to be used as part of each execution of the workflow.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--max-concurrent-runs (integer)\n\nYou can use this parameter to prevent unwanted multiple updates to data, to control costs, or in some cases, to prevent exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the workflow which was specified in input."
    }
  ],
  "service_description": "Description\n\nDefines the public endpoint for the Glue service."
}