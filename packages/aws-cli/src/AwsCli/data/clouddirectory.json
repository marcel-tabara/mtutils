{
  "service_name": "clouddirectory",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/index.html",
  "service_commands": [
    {
      "command_name": "add-facet-to-object",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/add-facet-to-object.html",
      "command_description": "Description\n\nAdds a new Facet to an object. An object can have more than one facet applied on it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-facet-to-object\n--directory-arn <value>\n--schema-facet <value>\n[--object-attribute-list <value>]\n--object-reference <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--schema-facet <value>",
        "[--object-attribute-list <value>]",
        "--object-reference <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where the object resides. For more information, see arns .\n\n--schema-facet (structure)\n\nIdentifiers for the facet that you are adding to the object. See SchemaFacet for details.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nShorthand Syntax:\n\nSchemaArn=string,FacetName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"FacetName\": \"string\"\n}\n\n\n--object-attribute-list (list)\n\nAttributes on the facet that you are adding to the object.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nShorthand Syntax:\n\nKey={SchemaArn=string,FacetName=string,Name=string},Value={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": {\n      \"SchemaArn\": \"string\",\n      \"FacetName\": \"string\",\n      \"Name\": \"string\"\n    },\n    \"Value\": {\n      \"StringValue\": \"string\",\n      \"BinaryValue\": blob,\n      \"BooleanValue\": true|false,\n      \"NumberValue\": \"string\",\n      \"DatetimeValue\": timestamp\n    }\n  }\n  ...\n]\n\n\n--object-reference (structure)\n\nA reference to the object you are adding the specified facet to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "apply-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/apply-schema.html",
      "command_description": "Description\n\nCopies the input published schema, at the specified version, into the Directory with the same name and version as that of the published schema.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  apply-schema\n--published-schema-arn <value>\n--directory-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--published-schema-arn <value>",
        "--directory-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--published-schema-arn (string)\n\nPublished schema Amazon Resource Name (ARN) that needs to be copied. For more information, see arns .\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory into which the schema is copied. For more information, see arns .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAppliedSchemaArn -> (string)\n\nThe applied schema ARN that is associated with the copied schema in the Directory . You can use this ARN to describe the schema information applied on this directory. For more information, see arns .\n\nDirectoryArn -> (string)\n\nThe ARN that is associated with the Directory . For more information, see arns ."
    },
    {
      "command_name": "attach-object",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/attach-object.html",
      "command_description": "Description\n\nAttaches an existing object to another object. An object can be accessed in two ways:\n\nUsing the path\n\nUsing ObjectIdentifier\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  attach-object\n--directory-arn <value>\n--parent-reference <value>\n--child-reference <value>\n--link-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--parent-reference <value>",
        "--child-reference <value>",
        "--link-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nAmazon Resource Name (ARN) that is associated with the Directory where both objects reside. For more information, see arns .\n\n--parent-reference (structure)\n\nThe parent object reference.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--child-reference (structure)\n\nThe child object reference to be attached to the object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--link-name (string)\n\nThe link name with which the child object is attached to the parent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttachedObjectIdentifier -> (string)\n\nThe attached ObjectIdentifier , which is the child ObjectIdentifier ."
    },
    {
      "command_name": "attach-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/attach-policy.html",
      "command_description": "Description\n\nAttaches a policy object to a regular object. An object can have a limited number of attached policies.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  attach-policy\n--directory-arn <value>\n--policy-reference <value>\n--object-reference <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--policy-reference <value>",
        "--object-reference <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where both objects reside. For more information, see arns .\n\n--policy-reference (structure)\n\nThe reference that is associated with the policy object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--object-reference (structure)\n\nThe reference that identifies the object to which the policy will be attached.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "attach-to-index",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/attach-to-index.html",
      "command_description": "Description\n\nAttaches the specified object to the specified index.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  attach-to-index\n--directory-arn <value>\n--index-reference <value>\n--target-reference <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--index-reference <value>",
        "--target-reference <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) of the directory where the object and index exist.\n\n--index-reference (structure)\n\nA reference to the index that you are attaching the object to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--target-reference (structure)\n\nA reference to the object that you are attaching to the index.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttachedObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the object that was attached to the index."
    },
    {
      "command_name": "attach-typed-link",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/attach-typed-link.html",
      "command_description": "Description\n\nAttaches a typed link to a specified source and target object. For more information, see Typed Links .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  attach-typed-link\n--directory-arn <value>\n--source-object-reference <value>\n--target-object-reference <value>\n--typed-link-facet <value>\n--attributes <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--source-object-reference <value>",
        "--target-object-reference <value>",
        "--typed-link-facet <value>",
        "--attributes <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) of the directory where you want to attach the typed link.\n\n--source-object-reference (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--target-object-reference (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--typed-link-facet (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nShorthand Syntax:\n\nSchemaArn=string,TypedLinkName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"TypedLinkName\": \"string\"\n}\n\n\n--attributes (list)\n\nA set of attributes that are associated with the typed link.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nShorthand Syntax:\n\nAttributeName=string,Value={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"AttributeName\": \"string\",\n    \"Value\": {\n      \"StringValue\": \"string\",\n      \"BinaryValue\": blob,\n      \"BooleanValue\": true|false,\n      \"NumberValue\": \"string\",\n      \"DatetimeValue\": timestamp\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTypedLinkSpecifier -> (structure)\n\nReturns a typed link specifier as output.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value."
    },
    {
      "command_name": "batch-read",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/batch-read.html",
      "command_description": "Description\n\nPerforms all the read operations in a batch.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-read\n--directory-arn <value>\n--operations <value>\n[--consistency-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--operations <value>",
        "[--consistency-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory . For more information, see arns .\n\n--operations (list)\n\nA list of operations that are part of the batch.\n\n(structure)\n\nRepresents the output of a BatchRead operation.\n\nListObjectAttributes -> (structure)\n\nLists all attributes that are associated with an object.\n\nObjectReference -> (structure)\n\nReference of the object whose attributes need to be listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nNextToken -> (string)\n\nThe pagination token.\n\nMaxResults -> (integer)\n\nThe maximum number of items to be retrieved in a single call. This is an approximate number.\n\nFacetFilter -> (structure)\n\nUsed to filter the list of object attributes that are associated with a certain facet.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nListObjectChildren -> (structure)\n\nReturns a paginated list of child objects that are associated with a given object.\n\nObjectReference -> (structure)\n\nReference of the object for which child objects are being listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nNextToken -> (string)\n\nThe pagination token.\n\nMaxResults -> (integer)\n\nMaximum number of items to be retrieved in a single call. This is an approximate number.\n\nListAttachedIndices -> (structure)\n\nLists indices attached to an object.\n\nTargetReference -> (structure)\n\nA reference to the object that has indices attached.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nNextToken -> (string)\n\nThe pagination token.\n\nMaxResults -> (integer)\n\nThe maximum number of results to retrieve.\n\nListObjectParentPaths -> (structure)\n\nRetrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see Directory Structure .\n\nObjectReference -> (structure)\n\nThe reference that identifies the object whose attributes will be listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nNextToken -> (string)\n\nThe pagination token.\n\nMaxResults -> (integer)\n\nThe maximum number of results to retrieve.\n\nGetObjectInformation -> (structure)\n\nRetrieves metadata about an object.\n\nObjectReference -> (structure)\n\nA reference to the object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nGetObjectAttributes -> (structure)\n\nRetrieves attributes within a facet that are associated with an object.\n\nObjectReference -> (structure)\n\nReference that identifies the object whose attributes will be retrieved.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nSchemaFacet -> (structure)\n\nIdentifier for the facet whose attributes will be retrieved. See SchemaFacet for details.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nAttributeNames -> (list)\n\nList of attribute names whose values will be retrieved.\n\n(string)\n\nListObjectParents -> (structure)\n\nLists parent objects that are associated with a given object in pagination fashion.\n\nObjectReference -> (structure)\n\nThe reference that identifies an object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nNextToken -> (string)\n\nThe pagination token.\n\nMaxResults -> (integer)\n\nThe maximum number of items to be retrieved in a single call. This is an approximate number.\n\nListObjectPolicies -> (structure)\n\nReturns policies attached to an object in pagination fashion.\n\nObjectReference -> (structure)\n\nThe reference that identifies the object whose attributes will be listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nNextToken -> (string)\n\nThe pagination token.\n\nMaxResults -> (integer)\n\nThe maximum number of results to retrieve.\n\nListPolicyAttachments -> (structure)\n\nReturns all of the ObjectIdentifiers to which a given policy is attached.\n\nPolicyReference -> (structure)\n\nThe reference that identifies the policy object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nNextToken -> (string)\n\nThe pagination token.\n\nMaxResults -> (integer)\n\nThe maximum number of results to retrieve.\n\nLookupPolicy -> (structure)\n\nLists all policies from the root of the Directory to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don’t have the policies attached, it returns the ObjectIdentifier for such objects. If policies are present, it returns ObjectIdentifier , policyId , and policyType . Paths that don’t lead to the root from the target object are ignored. For more information, see Policies .\n\nObjectReference -> (structure)\n\nReference that identifies the object whose policies will be looked up.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nNextToken -> (string)\n\nThe pagination token.\n\nMaxResults -> (integer)\n\nThe maximum number of results to retrieve.\n\nListIndex -> (structure)\n\nLists objects attached to the specified index.\n\nRangesOnIndexedValues -> (list)\n\nSpecifies the ranges of indexed values that you want to query.\n\n(structure)\n\nA range of attributes.\n\nAttributeKey -> (structure)\n\nThe key of the attribute that the attribute range covers.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nRange -> (structure)\n\nThe range of attribute values being selected.\n\nStartMode -> (string)\n\nThe inclusive or exclusive range start.\n\nStartValue -> (structure)\n\nThe value to start the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nEndMode -> (string)\n\nThe inclusive or exclusive range end.\n\nEndValue -> (structure)\n\nThe attribute value to terminate the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nIndexReference -> (structure)\n\nThe reference to the index to list.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nMaxResults -> (integer)\n\nThe maximum number of results to retrieve.\n\nNextToken -> (string)\n\nThe pagination token.\n\nListOutgoingTypedLinks -> (structure)\n\nReturns a paginated list of all the outgoing TypedLinkSpecifier information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see Typed Links .\n\nObjectReference -> (structure)\n\nThe reference that identifies the object whose attributes will be listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nFilterAttributeRanges -> (list)\n\nProvides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.\n\n(structure)\n\nIdentifies the range of attributes that are used by a specified filter.\n\nAttributeName -> (string)\n\nThe unique name of the typed link attribute.\n\nRange -> (structure)\n\nThe range of attribute values that are being selected.\n\nStartMode -> (string)\n\nThe inclusive or exclusive range start.\n\nStartValue -> (structure)\n\nThe value to start the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nEndMode -> (string)\n\nThe inclusive or exclusive range end.\n\nEndValue -> (structure)\n\nThe attribute value to terminate the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nFilterTypedLink -> (structure)\n\nFilters are interpreted in the order of the attributes defined on the typed link facet, not the order they are supplied to any API calls.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nNextToken -> (string)\n\nThe pagination token.\n\nMaxResults -> (integer)\n\nThe maximum number of results to retrieve.\n\nListIncomingTypedLinks -> (structure)\n\nReturns a paginated list of all the incoming TypedLinkSpecifier information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see Typed Links .\n\nObjectReference -> (structure)\n\nThe reference that identifies the object whose attributes will be listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nFilterAttributeRanges -> (list)\n\nProvides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.\n\n(structure)\n\nIdentifies the range of attributes that are used by a specified filter.\n\nAttributeName -> (string)\n\nThe unique name of the typed link attribute.\n\nRange -> (structure)\n\nThe range of attribute values that are being selected.\n\nStartMode -> (string)\n\nThe inclusive or exclusive range start.\n\nStartValue -> (structure)\n\nThe value to start the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nEndMode -> (string)\n\nThe inclusive or exclusive range end.\n\nEndValue -> (structure)\n\nThe attribute value to terminate the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nFilterTypedLink -> (structure)\n\nFilters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nNextToken -> (string)\n\nThe pagination token.\n\nMaxResults -> (integer)\n\nThe maximum number of results to retrieve.\n\nGetLinkAttributes -> (structure)\n\nRetrieves attributes that are associated with a typed link.\n\nTypedLinkSpecifier -> (structure)\n\nAllows a typed link specifier to be accepted as input.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nAttributeNames -> (list)\n\nA list of attribute names whose values will be retrieved.\n\n(string)\n\nJSON Syntax:\n\n[\n  {\n    \"ListObjectAttributes\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"NextToken\": \"string\",\n      \"MaxResults\": integer,\n      \"FacetFilter\": {\n        \"SchemaArn\": \"string\",\n        \"FacetName\": \"string\"\n      }\n    },\n    \"ListObjectChildren\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"NextToken\": \"string\",\n      \"MaxResults\": integer\n    },\n    \"ListAttachedIndices\": {\n      \"TargetReference\": {\n        \"Selector\": \"string\"\n      },\n      \"NextToken\": \"string\",\n      \"MaxResults\": integer\n    },\n    \"ListObjectParentPaths\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"NextToken\": \"string\",\n      \"MaxResults\": integer\n    },\n    \"GetObjectInformation\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      }\n    },\n    \"GetObjectAttributes\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"SchemaFacet\": {\n        \"SchemaArn\": \"string\",\n        \"FacetName\": \"string\"\n      },\n      \"AttributeNames\": [\"string\", ...]\n    },\n    \"ListObjectParents\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"NextToken\": \"string\",\n      \"MaxResults\": integer\n    },\n    \"ListObjectPolicies\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"NextToken\": \"string\",\n      \"MaxResults\": integer\n    },\n    \"ListPolicyAttachments\": {\n      \"PolicyReference\": {\n        \"Selector\": \"string\"\n      },\n      \"NextToken\": \"string\",\n      \"MaxResults\": integer\n    },\n    \"LookupPolicy\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"NextToken\": \"string\",\n      \"MaxResults\": integer\n    },\n    \"ListIndex\": {\n      \"RangesOnIndexedValues\": [\n        {\n          \"AttributeKey\": {\n            \"SchemaArn\": \"string\",\n            \"FacetName\": \"string\",\n            \"Name\": \"string\"\n          },\n          \"Range\": {\n            \"StartMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n            \"StartValue\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            },\n            \"EndMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n            \"EndValue\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            }\n          }\n        }\n        ...\n      ],\n      \"IndexReference\": {\n        \"Selector\": \"string\"\n      },\n      \"MaxResults\": integer,\n      \"NextToken\": \"string\"\n    },\n    \"ListOutgoingTypedLinks\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"FilterAttributeRanges\": [\n        {\n          \"AttributeName\": \"string\",\n          \"Range\": {\n            \"StartMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n            \"StartValue\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            },\n            \"EndMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n            \"EndValue\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            }\n          }\n        }\n        ...\n      ],\n      \"FilterTypedLink\": {\n        \"SchemaArn\": \"string\",\n        \"TypedLinkName\": \"string\"\n      },\n      \"NextToken\": \"string\",\n      \"MaxResults\": integer\n    },\n    \"ListIncomingTypedLinks\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"FilterAttributeRanges\": [\n        {\n          \"AttributeName\": \"string\",\n          \"Range\": {\n            \"StartMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n            \"StartValue\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            },\n            \"EndMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n            \"EndValue\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            }\n          }\n        }\n        ...\n      ],\n      \"FilterTypedLink\": {\n        \"SchemaArn\": \"string\",\n        \"TypedLinkName\": \"string\"\n      },\n      \"NextToken\": \"string\",\n      \"MaxResults\": integer\n    },\n    \"GetLinkAttributes\": {\n      \"TypedLinkSpecifier\": {\n        \"TypedLinkFacet\": {\n          \"SchemaArn\": \"string\",\n          \"TypedLinkName\": \"string\"\n        },\n        \"SourceObjectReference\": {\n          \"Selector\": \"string\"\n        },\n        \"TargetObjectReference\": {\n          \"Selector\": \"string\"\n        },\n        \"IdentityAttributeValues\": [\n          {\n            \"AttributeName\": \"string\",\n            \"Value\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            }\n          }\n          ...\n        ]\n      },\n      \"AttributeNames\": [\"string\", ...]\n    }\n  }\n  ...\n]\n\n\n--consistency-level (string)\n\nRepresents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResponses -> (list)\n\nA list of all the responses for each batch read.\n\n(structure)\n\nRepresents the output of a BatchRead response operation.\n\nSuccessfulResponse -> (structure)\n\nIdentifies which operation in a batch has succeeded.\n\nListObjectAttributes -> (structure)\n\nLists all attributes that are associated with an object.\n\nAttributes -> (list)\n\nThe attributes map that is associated with the object. AttributeArn is the key; attribute value is the value.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nNextToken -> (string)\n\nThe pagination token.\n\nListObjectChildren -> (structure)\n\nReturns a paginated list of child objects that are associated with a given object.\n\nChildren -> (map)\n\nThe children structure, which is a map with the key as the LinkName and ObjectIdentifier as the value.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe pagination token.\n\nGetObjectInformation -> (structure)\n\nRetrieves metadata about an object.\n\nSchemaFacets -> (list)\n\nThe facets attached to the specified object.\n\n(structure)\n\nA facet.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the specified object.\n\nGetObjectAttributes -> (structure)\n\nRetrieves attributes within a facet that are associated with an object.\n\nAttributes -> (list)\n\nThe attribute values that are associated with an object.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nListAttachedIndices -> (structure)\n\nLists indices attached to an object.\n\nIndexAttachments -> (list)\n\nThe indices attached to the specified object.\n\n(structure)\n\nRepresents an index and an attached object.\n\nIndexedAttributes -> (list)\n\nThe indexed attribute values.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nObjectIdentifier -> (string)\n\nIn response to ListIndex , the ObjectIdentifier of the object attached to the index. In response to ListAttachedIndices , the ObjectIdentifier of the index attached to the object. This field will always contain the ObjectIdentifier of the object on the opposite side of the attachment specified in the query.\n\nNextToken -> (string)\n\nThe pagination token.\n\nListObjectParentPaths -> (structure)\n\nRetrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see Directory Structure .\n\nPathToObjectIdentifiersList -> (list)\n\nReturns the path to the ObjectIdentifiers that are associated with the directory.\n\n(structure)\n\nReturns the path to the ObjectIdentifiers that is associated with the directory.\n\nPath -> (string)\n\nThe path that is used to identify the object starting from directory root.\n\nObjectIdentifiers -> (list)\n\nLists ObjectIdentifiers starting from directory root to the object in the request.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token.\n\nListObjectPolicies -> (structure)\n\nReturns policies attached to an object in pagination fashion.\n\nAttachedPolicyIds -> (list)\n\nA list of policy ObjectIdentifiers , that are attached to the object.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token.\n\nListPolicyAttachments -> (structure)\n\nReturns all of the ObjectIdentifiers to which a given policy is attached.\n\nObjectIdentifiers -> (list)\n\nA list of ObjectIdentifiers to which the policy is attached.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token.\n\nLookupPolicy -> (structure)\n\nLists all policies from the root of the Directory to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don’t have the policies attached, it returns the ObjectIdentifier for such objects. If policies are present, it returns ObjectIdentifier , policyId , and policyType . Paths that don’t lead to the root from the target object are ignored. For more information, see Policies .\n\nPolicyToPathList -> (list)\n\nProvides list of path to policies. Policies contain PolicyId , ObjectIdentifier , and PolicyType . For more information, see Policies .\n\n(structure)\n\nUsed when a regular object exists in a Directory and you want to find all of the policies that are associated with that object and the parent to that object.\n\nPath -> (string)\n\nThe path that is referenced from the root.\n\nPolicies -> (list)\n\nList of policy objects.\n\n(structure)\n\nContains the PolicyType , PolicyId , and the ObjectIdentifier to which it is attached. For more information, see Policies .\n\nPolicyId -> (string)\n\nThe ID of PolicyAttachment .\n\nObjectIdentifier -> (string)\n\nThe ObjectIdentifier that is associated with PolicyAttachment .\n\nPolicyType -> (string)\n\nThe type of policy that can be associated with PolicyAttachment .\n\nNextToken -> (string)\n\nThe pagination token.\n\nListIndex -> (structure)\n\nLists objects attached to the specified index.\n\nIndexAttachments -> (list)\n\nThe objects and indexed values attached to the index.\n\n(structure)\n\nRepresents an index and an attached object.\n\nIndexedAttributes -> (list)\n\nThe indexed attribute values.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nObjectIdentifier -> (string)\n\nIn response to ListIndex , the ObjectIdentifier of the object attached to the index. In response to ListAttachedIndices , the ObjectIdentifier of the index attached to the object. This field will always contain the ObjectIdentifier of the object on the opposite side of the attachment specified in the query.\n\nNextToken -> (string)\n\nThe pagination token.\n\nListOutgoingTypedLinks -> (structure)\n\nReturns a paginated list of all the outgoing TypedLinkSpecifier information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see Typed Links .\n\nTypedLinkSpecifiers -> (list)\n\nReturns a typed link specifier as output.\n\n(structure)\n\nContains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The AttachTypedLink API returns a typed link specifier while the DetachTypedLink API accepts one as input. Similarly, the ListIncomingTypedLinks and ListOutgoingTypedLinks API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nNextToken -> (string)\n\nThe pagination token.\n\nListIncomingTypedLinks -> (structure)\n\nReturns a paginated list of all the incoming TypedLinkSpecifier information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see Typed Links .\n\nLinkSpecifiers -> (list)\n\nReturns one or more typed link specifiers as output.\n\n(structure)\n\nContains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The AttachTypedLink API returns a typed link specifier while the DetachTypedLink API accepts one as input. Similarly, the ListIncomingTypedLinks and ListOutgoingTypedLinks API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nNextToken -> (string)\n\nThe pagination token.\n\nGetLinkAttributes -> (structure)\n\nThe list of attributes to retrieve from the typed link.\n\nAttributes -> (list)\n\nThe attributes that are associated with the typed link.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nListObjectParents -> (structure)\n\nThe list of parent objects to retrieve.\n\nParentLinks -> (list)\n\nReturns a list of parent reference and LinkName Tuples.\n\n(structure)\n\nA pair of ObjectIdentifier and LinkName.\n\nObjectIdentifier -> (string)\n\nThe ID that is associated with the object.\n\nLinkName -> (string)\n\nThe name of the link between the parent and the child object.\n\nNextToken -> (string)\n\nThe pagination token.\n\nExceptionResponse -> (structure)\n\nIdentifies which operation in a batch has failed.\n\nType -> (string)\n\nA type of exception, such as InvalidArnException .\n\nMessage -> (string)\n\nAn exception message that is associated with the failure."
    },
    {
      "command_name": "batch-write",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/batch-write.html",
      "command_description": "Description\n\nPerforms all the write operations in a batch. Either all the operations succeed or none.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-write\n--directory-arn <value>\n--operations <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--operations <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory . For more information, see arns .\n\n--operations (list)\n\nA list of operations that are part of the batch.\n\n(structure)\n\nRepresents the output of a BatchWrite operation.\n\nCreateObject -> (structure)\n\nCreates an object.\n\nSchemaFacet -> (list)\n\nA list of FacetArns that will be associated with the object. For more information, see arns .\n\n(structure)\n\nA facet.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nObjectAttributeList -> (list)\n\nAn attribute map, which contains an attribute ARN as the key and attribute value as the map value.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nParentReference -> (structure)\n\nIf specified, the parent reference to which this object will be attached.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nLinkName -> (string)\n\nThe name of the link.\n\nBatchReferenceName -> (string)\n\nThe batch reference name. See Transaction Support for more information.\n\nAttachObject -> (structure)\n\nAttaches an object to a Directory .\n\nParentReference -> (structure)\n\nThe parent object reference.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nChildReference -> (structure)\n\nThe child object reference that is to be attached to the object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nLinkName -> (string)\n\nThe name of the link.\n\nDetachObject -> (structure)\n\nDetaches an object from a Directory .\n\nParentReference -> (structure)\n\nParent reference from which the object with the specified link name is detached.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nLinkName -> (string)\n\nThe name of the link.\n\nBatchReferenceName -> (string)\n\nThe batch reference name. See Transaction Support for more information.\n\nUpdateObjectAttributes -> (structure)\n\nUpdates a given object’s attributes.\n\nObjectReference -> (structure)\n\nReference that identifies the object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nAttributeUpdates -> (list)\n\nAttributes update structure.\n\n(structure)\n\nStructure that contains attribute update information.\n\nObjectAttributeKey -> (structure)\n\nThe key of the attribute being updated.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nObjectAttributeAction -> (structure)\n\nThe action to perform as part of the attribute update.\n\nObjectAttributeActionType -> (string)\n\nA type that can be either Update or Delete .\n\nObjectAttributeUpdateValue -> (structure)\n\nThe value that you want to update to.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nDeleteObject -> (structure)\n\nDeletes an object in a Directory .\n\nObjectReference -> (structure)\n\nThe reference that identifies the object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nAddFacetToObject -> (structure)\n\nA batch operation that adds a facet to an object.\n\nSchemaFacet -> (structure)\n\nRepresents the facet being added to the object.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nObjectAttributeList -> (list)\n\nThe attributes to set on the object.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nObjectReference -> (structure)\n\nA reference to the object being mutated.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nRemoveFacetFromObject -> (structure)\n\nA batch operation that removes a facet from an object.\n\nSchemaFacet -> (structure)\n\nThe facet to remove from the object.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nObjectReference -> (structure)\n\nA reference to the object whose facet will be removed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nAttachPolicy -> (structure)\n\nAttaches a policy object to a regular object. An object can have a limited number of attached policies.\n\nPolicyReference -> (structure)\n\nThe reference that is associated with the policy object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nObjectReference -> (structure)\n\nThe reference that identifies the object to which the policy will be attached.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nDetachPolicy -> (structure)\n\nDetaches a policy from a Directory .\n\nPolicyReference -> (structure)\n\nReference that identifies the policy object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nObjectReference -> (structure)\n\nReference that identifies the object whose policy object will be detached.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nCreateIndex -> (structure)\n\nCreates an index object. See Indexing and search for more information.\n\nOrderedIndexedAttributeList -> (list)\n\nSpecifies the attributes that should be indexed on. Currently only a single attribute is supported.\n\n(structure)\n\nA unique identifier for an attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nIsUnique -> (boolean)\n\nIndicates whether the attribute that is being indexed has unique values or not.\n\nParentReference -> (structure)\n\nA reference to the parent object that contains the index object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nLinkName -> (string)\n\nThe name of the link between the parent object and the index object.\n\nBatchReferenceName -> (string)\n\nThe batch reference name. See Transaction Support for more information.\n\nAttachToIndex -> (structure)\n\nAttaches the specified object to the specified index.\n\nIndexReference -> (structure)\n\nA reference to the index that you are attaching the object to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetReference -> (structure)\n\nA reference to the object that you are attaching to the index.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nDetachFromIndex -> (structure)\n\nDetaches the specified object from the specified index.\n\nIndexReference -> (structure)\n\nA reference to the index object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetReference -> (structure)\n\nA reference to the object being detached from the index.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nAttachTypedLink -> (structure)\n\nAttaches a typed link to a specified source and target object. For more information, see Typed Links .\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nAttributes -> (list)\n\nA set of attributes that are associated with the typed link.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nDetachTypedLink -> (structure)\n\nDetaches a typed link from a specified source and target object. For more information, see Typed Links .\n\nTypedLinkSpecifier -> (structure)\n\nUsed to accept a typed link specifier as input.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nUpdateLinkAttributes -> (structure)\n\nUpdates a given object’s attributes.\n\nTypedLinkSpecifier -> (structure)\n\nAllows a typed link specifier to be accepted as input.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nAttributeUpdates -> (list)\n\nThe attributes update structure.\n\n(structure)\n\nStructure that contains attribute update information.\n\nAttributeKey -> (structure)\n\nThe key of the attribute being updated.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nAttributeAction -> (structure)\n\nThe action to perform as part of the attribute update.\n\nAttributeActionType -> (string)\n\nA type that can be either UPDATE_OR_CREATE or DELETE .\n\nAttributeUpdateValue -> (structure)\n\nThe value that you want to update to.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nJSON Syntax:\n\n[\n  {\n    \"CreateObject\": {\n      \"SchemaFacet\": [\n        {\n          \"SchemaArn\": \"string\",\n          \"FacetName\": \"string\"\n        }\n        ...\n      ],\n      \"ObjectAttributeList\": [\n        {\n          \"Key\": {\n            \"SchemaArn\": \"string\",\n            \"FacetName\": \"string\",\n            \"Name\": \"string\"\n          },\n          \"Value\": {\n            \"StringValue\": \"string\",\n            \"BinaryValue\": blob,\n            \"BooleanValue\": true|false,\n            \"NumberValue\": \"string\",\n            \"DatetimeValue\": timestamp\n          }\n        }\n        ...\n      ],\n      \"ParentReference\": {\n        \"Selector\": \"string\"\n      },\n      \"LinkName\": \"string\",\n      \"BatchReferenceName\": \"string\"\n    },\n    \"AttachObject\": {\n      \"ParentReference\": {\n        \"Selector\": \"string\"\n      },\n      \"ChildReference\": {\n        \"Selector\": \"string\"\n      },\n      \"LinkName\": \"string\"\n    },\n    \"DetachObject\": {\n      \"ParentReference\": {\n        \"Selector\": \"string\"\n      },\n      \"LinkName\": \"string\",\n      \"BatchReferenceName\": \"string\"\n    },\n    \"UpdateObjectAttributes\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"AttributeUpdates\": [\n        {\n          \"ObjectAttributeKey\": {\n            \"SchemaArn\": \"string\",\n            \"FacetName\": \"string\",\n            \"Name\": \"string\"\n          },\n          \"ObjectAttributeAction\": {\n            \"ObjectAttributeActionType\": \"CREATE_OR_UPDATE\"|\"DELETE\",\n            \"ObjectAttributeUpdateValue\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            }\n          }\n        }\n        ...\n      ]\n    },\n    \"DeleteObject\": {\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      }\n    },\n    \"AddFacetToObject\": {\n      \"SchemaFacet\": {\n        \"SchemaArn\": \"string\",\n        \"FacetName\": \"string\"\n      },\n      \"ObjectAttributeList\": [\n        {\n          \"Key\": {\n            \"SchemaArn\": \"string\",\n            \"FacetName\": \"string\",\n            \"Name\": \"string\"\n          },\n          \"Value\": {\n            \"StringValue\": \"string\",\n            \"BinaryValue\": blob,\n            \"BooleanValue\": true|false,\n            \"NumberValue\": \"string\",\n            \"DatetimeValue\": timestamp\n          }\n        }\n        ...\n      ],\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      }\n    },\n    \"RemoveFacetFromObject\": {\n      \"SchemaFacet\": {\n        \"SchemaArn\": \"string\",\n        \"FacetName\": \"string\"\n      },\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      }\n    },\n    \"AttachPolicy\": {\n      \"PolicyReference\": {\n        \"Selector\": \"string\"\n      },\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      }\n    },\n    \"DetachPolicy\": {\n      \"PolicyReference\": {\n        \"Selector\": \"string\"\n      },\n      \"ObjectReference\": {\n        \"Selector\": \"string\"\n      }\n    },\n    \"CreateIndex\": {\n      \"OrderedIndexedAttributeList\": [\n        {\n          \"SchemaArn\": \"string\",\n          \"FacetName\": \"string\",\n          \"Name\": \"string\"\n        }\n        ...\n      ],\n      \"IsUnique\": true|false,\n      \"ParentReference\": {\n        \"Selector\": \"string\"\n      },\n      \"LinkName\": \"string\",\n      \"BatchReferenceName\": \"string\"\n    },\n    \"AttachToIndex\": {\n      \"IndexReference\": {\n        \"Selector\": \"string\"\n      },\n      \"TargetReference\": {\n        \"Selector\": \"string\"\n      }\n    },\n    \"DetachFromIndex\": {\n      \"IndexReference\": {\n        \"Selector\": \"string\"\n      },\n      \"TargetReference\": {\n        \"Selector\": \"string\"\n      }\n    },\n    \"AttachTypedLink\": {\n      \"SourceObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"TargetObjectReference\": {\n        \"Selector\": \"string\"\n      },\n      \"TypedLinkFacet\": {\n        \"SchemaArn\": \"string\",\n        \"TypedLinkName\": \"string\"\n      },\n      \"Attributes\": [\n        {\n          \"AttributeName\": \"string\",\n          \"Value\": {\n            \"StringValue\": \"string\",\n            \"BinaryValue\": blob,\n            \"BooleanValue\": true|false,\n            \"NumberValue\": \"string\",\n            \"DatetimeValue\": timestamp\n          }\n        }\n        ...\n      ]\n    },\n    \"DetachTypedLink\": {\n      \"TypedLinkSpecifier\": {\n        \"TypedLinkFacet\": {\n          \"SchemaArn\": \"string\",\n          \"TypedLinkName\": \"string\"\n        },\n        \"SourceObjectReference\": {\n          \"Selector\": \"string\"\n        },\n        \"TargetObjectReference\": {\n          \"Selector\": \"string\"\n        },\n        \"IdentityAttributeValues\": [\n          {\n            \"AttributeName\": \"string\",\n            \"Value\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            }\n          }\n          ...\n        ]\n      }\n    },\n    \"UpdateLinkAttributes\": {\n      \"TypedLinkSpecifier\": {\n        \"TypedLinkFacet\": {\n          \"SchemaArn\": \"string\",\n          \"TypedLinkName\": \"string\"\n        },\n        \"SourceObjectReference\": {\n          \"Selector\": \"string\"\n        },\n        \"TargetObjectReference\": {\n          \"Selector\": \"string\"\n        },\n        \"IdentityAttributeValues\": [\n          {\n            \"AttributeName\": \"string\",\n            \"Value\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            }\n          }\n          ...\n        ]\n      },\n      \"AttributeUpdates\": [\n        {\n          \"AttributeKey\": {\n            \"SchemaArn\": \"string\",\n            \"FacetName\": \"string\",\n            \"Name\": \"string\"\n          },\n          \"AttributeAction\": {\n            \"AttributeActionType\": \"CREATE_OR_UPDATE\"|\"DELETE\",\n            \"AttributeUpdateValue\": {\n              \"StringValue\": \"string\",\n              \"BinaryValue\": blob,\n              \"BooleanValue\": true|false,\n              \"NumberValue\": \"string\",\n              \"DatetimeValue\": timestamp\n            }\n          }\n        }\n        ...\n      ]\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResponses -> (list)\n\nA list of all the responses for each batch write.\n\n(structure)\n\nRepresents the output of a BatchWrite response operation.\n\nCreateObject -> (structure)\n\nCreates an object in a Directory .\n\nObjectIdentifier -> (string)\n\nThe ID that is associated with the object.\n\nAttachObject -> (structure)\n\nAttaches an object to a Directory .\n\nattachedObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the object that has been attached.\n\nDetachObject -> (structure)\n\nDetaches an object from a Directory .\n\ndetachedObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the detached object.\n\nUpdateObjectAttributes -> (structure)\n\nUpdates a given object’s attributes.\n\nObjectIdentifier -> (string)\n\nID that is associated with the object.\n\nDeleteObject -> (structure)\n\nDeletes an object in a Directory .\n\nAddFacetToObject -> (structure)\n\nThe result of an add facet to object batch operation.\n\nRemoveFacetFromObject -> (structure)\n\nThe result of a batch remove facet from object operation.\n\nAttachPolicy -> (structure)\n\nAttaches a policy object to a regular object. An object can have a limited number of attached policies.\n\nDetachPolicy -> (structure)\n\nDetaches a policy from a Directory .\n\nCreateIndex -> (structure)\n\nCreates an index object. See Indexing and search for more information.\n\nObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the index created by this operation.\n\nAttachToIndex -> (structure)\n\nAttaches the specified object to the specified index.\n\nAttachedObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the object that was attached to the index.\n\nDetachFromIndex -> (structure)\n\nDetaches the specified object from the specified index.\n\nDetachedObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the object that was detached from the index.\n\nAttachTypedLink -> (structure)\n\nAttaches a typed link to a specified source and target object. For more information, see Typed Links .\n\nTypedLinkSpecifier -> (structure)\n\nReturns a typed link specifier as output.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nDetachTypedLink -> (structure)\n\nDetaches a typed link from a specified source and target object. For more information, see Typed Links .\n\nUpdateLinkAttributes -> (structure)\n\nRepresents the output of a BatchWrite response operation."
    },
    {
      "command_name": "create-directory",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/create-directory.html",
      "command_description": "Description\n\nCreates a Directory by copying the published schema into the directory. A directory cannot be created without a schema.\n\nYou can also quickly create a directory using a managed schema, called the QuickStartSchema . For more information, see Managed Schema in the Amazon Cloud Directory Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-directory\n--name <value>\n--schema-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--schema-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the Directory . Should be unique per account, per region.\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) of the published schema that will be copied into the data Directory . For more information, see arns .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDirectoryArn -> (string)\n\nThe ARN that is associated with the Directory . For more information, see arns .\n\nName -> (string)\n\nThe name of the Directory .\n\nObjectIdentifier -> (string)\n\nThe root object node of the created directory.\n\nAppliedSchemaArn -> (string)\n\nThe ARN of the published schema in the Directory . Once a published schema is copied into the directory, it has its own ARN, which is referred to applied schema ARN. For more information, see arns ."
    },
    {
      "command_name": "create-facet",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/create-facet.html",
      "command_description": "Description\n\nCreates a new Facet in a schema. Facet creation is allowed only in development or applied schemas.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-facet\n--schema-arn <value>\n--name <value>\n[--attributes <value>]\n[--object-type <value>]\n[--facet-style <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--name <value>",
        "[--attributes <value>]",
        "[--object-type <value>]",
        "[--facet-style <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe schema ARN in which the new Facet will be created. For more information, see arns .\n\n--name (string)\n\nThe name of the Facet , which is unique for a given schema.\n\n--attributes (list)\n\nThe attributes that are associated with the Facet .\n\n(structure)\n\nAn attribute that is associated with the Facet .\n\nName -> (string)\n\nThe name of the facet attribute.\n\nAttributeDefinition -> (structure)\n\nA facet attribute consists of either a definition or a reference. This structure contains the attribute definition. See Attribute References for more information.\n\nType -> (string)\n\nThe type of the attribute.\n\nDefaultValue -> (structure)\n\nThe default value of the attribute (if configured).\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nIsImmutable -> (boolean)\n\nWhether the attribute is mutable or not.\n\nRules -> (map)\n\nValidation rules attached to the attribute definition.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains an Amazon Resource Name (ARN) and parameters that are associated with the rule.\n\nType -> (string)\n\nThe type of attribute validation rule.\n\nParameters -> (map)\n\nThe minimum and maximum parameters that are associated with the rule.\n\nkey -> (string)\n\nvalue -> (string)\n\nAttributeReference -> (structure)\n\nAn attribute reference that is associated with the attribute. See Attribute References for more information.\n\nTargetFacetName -> (string)\n\nThe target facet name that is associated with the facet reference. See Attribute References for more information.\n\nTargetAttributeName -> (string)\n\nThe target attribute name that is associated with the facet reference. See Attribute References for more information.\n\nRequiredBehavior -> (string)\n\nThe required behavior of the FacetAttribute .\n\nShorthand Syntax:\n\nName=string,AttributeDefinition={Type=string,DefaultValue={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp},IsImmutable=boolean,Rules={KeyName1={Type=string,Parameters={KeyName1=string,KeyName2=string}},KeyName2={Type=string,Parameters={KeyName1=string,KeyName2=string}}}},AttributeReference={TargetFacetName=string,TargetAttributeName=string},RequiredBehavior=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"AttributeDefinition\": {\n      \"Type\": \"STRING\"|\"BINARY\"|\"BOOLEAN\"|\"NUMBER\"|\"DATETIME\"|\"VARIANT\",\n      \"DefaultValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      },\n      \"IsImmutable\": true|false,\n      \"Rules\": {\"string\": {\n            \"Type\": \"BINARY_LENGTH\"|\"NUMBER_COMPARISON\"|\"STRING_FROM_SET\"|\"STRING_LENGTH\",\n            \"Parameters\": {\"string\": \"string\"\n              ...}\n          }\n        ...}\n    },\n    \"AttributeReference\": {\n      \"TargetFacetName\": \"string\",\n      \"TargetAttributeName\": \"string\"\n    },\n    \"RequiredBehavior\": \"REQUIRED_ALWAYS\"|\"NOT_REQUIRED\"\n  }\n  ...\n]\n\n\n--object-type (string)\n\nSpecifies whether a given object created from this facet is of type node, leaf node, policy or index.\n\nNode: Can have multiple children but one parent.\n\nLeaf node: Cannot have children but can have multiple parents.\n\nPolicy: Allows you to store a policy document and policy type. For more information, see Policies .\n\nIndex: Can be created with the Index API.\n\nPossible values:\n\nNODE\n\nLEAF_NODE\n\nPOLICY\n\nINDEX\n\n--facet-style (string)\n\nThere are two different styles that you can define on any given facet, Static and Dynamic . For static facets, all attributes must be defined in the schema. For dynamic facets, attributes can be defined during data plane operations.\n\nPossible values:\n\nSTATIC\n\nDYNAMIC\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-index",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/create-index.html",
      "command_description": "Description\n\nCreates an index object. See Indexing and search for more information.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-index\n--directory-arn <value>\n--ordered-indexed-attribute-list <value>\n--is-unique | --no-is-unique\n[--parent-reference <value>]\n[--link-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--ordered-indexed-attribute-list <value>",
        "--is-unique | --no-is-unique",
        "[--parent-reference <value>]",
        "[--link-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory where the index should be created.\n\n--ordered-indexed-attribute-list (list)\n\nSpecifies the attributes that should be indexed on. Currently only a single attribute is supported.\n\n(structure)\n\nA unique identifier for an attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nShorthand Syntax:\n\nSchemaArn=string,FacetName=string,Name=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"SchemaArn\": \"string\",\n    \"FacetName\": \"string\",\n    \"Name\": \"string\"\n  }\n  ...\n]\n\n\n--is-unique | --no-is-unique (boolean)\n\nIndicates whether the attribute that is being indexed has unique values or not.\n\n--parent-reference (structure)\n\nA reference to the parent object that contains the index object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--link-name (string)\n\nThe name of the link between the parent object and the index object.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the index created by this operation."
    },
    {
      "command_name": "create-object",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/create-object.html",
      "command_description": "Description\n\nCreates an object in a Directory . Additionally attaches the object to a parent, if a parent reference and LinkName is specified. An object is simply a collection of Facet attributes. You can also use this API call to create a policy object, if the facet from which you create the object is a policy facet.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-object\n--directory-arn <value>\n--schema-facets <value>\n[--object-attribute-list <value>]\n[--parent-reference <value>]\n[--link-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--schema-facets <value>",
        "[--object-attribute-list <value>]",
        "[--parent-reference <value>]",
        "[--link-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory in which the object will be created. For more information, see arns .\n\n--schema-facets (list)\n\nA list of schema facets to be associated with the object. Do not provide minor version components. See SchemaFacet for details.\n\n(structure)\n\nA facet.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nShorthand Syntax:\n\nSchemaArn=string,FacetName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"SchemaArn\": \"string\",\n    \"FacetName\": \"string\"\n  }\n  ...\n]\n\n\n--object-attribute-list (list)\n\nThe attribute map whose attribute ARN contains the key and attribute value as the map value.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nShorthand Syntax:\n\nKey={SchemaArn=string,FacetName=string,Name=string},Value={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": {\n      \"SchemaArn\": \"string\",\n      \"FacetName\": \"string\",\n      \"Name\": \"string\"\n    },\n    \"Value\": {\n      \"StringValue\": \"string\",\n      \"BinaryValue\": blob,\n      \"BooleanValue\": true|false,\n      \"NumberValue\": \"string\",\n      \"DatetimeValue\": timestamp\n    }\n  }\n  ...\n]\n\n\n--parent-reference (structure)\n\nIf specified, the parent reference to which this object will be attached.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--link-name (string)\n\nThe name of link that is used to attach this object to a parent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nObjectIdentifier -> (string)\n\nThe identifier that is associated with the object."
    },
    {
      "command_name": "create-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/create-schema.html",
      "command_description": "Description\n\nCreates a new schema in a development state. A schema can exist in three phases:\n\nDevelopment: This is a mutable phase of the schema. All new schemas are in the development phase. Once the schema is finalized, it can be published.\n\nPublished: Published schemas are immutable and have a version associated with them.\n\nApplied: Applied schemas are mutable in a way that allows you to add new schema facets. You can also add new, nonrequired attributes to existing schema facets. You can apply only published schemas to directories.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-schema\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name that is associated with the schema. This is unique to each account and in each region.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns ."
    },
    {
      "command_name": "create-typed-link-facet",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/create-typed-link-facet.html",
      "command_description": "Description\n\nCreates a TypedLinkFacet . For more information, see Typed Links .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-typed-link-facet\n--schema-arn <value>\n--facet <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--facet <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\n--facet (structure)\n\nFacet structure that is associated with the typed link facet.\n\nName -> (string)\n\nThe unique name of the typed link facet.\n\nAttributes -> (list)\n\nA set of key-value pairs associated with the typed link. Typed link attributes are used when you have data values that are related to the link itself, and not to one of the two objects being linked. Identity attributes also serve to distinguish the link from others of the same type between the same objects.\n\n(structure)\n\nA typed link attribute definition.\n\nName -> (string)\n\nThe unique name of the typed link attribute.\n\nType -> (string)\n\nThe type of the attribute.\n\nDefaultValue -> (structure)\n\nThe default value of the attribute (if configured).\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nIsImmutable -> (boolean)\n\nWhether the attribute is mutable or not.\n\nRules -> (map)\n\nValidation rules that are attached to the attribute definition.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains an Amazon Resource Name (ARN) and parameters that are associated with the rule.\n\nType -> (string)\n\nThe type of attribute validation rule.\n\nParameters -> (map)\n\nThe minimum and maximum parameters that are associated with the rule.\n\nkey -> (string)\n\nvalue -> (string)\n\nRequiredBehavior -> (string)\n\nThe required behavior of the TypedLinkAttributeDefinition .\n\nIdentityAttributeOrder -> (list)\n\nThe set of attributes that distinguish links made from this facet from each other, in the order of significance. Listing typed links can filter on the values of these attributes. See ListOutgoingTypedLinks and ListIncomingTypedLinks for details.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Attributes\": [\n    {\n      \"Name\": \"string\",\n      \"Type\": \"STRING\"|\"BINARY\"|\"BOOLEAN\"|\"NUMBER\"|\"DATETIME\"|\"VARIANT\",\n      \"DefaultValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      },\n      \"IsImmutable\": true|false,\n      \"Rules\": {\"string\": {\n            \"Type\": \"BINARY_LENGTH\"|\"NUMBER_COMPARISON\"|\"STRING_FROM_SET\"|\"STRING_LENGTH\",\n            \"Parameters\": {\"string\": \"string\"\n              ...}\n          }\n        ...},\n      \"RequiredBehavior\": \"REQUIRED_ALWAYS\"|\"NOT_REQUIRED\"\n    }\n    ...\n  ],\n  \"IdentityAttributeOrder\": [\"string\", ...]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-directory",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/delete-directory.html",
      "command_description": "Description\n\nDeletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme caution when deleting directories.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-directory\n--directory-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDirectoryArn -> (string)\n\nThe ARN of the deleted directory."
    },
    {
      "command_name": "delete-facet",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/delete-facet.html",
      "command_description": "Description\n\nDeletes a given Facet . All attributes and Rule s that are associated with the facet will be deleted. Only development schema facets are allowed deletion.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-facet\n--schema-arn <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Facet . For more information, see arns .\n\n--name (string)\n\nThe name of the facet to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-object",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/delete-object.html",
      "command_description": "Description\n\nDeletes an object and its associated attributes. Only objects with no children and no parents can be deleted. The maximum number of attributes that can be deleted during an object deletion is 30. For more information, see Amazon Cloud Directory Limits .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-object\n--directory-arn <value>\n--object-reference <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where the object resides. For more information, see arns .\n\n--object-reference (structure)\n\nA reference that identifies the object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/delete-schema.html",
      "command_description": "Description\n\nDeletes a given schema. Schemas in a development and published state can only be deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-schema\n--schema-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) of the development schema. For more information, see arns .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArn -> (string)\n\nThe input ARN that is returned as part of the response. For more information, see arns ."
    },
    {
      "command_name": "delete-typed-link-facet",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/delete-typed-link-facet.html",
      "command_description": "Description\n\nDeletes a TypedLinkFacet . For more information, see Typed Links .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-typed-link-facet\n--schema-arn <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\n--name (string)\n\nThe unique name of the typed link facet.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "detach-from-index",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/detach-from-index.html",
      "command_description": "Description\n\nDetaches the specified object from the specified index.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detach-from-index\n--directory-arn <value>\n--index-reference <value>\n--target-reference <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--index-reference <value>",
        "--target-reference <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) of the directory the index and object exist in.\n\n--index-reference (structure)\n\nA reference to the index object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--target-reference (structure)\n\nA reference to the object being detached from the index.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDetachedObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the object that was detached from the index."
    },
    {
      "command_name": "detach-object",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/detach-object.html",
      "command_description": "Description\n\nDetaches a given object from the parent object. The object that is to be detached from the parent is specified by the link name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detach-object\n--directory-arn <value>\n--parent-reference <value>\n--link-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--parent-reference <value>",
        "--link-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where objects reside. For more information, see arns .\n\n--parent-reference (structure)\n\nThe parent reference from which the object with the specified link name is detached.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--link-name (string)\n\nThe link name associated with the object that needs to be detached.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDetachedObjectIdentifier -> (string)\n\nThe ObjectIdentifier that was detached from the object."
    },
    {
      "command_name": "detach-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/detach-policy.html",
      "command_description": "Description\n\nDetaches a policy from an object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detach-policy\n--directory-arn <value>\n--policy-reference <value>\n--object-reference <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--policy-reference <value>",
        "--object-reference <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where both objects reside. For more information, see arns .\n\n--policy-reference (structure)\n\nReference that identifies the policy object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--object-reference (structure)\n\nReference that identifies the object whose policy object will be detached.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "detach-typed-link",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/detach-typed-link.html",
      "command_description": "Description\n\nDetaches a typed link from a specified source and target object. For more information, see Typed Links .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detach-typed-link\n--directory-arn <value>\n--typed-link-specifier <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--typed-link-specifier <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) of the directory where you want to detach the typed link.\n\n--typed-link-specifier (structure)\n\nUsed to accept a typed link specifier as input.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nJSON Syntax:\n\n{\n  \"TypedLinkFacet\": {\n    \"SchemaArn\": \"string\",\n    \"TypedLinkName\": \"string\"\n  },\n  \"SourceObjectReference\": {\n    \"Selector\": \"string\"\n  },\n  \"TargetObjectReference\": {\n    \"Selector\": \"string\"\n  },\n  \"IdentityAttributeValues\": [\n    {\n      \"AttributeName\": \"string\",\n      \"Value\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      }\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "disable-directory",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/disable-directory.html",
      "command_description": "Description\n\nDisables the specified directory. Disabled directories cannot be read or written to. Only enabled directories can be disabled. Disabled directories may be reenabled.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disable-directory\n--directory-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory to disable.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDirectoryArn -> (string)\n\nThe ARN of the directory that has been disabled."
    },
    {
      "command_name": "enable-directory",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/enable-directory.html",
      "command_description": "Description\n\nEnables the specified directory. Only disabled directories can be enabled. Once enabled, the directory can then be read and written to.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  enable-directory\n--directory-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory to enable.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDirectoryArn -> (string)\n\nThe ARN of the enabled directory."
    },
    {
      "command_name": "get-applied-schema-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/get-applied-schema-version.html",
      "command_description": "Description\n\nReturns current applied schema version ARN, including the minor version in use.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-applied-schema-version\n--schema-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe ARN of the applied schema.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAppliedSchemaArn -> (string)\n\nCurrent applied schema ARN, including the minor version in use if one was provided."
    },
    {
      "command_name": "get-directory",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/get-directory.html",
      "command_description": "Description\n\nRetrieves metadata about a directory.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-directory\n--directory-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDirectory -> (structure)\n\nMetadata about the directory.\n\nName -> (string)\n\nThe name of the directory.\n\nDirectoryArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the directory. For more information, see arns .\n\nState -> (string)\n\nThe state of the directory. Can be either Enabled , Disabled , or Deleted .\n\nCreationDateTime -> (timestamp)\n\nThe date and time when the directory was created."
    },
    {
      "command_name": "get-facet",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/get-facet.html",
      "command_description": "Description\n\nGets details of the Facet , such as facet name, attributes, Rule s, or ObjectType . You can call this on all kinds of schema facets – published, development, or applied.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-facet\n--schema-arn <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Facet . For more information, see arns .\n\n--name (string)\n\nThe name of the facet to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFacet -> (structure)\n\nThe Facet structure that is associated with the facet.\n\nName -> (string)\n\nThe name of the Facet .\n\nObjectType -> (string)\n\nThe object type that is associated with the facet. See CreateFacetRequest$ObjectType for more details.\n\nFacetStyle -> (string)\n\nThere are two different styles that you can define on any given facet, Static and Dynamic . For static facets, all attributes must be defined in the schema. For dynamic facets, attributes can be defined during data plane operations."
    },
    {
      "command_name": "get-link-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/get-link-attributes.html",
      "command_description": "Description\n\nRetrieves attributes that are associated with a typed link.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-link-attributes\n--directory-arn <value>\n--typed-link-specifier <value>\n--attribute-names <value>\n[--consistency-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--typed-link-specifier <value>",
        "--attribute-names <value>",
        "[--consistency-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where the typed link resides. For more information, see arns or Typed Links .\n\n--typed-link-specifier (structure)\n\nAllows a typed link specifier to be accepted as input.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nJSON Syntax:\n\n{\n  \"TypedLinkFacet\": {\n    \"SchemaArn\": \"string\",\n    \"TypedLinkName\": \"string\"\n  },\n  \"SourceObjectReference\": {\n    \"Selector\": \"string\"\n  },\n  \"TargetObjectReference\": {\n    \"Selector\": \"string\"\n  },\n  \"IdentityAttributeValues\": [\n    {\n      \"AttributeName\": \"string\",\n      \"Value\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      }\n    }\n    ...\n  ]\n}\n\n\n--attribute-names (list)\n\nA list of attribute names whose values will be retrieved.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--consistency-level (string)\n\nThe consistency level at which to retrieve the attributes on a typed link.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttributes -> (list)\n\nThe attributes that are associated with the typed link.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value."
    },
    {
      "command_name": "get-object-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/get-object-attributes.html",
      "command_description": "Description\n\nRetrieves attributes within a facet that are associated with an object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-object-attributes\n--directory-arn <value>\n--object-reference <value>\n[--consistency-level <value>]\n--schema-facet <value>\n--attribute-names <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--consistency-level <value>]",
        "--schema-facet <value>",
        "--attribute-names <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where the object resides.\n\n--object-reference (structure)\n\nReference that identifies the object whose attributes will be retrieved.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--consistency-level (string)\n\nThe consistency level at which to retrieve the attributes on an object.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--schema-facet (structure)\n\nIdentifier for the facet whose attributes will be retrieved. See SchemaFacet for details.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nShorthand Syntax:\n\nSchemaArn=string,FacetName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"FacetName\": \"string\"\n}\n\n\n--attribute-names (list)\n\nList of attribute names whose values will be retrieved.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttributes -> (list)\n\nThe attributes that are associated with the object.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value."
    },
    {
      "command_name": "get-object-information",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/get-object-information.html",
      "command_description": "Description\n\nRetrieves metadata about an object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-object-information\n--directory-arn <value>\n--object-reference <value>\n[--consistency-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--consistency-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory being retrieved.\n\n--object-reference (structure)\n\nA reference to the object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--consistency-level (string)\n\nThe consistency level at which to retrieve the object information.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaFacets -> (list)\n\nThe facets attached to the specified object. Although the response does not include minor version information, the most recently applied minor version of each Facet is in effect. See GetAppliedSchemaVersion for details.\n\n(structure)\n\nA facet.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the specified object."
    },
    {
      "command_name": "get-schema-as-json",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/get-schema-as-json.html",
      "command_description": "Description\n\nRetrieves a JSON representation of the schema. See JSON Schema Format for more information.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-schema-as-json\n--schema-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe ARN of the schema to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the retrieved schema.\n\nDocument -> (string)\n\nThe JSON representation of the schema document."
    },
    {
      "command_name": "get-typed-link-facet-information",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/get-typed-link-facet-information.html",
      "command_description": "Description\n\nReturns the identity attribute order for a specific TypedLinkFacet . For more information, see Typed Links .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-typed-link-facet-information\n--schema-arn <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\n--name (string)\n\nThe unique name of the typed link facet.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nIdentityAttributeOrder -> (list)\n\nThe order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see Typed Links .\n\n(string)"
    },
    {
      "command_name": "list-applied-schema-arns",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-applied-schema-arns.html",
      "command_description": "Description\n\nLists schema major versions applied to a directory. If SchemaArn is provided, lists the minor version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-applied-schema-arns is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SchemaArns",
      "command_synopsis": "Synopsis\n  list-applied-schema-arns\n--directory-arn <value>\n[--schema-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "[--schema-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory you are listing.\n\n--schema-arn (string)\n\nThe response for ListAppliedSchemaArns when this parameter is used will list all minor version ARNs for a major version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArns -> (list)\n\nThe ARNs of schemas that are applied to the directory.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-attached-indices",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-attached-indices.html",
      "command_description": "Description\n\nLists indices attached to the specified object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-attached-indices is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: IndexAttachments",
      "command_synopsis": "Synopsis\n  list-attached-indices\n--directory-arn <value>\n--target-reference <value>\n[--consistency-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--target-reference <value>",
        "[--consistency-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory.\n\n--target-reference (structure)\n\nA reference to the object that has indices attached.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--consistency-level (string)\n\nThe consistency level to use for this operation.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nIndexAttachments -> (list)\n\nThe indices attached to the specified object.\n\n(structure)\n\nRepresents an index and an attached object.\n\nIndexedAttributes -> (list)\n\nThe indexed attribute values.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nObjectIdentifier -> (string)\n\nIn response to ListIndex , the ObjectIdentifier of the object attached to the index. In response to ListAttachedIndices , the ObjectIdentifier of the index attached to the object. This field will always contain the ObjectIdentifier of the object on the opposite side of the attachment specified in the query.\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-development-schema-arns",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-development-schema-arns.html",
      "command_description": "Description\n\nRetrieves each Amazon Resource Name (ARN) of schemas in the development state.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-development-schema-arns is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SchemaArns",
      "command_synopsis": "Synopsis\n  list-development-schema-arns\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArns -> (list)\n\nThe ARNs of retrieved development schemas.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-directories",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-directories.html",
      "command_description": "Description\n\nLists directories created within an account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-directories is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Directories",
      "command_synopsis": "Synopsis\n  list-directories\n[--state <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--state <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--state (string)\n\nThe state of the directories in the list. Can be either Enabled, Disabled, or Deleted.\n\nPossible values:\n\nENABLED\n\nDISABLED\n\nDELETED\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDirectories -> (list)\n\nLists all directories that are associated with your account in pagination fashion.\n\n(structure)\n\nDirectory structure that includes the directory name and directory ARN.\n\nName -> (string)\n\nThe name of the directory.\n\nDirectoryArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the directory. For more information, see arns .\n\nState -> (string)\n\nThe state of the directory. Can be either Enabled , Disabled , or Deleted .\n\nCreationDateTime -> (timestamp)\n\nThe date and time when the directory was created.\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-facet-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-facet-attributes.html",
      "command_description": "Description\n\nRetrieves attributes attached to the facet.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-facet-attributes is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Attributes",
      "command_synopsis": "Synopsis\n  list-facet-attributes\n--schema-arn <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe ARN of the schema where the facet resides.\n\n--name (string)\n\nThe name of the facet whose attributes will be retrieved.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttributes -> (list)\n\nThe attributes attached to the facet.\n\n(structure)\n\nAn attribute that is associated with the Facet .\n\nName -> (string)\n\nThe name of the facet attribute.\n\nAttributeDefinition -> (structure)\n\nA facet attribute consists of either a definition or a reference. This structure contains the attribute definition. See Attribute References for more information.\n\nType -> (string)\n\nThe type of the attribute.\n\nDefaultValue -> (structure)\n\nThe default value of the attribute (if configured).\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nIsImmutable -> (boolean)\n\nWhether the attribute is mutable or not.\n\nRules -> (map)\n\nValidation rules attached to the attribute definition.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains an Amazon Resource Name (ARN) and parameters that are associated with the rule.\n\nType -> (string)\n\nThe type of attribute validation rule.\n\nParameters -> (map)\n\nThe minimum and maximum parameters that are associated with the rule.\n\nkey -> (string)\n\nvalue -> (string)\n\nAttributeReference -> (structure)\n\nAn attribute reference that is associated with the attribute. See Attribute References for more information.\n\nTargetFacetName -> (string)\n\nThe target facet name that is associated with the facet reference. See Attribute References for more information.\n\nTargetAttributeName -> (string)\n\nThe target attribute name that is associated with the facet reference. See Attribute References for more information.\n\nRequiredBehavior -> (string)\n\nThe required behavior of the FacetAttribute .\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-facet-names",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-facet-names.html",
      "command_description": "Description\n\nRetrieves the names of facets that exist in a schema.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-facet-names is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FacetNames",
      "command_synopsis": "Synopsis\n  list-facet-names\n--schema-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) to retrieve facet names from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFacetNames -> (list)\n\nThe names of facets that exist within the schema.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-incoming-typed-links",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-incoming-typed-links.html",
      "command_description": "Description\n\nReturns a paginated list of all the incoming TypedLinkSpecifier information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see Typed Links .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-incoming-typed-links is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: LinkSpecifiers",
      "command_synopsis": "Synopsis\n  list-incoming-typed-links\n--directory-arn <value>\n--object-reference <value>\n[--filter-attribute-ranges <value>]\n[--filter-typed-link <value>]\n[--consistency-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--filter-attribute-ranges <value>]",
        "[--filter-typed-link <value>]",
        "[--consistency-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) of the directory where you want to list the typed links.\n\n--object-reference (structure)\n\nReference that identifies the object whose attributes will be listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--filter-attribute-ranges (list)\n\nProvides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.\n\n(structure)\n\nIdentifies the range of attributes that are used by a specified filter.\n\nAttributeName -> (string)\n\nThe unique name of the typed link attribute.\n\nRange -> (structure)\n\nThe range of attribute values that are being selected.\n\nStartMode -> (string)\n\nThe inclusive or exclusive range start.\n\nStartValue -> (structure)\n\nThe value to start the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nEndMode -> (string)\n\nThe inclusive or exclusive range end.\n\nEndValue -> (structure)\n\nThe attribute value to terminate the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nShorthand Syntax:\n\nAttributeName=string,Range={StartMode=string,StartValue={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp},EndMode=string,EndValue={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp}} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"AttributeName\": \"string\",\n    \"Range\": {\n      \"StartMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n      \"StartValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      },\n      \"EndMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n      \"EndValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      }\n    }\n  }\n  ...\n]\n\n\n--filter-typed-link (structure)\n\nFilters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nShorthand Syntax:\n\nSchemaArn=string,TypedLinkName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"TypedLinkName\": \"string\"\n}\n\n\n--consistency-level (string)\n\nThe consistency level to execute the request at.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLinkSpecifiers -> (list)\n\nReturns one or more typed link specifiers as output.\n\n(structure)\n\nContains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The AttachTypedLink API returns a typed link specifier while the DetachTypedLink API accepts one as input. Similarly, the ListIncomingTypedLinks and ListOutgoingTypedLinks API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-index",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-index.html",
      "command_description": "Description\n\nLists objects attached to the specified index.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-index is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: IndexAttachments",
      "command_synopsis": "Synopsis\n  list-index\n--directory-arn <value>\n[--ranges-on-indexed-values <value>]\n--index-reference <value>\n[--consistency-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "[--ranges-on-indexed-values <value>]",
        "--index-reference <value>",
        "[--consistency-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory that the index exists in.\n\n--ranges-on-indexed-values (list)\n\nSpecifies the ranges of indexed values that you want to query.\n\n(structure)\n\nA range of attributes.\n\nAttributeKey -> (structure)\n\nThe key of the attribute that the attribute range covers.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nRange -> (structure)\n\nThe range of attribute values being selected.\n\nStartMode -> (string)\n\nThe inclusive or exclusive range start.\n\nStartValue -> (structure)\n\nThe value to start the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nEndMode -> (string)\n\nThe inclusive or exclusive range end.\n\nEndValue -> (structure)\n\nThe attribute value to terminate the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nShorthand Syntax:\n\nAttributeKey={SchemaArn=string,FacetName=string,Name=string},Range={StartMode=string,StartValue={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp},EndMode=string,EndValue={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp}} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"AttributeKey\": {\n      \"SchemaArn\": \"string\",\n      \"FacetName\": \"string\",\n      \"Name\": \"string\"\n    },\n    \"Range\": {\n      \"StartMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n      \"StartValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      },\n      \"EndMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n      \"EndValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      }\n    }\n  }\n  ...\n]\n\n\n--index-reference (structure)\n\nThe reference to the index to list.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--consistency-level (string)\n\nThe consistency level to execute the request at.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nIndexAttachments -> (list)\n\nThe objects and indexed values attached to the index.\n\n(structure)\n\nRepresents an index and an attached object.\n\nIndexedAttributes -> (list)\n\nThe indexed attribute values.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nObjectIdentifier -> (string)\n\nIn response to ListIndex , the ObjectIdentifier of the object attached to the index. In response to ListAttachedIndices , the ObjectIdentifier of the index attached to the object. This field will always contain the ObjectIdentifier of the object on the opposite side of the attachment specified in the query.\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-managed-schema-arns",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-managed-schema-arns.html",
      "command_description": "Description\n\nLists the major version families of each managed schema. If a major version ARN is provided as SchemaArn, the minor version revisions in that family are listed instead.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-managed-schema-arns is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SchemaArns",
      "command_synopsis": "Synopsis\n  list-managed-schema-arns\n[--schema-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--schema-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe response for ListManagedSchemaArns. When this parameter is used, all minor version ARNs for a major version are listed.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArns -> (list)\n\nThe ARNs for all AWS managed schemas.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-object-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-object-attributes.html",
      "command_description": "Description\n\nLists all attributes that are associated with an object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-object-attributes is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Attributes",
      "command_synopsis": "Synopsis\n  list-object-attributes\n--directory-arn <value>\n--object-reference <value>\n[--consistency-level <value>]\n[--facet-filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--consistency-level <value>]",
        "[--facet-filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where the object resides. For more information, see arns .\n\n--object-reference (structure)\n\nThe reference that identifies the object whose attributes will be listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--consistency-level (string)\n\nRepresents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--facet-filter (structure)\n\nUsed to filter the list of object attributes that are associated with a certain facet.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nShorthand Syntax:\n\nSchemaArn=string,FacetName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"FacetName\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttributes -> (list)\n\nAttributes map that is associated with the object. AttributeArn is the key, and attribute value is the value.\n\n(structure)\n\nThe combination of an attribute key and an attribute value.\n\nKey -> (structure)\n\nThe key of the attribute.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nValue -> (structure)\n\nThe value of the attribute.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-object-children",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-object-children.html",
      "command_description": "Description\n\nReturns a paginated list of child objects that are associated with a given object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-object-children\n--directory-arn <value>\n--object-reference <value>\n[--next-token <value>]\n[--max-results <value>]\n[--consistency-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--consistency-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where the object resides. For more information, see arns .\n\n--object-reference (structure)\n\nThe reference that identifies the object for which child objects are being listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--next-token (string)\n\nThe pagination token.\n\n--max-results (integer)\n\nThe maximum number of items to be retrieved in a single call. This is an approximate number.\n\n--consistency-level (string)\n\nRepresents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChildren -> (map)\n\nChildren structure, which is a map with key as the LinkName and ObjectIdentifier as the value.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-object-parent-paths",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-object-parent-paths.html",
      "command_description": "Description\n\nRetrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see Directory Structure .\n\nUse this API to evaluate all parents for an object. The call returns all objects from the root of the directory up to the requested object. The API returns the number of paths based on user-defined MaxResults , in case there are multiple paths to the parent. The order of the paths and nodes returned is consistent among multiple API calls unless the objects are deleted or moved. Paths not leading to the directory root are ignored from the target object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-object-parent-paths is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: PathToObjectIdentifiersList",
      "command_synopsis": "Synopsis\n  list-object-parent-paths\n--directory-arn <value>\n--object-reference <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory to which the parent path applies.\n\n--object-reference (structure)\n\nThe reference that identifies the object whose parent paths are listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPathToObjectIdentifiersList -> (list)\n\nReturns the path to the ObjectIdentifiers that are associated with the directory.\n\n(structure)\n\nReturns the path to the ObjectIdentifiers that is associated with the directory.\n\nPath -> (string)\n\nThe path that is used to identify the object starting from directory root.\n\nObjectIdentifiers -> (list)\n\nLists ObjectIdentifiers starting from directory root to the object in the request.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-object-parents",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-object-parents.html",
      "command_description": "Description\n\nLists parent objects that are associated with a given object in pagination fashion.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-object-parents\n--directory-arn <value>\n--object-reference <value>\n[--next-token <value>]\n[--max-results <value>]\n[--consistency-level <value>]\n[--include-all-links-to-each-parent | --no-include-all-links-to-each-parent]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--consistency-level <value>]",
        "[--include-all-links-to-each-parent | --no-include-all-links-to-each-parent]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where the object resides. For more information, see arns .\n\n--object-reference (structure)\n\nThe reference that identifies the object for which parent objects are being listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--next-token (string)\n\nThe pagination token.\n\n--max-results (integer)\n\nThe maximum number of items to be retrieved in a single call. This is an approximate number.\n\n--consistency-level (string)\n\nRepresents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--include-all-links-to-each-parent | --no-include-all-links-to-each-parent (boolean)\n\nWhen set to True, returns all ListObjectParentsResponse$ParentLinks . There could be multiple links between a parent-child pair.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nParents -> (map)\n\nThe parent structure, which is a map with key as the ObjectIdentifier and LinkName as the value.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe pagination token.\n\nParentLinks -> (list)\n\nReturns a list of parent reference and LinkName Tuples.\n\n(structure)\n\nA pair of ObjectIdentifier and LinkName.\n\nObjectIdentifier -> (string)\n\nThe ID that is associated with the object.\n\nLinkName -> (string)\n\nThe name of the link between the parent and the child object."
    },
    {
      "command_name": "list-object-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-object-policies.html",
      "command_description": "Description\n\nReturns policies attached to an object in pagination fashion.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-object-policies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: AttachedPolicyIds",
      "command_synopsis": "Synopsis\n  list-object-policies\n--directory-arn <value>\n--object-reference <value>\n[--consistency-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--consistency-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where objects reside. For more information, see arns .\n\n--object-reference (structure)\n\nReference that identifies the object for which policies will be listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--consistency-level (string)\n\nRepresents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttachedPolicyIds -> (list)\n\nA list of policy ObjectIdentifiers , that are attached to the object.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-outgoing-typed-links",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-outgoing-typed-links.html",
      "command_description": "Description\n\nReturns a paginated list of all the outgoing TypedLinkSpecifier information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see Typed Links .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-outgoing-typed-links is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: TypedLinkSpecifiers",
      "command_synopsis": "Synopsis\n  list-outgoing-typed-links\n--directory-arn <value>\n--object-reference <value>\n[--filter-attribute-ranges <value>]\n[--filter-typed-link <value>]\n[--consistency-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--filter-attribute-ranges <value>]",
        "[--filter-typed-link <value>]",
        "[--consistency-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) of the directory where you want to list the typed links.\n\n--object-reference (structure)\n\nA reference that identifies the object whose attributes will be listed.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--filter-attribute-ranges (list)\n\nProvides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.\n\n(structure)\n\nIdentifies the range of attributes that are used by a specified filter.\n\nAttributeName -> (string)\n\nThe unique name of the typed link attribute.\n\nRange -> (structure)\n\nThe range of attribute values that are being selected.\n\nStartMode -> (string)\n\nThe inclusive or exclusive range start.\n\nStartValue -> (structure)\n\nThe value to start the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nEndMode -> (string)\n\nThe inclusive or exclusive range end.\n\nEndValue -> (structure)\n\nThe attribute value to terminate the range at.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nShorthand Syntax:\n\nAttributeName=string,Range={StartMode=string,StartValue={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp},EndMode=string,EndValue={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp}} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"AttributeName\": \"string\",\n    \"Range\": {\n      \"StartMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n      \"StartValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      },\n      \"EndMode\": \"FIRST\"|\"LAST\"|\"LAST_BEFORE_MISSING_VALUES\"|\"INCLUSIVE\"|\"EXCLUSIVE\",\n      \"EndValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      }\n    }\n  }\n  ...\n]\n\n\n--filter-typed-link (structure)\n\nFilters are interpreted in the order of the attributes defined on the typed link facet, not the order they are supplied to any API calls.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nShorthand Syntax:\n\nSchemaArn=string,TypedLinkName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"TypedLinkName\": \"string\"\n}\n\n\n--consistency-level (string)\n\nThe consistency level to execute the request at.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTypedLinkSpecifiers -> (list)\n\nReturns a typed link specifier as output.\n\n(structure)\n\nContains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The AttachTypedLink API returns a typed link specifier while the DetachTypedLink API accepts one as input. Similarly, the ListIncomingTypedLinks and ListOutgoingTypedLinks API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-policy-attachments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-policy-attachments.html",
      "command_description": "Description\n\nReturns all of the ObjectIdentifiers to which a given policy is attached.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-policy-attachments is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ObjectIdentifiers",
      "command_synopsis": "Synopsis\n  list-policy-attachments\n--directory-arn <value>\n--policy-reference <value>\n[--consistency-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--policy-reference <value>",
        "[--consistency-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where objects reside. For more information, see arns .\n\n--policy-reference (structure)\n\nThe reference that identifies the policy object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--consistency-level (string)\n\nRepresents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.\n\nPossible values:\n\nSERIALIZABLE\n\nEVENTUAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nObjectIdentifiers -> (list)\n\nA list of ObjectIdentifiers to which the policy is attached.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-published-schema-arns",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-published-schema-arns.html",
      "command_description": "Description\n\nLists the major version families of each published schema. If a major version ARN is provided as SchemaArn , the minor version revisions in that family are listed instead.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-published-schema-arns is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SchemaArns",
      "command_synopsis": "Synopsis\n  list-published-schema-arns\n[--schema-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--schema-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe response for ListPublishedSchemaArns when this parameter is used will list all minor version ARNs for a major version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArns -> (list)\n\nThe ARNs of published schemas.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-tags-for-resource.html",
      "command_description": "Description\n\nReturns tags for a resource. Tagging is currently supported only for directories with a limit of 50 tags per directory. All 50 tags are returned for a given directory with this API call.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-tags-for-resource is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Tags",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nA list of tag key value pairs that are associated with the response.\n\n(structure)\n\nThe tag structure that contains a tag key and value.\n\nKey -> (string)\n\nThe key that is associated with the tag.\n\nValue -> (string)\n\nThe value that is associated with the tag.\n\nNextToken -> (string)\n\nThe token to use to retrieve the next page of results. This value is null when there are no more results to return."
    },
    {
      "command_name": "list-typed-link-facet-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-typed-link-facet-attributes.html",
      "command_description": "Description\n\nReturns a paginated list of all attribute definitions for a particular TypedLinkFacet . For more information, see Typed Links .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-typed-link-facet-attributes is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Attributes",
      "command_synopsis": "Synopsis\n  list-typed-link-facet-attributes\n--schema-arn <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\n--name (string)\n\nThe unique name of the typed link facet.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttributes -> (list)\n\nAn ordered set of attributes associate with the typed link.\n\n(structure)\n\nA typed link attribute definition.\n\nName -> (string)\n\nThe unique name of the typed link attribute.\n\nType -> (string)\n\nThe type of the attribute.\n\nDefaultValue -> (structure)\n\nThe default value of the attribute (if configured).\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nIsImmutable -> (boolean)\n\nWhether the attribute is mutable or not.\n\nRules -> (map)\n\nValidation rules that are attached to the attribute definition.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains an Amazon Resource Name (ARN) and parameters that are associated with the rule.\n\nType -> (string)\n\nThe type of attribute validation rule.\n\nParameters -> (map)\n\nThe minimum and maximum parameters that are associated with the rule.\n\nkey -> (string)\n\nvalue -> (string)\n\nRequiredBehavior -> (string)\n\nThe required behavior of the TypedLinkAttributeDefinition .\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "list-typed-link-facet-names",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/list-typed-link-facet-names.html",
      "command_description": "Description\n\nReturns a paginated list of TypedLink facet names for a particular schema. For more information, see Typed Links .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-typed-link-facet-names is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FacetNames",
      "command_synopsis": "Synopsis\n  list-typed-link-facet-names\n--schema-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFacetNames -> (list)\n\nThe names of typed link facets that exist within the schema.\n\n(string)\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "lookup-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/lookup-policy.html",
      "command_description": "Description\n\nLists all policies from the root of the Directory to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don’t have the policies attached, it returns the ObjectIdentifier for such objects. If policies are present, it returns ObjectIdentifier , policyId , and policyType . Paths that don’t lead to the root from the target object are ignored. For more information, see Policies .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlookup-policy is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: PolicyToPathList",
      "command_synopsis": "Synopsis\n  lookup-policy\n--directory-arn <value>\n--object-reference <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory . For more information, see arns .\n\n--object-reference (structure)\n\nReference that identifies the object whose policies will be looked up.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyToPathList -> (list)\n\nProvides list of path to policies. Policies contain PolicyId , ObjectIdentifier , and PolicyType . For more information, see Policies .\n\n(structure)\n\nUsed when a regular object exists in a Directory and you want to find all of the policies that are associated with that object and the parent to that object.\n\nPath -> (string)\n\nThe path that is referenced from the root.\n\nPolicies -> (list)\n\nList of policy objects.\n\n(structure)\n\nContains the PolicyType , PolicyId , and the ObjectIdentifier to which it is attached. For more information, see Policies .\n\nPolicyId -> (string)\n\nThe ID of PolicyAttachment .\n\nObjectIdentifier -> (string)\n\nThe ObjectIdentifier that is associated with PolicyAttachment .\n\nPolicyType -> (string)\n\nThe type of policy that can be associated with PolicyAttachment .\n\nNextToken -> (string)\n\nThe pagination token."
    },
    {
      "command_name": "publish-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/publish-schema.html",
      "command_description": "Description\n\nPublishes a development schema with a major version and a recommended minor version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  publish-schema\n--development-schema-arn <value>\n[--minor-version <value>]\n[--name <value>]\n--schema-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--development-schema-arn <value>",
        "[--minor-version <value>]",
        "[--name <value>]",
        "--schema-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--development-schema-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the development schema. For more information, see arns .\n\n--minor-version (string)\n\nThe minor version under which the schema will be published. This parameter is recommended. Schemas have both a major and minor version associated with them.\n\n--name (string)\n\nThe new name under which the schema will be published. If this is not provided, the development schema is considered.\n\n--schema-version (string)\n\nThe major version under which the schema will be published. Schemas have both a major and minor version associated with them.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPublishedSchemaArn -> (string)\n\nThe ARN that is associated with the published schema. For more information, see arns ."
    },
    {
      "command_name": "put-schema-from-json",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/put-schema-from-json.html",
      "command_description": "Description\n\nAllows a schema to be updated using JSON upload. Only available for development schemas. See JSON Schema Format for more information.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-schema-from-json\n--schema-arn <value>\n--document <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--document <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe ARN of the schema to update.\n\n--document (string)\n\nThe replacement JSON schema.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the schema to update."
    },
    {
      "command_name": "remove-facet-from-object",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/remove-facet-from-object.html",
      "command_description": "Description\n\nRemoves the specified facet from the specified object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-facet-from-object\n--directory-arn <value>\n--schema-facet <value>\n--object-reference <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--schema-facet <value>",
        "--object-reference <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe ARN of the directory in which the object resides.\n\n--schema-facet (structure)\n\nThe facet to remove. See SchemaFacet for details.\n\nSchemaArn -> (string)\n\nThe ARN of the schema that contains the facet with no minor component. See arns and In-Place Schema Upgrade for a description of when to provide minor versions. If this value is set, FacetName must also be set.\n\nFacetName -> (string)\n\nThe name of the facet. If this value is set, SchemaArn must also be set.\n\nShorthand Syntax:\n\nSchemaArn=string,FacetName=string\n\n\nJSON Syntax:\n\n{\n  \"SchemaArn\": \"string\",\n  \"FacetName\": \"string\"\n}\n\n\n--object-reference (structure)\n\nA reference to the object to remove the facet from.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/tag-resource.html",
      "command_description": "Description\n\nAn API operation for adding tags to a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.\n\n--tags (list)\n\nA list of tag key-value pairs.\n\n(structure)\n\nThe tag structure that contains a tag key and value.\n\nKey -> (string)\n\nThe key that is associated with the tag.\n\nValue -> (string)\n\nThe value that is associated with the tag.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/untag-resource.html",
      "command_description": "Description\n\nAn API operation for removing tags from a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.\n\n--tag-keys (list)\n\nKeys of the tag that need to be removed from the resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-facet",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/update-facet.html",
      "command_description": "Description\n\nDoes the following:\n\nAdds new Attributes , Rules , or ObjectTypes .\n\nUpdates existing Attributes , Rules , or ObjectTypes .\n\nDeletes existing Attributes , Rules , or ObjectTypes .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-facet\n--schema-arn <value>\n--name <value>\n[--attribute-updates <value>]\n[--object-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--name <value>",
        "[--attribute-updates <value>]",
        "[--object-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Facet . For more information, see arns .\n\n--name (string)\n\nThe name of the facet.\n\n--attribute-updates (list)\n\nList of attributes that need to be updated in a given schema Facet . Each attribute is followed by AttributeAction , which specifies the type of update operation to perform.\n\n(structure)\n\nA structure that contains information used to update an attribute.\n\nAttribute -> (structure)\n\nThe attribute to update.\n\nName -> (string)\n\nThe name of the facet attribute.\n\nAttributeDefinition -> (structure)\n\nA facet attribute consists of either a definition or a reference. This structure contains the attribute definition. See Attribute References for more information.\n\nType -> (string)\n\nThe type of the attribute.\n\nDefaultValue -> (structure)\n\nThe default value of the attribute (if configured).\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nIsImmutable -> (boolean)\n\nWhether the attribute is mutable or not.\n\nRules -> (map)\n\nValidation rules attached to the attribute definition.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains an Amazon Resource Name (ARN) and parameters that are associated with the rule.\n\nType -> (string)\n\nThe type of attribute validation rule.\n\nParameters -> (map)\n\nThe minimum and maximum parameters that are associated with the rule.\n\nkey -> (string)\n\nvalue -> (string)\n\nAttributeReference -> (structure)\n\nAn attribute reference that is associated with the attribute. See Attribute References for more information.\n\nTargetFacetName -> (string)\n\nThe target facet name that is associated with the facet reference. See Attribute References for more information.\n\nTargetAttributeName -> (string)\n\nThe target attribute name that is associated with the facet reference. See Attribute References for more information.\n\nRequiredBehavior -> (string)\n\nThe required behavior of the FacetAttribute .\n\nAction -> (string)\n\nThe action to perform when updating the attribute.\n\nJSON Syntax:\n\n[\n  {\n    \"Attribute\": {\n      \"Name\": \"string\",\n      \"AttributeDefinition\": {\n        \"Type\": \"STRING\"|\"BINARY\"|\"BOOLEAN\"|\"NUMBER\"|\"DATETIME\"|\"VARIANT\",\n        \"DefaultValue\": {\n          \"StringValue\": \"string\",\n          \"BinaryValue\": blob,\n          \"BooleanValue\": true|false,\n          \"NumberValue\": \"string\",\n          \"DatetimeValue\": timestamp\n        },\n        \"IsImmutable\": true|false,\n        \"Rules\": {\"string\": {\n              \"Type\": \"BINARY_LENGTH\"|\"NUMBER_COMPARISON\"|\"STRING_FROM_SET\"|\"STRING_LENGTH\",\n              \"Parameters\": {\"string\": \"string\"\n                ...}\n            }\n          ...}\n      },\n      \"AttributeReference\": {\n        \"TargetFacetName\": \"string\",\n        \"TargetAttributeName\": \"string\"\n      },\n      \"RequiredBehavior\": \"REQUIRED_ALWAYS\"|\"NOT_REQUIRED\"\n    },\n    \"Action\": \"CREATE_OR_UPDATE\"|\"DELETE\"\n  }\n  ...\n]\n\n\n--object-type (string)\n\nThe object type that is associated with the facet. See CreateFacetRequest$ObjectType for more details.\n\nPossible values:\n\nNODE\n\nLEAF_NODE\n\nPOLICY\n\nINDEX\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-link-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/update-link-attributes.html",
      "command_description": "Description\n\nUpdates a given typed link’s attributes. Attributes to be updated must not contribute to the typed link’s identity, as defined by its IdentityAttributeOrder .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-link-attributes\n--directory-arn <value>\n--typed-link-specifier <value>\n--attribute-updates <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--typed-link-specifier <value>",
        "--attribute-updates <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where the updated typed link resides. For more information, see arns or Typed Links .\n\n--typed-link-specifier (structure)\n\nAllows a typed link specifier to be accepted as input.\n\nTypedLinkFacet -> (structure)\n\nIdentifies the typed link facet that is associated with the typed link.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\nTypedLinkName -> (string)\n\nThe unique name of the typed link facet.\n\nSourceObjectReference -> (structure)\n\nIdentifies the source object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nTargetObjectReference -> (structure)\n\nIdentifies the target object that the typed link will attach to.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nIdentityAttributeValues -> (list)\n\nIdentifies the attribute value to update.\n\n(structure)\n\nIdentifies the attribute name and value for a typed link.\n\nAttributeName -> (string)\n\nThe attribute name of the typed link.\n\nValue -> (structure)\n\nThe value for the typed link.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nJSON Syntax:\n\n{\n  \"TypedLinkFacet\": {\n    \"SchemaArn\": \"string\",\n    \"TypedLinkName\": \"string\"\n  },\n  \"SourceObjectReference\": {\n    \"Selector\": \"string\"\n  },\n  \"TargetObjectReference\": {\n    \"Selector\": \"string\"\n  },\n  \"IdentityAttributeValues\": [\n    {\n      \"AttributeName\": \"string\",\n      \"Value\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      }\n    }\n    ...\n  ]\n}\n\n\n--attribute-updates (list)\n\nThe attributes update structure.\n\n(structure)\n\nStructure that contains attribute update information.\n\nAttributeKey -> (structure)\n\nThe key of the attribute being updated.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nAttributeAction -> (structure)\n\nThe action to perform as part of the attribute update.\n\nAttributeActionType -> (string)\n\nA type that can be either UPDATE_OR_CREATE or DELETE .\n\nAttributeUpdateValue -> (structure)\n\nThe value that you want to update to.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nShorthand Syntax:\n\nAttributeKey={SchemaArn=string,FacetName=string,Name=string},AttributeAction={AttributeActionType=string,AttributeUpdateValue={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp}} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"AttributeKey\": {\n      \"SchemaArn\": \"string\",\n      \"FacetName\": \"string\",\n      \"Name\": \"string\"\n    },\n    \"AttributeAction\": {\n      \"AttributeActionType\": \"CREATE_OR_UPDATE\"|\"DELETE\",\n      \"AttributeUpdateValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      }\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-object-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/update-object-attributes.html",
      "command_description": "Description\n\nUpdates a given object’s attributes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-object-attributes\n--directory-arn <value>\n--object-reference <value>\n--attribute-updates <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--directory-arn <value>",
        "--object-reference <value>",
        "--attribute-updates <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--directory-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the Directory where the object resides. For more information, see arns .\n\n--object-reference (structure)\n\nThe reference that identifies the object.\n\nSelector -> (string)\n\nA path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see Access Objects . You can identify an object in one of the following ways:\n\n$ObjectIdentifier - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\n\n/some/path - Identifies the object based on path\n\n#SomeBatchReference - Identifies the object in a batch call\n\nShorthand Syntax:\n\nSelector=string\n\n\nJSON Syntax:\n\n{\n  \"Selector\": \"string\"\n}\n\n\n--attribute-updates (list)\n\nThe attributes update structure.\n\n(structure)\n\nStructure that contains attribute update information.\n\nObjectAttributeKey -> (structure)\n\nThe key of the attribute being updated.\n\nSchemaArn -> (string)\n\nThe Amazon Resource Name (ARN) of the schema that contains the facet and attribute.\n\nFacetName -> (string)\n\nThe name of the facet that the attribute exists within.\n\nName -> (string)\n\nThe name of the attribute.\n\nObjectAttributeAction -> (structure)\n\nThe action to perform as part of the attribute update.\n\nObjectAttributeActionType -> (string)\n\nA type that can be either Update or Delete .\n\nObjectAttributeUpdateValue -> (structure)\n\nThe value that you want to update to.\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nShorthand Syntax:\n\nObjectAttributeKey={SchemaArn=string,FacetName=string,Name=string},ObjectAttributeAction={ObjectAttributeActionType=string,ObjectAttributeUpdateValue={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp}} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"ObjectAttributeKey\": {\n      \"SchemaArn\": \"string\",\n      \"FacetName\": \"string\",\n      \"Name\": \"string\"\n    },\n    \"ObjectAttributeAction\": {\n      \"ObjectAttributeActionType\": \"CREATE_OR_UPDATE\"|\"DELETE\",\n      \"ObjectAttributeUpdateValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      }\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nObjectIdentifier -> (string)\n\nThe ObjectIdentifier of the updated object."
    },
    {
      "command_name": "update-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/update-schema.html",
      "command_description": "Description\n\nUpdates the schema name with a new name. Only development schema names can be updated.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-schema\n--schema-arn <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) of the development schema. For more information, see arns .\n\n--name (string)\n\nThe name of the schema.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSchemaArn -> (string)\n\nThe ARN that is associated with the updated schema. For more information, see arns ."
    },
    {
      "command_name": "update-typed-link-facet",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/update-typed-link-facet.html",
      "command_description": "Description\n\nUpdates a TypedLinkFacet . For more information, see Typed Links .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-typed-link-facet\n--schema-arn <value>\n--name <value>\n--attribute-updates <value>\n--identity-attribute-order <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--schema-arn <value>",
        "--name <value>",
        "--attribute-updates <value>",
        "--identity-attribute-order <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--schema-arn (string)\n\nThe Amazon Resource Name (ARN) that is associated with the schema. For more information, see arns .\n\n--name (string)\n\nThe unique name of the typed link facet.\n\n--attribute-updates (list)\n\nAttributes update structure.\n\n(structure)\n\nA typed link facet attribute update.\n\nAttribute -> (structure)\n\nThe attribute to update.\n\nName -> (string)\n\nThe unique name of the typed link attribute.\n\nType -> (string)\n\nThe type of the attribute.\n\nDefaultValue -> (structure)\n\nThe default value of the attribute (if configured).\n\nStringValue -> (string)\n\nA string data value.\n\nBinaryValue -> (blob)\n\nA binary data value.\n\nBooleanValue -> (boolean)\n\nA Boolean data value.\n\nNumberValue -> (string)\n\nA number data value.\n\nDatetimeValue -> (timestamp)\n\nA date and time value.\n\nIsImmutable -> (boolean)\n\nWhether the attribute is mutable or not.\n\nRules -> (map)\n\nValidation rules that are attached to the attribute definition.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains an Amazon Resource Name (ARN) and parameters that are associated with the rule.\n\nType -> (string)\n\nThe type of attribute validation rule.\n\nParameters -> (map)\n\nThe minimum and maximum parameters that are associated with the rule.\n\nkey -> (string)\n\nvalue -> (string)\n\nRequiredBehavior -> (string)\n\nThe required behavior of the TypedLinkAttributeDefinition .\n\nAction -> (string)\n\nThe action to perform when updating the attribute.\n\nShorthand Syntax:\n\nAttribute={Name=string,Type=string,DefaultValue={StringValue=string,BinaryValue=blob,BooleanValue=boolean,NumberValue=string,DatetimeValue=timestamp},IsImmutable=boolean,Rules={KeyName1={Type=string,Parameters={KeyName1=string,KeyName2=string}},KeyName2={Type=string,Parameters={KeyName1=string,KeyName2=string}}},RequiredBehavior=string},Action=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Attribute\": {\n      \"Name\": \"string\",\n      \"Type\": \"STRING\"|\"BINARY\"|\"BOOLEAN\"|\"NUMBER\"|\"DATETIME\"|\"VARIANT\",\n      \"DefaultValue\": {\n        \"StringValue\": \"string\",\n        \"BinaryValue\": blob,\n        \"BooleanValue\": true|false,\n        \"NumberValue\": \"string\",\n        \"DatetimeValue\": timestamp\n      },\n      \"IsImmutable\": true|false,\n      \"Rules\": {\"string\": {\n            \"Type\": \"BINARY_LENGTH\"|\"NUMBER_COMPARISON\"|\"STRING_FROM_SET\"|\"STRING_LENGTH\",\n            \"Parameters\": {\"string\": \"string\"\n              ...}\n          }\n        ...},\n      \"RequiredBehavior\": \"REQUIRED_ALWAYS\"|\"NOT_REQUIRED\"\n    },\n    \"Action\": \"CREATE_OR_UPDATE\"|\"DELETE\"\n  }\n  ...\n]\n\n\n--identity-attribute-order (list)\n\nThe order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to a typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see Typed Links .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "upgrade-applied-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/upgrade-applied-schema.html",
      "command_description": "Description\n\nUpgrades a single directory in-place using the PublishedSchemaArn with schema updates found in MinorVersion . Backwards-compatible minor version upgrades are instantaneously available for readers on all objects in the directory. Note: This is a synchronous API call and upgrades only one schema on a given directory per call. To upgrade multiple directories from one schema, you would need to call this API on each directory.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  upgrade-applied-schema\n--published-schema-arn <value>\n--directory-arn <value>\n[--dry-run | --no-dry-run]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--published-schema-arn <value>",
        "--directory-arn <value>",
        "[--dry-run | --no-dry-run]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--published-schema-arn (string)\n\nThe revision of the published schema to upgrade the directory to.\n\n--directory-arn (string)\n\nThe ARN for the directory to which the upgraded schema will be applied.\n\n--dry-run | --no-dry-run (boolean)\n\nUsed for testing whether the major version schemas are backward compatible or not. If schema compatibility fails, an exception would be thrown else the call would succeed but no changes will be saved. This parameter is optional.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpgradedSchemaArn -> (string)\n\nThe ARN of the upgraded schema that is returned as part of the response.\n\nDirectoryArn -> (string)\n\nThe ARN of the directory that is returned as part of the response."
    },
    {
      "command_name": "upgrade-published-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/clouddirectory/upgrade-published-schema.html",
      "command_description": "Description\n\nUpgrades a published schema under a new minor version revision using the current contents of DevelopmentSchemaArn .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  upgrade-published-schema\n--development-schema-arn <value>\n--published-schema-arn <value>\n--minor-version <value>\n[--dry-run | --no-dry-run]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--development-schema-arn <value>",
        "--published-schema-arn <value>",
        "--minor-version <value>",
        "[--dry-run | --no-dry-run]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--development-schema-arn (string)\n\nThe ARN of the development schema with the changes used for the upgrade.\n\n--published-schema-arn (string)\n\nThe ARN of the published schema to be upgraded.\n\n--minor-version (string)\n\nIdentifies the minor version of the published schema that will be created. This parameter is NOT optional.\n\n--dry-run | --no-dry-run (boolean)\n\nUsed for testing whether the Development schema provided is backwards compatible, or not, with the publish schema provided by the user to be upgraded. If schema compatibility fails, an exception would be thrown else the call would succeed. This parameter is optional and defaults to false.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUpgradedSchemaArn -> (string)\n\nThe ARN of the upgraded schema that is returned as part of the response."
    }
  ],
  "service_description": "Description\n\nAmazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see AWS Directory Service and the Amazon Cloud Directory Developer Guide ."
}