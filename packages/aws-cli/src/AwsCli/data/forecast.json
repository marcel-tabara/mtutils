{
  "service_name": "forecast",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/index.html",
  "service_commands": [
    {
      "command_name": "create-dataset",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/create-dataset.html",
      "command_description": "Description\n\nCreates an Amazon Forecast dataset. The information about the dataset that you provide helps Forecast understand how to consume the data for model training. This includes the following:\n\n*DataFrequency * - How frequently your historical time-series data is collected.\n\n*Domain * and * DatasetType * - Each dataset has an associated dataset domain and a type within the domain. Amazon Forecast provides a list of predefined domains and types within each domain. For each unique dataset domain and type within the domain, Amazon Forecast requires your data to include a minimum set of predefined fields.\n\n*Schema * - A schema specifies the fields in the dataset, including the field name and data type.\n\nAfter creating a dataset, you import your training data into it and add the dataset to a dataset group. You use the dataset group to create a predictor. For more information, see howitworks-datasets-groups .\n\nTo get a list of all your datasets, use the ListDatasets operation.\n\nFor example Forecast datasets, see the Amazon Forecast Sample GitHub repository .\n\nNote\n\nThe Status of a dataset must be ACTIVE before you can import training data. Use the DescribeDataset operation to get the status.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-dataset\n--dataset-name <value>\n--domain <value>\n--dataset-type <value>\n[--data-frequency <value>]\n--schema <value>\n[--encryption-config <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-name <value>",
        "--domain <value>",
        "--dataset-type <value>",
        "[--data-frequency <value>]",
        "--schema <value>",
        "[--encryption-config <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-name (string)\n\nA name for the dataset.\n\n--domain (string)\n\nThe domain associated with the dataset. When you add a dataset to a dataset group, this value and the value specified for the Domain parameter of the CreateDatasetGroup operation must match.\n\nThe Domain and DatasetType that you choose determine the fields that must be present in the training data that you import to the dataset. For example, if you choose the RETAIL domain and TARGET_TIME_SERIES as the DatasetType , Amazon Forecast requires item_id , timestamp , and demand fields to be present in your data. For more information, see howitworks-datasets-groups .\n\nPossible values:\n\nRETAIL\n\nCUSTOM\n\nINVENTORY_PLANNING\n\nEC2_CAPACITY\n\nWORK_FORCE\n\nWEB_TRAFFIC\n\nMETRICS\n\n--dataset-type (string)\n\nThe dataset type. Valid values depend on the chosen Domain .\n\nPossible values:\n\nTARGET_TIME_SERIES\n\nRELATED_TIME_SERIES\n\nITEM_METADATA\n\n--data-frequency (string)\n\nThe frequency of data collection. This parameter is required for RELATED_TIME_SERIES datasets.\n\nValid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes), 15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For example, “D” indicates every day and “15min” indicates every 15 minutes.\n\n--schema (structure)\n\nThe schema for the dataset. The schema attributes and their order must match the fields in your data. The dataset Domain and DatasetType that you choose determine the minimum required fields in your training data. For information about the required fields for a specific dataset domain and type, see howitworks-domains-ds-types .\n\nAttributes -> (list)\n\nAn array of attributes specifying the name and type of each field in a dataset.\n\n(structure)\n\nAn attribute of a schema, which defines a dataset field. A schema attribute is required for every field in a dataset. The Schema object contains an array of SchemaAttribute objects.\n\nAttributeName -> (string)\n\nThe name of the dataset field.\n\nAttributeType -> (string)\n\nThe data type of the field.\n\nShorthand Syntax:\n\nAttributes=[{AttributeName=string,AttributeType=string},{AttributeName=string,AttributeType=string}]\n\n\nJSON Syntax:\n\n{\n  \"Attributes\": [\n    {\n      \"AttributeName\": \"string\",\n      \"AttributeType\": \"string\"|\"integer\"|\"float\"|\"timestamp\"|\"geolocation\"\n    }\n    ...\n  ]\n}\n\n\n--encryption-config (structure)\n\nAn AWS Key Management Service (KMS) key and the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.\n\nRoleArn -> (string)\n\nThe ARN of the IAM role that Amazon Forecast can assume to access the AWS KMS key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key.\n\nShorthand Syntax:\n\nRoleArn=string,KMSKeyArn=string\n\n\nJSON Syntax:\n\n{\n  \"RoleArn\": \"string\",\n  \"KMSKeyArn\": \"string\"\n}\n\n\n--tags (list)\n\nThe optional metadata that you apply to the dataset to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\n(structure)\n\nThe optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatasetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset."
    },
    {
      "command_name": "create-dataset-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/create-dataset-group.html",
      "command_description": "Description\n\nCreates a dataset group, which holds a collection of related datasets. You can add datasets to the dataset group when you create the dataset group, or later by using the UpdateDatasetGroup operation.\n\nAfter creating a dataset group and adding datasets, you use the dataset group when you create a predictor. For more information, see howitworks-datasets-groups .\n\nTo get a list of all your datasets groups, use the ListDatasetGroups operation.\n\nNote\n\nThe Status of a dataset group must be ACTIVE before you can use the dataset group to create a predictor. To get the status, use the DescribeDatasetGroup operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-dataset-group\n--dataset-group-name <value>\n--domain <value>\n[--dataset-arns <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-group-name <value>",
        "--domain <value>",
        "[--dataset-arns <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-group-name (string)\n\nA name for the dataset group.\n\n--domain (string)\n\nThe domain associated with the dataset group. When you add a dataset to a dataset group, this value and the value specified for the Domain parameter of the CreateDataset operation must match.\n\nThe Domain and DatasetType that you choose determine the fields that must be present in training data that you import to a dataset. For example, if you choose the RETAIL domain and TARGET_TIME_SERIES as the DatasetType , Amazon Forecast requires that item_id , timestamp , and demand fields are present in your data. For more information, see howitworks-datasets-groups .\n\nPossible values:\n\nRETAIL\n\nCUSTOM\n\nINVENTORY_PLANNING\n\nEC2_CAPACITY\n\nWORK_FORCE\n\nWEB_TRAFFIC\n\nMETRICS\n\n--dataset-arns (list)\n\nAn array of Amazon Resource Names (ARNs) of the datasets that you want to include in the dataset group.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (list)\n\nThe optional metadata that you apply to the dataset group to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\n(structure)\n\nThe optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatasetGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset group."
    },
    {
      "command_name": "create-dataset-import-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/create-dataset-import-job.html",
      "command_description": "Description\n\nImports your training data to an Amazon Forecast dataset. You provide the location of your training data in an Amazon Simple Storage Service (Amazon S3) bucket and the Amazon Resource Name (ARN) of the dataset that you want to import the data to.\n\nYou must specify a DataSource object that includes an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data, as Amazon Forecast makes a copy of your data and processes it in an internal AWS system. For more information, see aws-forecast-iam-roles .\n\nThe training data must be in CSV format. The delimiter must be a comma (,).\n\nYou can specify the path to a specific CSV file, the S3 bucket, or to a folder in the S3 bucket. For the latter two cases, Amazon Forecast imports all files up to the limit of 10,000 files.\n\nBecause dataset imports are not aggregated, your most recent dataset import is the one that is used when training a predictor or generating a forecast. Make sure that your most recent dataset import contains all of the data you want to model off of, and not just the new data collected since the previous import.\n\nTo get a list of all your dataset import jobs, filtered by specified criteria, use the ListDatasetImportJobs operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-dataset-import-job\n--dataset-import-job-name <value>\n--dataset-arn <value>\n--data-source <value>\n[--timestamp-format <value>]\n[--time-zone <value>]\n[--use-geolocation-for-time-zone | --no-use-geolocation-for-time-zone]\n[--geolocation-format <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-import-job-name <value>",
        "--dataset-arn <value>",
        "--data-source <value>",
        "[--timestamp-format <value>]",
        "[--time-zone <value>]",
        "[--use-geolocation-for-time-zone | --no-use-geolocation-for-time-zone]",
        "[--geolocation-format <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-import-job-name (string)\n\nThe name for the dataset import job. We recommend including the current timestamp in the name, for example, 20190721DatasetImport . This can help you avoid getting a ResourceAlreadyExistsException exception.\n\n--dataset-arn (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Forecast dataset that you want to import data to.\n\n--data-source (structure)\n\nThe location of the training data to import and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data. The training data must be stored in an Amazon S3 bucket.\n\nIf encryption is used, DataSource must include an AWS Key Management Service (KMS) key and the IAM role must allow Amazon Forecast permission to access the key. The KMS key and IAM role must match those specified in the EncryptionConfig parameter of the CreateDataset operation.\n\nS3Config -> (structure)\n\nThe path to the training data stored in an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the data.\n\nPath -> (string)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket.\n\nRoleArn -> (string)\n\nThe ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the KMSKeyArn key, the role must allow access to the key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.\n\nShorthand Syntax:\n\nS3Config={Path=string,RoleArn=string,KMSKeyArn=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Config\": {\n    \"Path\": \"string\",\n    \"RoleArn\": \"string\",\n    \"KMSKeyArn\": \"string\"\n  }\n}\n\n\n--timestamp-format (string)\n\nThe format of timestamps in the dataset. The format that you specify depends on the DataFrequency specified when the dataset was created. The following formats are supported\n\n“yyyy-MM-dd” For the following data frequencies: Y, M, W, and D\n\n“yyyy-MM-dd HH:mm:ss” For the following data frequencies: H, 30min, 15min, and 1min; and optionally, for: Y, M, W, and D\n\nIf the format isn’t specified, Amazon Forecast expects the format to be “yyyy-MM-dd HH:mm:ss”.\n\n--time-zone (string)\n\nA single time zone for every item in your dataset. This option is ideal for datasets with all timestamps within a single time zone, or if all timestamps are normalized to a single time zone.\n\nRefer to the Joda-Time API for a complete list of valid time zone names.\n\n--use-geolocation-for-time-zone | --no-use-geolocation-for-time-zone (boolean)\n\nAutomatically derive time zone information from the geolocation attribute. This option is ideal for datasets that contain timestamps in multiple time zones and those timestamps are expressed in local time.\n\n--geolocation-format (string)\n\nThe format of the geolocation attribute. The geolocation attribute can be formatted in one of two ways:\n\nLAT_LONG - the latitude and longitude in decimal format (Example: 47.61_-122.33).\n\nCC_POSTALCODE (US Only) - the country code (US), followed by the 5-digit ZIP code (Example: US_98121).\n\n--tags (list)\n\nThe optional metadata that you apply to the dataset import job to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\n(structure)\n\nThe optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatasetImportJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset import job."
    },
    {
      "command_name": "create-forecast",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/create-forecast.html",
      "command_description": "Description\n\nCreates a forecast for each item in the TARGET_TIME_SERIES dataset that was used to train the predictor. This is known as inference. To retrieve the forecast for a single item at low latency, use the operation. To export the complete forecast into your Amazon Simple Storage Service (Amazon S3) bucket, use the CreateForecastExportJob operation.\n\nThe range of the forecast is determined by the ForecastHorizon value, which you specify in the CreatePredictor request. When you query a forecast, you can request a specific date range within the forecast.\n\nTo get a list of all your forecasts, use the ListForecasts operation.\n\nNote\n\nThe forecasts generated by Amazon Forecast are in the same time zone as the dataset that was used to create the predictor.\n\nFor more information, see howitworks-forecast .\n\nNote\n\nThe Status of the forecast must be ACTIVE before you can query or export the forecast. Use the DescribeForecast operation to get the status.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-forecast\n--forecast-name <value>\n--predictor-arn <value>\n[--forecast-types <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--forecast-name <value>",
        "--predictor-arn <value>",
        "[--forecast-types <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--forecast-name (string)\n\nA name for the forecast.\n\n--predictor-arn (string)\n\nThe Amazon Resource Name (ARN) of the predictor to use to generate the forecast.\n\n--forecast-types (list)\n\nThe quantiles at which probabilistic forecasts are generated. You can currently specify up to 5 quantiles per forecast . Accepted values include 0.01 to 0.99 (increments of .01 only) and mean . The mean forecast is different from the median (0.50) when the distribution is not symmetric (for example, Beta and Negative Binomial). The default value is [\"0.1\", \"0.5\", \"0.9\"] .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (list)\n\nThe optional metadata that you apply to the forecast to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\n(structure)\n\nThe optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nForecastArn -> (string)\n\nThe Amazon Resource Name (ARN) of the forecast."
    },
    {
      "command_name": "create-forecast-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/create-forecast-export-job.html",
      "command_description": "Description\n\nExports a forecast created by the CreateForecast operation to your Amazon Simple Storage Service (Amazon S3) bucket. The forecast file name will match the following conventions:\n\n<ForecastExportJobName>_<ExportTimestamp>_<PartNumber>\n\nwhere the <ExportTimestamp> component is in Java SimpleDateFormat (yyyy-MM-ddTHH-mm-ssZ).\n\nYou must specify a DataDestination object that includes an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket. For more information, see aws-forecast-iam-roles .\n\nFor more information, see howitworks-forecast .\n\nTo get a list of all your forecast export jobs, use the ListForecastExportJobs operation.\n\nNote\n\nThe Status of the forecast export job must be ACTIVE before you can access the forecast in your Amazon S3 bucket. To get the status, use the DescribeForecastExportJob operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-forecast-export-job\n--forecast-export-job-name <value>\n--forecast-arn <value>\n--destination <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--forecast-export-job-name <value>",
        "--forecast-arn <value>",
        "--destination <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--forecast-export-job-name (string)\n\nThe name for the forecast export job.\n\n--forecast-arn (string)\n\nThe Amazon Resource Name (ARN) of the forecast that you want to export.\n\n--destination (structure)\n\nThe location where you want to save the forecast and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the location. The forecast must be exported to an Amazon S3 bucket.\n\nIf encryption is used, Destination must include an AWS Key Management Service (KMS) key. The IAM role must allow Amazon Forecast permission to access the key.\n\nS3Config -> (structure)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the bucket.\n\nPath -> (string)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket.\n\nRoleArn -> (string)\n\nThe ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the KMSKeyArn key, the role must allow access to the key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.\n\nShorthand Syntax:\n\nS3Config={Path=string,RoleArn=string,KMSKeyArn=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Config\": {\n    \"Path\": \"string\",\n    \"RoleArn\": \"string\",\n    \"KMSKeyArn\": \"string\"\n  }\n}\n\n\n--tags (list)\n\nThe optional metadata that you apply to the forecast export job to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\n(structure)\n\nThe optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nForecastExportJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the export job."
    },
    {
      "command_name": "create-predictor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/create-predictor.html",
      "command_description": "Description\n\nCreates an Amazon Forecast predictor.\n\nIn the request, provide a dataset group and either specify an algorithm or let Amazon Forecast choose an algorithm for you using AutoML. If you specify an algorithm, you also can override algorithm-specific hyperparameters.\n\nAmazon Forecast uses the algorithm to train a predictor using the latest version of the datasets in the specified dataset group. You can then generate a forecast using the CreateForecast operation.\n\nTo see the evaluation metrics, use the GetAccuracyMetrics operation.\n\nYou can specify a featurization configuration to fill and aggregate the data fields in the TARGET_TIME_SERIES dataset to improve model training. For more information, see FeaturizationConfig .\n\nFor RELATED_TIME_SERIES datasets, CreatePredictor verifies that the DataFrequency specified when the dataset was created matches the ForecastFrequency . TARGET_TIME_SERIES datasets don’t have this restriction. Amazon Forecast also verifies the delimiter and timestamp format. For more information, see howitworks-datasets-groups .\n\nBy default, predictors are trained and evaluated at the 0.1 (P10), 0.5 (P50), and 0.9 (P90) quantiles. You can choose custom forecast types to train and evaluate your predictor by setting the ForecastTypes .\n\nAutoML\n\nIf you want Amazon Forecast to evaluate each algorithm and choose the one that minimizes the objective function , set PerformAutoML to true . The objective function is defined as the mean of the weighted losses over the forecast types. By default, these are the p10, p50, and p90 quantile losses. For more information, see EvaluationResult .\n\nWhen AutoML is enabled, the following properties are disallowed:\n\nAlgorithmArn\n\nHPOConfig\n\nPerformHPO\n\nTrainingParameters\n\nTo get a list of all of your predictors, use the ListPredictors operation.\n\nNote\n\nBefore you can use the predictor to create a forecast, the Status of the predictor must be ACTIVE , signifying that training has completed. To get the status, use the DescribePredictor operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-predictor\n--predictor-name <value>\n[--algorithm-arn <value>]\n--forecast-horizon <value>\n[--forecast-types <value>]\n[--perform-auto-ml | --no-perform-auto-ml]\n[--auto-ml-override-strategy <value>]\n[--perform-hpo | --no-perform-hpo]\n[--training-parameters <value>]\n[--evaluation-parameters <value>]\n[--hpo-config <value>]\n--input-data-config <value>\n--featurization-config <value>\n[--encryption-config <value>]\n[--tags <value>]\n[--optimization-metric <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--predictor-name <value>",
        "[--algorithm-arn <value>]",
        "--forecast-horizon <value>",
        "[--forecast-types <value>]",
        "[--perform-auto-ml | --no-perform-auto-ml]",
        "[--auto-ml-override-strategy <value>]",
        "[--perform-hpo | --no-perform-hpo]",
        "[--training-parameters <value>]",
        "[--evaluation-parameters <value>]",
        "[--hpo-config <value>]",
        "--input-data-config <value>",
        "--featurization-config <value>",
        "[--encryption-config <value>]",
        "[--tags <value>]",
        "[--optimization-metric <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--predictor-name (string)\n\nA name for the predictor.\n\n--algorithm-arn (string)\n\nThe Amazon Resource Name (ARN) of the algorithm to use for model training. Required if PerformAutoML is not set to true .\n\nSupported algorithms:\n\narn:aws:forecast:::algorithm/ARIMA\n\narn:aws:forecast:::algorithm/CNN-QR\n\narn:aws:forecast:::algorithm/Deep_AR_Plus\n\narn:aws:forecast:::algorithm/ETS\n\narn:aws:forecast:::algorithm/NPTS\n\narn:aws:forecast:::algorithm/Prophet\n\n--forecast-horizon (integer)\n\nSpecifies the number of time-steps that the model is trained to predict. The forecast horizon is also called the prediction length.\n\nFor example, if you configure a dataset for daily data collection (using the DataFrequency parameter of the CreateDataset operation) and set the forecast horizon to 10, the model returns predictions for 10 days.\n\nThe maximum forecast horizon is the lesser of 500 time-steps or 1/3 of the TARGET_TIME_SERIES dataset length.\n\n--forecast-types (list)\n\nSpecifies the forecast types used to train a predictor. You can specify up to five forecast types. Forecast types can be quantiles from 0.01 to 0.99, by increments of 0.01 or higher. You can also specify the mean forecast with mean .\n\nThe default value is [\"0.10\", \"0.50\", \"0.9\"] .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--perform-auto-ml | --no-perform-auto-ml (boolean)\n\nWhether to perform AutoML. When Amazon Forecast performs AutoML, it evaluates the algorithms it provides and chooses the best algorithm and configuration for your training dataset.\n\nThe default value is false . In this case, you are required to specify an algorithm.\n\nSet PerformAutoML to true to have Amazon Forecast perform AutoML. This is a good option if you aren’t sure which algorithm is suitable for your training data. In this case, PerformHPO must be false.\n\n--auto-ml-override-strategy (string)\n\nNote\n\nThe LatencyOptimized AutoML override strategy is only available in private beta. Contact AWS Support or your account manager to learn more about access privileges.\n\nUsed to overide the default AutoML strategy, which is to optimize predictor accuracy. To apply an AutoML strategy that minimizes training time, use LatencyOptimized .\n\nThis parameter is only valid for predictors trained using AutoML.\n\nPossible values:\n\nLatencyOptimized\n\n--perform-hpo | --no-perform-hpo (boolean)\n\nWhether to perform hyperparameter optimization (HPO). HPO finds optimal hyperparameter values for your training data. The process of performing HPO is known as running a hyperparameter tuning job.\n\nThe default value is false . In this case, Amazon Forecast uses default hyperparameter values from the chosen algorithm.\n\nTo override the default values, set PerformHPO to true and, optionally, supply the HyperParameterTuningJobConfig object. The tuning job specifies a metric to optimize, which hyperparameters participate in tuning, and the valid range for each tunable hyperparameter. In this case, you are required to specify an algorithm and PerformAutoML must be false.\n\nThe following algorithms support HPO:\n\nDeepAR+\n\nCNN-QR\n\n--training-parameters (map)\n\nThe hyperparameters to override for model training. The hyperparameters that you can override are listed in the individual algorithms. For the list of supported algorithms, see aws-forecast-choosing-recipes .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--evaluation-parameters (structure)\n\nUsed to override the default evaluation parameters of the specified algorithm. Amazon Forecast evaluates a predictor by splitting a dataset into training data and testing data. The evaluation parameters define how to perform the split and the number of iterations.\n\nNumberOfBacktestWindows -> (integer)\n\nThe number of times to split the input data. The default is 1. Valid values are 1 through 5.\n\nBackTestWindowOffset -> (integer)\n\nThe point from the end of the dataset where you want to split the data for model training and testing (evaluation). Specify the value as the number of data points. The default is the value of the forecast horizon. BackTestWindowOffset can be used to mimic a past virtual forecast start date. This value must be greater than or equal to the forecast horizon and less than half of the TARGET_TIME_SERIES dataset length.\n\nForecastHorizon <= BackTestWindowOffset < 1/2 * TARGET_TIME_SERIES dataset length\n\nShorthand Syntax:\n\nNumberOfBacktestWindows=integer,BackTestWindowOffset=integer\n\n\nJSON Syntax:\n\n{\n  \"NumberOfBacktestWindows\": integer,\n  \"BackTestWindowOffset\": integer\n}\n\n\n--hpo-config (structure)\n\nProvides hyperparameter override values for the algorithm. If you don’t provide this parameter, Amazon Forecast uses default values. The individual algorithms specify which hyperparameters support hyperparameter optimization (HPO). For more information, see aws-forecast-choosing-recipes .\n\nIf you included the HPOConfig object, you must set PerformHPO to true.\n\nParameterRanges -> (structure)\n\nSpecifies the ranges of valid values for the hyperparameters.\n\nCategoricalParameterRanges -> (list)\n\nSpecifies the tunable range for each categorical hyperparameter.\n\n(structure)\n\nSpecifies a categorical hyperparameter and it’s range of tunable values. This object is part of the ParameterRanges object.\n\nName -> (string)\n\nThe name of the categorical hyperparameter to tune.\n\nValues -> (list)\n\nA list of the tunable categories for the hyperparameter.\n\n(string)\n\nContinuousParameterRanges -> (list)\n\nSpecifies the tunable range for each continuous hyperparameter.\n\n(structure)\n\nSpecifies a continuous hyperparameter and it’s range of tunable values. This object is part of the ParameterRanges object.\n\nName -> (string)\n\nThe name of the hyperparameter to tune.\n\nMaxValue -> (double)\n\nThe maximum tunable value of the hyperparameter.\n\nMinValue -> (double)\n\nThe minimum tunable value of the hyperparameter.\n\nScalingType -> (string)\n\nThe scale that hyperparameter tuning uses to search the hyperparameter range. Valid values:\n\nAuto\n\nAmazon Forecast hyperparameter tuning chooses the best scale for the hyperparameter.\n\nLinear\n\nHyperparameter tuning searches the values in the hyperparameter range by using a linear scale.\n\nLogarithmic\n\nHyperparameter tuning searches the values in the hyperparameter range by using a logarithmic scale.\n\nLogarithmic scaling works only for ranges that have values greater than 0.\n\nReverseLogarithmic\n\nhyperparameter tuning searches the values in the hyperparameter range by using a reverse logarithmic scale.\n\nReverse logarithmic scaling works only for ranges that are entirely within the range 0 <= x < 1.0.\n\nFor information about choosing a hyperparameter scale, see Hyperparameter Scaling . One of the following values:\n\nIntegerParameterRanges -> (list)\n\nSpecifies the tunable range for each integer hyperparameter.\n\n(structure)\n\nSpecifies an integer hyperparameter and it’s range of tunable values. This object is part of the ParameterRanges object.\n\nName -> (string)\n\nThe name of the hyperparameter to tune.\n\nMaxValue -> (integer)\n\nThe maximum tunable value of the hyperparameter.\n\nMinValue -> (integer)\n\nThe minimum tunable value of the hyperparameter.\n\nScalingType -> (string)\n\nThe scale that hyperparameter tuning uses to search the hyperparameter range. Valid values:\n\nAuto\n\nAmazon Forecast hyperparameter tuning chooses the best scale for the hyperparameter.\n\nLinear\n\nHyperparameter tuning searches the values in the hyperparameter range by using a linear scale.\n\nLogarithmic\n\nHyperparameter tuning searches the values in the hyperparameter range by using a logarithmic scale.\n\nLogarithmic scaling works only for ranges that have values greater than 0.\n\nReverseLogarithmic\n\nNot supported for IntegerParameterRange .\n\nReverse logarithmic scaling works only for ranges that are entirely within the range 0 <= x < 1.0.\n\nFor information about choosing a hyperparameter scale, see Hyperparameter Scaling . One of the following values:\n\nJSON Syntax:\n\n{\n  \"ParameterRanges\": {\n    \"CategoricalParameterRanges\": [\n      {\n        \"Name\": \"string\",\n        \"Values\": [\"string\", ...]\n      }\n      ...\n    ],\n    \"ContinuousParameterRanges\": [\n      {\n        \"Name\": \"string\",\n        \"MaxValue\": double,\n        \"MinValue\": double,\n        \"ScalingType\": \"Auto\"|\"Linear\"|\"Logarithmic\"|\"ReverseLogarithmic\"\n      }\n      ...\n    ],\n    \"IntegerParameterRanges\": [\n      {\n        \"Name\": \"string\",\n        \"MaxValue\": integer,\n        \"MinValue\": integer,\n        \"ScalingType\": \"Auto\"|\"Linear\"|\"Logarithmic\"|\"ReverseLogarithmic\"\n      }\n      ...\n    ]\n  }\n}\n\n\n--input-data-config (structure)\n\nDescribes the dataset group that contains the data to use to train the predictor.\n\nDatasetGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset group.\n\nSupplementaryFeatures -> (list)\n\nAn array of supplementary features. The only supported feature is a holiday calendar.\n\n(structure)\n\nDescribes a supplementary feature of a dataset group. This object is part of the InputDataConfig object. Forecast supports the Weather Index and Holidays built-in featurizations.\n\nWeather Index\n\nThe Amazon Forecast Weather Index is a built-in featurization that incorporates historical and projected weather information into your model. The Weather Index supplements your datasets with over two years of historical weather data and up to 14 days of projected weather data. For more information, see Amazon Forecast Weather Index .\n\nHolidays\n\nHolidays is a built-in featurization that incorporates a feature-engineered dataset of national holiday information into your model. It provides native support for the holiday calendars of 66 countries. To view the holiday calendars, refer to the Jollyday library. For more information, see Holidays Featurization .\n\nName -> (string)\n\nThe name of the feature. Valid values: \"holiday\" and \"weather\" .\n\nValue -> (string)\n\nWeather Index\n\nTo enable the Weather Index, set the value to \"true\"\n\nHolidays\n\nTo enable Holidays, specify a country with one of the following two-letter country codes:\n\n“AL” - ALBANIA\n\n“AR” - ARGENTINA\n\n“AT” - AUSTRIA\n\n“AU” - AUSTRALIA\n\n“BA” - BOSNIA HERZEGOVINA\n\n“BE” - BELGIUM\n\n“BG” - BULGARIA\n\n“BO” - BOLIVIA\n\n“BR” - BRAZIL\n\n“BY” - BELARUS\n\n“CA” - CANADA\n\n“CL” - CHILE\n\n“CO” - COLOMBIA\n\n“CR” - COSTA RICA\n\n“HR” - CROATIA\n\n“CZ” - CZECH REPUBLIC\n\n“DK” - DENMARK\n\n“EC” - ECUADOR\n\n“EE” - ESTONIA\n\n“ET” - ETHIOPIA\n\n“FI” - FINLAND\n\n“FR” - FRANCE\n\n“DE” - GERMANY\n\n“GR” - GREECE\n\n“HU” - HUNGARY\n\n“IS” - ICELAND\n\n“IN” - INDIA\n\n“IE” - IRELAND\n\n“IT” - ITALY\n\n“JP” - JAPAN\n\n“KZ” - KAZAKHSTAN\n\n“KR” - KOREA\n\n“LV” - LATVIA\n\n“LI” - LIECHTENSTEIN\n\n“LT” - LITHUANIA\n\n“LU” - LUXEMBOURG\n\n“MK” - MACEDONIA\n\n“MT” - MALTA\n\n“MX” - MEXICO\n\n“MD” - MOLDOVA\n\n“ME” - MONTENEGRO\n\n“NL” - NETHERLANDS\n\n“NZ” - NEW ZEALAND\n\n“NI” - NICARAGUA\n\n“NG” - NIGERIA\n\n“NO” - NORWAY\n\n“PA” - PANAMA\n\n“PY” - PARAGUAY\n\n“PE” - PERU\n\n“PL” - POLAND\n\n“PT” - PORTUGAL\n\n“RO” - ROMANIA\n\n“RU” - RUSSIA\n\n“RS” - SERBIA\n\n“SK” - SLOVAKIA\n\n“SI” - SLOVENIA\n\n“ZA” - SOUTH AFRICA\n\n“ES” - SPAIN\n\n“SE” - SWEDEN\n\n“CH” - SWITZERLAND\n\n“UA” - UKRAINE\n\n“AE” - UNITED ARAB EMIRATES\n\n“US” - UNITED STATES\n\n“UK” - UNITED KINGDOM\n\n“UY” - URUGUAY\n\n“VE” - VENEZUELA\n\nShorthand Syntax:\n\nDatasetGroupArn=string,SupplementaryFeatures=[{Name=string,Value=string},{Name=string,Value=string}]\n\n\nJSON Syntax:\n\n{\n  \"DatasetGroupArn\": \"string\",\n  \"SupplementaryFeatures\": [\n    {\n      \"Name\": \"string\",\n      \"Value\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--featurization-config (structure)\n\nThe featurization configuration.\n\nForecastFrequency -> (string)\n\nThe frequency of predictions in a forecast.\n\nValid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes), 15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For example, “Y” indicates every year and “5min” indicates every five minutes.\n\nThe frequency must be greater than or equal to the TARGET_TIME_SERIES dataset frequency.\n\nWhen a RELATED_TIME_SERIES dataset is provided, the frequency must be equal to the RELATED_TIME_SERIES dataset frequency.\n\nForecastDimensions -> (list)\n\nAn array of dimension (field) names that specify how to group the generated forecast.\n\nFor example, suppose that you are generating a forecast for item sales across all of your stores, and your dataset contains a store_id field. If you want the sales forecast for each item by store, you would specify store_id as the dimension.\n\nAll forecast dimensions specified in the TARGET_TIME_SERIES dataset don’t need to be specified in the CreatePredictor request. All forecast dimensions specified in the RELATED_TIME_SERIES dataset must be specified in the CreatePredictor request.\n\n(string)\n\nFeaturizations -> (list)\n\nAn array of featurization (transformation) information for the fields of a dataset.\n\n(structure)\n\nProvides featurization (transformation) information for a dataset field. This object is part of the FeaturizationConfig object.\n\nFor example:\n\n{\n\n\"AttributeName\": \"demand\",\n\nFeaturizationPipeline [ {\n\n\"FeaturizationMethodName\": \"filling\",\n\n\"FeaturizationMethodParameters\": {\"aggregation\": \"avg\", \"backfill\": \"nan\"}\n\n} ]\n\n}\n\nAttributeName -> (string)\n\nThe name of the schema attribute that specifies the data field to be featurized. Amazon Forecast supports the target field of the TARGET_TIME_SERIES and the RELATED_TIME_SERIES datasets. For example, for the RETAIL domain, the target is demand , and for the CUSTOM domain, the target is target_value . For more information, see howitworks-missing-values .\n\nFeaturizationPipeline -> (list)\n\nAn array of one FeaturizationMethod object that specifies the feature transformation method.\n\n(structure)\n\nProvides information about the method that featurizes (transforms) a dataset field. The method is part of the FeaturizationPipeline of the Featurization object.\n\nThe following is an example of how you specify a FeaturizationMethod object.\n\n{\n\n\"FeaturizationMethodName\": \"filling\",\n\n\"FeaturizationMethodParameters\": {\"aggregation\": \"sum\", \"middlefill\": \"zero\", \"backfill\": \"zero\"}\n\n}\n\nFeaturizationMethodName -> (string)\n\nThe name of the method. The “filling” method is the only supported method.\n\nFeaturizationMethodParameters -> (map)\n\nThe method parameters (key-value pairs), which are a map of override parameters. Specify these parameters to override the default values. Related Time Series attributes do not accept aggregation parameters.\n\nThe following list shows the parameters and their valid values for the “filling” featurization method for a Target Time Series dataset. Bold signifies the default value.\n\naggregation : sum , avg , first , min , max\n\nfrontfill : none\n\nmiddlefill : zero , nan (not a number), value , median , mean , min , max\n\nbackfill : zero , nan , value , median , mean , min , max\n\nThe following list shows the parameters and their valid values for a Related Time Series featurization method (there are no defaults):\n\nmiddlefill : zero , value , median , mean , min , max\n\nbackfill : zero , value , median , mean , min , max\n\nfuturefill : zero , value , median , mean , min , max\n\nTo set a filling method to a specific value, set the fill parameter to value and define the value in a corresponding _value parameter. For example, to set backfilling to a value of 2, include the following: \"backfill\": \"value\" and \"backfill_value\":\"2\" .\n\nkey -> (string)\n\nvalue -> (string)\n\nJSON Syntax:\n\n{\n  \"ForecastFrequency\": \"string\",\n  \"ForecastDimensions\": [\"string\", ...],\n  \"Featurizations\": [\n    {\n      \"AttributeName\": \"string\",\n      \"FeaturizationPipeline\": [\n        {\n          \"FeaturizationMethodName\": \"filling\",\n          \"FeaturizationMethodParameters\": {\"string\": \"string\"\n            ...}\n        }\n        ...\n      ]\n    }\n    ...\n  ]\n}\n\n\n--encryption-config (structure)\n\nAn AWS Key Management Service (KMS) key and the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.\n\nRoleArn -> (string)\n\nThe ARN of the IAM role that Amazon Forecast can assume to access the AWS KMS key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key.\n\nShorthand Syntax:\n\nRoleArn=string,KMSKeyArn=string\n\n\nJSON Syntax:\n\n{\n  \"RoleArn\": \"string\",\n  \"KMSKeyArn\": \"string\"\n}\n\n\n--tags (list)\n\nThe optional metadata that you apply to the predictor to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\n(structure)\n\nThe optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--optimization-metric (string)\n\nThe accuracy metric used to optimize the predictor.\n\nPossible values:\n\nWAPE\n\nRMSE\n\nAverageWeightedQuantileLoss\n\nMASE\n\nMAPE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPredictorArn -> (string)\n\nThe Amazon Resource Name (ARN) of the predictor."
    },
    {
      "command_name": "create-predictor-backtest-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/create-predictor-backtest-export-job.html",
      "command_description": "Description\n\nExports backtest forecasts and accuracy metrics generated by the CreatePredictor operation. Two folders containing CSV files are exported to your specified S3 bucket.\n\nThe export file names will match the following conventions:\n\n<ExportJobName>_<ExportTimestamp>_<PartNumber>.csv\n\nThe <ExportTimestamp> component is in Java SimpleDate format (yyyy-MM-ddTHH-mm-ssZ).\n\nYou must specify a DataDestination object that includes an Amazon S3 bucket and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket. For more information, see aws-forecast-iam-roles .\n\nNote\n\nThe Status of the export job must be ACTIVE before you can access the export in your Amazon S3 bucket. To get the status, use the DescribePredictorBacktestExportJob operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-predictor-backtest-export-job\n--predictor-backtest-export-job-name <value>\n--predictor-arn <value>\n--destination <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--predictor-backtest-export-job-name <value>",
        "--predictor-arn <value>",
        "--destination <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--predictor-backtest-export-job-name (string)\n\nThe name for the backtest export job.\n\n--predictor-arn (string)\n\nThe Amazon Resource Name (ARN) of the predictor that you want to export.\n\n--destination (structure)\n\nThe destination for an export job. Provide an S3 path, an AWS Identity and Access Management (IAM) role that allows Amazon Forecast to access the location, and an AWS Key Management Service (KMS) key (optional).\n\nS3Config -> (structure)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the bucket.\n\nPath -> (string)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket.\n\nRoleArn -> (string)\n\nThe ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the KMSKeyArn key, the role must allow access to the key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.\n\nShorthand Syntax:\n\nS3Config={Path=string,RoleArn=string,KMSKeyArn=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Config\": {\n    \"Path\": \"string\",\n    \"RoleArn\": \"string\",\n    \"KMSKeyArn\": \"string\"\n  }\n}\n\n\n--tags (list)\n\nOptional metadata to help you categorize and organize your backtests. Each tag consists of a key and an optional value, both of which you define. Tag keys and values are case sensitive.\n\nThe following restrictions apply to tags:\n\nFor each resource, each tag key must be unique and each tag key must have one value.\n\nMaximum number of tags per resource: 50.\n\nMaximum key length: 128 Unicode characters in UTF-8.\n\nMaximum value length: 256 Unicode characters in UTF-8.\n\nAccepted characters: all letters and numbers, spaces representable in UTF-8, and + - = . _ : / @. If your tagging schema is used across other services and resources, the character restrictions of those services also apply.\n\nKey prefixes cannot include any upper or lowercase combination of aws: or AWS: . Values can have this prefix. If a tag value has aws as its prefix but the key does not, Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit. You cannot edit or delete tag keys with this prefix.\n\n(structure)\n\nThe optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPredictorBacktestExportJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the predictor backtest export job that you want to export."
    },
    {
      "command_name": "delete-dataset",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/delete-dataset.html",
      "command_description": "Description\n\nDeletes an Amazon Forecast dataset that was created using the CreateDataset operation. You can only delete datasets that have a status of ACTIVE or CREATE_FAILED . To get the status use the DescribeDataset operation.\n\nNote\n\nForecast does not automatically update any dataset groups that contain the deleted dataset. In order to update the dataset group, use the operation, omitting the deleted dataset’s ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-dataset\n--dataset-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-arn (string)\n\nThe Amazon Resource Name (ARN) of the dataset to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-dataset-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/delete-dataset-group.html",
      "command_description": "Description\n\nDeletes a dataset group created using the CreateDatasetGroup operation. You can only delete dataset groups that have a status of ACTIVE , CREATE_FAILED , or UPDATE_FAILED . To get the status, use the DescribeDatasetGroup operation.\n\nThis operation deletes only the dataset group, not the datasets in the group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-dataset-group\n--dataset-group-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-group-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-group-arn (string)\n\nThe Amazon Resource Name (ARN) of the dataset group to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-dataset-import-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/delete-dataset-import-job.html",
      "command_description": "Description\n\nDeletes a dataset import job created using the CreateDatasetImportJob operation. You can delete only dataset import jobs that have a status of ACTIVE or CREATE_FAILED . To get the status, use the DescribeDatasetImportJob operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-dataset-import-job\n--dataset-import-job-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-import-job-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-import-job-arn (string)\n\nThe Amazon Resource Name (ARN) of the dataset import job to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-forecast",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/delete-forecast.html",
      "command_description": "Description\n\nDeletes a forecast created using the CreateForecast operation. You can delete only forecasts that have a status of ACTIVE or CREATE_FAILED . To get the status, use the DescribeForecast operation.\n\nYou can’t delete a forecast while it is being exported. After a forecast is deleted, you can no longer query the forecast.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-forecast\n--forecast-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--forecast-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--forecast-arn (string)\n\nThe Amazon Resource Name (ARN) of the forecast to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-forecast-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/delete-forecast-export-job.html",
      "command_description": "Description\n\nDeletes a forecast export job created using the CreateForecastExportJob operation. You can delete only export jobs that have a status of ACTIVE or CREATE_FAILED . To get the status, use the DescribeForecastExportJob operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-forecast-export-job\n--forecast-export-job-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--forecast-export-job-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--forecast-export-job-arn (string)\n\nThe Amazon Resource Name (ARN) of the forecast export job to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-predictor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/delete-predictor.html",
      "command_description": "Description\n\nDeletes a predictor created using the CreatePredictor operation. You can delete only predictor that have a status of ACTIVE or CREATE_FAILED . To get the status, use the DescribePredictor operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-predictor\n--predictor-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--predictor-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--predictor-arn (string)\n\nThe Amazon Resource Name (ARN) of the predictor to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-predictor-backtest-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/delete-predictor-backtest-export-job.html",
      "command_description": "Description\n\nDeletes a predictor backtest export job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-predictor-backtest-export-job\n--predictor-backtest-export-job-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--predictor-backtest-export-job-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--predictor-backtest-export-job-arn (string)\n\nThe Amazon Resource Name (ARN) of the predictor backtest export job to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-resource-tree",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/delete-resource-tree.html",
      "command_description": "Description\n\nDeletes an entire resource tree. This operation will delete the parent resource and its child resources.\n\nChild resources are resources that were created from another resource. For example, when a forecast is generated from a predictor, the forecast is the child resource and the predictor is the parent resource.\n\nAmazon Forecast resources possess the following parent-child resource hierarchies:\n\nDataset : dataset import jobs\n\nDataset Group : predictors, predictor backtest export jobs, forecasts, forecast export jobs\n\nPredictor : predictor backtest export jobs, forecasts, forecast export jobs\n\nForecast : forecast export jobs\n\nNote\n\nDeleteResourceTree will only delete Amazon Forecast resources, and will not delete datasets or exported files stored in Amazon S3.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resource-tree\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the parent resource to delete. All child resources of the parent resource will also be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-dataset",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/describe-dataset.html",
      "command_description": "Description\n\nDescribes an Amazon Forecast dataset created using the CreateDataset operation.\n\nIn addition to listing the parameters specified in the CreateDataset request, this operation includes the following dataset properties:\n\nCreationTime\n\nLastModificationTime\n\nStatus\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-dataset\n--dataset-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-arn (string)\n\nThe Amazon Resource Name (ARN) of the dataset.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatasetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset.\n\nDatasetName -> (string)\n\nThe name of the dataset.\n\nDomain -> (string)\n\nThe domain associated with the dataset.\n\nDatasetType -> (string)\n\nThe dataset type.\n\nDataFrequency -> (string)\n\nThe frequency of data collection.\n\nValid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes), 15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For example, “M” indicates every month and “30min” indicates every 30 minutes.\n\nSchema -> (structure)\n\nAn array of SchemaAttribute objects that specify the dataset fields. Each SchemaAttribute specifies the name and data type of a field.\n\nAttributes -> (list)\n\nAn array of attributes specifying the name and type of each field in a dataset.\n\n(structure)\n\nAn attribute of a schema, which defines a dataset field. A schema attribute is required for every field in a dataset. The Schema object contains an array of SchemaAttribute objects.\n\nAttributeName -> (string)\n\nThe name of the dataset field.\n\nAttributeType -> (string)\n\nThe data type of the field.\n\nEncryptionConfig -> (structure)\n\nThe AWS Key Management Service (KMS) key and the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.\n\nRoleArn -> (string)\n\nThe ARN of the IAM role that Amazon Forecast can assume to access the AWS KMS key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key.\n\nStatus -> (string)\n\nThe status of the dataset. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nUPDATE_PENDING , UPDATE_IN_PROGRESS , UPDATE_FAILED\n\nThe UPDATE states apply while data is imported to the dataset from a call to the CreateDatasetImportJob operation and reflect the status of the dataset import job. For example, when the import job status is CREATE_IN_PROGRESS , the status of the dataset is UPDATE_IN_PROGRESS .\n\nNote\n\nThe Status of the dataset must be ACTIVE before you can import training data.\n\nCreationTime -> (timestamp)\n\nWhen the dataset was created.\n\nLastModificationTime -> (timestamp)\n\nWhen you create a dataset, LastModificationTime is the same as CreationTime . While data is being imported to the dataset, LastModificationTime is the current time of the DescribeDataset call. After a CreateDatasetImportJob operation has finished, LastModificationTime is when the import job completed or failed."
    },
    {
      "command_name": "describe-dataset-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/describe-dataset-group.html",
      "command_description": "Description\n\nDescribes a dataset group created using the CreateDatasetGroup operation.\n\nIn addition to listing the parameters provided in the CreateDatasetGroup request, this operation includes the following properties:\n\nDatasetArns - The datasets belonging to the group.\n\nCreationTime\n\nLastModificationTime\n\nStatus\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-dataset-group\n--dataset-group-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-group-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-group-arn (string)\n\nThe Amazon Resource Name (ARN) of the dataset group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatasetGroupName -> (string)\n\nThe name of the dataset group.\n\nDatasetGroupArn -> (string)\n\nThe ARN of the dataset group.\n\nDatasetArns -> (list)\n\nAn array of Amazon Resource Names (ARNs) of the datasets contained in the dataset group.\n\n(string)\n\nDomain -> (string)\n\nThe domain associated with the dataset group.\n\nStatus -> (string)\n\nThe status of the dataset group. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nUPDATE_PENDING , UPDATE_IN_PROGRESS , UPDATE_FAILED\n\nThe UPDATE states apply when you call the UpdateDatasetGroup operation.\n\nNote\n\nThe Status of the dataset group must be ACTIVE before you can use the dataset group to create a predictor.\n\nCreationTime -> (timestamp)\n\nWhen the dataset group was created.\n\nLastModificationTime -> (timestamp)\n\nWhen the dataset group was created or last updated from a call to the UpdateDatasetGroup operation. While the dataset group is being updated, LastModificationTime is the current time of the DescribeDatasetGroup call."
    },
    {
      "command_name": "describe-dataset-import-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/describe-dataset-import-job.html",
      "command_description": "Description\n\nDescribes a dataset import job created using the CreateDatasetImportJob operation.\n\nIn addition to listing the parameters provided in the CreateDatasetImportJob request, this operation includes the following properties:\n\nCreationTime\n\nLastModificationTime\n\nDataSize\n\nFieldStatistics\n\nStatus\n\nMessage - If an error occurred, information about the error.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-dataset-import-job\n--dataset-import-job-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-import-job-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-import-job-arn (string)\n\nThe Amazon Resource Name (ARN) of the dataset import job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatasetImportJobName -> (string)\n\nThe name of the dataset import job.\n\nDatasetImportJobArn -> (string)\n\nThe ARN of the dataset import job.\n\nDatasetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset that the training data was imported to.\n\nTimestampFormat -> (string)\n\nThe format of timestamps in the dataset. The format that you specify depends on the DataFrequency specified when the dataset was created. The following formats are supported\n\n“yyyy-MM-dd” For the following data frequencies: Y, M, W, and D\n\n“yyyy-MM-dd HH:mm:ss” For the following data frequencies: H, 30min, 15min, and 1min; and optionally, for: Y, M, W, and D\n\nTimeZone -> (string)\n\nThe single time zone applied to every item in the dataset\n\nUseGeolocationForTimeZone -> (boolean)\n\nWhether TimeZone is automatically derived from the geolocation attribute.\n\nGeolocationFormat -> (string)\n\nThe format of the geolocation attribute. Valid Values:\"LAT_LONG\" and \"CC_POSTALCODE\" .\n\nDataSource -> (structure)\n\nThe location of the training data to import and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data.\n\nIf encryption is used, DataSource includes an AWS Key Management Service (KMS) key.\n\nS3Config -> (structure)\n\nThe path to the training data stored in an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the data.\n\nPath -> (string)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket.\n\nRoleArn -> (string)\n\nThe ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the KMSKeyArn key, the role must allow access to the key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.\n\nEstimatedTimeRemainingInMinutes -> (long)\n\nThe estimated time remaining in minutes for the dataset import job to complete.\n\nFieldStatistics -> (map)\n\nStatistical information about each field in the input data.\n\nkey -> (string)\n\nvalue -> (structure)\n\nProvides statistics for each data field imported into to an Amazon Forecast dataset with the CreateDatasetImportJob operation.\n\nCount -> (integer)\n\nThe number of values in the field. If the response value is -1, refer to CountLong .\n\nCountDistinct -> (integer)\n\nThe number of distinct values in the field. If the response value is -1, refer to CountDistinctLong .\n\nCountNull -> (integer)\n\nThe number of null values in the field. If the response value is -1, refer to CountNullLong .\n\nCountNan -> (integer)\n\nThe number of NAN (not a number) values in the field. If the response value is -1, refer to CountNanLong .\n\nMin -> (string)\n\nFor a numeric field, the minimum value in the field.\n\nMax -> (string)\n\nFor a numeric field, the maximum value in the field.\n\nAvg -> (double)\n\nFor a numeric field, the average value in the field.\n\nStddev -> (double)\n\nFor a numeric field, the standard deviation.\n\nCountLong -> (long)\n\nThe number of values in the field. CountLong is used instead of Count if the value is greater than 2,147,483,647.\n\nCountDistinctLong -> (long)\n\nThe number of distinct values in the field. CountDistinctLong is used instead of CountDistinct if the value is greater than 2,147,483,647.\n\nCountNullLong -> (long)\n\nThe number of null values in the field. CountNullLong is used instead of CountNull if the value is greater than 2,147,483,647.\n\nCountNanLong -> (long)\n\nThe number of NAN (not a number) values in the field. CountNanLong is used instead of CountNan if the value is greater than 2,147,483,647.\n\nDataSize -> (double)\n\nThe size of the dataset in gigabytes (GB) after the import job has finished.\n\nStatus -> (string)\n\nThe status of the dataset import job. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nCREATE_STOPPING , CREATE_STOPPED\n\nMessage -> (string)\n\nIf an error occurred, an informational message about the error.\n\nCreationTime -> (timestamp)\n\nWhen the dataset import job was created.\n\nLastModificationTime -> (timestamp)\n\nThe last time the resource was modified. The timestamp depends on the status of the job:\n\nCREATE_PENDING - The CreationTime .\n\nCREATE_IN_PROGRESS - The current timestamp.\n\nCREATE_STOPPING - The current timestamp.\n\nCREATE_STOPPED - When the job stopped.\n\nACTIVE or CREATE_FAILED - When the job finished or failed."
    },
    {
      "command_name": "describe-forecast",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/describe-forecast.html",
      "command_description": "Description\n\nDescribes a forecast created using the CreateForecast operation.\n\nIn addition to listing the properties provided in the CreateForecast request, this operation lists the following properties:\n\nDatasetGroupArn - The dataset group that provided the training data.\n\nCreationTime\n\nLastModificationTime\n\nStatus\n\nMessage - If an error occurred, information about the error.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-forecast\n--forecast-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--forecast-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--forecast-arn (string)\n\nThe Amazon Resource Name (ARN) of the forecast.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nForecastArn -> (string)\n\nThe forecast ARN as specified in the request.\n\nForecastName -> (string)\n\nThe name of the forecast.\n\nForecastTypes -> (list)\n\nThe quantiles at which probabilistic forecasts were generated.\n\n(string)\n\nPredictorArn -> (string)\n\nThe ARN of the predictor used to generate the forecast.\n\nDatasetGroupArn -> (string)\n\nThe ARN of the dataset group that provided the data used to train the predictor.\n\nEstimatedTimeRemainingInMinutes -> (long)\n\nThe estimated time remaining in minutes for the forecast job to complete.\n\nStatus -> (string)\n\nThe status of the forecast. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nCREATE_STOPPING , CREATE_STOPPED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nNote\n\nThe Status of the forecast must be ACTIVE before you can query or export the forecast.\n\nMessage -> (string)\n\nIf an error occurred, an informational message about the error.\n\nCreationTime -> (timestamp)\n\nWhen the forecast creation task was created.\n\nLastModificationTime -> (timestamp)\n\nThe last time the resource was modified. The timestamp depends on the status of the job:\n\nCREATE_PENDING - The CreationTime .\n\nCREATE_IN_PROGRESS - The current timestamp.\n\nCREATE_STOPPING - The current timestamp.\n\nCREATE_STOPPED - When the job stopped.\n\nACTIVE or CREATE_FAILED - When the job finished or failed."
    },
    {
      "command_name": "describe-forecast-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/describe-forecast-export-job.html",
      "command_description": "Description\n\nDescribes a forecast export job created using the CreateForecastExportJob operation.\n\nIn addition to listing the properties provided by the user in the CreateForecastExportJob request, this operation lists the following properties:\n\nCreationTime\n\nLastModificationTime\n\nStatus\n\nMessage - If an error occurred, information about the error.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-forecast-export-job\n--forecast-export-job-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--forecast-export-job-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--forecast-export-job-arn (string)\n\nThe Amazon Resource Name (ARN) of the forecast export job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nForecastExportJobArn -> (string)\n\nThe ARN of the forecast export job.\n\nForecastExportJobName -> (string)\n\nThe name of the forecast export job.\n\nForecastArn -> (string)\n\nThe Amazon Resource Name (ARN) of the exported forecast.\n\nDestination -> (structure)\n\nThe path to the Amazon Simple Storage Service (Amazon S3) bucket where the forecast is exported.\n\nS3Config -> (structure)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the bucket.\n\nPath -> (string)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket.\n\nRoleArn -> (string)\n\nThe ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the KMSKeyArn key, the role must allow access to the key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.\n\nMessage -> (string)\n\nIf an error occurred, an informational message about the error.\n\nStatus -> (string)\n\nThe status of the forecast export job. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nCREATE_STOPPING , CREATE_STOPPED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nNote\n\nThe Status of the forecast export job must be ACTIVE before you can access the forecast in your S3 bucket.\n\nCreationTime -> (timestamp)\n\nWhen the forecast export job was created.\n\nLastModificationTime -> (timestamp)\n\nThe last time the resource was modified. The timestamp depends on the status of the job:\n\nCREATE_PENDING - The CreationTime .\n\nCREATE_IN_PROGRESS - The current timestamp.\n\nCREATE_STOPPING - The current timestamp.\n\nCREATE_STOPPED - When the job stopped.\n\nACTIVE or CREATE_FAILED - When the job finished or failed."
    },
    {
      "command_name": "describe-predictor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/describe-predictor.html",
      "command_description": "Description\n\nDescribes a predictor created using the CreatePredictor operation.\n\nIn addition to listing the properties provided in the CreatePredictor request, this operation lists the following properties:\n\nDatasetImportJobArns - The dataset import jobs used to import training data.\n\nAutoMLAlgorithmArns - If AutoML is performed, the algorithms that were evaluated.\n\nCreationTime\n\nLastModificationTime\n\nStatus\n\nMessage - If an error occurred, information about the error.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-predictor\n--predictor-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--predictor-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--predictor-arn (string)\n\nThe Amazon Resource Name (ARN) of the predictor that you want information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPredictorArn -> (string)\n\nThe ARN of the predictor.\n\nPredictorName -> (string)\n\nThe name of the predictor.\n\nAlgorithmArn -> (string)\n\nThe Amazon Resource Name (ARN) of the algorithm used for model training.\n\nForecastHorizon -> (integer)\n\nThe number of time-steps of the forecast. The forecast horizon is also called the prediction length.\n\nForecastTypes -> (list)\n\nThe forecast types used during predictor training. Default value is [\"0.1\",\"0.5\",\"0.9\"]\n\n(string)\n\nPerformAutoML -> (boolean)\n\nWhether the predictor is set to perform AutoML.\n\nAutoMLOverrideStrategy -> (string)\n\nNote\n\nThe LatencyOptimized AutoML override strategy is only available in private beta. Contact AWS Support or your account manager to learn more about access privileges.\n\nThe AutoML strategy used to train the predictor. Unless LatencyOptimized is specified, the AutoML strategy optimizes predictor accuracy.\n\nThis parameter is only valid for predictors trained using AutoML.\n\nPerformHPO -> (boolean)\n\nWhether the predictor is set to perform hyperparameter optimization (HPO).\n\nTrainingParameters -> (map)\n\nThe default training parameters or overrides selected during model training. When running AutoML or choosing HPO with CNN-QR or DeepAR+, the optimized values for the chosen hyperparameters are returned. For more information, see aws-forecast-choosing-recipes .\n\nkey -> (string)\n\nvalue -> (string)\n\nEvaluationParameters -> (structure)\n\nUsed to override the default evaluation parameters of the specified algorithm. Amazon Forecast evaluates a predictor by splitting a dataset into training data and testing data. The evaluation parameters define how to perform the split and the number of iterations.\n\nNumberOfBacktestWindows -> (integer)\n\nThe number of times to split the input data. The default is 1. Valid values are 1 through 5.\n\nBackTestWindowOffset -> (integer)\n\nThe point from the end of the dataset where you want to split the data for model training and testing (evaluation). Specify the value as the number of data points. The default is the value of the forecast horizon. BackTestWindowOffset can be used to mimic a past virtual forecast start date. This value must be greater than or equal to the forecast horizon and less than half of the TARGET_TIME_SERIES dataset length.\n\nForecastHorizon <= BackTestWindowOffset < 1/2 * TARGET_TIME_SERIES dataset length\n\nHPOConfig -> (structure)\n\nThe hyperparameter override values for the algorithm.\n\nParameterRanges -> (structure)\n\nSpecifies the ranges of valid values for the hyperparameters.\n\nCategoricalParameterRanges -> (list)\n\nSpecifies the tunable range for each categorical hyperparameter.\n\n(structure)\n\nSpecifies a categorical hyperparameter and it’s range of tunable values. This object is part of the ParameterRanges object.\n\nName -> (string)\n\nThe name of the categorical hyperparameter to tune.\n\nValues -> (list)\n\nA list of the tunable categories for the hyperparameter.\n\n(string)\n\nContinuousParameterRanges -> (list)\n\nSpecifies the tunable range for each continuous hyperparameter.\n\n(structure)\n\nSpecifies a continuous hyperparameter and it’s range of tunable values. This object is part of the ParameterRanges object.\n\nName -> (string)\n\nThe name of the hyperparameter to tune.\n\nMaxValue -> (double)\n\nThe maximum tunable value of the hyperparameter.\n\nMinValue -> (double)\n\nThe minimum tunable value of the hyperparameter.\n\nScalingType -> (string)\n\nThe scale that hyperparameter tuning uses to search the hyperparameter range. Valid values:\n\nAuto\n\nAmazon Forecast hyperparameter tuning chooses the best scale for the hyperparameter.\n\nLinear\n\nHyperparameter tuning searches the values in the hyperparameter range by using a linear scale.\n\nLogarithmic\n\nHyperparameter tuning searches the values in the hyperparameter range by using a logarithmic scale.\n\nLogarithmic scaling works only for ranges that have values greater than 0.\n\nReverseLogarithmic\n\nhyperparameter tuning searches the values in the hyperparameter range by using a reverse logarithmic scale.\n\nReverse logarithmic scaling works only for ranges that are entirely within the range 0 <= x < 1.0.\n\nFor information about choosing a hyperparameter scale, see Hyperparameter Scaling . One of the following values:\n\nIntegerParameterRanges -> (list)\n\nSpecifies the tunable range for each integer hyperparameter.\n\n(structure)\n\nSpecifies an integer hyperparameter and it’s range of tunable values. This object is part of the ParameterRanges object.\n\nName -> (string)\n\nThe name of the hyperparameter to tune.\n\nMaxValue -> (integer)\n\nThe maximum tunable value of the hyperparameter.\n\nMinValue -> (integer)\n\nThe minimum tunable value of the hyperparameter.\n\nScalingType -> (string)\n\nThe scale that hyperparameter tuning uses to search the hyperparameter range. Valid values:\n\nAuto\n\nAmazon Forecast hyperparameter tuning chooses the best scale for the hyperparameter.\n\nLinear\n\nHyperparameter tuning searches the values in the hyperparameter range by using a linear scale.\n\nLogarithmic\n\nHyperparameter tuning searches the values in the hyperparameter range by using a logarithmic scale.\n\nLogarithmic scaling works only for ranges that have values greater than 0.\n\nReverseLogarithmic\n\nNot supported for IntegerParameterRange .\n\nReverse logarithmic scaling works only for ranges that are entirely within the range 0 <= x < 1.0.\n\nFor information about choosing a hyperparameter scale, see Hyperparameter Scaling . One of the following values:\n\nInputDataConfig -> (structure)\n\nDescribes the dataset group that contains the data to use to train the predictor.\n\nDatasetGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset group.\n\nSupplementaryFeatures -> (list)\n\nAn array of supplementary features. The only supported feature is a holiday calendar.\n\n(structure)\n\nDescribes a supplementary feature of a dataset group. This object is part of the InputDataConfig object. Forecast supports the Weather Index and Holidays built-in featurizations.\n\nWeather Index\n\nThe Amazon Forecast Weather Index is a built-in featurization that incorporates historical and projected weather information into your model. The Weather Index supplements your datasets with over two years of historical weather data and up to 14 days of projected weather data. For more information, see Amazon Forecast Weather Index .\n\nHolidays\n\nHolidays is a built-in featurization that incorporates a feature-engineered dataset of national holiday information into your model. It provides native support for the holiday calendars of 66 countries. To view the holiday calendars, refer to the Jollyday library. For more information, see Holidays Featurization .\n\nName -> (string)\n\nThe name of the feature. Valid values: \"holiday\" and \"weather\" .\n\nValue -> (string)\n\nWeather Index\n\nTo enable the Weather Index, set the value to \"true\"\n\nHolidays\n\nTo enable Holidays, specify a country with one of the following two-letter country codes:\n\n“AL” - ALBANIA\n\n“AR” - ARGENTINA\n\n“AT” - AUSTRIA\n\n“AU” - AUSTRALIA\n\n“BA” - BOSNIA HERZEGOVINA\n\n“BE” - BELGIUM\n\n“BG” - BULGARIA\n\n“BO” - BOLIVIA\n\n“BR” - BRAZIL\n\n“BY” - BELARUS\n\n“CA” - CANADA\n\n“CL” - CHILE\n\n“CO” - COLOMBIA\n\n“CR” - COSTA RICA\n\n“HR” - CROATIA\n\n“CZ” - CZECH REPUBLIC\n\n“DK” - DENMARK\n\n“EC” - ECUADOR\n\n“EE” - ESTONIA\n\n“ET” - ETHIOPIA\n\n“FI” - FINLAND\n\n“FR” - FRANCE\n\n“DE” - GERMANY\n\n“GR” - GREECE\n\n“HU” - HUNGARY\n\n“IS” - ICELAND\n\n“IN” - INDIA\n\n“IE” - IRELAND\n\n“IT” - ITALY\n\n“JP” - JAPAN\n\n“KZ” - KAZAKHSTAN\n\n“KR” - KOREA\n\n“LV” - LATVIA\n\n“LI” - LIECHTENSTEIN\n\n“LT” - LITHUANIA\n\n“LU” - LUXEMBOURG\n\n“MK” - MACEDONIA\n\n“MT” - MALTA\n\n“MX” - MEXICO\n\n“MD” - MOLDOVA\n\n“ME” - MONTENEGRO\n\n“NL” - NETHERLANDS\n\n“NZ” - NEW ZEALAND\n\n“NI” - NICARAGUA\n\n“NG” - NIGERIA\n\n“NO” - NORWAY\n\n“PA” - PANAMA\n\n“PY” - PARAGUAY\n\n“PE” - PERU\n\n“PL” - POLAND\n\n“PT” - PORTUGAL\n\n“RO” - ROMANIA\n\n“RU” - RUSSIA\n\n“RS” - SERBIA\n\n“SK” - SLOVAKIA\n\n“SI” - SLOVENIA\n\n“ZA” - SOUTH AFRICA\n\n“ES” - SPAIN\n\n“SE” - SWEDEN\n\n“CH” - SWITZERLAND\n\n“UA” - UKRAINE\n\n“AE” - UNITED ARAB EMIRATES\n\n“US” - UNITED STATES\n\n“UK” - UNITED KINGDOM\n\n“UY” - URUGUAY\n\n“VE” - VENEZUELA\n\nFeaturizationConfig -> (structure)\n\nThe featurization configuration.\n\nForecastFrequency -> (string)\n\nThe frequency of predictions in a forecast.\n\nValid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes), 15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For example, “Y” indicates every year and “5min” indicates every five minutes.\n\nThe frequency must be greater than or equal to the TARGET_TIME_SERIES dataset frequency.\n\nWhen a RELATED_TIME_SERIES dataset is provided, the frequency must be equal to the RELATED_TIME_SERIES dataset frequency.\n\nForecastDimensions -> (list)\n\nAn array of dimension (field) names that specify how to group the generated forecast.\n\nFor example, suppose that you are generating a forecast for item sales across all of your stores, and your dataset contains a store_id field. If you want the sales forecast for each item by store, you would specify store_id as the dimension.\n\nAll forecast dimensions specified in the TARGET_TIME_SERIES dataset don’t need to be specified in the CreatePredictor request. All forecast dimensions specified in the RELATED_TIME_SERIES dataset must be specified in the CreatePredictor request.\n\n(string)\n\nFeaturizations -> (list)\n\nAn array of featurization (transformation) information for the fields of a dataset.\n\n(structure)\n\nProvides featurization (transformation) information for a dataset field. This object is part of the FeaturizationConfig object.\n\nFor example:\n\n{\n\n\"AttributeName\": \"demand\",\n\nFeaturizationPipeline [ {\n\n\"FeaturizationMethodName\": \"filling\",\n\n\"FeaturizationMethodParameters\": {\"aggregation\": \"avg\", \"backfill\": \"nan\"}\n\n} ]\n\n}\n\nAttributeName -> (string)\n\nThe name of the schema attribute that specifies the data field to be featurized. Amazon Forecast supports the target field of the TARGET_TIME_SERIES and the RELATED_TIME_SERIES datasets. For example, for the RETAIL domain, the target is demand , and for the CUSTOM domain, the target is target_value . For more information, see howitworks-missing-values .\n\nFeaturizationPipeline -> (list)\n\nAn array of one FeaturizationMethod object that specifies the feature transformation method.\n\n(structure)\n\nProvides information about the method that featurizes (transforms) a dataset field. The method is part of the FeaturizationPipeline of the Featurization object.\n\nThe following is an example of how you specify a FeaturizationMethod object.\n\n{\n\n\"FeaturizationMethodName\": \"filling\",\n\n\"FeaturizationMethodParameters\": {\"aggregation\": \"sum\", \"middlefill\": \"zero\", \"backfill\": \"zero\"}\n\n}\n\nFeaturizationMethodName -> (string)\n\nThe name of the method. The “filling” method is the only supported method.\n\nFeaturizationMethodParameters -> (map)\n\nThe method parameters (key-value pairs), which are a map of override parameters. Specify these parameters to override the default values. Related Time Series attributes do not accept aggregation parameters.\n\nThe following list shows the parameters and their valid values for the “filling” featurization method for a Target Time Series dataset. Bold signifies the default value.\n\naggregation : sum , avg , first , min , max\n\nfrontfill : none\n\nmiddlefill : zero , nan (not a number), value , median , mean , min , max\n\nbackfill : zero , nan , value , median , mean , min , max\n\nThe following list shows the parameters and their valid values for a Related Time Series featurization method (there are no defaults):\n\nmiddlefill : zero , value , median , mean , min , max\n\nbackfill : zero , value , median , mean , min , max\n\nfuturefill : zero , value , median , mean , min , max\n\nTo set a filling method to a specific value, set the fill parameter to value and define the value in a corresponding _value parameter. For example, to set backfilling to a value of 2, include the following: \"backfill\": \"value\" and \"backfill_value\":\"2\" .\n\nkey -> (string)\n\nvalue -> (string)\n\nEncryptionConfig -> (structure)\n\nAn AWS Key Management Service (KMS) key and the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.\n\nRoleArn -> (string)\n\nThe ARN of the IAM role that Amazon Forecast can assume to access the AWS KMS key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of the KMS key.\n\nPredictorExecutionDetails -> (structure)\n\nDetails on the the status and results of the backtests performed to evaluate the accuracy of the predictor. You specify the number of backtests to perform when you call the operation.\n\nPredictorExecutions -> (list)\n\nAn array of the backtests performed to evaluate the accuracy of the predictor against a particular algorithm. The NumberOfBacktestWindows from the object determines the number of windows in the array.\n\n(structure)\n\nThe algorithm used to perform a backtest and the status of those tests.\n\nAlgorithmArn -> (string)\n\nThe ARN of the algorithm used to test the predictor.\n\nTestWindows -> (list)\n\nAn array of test windows used to evaluate the algorithm. The NumberOfBacktestWindows from the object determines the number of windows in the array.\n\n(structure)\n\nThe status, start time, and end time of a backtest, as well as a failure reason if applicable.\n\nTestWindowStart -> (timestamp)\n\nThe time at which the test began.\n\nTestWindowEnd -> (timestamp)\n\nThe time at which the test ended.\n\nStatus -> (string)\n\nThe status of the test. Possible status values are:\n\nACTIVE\n\nCREATE_IN_PROGRESS\n\nCREATE_FAILED\n\nMessage -> (string)\n\nIf the test failed, the reason why it failed.\n\nEstimatedTimeRemainingInMinutes -> (long)\n\nThe estimated time remaining in minutes for the predictor training job to complete.\n\nDatasetImportJobArns -> (list)\n\nAn array of the ARNs of the dataset import jobs used to import training data for the predictor.\n\n(string)\n\nAutoMLAlgorithmArns -> (list)\n\nWhen PerformAutoML is specified, the ARN of the chosen algorithm.\n\n(string)\n\nStatus -> (string)\n\nThe status of the predictor. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nCREATE_STOPPING , CREATE_STOPPED\n\nNote\n\nThe Status of the predictor must be ACTIVE before you can use the predictor to create a forecast.\n\nMessage -> (string)\n\nIf an error occurred, an informational message about the error.\n\nCreationTime -> (timestamp)\n\nWhen the model training task was created.\n\nLastModificationTime -> (timestamp)\n\nThe last time the resource was modified. The timestamp depends on the status of the job:\n\nCREATE_PENDING - The CreationTime .\n\nCREATE_IN_PROGRESS - The current timestamp.\n\nCREATE_STOPPING - The current timestamp.\n\nCREATE_STOPPED - When the job stopped.\n\nACTIVE or CREATE_FAILED - When the job finished or failed.\n\nOptimizationMetric -> (string)\n\nThe accuracy metric used to optimize the predictor."
    },
    {
      "command_name": "describe-predictor-backtest-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/describe-predictor-backtest-export-job.html",
      "command_description": "Description\n\nDescribes a predictor backtest export job created using the CreatePredictorBacktestExportJob operation.\n\nIn addition to listing the properties provided by the user in the CreatePredictorBacktestExportJob request, this operation lists the following properties:\n\nCreationTime\n\nLastModificationTime\n\nStatus\n\nMessage (if an error occurred)\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-predictor-backtest-export-job\n--predictor-backtest-export-job-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--predictor-backtest-export-job-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--predictor-backtest-export-job-arn (string)\n\nThe Amazon Resource Name (ARN) of the predictor backtest export job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPredictorBacktestExportJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the predictor backtest export job.\n\nPredictorBacktestExportJobName -> (string)\n\nThe name of the predictor backtest export job.\n\nPredictorArn -> (string)\n\nThe Amazon Resource Name (ARN) of the predictor.\n\nDestination -> (structure)\n\nThe destination for an export job. Provide an S3 path, an AWS Identity and Access Management (IAM) role that allows Amazon Forecast to access the location, and an AWS Key Management Service (KMS) key (optional).\n\nS3Config -> (structure)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the bucket.\n\nPath -> (string)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket.\n\nRoleArn -> (string)\n\nThe ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the KMSKeyArn key, the role must allow access to the key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.\n\nMessage -> (string)\n\nInformation about any errors that may have occurred during the backtest export.\n\nStatus -> (string)\n\nThe status of the predictor backtest export job. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nCREATE_STOPPING , CREATE_STOPPED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nCreationTime -> (timestamp)\n\nWhen the predictor backtest export job was created.\n\nLastModificationTime -> (timestamp)\n\nThe last time the resource was modified. The timestamp depends on the status of the job:\n\nCREATE_PENDING - The CreationTime .\n\nCREATE_IN_PROGRESS - The current timestamp.\n\nCREATE_STOPPING - The current timestamp.\n\nCREATE_STOPPED - When the job stopped.\n\nACTIVE or CREATE_FAILED - When the job finished or failed."
    },
    {
      "command_name": "get-accuracy-metrics",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/get-accuracy-metrics.html",
      "command_description": "Description\n\nProvides metrics on the accuracy of the models that were trained by the CreatePredictor operation. Use metrics to see how well the model performed and to decide whether to use the predictor to generate a forecast. For more information, see Predictor Metrics .\n\nThis operation generates metrics for each backtest window that was evaluated. The number of backtest windows (NumberOfBacktestWindows ) is specified using the EvaluationParameters object, which is optionally included in the CreatePredictor request. If NumberOfBacktestWindows isn’t specified, the number defaults to one.\n\nThe parameters of the filling method determine which items contribute to the metrics. If you want all items to contribute, specify zero . If you want only those items that have complete data in the range being evaluated to contribute, specify nan . For more information, see FeaturizationMethod .\n\nNote\n\nBefore you can get accuracy metrics, the Status of the predictor must be ACTIVE , signifying that training has completed. To get the status, use the DescribePredictor operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-accuracy-metrics\n--predictor-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--predictor-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--predictor-arn (string)\n\nThe Amazon Resource Name (ARN) of the predictor to get metrics for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPredictorEvaluationResults -> (list)\n\nAn array of results from evaluating the predictor.\n\n(structure)\n\nThe results of evaluating an algorithm. Returned as part of the GetAccuracyMetrics response.\n\nAlgorithmArn -> (string)\n\nThe Amazon Resource Name (ARN) of the algorithm that was evaluated.\n\nTestWindows -> (list)\n\nThe array of test windows used for evaluating the algorithm. The NumberOfBacktestWindows from the EvaluationParameters object determines the number of windows in the array.\n\n(structure)\n\nThe metrics for a time range within the evaluation portion of a dataset. This object is part of the EvaluationResult object.\n\nThe TestWindowStart and TestWindowEnd parameters are determined by the BackTestWindowOffset parameter of the EvaluationParameters object.\n\nTestWindowStart -> (timestamp)\n\nThe timestamp that defines the start of the window.\n\nTestWindowEnd -> (timestamp)\n\nThe timestamp that defines the end of the window.\n\nItemCount -> (integer)\n\nThe number of data points within the window.\n\nEvaluationType -> (string)\n\nThe type of evaluation.\n\nSUMMARY - The average metrics across all windows.\n\nCOMPUTED - The metrics for the specified window.\n\nMetrics -> (structure)\n\nProvides metrics used to evaluate the performance of a predictor.\n\nRMSE -> (double)\n\nThe root-mean-square error (RMSE).\n\nWeightedQuantileLosses -> (list)\n\nAn array of weighted quantile losses. Quantiles divide a probability distribution into regions of equal probability. The distribution in this case is the loss function.\n\n(structure)\n\nThe weighted loss value for a quantile. This object is part of the Metrics object.\n\nQuantile -> (double)\n\nThe quantile. Quantiles divide a probability distribution into regions of equal probability. For example, if the distribution was divided into 5 regions of equal probability, the quantiles would be 0.2, 0.4, 0.6, and 0.8.\n\nLossValue -> (double)\n\nThe difference between the predicted value and the actual value over the quantile, weighted (normalized) by dividing by the sum over all quantiles.\n\nErrorMetrics -> (list)\n\nProvides detailed error metrics for each forecast type. Metrics include root-mean square-error (RMSE), mean absolute percentage error (MAPE), mean absolute scaled error (MASE), and weighted average percentage error (WAPE).\n\n(structure)\n\nProvides detailed error metrics to evaluate the performance of a predictor. This object is part of the Metrics object.\n\nForecastType -> (string)\n\nThe Forecast type used to compute WAPE, MAPE, MASE, and RMSE.\n\nWAPE -> (double)\n\nThe weighted absolute percentage error (WAPE).\n\nRMSE -> (double)\n\nThe root-mean-square error (RMSE).\n\nMASE -> (double)\n\nThe Mean Absolute Scaled Error (MASE)\n\nMAPE -> (double)\n\nThe Mean Absolute Percentage Error (MAPE)\n\nAverageWeightedQuantileLoss -> (double)\n\nThe average value of all weighted quantile losses.\n\nAutoMLOverrideStrategy -> (string)\n\nNote\n\nThe LatencyOptimized AutoML override strategy is only available in private beta. Contact AWS Support or your account manager to learn more about access privileges.\n\nThe AutoML strategy used to train the predictor. Unless LatencyOptimized is specified, the AutoML strategy optimizes predictor accuracy.\n\nThis parameter is only valid for predictors trained using AutoML.\n\nOptimizationMetric -> (string)\n\nThe accuracy metric used to optimize the predictor."
    },
    {
      "command_name": "list-dataset-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/list-dataset-groups.html",
      "command_description": "Description\n\nReturns a list of dataset groups created using the CreateDatasetGroup operation. For each dataset group, this operation returns a summary of its properties, including its Amazon Resource Name (ARN). You can retrieve the complete set of properties by using the dataset group ARN with the DescribeDatasetGroup operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-dataset-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DatasetGroups",
      "command_synopsis": "Synopsis\n  list-dataset-groups\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatasetGroups -> (list)\n\nAn array of objects that summarize each dataset group’s properties.\n\n(structure)\n\nProvides a summary of the dataset group properties used in the ListDatasetGroups operation. To get the complete set of properties, call the DescribeDatasetGroup operation, and provide the DatasetGroupArn .\n\nDatasetGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset group.\n\nDatasetGroupName -> (string)\n\nThe name of the dataset group.\n\nCreationTime -> (timestamp)\n\nWhen the dataset group was created.\n\nLastModificationTime -> (timestamp)\n\nWhen the dataset group was created or last updated from a call to the UpdateDatasetGroup operation. While the dataset group is being updated, LastModificationTime is the current time of the ListDatasetGroups call.\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request."
    },
    {
      "command_name": "list-dataset-import-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/list-dataset-import-jobs.html",
      "command_description": "Description\n\nReturns a list of dataset import jobs created using the CreateDatasetImportJob operation. For each import job, this operation returns a summary of its properties, including its Amazon Resource Name (ARN). You can retrieve the complete set of properties by using the ARN with the DescribeDatasetImportJob operation. You can filter the list by providing an array of Filter objects.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-dataset-import-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DatasetImportJobs",
      "command_synopsis": "Synopsis\n  list-dataset-import-jobs\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn array of filters. For each filter, you provide a condition and a match statement. The condition is either IS or IS_NOT , which specifies whether to include or exclude the datasets that match the statement from the list, respectively. The match statement consists of a key and a value.\n\nFilter properties\n\nCondition - The condition to apply. Valid values are IS and IS_NOT . To include the datasets that match the statement, specify IS . To exclude matching datasets, specify IS_NOT .\n\nKey - The name of the parameter to filter on. Valid values are DatasetArn and Status .\n\nValue - The value to match.\n\nFor example, to list all dataset import jobs whose status is ACTIVE, you specify the following filter:\n\n\"Filters\": [ { \"Condition\": \"IS\", \"Key\": \"Status\", \"Value\": \"ACTIVE\" } ]\n\n(structure)\n\nDescribes a filter for choosing a subset of objects. Each filter consists of a condition and a match statement. The condition is either IS or IS_NOT , which specifies whether to include or exclude the objects that match the statement, respectively. The match statement consists of a key and a value.\n\nKey -> (string)\n\nThe name of the parameter to filter on.\n\nValue -> (string)\n\nThe value to match.\n\nCondition -> (string)\n\nThe condition to apply. To include the objects that match the statement, specify IS . To exclude matching objects, specify IS_NOT .\n\nShorthand Syntax:\n\nKey=string,Value=string,Condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Condition\": \"IS\"|\"IS_NOT\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatasetImportJobs -> (list)\n\nAn array of objects that summarize each dataset import job’s properties.\n\n(structure)\n\nProvides a summary of the dataset import job properties used in the ListDatasetImportJobs operation. To get the complete set of properties, call the DescribeDatasetImportJob operation, and provide the DatasetImportJobArn .\n\nDatasetImportJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset import job.\n\nDatasetImportJobName -> (string)\n\nThe name of the dataset import job.\n\nDataSource -> (structure)\n\nThe location of the training data to import and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data. The training data must be stored in an Amazon S3 bucket.\n\nIf encryption is used, DataSource includes an AWS Key Management Service (KMS) key.\n\nS3Config -> (structure)\n\nThe path to the training data stored in an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the data.\n\nPath -> (string)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket.\n\nRoleArn -> (string)\n\nThe ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the KMSKeyArn key, the role must allow access to the key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.\n\nStatus -> (string)\n\nThe status of the dataset import job. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nCREATE_STOPPING , CREATE_STOPPED\n\nMessage -> (string)\n\nIf an error occurred, an informational message about the error.\n\nCreationTime -> (timestamp)\n\nWhen the dataset import job was created.\n\nLastModificationTime -> (timestamp)\n\nThe last time the resource was modified. The timestamp depends on the status of the job:\n\nCREATE_PENDING - The CreationTime .\n\nCREATE_IN_PROGRESS - The current timestamp.\n\nCREATE_STOPPING - The current timestamp.\n\nCREATE_STOPPED - When the job stopped.\n\nACTIVE or CREATE_FAILED - When the job finished or failed.\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request."
    },
    {
      "command_name": "list-datasets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/list-datasets.html",
      "command_description": "Description\n\nReturns a list of datasets created using the CreateDataset operation. For each dataset, a summary of its properties, including its Amazon Resource Name (ARN), is returned. To retrieve the complete set of properties, use the ARN with the DescribeDataset operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-datasets is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Datasets",
      "command_synopsis": "Synopsis\n  list-datasets\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatasets -> (list)\n\nAn array of objects that summarize each dataset’s properties.\n\n(structure)\n\nProvides a summary of the dataset properties used in the ListDatasets operation. To get the complete set of properties, call the DescribeDataset operation, and provide the DatasetArn .\n\nDatasetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset.\n\nDatasetName -> (string)\n\nThe name of the dataset.\n\nDatasetType -> (string)\n\nThe dataset type.\n\nDomain -> (string)\n\nThe domain associated with the dataset.\n\nCreationTime -> (timestamp)\n\nWhen the dataset was created.\n\nLastModificationTime -> (timestamp)\n\nWhen you create a dataset, LastModificationTime is the same as CreationTime . While data is being imported to the dataset, LastModificationTime is the current time of the ListDatasets call. After a CreateDatasetImportJob operation has finished, LastModificationTime is when the import job completed or failed.\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request."
    },
    {
      "command_name": "list-forecast-export-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/list-forecast-export-jobs.html",
      "command_description": "Description\n\nReturns a list of forecast export jobs created using the CreateForecastExportJob operation. For each forecast export job, this operation returns a summary of its properties, including its Amazon Resource Name (ARN). To retrieve the complete set of properties, use the ARN with the DescribeForecastExportJob operation. You can filter the list using an array of Filter objects.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-forecast-export-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ForecastExportJobs",
      "command_synopsis": "Synopsis\n  list-forecast-export-jobs\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn array of filters. For each filter, you provide a condition and a match statement. The condition is either IS or IS_NOT , which specifies whether to include or exclude the forecast export jobs that match the statement from the list, respectively. The match statement consists of a key and a value.\n\nFilter properties\n\nCondition - The condition to apply. Valid values are IS and IS_NOT . To include the forecast export jobs that match the statement, specify IS . To exclude matching forecast export jobs, specify IS_NOT .\n\nKey - The name of the parameter to filter on. Valid values are ForecastArn and Status .\n\nValue - The value to match.\n\nFor example, to list all jobs that export a forecast named electricityforecast , specify the following filter:\n\n\"Filters\": [ { \"Condition\": \"IS\", \"Key\": \"ForecastArn\", \"Value\": \"arn:aws:forecast:us-west-2:<acct-id>:forecast/electricityforecast\" } ]\n\n(structure)\n\nDescribes a filter for choosing a subset of objects. Each filter consists of a condition and a match statement. The condition is either IS or IS_NOT , which specifies whether to include or exclude the objects that match the statement, respectively. The match statement consists of a key and a value.\n\nKey -> (string)\n\nThe name of the parameter to filter on.\n\nValue -> (string)\n\nThe value to match.\n\nCondition -> (string)\n\nThe condition to apply. To include the objects that match the statement, specify IS . To exclude matching objects, specify IS_NOT .\n\nShorthand Syntax:\n\nKey=string,Value=string,Condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Condition\": \"IS\"|\"IS_NOT\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nForecastExportJobs -> (list)\n\nAn array of objects that summarize each export job’s properties.\n\n(structure)\n\nProvides a summary of the forecast export job properties used in the ListForecastExportJobs operation. To get the complete set of properties, call the DescribeForecastExportJob operation, and provide the listed ForecastExportJobArn .\n\nForecastExportJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the forecast export job.\n\nForecastExportJobName -> (string)\n\nThe name of the forecast export job.\n\nDestination -> (structure)\n\nThe path to the Amazon Simple Storage Service (Amazon S3) bucket where the forecast is exported.\n\nS3Config -> (structure)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the bucket.\n\nPath -> (string)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket.\n\nRoleArn -> (string)\n\nThe ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the KMSKeyArn key, the role must allow access to the key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.\n\nStatus -> (string)\n\nThe status of the forecast export job. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nCREATE_STOPPING , CREATE_STOPPED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nNote\n\nThe Status of the forecast export job must be ACTIVE before you can access the forecast in your S3 bucket.\n\nMessage -> (string)\n\nIf an error occurred, an informational message about the error.\n\nCreationTime -> (timestamp)\n\nWhen the forecast export job was created.\n\nLastModificationTime -> (timestamp)\n\nThe last time the resource was modified. The timestamp depends on the status of the job:\n\nCREATE_PENDING - The CreationTime .\n\nCREATE_IN_PROGRESS - The current timestamp.\n\nCREATE_STOPPING - The current timestamp.\n\nCREATE_STOPPED - When the job stopped.\n\nACTIVE or CREATE_FAILED - When the job finished or failed.\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request."
    },
    {
      "command_name": "list-forecasts",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/list-forecasts.html",
      "command_description": "Description\n\nReturns a list of forecasts created using the CreateForecast operation. For each forecast, this operation returns a summary of its properties, including its Amazon Resource Name (ARN). To retrieve the complete set of properties, specify the ARN with the DescribeForecast operation. You can filter the list using an array of Filter objects.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-forecasts is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Forecasts",
      "command_synopsis": "Synopsis\n  list-forecasts\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn array of filters. For each filter, you provide a condition and a match statement. The condition is either IS or IS_NOT , which specifies whether to include or exclude the forecasts that match the statement from the list, respectively. The match statement consists of a key and a value.\n\nFilter properties\n\nCondition - The condition to apply. Valid values are IS and IS_NOT . To include the forecasts that match the statement, specify IS . To exclude matching forecasts, specify IS_NOT .\n\nKey - The name of the parameter to filter on. Valid values are DatasetGroupArn , PredictorArn , and Status .\n\nValue - The value to match.\n\nFor example, to list all forecasts whose status is not ACTIVE, you would specify:\n\n\"Filters\": [ { \"Condition\": \"IS_NOT\", \"Key\": \"Status\", \"Value\": \"ACTIVE\" } ]\n\n(structure)\n\nDescribes a filter for choosing a subset of objects. Each filter consists of a condition and a match statement. The condition is either IS or IS_NOT , which specifies whether to include or exclude the objects that match the statement, respectively. The match statement consists of a key and a value.\n\nKey -> (string)\n\nThe name of the parameter to filter on.\n\nValue -> (string)\n\nThe value to match.\n\nCondition -> (string)\n\nThe condition to apply. To include the objects that match the statement, specify IS . To exclude matching objects, specify IS_NOT .\n\nShorthand Syntax:\n\nKey=string,Value=string,Condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Condition\": \"IS\"|\"IS_NOT\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nForecasts -> (list)\n\nAn array of objects that summarize each forecast’s properties.\n\n(structure)\n\nProvides a summary of the forecast properties used in the ListForecasts operation. To get the complete set of properties, call the DescribeForecast operation, and provide the ForecastArn that is listed in the summary.\n\nForecastArn -> (string)\n\nThe ARN of the forecast.\n\nForecastName -> (string)\n\nThe name of the forecast.\n\nPredictorArn -> (string)\n\nThe ARN of the predictor used to generate the forecast.\n\nDatasetGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset group that provided the data used to train the predictor.\n\nStatus -> (string)\n\nThe status of the forecast. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nCREATE_STOPPING , CREATE_STOPPED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nNote\n\nThe Status of the forecast must be ACTIVE before you can query or export the forecast.\n\nMessage -> (string)\n\nIf an error occurred, an informational message about the error.\n\nCreationTime -> (timestamp)\n\nWhen the forecast creation task was created.\n\nLastModificationTime -> (timestamp)\n\nThe last time the resource was modified. The timestamp depends on the status of the job:\n\nCREATE_PENDING - The CreationTime .\n\nCREATE_IN_PROGRESS - The current timestamp.\n\nCREATE_STOPPING - The current timestamp.\n\nCREATE_STOPPED - When the job stopped.\n\nACTIVE or CREATE_FAILED - When the job finished or failed.\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request."
    },
    {
      "command_name": "list-predictor-backtest-export-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/list-predictor-backtest-export-jobs.html",
      "command_description": "Description\n\nReturns a list of predictor backtest export jobs created using the CreatePredictorBacktestExportJob operation. This operation returns a summary for each backtest export job. You can filter the list using an array of Filter objects.\n\nTo retrieve the complete set of properties for a particular backtest export job, use the ARN with the DescribePredictorBacktestExportJob operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-predictor-backtest-export-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: PredictorBacktestExportJobs",
      "command_synopsis": "Synopsis\n  list-predictor-backtest-export-jobs\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn array of filters. For each filter, provide a condition and a match statement. The condition is either IS or IS_NOT , which specifies whether to include or exclude the predictor backtest export jobs that match the statement from the list. The match statement consists of a key and a value.\n\nFilter properties\n\nCondition - The condition to apply. Valid values are IS and IS_NOT . To include the predictor backtest export jobs that match the statement, specify IS . To exclude matching predictor backtest export jobs, specify IS_NOT .\n\nKey - The name of the parameter to filter on. Valid values are PredictorArn and Status .\n\nValue - The value to match.\n\n(structure)\n\nDescribes a filter for choosing a subset of objects. Each filter consists of a condition and a match statement. The condition is either IS or IS_NOT , which specifies whether to include or exclude the objects that match the statement, respectively. The match statement consists of a key and a value.\n\nKey -> (string)\n\nThe name of the parameter to filter on.\n\nValue -> (string)\n\nThe value to match.\n\nCondition -> (string)\n\nThe condition to apply. To include the objects that match the statement, specify IS . To exclude matching objects, specify IS_NOT .\n\nShorthand Syntax:\n\nKey=string,Value=string,Condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Condition\": \"IS\"|\"IS_NOT\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPredictorBacktestExportJobs -> (list)\n\nAn array of objects that summarize the properties of each predictor backtest export job.\n\n(structure)\n\nProvides a summary of the predictor backtest export job properties used in the ListPredictorBacktestExportJobs operation. To get a complete set of properties, call the DescribePredictorBacktestExportJob operation, and provide the listed PredictorBacktestExportJobArn .\n\nPredictorBacktestExportJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the predictor backtest export job.\n\nPredictorBacktestExportJobName -> (string)\n\nThe name of the predictor backtest export job.\n\nDestination -> (structure)\n\nThe destination for an export job. Provide an S3 path, an AWS Identity and Access Management (IAM) role that allows Amazon Forecast to access the location, and an AWS Key Management Service (KMS) key (optional).\n\nS3Config -> (structure)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the bucket.\n\nPath -> (string)\n\nThe path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket.\n\nRoleArn -> (string)\n\nThe ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the KMSKeyArn key, the role must allow access to the key.\n\nPassing a role across AWS accounts is not allowed. If you pass a role that isn’t in your account, you get an InvalidInputException error.\n\nKMSKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.\n\nStatus -> (string)\n\nThe status of the predictor backtest export job. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nCREATE_STOPPING , CREATE_STOPPED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nMessage -> (string)\n\nInformation about any errors that may have occurred during the backtest export.\n\nCreationTime -> (timestamp)\n\nWhen the predictor backtest export job was created.\n\nLastModificationTime -> (timestamp)\n\nThe last time the resource was modified. The timestamp depends on the status of the job:\n\nCREATE_PENDING - The CreationTime .\n\nCREATE_IN_PROGRESS - The current timestamp.\n\nCREATE_STOPPING - The current timestamp.\n\nCREATE_STOPPED - When the job stopped.\n\nACTIVE or CREATE_FAILED - When the job finished or failed.\n\nNextToken -> (string)\n\nReturns this token if the response is truncated. To retrieve the next set of results, use the token in the next request."
    },
    {
      "command_name": "list-predictors",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/list-predictors.html",
      "command_description": "Description\n\nReturns a list of predictors created using the CreatePredictor operation. For each predictor, this operation returns a summary of its properties, including its Amazon Resource Name (ARN). You can retrieve the complete set of properties by using the ARN with the DescribePredictor operation. You can filter the list using an array of Filter objects.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-predictors is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Predictors",
      "command_synopsis": "Synopsis\n  list-predictors\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn array of filters. For each filter, you provide a condition and a match statement. The condition is either IS or IS_NOT , which specifies whether to include or exclude the predictors that match the statement from the list, respectively. The match statement consists of a key and a value.\n\nFilter properties\n\nCondition - The condition to apply. Valid values are IS and IS_NOT . To include the predictors that match the statement, specify IS . To exclude matching predictors, specify IS_NOT .\n\nKey - The name of the parameter to filter on. Valid values are DatasetGroupArn and Status .\n\nValue - The value to match.\n\nFor example, to list all predictors whose status is ACTIVE, you would specify:\n\n\"Filters\": [ { \"Condition\": \"IS\", \"Key\": \"Status\", \"Value\": \"ACTIVE\" } ]\n\n(structure)\n\nDescribes a filter for choosing a subset of objects. Each filter consists of a condition and a match statement. The condition is either IS or IS_NOT , which specifies whether to include or exclude the objects that match the statement, respectively. The match statement consists of a key and a value.\n\nKey -> (string)\n\nThe name of the parameter to filter on.\n\nValue -> (string)\n\nThe value to match.\n\nCondition -> (string)\n\nThe condition to apply. To include the objects that match the statement, specify IS . To exclude matching objects, specify IS_NOT .\n\nShorthand Syntax:\n\nKey=string,Value=string,Condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Condition\": \"IS\"|\"IS_NOT\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPredictors -> (list)\n\nAn array of objects that summarize each predictor’s properties.\n\n(structure)\n\nProvides a summary of the predictor properties that are used in the ListPredictors operation. To get the complete set of properties, call the DescribePredictor operation, and provide the listed PredictorArn .\n\nPredictorArn -> (string)\n\nThe ARN of the predictor.\n\nPredictorName -> (string)\n\nThe name of the predictor.\n\nDatasetGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dataset group that contains the data used to train the predictor.\n\nStatus -> (string)\n\nThe status of the predictor. States include:\n\nACTIVE\n\nCREATE_PENDING , CREATE_IN_PROGRESS , CREATE_FAILED\n\nDELETE_PENDING , DELETE_IN_PROGRESS , DELETE_FAILED\n\nCREATE_STOPPING , CREATE_STOPPED\n\nNote\n\nThe Status of the predictor must be ACTIVE before you can use the predictor to create a forecast.\n\nMessage -> (string)\n\nIf an error occurred, an informational message about the error.\n\nCreationTime -> (timestamp)\n\nWhen the model training task was created.\n\nLastModificationTime -> (timestamp)\n\nThe last time the resource was modified. The timestamp depends on the status of the job:\n\nCREATE_PENDING - The CreationTime .\n\nCREATE_IN_PROGRESS - The current timestamp.\n\nCREATE_STOPPING - The current timestamp.\n\nCREATE_STOPPED - When the job stopped.\n\nACTIVE or CREATE_FAILED - When the job finished or failed.\n\nNextToken -> (string)\n\nIf the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/list-tags-for-resource.html",
      "command_description": "Description\n\nLists the tags for an Amazon Forecast resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resources are Forecast dataset groups, datasets, dataset import jobs, predictors, forecasts, and forecast export jobs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe tags for the resource.\n\n(structure)\n\nThe optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key)."
    },
    {
      "command_name": "stop-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/stop-resource.html",
      "command_description": "Description\n\nStops a resource.\n\nThe resource undergoes the following states: CREATE_STOPPING and CREATE_STOPPED . You cannot resume a resource once it has been stopped.\n\nThis operation can be applied to the following resources (and their corresponding child resources):\n\nDataset Import Job\n\nPredictor Job\n\nForecast Job\n\nForecast Export Job\n\nPredictor Backtest Export Job\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the resource to stop. The supported ARNs are DatasetImportJobArn , PredictorArn , PredictorBacktestExportJobArn , ForecastArn , and ForecastExportJobArn .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/tag-resource.html",
      "command_description": "Description\n\nAssociates the specified tags to a resource with the specified resourceArn . If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are also deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resources are Forecast dataset groups, datasets, dataset import jobs, predictors, forecasts, and forecast export jobs.\n\n--tags (list)\n\nThe tags to add to the resource. A tag is an array of key-value pairs.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\n(structure)\n\nThe optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per resource - 50.\n\nFor each resource, each tag key must be unique, and each tag key can have only one value.\n\nMaximum key length - 128 Unicode characters in UTF-8.\n\nMaximum value length - 256 Unicode characters in UTF-8.\n\nIf your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\n\nTag keys and values are case sensitive.\n\nDo not use aws: , AWS: , or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nThe optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key).\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/untag-resource.html",
      "command_description": "Description\n\nDeletes the specified tags from a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resources are Forecast dataset groups, datasets, dataset import jobs, predictors, forecasts, and forecast exports.\n\n--tag-keys (list)\n\nThe keys of the tags to be removed.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-dataset-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/forecast/update-dataset-group.html",
      "command_description": "Description\n\nReplaces the datasets in a dataset group with the specified datasets.\n\nNote\n\nThe Status of the dataset group must be ACTIVE before you can use the dataset group to create a predictor. Use the DescribeDatasetGroup operation to get the status.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-dataset-group\n--dataset-group-arn <value>\n--dataset-arns <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-group-arn <value>",
        "--dataset-arns <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-group-arn (string)\n\nThe ARN of the dataset group.\n\n--dataset-arns (list)\n\nAn array of the Amazon Resource Names (ARNs) of the datasets to add to the dataset group.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    }
  ],
  "service_description": "Description\n\nProvides APIs for creating and managing Amazon Forecast resources."
}